; SPIR-V
; Version: 1.3
; Generator: Google spiregg; 0
; Bound: 13576
; Schema: 0
               OpCapability Shader
               OpCapability SampledBuffer
               OpCapability StorageImageReadWithoutFormat
               OpExtension "SPV_GOOGLE_hlsl_functionality1"
               OpExtension "SPV_GOOGLE_user_type"
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %MainPS "MainPS" %in_var_TEXCOORD10_centroid %in_var_TEXCOORD11_centroid %in_var_PRIMITIVE_ID %in_var_TEXCOORD9 %gl_FragCoord %gl_FrontFacing %out_var_SV_Target0 %out_var_SV_Target1 %out_var_SV_Target2 %out_var_SV_Target3 %out_var_SV_Target4 %out_var_SV_Target5 %out_var_SV_Target6
               OpExecutionMode %MainPS OriginUpperLeft
               OpExecutionMode %MainPS EarlyFragmentTests

               ; Debug Information
               OpSource HLSL 620
               OpName %type_View "type.View"  ; id %16
               OpMemberName %type_View 0 "View_TranslatedWorldToView"
               OpMemberName %type_View 1 "View_ViewToClip"
               OpMemberName %type_View 2 "View_SVPositionToTranslatedWorld"
               OpMemberName %type_View 3 "View_ViewTilePosition"
               OpMemberName %type_View 4 "View_ViewForward"
               OpMemberName %type_View 5 "View_InvDeviceZToWorldZTransform"
               OpMemberName %type_View 6 "View_ScreenPositionScaleBias"
               OpMemberName %type_View 7 "View_RelativeWorldCameraOrigin"
               OpMemberName %type_View 8 "View_RelativePreViewTranslation"
               OpMemberName %type_View 9 "View_ViewRectMin"
               OpMemberName %type_View 10 "View_ViewSizeAndInvSize"
               OpMemberName %type_View 11 "View_LightProbeSizeRatioAndInvSizeRatio"
               OpMemberName %type_View 12 "View_BufferSizeAndInvSize"
               OpMemberName %type_View 13 "View_PreExposure"
               OpMemberName %type_View 14 "View_OneOverPreExposure"
               OpMemberName %type_View 15 "View_DiffuseOverrideParameter"
               OpMemberName %type_View 16 "View_SpecularOverrideParameter"
               OpMemberName %type_View 17 "View_RoughnessOverrideParameter"
               OpMemberName %type_View 18 "View_OutOfBoundsMask"
               OpMemberName %type_View 19 "View_GameTime"
               OpMemberName %type_View 20 "View_StateFrameIndexMod8"
               OpMemberName %type_View 21 "View_UnlitViewmodeMask"
               OpMemberName %type_View 22 "View_DirectionalLightColor"
               OpMemberName %type_View 23 "View_DirectionalLightDirection"
               OpMemberName %type_View 24 "View_PrecomputedIndirectLightingColorScale"
               OpMemberName %type_View 25 "View_RenderingReflectionCaptureMask"
               OpMemberName %type_View 26 "View_GlobalVolumeTranslatedCenterAndExtent"
               OpMemberName %type_View 27 "View_GlobalVolumeTranslatedWorldToUVAddAndMul"
               OpMemberName %type_View 28 "View_GlobalDistanceFieldClipmapSizeInPages"
               OpMemberName %type_View 29 "View_GlobalDistanceFieldInvPageAtlasSize"
               OpMemberName %type_View 30 "View_GlobalVolumeTexelSize"
               OpMemberName %type_View 31 "View_NumGlobalSDFClipmaps"
               OpMemberName %type_View 32 "View_bCheckerboardSubsurfaceProfileRendering"
               OpMemberName %type_View 33 "View_VolumetricLightmapWorldToUVScale"
               OpMemberName %type_View 34 "View_VolumetricLightmapWorldToUVAdd"
               OpMemberName %type_View 35 "View_VolumetricLightmapIndirectionTextureSize"
               OpMemberName %type_View 36 "View_VolumetricLightmapBrickSize"
               OpMemberName %type_View 37 "View_VolumetricLightmapBrickTexelSize"
               OpMemberName %type_View 38 "View_IndirectLightingCacheShowFlag"
               OpMemberName %type_View 39 "View_MinRoughness"
               OpMemberName %type_View 40 "View_bShadingEnergyConservation"
               OpMemberName %type_View 41 "View_bShadingEnergyPreservation"
               OpName %View "View"  ; id %17
               OpName %type_3d_image "type.3d.image"  ; id %18
               OpName %View_VolumetricLightmapIndirectionTexture "View_VolumetricLightmapIndirectionTexture"  ; id %19
               OpName %type_3d_image_0 "type.3d.image"  ; id %20
               OpName %View_DirectionalLightShadowingBrickTexture "View_DirectionalLightShadowingBrickTexture"  ; id %21
               OpName %View_GlobalDistanceFieldPageAtlasTexture "View_GlobalDistanceFieldPageAtlasTexture"  ; id %22
               OpName %View_GlobalDistanceFieldPageTableTexture "View_GlobalDistanceFieldPageTableTexture"  ; id %23
               OpName %type_2d_image "type.2d.image"  ; id %24
               OpName %type_sampler "type.sampler"  ; id %25
               OpName %View_PerlinNoise3DTexture "View_PerlinNoise3DTexture"  ; id %26
               OpName %View_PerlinNoise3DTextureSampler "View_PerlinNoise3DTextureSampler"  ; id %27
               OpName %View_SharedBilinearClampedSampler "View_SharedBilinearClampedSampler"  ; id %28
               OpName %View_SharedTrilinearWrappedSampler "View_SharedTrilinearWrappedSampler"  ; id %29
               OpName %View_ShadingEnergyGGXSpecTexture "View_ShadingEnergyGGXSpecTexture"  ; id %30
               OpName %View_ShadingEnergySampler "View_ShadingEnergySampler"  ; id %31
               OpName %View_SimpleVolumeEnvTexture "View_SimpleVolumeEnvTexture"  ; id %32
               OpName %View_SimpleVolumeEnvTextureSampler "View_SimpleVolumeEnvTextureSampler"  ; id %33
               OpName %type_SingleLayerWater "type.SingleLayerWater"  ; id %34
               OpMemberName %type_SingleLayerWater 0 "SingleLayerWater_SceneWithoutSingleLayerWaterMinMaxUV"
               OpMemberName %type_SingleLayerWater 1 "SingleLayerWater_DistortionParams"
               OpMemberName %type_SingleLayerWater 2 "SingleLayerWater_SceneWithoutSingleLayerWaterTextureSize"
               OpMemberName %type_SingleLayerWater 3 "SingleLayerWater_bMainDirectionalLightVSMFiltering"
               OpMemberName %type_SingleLayerWater 4 "SingleLayerWater_bSeparateMainDirLightLuminance"
               OpName %SingleLayerWater "SingleLayerWater"  ; id %35
               OpName %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture "SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture"  ; id %36
               OpName %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture "SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture"  ; id %37
               OpName %type_StructuredBuffer_v4float "type.StructuredBuffer.v4float"  ; id %38
               OpName %Scene_GPUScene_GPUScenePrimitiveSceneData "Scene_GPUScene_GPUScenePrimitiveSceneData"  ; id %39
               OpName %type_OpaqueBasePass "type.OpaqueBasePass"  ; id %40
               OpMemberName %type_OpaqueBasePass 0 "OpaqueBasePass_Shared_Forward_NumLocalLights"
               OpMemberName %type_OpaqueBasePass 1 "OpaqueBasePass_Shared_Forward_HasDirectionalLight"
               OpMemberName %type_OpaqueBasePass 2 "OpaqueBasePass_Shared_Forward_CulledGridSize"
               OpMemberName %type_OpaqueBasePass 3 "OpaqueBasePass_Shared_Forward_LightGridPixelSizeShift"
               OpMemberName %type_OpaqueBasePass 4 "OpaqueBasePass_Shared_Forward_LightGridZParams"
               OpMemberName %type_OpaqueBasePass 5 "OpaqueBasePass_Shared_Forward_DirectionalLightDirection"
               OpMemberName %type_OpaqueBasePass 6 "OpaqueBasePass_Shared_Forward_DirectionalLightSourceRadius"
               OpMemberName %type_OpaqueBasePass 7 "OpaqueBasePass_Shared_Forward_DirectionalLightColor"
               OpMemberName %type_OpaqueBasePass 8 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowMapChannelMask"
               OpMemberName %type_OpaqueBasePass 9 "OpaqueBasePass_Shared_Forward_DirectionalLightDistanceFadeMAD"
               OpMemberName %type_OpaqueBasePass 10 "OpaqueBasePass_Shared_Forward_NumDirectionalLightCascades"
               OpMemberName %type_OpaqueBasePass 11 "OpaqueBasePass_Shared_Forward_DirectionalLightVSM"
               OpMemberName %type_OpaqueBasePass 12 "OpaqueBasePass_Shared_Forward_CascadeEndDepths"
               OpMemberName %type_OpaqueBasePass 13 "OpaqueBasePass_Shared_Forward_DirectionalLightTranslatedWorldToShadowMatrix"
               OpMemberName %type_OpaqueBasePass 14 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapMinMax"
               OpMemberName %type_OpaqueBasePass 15 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlasBufferSize"
               OpMemberName %type_OpaqueBasePass 16 "OpaqueBasePass_Shared_Forward_DirectLightingShowFlag"
               OpMemberName %type_OpaqueBasePass 17 "OpaqueBasePass_Strata_FirstSliceStoringStrataSSSDataWithoutMRT"
               OpMemberName %type_OpaqueBasePass 18 "OpaqueBasePass_UseForwardScreenSpaceShadowMask"
               OpName %OpaqueBasePass "OpaqueBasePass"  ; id %41
               OpName %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas"  ; id %42
               OpName %OpaqueBasePass_Shared_Forward_ShadowmapSampler "OpaqueBasePass_Shared_Forward_ShadowmapSampler"  ; id %43
               OpName %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer "OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer"  ; id %44
               OpName %type_StructuredBuffer_uint "type.StructuredBuffer.uint"  ; id %45
               OpName %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid "OpaqueBasePass_Shared_Forward_NumCulledLightsGrid"  ; id %46
               OpName %type_buffer_image "type.buffer.image"  ; id %47
               OpName %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit "OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit"  ; id %48
               OpName %type_2d_image_array "type.2d.image.array"  ; id %49
               OpName %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs "OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs"  ; id %50
               OpName %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture "OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture"  ; id %51
               OpName %OpaqueBasePass_PreIntegratedGFTexture "OpaqueBasePass_PreIntegratedGFTexture"  ; id %52
               OpName %type_IndirectLightingCache "type.IndirectLightingCache"  ; id %53
               OpMemberName %type_IndirectLightingCache 0 "IndirectLightingCache_DirectionalLightShadowing"
               OpMemberName %type_IndirectLightingCache 1 "IndirectLightingCache_IndirectLightingSHCoefficients0"
               OpMemberName %type_IndirectLightingCache 2 "IndirectLightingCache_IndirectLightingSHCoefficients1"
               OpMemberName %type_IndirectLightingCache 3 "IndirectLightingCache_IndirectLightingSHCoefficients2"
               OpName %IndirectLightingCache "IndirectLightingCache"  ; id %54
               OpName %type_ByteAddressBuffer "type.ByteAddressBuffer"  ; id %55
               OpName %VirtualShadowMap_ProjectionData "VirtualShadowMap_ProjectionData"  ; id %56
               OpName %VirtualShadowMap_PageTable "VirtualShadowMap_PageTable"  ; id %57
               OpName %type_2d_image_array_0 "type.2d.image.array"  ; id %58
               OpName %VirtualShadowMap_PhysicalPagePool "VirtualShadowMap_PhysicalPagePool"  ; id %59
               OpName %type_MaterialCollection0 "type.MaterialCollection0"  ; id %60
               OpMemberName %type_MaterialCollection0 0 "MaterialCollection0_Vectors"
               OpName %MaterialCollection0 "MaterialCollection0"  ; id %61
               OpName %type_Material "type.Material"  ; id %62
               OpMemberName %type_Material 0 "Material_PreshaderBuffer"
               OpName %Material "Material"  ; id %63
               OpName %in_var_TEXCOORD10_centroid "in.var.TEXCOORD10_centroid"  ; id %3
               OpName %in_var_TEXCOORD11_centroid "in.var.TEXCOORD11_centroid"  ; id %4
               OpName %in_var_PRIMITIVE_ID "in.var.PRIMITIVE_ID"  ; id %5
               OpName %in_var_TEXCOORD9 "in.var.TEXCOORD9"  ; id %6
               OpName %out_var_SV_Target0 "out.var.SV_Target0"  ; id %9
               OpName %out_var_SV_Target1 "out.var.SV_Target1"  ; id %10
               OpName %out_var_SV_Target2 "out.var.SV_Target2"  ; id %11
               OpName %out_var_SV_Target3 "out.var.SV_Target3"  ; id %12
               OpName %out_var_SV_Target4 "out.var.SV_Target4"  ; id %13
               OpName %out_var_SV_Target5 "out.var.SV_Target5"  ; id %14
               OpName %out_var_SV_Target6 "out.var.SV_Target6"  ; id %15
               OpName %MainPS "MainPS"  ; id %2
               OpName %type_sampled_image "type.sampled.image"  ; id %64
               OpName %type_sampled_image_0 "type.sampled.image"  ; id %65

               ; Annotations
               OpDecorateString %in_var_TEXCOORD10_centroid UserSemantic "TEXCOORD10_centroid"
               OpDecorateString %in_var_TEXCOORD11_centroid UserSemantic "TEXCOORD11_centroid"
               OpDecorateString %in_var_PRIMITIVE_ID UserSemantic "PRIMITIVE_ID"
               OpDecorate %in_var_PRIMITIVE_ID Flat
               OpDecorateString %in_var_TEXCOORD9 UserSemantic "TEXCOORD9"
               OpDecorate %gl_FragCoord BuiltIn FragCoord
               OpDecorateString %gl_FragCoord UserSemantic "SV_Position"
               OpDecorate %gl_FrontFacing BuiltIn FrontFacing
               OpDecorateString %gl_FrontFacing UserSemantic "SV_IsFrontFace"
               OpDecorate %gl_FrontFacing Flat
               OpDecorateString %out_var_SV_Target0 UserSemantic "SV_Target0"
               OpDecorateString %out_var_SV_Target1 UserSemantic "SV_Target1"
               OpDecorateString %out_var_SV_Target2 UserSemantic "SV_Target2"
               OpDecorateString %out_var_SV_Target3 UserSemantic "SV_Target3"
               OpDecorateString %out_var_SV_Target4 UserSemantic "SV_Target4"
               OpDecorateString %out_var_SV_Target5 UserSemantic "SV_Target5"
               OpDecorateString %out_var_SV_Target6 UserSemantic "SV_Target6"
               OpDecorate %in_var_TEXCOORD10_centroid Location 0
               OpDecorate %in_var_TEXCOORD11_centroid Location 1
               OpDecorate %in_var_PRIMITIVE_ID Location 2
               OpDecorate %in_var_TEXCOORD9 Location 3
               OpDecorate %out_var_SV_Target0 Location 0
               OpDecorate %out_var_SV_Target1 Location 1
               OpDecorate %out_var_SV_Target2 Location 2
               OpDecorate %out_var_SV_Target3 Location 3
               OpDecorate %out_var_SV_Target4 Location 4
               OpDecorate %out_var_SV_Target5 Location 5
               OpDecorate %out_var_SV_Target6 Location 6
               OpDecorate %View DescriptorSet 0
               OpDecorate %View Binding 0
               OpDecorate %View_VolumetricLightmapIndirectionTexture DescriptorSet 0
               OpDecorate %View_VolumetricLightmapIndirectionTexture Binding 1
               OpDecorate %View_DirectionalLightShadowingBrickTexture DescriptorSet 0
               OpDecorate %View_DirectionalLightShadowingBrickTexture Binding 2
               OpDecorate %View_GlobalDistanceFieldPageAtlasTexture DescriptorSet 0
               OpDecorate %View_GlobalDistanceFieldPageAtlasTexture Binding 3
               OpDecorate %View_GlobalDistanceFieldPageTableTexture DescriptorSet 0
               OpDecorate %View_GlobalDistanceFieldPageTableTexture Binding 4
               OpDecorate %View_PerlinNoise3DTexture DescriptorSet 0
               OpDecorate %View_PerlinNoise3DTexture Binding 7
               OpDecorate %View_PerlinNoise3DTextureSampler DescriptorSet 0
               OpDecorate %View_PerlinNoise3DTextureSampler Binding 8
               OpDecorate %View_SharedBilinearClampedSampler DescriptorSet 0
               OpDecorate %View_SharedBilinearClampedSampler Binding 10
               OpDecorate %View_SharedTrilinearWrappedSampler DescriptorSet 0
               OpDecorate %View_SharedTrilinearWrappedSampler Binding 11
               OpDecorate %View_ShadingEnergyGGXSpecTexture DescriptorSet 0
               OpDecorate %View_ShadingEnergyGGXSpecTexture Binding 23
               OpDecorate %View_ShadingEnergySampler DescriptorSet 0
               OpDecorate %View_ShadingEnergySampler Binding 26
               OpDecorate %View_SimpleVolumeEnvTexture DescriptorSet 0
               OpDecorate %View_SimpleVolumeEnvTexture Binding 29
               OpDecorate %View_SimpleVolumeEnvTextureSampler DescriptorSet 0
               OpDecorate %View_SimpleVolumeEnvTextureSampler Binding 30
               OpDecorate %SingleLayerWater DescriptorSet 0
               OpDecorate %SingleLayerWater Binding 34
               OpDecorate %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture DescriptorSet 0
               OpDecorate %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture Binding 35
               OpDecorate %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture DescriptorSet 0
               OpDecorate %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture Binding 36
               OpDecorate %Scene_GPUScene_GPUScenePrimitiveSceneData DescriptorSet 0
               OpDecorate %Scene_GPUScene_GPUScenePrimitiveSceneData Binding 38
               OpDecorate %OpaqueBasePass DescriptorSet 0
               OpDecorate %OpaqueBasePass Binding 39
               OpDecorate %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas Binding 40
               OpDecorate %OpaqueBasePass_Shared_Forward_ShadowmapSampler DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_ShadowmapSampler Binding 41
               OpDecorate %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer Binding 42
               OpDecorate %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid Binding 43
               OpDecorate %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit Binding 44
               OpDecorate %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs DescriptorSet 0
               OpDecorate %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs Binding 45
               OpDecorate %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture DescriptorSet 0
               OpDecorate %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture Binding 46
               OpDecorate %OpaqueBasePass_PreIntegratedGFTexture DescriptorSet 0
               OpDecorate %OpaqueBasePass_PreIntegratedGFTexture Binding 47
               OpDecorate %IndirectLightingCache DescriptorSet 0
               OpDecorate %IndirectLightingCache Binding 48
               OpDecorate %VirtualShadowMap_ProjectionData DescriptorSet 0
               OpDecorate %VirtualShadowMap_ProjectionData Binding 49
               OpDecorate %VirtualShadowMap_PageTable DescriptorSet 0
               OpDecorate %VirtualShadowMap_PageTable Binding 50
               OpDecorate %VirtualShadowMap_PhysicalPagePool DescriptorSet 0
               OpDecorate %VirtualShadowMap_PhysicalPagePool Binding 51
               OpDecorate %MaterialCollection0 DescriptorSet 0
               OpDecorate %MaterialCollection0 Binding 52
               OpDecorate %Material DescriptorSet 0
               OpDecorate %Material Binding 53
               OpDecorate %_arr_v4float_uint_6 ArrayStride 16
               OpMemberDecorate %type_View 0 Offset 192
               OpMemberDecorate %type_View 0 MatrixStride 16
               OpMemberDecorate %type_View 0 ColMajor
               OpMemberDecorate %type_View 1 Offset 448
               OpMemberDecorate %type_View 1 MatrixStride 16
               OpMemberDecorate %type_View 1 ColMajor
               OpMemberDecorate %type_View 2 Offset 704
               OpMemberDecorate %type_View 2 MatrixStride 16
               OpMemberDecorate %type_View 2 ColMajor
               OpMemberDecorate %type_View 3 Offset 960
               OpMemberDecorate %type_View 4 Offset 992
               OpMemberDecorate %type_View 5 Offset 1072
               OpMemberDecorate %type_View 6 Offset 1088
               OpMemberDecorate %type_View 7 Offset 1104
               OpMemberDecorate %type_View 8 Offset 1152
               OpMemberDecorate %type_View 9 Offset 1984
               OpMemberDecorate %type_View 10 Offset 2000
               OpMemberDecorate %type_View 11 Offset 2032
               OpMemberDecorate %type_View 12 Offset 2048
               OpMemberDecorate %type_View 13 Offset 2120
               OpMemberDecorate %type_View 14 Offset 2124
               OpMemberDecorate %type_View 15 Offset 2128
               OpMemberDecorate %type_View 16 Offset 2144
               OpMemberDecorate %type_View 17 Offset 2176
               OpMemberDecorate %type_View 18 Offset 2192
               OpMemberDecorate %type_View 19 Offset 2228
               OpMemberDecorate %type_View 20 Offset 2260
               OpMemberDecorate %type_View 21 Offset 2280
               OpMemberDecorate %type_View 22 Offset 2288
               OpMemberDecorate %type_View 23 Offset 2304
               OpMemberDecorate %type_View 24 Offset 2480
               OpMemberDecorate %type_View 25 Offset 2876
               OpMemberDecorate %type_View 26 Offset 3120
               OpMemberDecorate %type_View 27 Offset 3216
               OpMemberDecorate %type_View 28 Offset 3512
               OpMemberDecorate %type_View 29 Offset 3520
               OpMemberDecorate %type_View 30 Offset 3552
               OpMemberDecorate %type_View 31 Offset 3560
               OpMemberDecorate %type_View 32 Offset 3592
               OpMemberDecorate %type_View 33 Offset 3696
               OpMemberDecorate %type_View 34 Offset 3712
               OpMemberDecorate %type_View 35 Offset 3728
               OpMemberDecorate %type_View 36 Offset 3740
               OpMemberDecorate %type_View 37 Offset 3744
               OpMemberDecorate %type_View 38 Offset 3756
               OpMemberDecorate %type_View 39 Offset 3896
               OpMemberDecorate %type_View 40 Offset 5160
               OpMemberDecorate %type_View 41 Offset 5164
               OpDecorate %type_View Block
               OpDecorateString %View UserTypeGOOGLE "cbuffer"
               OpDecorateString %View_VolumetricLightmapIndirectionTexture UserTypeGOOGLE "texture3d:<uint4>"
               OpDecorateString %View_DirectionalLightShadowingBrickTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_GlobalDistanceFieldPageAtlasTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_GlobalDistanceFieldPageTableTexture UserTypeGOOGLE "texture3d:<uint>"
               OpDecorateString %View_PerlinNoise3DTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_ShadingEnergyGGXSpecTexture UserTypeGOOGLE "texture2d:<float2>"
               OpDecorateString %View_SimpleVolumeEnvTexture UserTypeGOOGLE "texture3d:<float>"
               OpMemberDecorate %type_SingleLayerWater 0 Offset 64
               OpMemberDecorate %type_SingleLayerWater 1 Offset 80
               OpMemberDecorate %type_SingleLayerWater 2 Offset 96
               OpMemberDecorate %type_SingleLayerWater 3 Offset 112
               OpMemberDecorate %type_SingleLayerWater 4 Offset 116
               OpDecorate %type_SingleLayerWater Block
               OpDecorateString %SingleLayerWater UserTypeGOOGLE "cbuffer"
               OpDecorateString %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorate %_runtimearr_v4float ArrayStride 16
               OpMemberDecorate %type_StructuredBuffer_v4float 0 Offset 0
               OpMemberDecorate %type_StructuredBuffer_v4float 0 NonWritable
               OpDecorate %type_StructuredBuffer_v4float BufferBlock
               OpDecorateString %Scene_GPUScene_GPUScenePrimitiveSceneData UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorate %_arr_mat4v4float_uint_4 ArrayStride 64
               OpDecorate %_arr_v4float_uint_4 ArrayStride 16
               OpMemberDecorate %type_OpaqueBasePass 0 Offset 0
               OpMemberDecorate %type_OpaqueBasePass 1 Offset 8
               OpMemberDecorate %type_OpaqueBasePass 2 Offset 16
               OpMemberDecorate %type_OpaqueBasePass 3 Offset 32
               OpMemberDecorate %type_OpaqueBasePass 4 Offset 48
               OpMemberDecorate %type_OpaqueBasePass 5 Offset 64
               OpMemberDecorate %type_OpaqueBasePass 6 Offset 76
               OpMemberDecorate %type_OpaqueBasePass 7 Offset 80
               OpMemberDecorate %type_OpaqueBasePass 8 Offset 96
               OpMemberDecorate %type_OpaqueBasePass 9 Offset 104
               OpMemberDecorate %type_OpaqueBasePass 10 Offset 112
               OpMemberDecorate %type_OpaqueBasePass 11 Offset 116
               OpMemberDecorate %type_OpaqueBasePass 12 Offset 128
               OpMemberDecorate %type_OpaqueBasePass 13 Offset 144
               OpMemberDecorate %type_OpaqueBasePass 13 MatrixStride 16
               OpMemberDecorate %type_OpaqueBasePass 13 ColMajor
               OpMemberDecorate %type_OpaqueBasePass 14 Offset 400
               OpMemberDecorate %type_OpaqueBasePass 15 Offset 464
               OpMemberDecorate %type_OpaqueBasePass 16 Offset 592
               OpMemberDecorate %type_OpaqueBasePass 17 Offset 2276
               OpMemberDecorate %type_OpaqueBasePass 18 Offset 2304
               OpDecorate %type_OpaqueBasePass Block
               OpDecorateString %OpaqueBasePass UserTypeGOOGLE "cbuffer"
               OpDecorateString %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %type_StructuredBuffer_uint 0 Offset 0
               OpMemberDecorate %type_StructuredBuffer_uint 0 NonWritable
               OpDecorate %type_StructuredBuffer_uint BufferBlock
               OpDecorateString %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid UserTypeGOOGLE "structuredbuffer:<uint>"
               OpDecorateString %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit UserTypeGOOGLE "buffer:<uint>"
               OpDecorateString %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs UserTypeGOOGLE "rwtexture2darray:<uint>"
               OpDecorateString %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %OpaqueBasePass_PreIntegratedGFTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorate %_arr_v4float_uint_3 ArrayStride 16
               OpMemberDecorate %type_IndirectLightingCache 0 Offset 80
               OpMemberDecorate %type_IndirectLightingCache 1 Offset 96
               OpMemberDecorate %type_IndirectLightingCache 2 Offset 144
               OpMemberDecorate %type_IndirectLightingCache 3 Offset 192
               OpDecorate %type_IndirectLightingCache Block
               OpDecorateString %IndirectLightingCache UserTypeGOOGLE "cbuffer"
               OpMemberDecorate %type_ByteAddressBuffer 0 Offset 0
               OpMemberDecorate %type_ByteAddressBuffer 0 NonWritable
               OpDecorate %type_ByteAddressBuffer BufferBlock
               OpDecorateString %VirtualShadowMap_ProjectionData UserTypeGOOGLE "byteaddressbuffer"
               OpDecorateString %VirtualShadowMap_PageTable UserTypeGOOGLE "structuredbuffer:<uint>"
               OpDecorateString %VirtualShadowMap_PhysicalPagePool UserTypeGOOGLE "texture2darray:<uint>"
               OpDecorate %_arr_v4float_uint_5 ArrayStride 16
               OpMemberDecorate %type_MaterialCollection0 0 Offset 0
               OpDecorate %type_MaterialCollection0 Block
               OpDecorateString %MaterialCollection0 UserTypeGOOGLE "cbuffer"
               OpDecorate %_arr_v4float_uint_109 ArrayStride 16
               OpMemberDecorate %type_Material 0 Offset 0
               OpDecorate %type_Material Block
               OpDecorateString %Material UserTypeGOOGLE "cbuffer"

               ; Types, variables and constants
      %float = OpTypeFloat 32
%float_3_14159274 = OpConstant %float 3.14159274
%float_64512 = OpConstant %float 64512
    %v3float = OpTypeVector %float 3
    %v4float = OpTypeVector %float 4
%mat4v4float = OpTypeMatrix %v4float 4
    %v2float = OpTypeVector %float 2
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
        %int = OpTypeInt 32 1
     %uint_2 = OpConstant %uint 2
     %uint_8 = OpConstant %uint 8
     %uint_6 = OpConstant %uint 6
      %v2int = OpTypeVector %int 2
    %uint_32 = OpConstant %uint 32
      %v4int = OpTypeVector %int 4
    %float_1 = OpConstant %float 1
       %bool = OpTypeBool
     %uint_3 = OpConstant %uint 3
      %int_0 = OpConstant %int 0
      %int_2 = OpConstant %int 2
      %int_1 = OpConstant %int 1
     %uint_0 = OpConstant %uint 0
    %float_0 = OpConstant %float 0
         %98 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
      %false = OpConstantFalse %bool
      %int_6 = OpConstant %int 6
     %int_96 = OpConstant %int 96
        %102 = OpConstantComposite %v3float %float_0 %float_0 %float_0
      %int_4 = OpConstant %int 4
   %uint_512 = OpConstant %uint 512
   %uint_256 = OpConstant %uint 256
     %uint_4 = OpConstant %uint 4
      %int_3 = OpConstant %int 3
    %uint_14 = OpConstant %uint 14
    %uint_31 = OpConstant %uint 31
     %uint_1 = OpConstant %uint 1
     %int_11 = OpConstant %int 11
     %int_24 = OpConstant %int 24
     %int_17 = OpConstant %int 17
      %int_7 = OpConstant %int 7
     %int_20 = OpConstant %int 20
     %int_10 = OpConstant %int 10
        %117 = OpConstantComposite %v4float %float_1 %float_1 %float_1 %float_1
       %true = OpConstantTrue %bool
     %int_16 = OpConstant %int 16
     %int_21 = OpConstant %int 21
     %int_75 = OpConstant %int 75
     %int_76 = OpConstant %int 76
     %int_15 = OpConstant %int 15
        %124 = OpConstantComposite %v2float %float_0 %float_0
     %int_47 = OpConstant %int 47
     %int_65 = OpConstant %int 65
        %127 = OpConstantComposite %v3float %float_1 %float_1 %float_1
     %int_81 = OpConstant %int 81
     %int_14 = OpConstant %int 14
     %int_27 = OpConstant %int 27
     %int_29 = OpConstant %int 29
%float_0_577000022 = OpConstant %float 0.577000022
        %133 = OpConstantComposite %v3float %float_0_577000022 %float_0_577000022 %float_0_577000022
        %134 = OpConstantComposite %v3float %float_1 %float_1 %float_0
        %135 = OpConstantComposite %v3float %float_0 %float_1 %float_1
  %float_0_5 = OpConstant %float 0.5
        %137 = OpConstantComposite %v3float %float_0_5 %float_0_5 %float_0_5
%float_0_0500000007 = OpConstant %float 0.0500000007
        %139 = OpConstantComposite %v3float %float_1 %float_0 %float_1
     %int_84 = OpConstant %int 84
     %int_18 = OpConstant %int 18
     %int_51 = OpConstant %int 51
%float_0_00392156886 = OpConstant %float 0.00392156886
      %int_8 = OpConstant %int 8
     %int_73 = OpConstant %int 73
      %int_5 = OpConstant %int 5
     %int_25 = OpConstant %int 25
     %int_48 = OpConstant %int 48
        %149 = OpConstantComposite %v2float %float_0_5 %float_0_5
    %float_2 = OpConstant %float 2
   %float_n2 = OpConstant %float -2
        %152 = OpConstantComposite %v2float %float_2 %float_n2
   %float_47 = OpConstant %float 47
   %float_17 = OpConstant %float 17
%float_0_0671105608 = OpConstant %float 0.0671105608
%float_0_00583714992 = OpConstant %float 0.00583714992
%float_52_9829178 = OpConstant %float 52.9829178
     %int_28 = OpConstant %int 28
     %uint_5 = OpConstant %uint 5
%uint_4294967288 = OpConstant %uint 4294967288
     %uint_7 = OpConstant %uint 7
    %uint_11 = OpConstant %uint 11
        %163 = OpConstantComposite %v3float %float_64512 %float_64512 %float_64512
%uint_2139095040 = OpConstant %uint 2139095040
   %uint_128 = OpConstant %uint 128
    %int_108 = OpConstant %int 108
%float_0_449999988 = OpConstant %float 0.449999988
%float_0_300000012 = OpConstant %float 0.300000012
%float_0_589999974 = OpConstant %float 0.589999974
%float_0_109999999 = OpConstant %float 0.109999999
        %171 = OpConstantComposite %v3float %float_0_300000012 %float_0_589999974 %float_0_109999999
%float_2_04040003 = OpConstant %float 2.04040003
%float_0_332399994 = OpConstant %float 0.332399994
        %174 = OpConstantComposite %v3float %float_0_332399994 %float_0_332399994 %float_0_332399994
%float_n4_79510021 = OpConstant %float -4.79510021
%float_0_641700029 = OpConstant %float 0.641700029
        %177 = OpConstantComposite %v3float %float_0_641700029 %float_0_641700029 %float_0_641700029
%float_2_75519991 = OpConstant %float 2.75519991
%float_0_690299988 = OpConstant %float 0.690299988
        %180 = OpConstantComposite %v3float %float_0_690299988 %float_0_690299988 %float_0_690299988
     %int_n1 = OpConstant %int -1
     %v2uint = OpTypeVector %uint 2
     %int_37 = OpConstant %int 37
%float_2097152 = OpConstant %float 2097152
   %float_50 = OpConstant %float 50
%float_9_99999996en13 = OpConstant %float 9.99999996e-13
%float_0_0199999996 = OpConstant %float 0.0199999996
%float_9_99999975en06 = OpConstant %float 9.99999975e-06
        %189 = OpConstantComposite %v3float %float_9_99999975en06 %float_9_99999975en06 %float_9_99999975en06
     %int_85 = OpConstant %int 85
     %int_59 = OpConstant %int 59
%float_0_0399999991 = OpConstant %float 0.0399999991
    %uint_16 = OpConstant %uint 16
    %uint_64 = OpConstant %uint 64
    %uint_40 = OpConstant %uint 40
     %uint_9 = OpConstant %uint 9
    %uint_10 = OpConstant %uint 10
  %uint_4095 = OpConstant %uint 4095
    %uint_12 = OpConstant %uint 12
   %uint_255 = OpConstant %uint 255
    %uint_20 = OpConstant %uint 20
    %uint_19 = OpConstant %uint 19
    %uint_24 = OpConstant %uint 24
%uint_1047552 = OpConstant %uint 1047552
  %uint_1023 = OpConstant %uint 1023
    %uint_63 = OpConstant %uint 63
   %uint_127 = OpConstant %uint 127
    %uint_26 = OpConstant %uint 26
    %uint_22 = OpConstant %uint 22
%uint_4294963200 = OpConstant %uint 4294963200
  %float_100 = OpConstant %float 100
  %float_128 = OpConstant %float 128
%float_0_00390625 = OpConstant %float 0.00390625
   %float_16 = OpConstant %float 16
     %int_23 = OpConstant %int 23
     %int_22 = OpConstant %int 22
     %int_30 = OpConstant %int 30
     %int_31 = OpConstant %int 31
     %int_33 = OpConstant %int 33
     %int_35 = OpConstant %int 35
     %int_26 = OpConstant %int 26
     %int_39 = OpConstant %int 39
     %int_40 = OpConstant %int 40
     %int_42 = OpConstant %int 42
     %int_43 = OpConstant %int 43
     %int_32 = OpConstant %int 32
     %int_44 = OpConstant %int 44
     %int_45 = OpConstant %int 45
     %int_34 = OpConstant %int 34
     %int_46 = OpConstant %int 46
     %int_50 = OpConstant %int 50
     %int_52 = OpConstant %int 52
     %int_38 = OpConstant %int 38
     %int_54 = OpConstant %int 54
     %int_56 = OpConstant %int 56
     %int_57 = OpConstant %int 57
     %int_58 = OpConstant %int 58
     %int_61 = OpConstant %int 61
     %int_62 = OpConstant %int 62
     %int_63 = OpConstant %int 63
     %int_64 = OpConstant %int 64
     %int_66 = OpConstant %int 66
     %int_67 = OpConstant %int 67
     %int_68 = OpConstant %int 68
     %int_53 = OpConstant %int 53
     %int_69 = OpConstant %int 69
     %int_70 = OpConstant %int 70
     %int_72 = OpConstant %int 72
     %int_77 = OpConstant %int 77
     %int_78 = OpConstant %int 78
     %int_79 = OpConstant %int 79
     %int_80 = OpConstant %int 80
     %int_86 = OpConstant %int 86
     %int_87 = OpConstant %int 87
     %int_88 = OpConstant %int 88
     %int_90 = OpConstant %int 90
     %int_91 = OpConstant %int 91
     %int_92 = OpConstant %int 92
     %int_93 = OpConstant %int 93
     %int_94 = OpConstant %int 94
     %int_95 = OpConstant %int 95
     %int_97 = OpConstant %int 97
     %int_82 = OpConstant %int 82
     %int_83 = OpConstant %int 83
    %int_103 = OpConstant %int 103
    %int_104 = OpConstant %int 104
    %int_106 = OpConstant %int 106
    %int_107 = OpConstant %int 107
    %int_105 = OpConstant %int 105
%mat3v3float = OpTypeMatrix %v3float 3
%_arr_v3float_uint_4 = OpTypeArray %v3float %uint_4
    %uint_15 = OpConstant %uint 15
%float_100000 = OpConstant %float 100000
   %float_n1 = OpConstant %float -1
        %275 = OpConstantComposite %v2float %float_1 %float_0
%float_1_20000005 = OpConstant %float 1.20000005
        %277 = OpConstantComposite %v3float %float_1_20000005 %float_1_20000005 %float_1_20000005
        %278 = OpConstantComposite %v3float %float_n1 %float_n1 %float_n1
%float_0_100000001 = OpConstant %float 0.100000001
        %280 = OpConstantComposite %v3float %float_0_100000001 %float_0_100000001 %float_0_100000001
%float_6_28318548 = OpConstant %float 6.28318548
%float_0_00100000005 = OpConstant %float 0.00100000005
%float_0_00200000009 = OpConstant %float 0.00200000009
%float_0_800000012 = OpConstant %float 0.800000012
    %float_4 = OpConstant %float 4
 %float_0_75 = OpConstant %float 0.75
%float_10000 = OpConstant %float 10000
        %288 = OpConstantComposite %v3float %float_10000 %float_10000 %float_10000
    %float_8 = OpConstant %float 8
        %290 = OpConstantComposite %v3float %float_0 %float_0 %float_1
%float_9_99999975en05 = OpConstant %float 9.99999975e-05
    %uint_41 = OpConstant %uint 41
    %uint_18 = OpConstant %uint 18
 %uint_65535 = OpConstant %uint 65535
    %uint_17 = OpConstant %uint 17
    %uint_25 = OpConstant %uint 25
%uint_16777215 = OpConstant %uint 16777215
 %uint_32768 = OpConstant %uint 32768
  %float_127 = OpConstant %float 127
    %float_3 = OpConstant %float 3
%float_0_99000001 = OpConstant %float 0.99000001
        %302 = OpConstantComposite %v3float %float_0_99000001 %float_0_99000001 %float_0_99000001
%float_0_0799999982 = OpConstant %float 0.0799999982
    %float_6 = OpConstant %float 6
        %305 = OpConstantComposite %v2uint %uint_31 %uint_31
 %float_4000 = OpConstant %float 4000
%float_0_000230000005 = OpConstant %float 0.000230000005
%float_n0_000230000005 = OpConstant %float -0.000230000005
        %309 = OpConstantComposite %v2float %float_0_000230000005 %float_n0_000230000005
%float_1_54999995 = OpConstant %float 1.54999995
  %float_255 = OpConstant %float 255
        %312 = OpConstantComposite %v2float %float_1 %float_1
 %float_1023 = OpConstant %float 1023
 %float_2047 = OpConstant %float 2047
  %uint_2047 = OpConstant %uint 2047
   %float_63 = OpConstant %float 63
%uint_1072693248 = OpConstant %uint 1072693248
%uint_4292870144 = OpConstant %uint 4292870144
%uint_2096128 = OpConstant %uint 2096128
 %float_0_25 = OpConstant %float 0.25
        %321 = OpConstantComposite %v3float %float_0_25 %float_0_25 %float_0_25
        %322 = OpConstantComposite %v3float %float_0 %float_0_5 %float_0_5
%uint_4294967292 = OpConstant %uint 4294967292
 %float_1024 = OpConstant %float 1024
        %325 = OpConstantComposite %v2float %float_1024 %float_1024
        %326 = OpConstantComposite %v2float %float_2047 %float_2047
%float_4_76837158en07 = OpConstant %float 4.76837158e-07
%float_0_333299994 = OpConstant %float 0.333299994
%float_0_488602996 = OpConstant %float 0.488602996
%float_1_09254801 = OpConstant %float 1.09254801
%float_0_315391988 = OpConstant %float 0.315391988
  %uint_2048 = OpConstant %uint 2048
  %uint_4096 = OpConstant %uint 4096
  %uint_8192 = OpConstant %uint 8192
%float_0_400000006 = OpConstant %float 0.400000006
        %336 = OpConstantComposite %v3float %float_2 %float_0 %float_n2
        %337 = OpConstantComposite %v3float %float_n1 %float_2 %float_n1
        %338 = OpConstantComposite %v3float %float_0 %float_0 %float_0_00100000005
%float_0_899999976 = OpConstant %float 0.899999976
        %340 = OpConstantComposite %v2uint %uint_128 %uint_128
        %341 = OpConstantComposite %v2uint %uint_127 %uint_127
%uint_4294967295 = OpConstant %uint 4294967295
%float_9_99999997en07 = OpConstant %float 9.99999997e-07
        %344 = OpConstantComposite %v3float %float_9_99999997en07 %float_9_99999997en07 %float_9_99999997en07
%float_0_200000003 = OpConstant %float 0.200000003
%uint_2147483647 = OpConstant %uint 2147483647
     %v3uint = OpTypeVector %uint 3
        %348 = OpConstantComposite %v3uint %uint_2147483647 %uint_2147483647 %uint_2147483647
%float_0_600000024 = OpConstant %float 0.600000024
        %350 = OpConstantComposite %v3float %float_1 %float_0 %float_0
        %351 = OpConstantComposite %v3float %float_0 %float_1 %float_0
        %352 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_100
        %353 = OpConstantComposite %v3uint %uint_8 %uint_8 %uint_8
    %float_7 = OpConstant %float 7
        %355 = OpConstantComposite %v3float %float_9_99999996en13 %float_9_99999996en13 %float_9_99999996en13
   %uint_336 = OpConstant %uint 336
    %uint_96 = OpConstant %uint 96
   %uint_112 = OpConstant %uint 112
   %uint_144 = OpConstant %uint 144
   %uint_160 = OpConstant %uint 160
   %uint_176 = OpConstant %uint 176
   %uint_268 = OpConstant %uint 268
   %uint_272 = OpConstant %uint 272
   %uint_288 = OpConstant %uint 288
   %uint_300 = OpConstant %uint 300
   %uint_304 = OpConstant %uint 304
   %uint_312 = OpConstant %uint 312
   %uint_316 = OpConstant %uint 316
 %uint_16384 = OpConstant %uint 16384
        %370 = OpConstantComposite %v2int %int_32 %int_32
        %371 = OpConstantComposite %v2int %int_31 %int_31
%float_0_0350000001 = OpConstant %float 0.0350000001
   %float_20 = OpConstant %float 20
%float_1_57079637 = OpConstant %float 1.57079637
   %float_10 = OpConstant %float 10
%float_1_19000006 = OpConstant %float 1.19000006
%float_0_360000014 = OpConstant %float 0.360000014
%float_n3_6500001 = OpConstant %float -3.6500001
%int_532487669 = OpConstant %int 532487669
   %float_15 = OpConstant %float 15
        %381 = OpConstantComposite %v4float %float_15 %float_15 %float_15 %float_15
        %382 = OpConstantComposite %v4float %float_10 %float_10 %float_10 %float_10
   %float_19 = OpConstant %float 19
  %float_101 = OpConstant %float 101
        %385 = OpConstantComposite %v3float %float_19 %float_47 %float_101
        %386 = OpConstantComposite %v3uint %uint_32768 %uint_16384 %uint_8192
%float_6_10351562en05 = OpConstant %float 6.10351562e-05
%float_0_000122070312 = OpConstant %float 0.000122070312
%float_0_000244140625 = OpConstant %float 0.000244140625
        %390 = OpConstantComposite %v3float %float_6_10351562en05 %float_0_000122070312 %float_0_000244140625
%float_0_2588 = OpConstant %float 0.2588
 %uint_21845 = OpConstant %uint 21845
%uint_134217728 = OpConstant %uint 134217728
 %float_n0_5 = OpConstant %float -0.5
%uint_4294967294 = OpConstant %uint 4294967294
%float_0_00313066994 = OpConstant %float 0.00313066994
%float_12_9200001 = OpConstant %float 12.9200001
%float_0_416666657 = OpConstant %float 0.416666657
%float_1_05499995 = OpConstant %float 1.05499995
%uint_1664525 = OpConstant %uint 1664525
        %401 = OpConstantComposite %v3uint %uint_1664525 %uint_1664525 %uint_1664525
%uint_1013904223 = OpConstant %uint 1013904223
        %403 = OpConstantComposite %v3uint %uint_1013904223 %uint_1013904223 %uint_1013904223
        %404 = OpConstantComposite %v3uint %uint_16 %uint_16 %uint_16
        %405 = OpConstantComposite %v3uint %uint_31 %uint_31 %uint_31
%float_0_055555556 = OpConstant %float 0.055555556
%float_2_20000005 = OpConstant %float 2.20000005
 %float_34_5 = OpConstant %float 34.5
 %float_24_5 = OpConstant %float 24.5
%float_73_1999969 = OpConstant %float 73.1999969
%float_8_89999962 = OpConstant %float 8.89999962
%float_3_5999999 = OpConstant %float 3.5999999
%float_1_00010002 = OpConstant %float 1.00010002
%int_2129859010 = OpConstant %int 2129859010
%float_0_140000001 = OpConstant %float 0.140000001
%_arr_v4float_uint_6 = OpTypeArray %v4float %uint_6
  %type_View = OpTypeStruct %mat4v4float %mat4v4float %mat4v4float %v3float %v3float %v4float %v4float %v3float %v3float %v4float %v4float %v4float %v4float %float %float %v4float %v4float %v2float %float %float %uint %float %v4float %v3float %v3float %float %_arr_v4float_uint_6 %_arr_v4float_uint_6 %int %v3float %float %uint %float %v3float %v3float %v3float %float %v3float %float %float %uint %uint
%_ptr_Uniform_type_View = OpTypePointer Uniform %type_View
%type_3d_image = OpTypeImage %uint 3D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_3d_image = OpTypePointer UniformConstant %type_3d_image
%type_3d_image_0 = OpTypeImage %float 3D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_3d_image_0 = OpTypePointer UniformConstant %type_3d_image_0
%type_2d_image = OpTypeImage %float 2D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_2d_image = OpTypePointer UniformConstant %type_2d_image
%type_sampler = OpTypeSampler
%_ptr_UniformConstant_type_sampler = OpTypePointer UniformConstant %type_sampler
      %v3int = OpTypeVector %int 3
%type_SingleLayerWater = OpTypeStruct %v4float %v4float %v2float %uint %uint
%_ptr_Uniform_type_SingleLayerWater = OpTypePointer Uniform %type_SingleLayerWater
%_runtimearr_v4float = OpTypeRuntimeArray %v4float
%type_StructuredBuffer_v4float = OpTypeStruct %_runtimearr_v4float
%_ptr_Uniform_type_StructuredBuffer_v4float = OpTypePointer Uniform %type_StructuredBuffer_v4float
%_arr_mat4v4float_uint_4 = OpTypeArray %mat4v4float %uint_4
%_arr_v4float_uint_4 = OpTypeArray %v4float %uint_4
%type_OpaqueBasePass = OpTypeStruct %uint %uint %v3int %uint %v3float %v3float %float %v3float %uint %v2float %uint %int %v4float %_arr_mat4v4float_uint_4 %_arr_v4float_uint_4 %v4float %uint %int %int
%_ptr_Uniform_type_OpaqueBasePass = OpTypePointer Uniform %type_OpaqueBasePass
%_runtimearr_uint = OpTypeRuntimeArray %uint
%type_StructuredBuffer_uint = OpTypeStruct %_runtimearr_uint
%_ptr_Uniform_type_StructuredBuffer_uint = OpTypePointer Uniform %type_StructuredBuffer_uint
%type_buffer_image = OpTypeImage %uint Buffer 2 0 0 1 R32ui
%_ptr_UniformConstant_type_buffer_image = OpTypePointer UniformConstant %type_buffer_image
%type_2d_image_array = OpTypeImage %uint 2D 2 1 0 2 R32ui
%_ptr_UniformConstant_type_2d_image_array = OpTypePointer UniformConstant %type_2d_image_array
%_arr_v4float_uint_3 = OpTypeArray %v4float %uint_3
%type_IndirectLightingCache = OpTypeStruct %float %_arr_v4float_uint_3 %_arr_v4float_uint_3 %v4float
%_ptr_Uniform_type_IndirectLightingCache = OpTypePointer Uniform %type_IndirectLightingCache
%type_ByteAddressBuffer = OpTypeStruct %_runtimearr_uint
%_ptr_Uniform_type_ByteAddressBuffer = OpTypePointer Uniform %type_ByteAddressBuffer
%type_2d_image_array_0 = OpTypeImage %uint 2D 2 1 0 1 Unknown
%_ptr_UniformConstant_type_2d_image_array_0 = OpTypePointer UniformConstant %type_2d_image_array_0
%_arr_v4float_uint_5 = OpTypeArray %v4float %uint_5
%type_MaterialCollection0 = OpTypeStruct %_arr_v4float_uint_5
%_ptr_Uniform_type_MaterialCollection0 = OpTypePointer Uniform %type_MaterialCollection0
   %uint_109 = OpConstant %uint 109
%_arr_v4float_uint_109 = OpTypeArray %v4float %uint_109
%type_Material = OpTypeStruct %_arr_v4float_uint_109
%_ptr_Uniform_type_Material = OpTypePointer Uniform %type_Material
%_ptr_Input_v4float = OpTypePointer Input %v4float
%_ptr_Input_uint = OpTypePointer Input %uint
%_ptr_Input_v3float = OpTypePointer Input %v3float
%_ptr_Input_bool = OpTypePointer Input %bool
%_ptr_Output_v4float = OpTypePointer Output %v4float
%_ptr_Output_uint = OpTypePointer Output %uint
       %void = OpTypeVoid
        %441 = OpTypeFunction %void
%_ptr_Function_v3float = OpTypePointer Function %v3float
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %v4bool = OpTypeVector %bool 4
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
%_ptr_Uniform_float = OpTypePointer Uniform %float
     %v3bool = OpTypeVector %bool 3
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
%_ptr_Uniform_int = OpTypePointer Uniform %int
%_ptr_Uniform_v3float = OpTypePointer Uniform %v3float
%type_sampled_image = OpTypeSampledImage %type_2d_image
%_ptr_Uniform_mat4v4float = OpTypePointer Uniform %mat4v4float
     %v2bool = OpTypeVector %bool 2
%type_sampled_image_0 = OpTypeSampledImage %type_3d_image_0
%_ptr_Uniform_v3int = OpTypePointer Uniform %v3int
%_ptr_Function__arr_v3float_uint_4 = OpTypePointer Function %_arr_v3float_uint_4
       %View = OpVariable %_ptr_Uniform_type_View Uniform
%View_VolumetricLightmapIndirectionTexture = OpVariable %_ptr_UniformConstant_type_3d_image UniformConstant
%View_DirectionalLightShadowingBrickTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_GlobalDistanceFieldPageAtlasTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_GlobalDistanceFieldPageTableTexture = OpVariable %_ptr_UniformConstant_type_3d_image UniformConstant
%View_PerlinNoise3DTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_PerlinNoise3DTextureSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SharedBilinearClampedSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SharedTrilinearWrappedSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_ShadingEnergyGGXSpecTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%View_ShadingEnergySampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SimpleVolumeEnvTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_SimpleVolumeEnvTextureSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%SingleLayerWater = OpVariable %_ptr_Uniform_type_SingleLayerWater Uniform
%SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%Scene_GPUScene_GPUScenePrimitiveSceneData = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%OpaqueBasePass = OpVariable %_ptr_Uniform_type_OpaqueBasePass Uniform
%OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%OpaqueBasePass_Shared_Forward_ShadowmapSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%OpaqueBasePass_Shared_Forward_NumCulledLightsGrid = OpVariable %_ptr_Uniform_type_StructuredBuffer_uint Uniform
%OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit = OpVariable %_ptr_UniformConstant_type_buffer_image UniformConstant
%OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs = OpVariable %_ptr_UniformConstant_type_2d_image_array UniformConstant
%OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%OpaqueBasePass_PreIntegratedGFTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%IndirectLightingCache = OpVariable %_ptr_Uniform_type_IndirectLightingCache Uniform
%VirtualShadowMap_ProjectionData = OpVariable %_ptr_Uniform_type_ByteAddressBuffer Uniform
%VirtualShadowMap_PageTable = OpVariable %_ptr_Uniform_type_StructuredBuffer_uint Uniform
%VirtualShadowMap_PhysicalPagePool = OpVariable %_ptr_UniformConstant_type_2d_image_array_0 UniformConstant
%MaterialCollection0 = OpVariable %_ptr_Uniform_type_MaterialCollection0 Uniform
   %Material = OpVariable %_ptr_Uniform_type_Material Uniform
%in_var_TEXCOORD10_centroid = OpVariable %_ptr_Input_v4float Input
%in_var_TEXCOORD11_centroid = OpVariable %_ptr_Input_v4float Input
%in_var_PRIMITIVE_ID = OpVariable %_ptr_Input_uint Input
%in_var_TEXCOORD9 = OpVariable %_ptr_Input_v3float Input
%gl_FragCoord = OpVariable %_ptr_Input_v4float Input
%gl_FrontFacing = OpVariable %_ptr_Input_bool Input
%out_var_SV_Target0 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target1 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target2 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target3 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target4 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target5 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target6 = OpVariable %_ptr_Output_uint Output
        %455 = OpUndef %v3float
        %456 = OpConstantNull %uint
        %457 = OpConstantNull %v4float
        %458 = OpConstantNull %v3float
        %459 = OpConstantNull %float
%float_0_03125 = OpConstant %float 0.03125
        %461 = OpConstantComposite %v3float %float_0_03125 %float_0_03125 %float_0_03125
%float_32_6650009 = OpConstant %float 32.6650009
%float_11_8149996 = OpConstant %float 11.8149996
        %464 = OpConstantComposite %v2float %float_32_6650009 %float_11_8149996
        %465 = OpConstantComposite %v2float %float_0_0671105608 %float_0_00583714992
%float_0_00787401572 = OpConstant %float 0.00787401572
%float_n0_488602996 = OpConstant %float -0.488602996
%float_n1_09254801 = OpConstant %float -1.09254801
%float_2_09439516 = OpConstant %float 2.09439516
%float_0_785398185 = OpConstant %float 0.785398185
%float_16384 = OpConstant %float 16384
%float_0_318309873 = OpConstant %float 0.318309873
   %float_n0 = OpConstant %float -0
%float_n0_156582996 = OpConstant %float -0.156582996
%float_n0_0699428469 = OpConstant %float -0.0699428469
%float_0_997551024 = OpConstant %float 0.997551024
%float_1_41421354 = OpConstant %float 1.41421354
%float_2_50662827 = OpConstant %float 2.50662827
%float_0_0465205647 = OpConstant %float 0.0465205647
%float_0_953479409 = OpConstant %float 0.953479409
%float_12_566371 = OpConstant %float 12.566371
%float_0_0795774683 = OpConstant %float 0.0795774683
%float_32256 = OpConstant %float 32256
        %484 = OpConstantComposite %v3float %float_32256 %float_32256 %float_32256
%uint_4294967293 = OpConstant %uint 4294967293
%uint_4294902015 = OpConstant %uint 4294902015
%float_0_0454545468 = OpConstant %float 0.0454545468
%float_0_0625 = OpConstant %float 0.0625
%float_0_909090936 = OpConstant %float 0.909090936
%float_0_875 = OpConstant %float 0.875
%uint_4287627263 = OpConstant %uint 4287627263
%uint_4169138175 = OpConstant %uint 4169138175
%uint_4294901760 = OpConstant %uint 4294901760
%uint_4294967263 = OpConstant %uint 4294967263
%uint_4294901759 = OpConstant %uint 4294901759
        %496 = OpConstantComposite %v3float %float_0_0454545468 %float_0_0454545468 %float_0_0625
        %497 = OpConstantComposite %v3float %float_0_909090936 %float_0_909090936 %float_0_875
        %498 = OpConstantComposite %v3float %float_0_318309873 %float_0_318309873 %float_0_318309873
%uint_4194303 = OpConstant %uint 4194303
        %500 = OpConstantComposite %v3uint %uint_1 %uint_1 %uint_1
%uint_16711680 = OpConstant %uint 16711680
    %uint_72 = OpConstant %uint 72
        %503 = OpConstantComposite %v3float %float_n1 %float_n1 %float_n0
%float_9_53674316en07 = OpConstant %float 9.53674316e-07
%float_n2_097152e_11 = OpConstant %float -2.097152e+11
%float_0_000100000005 = OpConstant %float 0.000100000005
        %507 = OpConstantComposite %v3float %float_0_000100000005 %float_0_000100000005 %float_0_000100000005
%float_0_000200000009 = OpConstant %float 0.000200000009
        %509 = OpConstantComposite %v3float %float_0_000200000009 %float_0_000200000009 %float_0_000200000009
%float_0_429042608 = OpConstant %float 0.429042608
        %511 = OpConstantComposite %v3float %float_n0_5 %float_n0_5 %float_n0_5
%float_4194_3042 = OpConstant %float 4194.3042
%float_0_0333333351 = OpConstant %float 0.0333333351
%float_3_125 = OpConstant %float 3.125
%float_0_636619747 = OpConstant %float 0.636619747
%float_0_00158730161 = OpConstant %float 0.00158730161
%uint_1048576 = OpConstant %uint 1048576
%float_0_0158730168 = OpConstant %float 0.0158730168
%float_0_999600053 = OpConstant %float 0.999600053
        %520 = OpConstantComposite %v3float %float_0_999600053 %float_0_999600053 %float_0_999600053
%float_1_52590219en05 = OpConstant %float 1.52590219e-05
        %522 = OpConstantComposite %v3float %float_1_52590219en05 %float_1_52590219en05 %float_1_52590219en05
%float_0_0666666701 = OpConstant %float 0.0666666701
        %524 = OpConstantComposite %v3float %float_0_0666666701 %float_0_0666666701 %float_0_0666666701
        %525 = OpConstantComposite %v3float %float_0_0625 %float_0_0625 %float_0_0625
        %526 = OpConstantComposite %v3float %float_0_00787401572 %float_0_00787401572 %float_0_00787401572
        %527 = OpConstantComposite %v2float %float_n0_5 %float_n0_5
%float_n6_28318548 = OpConstant %float -6.28318548
%float_0_139885694 = OpConstant %float 0.139885694
%float_n0_800000012 = OpConstant %float -0.800000012
%float_n3_98000002 = OpConstant %float -3.98000002
%float_n16_7800007 = OpConstant %float -16.7800007
%float_n0_75 = OpConstant %float -0.75
  %float_n59 = OpConstant %float -59
%float_n21_2000008 = OpConstant %float -21.2000008
%float_n0_0549999997 = OpConstant %float -0.0549999997
 %float_n127 = OpConstant %float -127
        %538 = OpUndef %v3float
        %539 = OpUndef %v3uint
        %540 = OpUndef %v4float
        %541 = OpUndef %mat4v4float
        %542 = OpUndef %v3float
        %543 = OpConstantComposite %v4float %float_0 %459 %459 %459
%float_0_886227548 = OpConstant %float 0.886227548
   %float_66 = OpConstant %float 66
  %float_120 = OpConstant %float 120
  %float_148 = OpConstant %float 148
  %float_167 = OpConstant %float 167
        %549 = OpUndef %float
        %550 = OpUndef %v3uint
        %551 = OpUndef %v4float
        %552 = OpUndef %v3float
        %553 = OpUndef %v2float
        %554 = OpConstantComposite %v3float %459 %459 %459
        %555 = OpConstantComposite %v3bool %true %true %true
        %556 = OpConstantComposite %v3bool %false %false %false
        %557 = OpConstantComposite %v2float %459 %float_0
  %uint_8194 = OpConstant %uint 8194
%float_1_53787023en05 = OpConstant %float 1.53787023e-05
        %560 = OpConstantComposite %v2float %459 %459
%uint_2130706432 = OpConstant %uint 2130706432
    %uint_23 = OpConstant %uint 23
    %uint_30 = OpConstant %uint 30
    %uint_27 = OpConstant %uint 27
    %uint_28 = OpConstant %uint 28
    %uint_29 = OpConstant %uint 29
    %uint_39 = OpConstant %uint 39
    %uint_38 = OpConstant %uint 38
    %uint_33 = OpConstant %uint 33
    %uint_34 = OpConstant %uint 34
    %uint_35 = OpConstant %uint 35
    %uint_36 = OpConstant %uint 36
    %uint_37 = OpConstant %uint 37
    %uint_13 = OpConstant %uint 13
    %uint_21 = OpConstant %uint 21

               ; Function MainPS
     %MainPS = OpFunction %void None %441
        %576 = OpLabel
        %577 = OpVariable %_ptr_Function__arr_v3float_uint_4 Function
        %578 = OpVariable %_ptr_Function__arr_v3float_uint_4 Function
        %579 = OpLoad %v4float %in_var_TEXCOORD11_centroid
        %580 = OpLoad %uint %in_var_PRIMITIVE_ID
        %581 = OpLoad %v3float %in_var_TEXCOORD9
        %582 = OpLoad %v4float %gl_FragCoord
        %583 = OpCompositeExtract %float %582 3
        %584 = OpFDiv %float %float_1 %583
        %585 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_0
        %586 = OpLoad %mat4v4float %585
        %587 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_1
        %588 = OpLoad %mat4v4float %587
        %589 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_2
        %590 = OpLoad %mat4v4float %589
        %591 = OpAccessChain %_ptr_Uniform_v3float %View %uint_3
        %592 = OpLoad %v3float %591
        %593 = OpAccessChain %_ptr_Uniform_v3float %View %uint_4
        %594 = OpLoad %v3float %593
        %595 = OpAccessChain %_ptr_Uniform_v4float %View %uint_6
        %596 = OpLoad %v4float %595
        %597 = OpAccessChain %_ptr_Uniform_v3float %View %uint_7
        %598 = OpLoad %v3float %597
        %599 = OpAccessChain %_ptr_Uniform_v3float %View %uint_8
        %600 = OpLoad %v3float %599
        %601 = OpAccessChain %_ptr_Uniform_v4float %View %uint_9
        %602 = OpLoad %v4float %601
        %603 = OpAccessChain %_ptr_Uniform_v4float %View %uint_10
        %604 = OpLoad %v4float %603
        %605 = OpAccessChain %_ptr_Uniform_v4float %View %uint_12
        %606 = OpLoad %v4float %605
        %607 = OpAccessChain %_ptr_Uniform_float %View %uint_14
        %608 = OpLoad %float %607
        %609 = OpAccessChain %_ptr_Uniform_v4float %View %uint_15
        %610 = OpLoad %v4float %609
        %611 = OpAccessChain %_ptr_Uniform_v4float %View %uint_16
        %612 = OpLoad %v4float %611
        %613 = OpAccessChain %_ptr_Uniform_v2float %View %uint_17
        %614 = OpLoad %v2float %613
        %615 = OpAccessChain %_ptr_Uniform_v4float %View %uint_22
        %616 = OpLoad %v4float %615
        %617 = OpAccessChain %_ptr_Uniform_v3float %View %uint_23
        %618 = OpLoad %v3float %617
        %619 = OpFNegate %v3float %592
        %620 = OpVectorShuffle %v3float %579 %579 0 1 2
        %621 = OpVectorShuffle %v2float %582 %582 0 1
        %622 = OpVectorShuffle %v2float %602 %602 0 1
        %623 = OpFSub %v2float %621 %622
        %624 = OpVectorShuffle %v2float %604 %604 2 3
        %625 = OpExtInst %v2float %1 Fma %623 %624 %527
        %626 = OpFMul %v2float %625 %152
        %627 = OpCompositeExtract %float %626 0
        %628 = OpCompositeExtract %float %626 1
        %629 = OpCompositeConstruct %v4float %627 %628 %549 %float_1
        %630 = OpVectorTimesScalar %v4float %629 %584
        %631 = OpCompositeExtract %float %582 0
        %632 = OpCompositeExtract %float %582 1
        %633 = OpCompositeExtract %float %582 2
        %634 = OpCompositeConstruct %v4float %631 %632 %633 %float_1
        %635 = OpMatrixTimesVector %v4float %590 %634
        %636 = OpVectorShuffle %v3float %635 %635 0 1 2
        %637 = OpCompositeExtract %float %635 3
        %638 = OpCompositeConstruct %v3float %637 %637 %637
        %639 = OpFDiv %v3float %636 %638
        %640 = OpFSub %v3float %639 %600
        %641 = OpFSub %v3float %581 %600
        %642 = OpVectorShuffle %v2float %630 %630 0 1
        %643 = OpCompositeExtract %float %630 3
        %644 = OpCompositeConstruct %v2float %643 %643
        %645 = OpFDiv %v2float %642 %644
        %646 = OpVectorShuffle %v2float %596 %596 0 1
        %647 = OpVectorShuffle %v2float %596 %596 3 2
        %648 = OpExtInst %v2float %1 Fma %645 %646 %647
        %649 = OpCompositeExtract %float %588 3 3
        %650 = OpFOrdGreaterThanEqual %bool %649 %float_1
               OpSelectionMerge %651 None
               OpBranchConditional %650 %652 %653
        %653 = OpLabel
        %654 = OpFNegate %v3float %639
        %655 = OpExtInst %v3float %1 Normalize %654
               OpBranch %651
        %652 = OpLabel
        %656 = OpFNegate %v3float %594
               OpBranch %651
        %651 = OpLabel
        %657 = OpPhi %v3float %655 %653 %656 %652
        %658 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_4
        %659 = OpLoad %v4float %658
        %660 = OpCompositeExtract %float %659 0
        %661 = OpCompositeExtract %float %659 1
        %662 = OpCompositeExtract %float %659 2
        %663 = OpCompositeConstruct %v3float %660 %661 %662
        %664 = OpFMul %v3float %592 %503
        %665 = OpFNegate %v3float %640
        %666 = OpExtInst %v3float %1 Fma %665 %134 %663
        %667 = OpCompositeExtract %float %664 0
        %668 = OpCompositeExtract %float %666 0
        %669 = OpFMul %float %668 %float_4_76837158en07
        %670 = OpExtInst %float %1 Fma %668 %float_9_53674316en07 %667
        %671 = OpCompositeExtract %float %664 1
        %672 = OpCompositeExtract %float %666 1
        %673 = OpFMul %float %672 %float_4_76837158en07
        %674 = OpExtInst %float %1 Fma %672 %float_9_53674316en07 %671
        %675 = OpFMul %float %671 %674
        %676 = OpFMul %float %672 %673
        %677 = OpCompositeExtract %float %664 2
        %678 = OpCompositeExtract %float %666 2
        %679 = OpFMul %float %678 %float_4_76837158en07
        %680 = OpExtInst %float %1 Fma %678 %float_9_53674316en07 %677
        %681 = OpExtInst %float %1 Fma %667 %670 %675
        %682 = OpExtInst %float %1 Fma %668 %669 %676
        %683 = OpExtInst %float %1 Fma %677 %680 %681
        %684 = OpExtInst %float %1 Fma %678 %679 %682
        %685 = OpExtInst %float %1 Fma %684 %float_4_76837158en07 %683
        %686 = OpExtInst %float %1 Sqrt %685
        %687 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_1
        %688 = OpLoad %v4float %687
        %689 = OpCompositeExtract %float %688 0
        %690 = OpExtInst %float %1 NMax %float_9_99999975en06 %689
        %691 = OpFDiv %float %float_1 %690
        %692 = OpFMul %float %686 %691
        %693 = OpExtInst %float %1 Fma %692 %float_n2_097152e_11 %float_100000
        %694 = OpExtInst %float %1 FClamp %693 %float_0 %float_1
        %695 = OpExtInst %float %1 FMix %float_1 %float_0 %694
        %696 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_0
        %697 = OpLoad %float %696
        %698 = OpCompositeConstruct %v3float %697 %697 %697
        %699 = OpFMul %v3float %640 %698
        %700 = OpVectorTimesScalar %v3float %699 %float_4_76837158en07
        %701 = OpFAdd %v3float %700 %137
        %702 = OpExtInst %v3float %1 Fma %592 %698 %701
        %703 = OpExtInst %v3float %1 Floor %702
        %704 = OpFNegate %v3float %703
        %705 = OpExtInst %v3float %1 Fma %592 %698 %704
        %706 = OpVectorTimesScalar %v3float %705 %float_2097152
        %707 = OpExtInst %v3float %1 Fma %640 %698 %706
        %708 = OpVectorTimesScalar %v3float %707 %float_1
               OpBranch %709
        %709 = OpLabel
        %710 = OpPhi %v3float %708 %651 %711 %712
        %713 = OpPhi %float %float_1 %651 %714 %712
        %715 = OpPhi %float %float_0 %651 %716 %712
        %717 = OpPhi %uint %uint_0 %651 %718 %712
        %719 = OpULessThan %bool %717 %uint_6
               OpLoopMerge %720 %712 DontUnroll
               OpBranchConditional %719 %712 %720
        %712 = OpLabel
        %721 = OpFMul %v3float %710 %524
        %722 = OpExtInst %v3float %1 Fract %721
        %723 = OpVectorTimesScalar %v3float %722 %float_15
        %724 = OpExtInst %v3float %1 Fract %723
        %725 = OpFSub %v3float %723 %724
        %726 = OpCompositeExtract %float %724 0
        %727 = OpCompositeExtract %float %724 1
        %728 = OpCompositeExtract %float %724 2
        %729 = OpCompositeConstruct %v4float %726 %727 %728 %float_0
        %730 = OpFMul %v4float %729 %729
        %731 = OpFMul %v4float %730 %729
        %732 = OpVectorTimesScalar %v4float %729 %float_6
        %733 = OpFSub %v4float %732 %381
        %734 = OpExtInst %v4float %1 Fma %729 %733 %382
        %735 = OpFMul %v4float %731 %734
        %736 = OpVectorShuffle %v3float %735 %735 0 1 2
        %737 = OpFAdd %v3float %725 %736
        %738 = OpLoad %type_3d_image_0 %View_PerlinNoise3DTexture
        %739 = OpLoad %type_sampler %View_PerlinNoise3DTextureSampler
        %740 = OpExtInst %v3float %1 Fma %737 %525 %461
        %741 = OpSampledImage %type_sampled_image_0 %738 %739
        %742 = OpImageSampleExplicitLod %v4float %741 %740 Lod %float_0
        %743 = OpVectorShuffle %v3float %742 %742 0 1 2
        %744 = OpVectorTimesScalar %v3float %743 %float_255
        %745 = OpExtInst %v3float %1 Fma %744 %526 %278
        %746 = OpCompositeExtract %float %742 3
        %747 = OpExtInst %float %1 Fma %746 %float_255 %float_n127
        %748 = OpDot %float %723 %745
        %749 = OpFSub %float %748 %747
        %750 = OpExtInst %float %1 FAbs %749
        %716 = OpExtInst %float %1 Fma %750 %713 %715
        %711 = OpVectorTimesScalar %v3float %710 %float_2
        %714 = OpFMul %float %713 %float_0_5
        %718 = OpIAdd %uint %717 %uint_1
               OpBranch %709
        %720 = OpLabel
        %751 = OpExtInst %float %1 FMix %float_n1 %float_1 %715
        %752 = OpExtInst %float %1 FClamp %751 %float_0 %float_1
        %753 = OpExtInst %v3float %1 Fma %592 %134 %664
        %754 = OpFMul %v3float %640 %503
        %755 = OpExtInst %v3float %1 Fma %598 %134 %754
        %756 = OpVectorTimesScalar %v3float %753 %float_2097152
        %757 = OpFAdd %v3float %756 %755
        %758 = OpExtInst %float %1 Length %757
        %759 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_0
        %760 = OpLoad %v4float %759
        %761 = OpCompositeExtract %float %760 0
        %762 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_1
        %763 = OpLoad %float %762
        %764 = OpFMul %float %761 %763
        %765 = OpExtInst %float %1 NMax %float_9_99999975en06 %764
        %766 = OpFDiv %float %float_1 %765
        %767 = OpFNegate %float %758
        %768 = OpExtInst %float %1 Fma %767 %766 %float_1
        %769 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_3 %int_1
        %770 = OpLoad %float %769
        %771 = OpFMul %float %768 %770
        %772 = OpExtInst %float %1 FClamp %771 %float_0 %float_1
        %773 = OpExtInst %float %1 FMix %752 %float_1 %772
        %774 = OpFAdd %v3float %592 %619
        %775 = OpVectorTimesScalar %v3float %774 %float_2097152
        %776 = OpFAdd %v3float %775 %639
               OpBranch %777
        %777 = OpLabel
        %778 = OpPhi %v3uint %539 %720 %779 %780
        %781 = OpPhi %uint %uint_0 %720 %782 %780
        %783 = OpPhi %float %float_0 %720 %784 %780
        %785 = OpAccessChain %_ptr_Uniform_uint %View %uint_31
        %786 = OpLoad %uint %785
        %787 = OpULessThan %bool %781 %786
               OpLoopMerge %788 %780 None
               OpBranchConditional %787 %789 %788
        %789 = OpLabel
        %790 = OpAccessChain %_ptr_Uniform_v4float %View %uint_26 %781
        %791 = OpLoad %v4float %790
        %792 = OpVectorShuffle %v3float %791 %791 0 1 2
        %793 = OpVectorShuffle %v3float %791 %791 3 3 3
        %794 = OpFSub %v3float %776 %792
        %795 = OpFAdd %v3float %794 %793
        %796 = OpExtInst %v3float %1 NMax %795 %102
        %797 = OpFAdd %v3float %792 %793
        %798 = OpFSub %v3float %797 %776
        %799 = OpExtInst %v3float %1 NMax %798 %102
        %800 = OpExtInst %v3float %1 NMin %796 %799
        %801 = OpCompositeExtract %float %800 0
        %802 = OpCompositeExtract %float %800 1
        %803 = OpCompositeExtract %float %800 2
        %804 = OpExtInst %float %1 NMin %802 %803
        %805 = OpExtInst %float %1 NMin %801 %804
        %806 = OpAccessChain %_ptr_Uniform_float %View %uint_26 %781 %int_3
        %807 = OpLoad %float %806
        %808 = OpAccessChain %_ptr_Uniform_float %View %uint_30
        %809 = OpLoad %float %808
        %810 = OpFMul %float %807 %809
        %784 = OpFMul %float %float_8 %810
        %811 = OpFOrdGreaterThan %bool %805 %810
               OpSelectionMerge %812 None
               OpBranchConditional %811 %813 %812
        %813 = OpLabel
        %814 = OpAccessChain %_ptr_Uniform_v4float %View %uint_27 %781
        %815 = OpLoad %v4float %814
        %816 = OpVectorShuffle %v3float %815 %815 3 3 3
        %817 = OpVectorShuffle %v3float %815 %815 0 1 2
        %818 = OpExtInst %v3float %1 Fma %776 %816 %817
        %819 = OpExtInst %v3float %1 Fract %818
        %820 = OpExtInst %v3float %1 Fract %819
        %821 = OpExtInst %v3float %1 FClamp %820 %102 %127
        %822 = OpAccessChain %_ptr_Uniform_int %View %uint_28
        %823 = OpLoad %int %822
        %824 = OpConvertSToF %float %823
        %825 = OpVectorTimesScalar %v3float %821 %824
        %826 = OpBitcast %uint %823
        %827 = OpIMul %uint %781 %826
        %828 = OpBitcast %int %827
        %829 = OpCompositeConstruct %v3int %int_0 %int_0 %828
        %830 = OpConvertSToF %v3float %829
        %831 = OpFAdd %v3float %825 %830
        %832 = OpCompositeExtract %float %831 0
        %833 = OpCompositeExtract %float %831 1
        %834 = OpCompositeExtract %float %831 2
        %835 = OpConvertFToS %int %832
        %836 = OpConvertFToS %int %833
        %837 = OpConvertFToS %int %834
        %838 = OpCompositeConstruct %v4int %835 %836 %837 %int_0
        %839 = OpVectorShuffle %v3int %838 %838 0 1 2
        %840 = OpLoad %type_3d_image %View_GlobalDistanceFieldPageTableTexture
        %841 = OpImageFetch %v4uint %840 %839 Lod %int_0
        %842 = OpCompositeExtract %uint %841 0
        %843 = OpBitwiseAnd %uint %842 %uint_16777215
        %844 = OpULessThan %bool %842 %uint_4294967295
               OpSelectionMerge %845 None
               OpBranchConditional %844 %846 %845
        %846 = OpLabel
        %847 = OpBitwiseAnd %uint %843 %uint_127
        %848 = OpCompositeInsert %v3uint %847 %778 0
        %849 = OpShiftRightLogical %uint %843 %uint_7
        %850 = OpBitwiseAnd %uint %849 %uint_127
        %851 = OpCompositeInsert %v3uint %850 %848 1
        %852 = OpShiftRightLogical %uint %843 %uint_14
        %853 = OpCompositeInsert %v3uint %852 %851 2
        %854 = OpVectorTimesScalar %v3float %820 %824
        %855 = OpExtInst %v3float %1 Fract %854
        %856 = OpIMul %v3uint %853 %353
        %857 = OpConvertUToF %v3float %856
        %858 = OpVectorTimesScalar %v3float %855 %float_7
        %859 = OpFAdd %v3float %857 %858
        %860 = OpFAdd %v3float %859 %137
        %861 = OpAccessChain %_ptr_Uniform_v3float %View %uint_29
        %862 = OpLoad %v3float %861
        %863 = OpFMul %v3float %860 %862
        %864 = OpLoad %type_3d_image_0 %View_GlobalDistanceFieldPageAtlasTexture
        %865 = OpLoad %type_sampler %View_SharedTrilinearWrappedSampler
        %866 = OpSampledImage %type_sampled_image_0 %864 %865
        %867 = OpImageSampleExplicitLod %v4float %866 %863 Lod %float_0
        %868 = OpCompositeExtract %float %867 0
        %869 = OpFOrdLessThan %bool %868 %float_1
               OpSelectionMerge %870 None
               OpBranchConditional %869 %871 %870
        %871 = OpLabel
        %872 = OpExtInst %float %1 Fma %868 %float_2 %float_n1
        %873 = OpFMul %float %872 %784
               OpBranch %788
        %870 = OpLabel
               OpBranch %845
        %845 = OpLabel
        %874 = OpPhi %v3uint %778 %813 %853 %870
               OpBranch %812
        %812 = OpLabel
        %779 = OpPhi %v3uint %778 %789 %874 %845
               OpBranch %780
        %780 = OpLabel
        %782 = OpIAdd %uint %781 %uint_1
               OpBranch %777
        %788 = OpLabel
        %875 = OpPhi %float %783 %777 %873 %871
        %876 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_3 %int_3
        %877 = OpLoad %float %876
        %878 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_4 %int_0
        %879 = OpLoad %float %878
        %880 = OpFNegate %float %879
        %881 = OpExtInst %float %1 Fma %875 %877 %880
        %882 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_4 %int_3
        %883 = OpLoad %float %882
        %884 = OpFMul %float %881 %883
        %885 = OpExtInst %float %1 Fma %884 %float_n1 %float_1
        %886 = OpExtInst %float %1 FClamp %885 %float_0 %float_1
               OpBranch %887
        %887 = OpLabel
        %888 = OpPhi %v3uint %539 %788 %889 %890
        %891 = OpPhi %uint %uint_0 %788 %892 %890
        %893 = OpULessThan %bool %891 %786
               OpLoopMerge %894 %890 None
               OpBranchConditional %893 %895 %894
        %895 = OpLabel
        %896 = OpAccessChain %_ptr_Uniform_v4float %View %uint_26 %891
        %897 = OpAccessChain %_ptr_Uniform_float %View %uint_26 %891 %int_3
        %898 = OpLoad %float %897
        %899 = OpAccessChain %_ptr_Uniform_float %View %uint_30
        %900 = OpLoad %float %899
        %901 = OpFMul %float %898 %900
        %902 = OpLoad %v4float %896
        %903 = OpVectorShuffle %v3float %902 %902 0 1 2
        %904 = OpVectorShuffle %v3float %902 %902 3 3 3
        %905 = OpFSub %v3float %776 %903
        %906 = OpFAdd %v3float %905 %904
        %907 = OpExtInst %v3float %1 NMax %906 %102
        %908 = OpFAdd %v3float %903 %904
        %909 = OpFSub %v3float %908 %776
        %910 = OpExtInst %v3float %1 NMax %909 %102
        %911 = OpExtInst %v3float %1 NMin %907 %910
        %912 = OpCompositeExtract %float %911 0
        %913 = OpCompositeExtract %float %911 1
        %914 = OpCompositeExtract %float %911 2
        %915 = OpExtInst %float %1 NMin %913 %914
        %916 = OpExtInst %float %1 NMin %912 %915
        %917 = OpFOrdGreaterThanEqual %bool %916 %901
               OpSelectionMerge %918 None
               OpBranchConditional %917 %919 %918
        %919 = OpLabel
        %920 = OpAccessChain %_ptr_Uniform_v4float %View %uint_27 %891
        %921 = OpLoad %v4float %920
        %922 = OpVectorShuffle %v3float %921 %921 3 3 3
        %923 = OpVectorShuffle %v3float %921 %921 0 1 2
        %924 = OpExtInst %v3float %1 Fma %776 %922 %923
        %925 = OpExtInst %v3float %1 Fract %924
        %926 = OpExtInst %v3float %1 Fract %925
        %927 = OpExtInst %v3float %1 FClamp %926 %102 %127
        %928 = OpAccessChain %_ptr_Uniform_int %View %uint_28
        %929 = OpLoad %int %928
        %930 = OpConvertSToF %float %929
        %931 = OpVectorTimesScalar %v3float %927 %930
        %932 = OpBitcast %uint %929
        %933 = OpIMul %uint %891 %932
        %934 = OpBitcast %int %933
        %935 = OpCompositeConstruct %v3int %int_0 %int_0 %934
        %936 = OpConvertSToF %v3float %935
        %937 = OpFAdd %v3float %931 %936
        %938 = OpCompositeExtract %float %937 0
        %939 = OpCompositeExtract %float %937 1
        %940 = OpCompositeExtract %float %937 2
        %941 = OpConvertFToS %int %938
        %942 = OpConvertFToS %int %939
        %943 = OpConvertFToS %int %940
        %944 = OpCompositeConstruct %v4int %941 %942 %943 %int_0
        %945 = OpVectorShuffle %v3int %944 %944 0 1 2
        %946 = OpLoad %type_3d_image %View_GlobalDistanceFieldPageTableTexture
        %947 = OpImageFetch %v4uint %946 %945 Lod %int_0
        %948 = OpCompositeExtract %uint %947 0
        %949 = OpBitwiseAnd %uint %948 %uint_16777215
        %950 = OpULessThan %bool %948 %uint_4294967295
               OpSelectionMerge %951 None
               OpBranchConditional %950 %952 %951
        %952 = OpLabel
        %953 = OpBitwiseAnd %uint %949 %uint_127
        %954 = OpCompositeInsert %v3uint %953 %888 0
        %955 = OpShiftRightLogical %uint %949 %uint_7
        %956 = OpBitwiseAnd %uint %955 %uint_127
        %957 = OpCompositeInsert %v3uint %956 %954 1
        %958 = OpShiftRightLogical %uint %949 %uint_14
        %959 = OpCompositeInsert %v3uint %958 %957 2
        %960 = OpVectorTimesScalar %v3float %926 %930
        %961 = OpExtInst %v3float %1 Fract %960
        %962 = OpIMul %v3uint %959 %353
        %963 = OpConvertUToF %v3float %962
        %964 = OpVectorTimesScalar %v3float %961 %float_7
        %965 = OpFAdd %v3float %963 %964
        %966 = OpFAdd %v3float %965 %137
        %967 = OpAccessChain %_ptr_Uniform_v3float %View %uint_29
        %968 = OpLoad %v3float %967
        %969 = OpFMul %v3float %966 %968
        %970 = OpLoad %type_3d_image_0 %View_GlobalDistanceFieldPageAtlasTexture
        %971 = OpLoad %type_sampler %View_SharedTrilinearWrappedSampler
        %972 = OpSampledImage %type_sampled_image_0 %970 %971
        %973 = OpImageSampleExplicitLod %v4float %972 %969 Lod %float_0
        %974 = OpCompositeExtract %float %973 0
        %975 = OpFOrdLessThan %bool %974 %float_0_899999976
               OpSelectionMerge %976 None
               OpBranchConditional %975 %977 %976
        %977 = OpLabel
        %978 = OpFMul %float %float_0_5 %900
        %979 = OpCompositeConstruct %v3float %978 %float_0 %float_0
        %980 = OpFAdd %v3float %926 %979
        %981 = OpExtInst %v3float %1 Fract %980
        %982 = OpExtInst %v3float %1 FClamp %981 %102 %127
        %983 = OpVectorTimesScalar %v3float %982 %930
        %984 = OpFAdd %v3float %983 %936
        %985 = OpCompositeExtract %float %984 0
        %986 = OpCompositeExtract %float %984 1
        %987 = OpCompositeExtract %float %984 2
        %988 = OpConvertFToS %int %985
        %989 = OpConvertFToS %int %986
        %990 = OpConvertFToS %int %987
        %991 = OpCompositeConstruct %v4int %988 %989 %990 %int_0
        %992 = OpVectorShuffle %v3int %991 %991 0 1 2
        %993 = OpImageFetch %v4uint %946 %992 Lod %int_0
        %994 = OpCompositeExtract %uint %993 0
        %995 = OpBitwiseAnd %uint %994 %uint_16777215
        %996 = OpULessThan %bool %994 %uint_4294967295
               OpSelectionMerge %997 None
               OpBranchConditional %996 %998 %997
        %998 = OpLabel
        %999 = OpBitwiseAnd %uint %995 %uint_127
       %1000 = OpCompositeInsert %v3uint %999 %539 0
       %1001 = OpShiftRightLogical %uint %995 %uint_7
       %1002 = OpBitwiseAnd %uint %1001 %uint_127
       %1003 = OpCompositeInsert %v3uint %1002 %1000 1
       %1004 = OpShiftRightLogical %uint %995 %uint_14
       %1005 = OpCompositeInsert %v3uint %1004 %1003 2
       %1006 = OpVectorTimesScalar %v3float %981 %930
       %1007 = OpExtInst %v3float %1 Fract %1006
       %1008 = OpIMul %v3uint %1005 %353
       %1009 = OpConvertUToF %v3float %1008
       %1010 = OpVectorTimesScalar %v3float %1007 %float_7
       %1011 = OpFAdd %v3float %1009 %1010
       %1012 = OpFAdd %v3float %1011 %137
       %1013 = OpFMul %v3float %1012 %968
       %1014 = OpSampledImage %type_sampled_image_0 %970 %971
       %1015 = OpImageSampleExplicitLod %v4float %1014 %1013 Lod %float_0
       %1016 = OpCompositeExtract %float %1015 0
               OpBranch %997
        %997 = OpLabel
       %1017 = OpPhi %float %float_1 %977 %1016 %998
       %1018 = OpFMul %float %900 %float_n0_5
       %1019 = OpCompositeConstruct %v3float %1018 %float_0 %float_0
       %1020 = OpFAdd %v3float %926 %1019
       %1021 = OpExtInst %v3float %1 Fract %1020
       %1022 = OpExtInst %v3float %1 FClamp %1021 %102 %127
       %1023 = OpVectorTimesScalar %v3float %1022 %930
       %1024 = OpFAdd %v3float %1023 %936
       %1025 = OpCompositeExtract %float %1024 0
       %1026 = OpCompositeExtract %float %1024 1
       %1027 = OpCompositeExtract %float %1024 2
       %1028 = OpConvertFToS %int %1025
       %1029 = OpConvertFToS %int %1026
       %1030 = OpConvertFToS %int %1027
       %1031 = OpCompositeConstruct %v4int %1028 %1029 %1030 %int_0
       %1032 = OpVectorShuffle %v3int %1031 %1031 0 1 2
       %1033 = OpImageFetch %v4uint %946 %1032 Lod %int_0
       %1034 = OpCompositeExtract %uint %1033 0
       %1035 = OpBitwiseAnd %uint %1034 %uint_16777215
       %1036 = OpULessThan %bool %1034 %uint_4294967295
               OpSelectionMerge %1037 None
               OpBranchConditional %1036 %1038 %1037
       %1038 = OpLabel
       %1039 = OpBitwiseAnd %uint %1035 %uint_127
       %1040 = OpCompositeInsert %v3uint %1039 %539 0
       %1041 = OpShiftRightLogical %uint %1035 %uint_7
       %1042 = OpBitwiseAnd %uint %1041 %uint_127
       %1043 = OpCompositeInsert %v3uint %1042 %1040 1
       %1044 = OpShiftRightLogical %uint %1035 %uint_14
       %1045 = OpCompositeInsert %v3uint %1044 %1043 2
       %1046 = OpVectorTimesScalar %v3float %1021 %930
       %1047 = OpExtInst %v3float %1 Fract %1046
       %1048 = OpIMul %v3uint %1045 %353
       %1049 = OpConvertUToF %v3float %1048
       %1050 = OpVectorTimesScalar %v3float %1047 %float_7
       %1051 = OpFAdd %v3float %1049 %1050
       %1052 = OpFAdd %v3float %1051 %137
       %1053 = OpFMul %v3float %1052 %968
       %1054 = OpSampledImage %type_sampled_image_0 %970 %971
       %1055 = OpImageSampleExplicitLod %v4float %1054 %1053 Lod %float_0
       %1056 = OpCompositeExtract %float %1055 0
               OpBranch %1037
       %1037 = OpLabel
       %1057 = OpPhi %float %float_1 %997 %1056 %1038
       %1058 = OpCompositeConstruct %v3float %float_0 %978 %float_0
       %1059 = OpFAdd %v3float %926 %1058
       %1060 = OpExtInst %v3float %1 Fract %1059
       %1061 = OpExtInst %v3float %1 FClamp %1060 %102 %127
       %1062 = OpVectorTimesScalar %v3float %1061 %930
       %1063 = OpFAdd %v3float %1062 %936
       %1064 = OpCompositeExtract %float %1063 0
       %1065 = OpCompositeExtract %float %1063 1
       %1066 = OpCompositeExtract %float %1063 2
       %1067 = OpConvertFToS %int %1064
       %1068 = OpConvertFToS %int %1065
       %1069 = OpConvertFToS %int %1066
       %1070 = OpCompositeConstruct %v4int %1067 %1068 %1069 %int_0
       %1071 = OpVectorShuffle %v3int %1070 %1070 0 1 2
       %1072 = OpImageFetch %v4uint %946 %1071 Lod %int_0
       %1073 = OpCompositeExtract %uint %1072 0
       %1074 = OpBitwiseAnd %uint %1073 %uint_16777215
       %1075 = OpULessThan %bool %1073 %uint_4294967295
               OpSelectionMerge %1076 None
               OpBranchConditional %1075 %1077 %1076
       %1077 = OpLabel
       %1078 = OpBitwiseAnd %uint %1074 %uint_127
       %1079 = OpCompositeInsert %v3uint %1078 %539 0
       %1080 = OpShiftRightLogical %uint %1074 %uint_7
       %1081 = OpBitwiseAnd %uint %1080 %uint_127
       %1082 = OpCompositeInsert %v3uint %1081 %1079 1
       %1083 = OpShiftRightLogical %uint %1074 %uint_14
       %1084 = OpCompositeInsert %v3uint %1083 %1082 2
       %1085 = OpVectorTimesScalar %v3float %1060 %930
       %1086 = OpExtInst %v3float %1 Fract %1085
       %1087 = OpIMul %v3uint %1084 %353
       %1088 = OpConvertUToF %v3float %1087
       %1089 = OpVectorTimesScalar %v3float %1086 %float_7
       %1090 = OpFAdd %v3float %1088 %1089
       %1091 = OpFAdd %v3float %1090 %137
       %1092 = OpFMul %v3float %1091 %968
       %1093 = OpSampledImage %type_sampled_image_0 %970 %971
       %1094 = OpImageSampleExplicitLod %v4float %1093 %1092 Lod %float_0
       %1095 = OpCompositeExtract %float %1094 0
               OpBranch %1076
       %1076 = OpLabel
       %1096 = OpPhi %float %float_1 %1037 %1095 %1077
       %1097 = OpCompositeConstruct %v3float %float_0 %1018 %float_0
       %1098 = OpFAdd %v3float %926 %1097
       %1099 = OpExtInst %v3float %1 Fract %1098
       %1100 = OpExtInst %v3float %1 FClamp %1099 %102 %127
       %1101 = OpVectorTimesScalar %v3float %1100 %930
       %1102 = OpFAdd %v3float %1101 %936
       %1103 = OpCompositeExtract %float %1102 0
       %1104 = OpCompositeExtract %float %1102 1
       %1105 = OpCompositeExtract %float %1102 2
       %1106 = OpConvertFToS %int %1103
       %1107 = OpConvertFToS %int %1104
       %1108 = OpConvertFToS %int %1105
       %1109 = OpCompositeConstruct %v4int %1106 %1107 %1108 %int_0
       %1110 = OpVectorShuffle %v3int %1109 %1109 0 1 2
       %1111 = OpImageFetch %v4uint %946 %1110 Lod %int_0
       %1112 = OpCompositeExtract %uint %1111 0
       %1113 = OpBitwiseAnd %uint %1112 %uint_16777215
       %1114 = OpULessThan %bool %1112 %uint_4294967295
               OpSelectionMerge %1115 None
               OpBranchConditional %1114 %1116 %1115
       %1116 = OpLabel
       %1117 = OpBitwiseAnd %uint %1113 %uint_127
       %1118 = OpCompositeInsert %v3uint %1117 %539 0
       %1119 = OpShiftRightLogical %uint %1113 %uint_7
       %1120 = OpBitwiseAnd %uint %1119 %uint_127
       %1121 = OpCompositeInsert %v3uint %1120 %1118 1
       %1122 = OpShiftRightLogical %uint %1113 %uint_14
       %1123 = OpCompositeInsert %v3uint %1122 %1121 2
       %1124 = OpVectorTimesScalar %v3float %1099 %930
       %1125 = OpExtInst %v3float %1 Fract %1124
       %1126 = OpIMul %v3uint %1123 %353
       %1127 = OpConvertUToF %v3float %1126
       %1128 = OpVectorTimesScalar %v3float %1125 %float_7
       %1129 = OpFAdd %v3float %1127 %1128
       %1130 = OpFAdd %v3float %1129 %137
       %1131 = OpFMul %v3float %1130 %968
       %1132 = OpSampledImage %type_sampled_image_0 %970 %971
       %1133 = OpImageSampleExplicitLod %v4float %1132 %1131 Lod %float_0
       %1134 = OpCompositeExtract %float %1133 0
               OpBranch %1115
       %1115 = OpLabel
       %1135 = OpPhi %float %float_1 %1076 %1134 %1116
       %1136 = OpFSub %float %1017 %1057
       %1137 = OpFSub %float %1096 %1135
       %1138 = OpCompositeConstruct %v3float %1136 %1137 %549
       %1139 = OpFMul %float %901 %float_16
       %1140 = OpFMul %float %float_128 %900
       %1141 = OpVectorTimesScalar %v3float %1138 %1139
       %1142 = OpFMul %float %898 %1140
       %1143 = OpCompositeConstruct %v3float %1142 %1142 %1142
       %1144 = OpFDiv %v3float %1141 %1143
               OpBranch %894
        %976 = OpLabel
               OpBranch %951
        %951 = OpLabel
       %1145 = OpPhi %v3uint %888 %919 %959 %976
               OpBranch %918
        %918 = OpLabel
        %889 = OpPhi %v3uint %888 %895 %1145 %951
               OpBranch %890
        %890 = OpLabel
        %892 = OpIAdd %uint %891 %uint_1
               OpBranch %887
        %894 = OpLabel
       %1146 = OpPhi %v3float %338 %887 %1144 %1115
       %1147 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_5 %int_1
       %1148 = OpLoad %float %1147
       %1149 = OpCompositeConstruct %v3float %1148 %1148 %1148
       %1150 = OpExtInst %v3float %1 Fma %1146 %1149 %641
       %1151 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_5 %int_2
       %1152 = OpLoad %float %1151
       %1153 = OpCompositeConstruct %v3float %1152 %1152 %1152
       %1154 = OpFMul %v3float %592 %1153
       %1155 = OpFMul %v3float %1150 %1153
       %1156 = OpAccessChain %_ptr_Uniform_float %View %uint_19
       %1157 = OpLoad %float %1156
       %1158 = OpCompositeExtract %float %760 2
       %1159 = OpCompositeExtract %float %760 3
       %1160 = OpExtInst %float %1 FMix %1157 %1158 %1159
       %1161 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_6 %int_0
       %1162 = OpLoad %float %1161
       %1163 = OpFMul %float %1160 %1162
       %1164 = OpCompositeConstruct %v2float %1163 %1163
       %1165 = OpFAdd %v2float %1164 %275
       %1166 = OpCompositeExtract %float %1154 0
       %1167 = OpCompositeExtract %float %1155 0
       %1168 = OpCompositeExtract %float %1154 1
       %1169 = OpCompositeExtract %float %1155 1
       %1170 = OpCompositeExtract %float %1165 0
       %1171 = OpCompositeConstruct %v3float %1166 %1168 %float_0
       %1172 = OpCompositeConstruct %v3float %1167 %1169 %1170
       %1173 = OpVectorTimesScalar %v3float %1172 %float_4_76837158en07
       %1174 = OpFAdd %v3float %1173 %137
       %1175 = OpFAdd %v3float %1171 %1174
       %1176 = OpExtInst %v3float %1 Floor %1175
       %1177 = OpFSub %v3float %1171 %1176
       %1178 = OpVectorTimesScalar %v3float %1177 %float_2097152
       %1179 = OpFAdd %v3float %1178 %1172
       %1180 = OpVectorTimesScalar %v3float %1179 %float_1
               OpBranch %1181
       %1181 = OpLabel
       %1182 = OpPhi %v3float %1180 %894 %1183 %1184
       %1185 = OpPhi %float %float_1 %894 %1186 %1184
       %1187 = OpPhi %float %float_0 %894 %1188 %1184
       %1189 = OpPhi %uint %uint_0 %894 %1190 %1184
       %1191 = OpULessThan %bool %1189 %uint_10
               OpLoopMerge %1192 %1184 DontUnroll
               OpBranchConditional %1191 %1184 %1192
       %1184 = OpLabel
       %1193 = OpExtInst %v3float %1 Fract %1182
       %1194 = OpExtInst %v3float %1 Floor %1182
       %1195 = OpDot %float %1194 %385
       %1196 = OpFAdd %float %1195 %float_19
       %1197 = OpFAdd %float %1195 %float_47
       %1198 = OpFAdd %float %1195 %float_66
       %1199 = OpFAdd %float %1195 %float_101
       %1200 = OpFAdd %float %1195 %float_120
       %1201 = OpFAdd %float %1195 %float_148
       %1202 = OpFAdd %float %1195 %float_167
       %1203 = OpConvertFToS %int %1195
       %1204 = OpCompositeConstruct %v3int %1203 %int_0 %int_0
       %1205 = OpBitcast %v3uint %1204
       %1206 = OpIMul %v3uint %1205 %401
       %1207 = OpIAdd %v3uint %1206 %403
       %1208 = OpCompositeExtract %uint %1207 1
       %1209 = OpCompositeExtract %uint %1207 2
       %1210 = OpIMul %uint %1208 %1209
       %1211 = OpCompositeExtract %uint %1207 0
       %1212 = OpIAdd %uint %1211 %1210
       %1213 = OpIMul %uint %1209 %1212
       %1214 = OpIAdd %uint %1208 %1213
       %1215 = OpIMul %uint %1212 %1214
       %1216 = OpIAdd %uint %1209 %1215
       %1217 = OpIMul %uint %1214 %1216
       %1218 = OpIAdd %uint %1212 %1217
       %1219 = OpCompositeInsert %v3uint %1218 %550 0
       %1220 = OpBitwiseAnd %v3uint %404 %405
       %1221 = OpShiftRightLogical %v3uint %1219 %1220
       %1222 = OpCompositeExtract %uint %1221 0
       %1223 = OpCompositeConstruct %v3uint %1222 %1222 %1222
       %1224 = OpBitwiseAnd %v3uint %1223 %386
       %1225 = OpConvertUToF %v3float %1224
       %1226 = OpExtInst %v3float %1 Fma %1225 %390 %278
       %1227 = OpDot %float %1226 %1193
       %1228 = OpConvertFToS %int %1196
       %1229 = OpFSub %v3float %1193 %350
       %1230 = OpCompositeConstruct %v3int %1228 %int_0 %int_0
       %1231 = OpBitcast %v3uint %1230
       %1232 = OpIMul %v3uint %1231 %401
       %1233 = OpIAdd %v3uint %1232 %403
       %1234 = OpCompositeExtract %uint %1233 1
       %1235 = OpCompositeExtract %uint %1233 2
       %1236 = OpIMul %uint %1234 %1235
       %1237 = OpCompositeExtract %uint %1233 0
       %1238 = OpIAdd %uint %1237 %1236
       %1239 = OpIMul %uint %1235 %1238
       %1240 = OpIAdd %uint %1234 %1239
       %1241 = OpIMul %uint %1238 %1240
       %1242 = OpIAdd %uint %1235 %1241
       %1243 = OpIMul %uint %1240 %1242
       %1244 = OpIAdd %uint %1238 %1243
       %1245 = OpCompositeInsert %v3uint %1244 %550 0
       %1246 = OpShiftRightLogical %v3uint %1245 %1220
       %1247 = OpCompositeExtract %uint %1246 0
       %1248 = OpCompositeConstruct %v3uint %1247 %1247 %1247
       %1249 = OpBitwiseAnd %v3uint %1248 %386
       %1250 = OpConvertUToF %v3float %1249
       %1251 = OpExtInst %v3float %1 Fma %1250 %390 %278
       %1252 = OpDot %float %1251 %1229
       %1253 = OpConvertFToS %int %1197
       %1254 = OpFSub %v3float %1193 %351
       %1255 = OpCompositeConstruct %v3int %1253 %int_0 %int_0
       %1256 = OpBitcast %v3uint %1255
       %1257 = OpIMul %v3uint %1256 %401
       %1258 = OpIAdd %v3uint %1257 %403
       %1259 = OpCompositeExtract %uint %1258 1
       %1260 = OpCompositeExtract %uint %1258 2
       %1261 = OpIMul %uint %1259 %1260
       %1262 = OpCompositeExtract %uint %1258 0
       %1263 = OpIAdd %uint %1262 %1261
       %1264 = OpIMul %uint %1260 %1263
       %1265 = OpIAdd %uint %1259 %1264
       %1266 = OpIMul %uint %1263 %1265
       %1267 = OpIAdd %uint %1260 %1266
       %1268 = OpIMul %uint %1265 %1267
       %1269 = OpIAdd %uint %1263 %1268
       %1270 = OpCompositeInsert %v3uint %1269 %550 0
       %1271 = OpShiftRightLogical %v3uint %1270 %1220
       %1272 = OpCompositeExtract %uint %1271 0
       %1273 = OpCompositeConstruct %v3uint %1272 %1272 %1272
       %1274 = OpBitwiseAnd %v3uint %1273 %386
       %1275 = OpConvertUToF %v3float %1274
       %1276 = OpExtInst %v3float %1 Fma %1275 %390 %278
       %1277 = OpDot %float %1276 %1254
       %1278 = OpConvertFToS %int %1198
       %1279 = OpFSub %v3float %1193 %134
       %1280 = OpCompositeConstruct %v3int %1278 %int_0 %int_0
       %1281 = OpBitcast %v3uint %1280
       %1282 = OpIMul %v3uint %1281 %401
       %1283 = OpIAdd %v3uint %1282 %403
       %1284 = OpCompositeExtract %uint %1283 1
       %1285 = OpCompositeExtract %uint %1283 2
       %1286 = OpIMul %uint %1284 %1285
       %1287 = OpCompositeExtract %uint %1283 0
       %1288 = OpIAdd %uint %1287 %1286
       %1289 = OpIMul %uint %1285 %1288
       %1290 = OpIAdd %uint %1284 %1289
       %1291 = OpIMul %uint %1288 %1290
       %1292 = OpIAdd %uint %1285 %1291
       %1293 = OpIMul %uint %1290 %1292
       %1294 = OpIAdd %uint %1288 %1293
       %1295 = OpCompositeInsert %v3uint %1294 %550 0
       %1296 = OpShiftRightLogical %v3uint %1295 %1220
       %1297 = OpCompositeExtract %uint %1296 0
       %1298 = OpCompositeConstruct %v3uint %1297 %1297 %1297
       %1299 = OpBitwiseAnd %v3uint %1298 %386
       %1300 = OpConvertUToF %v3float %1299
       %1301 = OpExtInst %v3float %1 Fma %1300 %390 %278
       %1302 = OpDot %float %1301 %1279
       %1303 = OpConvertFToS %int %1199
       %1304 = OpFSub %v3float %1193 %290
       %1305 = OpCompositeConstruct %v3int %1303 %int_0 %int_0
       %1306 = OpBitcast %v3uint %1305
       %1307 = OpIMul %v3uint %1306 %401
       %1308 = OpIAdd %v3uint %1307 %403
       %1309 = OpCompositeExtract %uint %1308 1
       %1310 = OpCompositeExtract %uint %1308 2
       %1311 = OpIMul %uint %1309 %1310
       %1312 = OpCompositeExtract %uint %1308 0
       %1313 = OpIAdd %uint %1312 %1311
       %1314 = OpIMul %uint %1310 %1313
       %1315 = OpIAdd %uint %1309 %1314
       %1316 = OpIMul %uint %1313 %1315
       %1317 = OpIAdd %uint %1310 %1316
       %1318 = OpIMul %uint %1315 %1317
       %1319 = OpIAdd %uint %1313 %1318
       %1320 = OpCompositeInsert %v3uint %1319 %550 0
       %1321 = OpShiftRightLogical %v3uint %1320 %1220
       %1322 = OpCompositeExtract %uint %1321 0
       %1323 = OpCompositeConstruct %v3uint %1322 %1322 %1322
       %1324 = OpBitwiseAnd %v3uint %1323 %386
       %1325 = OpConvertUToF %v3float %1324
       %1326 = OpExtInst %v3float %1 Fma %1325 %390 %278
       %1327 = OpDot %float %1326 %1304
       %1328 = OpConvertFToS %int %1200
       %1329 = OpFSub %v3float %1193 %139
       %1330 = OpCompositeConstruct %v3int %1328 %int_0 %int_0
       %1331 = OpBitcast %v3uint %1330
       %1332 = OpIMul %v3uint %1331 %401
       %1333 = OpIAdd %v3uint %1332 %403
       %1334 = OpCompositeExtract %uint %1333 1
       %1335 = OpCompositeExtract %uint %1333 2
       %1336 = OpIMul %uint %1334 %1335
       %1337 = OpCompositeExtract %uint %1333 0
       %1338 = OpIAdd %uint %1337 %1336
       %1339 = OpIMul %uint %1335 %1338
       %1340 = OpIAdd %uint %1334 %1339
       %1341 = OpIMul %uint %1338 %1340
       %1342 = OpIAdd %uint %1335 %1341
       %1343 = OpIMul %uint %1340 %1342
       %1344 = OpIAdd %uint %1338 %1343
       %1345 = OpCompositeInsert %v3uint %1344 %550 0
       %1346 = OpShiftRightLogical %v3uint %1345 %1220
       %1347 = OpCompositeExtract %uint %1346 0
       %1348 = OpCompositeConstruct %v3uint %1347 %1347 %1347
       %1349 = OpBitwiseAnd %v3uint %1348 %386
       %1350 = OpConvertUToF %v3float %1349
       %1351 = OpExtInst %v3float %1 Fma %1350 %390 %278
       %1352 = OpDot %float %1351 %1329
       %1353 = OpConvertFToS %int %1201
       %1354 = OpFSub %v3float %1193 %135
       %1355 = OpCompositeConstruct %v3int %1353 %int_0 %int_0
       %1356 = OpBitcast %v3uint %1355
       %1357 = OpIMul %v3uint %1356 %401
       %1358 = OpIAdd %v3uint %1357 %403
       %1359 = OpCompositeExtract %uint %1358 1
       %1360 = OpCompositeExtract %uint %1358 2
       %1361 = OpIMul %uint %1359 %1360
       %1362 = OpCompositeExtract %uint %1358 0
       %1363 = OpIAdd %uint %1362 %1361
       %1364 = OpIMul %uint %1360 %1363
       %1365 = OpIAdd %uint %1359 %1364
       %1366 = OpIMul %uint %1363 %1365
       %1367 = OpIAdd %uint %1360 %1366
       %1368 = OpIMul %uint %1365 %1367
       %1369 = OpIAdd %uint %1363 %1368
       %1370 = OpCompositeInsert %v3uint %1369 %550 0
       %1371 = OpShiftRightLogical %v3uint %1370 %1220
       %1372 = OpCompositeExtract %uint %1371 0
       %1373 = OpCompositeConstruct %v3uint %1372 %1372 %1372
       %1374 = OpBitwiseAnd %v3uint %1373 %386
       %1375 = OpConvertUToF %v3float %1374
       %1376 = OpExtInst %v3float %1 Fma %1375 %390 %278
       %1377 = OpDot %float %1376 %1354
       %1378 = OpConvertFToS %int %1202
       %1379 = OpFSub %v3float %1193 %127
       %1380 = OpCompositeConstruct %v3int %1378 %int_0 %int_0
       %1381 = OpBitcast %v3uint %1380
       %1382 = OpIMul %v3uint %1381 %401
       %1383 = OpIAdd %v3uint %1382 %403
       %1384 = OpCompositeExtract %uint %1383 1
       %1385 = OpCompositeExtract %uint %1383 2
       %1386 = OpIMul %uint %1384 %1385
       %1387 = OpCompositeExtract %uint %1383 0
       %1388 = OpIAdd %uint %1387 %1386
       %1389 = OpIMul %uint %1385 %1388
       %1390 = OpIAdd %uint %1384 %1389
       %1391 = OpIMul %uint %1388 %1390
       %1392 = OpIAdd %uint %1385 %1391
       %1393 = OpIMul %uint %1390 %1392
       %1394 = OpIAdd %uint %1388 %1393
       %1395 = OpCompositeInsert %v3uint %1394 %550 0
       %1396 = OpShiftRightLogical %v3uint %1395 %1220
       %1397 = OpCompositeExtract %uint %1396 0
       %1398 = OpCompositeConstruct %v3uint %1397 %1397 %1397
       %1399 = OpBitwiseAnd %v3uint %1398 %386
       %1400 = OpConvertUToF %v3float %1399
       %1401 = OpExtInst %v3float %1 Fma %1400 %390 %278
       %1402 = OpDot %float %1401 %1379
       %1403 = OpCompositeExtract %float %1193 0
       %1404 = OpCompositeExtract %float %1193 1
       %1405 = OpCompositeExtract %float %1193 2
       %1406 = OpCompositeConstruct %v4float %1403 %1404 %1405 %float_0
       %1407 = OpFMul %v4float %1406 %1406
       %1408 = OpFMul %v4float %1407 %1406
       %1409 = OpVectorTimesScalar %v4float %1406 %float_6
       %1410 = OpFSub %v4float %1409 %381
       %1411 = OpExtInst %v4float %1 Fma %1406 %1410 %382
       %1412 = OpFMul %v4float %1408 %1411
       %1413 = OpCompositeExtract %float %1412 0
       %1414 = OpExtInst %float %1 FMix %1227 %1252 %1413
       %1415 = OpExtInst %float %1 FMix %1277 %1302 %1413
       %1416 = OpCompositeExtract %float %1412 1
       %1417 = OpExtInst %float %1 FMix %1414 %1415 %1416
       %1418 = OpExtInst %float %1 FMix %1327 %1352 %1413
       %1419 = OpExtInst %float %1 FMix %1377 %1402 %1413
       %1420 = OpExtInst %float %1 FMix %1418 %1419 %1416
       %1421 = OpCompositeExtract %float %1412 2
       %1422 = OpExtInst %float %1 FMix %1417 %1420 %1421
       %1423 = OpExtInst %float %1 FAbs %1422
       %1188 = OpExtInst %float %1 Fma %1423 %1185 %1187
       %1183 = OpVectorTimesScalar %v3float %1182 %float_2
       %1186 = OpFMul %float %1185 %float_0_5
       %1190 = OpIAdd %uint %1189 %uint_1
               OpBranch %1181
       %1192 = OpLabel
       %1424 = OpExtInst %float %1 FMix %float_0 %float_1 %1187
       %1425 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_6 %int_1
       %1426 = OpLoad %float %1425
       %1427 = OpFNegate %float %886
       %1428 = OpExtInst %float %1 Fma %1427 %1426 %1424
       %1429 = OpExtInst %float %1 Fma %886 %1426 %float_1
       %1430 = OpExtInst %float %1 Fma %1427 %1426 %1429
       %1431 = OpFDiv %float %1428 %1430
       %1432 = OpExtInst %float %1 Fma %1431 %float_n1 %float_1
       %1433 = OpExtInst %float %1 FClamp %1432 %float_0 %float_1
       %1434 = OpFOrdLessThanEqual %bool %1433 %float_0
       %1435 = OpExtInst %float %1 Pow %1433 %float_2
       %1436 = OpSelect %float %1434 %float_0 %1435
       %1437 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_6 %int_3
       %1438 = OpLoad %float %1437
       %1439 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_6 %int_2
       %1440 = OpLoad %float %1439
       %1441 = OpExtInst %float %1 FMix %1438 %1440 %1436
       %1442 = OpExtInst %float %1 FClamp %1441 %float_0 %float_1
       %1443 = OpFMul %float %886 %1442
       %1444 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_7 %int_0
       %1445 = OpLoad %float %1444
       %1446 = OpCompositeConstruct %v3float %1445 %1445 %1445
       %1447 = OpFMul %v3float %592 %1446
       %1448 = OpFMul %v3float %641 %1446
       %1449 = OpVectorTimesScalar %v3float %1448 %float_4_76837158en07
       %1450 = OpFAdd %v3float %1449 %137
       %1451 = OpExtInst %v3float %1 Fma %592 %1446 %1450
       %1452 = OpExtInst %v3float %1 Floor %1451
       %1453 = OpFNegate %v3float %1452
       %1454 = OpExtInst %v3float %1 Fma %592 %1446 %1453
       %1455 = OpVectorTimesScalar %v3float %1454 %float_2097152
       %1456 = OpExtInst %v3float %1 Fma %641 %1446 %1455
       %1457 = OpVectorTimesScalar %v3float %1456 %float_1
               OpBranch %1458
       %1458 = OpLabel
       %1459 = OpPhi %v3float %542 %1192 %1460 %1461
       %1462 = OpPhi %v3float %1457 %1192 %1463 %1461
       %1464 = OpPhi %float %float_1 %1192 %1465 %1461
       %1466 = OpPhi %float %float_0 %1192 %1467 %1461
       %1468 = OpPhi %uint %uint_0 %1192 %1469 %1461
       %1470 = OpULessThan %bool %1468 %uint_1
               OpLoopMerge %1471 %1461 DontUnroll
               OpBranchConditional %1470 %1472 %1471
       %1472 = OpLabel
       %1473 = OpExtInst %v3float %1 Fract %1462
       %1474 = OpExtInst %v3float %1 Floor %1462
       %1475 = OpCompositeInsert %v3float %float_0 %1459 0
               OpBranch %1476
       %1476 = OpLabel
       %1477 = OpPhi %v4float %352 %1472 %1478 %1479
       %1460 = OpPhi %v3float %1475 %1472 %1480 %1479
       %1481 = OpCompositeExtract %float %1460 0
       %1482 = OpFOrdLessThanEqual %bool %1481 %float_1
               OpLoopMerge %1483 %1479 None
               OpBranchConditional %1482 %1484 %1483
       %1484 = OpLabel
       %1485 = OpCompositeInsert %v3float %float_0 %1460 1
               OpBranch %1486
       %1486 = OpLabel
       %1487 = OpPhi %v3float %1485 %1484 %1488 %1489
       %1478 = OpPhi %v4float %1477 %1484 %1490 %1489
       %1491 = OpCompositeExtract %float %1487 1
       %1492 = OpFOrdLessThanEqual %bool %1491 %float_1
               OpLoopMerge %1493 %1489 None
               OpBranchConditional %1492 %1494 %1493
       %1494 = OpLabel
       %1495 = OpCompositeInsert %v3float %float_0 %1487 2
               OpBranch %1496
       %1496 = OpLabel
       %1490 = OpPhi %v4float %1478 %1494 %1497 %1498
       %1499 = OpPhi %v3float %1495 %1494 %1500 %1498
       %1501 = OpCompositeExtract %float %1499 2
       %1502 = OpFOrdLessThanEqual %bool %1501 %float_1
               OpLoopMerge %1503 %1498 None
               OpBranchConditional %1502 %1498 %1503
       %1498 = OpLabel
       %1504 = OpFAdd %v3float %1474 %1499
       %1505 = OpVectorShuffle %v3float %538 %1504 3 4 5
       %1506 = OpConvertFToS %v3int %1505
       %1507 = OpBitcast %v3uint %1506
       %1508 = OpIMul %v3uint %1507 %401
       %1509 = OpIAdd %v3uint %1508 %403
       %1510 = OpCompositeExtract %uint %1509 1
       %1511 = OpCompositeExtract %uint %1509 2
       %1512 = OpIMul %uint %1510 %1511
       %1513 = OpCompositeExtract %uint %1509 0
       %1514 = OpIAdd %uint %1513 %1512
       %1515 = OpIMul %uint %1511 %1514
       %1516 = OpIAdd %uint %1510 %1515
       %1517 = OpIMul %uint %1514 %1516
       %1518 = OpIAdd %uint %1511 %1517
       %1519 = OpIMul %uint %1516 %1518
       %1520 = OpIAdd %uint %1514 %1519
       %1521 = OpCompositeInsert %v3uint %1520 %1509 0
       %1522 = OpIMul %uint %1518 %1520
       %1523 = OpIAdd %uint %1516 %1522
       %1524 = OpCompositeInsert %v3uint %1523 %1521 1
       %1525 = OpIMul %uint %1520 %1523
       %1526 = OpIAdd %uint %1518 %1525
       %1527 = OpCompositeInsert %v3uint %1526 %1524 2
       %1528 = OpBitwiseAnd %v3uint %404 %405
       %1529 = OpShiftRightLogical %v3uint %1527 %1528
       %1530 = OpConvertUToF %v3float %1529
       %1531 = OpExtInst %v3float %1 Fma %1530 %522 %511
       %1532 = OpExtInst %v3float %1 Normalize %1531
       %1533 = OpVectorTimesScalar %v3float %1532 %float_0_2588
       %1534 = OpFAdd %v3float %1499 %1533
       %1535 = OpFSub %v3float %1473 %1534
       %1536 = OpCompositeExtract %float %1490 3
       %1537 = OpDot %float %1535 %1535
       %1538 = OpExtInst %float %1 NMin %1536 %1537
       %1497 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %1538
       %1539 = OpFAdd %float %1501 %float_1
       %1500 = OpCompositeInsert %v3float %1539 %1499 2
               OpBranch %1496
       %1503 = OpLabel
               OpBranch %1489
       %1489 = OpLabel
       %1540 = OpCompositeExtract %float %1499 1
       %1541 = OpFAdd %float %1540 %float_1
       %1488 = OpCompositeInsert %v3float %1541 %1499 1
               OpBranch %1486
       %1493 = OpLabel
               OpBranch %1479
       %1479 = OpLabel
       %1542 = OpCompositeExtract %float %1487 0
       %1543 = OpFAdd %float %1542 %float_1
       %1480 = OpCompositeInsert %v3float %1543 %1487 0
               OpBranch %1476
       %1483 = OpLabel
       %1544 = OpCompositeExtract %float %1477 3
       %1545 = OpExtInst %float %1 Sqrt %1544
       %1546 = OpExtInst %float %1 Fma %1545 %float_2 %float_n1
       %1547 = OpExtInst %float %1 FAbs %1546
       %1467 = OpExtInst %float %1 Fma %1547 %1464 %1466
       %1463 = OpVectorTimesScalar %v3float %1462 %float_2
       %1465 = OpFMul %float %1464 %float_0_5
               OpBranch %1461
       %1461 = OpLabel
       %1469 = OpIAdd %uint %1468 %uint_1
               OpBranch %1458
       %1471 = OpLabel
       %1548 = OpExtInst %float %1 FMix %float_n1 %float_1 %1466
       %1549 = OpExtInst %float %1 FClamp %1548 %float_0 %float_1
       %1550 = OpFMul %v3float %1448 %277
       %1551 = OpVectorTimesScalar %v3float %1550 %float_4_76837158en07
       %1552 = OpFAdd %v3float %1551 %137
       %1553 = OpExtInst %v3float %1 Fma %1447 %277 %1552
       %1554 = OpExtInst %v3float %1 Floor %1553
       %1555 = OpFNegate %v3float %1554
       %1556 = OpExtInst %v3float %1 Fma %1447 %277 %1555
       %1557 = OpVectorTimesScalar %v3float %1556 %float_2097152
       %1558 = OpExtInst %v3float %1 Fma %1448 %277 %1557
       %1559 = OpVectorTimesScalar %v3float %1558 %float_1
               OpBranch %1560
       %1560 = OpLabel
       %1561 = OpPhi %v3float %542 %1471 %1562 %1563
       %1564 = OpPhi %v3float %1559 %1471 %1565 %1563
       %1566 = OpPhi %float %float_1 %1471 %1567 %1563
       %1568 = OpPhi %float %float_0 %1471 %1569 %1563
       %1570 = OpPhi %uint %uint_0 %1471 %1571 %1563
       %1572 = OpULessThan %bool %1570 %uint_1
               OpLoopMerge %1573 %1563 DontUnroll
               OpBranchConditional %1572 %1574 %1573
       %1574 = OpLabel
       %1575 = OpExtInst %v3float %1 Fract %1564
       %1576 = OpExtInst %v3float %1 Floor %1564
       %1577 = OpCompositeInsert %v3float %float_0 %1561 0
               OpBranch %1578
       %1578 = OpLabel
       %1579 = OpPhi %v4float %352 %1574 %1580 %1581
       %1562 = OpPhi %v3float %1577 %1574 %1582 %1581
       %1583 = OpCompositeExtract %float %1562 0
       %1584 = OpFOrdLessThanEqual %bool %1583 %float_1
               OpLoopMerge %1585 %1581 None
               OpBranchConditional %1584 %1586 %1585
       %1586 = OpLabel
       %1587 = OpCompositeInsert %v3float %float_0 %1562 1
               OpBranch %1588
       %1588 = OpLabel
       %1589 = OpPhi %v3float %1587 %1586 %1590 %1591
       %1580 = OpPhi %v4float %1579 %1586 %1592 %1591
       %1593 = OpCompositeExtract %float %1589 1
       %1594 = OpFOrdLessThanEqual %bool %1593 %float_1
               OpLoopMerge %1595 %1591 None
               OpBranchConditional %1594 %1596 %1595
       %1596 = OpLabel
       %1597 = OpCompositeInsert %v3float %float_0 %1589 2
               OpBranch %1598
       %1598 = OpLabel
       %1592 = OpPhi %v4float %1580 %1596 %1599 %1600
       %1601 = OpPhi %v3float %1597 %1596 %1602 %1600
       %1603 = OpCompositeExtract %float %1601 2
       %1604 = OpFOrdLessThanEqual %bool %1603 %float_1
               OpLoopMerge %1605 %1600 None
               OpBranchConditional %1604 %1600 %1605
       %1600 = OpLabel
       %1606 = OpFAdd %v3float %1576 %1601
       %1607 = OpVectorShuffle %v3float %538 %1606 3 4 5
       %1608 = OpConvertFToS %v3int %1607
       %1609 = OpBitcast %v3uint %1608
       %1610 = OpIMul %v3uint %1609 %401
       %1611 = OpIAdd %v3uint %1610 %403
       %1612 = OpCompositeExtract %uint %1611 1
       %1613 = OpCompositeExtract %uint %1611 2
       %1614 = OpIMul %uint %1612 %1613
       %1615 = OpCompositeExtract %uint %1611 0
       %1616 = OpIAdd %uint %1615 %1614
       %1617 = OpIMul %uint %1613 %1616
       %1618 = OpIAdd %uint %1612 %1617
       %1619 = OpIMul %uint %1616 %1618
       %1620 = OpIAdd %uint %1613 %1619
       %1621 = OpIMul %uint %1618 %1620
       %1622 = OpIAdd %uint %1616 %1621
       %1623 = OpCompositeInsert %v3uint %1622 %1611 0
       %1624 = OpIMul %uint %1620 %1622
       %1625 = OpIAdd %uint %1618 %1624
       %1626 = OpCompositeInsert %v3uint %1625 %1623 1
       %1627 = OpIMul %uint %1622 %1625
       %1628 = OpIAdd %uint %1620 %1627
       %1629 = OpCompositeInsert %v3uint %1628 %1626 2
       %1630 = OpBitwiseAnd %v3uint %404 %405
       %1631 = OpShiftRightLogical %v3uint %1629 %1630
       %1632 = OpConvertUToF %v3float %1631
       %1633 = OpExtInst %v3float %1 Fma %1632 %522 %511
       %1634 = OpExtInst %v3float %1 Normalize %1633
       %1635 = OpVectorTimesScalar %v3float %1634 %float_0_2588
       %1636 = OpFAdd %v3float %1601 %1635
       %1637 = OpFSub %v3float %1575 %1636
       %1638 = OpCompositeExtract %float %1592 3
       %1639 = OpDot %float %1637 %1637
       %1640 = OpExtInst %float %1 NMin %1638 %1639
       %1599 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %1640
       %1641 = OpFAdd %float %1603 %float_1
       %1602 = OpCompositeInsert %v3float %1641 %1601 2
               OpBranch %1598
       %1605 = OpLabel
               OpBranch %1591
       %1591 = OpLabel
       %1642 = OpCompositeExtract %float %1601 1
       %1643 = OpFAdd %float %1642 %float_1
       %1590 = OpCompositeInsert %v3float %1643 %1601 1
               OpBranch %1588
       %1595 = OpLabel
               OpBranch %1581
       %1581 = OpLabel
       %1644 = OpCompositeExtract %float %1589 0
       %1645 = OpFAdd %float %1644 %float_1
       %1582 = OpCompositeInsert %v3float %1645 %1589 0
               OpBranch %1578
       %1585 = OpLabel
       %1646 = OpCompositeExtract %float %1579 3
       %1647 = OpExtInst %float %1 Sqrt %1646
       %1648 = OpExtInst %float %1 Fma %1647 %float_2 %float_n1
       %1649 = OpExtInst %float %1 FAbs %1648
       %1569 = OpExtInst %float %1 Fma %1649 %1566 %1568
       %1565 = OpVectorTimesScalar %v3float %1564 %float_2
       %1567 = OpFMul %float %1566 %float_0_5
               OpBranch %1563
       %1563 = OpLabel
       %1571 = OpIAdd %uint %1570 %uint_1
               OpBranch %1560
       %1573 = OpLabel
       %1650 = OpExtInst %float %1 FMix %float_n1 %float_1 %1568
       %1651 = OpExtInst %float %1 FClamp %1650 %float_0 %float_1
       %1652 = OpFAdd %float %1549 %1651
       %1653 = OpFNegate %float %1652
       %1654 = OpExtInst %float %1 Fma %886 %1442 %1653
       %1655 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_7 %int_1
       %1656 = OpLoad %float %1655
       %1657 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_7 %int_2
       %1658 = OpLoad %float %1657
       %1659 = OpFSub %float %1658 %float_n1
       %1660 = OpExtInst %float %1 FAbs %1659
       %1661 = OpFOrdGreaterThan %bool %1660 %float_9_99999975en06
       %1662 = OpFOrdGreaterThanEqual %bool %1658 %float_n1
       %1663 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_7 %int_3
       %1664 = OpLoad %float %1663
       %1665 = OpSelect %float %1662 %1658 %1664
       %1666 = OpSelect %float %1661 %1665 %1658
       %1667 = OpFSub %float %1666 %float_1
       %1668 = OpExtInst %float %1 FAbs %1667
       %1669 = OpFOrdGreaterThan %bool %1668 %float_9_99999975en06
       %1670 = OpFOrdGreaterThanEqual %bool %1666 %float_1
       %1671 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_8 %int_0
       %1672 = OpLoad %float %1671
       %1673 = OpSelect %float %1670 %1672 %1658
       %1674 = OpSelect %float %1669 %1673 %1658
       %1675 = OpExtInst %float %1 FAbs %1674
       %1676 = OpFOrdGreaterThan %bool %1675 %float_9_99999975en06
       %1677 = OpFOrdGreaterThanEqual %bool %1674 %float_0
       %1678 = OpSelect %float %1677 %float_1 %float_n1
       %1679 = OpSelect %float %1676 %1678 %float_1
       %1680 = OpExtInst %float %1 NMax %1679 %float_n1
       %1681 = OpExtInst %float %1 NMin %1680 %float_1
       %1682 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_10 %int_1
       %1683 = OpLoad %float %1682
       %1684 = OpCompositeConstruct %v3float %1681 %1683 %float_0
       %1685 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_11
       %1686 = OpLoad %v4float %1685
       %1687 = OpVectorShuffle %v3float %1686 %1686 0 1 2
       %1688 = OpFAdd %v3float %1684 %1687
       %1689 = OpExtInst %v3float %1 NMax %1688 %278
       %1690 = OpExtInst %v3float %1 NMin %1689 %127
       %1691 = OpCompositeExtract %float %592 0
       %1692 = OpCompositeExtract %float %641 0
       %1693 = OpCompositeExtract %float %592 1
       %1694 = OpCompositeExtract %float %641 1
       %1695 = OpCompositeConstruct %v2float %1691 %1693
       %1696 = OpCompositeConstruct %v2float %1692 %1694
       %1697 = OpCompositeExtract %float %1690 0
       %1698 = OpCompositeExtract %float %1690 1
       %1699 = OpCompositeConstruct %v2float %1697 %1698
       %1700 = OpFMul %v2float %1695 %1699
       %1701 = OpFMul %v2float %1699 %1696
       %1702 = OpCompositeExtract %float %1700 0
       %1703 = OpCompositeExtract %float %1701 0
       %1704 = OpCompositeExtract %float %1700 1
       %1705 = OpCompositeExtract %float %1701 1
       %1706 = OpFAdd %float %1702 %1704
       %1707 = OpFAdd %float %1703 %1705
       %1708 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_14 %int_0
       %1709 = OpLoad %float %1708
       %1710 = OpFMul %float %1706 %1709
       %1711 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_14 %int_2
       %1712 = OpLoad %float %1711
       %1713 = OpFSub %float %1160 %1712
       %1714 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_14 %int_3
       %1715 = OpLoad %float %1714
       %1716 = OpCompositeConstruct %v3float %1715 %1715 %1715
       %1717 = OpFMul %v3float %592 %1716
       %1718 = OpFMul %v3float %1716 %641
       %1719 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_15 %int_0
       %1720 = OpLoad %float %1719
       %1721 = OpCompositeConstruct %v3float %1720 %1720 %1720
       %1722 = OpFMul %v3float %1717 %1721
       %1723 = OpFMul %v3float %1718 %1721
       %1724 = OpCompositeExtract %float %760 1
       %1725 = OpCompositeConstruct %v3float %1724 %1724 %1724
       %1726 = OpFMul %v3float %1722 %1725
       %1727 = OpFMul %v3float %1723 %1725
       %1728 = OpFMul %v3float %1727 %280
       %1729 = OpCompositeExtract %float %1728 0
       %1730 = OpCompositeExtract %float %1728 1
       %1731 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_15 %int_2
       %1732 = OpLoad %float %1731
       %1733 = OpFMul %float %1160 %1732
       %1734 = OpCompositeExtract %float %1728 2
       %1735 = OpCompositeConstruct %v2float %1733 %1733
       %1736 = OpCompositeConstruct %v2float %1734 %1734
       %1737 = OpFAdd %v2float %1735 %1736
       %1738 = OpCompositeExtract %float %1737 0
       %1739 = OpCompositeConstruct %v3float %1729 %1730 %1738
       %1740 = OpVectorTimesScalar %v3float %1739 %float_4_76837158en07
       %1741 = OpFAdd %v3float %1740 %137
       %1742 = OpExtInst %v3float %1 Fma %1726 %280 %1741
       %1743 = OpExtInst %v3float %1 Floor %1742
       %1744 = OpFNegate %v3float %1743
       %1745 = OpExtInst %v3float %1 Fma %1726 %280 %1744
       %1746 = OpVectorTimesScalar %v3float %1745 %float_2097152
       %1747 = OpFAdd %v3float %1746 %1739
       %1748 = OpVectorTimesScalar %v3float %1747 %float_1
               OpBranch %1749
       %1749 = OpLabel
       %1750 = OpPhi %v3float %1748 %1573 %1751 %1752
       %1753 = OpPhi %float %float_1 %1573 %1754 %1752
       %1755 = OpPhi %float %float_0 %1573 %1756 %1752
       %1757 = OpPhi %uint %uint_0 %1573 %1758 %1752
       %1759 = OpULessThan %bool %1757 %uint_6
               OpLoopMerge %1760 %1752 DontUnroll
               OpBranchConditional %1759 %1752 %1760
       %1752 = OpLabel
       %1761 = OpExtInst %v3float %1 Fract %1750
       %1762 = OpExtInst %v3float %1 Floor %1750
       %1763 = OpDot %float %1762 %385
       %1764 = OpFAdd %float %1763 %float_19
       %1765 = OpFAdd %float %1763 %float_47
       %1766 = OpFAdd %float %1763 %float_66
       %1767 = OpFAdd %float %1763 %float_101
       %1768 = OpFAdd %float %1763 %float_120
       %1769 = OpFAdd %float %1763 %float_148
       %1770 = OpFAdd %float %1763 %float_167
       %1771 = OpConvertFToS %int %1763
       %1772 = OpCompositeConstruct %v3int %1771 %int_0 %int_0
       %1773 = OpBitcast %v3uint %1772
       %1774 = OpIMul %v3uint %1773 %401
       %1775 = OpIAdd %v3uint %1774 %403
       %1776 = OpCompositeExtract %uint %1775 1
       %1777 = OpCompositeExtract %uint %1775 2
       %1778 = OpIMul %uint %1776 %1777
       %1779 = OpCompositeExtract %uint %1775 0
       %1780 = OpIAdd %uint %1779 %1778
       %1781 = OpIMul %uint %1777 %1780
       %1782 = OpIAdd %uint %1776 %1781
       %1783 = OpIMul %uint %1780 %1782
       %1784 = OpIAdd %uint %1777 %1783
       %1785 = OpIMul %uint %1782 %1784
       %1786 = OpIAdd %uint %1780 %1785
       %1787 = OpCompositeInsert %v3uint %1786 %550 0
       %1788 = OpBitwiseAnd %v3uint %404 %405
       %1789 = OpShiftRightLogical %v3uint %1787 %1788
       %1790 = OpCompositeExtract %uint %1789 0
       %1791 = OpCompositeConstruct %v3uint %1790 %1790 %1790
       %1792 = OpBitwiseAnd %v3uint %1791 %386
       %1793 = OpConvertUToF %v3float %1792
       %1794 = OpExtInst %v3float %1 Fma %1793 %390 %278
       %1795 = OpDot %float %1794 %1761
       %1796 = OpConvertFToS %int %1764
       %1797 = OpFSub %v3float %1761 %350
       %1798 = OpCompositeConstruct %v3int %1796 %int_0 %int_0
       %1799 = OpBitcast %v3uint %1798
       %1800 = OpIMul %v3uint %1799 %401
       %1801 = OpIAdd %v3uint %1800 %403
       %1802 = OpCompositeExtract %uint %1801 1
       %1803 = OpCompositeExtract %uint %1801 2
       %1804 = OpIMul %uint %1802 %1803
       %1805 = OpCompositeExtract %uint %1801 0
       %1806 = OpIAdd %uint %1805 %1804
       %1807 = OpIMul %uint %1803 %1806
       %1808 = OpIAdd %uint %1802 %1807
       %1809 = OpIMul %uint %1806 %1808
       %1810 = OpIAdd %uint %1803 %1809
       %1811 = OpIMul %uint %1808 %1810
       %1812 = OpIAdd %uint %1806 %1811
       %1813 = OpCompositeInsert %v3uint %1812 %550 0
       %1814 = OpShiftRightLogical %v3uint %1813 %1788
       %1815 = OpCompositeExtract %uint %1814 0
       %1816 = OpCompositeConstruct %v3uint %1815 %1815 %1815
       %1817 = OpBitwiseAnd %v3uint %1816 %386
       %1818 = OpConvertUToF %v3float %1817
       %1819 = OpExtInst %v3float %1 Fma %1818 %390 %278
       %1820 = OpDot %float %1819 %1797
       %1821 = OpConvertFToS %int %1765
       %1822 = OpFSub %v3float %1761 %351
       %1823 = OpCompositeConstruct %v3int %1821 %int_0 %int_0
       %1824 = OpBitcast %v3uint %1823
       %1825 = OpIMul %v3uint %1824 %401
       %1826 = OpIAdd %v3uint %1825 %403
       %1827 = OpCompositeExtract %uint %1826 1
       %1828 = OpCompositeExtract %uint %1826 2
       %1829 = OpIMul %uint %1827 %1828
       %1830 = OpCompositeExtract %uint %1826 0
       %1831 = OpIAdd %uint %1830 %1829
       %1832 = OpIMul %uint %1828 %1831
       %1833 = OpIAdd %uint %1827 %1832
       %1834 = OpIMul %uint %1831 %1833
       %1835 = OpIAdd %uint %1828 %1834
       %1836 = OpIMul %uint %1833 %1835
       %1837 = OpIAdd %uint %1831 %1836
       %1838 = OpCompositeInsert %v3uint %1837 %550 0
       %1839 = OpShiftRightLogical %v3uint %1838 %1788
       %1840 = OpCompositeExtract %uint %1839 0
       %1841 = OpCompositeConstruct %v3uint %1840 %1840 %1840
       %1842 = OpBitwiseAnd %v3uint %1841 %386
       %1843 = OpConvertUToF %v3float %1842
       %1844 = OpExtInst %v3float %1 Fma %1843 %390 %278
       %1845 = OpDot %float %1844 %1822
       %1846 = OpConvertFToS %int %1766
       %1847 = OpFSub %v3float %1761 %134
       %1848 = OpCompositeConstruct %v3int %1846 %int_0 %int_0
       %1849 = OpBitcast %v3uint %1848
       %1850 = OpIMul %v3uint %1849 %401
       %1851 = OpIAdd %v3uint %1850 %403
       %1852 = OpCompositeExtract %uint %1851 1
       %1853 = OpCompositeExtract %uint %1851 2
       %1854 = OpIMul %uint %1852 %1853
       %1855 = OpCompositeExtract %uint %1851 0
       %1856 = OpIAdd %uint %1855 %1854
       %1857 = OpIMul %uint %1853 %1856
       %1858 = OpIAdd %uint %1852 %1857
       %1859 = OpIMul %uint %1856 %1858
       %1860 = OpIAdd %uint %1853 %1859
       %1861 = OpIMul %uint %1858 %1860
       %1862 = OpIAdd %uint %1856 %1861
       %1863 = OpCompositeInsert %v3uint %1862 %550 0
       %1864 = OpShiftRightLogical %v3uint %1863 %1788
       %1865 = OpCompositeExtract %uint %1864 0
       %1866 = OpCompositeConstruct %v3uint %1865 %1865 %1865
       %1867 = OpBitwiseAnd %v3uint %1866 %386
       %1868 = OpConvertUToF %v3float %1867
       %1869 = OpExtInst %v3float %1 Fma %1868 %390 %278
       %1870 = OpDot %float %1869 %1847
       %1871 = OpConvertFToS %int %1767
       %1872 = OpFSub %v3float %1761 %290
       %1873 = OpCompositeConstruct %v3int %1871 %int_0 %int_0
       %1874 = OpBitcast %v3uint %1873
       %1875 = OpIMul %v3uint %1874 %401
       %1876 = OpIAdd %v3uint %1875 %403
       %1877 = OpCompositeExtract %uint %1876 1
       %1878 = OpCompositeExtract %uint %1876 2
       %1879 = OpIMul %uint %1877 %1878
       %1880 = OpCompositeExtract %uint %1876 0
       %1881 = OpIAdd %uint %1880 %1879
       %1882 = OpIMul %uint %1878 %1881
       %1883 = OpIAdd %uint %1877 %1882
       %1884 = OpIMul %uint %1881 %1883
       %1885 = OpIAdd %uint %1878 %1884
       %1886 = OpIMul %uint %1883 %1885
       %1887 = OpIAdd %uint %1881 %1886
       %1888 = OpCompositeInsert %v3uint %1887 %550 0
       %1889 = OpShiftRightLogical %v3uint %1888 %1788
       %1890 = OpCompositeExtract %uint %1889 0
       %1891 = OpCompositeConstruct %v3uint %1890 %1890 %1890
       %1892 = OpBitwiseAnd %v3uint %1891 %386
       %1893 = OpConvertUToF %v3float %1892
       %1894 = OpExtInst %v3float %1 Fma %1893 %390 %278
       %1895 = OpDot %float %1894 %1872
       %1896 = OpConvertFToS %int %1768
       %1897 = OpFSub %v3float %1761 %139
       %1898 = OpCompositeConstruct %v3int %1896 %int_0 %int_0
       %1899 = OpBitcast %v3uint %1898
       %1900 = OpIMul %v3uint %1899 %401
       %1901 = OpIAdd %v3uint %1900 %403
       %1902 = OpCompositeExtract %uint %1901 1
       %1903 = OpCompositeExtract %uint %1901 2
       %1904 = OpIMul %uint %1902 %1903
       %1905 = OpCompositeExtract %uint %1901 0
       %1906 = OpIAdd %uint %1905 %1904
       %1907 = OpIMul %uint %1903 %1906
       %1908 = OpIAdd %uint %1902 %1907
       %1909 = OpIMul %uint %1906 %1908
       %1910 = OpIAdd %uint %1903 %1909
       %1911 = OpIMul %uint %1908 %1910
       %1912 = OpIAdd %uint %1906 %1911
       %1913 = OpCompositeInsert %v3uint %1912 %550 0
       %1914 = OpShiftRightLogical %v3uint %1913 %1788
       %1915 = OpCompositeExtract %uint %1914 0
       %1916 = OpCompositeConstruct %v3uint %1915 %1915 %1915
       %1917 = OpBitwiseAnd %v3uint %1916 %386
       %1918 = OpConvertUToF %v3float %1917
       %1919 = OpExtInst %v3float %1 Fma %1918 %390 %278
       %1920 = OpDot %float %1919 %1897
       %1921 = OpConvertFToS %int %1769
       %1922 = OpFSub %v3float %1761 %135
       %1923 = OpCompositeConstruct %v3int %1921 %int_0 %int_0
       %1924 = OpBitcast %v3uint %1923
       %1925 = OpIMul %v3uint %1924 %401
       %1926 = OpIAdd %v3uint %1925 %403
       %1927 = OpCompositeExtract %uint %1926 1
       %1928 = OpCompositeExtract %uint %1926 2
       %1929 = OpIMul %uint %1927 %1928
       %1930 = OpCompositeExtract %uint %1926 0
       %1931 = OpIAdd %uint %1930 %1929
       %1932 = OpIMul %uint %1928 %1931
       %1933 = OpIAdd %uint %1927 %1932
       %1934 = OpIMul %uint %1931 %1933
       %1935 = OpIAdd %uint %1928 %1934
       %1936 = OpIMul %uint %1933 %1935
       %1937 = OpIAdd %uint %1931 %1936
       %1938 = OpCompositeInsert %v3uint %1937 %550 0
       %1939 = OpShiftRightLogical %v3uint %1938 %1788
       %1940 = OpCompositeExtract %uint %1939 0
       %1941 = OpCompositeConstruct %v3uint %1940 %1940 %1940
       %1942 = OpBitwiseAnd %v3uint %1941 %386
       %1943 = OpConvertUToF %v3float %1942
       %1944 = OpExtInst %v3float %1 Fma %1943 %390 %278
       %1945 = OpDot %float %1944 %1922
       %1946 = OpConvertFToS %int %1770
       %1947 = OpFSub %v3float %1761 %127
       %1948 = OpCompositeConstruct %v3int %1946 %int_0 %int_0
       %1949 = OpBitcast %v3uint %1948
       %1950 = OpIMul %v3uint %1949 %401
       %1951 = OpIAdd %v3uint %1950 %403
       %1952 = OpCompositeExtract %uint %1951 1
       %1953 = OpCompositeExtract %uint %1951 2
       %1954 = OpIMul %uint %1952 %1953
       %1955 = OpCompositeExtract %uint %1951 0
       %1956 = OpIAdd %uint %1955 %1954
       %1957 = OpIMul %uint %1953 %1956
       %1958 = OpIAdd %uint %1952 %1957
       %1959 = OpIMul %uint %1956 %1958
       %1960 = OpIAdd %uint %1953 %1959
       %1961 = OpIMul %uint %1958 %1960
       %1962 = OpIAdd %uint %1956 %1961
       %1963 = OpCompositeInsert %v3uint %1962 %550 0
       %1964 = OpShiftRightLogical %v3uint %1963 %1788
       %1965 = OpCompositeExtract %uint %1964 0
       %1966 = OpCompositeConstruct %v3uint %1965 %1965 %1965
       %1967 = OpBitwiseAnd %v3uint %1966 %386
       %1968 = OpConvertUToF %v3float %1967
       %1969 = OpExtInst %v3float %1 Fma %1968 %390 %278
       %1970 = OpDot %float %1969 %1947
       %1971 = OpCompositeExtract %float %1761 0
       %1972 = OpCompositeExtract %float %1761 1
       %1973 = OpCompositeExtract %float %1761 2
       %1974 = OpCompositeConstruct %v4float %1971 %1972 %1973 %float_0
       %1975 = OpFMul %v4float %1974 %1974
       %1976 = OpFMul %v4float %1975 %1974
       %1977 = OpVectorTimesScalar %v4float %1974 %float_6
       %1978 = OpFSub %v4float %1977 %381
       %1979 = OpExtInst %v4float %1 Fma %1974 %1978 %382
       %1980 = OpFMul %v4float %1976 %1979
       %1981 = OpCompositeExtract %float %1980 0
       %1982 = OpExtInst %float %1 FMix %1795 %1820 %1981
       %1983 = OpExtInst %float %1 FMix %1845 %1870 %1981
       %1984 = OpCompositeExtract %float %1980 1
       %1985 = OpExtInst %float %1 FMix %1982 %1983 %1984
       %1986 = OpExtInst %float %1 FMix %1895 %1920 %1981
       %1987 = OpExtInst %float %1 FMix %1945 %1970 %1981
       %1988 = OpExtInst %float %1 FMix %1986 %1987 %1984
       %1989 = OpCompositeExtract %float %1980 2
       %1990 = OpExtInst %float %1 FMix %1985 %1988 %1989
       %1756 = OpExtInst %float %1 Fma %1990 %1753 %1755
       %1751 = OpVectorTimesScalar %v3float %1750 %float_2
       %1754 = OpFMul %float %1753 %float_0_5
       %1758 = OpIAdd %uint %1757 %uint_1
               OpBranch %1749
       %1760 = OpLabel
       %1991 = OpExtInst %float %1 Fma %1755 %float_0_5 %float_0_5
       %1992 = OpExtInst %float %1 FMix %float_0 %float_1 %1991
       %1993 = OpExtInst %float %1 FClamp %1992 %float_0 %float_1
       %1994 = OpExtInst %float %1 FMix %1160 %1713 %1993
       %1995 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_15 %int_3
       %1996 = OpLoad %float %1995
       %1997 = OpFMul %float %1996 %1994
       %1998 = OpExtInst %float %1 Fma %1707 %1709 %1997
       %1999 = OpExtInst %float %1 Floor %1710
       %2000 = OpFNegate %float %1999
       %2001 = OpExtInst %float %1 Fma %1706 %1709 %2000
       %2002 = OpExtInst %float %1 Fma %2001 %float_2097152 %1998
       %2003 = OpExtInst %float %1 Floor %2002
       %2004 = OpFMul %float %1999 %float_n6_28318548
       %2005 = OpExtInst %float %1 Fma %1710 %float_6_28318548 %2004
       %2006 = OpFMul %float %2003 %float_n6_28318548
       %2007 = OpExtInst %float %1 Fma %1998 %float_6_28318548 %2006
       %2008 = OpExtInst %float %1 Fma %2005 %float_2097152 %2007
       %2009 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_0
       %2010 = OpLoad %float %2009
       %2011 = OpCompositeConstruct %v3float %2010 %2010 %2010
       %2012 = OpFMul %v3float %592 %2011
       %2013 = OpFMul %v3float %2011 %641
       %2014 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_1
       %2015 = OpLoad %float %2014
       %2016 = OpCompositeConstruct %v3float %2015 %2015 %2015
       %2017 = OpFMul %v3float %2012 %2016
       %2018 = OpFMul %v3float %2013 %2016
       %2019 = OpFMul %v3float %2018 %507
       %2020 = OpCompositeExtract %float %2019 0
       %2021 = OpCompositeExtract %float %2019 1
       %2022 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_3
       %2023 = OpLoad %float %2022
       %2024 = OpFMul %float %1160 %2023
       %2025 = OpCompositeExtract %float %2019 2
       %2026 = OpCompositeConstruct %v2float %2024 %2024
       %2027 = OpCompositeConstruct %v2float %2025 %2025
       %2028 = OpFAdd %v2float %2026 %2027
       %2029 = OpCompositeExtract %float %2028 0
       %2030 = OpCompositeConstruct %v3float %2020 %2021 %2029
       %2031 = OpVectorTimesScalar %v3float %2030 %float_4_76837158en07
       %2032 = OpFAdd %v3float %2031 %137
       %2033 = OpExtInst %v3float %1 Fma %2017 %507 %2032
       %2034 = OpExtInst %v3float %1 Floor %2033
       %2035 = OpFNegate %v3float %2034
       %2036 = OpExtInst %v3float %1 Fma %2017 %507 %2035
       %2037 = OpVectorTimesScalar %v3float %2036 %float_2097152
       %2038 = OpFAdd %v3float %2037 %2030
       %2039 = OpVectorTimesScalar %v3float %2038 %float_1
               OpBranch %2040
       %2040 = OpLabel
       %2041 = OpPhi %v3float %2039 %1760 %2042 %2043
       %2044 = OpPhi %float %float_1 %1760 %2045 %2043
       %2046 = OpPhi %float %float_0 %1760 %2047 %2043
       %2048 = OpPhi %uint %uint_0 %1760 %2049 %2043
       %2050 = OpULessThan %bool %2048 %uint_10
               OpLoopMerge %2051 %2043 DontUnroll
               OpBranchConditional %2050 %2043 %2051
       %2043 = OpLabel
       %2052 = OpExtInst %v3float %1 Fract %2041
       %2053 = OpExtInst %v3float %1 Floor %2041
       %2054 = OpDot %float %2053 %385
       %2055 = OpFAdd %float %2054 %float_19
       %2056 = OpFAdd %float %2054 %float_47
       %2057 = OpFAdd %float %2054 %float_66
       %2058 = OpFAdd %float %2054 %float_101
       %2059 = OpFAdd %float %2054 %float_120
       %2060 = OpFAdd %float %2054 %float_148
       %2061 = OpFAdd %float %2054 %float_167
       %2062 = OpConvertFToS %int %2054
       %2063 = OpCompositeConstruct %v3int %2062 %int_0 %int_0
       %2064 = OpBitcast %v3uint %2063
       %2065 = OpIMul %v3uint %2064 %401
       %2066 = OpIAdd %v3uint %2065 %403
       %2067 = OpCompositeExtract %uint %2066 1
       %2068 = OpCompositeExtract %uint %2066 2
       %2069 = OpIMul %uint %2067 %2068
       %2070 = OpCompositeExtract %uint %2066 0
       %2071 = OpIAdd %uint %2070 %2069
       %2072 = OpIMul %uint %2068 %2071
       %2073 = OpIAdd %uint %2067 %2072
       %2074 = OpIMul %uint %2071 %2073
       %2075 = OpIAdd %uint %2068 %2074
       %2076 = OpIMul %uint %2073 %2075
       %2077 = OpIAdd %uint %2071 %2076
       %2078 = OpCompositeInsert %v3uint %2077 %550 0
       %2079 = OpBitwiseAnd %v3uint %404 %405
       %2080 = OpShiftRightLogical %v3uint %2078 %2079
       %2081 = OpCompositeExtract %uint %2080 0
       %2082 = OpCompositeConstruct %v3uint %2081 %2081 %2081
       %2083 = OpBitwiseAnd %v3uint %2082 %386
       %2084 = OpConvertUToF %v3float %2083
       %2085 = OpExtInst %v3float %1 Fma %2084 %390 %278
       %2086 = OpDot %float %2085 %2052
       %2087 = OpConvertFToS %int %2055
       %2088 = OpFSub %v3float %2052 %350
       %2089 = OpCompositeConstruct %v3int %2087 %int_0 %int_0
       %2090 = OpBitcast %v3uint %2089
       %2091 = OpIMul %v3uint %2090 %401
       %2092 = OpIAdd %v3uint %2091 %403
       %2093 = OpCompositeExtract %uint %2092 1
       %2094 = OpCompositeExtract %uint %2092 2
       %2095 = OpIMul %uint %2093 %2094
       %2096 = OpCompositeExtract %uint %2092 0
       %2097 = OpIAdd %uint %2096 %2095
       %2098 = OpIMul %uint %2094 %2097
       %2099 = OpIAdd %uint %2093 %2098
       %2100 = OpIMul %uint %2097 %2099
       %2101 = OpIAdd %uint %2094 %2100
       %2102 = OpIMul %uint %2099 %2101
       %2103 = OpIAdd %uint %2097 %2102
       %2104 = OpCompositeInsert %v3uint %2103 %550 0
       %2105 = OpShiftRightLogical %v3uint %2104 %2079
       %2106 = OpCompositeExtract %uint %2105 0
       %2107 = OpCompositeConstruct %v3uint %2106 %2106 %2106
       %2108 = OpBitwiseAnd %v3uint %2107 %386
       %2109 = OpConvertUToF %v3float %2108
       %2110 = OpExtInst %v3float %1 Fma %2109 %390 %278
       %2111 = OpDot %float %2110 %2088
       %2112 = OpConvertFToS %int %2056
       %2113 = OpFSub %v3float %2052 %351
       %2114 = OpCompositeConstruct %v3int %2112 %int_0 %int_0
       %2115 = OpBitcast %v3uint %2114
       %2116 = OpIMul %v3uint %2115 %401
       %2117 = OpIAdd %v3uint %2116 %403
       %2118 = OpCompositeExtract %uint %2117 1
       %2119 = OpCompositeExtract %uint %2117 2
       %2120 = OpIMul %uint %2118 %2119
       %2121 = OpCompositeExtract %uint %2117 0
       %2122 = OpIAdd %uint %2121 %2120
       %2123 = OpIMul %uint %2119 %2122
       %2124 = OpIAdd %uint %2118 %2123
       %2125 = OpIMul %uint %2122 %2124
       %2126 = OpIAdd %uint %2119 %2125
       %2127 = OpIMul %uint %2124 %2126
       %2128 = OpIAdd %uint %2122 %2127
       %2129 = OpCompositeInsert %v3uint %2128 %550 0
       %2130 = OpShiftRightLogical %v3uint %2129 %2079
       %2131 = OpCompositeExtract %uint %2130 0
       %2132 = OpCompositeConstruct %v3uint %2131 %2131 %2131
       %2133 = OpBitwiseAnd %v3uint %2132 %386
       %2134 = OpConvertUToF %v3float %2133
       %2135 = OpExtInst %v3float %1 Fma %2134 %390 %278
       %2136 = OpDot %float %2135 %2113
       %2137 = OpConvertFToS %int %2057
       %2138 = OpFSub %v3float %2052 %134
       %2139 = OpCompositeConstruct %v3int %2137 %int_0 %int_0
       %2140 = OpBitcast %v3uint %2139
       %2141 = OpIMul %v3uint %2140 %401
       %2142 = OpIAdd %v3uint %2141 %403
       %2143 = OpCompositeExtract %uint %2142 1
       %2144 = OpCompositeExtract %uint %2142 2
       %2145 = OpIMul %uint %2143 %2144
       %2146 = OpCompositeExtract %uint %2142 0
       %2147 = OpIAdd %uint %2146 %2145
       %2148 = OpIMul %uint %2144 %2147
       %2149 = OpIAdd %uint %2143 %2148
       %2150 = OpIMul %uint %2147 %2149
       %2151 = OpIAdd %uint %2144 %2150
       %2152 = OpIMul %uint %2149 %2151
       %2153 = OpIAdd %uint %2147 %2152
       %2154 = OpCompositeInsert %v3uint %2153 %550 0
       %2155 = OpShiftRightLogical %v3uint %2154 %2079
       %2156 = OpCompositeExtract %uint %2155 0
       %2157 = OpCompositeConstruct %v3uint %2156 %2156 %2156
       %2158 = OpBitwiseAnd %v3uint %2157 %386
       %2159 = OpConvertUToF %v3float %2158
       %2160 = OpExtInst %v3float %1 Fma %2159 %390 %278
       %2161 = OpDot %float %2160 %2138
       %2162 = OpConvertFToS %int %2058
       %2163 = OpFSub %v3float %2052 %290
       %2164 = OpCompositeConstruct %v3int %2162 %int_0 %int_0
       %2165 = OpBitcast %v3uint %2164
       %2166 = OpIMul %v3uint %2165 %401
       %2167 = OpIAdd %v3uint %2166 %403
       %2168 = OpCompositeExtract %uint %2167 1
       %2169 = OpCompositeExtract %uint %2167 2
       %2170 = OpIMul %uint %2168 %2169
       %2171 = OpCompositeExtract %uint %2167 0
       %2172 = OpIAdd %uint %2171 %2170
       %2173 = OpIMul %uint %2169 %2172
       %2174 = OpIAdd %uint %2168 %2173
       %2175 = OpIMul %uint %2172 %2174
       %2176 = OpIAdd %uint %2169 %2175
       %2177 = OpIMul %uint %2174 %2176
       %2178 = OpIAdd %uint %2172 %2177
       %2179 = OpCompositeInsert %v3uint %2178 %550 0
       %2180 = OpShiftRightLogical %v3uint %2179 %2079
       %2181 = OpCompositeExtract %uint %2180 0
       %2182 = OpCompositeConstruct %v3uint %2181 %2181 %2181
       %2183 = OpBitwiseAnd %v3uint %2182 %386
       %2184 = OpConvertUToF %v3float %2183
       %2185 = OpExtInst %v3float %1 Fma %2184 %390 %278
       %2186 = OpDot %float %2185 %2163
       %2187 = OpConvertFToS %int %2059
       %2188 = OpFSub %v3float %2052 %139
       %2189 = OpCompositeConstruct %v3int %2187 %int_0 %int_0
       %2190 = OpBitcast %v3uint %2189
       %2191 = OpIMul %v3uint %2190 %401
       %2192 = OpIAdd %v3uint %2191 %403
       %2193 = OpCompositeExtract %uint %2192 1
       %2194 = OpCompositeExtract %uint %2192 2
       %2195 = OpIMul %uint %2193 %2194
       %2196 = OpCompositeExtract %uint %2192 0
       %2197 = OpIAdd %uint %2196 %2195
       %2198 = OpIMul %uint %2194 %2197
       %2199 = OpIAdd %uint %2193 %2198
       %2200 = OpIMul %uint %2197 %2199
       %2201 = OpIAdd %uint %2194 %2200
       %2202 = OpIMul %uint %2199 %2201
       %2203 = OpIAdd %uint %2197 %2202
       %2204 = OpCompositeInsert %v3uint %2203 %550 0
       %2205 = OpShiftRightLogical %v3uint %2204 %2079
       %2206 = OpCompositeExtract %uint %2205 0
       %2207 = OpCompositeConstruct %v3uint %2206 %2206 %2206
       %2208 = OpBitwiseAnd %v3uint %2207 %386
       %2209 = OpConvertUToF %v3float %2208
       %2210 = OpExtInst %v3float %1 Fma %2209 %390 %278
       %2211 = OpDot %float %2210 %2188
       %2212 = OpConvertFToS %int %2060
       %2213 = OpFSub %v3float %2052 %135
       %2214 = OpCompositeConstruct %v3int %2212 %int_0 %int_0
       %2215 = OpBitcast %v3uint %2214
       %2216 = OpIMul %v3uint %2215 %401
       %2217 = OpIAdd %v3uint %2216 %403
       %2218 = OpCompositeExtract %uint %2217 1
       %2219 = OpCompositeExtract %uint %2217 2
       %2220 = OpIMul %uint %2218 %2219
       %2221 = OpCompositeExtract %uint %2217 0
       %2222 = OpIAdd %uint %2221 %2220
       %2223 = OpIMul %uint %2219 %2222
       %2224 = OpIAdd %uint %2218 %2223
       %2225 = OpIMul %uint %2222 %2224
       %2226 = OpIAdd %uint %2219 %2225
       %2227 = OpIMul %uint %2224 %2226
       %2228 = OpIAdd %uint %2222 %2227
       %2229 = OpCompositeInsert %v3uint %2228 %550 0
       %2230 = OpShiftRightLogical %v3uint %2229 %2079
       %2231 = OpCompositeExtract %uint %2230 0
       %2232 = OpCompositeConstruct %v3uint %2231 %2231 %2231
       %2233 = OpBitwiseAnd %v3uint %2232 %386
       %2234 = OpConvertUToF %v3float %2233
       %2235 = OpExtInst %v3float %1 Fma %2234 %390 %278
       %2236 = OpDot %float %2235 %2213
       %2237 = OpConvertFToS %int %2061
       %2238 = OpFSub %v3float %2052 %127
       %2239 = OpCompositeConstruct %v3int %2237 %int_0 %int_0
       %2240 = OpBitcast %v3uint %2239
       %2241 = OpIMul %v3uint %2240 %401
       %2242 = OpIAdd %v3uint %2241 %403
       %2243 = OpCompositeExtract %uint %2242 1
       %2244 = OpCompositeExtract %uint %2242 2
       %2245 = OpIMul %uint %2243 %2244
       %2246 = OpCompositeExtract %uint %2242 0
       %2247 = OpIAdd %uint %2246 %2245
       %2248 = OpIMul %uint %2244 %2247
       %2249 = OpIAdd %uint %2243 %2248
       %2250 = OpIMul %uint %2247 %2249
       %2251 = OpIAdd %uint %2244 %2250
       %2252 = OpIMul %uint %2249 %2251
       %2253 = OpIAdd %uint %2247 %2252
       %2254 = OpCompositeInsert %v3uint %2253 %550 0
       %2255 = OpShiftRightLogical %v3uint %2254 %2079
       %2256 = OpCompositeExtract %uint %2255 0
       %2257 = OpCompositeConstruct %v3uint %2256 %2256 %2256
       %2258 = OpBitwiseAnd %v3uint %2257 %386
       %2259 = OpConvertUToF %v3float %2258
       %2260 = OpExtInst %v3float %1 Fma %2259 %390 %278
       %2261 = OpDot %float %2260 %2238
       %2262 = OpCompositeExtract %float %2052 0
       %2263 = OpCompositeExtract %float %2052 1
       %2264 = OpCompositeExtract %float %2052 2
       %2265 = OpCompositeConstruct %v4float %2262 %2263 %2264 %float_0
       %2266 = OpFMul %v4float %2265 %2265
       %2267 = OpFMul %v4float %2266 %2265
       %2268 = OpVectorTimesScalar %v4float %2265 %float_6
       %2269 = OpFSub %v4float %2268 %381
       %2270 = OpExtInst %v4float %1 Fma %2265 %2269 %382
       %2271 = OpFMul %v4float %2267 %2270
       %2272 = OpCompositeExtract %float %2271 0
       %2273 = OpExtInst %float %1 FMix %2086 %2111 %2272
       %2274 = OpExtInst %float %1 FMix %2136 %2161 %2272
       %2275 = OpCompositeExtract %float %2271 1
       %2276 = OpExtInst %float %1 FMix %2273 %2274 %2275
       %2277 = OpExtInst %float %1 FMix %2186 %2211 %2272
       %2278 = OpExtInst %float %1 FMix %2236 %2261 %2272
       %2279 = OpExtInst %float %1 FMix %2277 %2278 %2275
       %2280 = OpCompositeExtract %float %2271 2
       %2281 = OpExtInst %float %1 FMix %2276 %2279 %2280
       %2282 = OpExtInst %float %1 FAbs %2281
       %2047 = OpExtInst %float %1 Fma %2282 %2044 %2046
       %2042 = OpVectorTimesScalar %v3float %2041 %float_2
       %2045 = OpFMul %float %2044 %float_0_5
       %2049 = OpIAdd %uint %2048 %uint_1
               OpBranch %2040
       %2051 = OpLabel
       %2283 = OpExtInst %float %1 FMix %float_0 %float_1 %2046
       %2284 = OpFMul %v3float %2018 %509
       %2285 = OpCompositeExtract %float %2284 0
       %2286 = OpCompositeExtract %float %2284 1
       %2287 = OpCompositeExtract %float %2284 2
       %2288 = OpCompositeConstruct %v2float %2287 %2287
       %2289 = OpFAdd %v2float %2026 %2288
       %2290 = OpCompositeExtract %float %2289 0
       %2291 = OpCompositeConstruct %v3float %2285 %2286 %2290
       %2292 = OpVectorTimesScalar %v3float %2291 %float_4_76837158en07
       %2293 = OpFAdd %v3float %2292 %137
       %2294 = OpExtInst %v3float %1 Fma %2017 %509 %2293
       %2295 = OpExtInst %v3float %1 Floor %2294
       %2296 = OpFNegate %v3float %2295
       %2297 = OpExtInst %v3float %1 Fma %2017 %509 %2296
       %2298 = OpVectorTimesScalar %v3float %2297 %float_2097152
       %2299 = OpFAdd %v3float %2298 %2291
       %2300 = OpVectorTimesScalar %v3float %2299 %float_1
               OpBranch %2301
       %2301 = OpLabel
       %2302 = OpPhi %v3float %2300 %2051 %2303 %2304
       %2305 = OpPhi %float %float_1 %2051 %2306 %2304
       %2307 = OpPhi %float %float_0 %2051 %2308 %2304
       %2309 = OpPhi %uint %uint_0 %2051 %2310 %2304
       %2311 = OpULessThan %bool %2309 %uint_10
               OpLoopMerge %2312 %2304 DontUnroll
               OpBranchConditional %2311 %2304 %2312
       %2304 = OpLabel
       %2313 = OpExtInst %v3float %1 Fract %2302
       %2314 = OpExtInst %v3float %1 Floor %2302
       %2315 = OpDot %float %2314 %385
       %2316 = OpFAdd %float %2315 %float_19
       %2317 = OpFAdd %float %2315 %float_47
       %2318 = OpFAdd %float %2315 %float_66
       %2319 = OpFAdd %float %2315 %float_101
       %2320 = OpFAdd %float %2315 %float_120
       %2321 = OpFAdd %float %2315 %float_148
       %2322 = OpFAdd %float %2315 %float_167
       %2323 = OpConvertFToS %int %2315
       %2324 = OpCompositeConstruct %v3int %2323 %int_0 %int_0
       %2325 = OpBitcast %v3uint %2324
       %2326 = OpIMul %v3uint %2325 %401
       %2327 = OpIAdd %v3uint %2326 %403
       %2328 = OpCompositeExtract %uint %2327 1
       %2329 = OpCompositeExtract %uint %2327 2
       %2330 = OpIMul %uint %2328 %2329
       %2331 = OpCompositeExtract %uint %2327 0
       %2332 = OpIAdd %uint %2331 %2330
       %2333 = OpIMul %uint %2329 %2332
       %2334 = OpIAdd %uint %2328 %2333
       %2335 = OpIMul %uint %2332 %2334
       %2336 = OpIAdd %uint %2329 %2335
       %2337 = OpIMul %uint %2334 %2336
       %2338 = OpIAdd %uint %2332 %2337
       %2339 = OpCompositeInsert %v3uint %2338 %550 0
       %2340 = OpBitwiseAnd %v3uint %404 %405
       %2341 = OpShiftRightLogical %v3uint %2339 %2340
       %2342 = OpCompositeExtract %uint %2341 0
       %2343 = OpCompositeConstruct %v3uint %2342 %2342 %2342
       %2344 = OpBitwiseAnd %v3uint %2343 %386
       %2345 = OpConvertUToF %v3float %2344
       %2346 = OpExtInst %v3float %1 Fma %2345 %390 %278
       %2347 = OpDot %float %2346 %2313
       %2348 = OpConvertFToS %int %2316
       %2349 = OpFSub %v3float %2313 %350
       %2350 = OpCompositeConstruct %v3int %2348 %int_0 %int_0
       %2351 = OpBitcast %v3uint %2350
       %2352 = OpIMul %v3uint %2351 %401
       %2353 = OpIAdd %v3uint %2352 %403
       %2354 = OpCompositeExtract %uint %2353 1
       %2355 = OpCompositeExtract %uint %2353 2
       %2356 = OpIMul %uint %2354 %2355
       %2357 = OpCompositeExtract %uint %2353 0
       %2358 = OpIAdd %uint %2357 %2356
       %2359 = OpIMul %uint %2355 %2358
       %2360 = OpIAdd %uint %2354 %2359
       %2361 = OpIMul %uint %2358 %2360
       %2362 = OpIAdd %uint %2355 %2361
       %2363 = OpIMul %uint %2360 %2362
       %2364 = OpIAdd %uint %2358 %2363
       %2365 = OpCompositeInsert %v3uint %2364 %550 0
       %2366 = OpShiftRightLogical %v3uint %2365 %2340
       %2367 = OpCompositeExtract %uint %2366 0
       %2368 = OpCompositeConstruct %v3uint %2367 %2367 %2367
       %2369 = OpBitwiseAnd %v3uint %2368 %386
       %2370 = OpConvertUToF %v3float %2369
       %2371 = OpExtInst %v3float %1 Fma %2370 %390 %278
       %2372 = OpDot %float %2371 %2349
       %2373 = OpConvertFToS %int %2317
       %2374 = OpFSub %v3float %2313 %351
       %2375 = OpCompositeConstruct %v3int %2373 %int_0 %int_0
       %2376 = OpBitcast %v3uint %2375
       %2377 = OpIMul %v3uint %2376 %401
       %2378 = OpIAdd %v3uint %2377 %403
       %2379 = OpCompositeExtract %uint %2378 1
       %2380 = OpCompositeExtract %uint %2378 2
       %2381 = OpIMul %uint %2379 %2380
       %2382 = OpCompositeExtract %uint %2378 0
       %2383 = OpIAdd %uint %2382 %2381
       %2384 = OpIMul %uint %2380 %2383
       %2385 = OpIAdd %uint %2379 %2384
       %2386 = OpIMul %uint %2383 %2385
       %2387 = OpIAdd %uint %2380 %2386
       %2388 = OpIMul %uint %2385 %2387
       %2389 = OpIAdd %uint %2383 %2388
       %2390 = OpCompositeInsert %v3uint %2389 %550 0
       %2391 = OpShiftRightLogical %v3uint %2390 %2340
       %2392 = OpCompositeExtract %uint %2391 0
       %2393 = OpCompositeConstruct %v3uint %2392 %2392 %2392
       %2394 = OpBitwiseAnd %v3uint %2393 %386
       %2395 = OpConvertUToF %v3float %2394
       %2396 = OpExtInst %v3float %1 Fma %2395 %390 %278
       %2397 = OpDot %float %2396 %2374
       %2398 = OpConvertFToS %int %2318
       %2399 = OpFSub %v3float %2313 %134
       %2400 = OpCompositeConstruct %v3int %2398 %int_0 %int_0
       %2401 = OpBitcast %v3uint %2400
       %2402 = OpIMul %v3uint %2401 %401
       %2403 = OpIAdd %v3uint %2402 %403
       %2404 = OpCompositeExtract %uint %2403 1
       %2405 = OpCompositeExtract %uint %2403 2
       %2406 = OpIMul %uint %2404 %2405
       %2407 = OpCompositeExtract %uint %2403 0
       %2408 = OpIAdd %uint %2407 %2406
       %2409 = OpIMul %uint %2405 %2408
       %2410 = OpIAdd %uint %2404 %2409
       %2411 = OpIMul %uint %2408 %2410
       %2412 = OpIAdd %uint %2405 %2411
       %2413 = OpIMul %uint %2410 %2412
       %2414 = OpIAdd %uint %2408 %2413
       %2415 = OpCompositeInsert %v3uint %2414 %550 0
       %2416 = OpShiftRightLogical %v3uint %2415 %2340
       %2417 = OpCompositeExtract %uint %2416 0
       %2418 = OpCompositeConstruct %v3uint %2417 %2417 %2417
       %2419 = OpBitwiseAnd %v3uint %2418 %386
       %2420 = OpConvertUToF %v3float %2419
       %2421 = OpExtInst %v3float %1 Fma %2420 %390 %278
       %2422 = OpDot %float %2421 %2399
       %2423 = OpConvertFToS %int %2319
       %2424 = OpFSub %v3float %2313 %290
       %2425 = OpCompositeConstruct %v3int %2423 %int_0 %int_0
       %2426 = OpBitcast %v3uint %2425
       %2427 = OpIMul %v3uint %2426 %401
       %2428 = OpIAdd %v3uint %2427 %403
       %2429 = OpCompositeExtract %uint %2428 1
       %2430 = OpCompositeExtract %uint %2428 2
       %2431 = OpIMul %uint %2429 %2430
       %2432 = OpCompositeExtract %uint %2428 0
       %2433 = OpIAdd %uint %2432 %2431
       %2434 = OpIMul %uint %2430 %2433
       %2435 = OpIAdd %uint %2429 %2434
       %2436 = OpIMul %uint %2433 %2435
       %2437 = OpIAdd %uint %2430 %2436
       %2438 = OpIMul %uint %2435 %2437
       %2439 = OpIAdd %uint %2433 %2438
       %2440 = OpCompositeInsert %v3uint %2439 %550 0
       %2441 = OpShiftRightLogical %v3uint %2440 %2340
       %2442 = OpCompositeExtract %uint %2441 0
       %2443 = OpCompositeConstruct %v3uint %2442 %2442 %2442
       %2444 = OpBitwiseAnd %v3uint %2443 %386
       %2445 = OpConvertUToF %v3float %2444
       %2446 = OpExtInst %v3float %1 Fma %2445 %390 %278
       %2447 = OpDot %float %2446 %2424
       %2448 = OpConvertFToS %int %2320
       %2449 = OpFSub %v3float %2313 %139
       %2450 = OpCompositeConstruct %v3int %2448 %int_0 %int_0
       %2451 = OpBitcast %v3uint %2450
       %2452 = OpIMul %v3uint %2451 %401
       %2453 = OpIAdd %v3uint %2452 %403
       %2454 = OpCompositeExtract %uint %2453 1
       %2455 = OpCompositeExtract %uint %2453 2
       %2456 = OpIMul %uint %2454 %2455
       %2457 = OpCompositeExtract %uint %2453 0
       %2458 = OpIAdd %uint %2457 %2456
       %2459 = OpIMul %uint %2455 %2458
       %2460 = OpIAdd %uint %2454 %2459
       %2461 = OpIMul %uint %2458 %2460
       %2462 = OpIAdd %uint %2455 %2461
       %2463 = OpIMul %uint %2460 %2462
       %2464 = OpIAdd %uint %2458 %2463
       %2465 = OpCompositeInsert %v3uint %2464 %550 0
       %2466 = OpShiftRightLogical %v3uint %2465 %2340
       %2467 = OpCompositeExtract %uint %2466 0
       %2468 = OpCompositeConstruct %v3uint %2467 %2467 %2467
       %2469 = OpBitwiseAnd %v3uint %2468 %386
       %2470 = OpConvertUToF %v3float %2469
       %2471 = OpExtInst %v3float %1 Fma %2470 %390 %278
       %2472 = OpDot %float %2471 %2449
       %2473 = OpConvertFToS %int %2321
       %2474 = OpFSub %v3float %2313 %135
       %2475 = OpCompositeConstruct %v3int %2473 %int_0 %int_0
       %2476 = OpBitcast %v3uint %2475
       %2477 = OpIMul %v3uint %2476 %401
       %2478 = OpIAdd %v3uint %2477 %403
       %2479 = OpCompositeExtract %uint %2478 1
       %2480 = OpCompositeExtract %uint %2478 2
       %2481 = OpIMul %uint %2479 %2480
       %2482 = OpCompositeExtract %uint %2478 0
       %2483 = OpIAdd %uint %2482 %2481
       %2484 = OpIMul %uint %2480 %2483
       %2485 = OpIAdd %uint %2479 %2484
       %2486 = OpIMul %uint %2483 %2485
       %2487 = OpIAdd %uint %2480 %2486
       %2488 = OpIMul %uint %2485 %2487
       %2489 = OpIAdd %uint %2483 %2488
       %2490 = OpCompositeInsert %v3uint %2489 %550 0
       %2491 = OpShiftRightLogical %v3uint %2490 %2340
       %2492 = OpCompositeExtract %uint %2491 0
       %2493 = OpCompositeConstruct %v3uint %2492 %2492 %2492
       %2494 = OpBitwiseAnd %v3uint %2493 %386
       %2495 = OpConvertUToF %v3float %2494
       %2496 = OpExtInst %v3float %1 Fma %2495 %390 %278
       %2497 = OpDot %float %2496 %2474
       %2498 = OpConvertFToS %int %2322
       %2499 = OpFSub %v3float %2313 %127
       %2500 = OpCompositeConstruct %v3int %2498 %int_0 %int_0
       %2501 = OpBitcast %v3uint %2500
       %2502 = OpIMul %v3uint %2501 %401
       %2503 = OpIAdd %v3uint %2502 %403
       %2504 = OpCompositeExtract %uint %2503 1
       %2505 = OpCompositeExtract %uint %2503 2
       %2506 = OpIMul %uint %2504 %2505
       %2507 = OpCompositeExtract %uint %2503 0
       %2508 = OpIAdd %uint %2507 %2506
       %2509 = OpIMul %uint %2505 %2508
       %2510 = OpIAdd %uint %2504 %2509
       %2511 = OpIMul %uint %2508 %2510
       %2512 = OpIAdd %uint %2505 %2511
       %2513 = OpIMul %uint %2510 %2512
       %2514 = OpIAdd %uint %2508 %2513
       %2515 = OpCompositeInsert %v3uint %2514 %550 0
       %2516 = OpShiftRightLogical %v3uint %2515 %2340
       %2517 = OpCompositeExtract %uint %2516 0
       %2518 = OpCompositeConstruct %v3uint %2517 %2517 %2517
       %2519 = OpBitwiseAnd %v3uint %2518 %386
       %2520 = OpConvertUToF %v3float %2519
       %2521 = OpExtInst %v3float %1 Fma %2520 %390 %278
       %2522 = OpDot %float %2521 %2499
       %2523 = OpCompositeExtract %float %2313 0
       %2524 = OpCompositeExtract %float %2313 1
       %2525 = OpCompositeExtract %float %2313 2
       %2526 = OpCompositeConstruct %v4float %2523 %2524 %2525 %float_0
       %2527 = OpFMul %v4float %2526 %2526
       %2528 = OpFMul %v4float %2527 %2526
       %2529 = OpVectorTimesScalar %v4float %2526 %float_6
       %2530 = OpFSub %v4float %2529 %381
       %2531 = OpExtInst %v4float %1 Fma %2526 %2530 %382
       %2532 = OpFMul %v4float %2528 %2531
       %2533 = OpCompositeExtract %float %2532 0
       %2534 = OpExtInst %float %1 FMix %2347 %2372 %2533
       %2535 = OpExtInst %float %1 FMix %2397 %2422 %2533
       %2536 = OpCompositeExtract %float %2532 1
       %2537 = OpExtInst %float %1 FMix %2534 %2535 %2536
       %2538 = OpExtInst %float %1 FMix %2447 %2472 %2533
       %2539 = OpExtInst %float %1 FMix %2497 %2522 %2533
       %2540 = OpExtInst %float %1 FMix %2538 %2539 %2536
       %2541 = OpCompositeExtract %float %2532 2
       %2542 = OpExtInst %float %1 FMix %2537 %2540 %2541
       %2543 = OpExtInst %float %1 FAbs %2542
       %2308 = OpExtInst %float %1 Fma %2543 %2305 %2307
       %2303 = OpVectorTimesScalar %v3float %2302 %float_2
       %2306 = OpFMul %float %2305 %float_0_5
       %2310 = OpIAdd %uint %2309 %uint_1
               OpBranch %2301
       %2312 = OpLabel
       %2544 = OpExtInst %float %1 FMix %float_0 %float_1 %2307
       %2545 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_1
       %2546 = OpLoad %float %2545
       %2547 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_0
       %2548 = OpLoad %float %2547
       %2549 = OpExtInst %float %1 Fma %2544 %2546 %2548
       %2550 = OpFMul %float %2283 %2549
       %2551 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_16 %int_3
       %2552 = OpLoad %float %2551
       %2553 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_2
       %2554 = OpLoad %float %2553
       %2555 = OpExtInst %float %1 FMix %2552 %2554 %2550
       %2556 = OpExtInst %float %1 Sin %2008
       %2557 = OpFMul %float %2556 %2555
       %2558 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_20
       %2559 = OpLoad %v4float %2558
       %2560 = OpVectorShuffle %v3float %2559 %2559 0 1 2
       %2561 = OpFAdd %v3float %1684 %2560
       %2562 = OpExtInst %v3float %1 NMax %2561 %278
       %2563 = OpExtInst %v3float %1 NMin %2562 %127
       %2564 = OpCompositeExtract %float %2563 0
       %2565 = OpCompositeExtract %float %2563 1
       %2566 = OpCompositeConstruct %v2float %2564 %2565
       %2567 = OpFMul %v2float %1695 %2566
       %2568 = OpFMul %v2float %2566 %1696
       %2569 = OpCompositeExtract %float %2567 0
       %2570 = OpCompositeExtract %float %2568 0
       %2571 = OpCompositeExtract %float %2567 1
       %2572 = OpCompositeExtract %float %2568 1
       %2573 = OpFAdd %float %2569 %2571
       %2574 = OpFAdd %float %2570 %2572
       %2575 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_21 %int_1
       %2576 = OpLoad %float %2575
       %2577 = OpFMul %float %2573 %2576
       %2578 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_22 %int_0
       %2579 = OpLoad %float %2578
       %2580 = OpFMul %float %2579 %1994
       %2581 = OpExtInst %float %1 Fma %2574 %2576 %2580
       %2582 = OpExtInst %float %1 Floor %2577
       %2583 = OpFNegate %float %2582
       %2584 = OpExtInst %float %1 Fma %2573 %2576 %2583
       %2585 = OpExtInst %float %1 Fma %2584 %float_2097152 %2581
       %2586 = OpExtInst %float %1 Floor %2585
       %2587 = OpFMul %float %2582 %float_n6_28318548
       %2588 = OpExtInst %float %1 Fma %2577 %float_6_28318548 %2587
       %2589 = OpFMul %float %2586 %float_n6_28318548
       %2590 = OpExtInst %float %1 Fma %2581 %float_6_28318548 %2589
       %2591 = OpExtInst %float %1 Fma %2588 %float_2097152 %2590
       %2592 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_22 %int_2
       %2593 = OpLoad %float %2592
       %2594 = OpFMul %float %2555 %2593
       %2595 = OpExtInst %float %1 Sin %2591
       %2596 = OpFMul %float %2595 %2594
       %2597 = OpCompositeConstruct %v3float %549 %549 %2557
       %2598 = OpCompositeConstruct %v3float %549 %549 %2596
       %2599 = OpFAdd %v3float %2597 %2598
       %2600 = OpFSub %v3float %1684 %1687
       %2601 = OpExtInst %v3float %1 NMax %2600 %278
       %2602 = OpExtInst %v3float %1 NMin %2601 %127
       %2603 = OpCompositeExtract %float %2602 0
       %2604 = OpCompositeExtract %float %2602 1
       %2605 = OpCompositeConstruct %v2float %2603 %2604
       %2606 = OpFMul %v2float %1695 %2605
       %2607 = OpFMul %v2float %2605 %1696
       %2608 = OpCompositeExtract %float %2606 0
       %2609 = OpCompositeExtract %float %2607 0
       %2610 = OpCompositeExtract %float %2606 1
       %2611 = OpCompositeExtract %float %2607 1
       %2612 = OpFAdd %float %2608 %2610
       %2613 = OpFAdd %float %2609 %2611
       %2614 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_23 %int_1
       %2615 = OpLoad %float %2614
       %2616 = OpFMul %float %2612 %2615
       %2617 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_23 %int_3
       %2618 = OpLoad %float %2617
       %2619 = OpFMul %float %2618 %1994
       %2620 = OpExtInst %float %1 Fma %2613 %2615 %2619
       %2621 = OpExtInst %float %1 Floor %2616
       %2622 = OpFNegate %float %2621
       %2623 = OpExtInst %float %1 Fma %2612 %2615 %2622
       %2624 = OpExtInst %float %1 Fma %2623 %float_2097152 %2620
       %2625 = OpExtInst %float %1 Floor %2624
       %2626 = OpFMul %float %2621 %float_n6_28318548
       %2627 = OpExtInst %float %1 Fma %2616 %float_6_28318548 %2626
       %2628 = OpFMul %float %2625 %float_n6_28318548
       %2629 = OpExtInst %float %1 Fma %2620 %float_6_28318548 %2628
       %2630 = OpExtInst %float %1 Fma %2627 %float_2097152 %2629
       %2631 = OpFMul %float %2594 %2593
       %2632 = OpExtInst %float %1 Sin %2630
       %2633 = OpFMul %float %2632 %2631
       %2634 = OpCompositeConstruct %v3float %549 %549 %2633
       %2635 = OpFAdd %v3float %2599 %2634
       %2636 = OpFSub %v3float %1684 %2560
       %2637 = OpExtInst %v3float %1 NMax %2636 %278
       %2638 = OpExtInst %v3float %1 NMin %2637 %127
       %2639 = OpCompositeExtract %float %2638 0
       %2640 = OpCompositeExtract %float %2638 1
       %2641 = OpCompositeConstruct %v2float %2639 %2640
       %2642 = OpFMul %v2float %1695 %2641
       %2643 = OpFMul %v2float %2641 %1696
       %2644 = OpCompositeExtract %float %2642 0
       %2645 = OpCompositeExtract %float %2643 0
       %2646 = OpCompositeExtract %float %2642 1
       %2647 = OpCompositeExtract %float %2643 1
       %2648 = OpFAdd %float %2644 %2646
       %2649 = OpFAdd %float %2645 %2647
       %2650 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_24 %int_2
       %2651 = OpLoad %float %2650
       %2652 = OpFMul %float %2648 %2651
       %2653 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_25 %int_0
       %2654 = OpLoad %float %2653
       %2655 = OpFMul %float %2654 %1994
       %2656 = OpExtInst %float %1 Fma %2649 %2651 %2655
       %2657 = OpExtInst %float %1 Floor %2652
       %2658 = OpFNegate %float %2657
       %2659 = OpExtInst %float %1 Fma %2648 %2651 %2658
       %2660 = OpExtInst %float %1 Fma %2659 %float_2097152 %2656
       %2661 = OpExtInst %float %1 Floor %2660
       %2662 = OpFMul %float %2657 %float_n6_28318548
       %2663 = OpExtInst %float %1 Fma %2652 %float_6_28318548 %2662
       %2664 = OpFMul %float %2661 %float_n6_28318548
       %2665 = OpExtInst %float %1 Fma %2656 %float_6_28318548 %2664
       %2666 = OpExtInst %float %1 Fma %2663 %float_2097152 %2665
       %2667 = OpFMul %float %2631 %2593
       %2668 = OpExtInst %float %1 Sin %2666
       %2669 = OpFMul %float %2668 %2667
       %2670 = OpCompositeConstruct %v3float %549 %549 %2669
       %2671 = OpFAdd %v3float %2635 %2670
       %2672 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_25 %int_3
       %2673 = OpLoad %float %2672
       %2674 = OpFSub %float %2673 %float_n1
       %2675 = OpExtInst %float %1 FAbs %2674
       %2676 = OpFOrdGreaterThan %bool %2675 %float_9_99999975en06
       %2677 = OpFOrdGreaterThanEqual %bool %2673 %float_n1
       %2678 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_26 %int_0
       %2679 = OpLoad %float %2678
       %2680 = OpSelect %float %2677 %2673 %2679
       %2681 = OpSelect %float %2676 %2680 %2673
       %2682 = OpFSub %float %2681 %float_1
       %2683 = OpExtInst %float %1 FAbs %2682
       %2684 = OpFOrdGreaterThan %bool %2683 %float_9_99999975en06
       %2685 = OpFOrdGreaterThanEqual %bool %2681 %float_1
       %2686 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_26 %int_1
       %2687 = OpLoad %float %2686
       %2688 = OpSelect %float %2685 %2687 %2673
       %2689 = OpSelect %float %2684 %2688 %2673
       %2690 = OpExtInst %float %1 FAbs %2689
       %2691 = OpFOrdGreaterThan %bool %2690 %float_9_99999975en06
       %2692 = OpFOrdGreaterThanEqual %bool %2689 %float_0
       %2693 = OpSelect %float %2692 %float_1 %float_n1
       %2694 = OpSelect %float %2691 %2693 %float_1
       %2695 = OpExtInst %float %1 NMax %2694 %float_n1
       %2696 = OpExtInst %float %1 NMin %2695 %float_1
       %2697 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_27 %int_2
       %2698 = OpLoad %float %2697
       %2699 = OpCompositeConstruct %v3float %2696 %2698 %float_0
       %2700 = OpFAdd %v3float %2699 %1687
       %2701 = OpExtInst %v3float %1 NMax %2700 %278
       %2702 = OpExtInst %v3float %1 NMin %2701 %127
       %2703 = OpCompositeExtract %float %2702 0
       %2704 = OpCompositeExtract %float %2702 1
       %2705 = OpCompositeConstruct %v2float %2703 %2704
       %2706 = OpFMul %v2float %1695 %2705
       %2707 = OpFMul %v2float %2705 %1696
       %2708 = OpCompositeExtract %float %2706 0
       %2709 = OpCompositeExtract %float %2707 0
       %2710 = OpCompositeExtract %float %2706 1
       %2711 = OpCompositeExtract %float %2707 1
       %2712 = OpFAdd %float %2708 %2710
       %2713 = OpFAdd %float %2709 %2711
       %2714 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_29 %int_3
       %2715 = OpLoad %float %2714
       %2716 = OpFMul %float %2712 %2715
       %2717 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_30 %int_2
       %2718 = OpLoad %float %2717
       %2719 = OpFMul %float %2718 %1994
       %2720 = OpExtInst %float %1 Fma %2713 %2715 %2719
       %2721 = OpExtInst %float %1 Floor %2716
       %2722 = OpFNegate %float %2721
       %2723 = OpExtInst %float %1 Fma %2712 %2715 %2722
       %2724 = OpExtInst %float %1 Fma %2723 %float_2097152 %2720
       %2725 = OpExtInst %float %1 Floor %2724
       %2726 = OpFMul %float %2721 %float_n6_28318548
       %2727 = OpExtInst %float %1 Fma %2716 %float_6_28318548 %2726
       %2728 = OpFMul %float %2725 %float_n6_28318548
       %2729 = OpExtInst %float %1 Fma %2720 %float_6_28318548 %2728
       %2730 = OpExtInst %float %1 Fma %2727 %float_2097152 %2729
       %2731 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_30 %int_3
       %2732 = OpLoad %float %2731
       %2733 = OpFMul %float %2555 %2732
       %2734 = OpExtInst %float %1 Sin %2730
       %2735 = OpFMul %float %2734 %2733
       %2736 = OpFAdd %v3float %2699 %2560
       %2737 = OpExtInst %v3float %1 NMax %2736 %278
       %2738 = OpExtInst %v3float %1 NMin %2737 %127
       %2739 = OpCompositeExtract %float %2738 0
       %2740 = OpCompositeExtract %float %2738 1
       %2741 = OpCompositeConstruct %v2float %2739 %2740
       %2742 = OpFMul %v2float %1695 %2741
       %2743 = OpFMul %v2float %2741 %1696
       %2744 = OpCompositeExtract %float %2742 0
       %2745 = OpCompositeExtract %float %2743 0
       %2746 = OpCompositeExtract %float %2742 1
       %2747 = OpCompositeExtract %float %2743 1
       %2748 = OpFAdd %float %2744 %2746
       %2749 = OpFAdd %float %2745 %2747
       %2750 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_31 %int_1
       %2751 = OpLoad %float %2750
       %2752 = OpFMul %float %2748 %2751
       %2753 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_31 %int_3
       %2754 = OpLoad %float %2753
       %2755 = OpFMul %float %2754 %1994
       %2756 = OpExtInst %float %1 Fma %2749 %2751 %2755
       %2757 = OpExtInst %float %1 Floor %2752
       %2758 = OpFNegate %float %2757
       %2759 = OpExtInst %float %1 Fma %2748 %2751 %2758
       %2760 = OpExtInst %float %1 Fma %2759 %float_2097152 %2756
       %2761 = OpExtInst %float %1 Floor %2760
       %2762 = OpFMul %float %2757 %float_n6_28318548
       %2763 = OpExtInst %float %1 Fma %2752 %float_6_28318548 %2762
       %2764 = OpFMul %float %2761 %float_n6_28318548
       %2765 = OpExtInst %float %1 Fma %2756 %float_6_28318548 %2764
       %2766 = OpExtInst %float %1 Fma %2763 %float_2097152 %2765
       %2767 = OpFMul %float %2733 %2593
       %2768 = OpExtInst %float %1 Sin %2766
       %2769 = OpFMul %float %2768 %2767
       %2770 = OpCompositeConstruct %v3float %549 %549 %2735
       %2771 = OpCompositeConstruct %v3float %549 %549 %2769
       %2772 = OpFAdd %v3float %2770 %2771
       %2773 = OpFSub %v3float %2699 %1687
       %2774 = OpExtInst %v3float %1 NMax %2773 %278
       %2775 = OpExtInst %v3float %1 NMin %2774 %127
       %2776 = OpCompositeExtract %float %2775 0
       %2777 = OpCompositeExtract %float %2775 1
       %2778 = OpCompositeConstruct %v2float %2776 %2777
       %2779 = OpFMul %v2float %1695 %2778
       %2780 = OpFMul %v2float %2778 %1696
       %2781 = OpCompositeExtract %float %2779 0
       %2782 = OpCompositeExtract %float %2780 0
       %2783 = OpCompositeExtract %float %2779 1
       %2784 = OpCompositeExtract %float %2780 1
       %2785 = OpFAdd %float %2781 %2783
       %2786 = OpFAdd %float %2782 %2784
       %2787 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_32 %int_1
       %2788 = OpLoad %float %2787
       %2789 = OpFMul %float %2785 %2788
       %2790 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_32 %int_3
       %2791 = OpLoad %float %2790
       %2792 = OpFMul %float %2791 %1994
       %2793 = OpExtInst %float %1 Fma %2786 %2788 %2792
       %2794 = OpExtInst %float %1 Floor %2789
       %2795 = OpFNegate %float %2794
       %2796 = OpExtInst %float %1 Fma %2785 %2788 %2795
       %2797 = OpExtInst %float %1 Fma %2796 %float_2097152 %2793
       %2798 = OpExtInst %float %1 Floor %2797
       %2799 = OpFMul %float %2794 %float_n6_28318548
       %2800 = OpExtInst %float %1 Fma %2789 %float_6_28318548 %2799
       %2801 = OpFMul %float %2798 %float_n6_28318548
       %2802 = OpExtInst %float %1 Fma %2793 %float_6_28318548 %2801
       %2803 = OpExtInst %float %1 Fma %2800 %float_2097152 %2802
       %2804 = OpFMul %float %2767 %2593
       %2805 = OpExtInst %float %1 Sin %2803
       %2806 = OpFMul %float %2805 %2804
       %2807 = OpCompositeConstruct %v3float %549 %549 %2806
       %2808 = OpFAdd %v3float %2772 %2807
       %2809 = OpFSub %v3float %2699 %2560
       %2810 = OpExtInst %v3float %1 NMax %2809 %278
       %2811 = OpExtInst %v3float %1 NMin %2810 %127
       %2812 = OpCompositeExtract %float %2811 0
       %2813 = OpCompositeExtract %float %2811 1
       %2814 = OpCompositeConstruct %v2float %2812 %2813
       %2815 = OpFMul %v2float %1695 %2814
       %2816 = OpFMul %v2float %2814 %1696
       %2817 = OpCompositeExtract %float %2815 0
       %2818 = OpCompositeExtract %float %2816 0
       %2819 = OpCompositeExtract %float %2815 1
       %2820 = OpCompositeExtract %float %2816 1
       %2821 = OpFAdd %float %2817 %2819
       %2822 = OpFAdd %float %2818 %2820
       %2823 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_33 %int_1
       %2824 = OpLoad %float %2823
       %2825 = OpFMul %float %2821 %2824
       %2826 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_33 %int_3
       %2827 = OpLoad %float %2826
       %2828 = OpFMul %float %2827 %1994
       %2829 = OpExtInst %float %1 Fma %2822 %2824 %2828
       %2830 = OpExtInst %float %1 Floor %2825
       %2831 = OpFNegate %float %2830
       %2832 = OpExtInst %float %1 Fma %2821 %2824 %2831
       %2833 = OpExtInst %float %1 Fma %2832 %float_2097152 %2829
       %2834 = OpExtInst %float %1 Floor %2833
       %2835 = OpFMul %float %2830 %float_n6_28318548
       %2836 = OpExtInst %float %1 Fma %2825 %float_6_28318548 %2835
       %2837 = OpFMul %float %2834 %float_n6_28318548
       %2838 = OpExtInst %float %1 Fma %2829 %float_6_28318548 %2837
       %2839 = OpExtInst %float %1 Fma %2836 %float_2097152 %2838
       %2840 = OpFMul %float %2804 %2593
       %2841 = OpExtInst %float %1 Sin %2839
       %2842 = OpFMul %float %2841 %2840
       %2843 = OpCompositeConstruct %v3float %549 %549 %2842
       %2844 = OpFAdd %v3float %2808 %2843
       %2845 = OpFAdd %v3float %2671 %2844
       %2846 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_0
       %2847 = OpLoad %float %2846
       %2848 = OpFSub %float %2847 %float_n1
       %2849 = OpExtInst %float %1 FAbs %2848
       %2850 = OpFOrdGreaterThan %bool %2849 %float_9_99999975en06
       %2851 = OpFOrdGreaterThanEqual %bool %2847 %float_n1
       %2852 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_1
       %2853 = OpLoad %float %2852
       %2854 = OpSelect %float %2851 %2847 %2853
       %2855 = OpSelect %float %2850 %2854 %2847
       %2856 = OpFSub %float %2855 %float_1
       %2857 = OpExtInst %float %1 FAbs %2856
       %2858 = OpFOrdGreaterThan %bool %2857 %float_9_99999975en06
       %2859 = OpFOrdGreaterThanEqual %bool %2855 %float_1
       %2860 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_2
       %2861 = OpLoad %float %2860
       %2862 = OpSelect %float %2859 %2861 %2847
       %2863 = OpSelect %float %2858 %2862 %2847
       %2864 = OpExtInst %float %1 FAbs %2863
       %2865 = OpFOrdGreaterThan %bool %2864 %float_9_99999975en06
       %2866 = OpFOrdGreaterThanEqual %bool %2863 %float_0
       %2867 = OpSelect %float %2866 %float_1 %float_n1
       %2868 = OpSelect %float %2865 %2867 %float_1
       %2869 = OpExtInst %float %1 NMax %2868 %float_n1
       %2870 = OpExtInst %float %1 NMin %2869 %float_1
       %2871 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_3
       %2872 = OpLoad %float %2871
       %2873 = OpCompositeConstruct %v3float %2870 %2872 %float_0
       %2874 = OpFAdd %v3float %2873 %1687
       %2875 = OpExtInst %v3float %1 NMax %2874 %278
       %2876 = OpExtInst %v3float %1 NMin %2875 %127
       %2877 = OpCompositeExtract %float %2876 0
       %2878 = OpCompositeExtract %float %2876 1
       %2879 = OpCompositeConstruct %v2float %2877 %2878
       %2880 = OpFMul %v2float %1695 %2879
       %2881 = OpFMul %v2float %2879 %1696
       %2882 = OpCompositeExtract %float %2880 0
       %2883 = OpCompositeExtract %float %2881 0
       %2884 = OpCompositeExtract %float %2880 1
       %2885 = OpCompositeExtract %float %2881 1
       %2886 = OpFAdd %float %2882 %2884
       %2887 = OpFAdd %float %2883 %2885
       %2888 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_37 %int_2
       %2889 = OpLoad %float %2888
       %2890 = OpFMul %float %2886 %2889
       %2891 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_37 %int_3
       %2892 = OpLoad %float %2891
       %2893 = OpFMul %float %2892 %1994
       %2894 = OpExtInst %float %1 Fma %2887 %2889 %2893
       %2895 = OpExtInst %float %1 Floor %2890
       %2896 = OpFNegate %float %2895
       %2897 = OpExtInst %float %1 Fma %2886 %2889 %2896
       %2898 = OpExtInst %float %1 Fma %2897 %float_2097152 %2894
       %2899 = OpExtInst %float %1 Floor %2898
       %2900 = OpFMul %float %2895 %float_n6_28318548
       %2901 = OpExtInst %float %1 Fma %2890 %float_6_28318548 %2900
       %2902 = OpFMul %float %2899 %float_n6_28318548
       %2903 = OpExtInst %float %1 Fma %2894 %float_6_28318548 %2902
       %2904 = OpExtInst %float %1 Fma %2901 %float_2097152 %2903
       %2905 = OpExtInst %float %1 Sin %2904
       %2906 = OpFMul %float %2905 %2733
       %2907 = OpFAdd %v3float %2873 %2560
       %2908 = OpExtInst %v3float %1 NMax %2907 %278
       %2909 = OpExtInst %v3float %1 NMin %2908 %127
       %2910 = OpCompositeExtract %float %2909 0
       %2911 = OpCompositeExtract %float %2909 1
       %2912 = OpCompositeConstruct %v2float %2910 %2911
       %2913 = OpFMul %v2float %1695 %2912
       %2914 = OpFMul %v2float %2912 %1696
       %2915 = OpCompositeExtract %float %2913 0
       %2916 = OpCompositeExtract %float %2914 0
       %2917 = OpCompositeExtract %float %2913 1
       %2918 = OpCompositeExtract %float %2914 1
       %2919 = OpFAdd %float %2915 %2917
       %2920 = OpFAdd %float %2916 %2918
       %2921 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_38 %int_1
       %2922 = OpLoad %float %2921
       %2923 = OpFMul %float %2919 %2922
       %2924 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_38 %int_2
       %2925 = OpLoad %float %2924
       %2926 = OpFMul %float %2925 %1994
       %2927 = OpExtInst %float %1 Fma %2920 %2922 %2926
       %2928 = OpExtInst %float %1 Floor %2923
       %2929 = OpFNegate %float %2928
       %2930 = OpExtInst %float %1 Fma %2919 %2922 %2929
       %2931 = OpExtInst %float %1 Fma %2930 %float_2097152 %2927
       %2932 = OpExtInst %float %1 Floor %2931
       %2933 = OpFMul %float %2928 %float_n6_28318548
       %2934 = OpExtInst %float %1 Fma %2923 %float_6_28318548 %2933
       %2935 = OpFMul %float %2932 %float_n6_28318548
       %2936 = OpExtInst %float %1 Fma %2927 %float_6_28318548 %2935
       %2937 = OpExtInst %float %1 Fma %2934 %float_2097152 %2936
       %2938 = OpExtInst %float %1 Sin %2937
       %2939 = OpFMul %float %2938 %2767
       %2940 = OpCompositeConstruct %v3float %549 %549 %2906
       %2941 = OpCompositeConstruct %v3float %549 %549 %2939
       %2942 = OpFAdd %v3float %2940 %2941
       %2943 = OpFSub %v3float %2873 %1687
       %2944 = OpExtInst %v3float %1 NMax %2943 %278
       %2945 = OpExtInst %v3float %1 NMin %2944 %127
       %2946 = OpCompositeExtract %float %2945 0
       %2947 = OpCompositeExtract %float %2945 1
       %2948 = OpCompositeConstruct %v2float %2946 %2947
       %2949 = OpFMul %v2float %1695 %2948
       %2950 = OpFMul %v2float %2948 %1696
       %2951 = OpCompositeExtract %float %2949 0
       %2952 = OpCompositeExtract %float %2950 0
       %2953 = OpCompositeExtract %float %2949 1
       %2954 = OpCompositeExtract %float %2950 1
       %2955 = OpFAdd %float %2951 %2953
       %2956 = OpFAdd %float %2952 %2954
       %2957 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_0
       %2958 = OpLoad %float %2957
       %2959 = OpFMul %float %2955 %2958
       %2960 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_1
       %2961 = OpLoad %float %2960
       %2962 = OpFMul %float %2961 %1994
       %2963 = OpExtInst %float %1 Fma %2956 %2958 %2962
       %2964 = OpExtInst %float %1 Floor %2959
       %2965 = OpFNegate %float %2964
       %2966 = OpExtInst %float %1 Fma %2955 %2958 %2965
       %2967 = OpExtInst %float %1 Fma %2966 %float_2097152 %2963
       %2968 = OpExtInst %float %1 Floor %2967
       %2969 = OpFMul %float %2964 %float_n6_28318548
       %2970 = OpExtInst %float %1 Fma %2959 %float_6_28318548 %2969
       %2971 = OpFMul %float %2968 %float_n6_28318548
       %2972 = OpExtInst %float %1 Fma %2963 %float_6_28318548 %2971
       %2973 = OpExtInst %float %1 Fma %2970 %float_2097152 %2972
       %2974 = OpExtInst %float %1 Sin %2973
       %2975 = OpFMul %float %2974 %2804
       %2976 = OpCompositeConstruct %v3float %549 %549 %2975
       %2977 = OpFAdd %v3float %2942 %2976
       %2978 = OpFSub %v3float %2873 %2560
       %2979 = OpExtInst %v3float %1 NMax %2978 %278
       %2980 = OpExtInst %v3float %1 NMin %2979 %127
       %2981 = OpCompositeExtract %float %2980 0
       %2982 = OpCompositeExtract %float %2980 1
       %2983 = OpCompositeConstruct %v2float %2981 %2982
       %2984 = OpFMul %v2float %1695 %2983
       %2985 = OpFMul %v2float %2983 %1696
       %2986 = OpCompositeExtract %float %2984 0
       %2987 = OpCompositeExtract %float %2985 0
       %2988 = OpCompositeExtract %float %2984 1
       %2989 = OpCompositeExtract %float %2985 1
       %2990 = OpFAdd %float %2986 %2988
       %2991 = OpFAdd %float %2987 %2989
       %2992 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_3
       %2993 = OpLoad %float %2992
       %2994 = OpFMul %float %2990 %2993
       %2995 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_0
       %2996 = OpLoad %float %2995
       %2997 = OpFMul %float %2996 %1994
       %2998 = OpExtInst %float %1 Fma %2991 %2993 %2997
       %2999 = OpExtInst %float %1 Floor %2994
       %3000 = OpFNegate %float %2999
       %3001 = OpExtInst %float %1 Fma %2990 %2993 %3000
       %3002 = OpExtInst %float %1 Fma %3001 %float_2097152 %2998
       %3003 = OpExtInst %float %1 Floor %3002
       %3004 = OpFMul %float %2999 %float_n6_28318548
       %3005 = OpExtInst %float %1 Fma %2994 %float_6_28318548 %3004
       %3006 = OpFMul %float %3003 %float_n6_28318548
       %3007 = OpExtInst %float %1 Fma %2998 %float_6_28318548 %3006
       %3008 = OpExtInst %float %1 Fma %3005 %float_2097152 %3007
       %3009 = OpExtInst %float %1 Sin %3008
       %3010 = OpFMul %float %3009 %2840
       %3011 = OpCompositeConstruct %v3float %549 %549 %3010
       %3012 = OpFAdd %v3float %2977 %3011
       %3013 = OpFAdd %v3float %2845 %3012
       %3014 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_1
       %3015 = OpLoad %float %3014
       %3016 = OpFSub %float %3015 %float_n1
       %3017 = OpExtInst %float %1 FAbs %3016
       %3018 = OpFOrdGreaterThan %bool %3017 %float_9_99999975en06
       %3019 = OpFOrdGreaterThanEqual %bool %3015 %float_n1
       %3020 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_2
       %3021 = OpLoad %float %3020
       %3022 = OpSelect %float %3019 %3015 %3021
       %3023 = OpSelect %float %3018 %3022 %3015
       %3024 = OpFSub %float %3023 %float_1
       %3025 = OpExtInst %float %1 FAbs %3024
       %3026 = OpFOrdGreaterThan %bool %3025 %float_9_99999975en06
       %3027 = OpFOrdGreaterThanEqual %bool %3023 %float_1
       %3028 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_3
       %3029 = OpLoad %float %3028
       %3030 = OpSelect %float %3027 %3029 %3015
       %3031 = OpSelect %float %3026 %3030 %3015
       %3032 = OpExtInst %float %1 FAbs %3031
       %3033 = OpFOrdGreaterThan %bool %3032 %float_9_99999975en06
       %3034 = OpFOrdGreaterThanEqual %bool %3031 %float_0
       %3035 = OpSelect %float %3034 %float_1 %float_n1
       %3036 = OpSelect %float %3033 %3035 %float_1
       %3037 = OpExtInst %float %1 NMax %3036 %float_n1
       %3038 = OpExtInst %float %1 NMin %3037 %float_1
       %3039 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_42 %int_0
       %3040 = OpLoad %float %3039
       %3041 = OpCompositeConstruct %v3float %3038 %3040 %float_0
       %3042 = OpFAdd %v3float %3041 %1687
       %3043 = OpExtInst %v3float %1 NMax %3042 %278
       %3044 = OpExtInst %v3float %1 NMin %3043 %127
       %3045 = OpCompositeExtract %float %3044 0
       %3046 = OpCompositeExtract %float %3044 1
       %3047 = OpCompositeConstruct %v2float %3045 %3046
       %3048 = OpFMul %v2float %1695 %3047
       %3049 = OpFMul %v2float %3047 %1696
       %3050 = OpCompositeExtract %float %3048 0
       %3051 = OpCompositeExtract %float %3049 0
       %3052 = OpCompositeExtract %float %3048 1
       %3053 = OpCompositeExtract %float %3049 1
       %3054 = OpFAdd %float %3050 %3052
       %3055 = OpFAdd %float %3051 %3053
       %3056 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_43 %int_3
       %3057 = OpLoad %float %3056
       %3058 = OpFMul %float %3054 %3057
       %3059 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_44 %int_0
       %3060 = OpLoad %float %3059
       %3061 = OpFMul %float %3060 %1994
       %3062 = OpExtInst %float %1 Fma %3055 %3057 %3061
       %3063 = OpExtInst %float %1 Floor %3058
       %3064 = OpFNegate %float %3063
       %3065 = OpExtInst %float %1 Fma %3054 %3057 %3064
       %3066 = OpExtInst %float %1 Fma %3065 %float_2097152 %3062
       %3067 = OpExtInst %float %1 Floor %3066
       %3068 = OpFMul %float %3063 %float_n6_28318548
       %3069 = OpExtInst %float %1 Fma %3058 %float_6_28318548 %3068
       %3070 = OpFMul %float %3067 %float_n6_28318548
       %3071 = OpExtInst %float %1 Fma %3062 %float_6_28318548 %3070
       %3072 = OpExtInst %float %1 Fma %3069 %float_2097152 %3071
       %3073 = OpExtInst %float %1 Sin %3072
       %3074 = OpFMul %float %3073 %2555
       %3075 = OpFAdd %v3float %3041 %2560
       %3076 = OpExtInst %v3float %1 NMax %3075 %278
       %3077 = OpExtInst %v3float %1 NMin %3076 %127
       %3078 = OpCompositeExtract %float %3077 0
       %3079 = OpCompositeExtract %float %3077 1
       %3080 = OpCompositeConstruct %v2float %3078 %3079
       %3081 = OpFMul %v2float %1695 %3080
       %3082 = OpFMul %v2float %3080 %1696
       %3083 = OpCompositeExtract %float %3081 0
       %3084 = OpCompositeExtract %float %3082 0
       %3085 = OpCompositeExtract %float %3081 1
       %3086 = OpCompositeExtract %float %3082 1
       %3087 = OpFAdd %float %3083 %3085
       %3088 = OpFAdd %float %3084 %3086
       %3089 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_44 %int_2
       %3090 = OpLoad %float %3089
       %3091 = OpFMul %float %3087 %3090
       %3092 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_44 %int_3
       %3093 = OpLoad %float %3092
       %3094 = OpFMul %float %3093 %1994
       %3095 = OpExtInst %float %1 Fma %3088 %3090 %3094
       %3096 = OpExtInst %float %1 Floor %3091
       %3097 = OpFNegate %float %3096
       %3098 = OpExtInst %float %1 Fma %3087 %3090 %3097
       %3099 = OpExtInst %float %1 Fma %3098 %float_2097152 %3095
       %3100 = OpExtInst %float %1 Floor %3099
       %3101 = OpFMul %float %3096 %float_n6_28318548
       %3102 = OpExtInst %float %1 Fma %3091 %float_6_28318548 %3101
       %3103 = OpFMul %float %3100 %float_n6_28318548
       %3104 = OpExtInst %float %1 Fma %3095 %float_6_28318548 %3103
       %3105 = OpExtInst %float %1 Fma %3102 %float_2097152 %3104
       %3106 = OpExtInst %float %1 Sin %3105
       %3107 = OpFMul %float %3106 %2594
       %3108 = OpCompositeConstruct %v3float %549 %549 %3074
       %3109 = OpCompositeConstruct %v3float %549 %549 %3107
       %3110 = OpFAdd %v3float %3108 %3109
       %3111 = OpFSub %v3float %3041 %1687
       %3112 = OpExtInst %v3float %1 NMax %3111 %278
       %3113 = OpExtInst %v3float %1 NMin %3112 %127
       %3114 = OpCompositeExtract %float %3113 0
       %3115 = OpCompositeExtract %float %3113 1
       %3116 = OpCompositeConstruct %v2float %3114 %3115
       %3117 = OpFMul %v2float %1695 %3116
       %3118 = OpFMul %v2float %3116 %1696
       %3119 = OpCompositeExtract %float %3117 0
       %3120 = OpCompositeExtract %float %3118 0
       %3121 = OpCompositeExtract %float %3117 1
       %3122 = OpCompositeExtract %float %3118 1
       %3123 = OpFAdd %float %3119 %3121
       %3124 = OpFAdd %float %3120 %3122
       %3125 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_1
       %3126 = OpLoad %float %3125
       %3127 = OpFMul %float %3123 %3126
       %3128 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_2
       %3129 = OpLoad %float %3128
       %3130 = OpFMul %float %3129 %1994
       %3131 = OpExtInst %float %1 Fma %3124 %3126 %3130
       %3132 = OpExtInst %float %1 Floor %3127
       %3133 = OpFNegate %float %3132
       %3134 = OpExtInst %float %1 Fma %3123 %3126 %3133
       %3135 = OpExtInst %float %1 Fma %3134 %float_2097152 %3131
       %3136 = OpExtInst %float %1 Floor %3135
       %3137 = OpFMul %float %3132 %float_n6_28318548
       %3138 = OpExtInst %float %1 Fma %3127 %float_6_28318548 %3137
       %3139 = OpFMul %float %3136 %float_n6_28318548
       %3140 = OpExtInst %float %1 Fma %3131 %float_6_28318548 %3139
       %3141 = OpExtInst %float %1 Fma %3138 %float_2097152 %3140
       %3142 = OpExtInst %float %1 Sin %3141
       %3143 = OpFMul %float %3142 %2631
       %3144 = OpCompositeConstruct %v3float %549 %549 %3143
       %3145 = OpFAdd %v3float %3110 %3144
       %3146 = OpFSub %v3float %3041 %2560
       %3147 = OpExtInst %v3float %1 NMax %3146 %278
       %3148 = OpExtInst %v3float %1 NMin %3147 %127
       %3149 = OpCompositeExtract %float %3148 0
       %3150 = OpCompositeExtract %float %3148 1
       %3151 = OpCompositeConstruct %v2float %3149 %3150
       %3152 = OpFMul %v2float %1695 %3151
       %3153 = OpFMul %v2float %3151 %1696
       %3154 = OpCompositeExtract %float %3152 0
       %3155 = OpCompositeExtract %float %3153 0
       %3156 = OpCompositeExtract %float %3152 1
       %3157 = OpCompositeExtract %float %3153 1
       %3158 = OpFAdd %float %3154 %3156
       %3159 = OpFAdd %float %3155 %3157
       %3160 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_0
       %3161 = OpLoad %float %3160
       %3162 = OpFMul %float %3158 %3161
       %3163 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_1
       %3164 = OpLoad %float %3163
       %3165 = OpFMul %float %3164 %1994
       %3166 = OpExtInst %float %1 Fma %3159 %3161 %3165
       %3167 = OpExtInst %float %1 Floor %3162
       %3168 = OpFNegate %float %3167
       %3169 = OpExtInst %float %1 Fma %3158 %3161 %3168
       %3170 = OpExtInst %float %1 Fma %3169 %float_2097152 %3166
       %3171 = OpExtInst %float %1 Floor %3170
       %3172 = OpFMul %float %3167 %float_n6_28318548
       %3173 = OpExtInst %float %1 Fma %3162 %float_6_28318548 %3172
       %3174 = OpFMul %float %3171 %float_n6_28318548
       %3175 = OpExtInst %float %1 Fma %3166 %float_6_28318548 %3174
       %3176 = OpExtInst %float %1 Fma %3173 %float_2097152 %3175
       %3177 = OpExtInst %float %1 Sin %3176
       %3178 = OpFMul %float %3177 %2667
       %3179 = OpCompositeConstruct %v3float %549 %549 %3178
       %3180 = OpFAdd %v3float %3145 %3179
       %3181 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_2
       %3182 = OpLoad %float %3181
       %3183 = OpFSub %float %3182 %float_n1
       %3184 = OpExtInst %float %1 FAbs %3183
       %3185 = OpFOrdGreaterThan %bool %3184 %float_9_99999975en06
       %3186 = OpFOrdGreaterThanEqual %bool %3182 %float_n1
       %3187 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_3
       %3188 = OpLoad %float %3187
       %3189 = OpSelect %float %3186 %3182 %3188
       %3190 = OpSelect %float %3185 %3189 %3182
       %3191 = OpFSub %float %3190 %float_1
       %3192 = OpExtInst %float %1 FAbs %3191
       %3193 = OpFOrdGreaterThan %bool %3192 %float_9_99999975en06
       %3194 = OpFOrdGreaterThanEqual %bool %3190 %float_1
       %3195 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_47 %int_0
       %3196 = OpLoad %float %3195
       %3197 = OpSelect %float %3194 %3196 %3182
       %3198 = OpSelect %float %3193 %3197 %3182
       %3199 = OpExtInst %float %1 FAbs %3198
       %3200 = OpFOrdGreaterThan %bool %3199 %float_9_99999975en06
       %3201 = OpFOrdGreaterThanEqual %bool %3198 %float_0
       %3202 = OpSelect %float %3201 %float_1 %float_n1
       %3203 = OpSelect %float %3200 %3202 %float_1
       %3204 = OpExtInst %float %1 NMax %3203 %float_n1
       %3205 = OpExtInst %float %1 NMin %3204 %float_1
       %3206 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_48 %int_1
       %3207 = OpLoad %float %3206
       %3208 = OpCompositeConstruct %v3float %3205 %3207 %float_0
       %3209 = OpFAdd %v3float %3208 %1687
       %3210 = OpExtInst %v3float %1 NMax %3209 %278
       %3211 = OpExtInst %v3float %1 NMin %3210 %127
       %3212 = OpCompositeExtract %float %3211 0
       %3213 = OpCompositeExtract %float %3211 1
       %3214 = OpCompositeConstruct %v2float %3212 %3213
       %3215 = OpFMul %v2float %1695 %3214
       %3216 = OpFMul %v2float %3214 %1696
       %3217 = OpCompositeExtract %float %3215 0
       %3218 = OpCompositeExtract %float %3216 0
       %3219 = OpCompositeExtract %float %3215 1
       %3220 = OpCompositeExtract %float %3216 1
       %3221 = OpFAdd %float %3217 %3219
       %3222 = OpFAdd %float %3218 %3220
       %3223 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_50 %int_0
       %3224 = OpLoad %float %3223
       %3225 = OpFMul %float %3221 %3224
       %3226 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_50 %int_1
       %3227 = OpLoad %float %3226
       %3228 = OpFMul %float %3227 %1994
       %3229 = OpExtInst %float %1 Fma %3222 %3224 %3228
       %3230 = OpExtInst %float %1 Floor %3225
       %3231 = OpFNegate %float %3230
       %3232 = OpExtInst %float %1 Fma %3221 %3224 %3231
       %3233 = OpExtInst %float %1 Fma %3232 %float_2097152 %3229
       %3234 = OpExtInst %float %1 Floor %3233
       %3235 = OpFMul %float %3230 %float_n6_28318548
       %3236 = OpExtInst %float %1 Fma %3225 %float_6_28318548 %3235
       %3237 = OpFMul %float %3234 %float_n6_28318548
       %3238 = OpExtInst %float %1 Fma %3229 %float_6_28318548 %3237
       %3239 = OpExtInst %float %1 Fma %3236 %float_2097152 %3238
       %3240 = OpExtInst %float %1 Sin %3239
       %3241 = OpFMul %float %3240 %2733
       %3242 = OpFAdd %v3float %3208 %2560
       %3243 = OpExtInst %v3float %1 NMax %3242 %278
       %3244 = OpExtInst %v3float %1 NMin %3243 %127
       %3245 = OpCompositeExtract %float %3244 0
       %3246 = OpCompositeExtract %float %3244 1
       %3247 = OpCompositeConstruct %v2float %3245 %3246
       %3248 = OpFMul %v2float %1695 %3247
       %3249 = OpFMul %v2float %3247 %1696
       %3250 = OpCompositeExtract %float %3248 0
       %3251 = OpCompositeExtract %float %3249 0
       %3252 = OpCompositeExtract %float %3248 1
       %3253 = OpCompositeExtract %float %3249 1
       %3254 = OpFAdd %float %3250 %3252
       %3255 = OpFAdd %float %3251 %3253
       %3256 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_50 %int_3
       %3257 = OpLoad %float %3256
       %3258 = OpFMul %float %3254 %3257
       %3259 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_0
       %3260 = OpLoad %float %3259
       %3261 = OpFMul %float %3260 %1994
       %3262 = OpExtInst %float %1 Fma %3255 %3257 %3261
       %3263 = OpExtInst %float %1 Floor %3258
       %3264 = OpFNegate %float %3263
       %3265 = OpExtInst %float %1 Fma %3254 %3257 %3264
       %3266 = OpExtInst %float %1 Fma %3265 %float_2097152 %3262
       %3267 = OpExtInst %float %1 Floor %3266
       %3268 = OpFMul %float %3263 %float_n6_28318548
       %3269 = OpExtInst %float %1 Fma %3258 %float_6_28318548 %3268
       %3270 = OpFMul %float %3267 %float_n6_28318548
       %3271 = OpExtInst %float %1 Fma %3262 %float_6_28318548 %3270
       %3272 = OpExtInst %float %1 Fma %3269 %float_2097152 %3271
       %3273 = OpExtInst %float %1 Sin %3272
       %3274 = OpFMul %float %3273 %2767
       %3275 = OpCompositeConstruct %v3float %549 %549 %3241
       %3276 = OpCompositeConstruct %v3float %549 %549 %3274
       %3277 = OpFAdd %v3float %3275 %3276
       %3278 = OpFSub %v3float %3208 %1687
       %3279 = OpExtInst %v3float %1 NMax %3278 %278
       %3280 = OpExtInst %v3float %1 NMin %3279 %127
       %3281 = OpCompositeExtract %float %3280 0
       %3282 = OpCompositeExtract %float %3280 1
       %3283 = OpCompositeConstruct %v2float %3281 %3282
       %3284 = OpFMul %v2float %1695 %3283
       %3285 = OpFMul %v2float %3283 %1696
       %3286 = OpCompositeExtract %float %3284 0
       %3287 = OpCompositeExtract %float %3285 0
       %3288 = OpCompositeExtract %float %3284 1
       %3289 = OpCompositeExtract %float %3285 1
       %3290 = OpFAdd %float %3286 %3288
       %3291 = OpFAdd %float %3287 %3289
       %3292 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_2
       %3293 = OpLoad %float %3292
       %3294 = OpFMul %float %3290 %3293
       %3295 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_3
       %3296 = OpLoad %float %3295
       %3297 = OpFMul %float %3296 %1994
       %3298 = OpExtInst %float %1 Fma %3291 %3293 %3297
       %3299 = OpExtInst %float %1 Floor %3294
       %3300 = OpFNegate %float %3299
       %3301 = OpExtInst %float %1 Fma %3290 %3293 %3300
       %3302 = OpExtInst %float %1 Fma %3301 %float_2097152 %3298
       %3303 = OpExtInst %float %1 Floor %3302
       %3304 = OpFMul %float %3299 %float_n6_28318548
       %3305 = OpExtInst %float %1 Fma %3294 %float_6_28318548 %3304
       %3306 = OpFMul %float %3303 %float_n6_28318548
       %3307 = OpExtInst %float %1 Fma %3298 %float_6_28318548 %3306
       %3308 = OpExtInst %float %1 Fma %3305 %float_2097152 %3307
       %3309 = OpExtInst %float %1 Sin %3308
       %3310 = OpFMul %float %3309 %2804
       %3311 = OpCompositeConstruct %v3float %549 %549 %3310
       %3312 = OpFAdd %v3float %3277 %3311
       %3313 = OpFSub %v3float %3208 %2560
       %3314 = OpExtInst %v3float %1 NMax %3313 %278
       %3315 = OpExtInst %v3float %1 NMin %3314 %127
       %3316 = OpCompositeExtract %float %3315 0
       %3317 = OpCompositeExtract %float %3315 1
       %3318 = OpCompositeConstruct %v2float %3316 %3317
       %3319 = OpFMul %v2float %1695 %3318
       %3320 = OpFMul %v2float %3318 %1696
       %3321 = OpCompositeExtract %float %3319 0
       %3322 = OpCompositeExtract %float %3320 0
       %3323 = OpCompositeExtract %float %3319 1
       %3324 = OpCompositeExtract %float %3320 1
       %3325 = OpFAdd %float %3321 %3323
       %3326 = OpFAdd %float %3322 %3324
       %3327 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_1
       %3328 = OpLoad %float %3327
       %3329 = OpFMul %float %3325 %3328
       %3330 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_2
       %3331 = OpLoad %float %3330
       %3332 = OpFMul %float %3331 %1994
       %3333 = OpExtInst %float %1 Fma %3326 %3328 %3332
       %3334 = OpExtInst %float %1 Floor %3329
       %3335 = OpFNegate %float %3334
       %3336 = OpExtInst %float %1 Fma %3325 %3328 %3335
       %3337 = OpExtInst %float %1 Fma %3336 %float_2097152 %3333
       %3338 = OpExtInst %float %1 Floor %3337
       %3339 = OpFMul %float %3334 %float_n6_28318548
       %3340 = OpExtInst %float %1 Fma %3329 %float_6_28318548 %3339
       %3341 = OpFMul %float %3338 %float_n6_28318548
       %3342 = OpExtInst %float %1 Fma %3333 %float_6_28318548 %3341
       %3343 = OpExtInst %float %1 Fma %3340 %float_2097152 %3342
       %3344 = OpExtInst %float %1 Sin %3343
       %3345 = OpFMul %float %3344 %2840
       %3346 = OpCompositeConstruct %v3float %549 %549 %3345
       %3347 = OpFAdd %v3float %3312 %3346
       %3348 = OpFAdd %v3float %3180 %3347
       %3349 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_3
       %3350 = OpLoad %float %3349
       %3351 = OpFSub %float %3350 %float_n1
       %3352 = OpExtInst %float %1 FAbs %3351
       %3353 = OpFOrdGreaterThan %bool %3352 %float_9_99999975en06
       %3354 = OpFOrdGreaterThanEqual %bool %3350 %float_n1
       %3355 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_0
       %3356 = OpLoad %float %3355
       %3357 = OpSelect %float %3354 %3350 %3356
       %3358 = OpSelect %float %3353 %3357 %3350
       %3359 = OpFSub %float %3358 %float_1
       %3360 = OpExtInst %float %1 FAbs %3359
       %3361 = OpFOrdGreaterThan %bool %3360 %float_9_99999975en06
       %3362 = OpFOrdGreaterThanEqual %bool %3358 %float_1
       %3363 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_1
       %3364 = OpLoad %float %3363
       %3365 = OpSelect %float %3362 %3364 %3350
       %3366 = OpSelect %float %3361 %3365 %3350
       %3367 = OpExtInst %float %1 FAbs %3366
       %3368 = OpFOrdGreaterThan %bool %3367 %float_9_99999975en06
       %3369 = OpFOrdGreaterThanEqual %bool %3366 %float_0
       %3370 = OpSelect %float %3369 %float_1 %float_n1
       %3371 = OpSelect %float %3368 %3370 %float_1
       %3372 = OpExtInst %float %1 NMax %3371 %float_n1
       %3373 = OpExtInst %float %1 NMin %3372 %float_1
       %3374 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_2
       %3375 = OpLoad %float %3374
       %3376 = OpCompositeConstruct %v3float %3373 %3375 %float_0
       %3377 = OpFAdd %v3float %3376 %1687
       %3378 = OpExtInst %v3float %1 NMax %3377 %278
       %3379 = OpExtInst %v3float %1 NMin %3378 %127
       %3380 = OpCompositeExtract %float %3379 0
       %3381 = OpCompositeExtract %float %3379 1
       %3382 = OpCompositeConstruct %v2float %3380 %3381
       %3383 = OpFMul %v2float %1695 %3382
       %3384 = OpFMul %v2float %3382 %1696
       %3385 = OpCompositeExtract %float %3383 0
       %3386 = OpCompositeExtract %float %3384 0
       %3387 = OpCompositeExtract %float %3383 1
       %3388 = OpCompositeExtract %float %3384 1
       %3389 = OpFAdd %float %3385 %3387
       %3390 = OpFAdd %float %3386 %3388
       %3391 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_56 %int_1
       %3392 = OpLoad %float %3391
       %3393 = OpFMul %float %3389 %3392
       %3394 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_56 %int_2
       %3395 = OpLoad %float %3394
       %3396 = OpFMul %float %3395 %1994
       %3397 = OpExtInst %float %1 Fma %3390 %3392 %3396
       %3398 = OpExtInst %float %1 Floor %3393
       %3399 = OpFNegate %float %3398
       %3400 = OpExtInst %float %1 Fma %3389 %3392 %3399
       %3401 = OpExtInst %float %1 Fma %3400 %float_2097152 %3397
       %3402 = OpExtInst %float %1 Floor %3401
       %3403 = OpFMul %float %3398 %float_n6_28318548
       %3404 = OpExtInst %float %1 Fma %3393 %float_6_28318548 %3403
       %3405 = OpFMul %float %3402 %float_n6_28318548
       %3406 = OpExtInst %float %1 Fma %3397 %float_6_28318548 %3405
       %3407 = OpExtInst %float %1 Fma %3404 %float_2097152 %3406
       %3408 = OpExtInst %float %1 Sin %3407
       %3409 = OpFMul %float %3408 %2733
       %3410 = OpFAdd %v3float %3376 %2560
       %3411 = OpExtInst %v3float %1 NMax %3410 %278
       %3412 = OpExtInst %v3float %1 NMin %3411 %127
       %3413 = OpCompositeExtract %float %3412 0
       %3414 = OpCompositeExtract %float %3412 1
       %3415 = OpCompositeConstruct %v2float %3413 %3414
       %3416 = OpFMul %v2float %1695 %3415
       %3417 = OpFMul %v2float %3415 %1696
       %3418 = OpCompositeExtract %float %3416 0
       %3419 = OpCompositeExtract %float %3417 0
       %3420 = OpCompositeExtract %float %3416 1
       %3421 = OpCompositeExtract %float %3417 1
       %3422 = OpFAdd %float %3418 %3420
       %3423 = OpFAdd %float %3419 %3421
       %3424 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_0
       %3425 = OpLoad %float %3424
       %3426 = OpFMul %float %3422 %3425
       %3427 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_1
       %3428 = OpLoad %float %3427
       %3429 = OpFMul %float %3428 %1994
       %3430 = OpExtInst %float %1 Fma %3423 %3425 %3429
       %3431 = OpExtInst %float %1 Floor %3426
       %3432 = OpFNegate %float %3431
       %3433 = OpExtInst %float %1 Fma %3422 %3425 %3432
       %3434 = OpExtInst %float %1 Fma %3433 %float_2097152 %3430
       %3435 = OpExtInst %float %1 Floor %3434
       %3436 = OpFMul %float %3431 %float_n6_28318548
       %3437 = OpExtInst %float %1 Fma %3426 %float_6_28318548 %3436
       %3438 = OpFMul %float %3435 %float_n6_28318548
       %3439 = OpExtInst %float %1 Fma %3430 %float_6_28318548 %3438
       %3440 = OpExtInst %float %1 Fma %3437 %float_2097152 %3439
       %3441 = OpExtInst %float %1 Sin %3440
       %3442 = OpFMul %float %3441 %2767
       %3443 = OpCompositeConstruct %v3float %549 %549 %3409
       %3444 = OpCompositeConstruct %v3float %549 %549 %3442
       %3445 = OpFAdd %v3float %3443 %3444
       %3446 = OpFSub %v3float %3376 %1687
       %3447 = OpExtInst %v3float %1 NMax %3446 %278
       %3448 = OpExtInst %v3float %1 NMin %3447 %127
       %3449 = OpCompositeExtract %float %3448 0
       %3450 = OpCompositeExtract %float %3448 1
       %3451 = OpCompositeConstruct %v2float %3449 %3450
       %3452 = OpFMul %v2float %1695 %3451
       %3453 = OpFMul %v2float %3451 %1696
       %3454 = OpCompositeExtract %float %3452 0
       %3455 = OpCompositeExtract %float %3453 0
       %3456 = OpCompositeExtract %float %3452 1
       %3457 = OpCompositeExtract %float %3453 1
       %3458 = OpFAdd %float %3454 %3456
       %3459 = OpFAdd %float %3455 %3457
       %3460 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_3
       %3461 = OpLoad %float %3460
       %3462 = OpFMul %float %3458 %3461
       %3463 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_0
       %3464 = OpLoad %float %3463
       %3465 = OpFMul %float %3464 %1994
       %3466 = OpExtInst %float %1 Fma %3459 %3461 %3465
       %3467 = OpExtInst %float %1 Floor %3462
       %3468 = OpFNegate %float %3467
       %3469 = OpExtInst %float %1 Fma %3458 %3461 %3468
       %3470 = OpExtInst %float %1 Fma %3469 %float_2097152 %3466
       %3471 = OpExtInst %float %1 Floor %3470
       %3472 = OpFMul %float %3467 %float_n6_28318548
       %3473 = OpExtInst %float %1 Fma %3462 %float_6_28318548 %3472
       %3474 = OpFMul %float %3471 %float_n6_28318548
       %3475 = OpExtInst %float %1 Fma %3466 %float_6_28318548 %3474
       %3476 = OpExtInst %float %1 Fma %3473 %float_2097152 %3475
       %3477 = OpExtInst %float %1 Sin %3476
       %3478 = OpFMul %float %3477 %2804
       %3479 = OpCompositeConstruct %v3float %549 %549 %3478
       %3480 = OpFAdd %v3float %3445 %3479
       %3481 = OpFSub %v3float %3376 %2560
       %3482 = OpExtInst %v3float %1 NMax %3481 %278
       %3483 = OpExtInst %v3float %1 NMin %3482 %127
       %3484 = OpCompositeExtract %float %3483 0
       %3485 = OpCompositeExtract %float %3483 1
       %3486 = OpCompositeConstruct %v2float %3484 %3485
       %3487 = OpFMul %v2float %1695 %3486
       %3488 = OpFMul %v2float %3486 %1696
       %3489 = OpCompositeExtract %float %3487 0
       %3490 = OpCompositeExtract %float %3488 0
       %3491 = OpCompositeExtract %float %3487 1
       %3492 = OpCompositeExtract %float %3488 1
       %3493 = OpFAdd %float %3489 %3491
       %3494 = OpFAdd %float %3490 %3492
       %3495 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_2
       %3496 = OpLoad %float %3495
       %3497 = OpFMul %float %3493 %3496
       %3498 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_3
       %3499 = OpLoad %float %3498
       %3500 = OpFMul %float %3499 %1994
       %3501 = OpExtInst %float %1 Fma %3494 %3496 %3500
       %3502 = OpExtInst %float %1 Floor %3497
       %3503 = OpFNegate %float %3502
       %3504 = OpExtInst %float %1 Fma %3493 %3496 %3503
       %3505 = OpExtInst %float %1 Fma %3504 %float_2097152 %3501
       %3506 = OpExtInst %float %1 Floor %3505
       %3507 = OpFMul %float %3502 %float_n6_28318548
       %3508 = OpExtInst %float %1 Fma %3497 %float_6_28318548 %3507
       %3509 = OpFMul %float %3506 %float_n6_28318548
       %3510 = OpExtInst %float %1 Fma %3501 %float_6_28318548 %3509
       %3511 = OpExtInst %float %1 Fma %3508 %float_2097152 %3510
       %3512 = OpExtInst %float %1 Sin %3511
       %3513 = OpFMul %float %3512 %2840
       %3514 = OpCompositeConstruct %v3float %549 %549 %3513
       %3515 = OpFAdd %v3float %3480 %3514
       %3516 = OpFAdd %v3float %3348 %3515
       %3517 = OpFAdd %v3float %3013 %3516
       %3518 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_0
       %3519 = OpLoad %float %3518
       %3520 = OpCompositeConstruct %v3float %3519 %3519 %3519
       %3521 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_1
       %3522 = OpLoad %float %3521
       %3523 = OpFSub %float %3522 %float_n1
       %3524 = OpExtInst %float %1 FAbs %3523
       %3525 = OpFOrdGreaterThan %bool %3524 %float_9_99999975en06
       %3526 = OpFOrdGreaterThanEqual %bool %3522 %float_n1
       %3527 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_2
       %3528 = OpLoad %float %3527
       %3529 = OpSelect %float %3526 %3522 %3528
       %3530 = OpSelect %float %3525 %3529 %3522
       %3531 = OpFSub %float %3530 %float_1
       %3532 = OpExtInst %float %1 FAbs %3531
       %3533 = OpFOrdGreaterThan %bool %3532 %float_9_99999975en06
       %3534 = OpFOrdGreaterThanEqual %bool %3530 %float_1
       %3535 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_3
       %3536 = OpLoad %float %3535
       %3537 = OpSelect %float %3534 %3536 %3522
       %3538 = OpSelect %float %3533 %3537 %3522
       %3539 = OpExtInst %float %1 FAbs %3538
       %3540 = OpFOrdGreaterThan %bool %3539 %float_9_99999975en06
       %3541 = OpFOrdGreaterThanEqual %bool %3538 %float_0
       %3542 = OpSelect %float %3541 %float_1 %float_n1
       %3543 = OpSelect %float %3540 %3542 %float_1
       %3544 = OpExtInst %float %1 NMax %3543 %float_n1
       %3545 = OpExtInst %float %1 NMin %3544 %float_1
       %3546 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_61 %int_0
       %3547 = OpLoad %float %3546
       %3548 = OpCompositeConstruct %v3float %3545 %3547 %float_0
       %3549 = OpFAdd %v3float %3548 %1687
       %3550 = OpExtInst %v3float %1 NMax %3549 %278
       %3551 = OpExtInst %v3float %1 NMin %3550 %127
       %3552 = OpCompositeExtract %float %3551 0
       %3553 = OpCompositeExtract %float %3551 1
       %3554 = OpCompositeConstruct %v2float %3552 %3553
       %3555 = OpFMul %v2float %1695 %3554
       %3556 = OpFMul %v2float %3554 %1696
       %3557 = OpCompositeExtract %float %3555 0
       %3558 = OpCompositeExtract %float %3556 0
       %3559 = OpCompositeExtract %float %3555 1
       %3560 = OpCompositeExtract %float %3556 1
       %3561 = OpFAdd %float %3557 %3559
       %3562 = OpFAdd %float %3558 %3560
       %3563 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_1
       %3564 = OpLoad %float %3563
       %3565 = OpFMul %float %3564 %1724
       %3566 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_2
       %3567 = OpLoad %float %3566
       %3568 = OpFMul %float %3567 %3565
       %3569 = OpFDiv %float %float_2 %3568
       %3570 = OpFMul %float %3561 %3569
       %3571 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_3
       %3572 = OpLoad %float %3571
       %3573 = OpFMul %float %3569 %3572
       %3574 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_63 %int_0
       %3575 = OpLoad %float %3574
       %3576 = OpCompositeConstruct %v3float %3575 %3575 %3575
       %3577 = OpFMul %v3float %592 %3576
       %3578 = OpFMul %v3float %3576 %641
       %3579 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_63 %int_1
       %3580 = OpLoad %float %3579
       %3581 = OpCompositeConstruct %v3float %3580 %3580 %3580
       %3582 = OpFMul %v3float %3577 %3581
       %3583 = OpFMul %v3float %3578 %3581
       %3584 = OpFDiv %float %float_1 %1724
       %3585 = OpCompositeConstruct %v3float %3584 %3584 %3584
       %3586 = OpFMul %v3float %3583 %3585
       %3587 = OpCompositeExtract %float %3586 0
       %3588 = OpCompositeExtract %float %3586 1
       %3589 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_63 %int_3
       %3590 = OpLoad %float %3589
       %3591 = OpFMul %float %1160 %3590
       %3592 = OpCompositeExtract %float %3586 2
       %3593 = OpCompositeConstruct %v2float %3591 %3591
       %3594 = OpCompositeConstruct %v2float %3592 %3592
       %3595 = OpFAdd %v2float %3593 %3594
       %3596 = OpCompositeExtract %float %3595 0
       %3597 = OpCompositeConstruct %v3float %3587 %3588 %3596
       %3598 = OpVectorTimesScalar %v3float %3597 %float_4_76837158en07
       %3599 = OpFAdd %v3float %3598 %137
       %3600 = OpExtInst %v3float %1 Fma %3582 %3585 %3599
       %3601 = OpExtInst %v3float %1 Floor %3600
       %3602 = OpFNegate %v3float %3601
       %3603 = OpExtInst %v3float %1 Fma %3582 %3585 %3602
       %3604 = OpVectorTimesScalar %v3float %3603 %float_2097152
       %3605 = OpFAdd %v3float %3604 %3597
       %3606 = OpVectorTimesScalar %v3float %3605 %float_1
               OpBranch %3607
       %3607 = OpLabel
       %3608 = OpPhi %v3float %3606 %2312 %3609 %3610
       %3611 = OpPhi %float %float_1 %2312 %3612 %3610
       %3613 = OpPhi %float %float_0 %2312 %3614 %3610
       %3615 = OpPhi %uint %uint_0 %2312 %3616 %3610
       %3617 = OpULessThan %bool %3615 %uint_6
               OpLoopMerge %3618 %3610 DontUnroll
               OpBranchConditional %3617 %3610 %3618
       %3610 = OpLabel
       %3619 = OpExtInst %v3float %1 Fract %3608
       %3620 = OpExtInst %v3float %1 Floor %3608
       %3621 = OpDot %float %3620 %385
       %3622 = OpFAdd %float %3621 %float_19
       %3623 = OpFAdd %float %3621 %float_47
       %3624 = OpFAdd %float %3621 %float_66
       %3625 = OpFAdd %float %3621 %float_101
       %3626 = OpFAdd %float %3621 %float_120
       %3627 = OpFAdd %float %3621 %float_148
       %3628 = OpFAdd %float %3621 %float_167
       %3629 = OpConvertFToS %int %3621
       %3630 = OpCompositeConstruct %v3int %3629 %int_0 %int_0
       %3631 = OpBitcast %v3uint %3630
       %3632 = OpIMul %v3uint %3631 %401
       %3633 = OpIAdd %v3uint %3632 %403
       %3634 = OpCompositeExtract %uint %3633 1
       %3635 = OpCompositeExtract %uint %3633 2
       %3636 = OpIMul %uint %3634 %3635
       %3637 = OpCompositeExtract %uint %3633 0
       %3638 = OpIAdd %uint %3637 %3636
       %3639 = OpIMul %uint %3635 %3638
       %3640 = OpIAdd %uint %3634 %3639
       %3641 = OpIMul %uint %3638 %3640
       %3642 = OpIAdd %uint %3635 %3641
       %3643 = OpIMul %uint %3640 %3642
       %3644 = OpIAdd %uint %3638 %3643
       %3645 = OpCompositeInsert %v3uint %3644 %550 0
       %3646 = OpBitwiseAnd %v3uint %404 %405
       %3647 = OpShiftRightLogical %v3uint %3645 %3646
       %3648 = OpCompositeExtract %uint %3647 0
       %3649 = OpCompositeConstruct %v3uint %3648 %3648 %3648
       %3650 = OpBitwiseAnd %v3uint %3649 %386
       %3651 = OpConvertUToF %v3float %3650
       %3652 = OpExtInst %v3float %1 Fma %3651 %390 %278
       %3653 = OpDot %float %3652 %3619
       %3654 = OpConvertFToS %int %3622
       %3655 = OpFSub %v3float %3619 %350
       %3656 = OpCompositeConstruct %v3int %3654 %int_0 %int_0
       %3657 = OpBitcast %v3uint %3656
       %3658 = OpIMul %v3uint %3657 %401
       %3659 = OpIAdd %v3uint %3658 %403
       %3660 = OpCompositeExtract %uint %3659 1
       %3661 = OpCompositeExtract %uint %3659 2
       %3662 = OpIMul %uint %3660 %3661
       %3663 = OpCompositeExtract %uint %3659 0
       %3664 = OpIAdd %uint %3663 %3662
       %3665 = OpIMul %uint %3661 %3664
       %3666 = OpIAdd %uint %3660 %3665
       %3667 = OpIMul %uint %3664 %3666
       %3668 = OpIAdd %uint %3661 %3667
       %3669 = OpIMul %uint %3666 %3668
       %3670 = OpIAdd %uint %3664 %3669
       %3671 = OpCompositeInsert %v3uint %3670 %550 0
       %3672 = OpShiftRightLogical %v3uint %3671 %3646
       %3673 = OpCompositeExtract %uint %3672 0
       %3674 = OpCompositeConstruct %v3uint %3673 %3673 %3673
       %3675 = OpBitwiseAnd %v3uint %3674 %386
       %3676 = OpConvertUToF %v3float %3675
       %3677 = OpExtInst %v3float %1 Fma %3676 %390 %278
       %3678 = OpDot %float %3677 %3655
       %3679 = OpConvertFToS %int %3623
       %3680 = OpFSub %v3float %3619 %351
       %3681 = OpCompositeConstruct %v3int %3679 %int_0 %int_0
       %3682 = OpBitcast %v3uint %3681
       %3683 = OpIMul %v3uint %3682 %401
       %3684 = OpIAdd %v3uint %3683 %403
       %3685 = OpCompositeExtract %uint %3684 1
       %3686 = OpCompositeExtract %uint %3684 2
       %3687 = OpIMul %uint %3685 %3686
       %3688 = OpCompositeExtract %uint %3684 0
       %3689 = OpIAdd %uint %3688 %3687
       %3690 = OpIMul %uint %3686 %3689
       %3691 = OpIAdd %uint %3685 %3690
       %3692 = OpIMul %uint %3689 %3691
       %3693 = OpIAdd %uint %3686 %3692
       %3694 = OpIMul %uint %3691 %3693
       %3695 = OpIAdd %uint %3689 %3694
       %3696 = OpCompositeInsert %v3uint %3695 %550 0
       %3697 = OpShiftRightLogical %v3uint %3696 %3646
       %3698 = OpCompositeExtract %uint %3697 0
       %3699 = OpCompositeConstruct %v3uint %3698 %3698 %3698
       %3700 = OpBitwiseAnd %v3uint %3699 %386
       %3701 = OpConvertUToF %v3float %3700
       %3702 = OpExtInst %v3float %1 Fma %3701 %390 %278
       %3703 = OpDot %float %3702 %3680
       %3704 = OpConvertFToS %int %3624
       %3705 = OpFSub %v3float %3619 %134
       %3706 = OpCompositeConstruct %v3int %3704 %int_0 %int_0
       %3707 = OpBitcast %v3uint %3706
       %3708 = OpIMul %v3uint %3707 %401
       %3709 = OpIAdd %v3uint %3708 %403
       %3710 = OpCompositeExtract %uint %3709 1
       %3711 = OpCompositeExtract %uint %3709 2
       %3712 = OpIMul %uint %3710 %3711
       %3713 = OpCompositeExtract %uint %3709 0
       %3714 = OpIAdd %uint %3713 %3712
       %3715 = OpIMul %uint %3711 %3714
       %3716 = OpIAdd %uint %3710 %3715
       %3717 = OpIMul %uint %3714 %3716
       %3718 = OpIAdd %uint %3711 %3717
       %3719 = OpIMul %uint %3716 %3718
       %3720 = OpIAdd %uint %3714 %3719
       %3721 = OpCompositeInsert %v3uint %3720 %550 0
       %3722 = OpShiftRightLogical %v3uint %3721 %3646
       %3723 = OpCompositeExtract %uint %3722 0
       %3724 = OpCompositeConstruct %v3uint %3723 %3723 %3723
       %3725 = OpBitwiseAnd %v3uint %3724 %386
       %3726 = OpConvertUToF %v3float %3725
       %3727 = OpExtInst %v3float %1 Fma %3726 %390 %278
       %3728 = OpDot %float %3727 %3705
       %3729 = OpConvertFToS %int %3625
       %3730 = OpFSub %v3float %3619 %290
       %3731 = OpCompositeConstruct %v3int %3729 %int_0 %int_0
       %3732 = OpBitcast %v3uint %3731
       %3733 = OpIMul %v3uint %3732 %401
       %3734 = OpIAdd %v3uint %3733 %403
       %3735 = OpCompositeExtract %uint %3734 1
       %3736 = OpCompositeExtract %uint %3734 2
       %3737 = OpIMul %uint %3735 %3736
       %3738 = OpCompositeExtract %uint %3734 0
       %3739 = OpIAdd %uint %3738 %3737
       %3740 = OpIMul %uint %3736 %3739
       %3741 = OpIAdd %uint %3735 %3740
       %3742 = OpIMul %uint %3739 %3741
       %3743 = OpIAdd %uint %3736 %3742
       %3744 = OpIMul %uint %3741 %3743
       %3745 = OpIAdd %uint %3739 %3744
       %3746 = OpCompositeInsert %v3uint %3745 %550 0
       %3747 = OpShiftRightLogical %v3uint %3746 %3646
       %3748 = OpCompositeExtract %uint %3747 0
       %3749 = OpCompositeConstruct %v3uint %3748 %3748 %3748
       %3750 = OpBitwiseAnd %v3uint %3749 %386
       %3751 = OpConvertUToF %v3float %3750
       %3752 = OpExtInst %v3float %1 Fma %3751 %390 %278
       %3753 = OpDot %float %3752 %3730
       %3754 = OpConvertFToS %int %3626
       %3755 = OpFSub %v3float %3619 %139
       %3756 = OpCompositeConstruct %v3int %3754 %int_0 %int_0
       %3757 = OpBitcast %v3uint %3756
       %3758 = OpIMul %v3uint %3757 %401
       %3759 = OpIAdd %v3uint %3758 %403
       %3760 = OpCompositeExtract %uint %3759 1
       %3761 = OpCompositeExtract %uint %3759 2
       %3762 = OpIMul %uint %3760 %3761
       %3763 = OpCompositeExtract %uint %3759 0
       %3764 = OpIAdd %uint %3763 %3762
       %3765 = OpIMul %uint %3761 %3764
       %3766 = OpIAdd %uint %3760 %3765
       %3767 = OpIMul %uint %3764 %3766
       %3768 = OpIAdd %uint %3761 %3767
       %3769 = OpIMul %uint %3766 %3768
       %3770 = OpIAdd %uint %3764 %3769
       %3771 = OpCompositeInsert %v3uint %3770 %550 0
       %3772 = OpShiftRightLogical %v3uint %3771 %3646
       %3773 = OpCompositeExtract %uint %3772 0
       %3774 = OpCompositeConstruct %v3uint %3773 %3773 %3773
       %3775 = OpBitwiseAnd %v3uint %3774 %386
       %3776 = OpConvertUToF %v3float %3775
       %3777 = OpExtInst %v3float %1 Fma %3776 %390 %278
       %3778 = OpDot %float %3777 %3755
       %3779 = OpConvertFToS %int %3627
       %3780 = OpFSub %v3float %3619 %135
       %3781 = OpCompositeConstruct %v3int %3779 %int_0 %int_0
       %3782 = OpBitcast %v3uint %3781
       %3783 = OpIMul %v3uint %3782 %401
       %3784 = OpIAdd %v3uint %3783 %403
       %3785 = OpCompositeExtract %uint %3784 1
       %3786 = OpCompositeExtract %uint %3784 2
       %3787 = OpIMul %uint %3785 %3786
       %3788 = OpCompositeExtract %uint %3784 0
       %3789 = OpIAdd %uint %3788 %3787
       %3790 = OpIMul %uint %3786 %3789
       %3791 = OpIAdd %uint %3785 %3790
       %3792 = OpIMul %uint %3789 %3791
       %3793 = OpIAdd %uint %3786 %3792
       %3794 = OpIMul %uint %3791 %3793
       %3795 = OpIAdd %uint %3789 %3794
       %3796 = OpCompositeInsert %v3uint %3795 %550 0
       %3797 = OpShiftRightLogical %v3uint %3796 %3646
       %3798 = OpCompositeExtract %uint %3797 0
       %3799 = OpCompositeConstruct %v3uint %3798 %3798 %3798
       %3800 = OpBitwiseAnd %v3uint %3799 %386
       %3801 = OpConvertUToF %v3float %3800
       %3802 = OpExtInst %v3float %1 Fma %3801 %390 %278
       %3803 = OpDot %float %3802 %3780
       %3804 = OpConvertFToS %int %3628
       %3805 = OpFSub %v3float %3619 %127
       %3806 = OpCompositeConstruct %v3int %3804 %int_0 %int_0
       %3807 = OpBitcast %v3uint %3806
       %3808 = OpIMul %v3uint %3807 %401
       %3809 = OpIAdd %v3uint %3808 %403
       %3810 = OpCompositeExtract %uint %3809 1
       %3811 = OpCompositeExtract %uint %3809 2
       %3812 = OpIMul %uint %3810 %3811
       %3813 = OpCompositeExtract %uint %3809 0
       %3814 = OpIAdd %uint %3813 %3812
       %3815 = OpIMul %uint %3811 %3814
       %3816 = OpIAdd %uint %3810 %3815
       %3817 = OpIMul %uint %3814 %3816
       %3818 = OpIAdd %uint %3811 %3817
       %3819 = OpIMul %uint %3816 %3818
       %3820 = OpIAdd %uint %3814 %3819
       %3821 = OpCompositeInsert %v3uint %3820 %550 0
       %3822 = OpShiftRightLogical %v3uint %3821 %3646
       %3823 = OpCompositeExtract %uint %3822 0
       %3824 = OpCompositeConstruct %v3uint %3823 %3823 %3823
       %3825 = OpBitwiseAnd %v3uint %3824 %386
       %3826 = OpConvertUToF %v3float %3825
       %3827 = OpExtInst %v3float %1 Fma %3826 %390 %278
       %3828 = OpDot %float %3827 %3805
       %3829 = OpCompositeExtract %float %3619 0
       %3830 = OpCompositeExtract %float %3619 1
       %3831 = OpCompositeExtract %float %3619 2
       %3832 = OpCompositeConstruct %v4float %3829 %3830 %3831 %float_0
       %3833 = OpFMul %v4float %3832 %3832
       %3834 = OpFMul %v4float %3833 %3832
       %3835 = OpVectorTimesScalar %v4float %3832 %float_6
       %3836 = OpFSub %v4float %3835 %381
       %3837 = OpExtInst %v4float %1 Fma %3832 %3836 %382
       %3838 = OpFMul %v4float %3834 %3837
       %3839 = OpCompositeExtract %float %3838 0
       %3840 = OpExtInst %float %1 FMix %3653 %3678 %3839
       %3841 = OpExtInst %float %1 FMix %3703 %3728 %3839
       %3842 = OpCompositeExtract %float %3838 1
       %3843 = OpExtInst %float %1 FMix %3840 %3841 %3842
       %3844 = OpExtInst %float %1 FMix %3753 %3778 %3839
       %3845 = OpExtInst %float %1 FMix %3803 %3828 %3839
       %3846 = OpExtInst %float %1 FMix %3844 %3845 %3842
       %3847 = OpCompositeExtract %float %3838 2
       %3848 = OpExtInst %float %1 FMix %3843 %3846 %3847
       %3614 = OpExtInst %float %1 Fma %3848 %3611 %3613
       %3609 = OpVectorTimesScalar %v3float %3608 %float_2
       %3612 = OpFMul %float %3611 %float_0_5
       %3616 = OpIAdd %uint %3615 %uint_1
               OpBranch %3607
       %3618 = OpLabel
       %3849 = OpExtInst %float %1 Fma %3613 %float_0_5 %float_0_5
       %3850 = OpExtInst %float %1 FMix %float_0 %float_1 %3849
       %3851 = OpExtInst %float %1 FClamp %3850 %float_0 %float_1
       %3852 = OpExtInst %float %1 FMix %1160 %1713 %3851
       %3853 = OpFMul %float %3573 %3852
       %3854 = OpExtInst %float %1 Fma %3562 %3569 %3853
       %3855 = OpExtInst %float %1 Floor %3570
       %3856 = OpFNegate %float %3855
       %3857 = OpExtInst %float %1 Fma %3561 %3569 %3856
       %3858 = OpExtInst %float %1 Fma %3857 %float_2097152 %3854
       %3859 = OpExtInst %float %1 Floor %3858
       %3860 = OpFMul %float %3855 %float_n6_28318548
       %3861 = OpExtInst %float %1 Fma %3570 %float_6_28318548 %3860
       %3862 = OpFMul %float %3859 %float_n6_28318548
       %3863 = OpExtInst %float %1 Fma %3854 %float_6_28318548 %3862
       %3864 = OpExtInst %float %1 Fma %3861 %float_2097152 %3863
       %3865 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_0
       %3866 = OpLoad %float %3865
       %3867 = OpFMul %float %3866 %1724
       %3868 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_1
       %3869 = OpLoad %float %3868
       %3870 = OpFMul %float %3869 %1724
       %3871 = OpFNegate %float %3870
       %3872 = OpExtInst %float %1 Fma %3866 %1724 %3871
       %3873 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_2
       %3874 = OpLoad %float %3873
       %3875 = OpCompositeConstruct %v3float %3874 %3874 %3874
       %3876 = OpFMul %v3float %592 %3875
       %3877 = OpFMul %v3float %3875 %641
       %3878 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_3
       %3879 = OpLoad %float %3878
       %3880 = OpCompositeConstruct %v3float %3879 %3879 %3879
       %3881 = OpFMul %v3float %3876 %3880
       %3882 = OpFMul %v3float %3877 %3880
       %3883 = OpFMul %v3float %3882 %3585
       %3884 = OpCompositeExtract %float %3883 0
       %3885 = OpCompositeExtract %float %3883 1
       %3886 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_65 %int_1
       %3887 = OpLoad %float %3886
       %3888 = OpFMul %float %1160 %3887
       %3889 = OpCompositeExtract %float %3883 2
       %3890 = OpCompositeConstruct %v2float %3888 %3888
       %3891 = OpCompositeConstruct %v2float %3889 %3889
       %3892 = OpFAdd %v2float %3890 %3891
       %3893 = OpCompositeExtract %float %3892 0
       %3894 = OpCompositeConstruct %v3float %3884 %3885 %3893
       %3895 = OpVectorTimesScalar %v3float %3894 %float_4_76837158en07
       %3896 = OpFAdd %v3float %3895 %137
       %3897 = OpExtInst %v3float %1 Fma %3881 %3585 %3896
       %3898 = OpExtInst %v3float %1 Floor %3897
       %3899 = OpFNegate %v3float %3898
       %3900 = OpExtInst %v3float %1 Fma %3881 %3585 %3899
       %3901 = OpVectorTimesScalar %v3float %3900 %float_2097152
       %3902 = OpFAdd %v3float %3901 %3894
       %3903 = OpVectorTimesScalar %v3float %3902 %float_1
               OpBranch %3904
       %3904 = OpLabel
       %3905 = OpPhi %v3float %3903 %3618 %3906 %3907
       %3908 = OpPhi %float %float_1 %3618 %3909 %3907
       %3910 = OpPhi %float %float_0 %3618 %3911 %3907
       %3912 = OpPhi %uint %uint_0 %3618 %3913 %3907
       %3914 = OpULessThan %bool %3912 %uint_10
               OpLoopMerge %3915 %3907 DontUnroll
               OpBranchConditional %3914 %3907 %3915
       %3907 = OpLabel
       %3916 = OpExtInst %v3float %1 Fract %3905
       %3917 = OpExtInst %v3float %1 Floor %3905
       %3918 = OpDot %float %3917 %385
       %3919 = OpFAdd %float %3918 %float_19
       %3920 = OpFAdd %float %3918 %float_47
       %3921 = OpFAdd %float %3918 %float_66
       %3922 = OpFAdd %float %3918 %float_101
       %3923 = OpFAdd %float %3918 %float_120
       %3924 = OpFAdd %float %3918 %float_148
       %3925 = OpFAdd %float %3918 %float_167
       %3926 = OpConvertFToS %int %3918
       %3927 = OpCompositeConstruct %v3int %3926 %int_0 %int_0
       %3928 = OpBitcast %v3uint %3927
       %3929 = OpIMul %v3uint %3928 %401
       %3930 = OpIAdd %v3uint %3929 %403
       %3931 = OpCompositeExtract %uint %3930 1
       %3932 = OpCompositeExtract %uint %3930 2
       %3933 = OpIMul %uint %3931 %3932
       %3934 = OpCompositeExtract %uint %3930 0
       %3935 = OpIAdd %uint %3934 %3933
       %3936 = OpIMul %uint %3932 %3935
       %3937 = OpIAdd %uint %3931 %3936
       %3938 = OpIMul %uint %3935 %3937
       %3939 = OpIAdd %uint %3932 %3938
       %3940 = OpIMul %uint %3937 %3939
       %3941 = OpIAdd %uint %3935 %3940
       %3942 = OpCompositeInsert %v3uint %3941 %550 0
       %3943 = OpBitwiseAnd %v3uint %404 %405
       %3944 = OpShiftRightLogical %v3uint %3942 %3943
       %3945 = OpCompositeExtract %uint %3944 0
       %3946 = OpCompositeConstruct %v3uint %3945 %3945 %3945
       %3947 = OpBitwiseAnd %v3uint %3946 %386
       %3948 = OpConvertUToF %v3float %3947
       %3949 = OpExtInst %v3float %1 Fma %3948 %390 %278
       %3950 = OpDot %float %3949 %3916
       %3951 = OpConvertFToS %int %3919
       %3952 = OpFSub %v3float %3916 %350
       %3953 = OpCompositeConstruct %v3int %3951 %int_0 %int_0
       %3954 = OpBitcast %v3uint %3953
       %3955 = OpIMul %v3uint %3954 %401
       %3956 = OpIAdd %v3uint %3955 %403
       %3957 = OpCompositeExtract %uint %3956 1
       %3958 = OpCompositeExtract %uint %3956 2
       %3959 = OpIMul %uint %3957 %3958
       %3960 = OpCompositeExtract %uint %3956 0
       %3961 = OpIAdd %uint %3960 %3959
       %3962 = OpIMul %uint %3958 %3961
       %3963 = OpIAdd %uint %3957 %3962
       %3964 = OpIMul %uint %3961 %3963
       %3965 = OpIAdd %uint %3958 %3964
       %3966 = OpIMul %uint %3963 %3965
       %3967 = OpIAdd %uint %3961 %3966
       %3968 = OpCompositeInsert %v3uint %3967 %550 0
       %3969 = OpShiftRightLogical %v3uint %3968 %3943
       %3970 = OpCompositeExtract %uint %3969 0
       %3971 = OpCompositeConstruct %v3uint %3970 %3970 %3970
       %3972 = OpBitwiseAnd %v3uint %3971 %386
       %3973 = OpConvertUToF %v3float %3972
       %3974 = OpExtInst %v3float %1 Fma %3973 %390 %278
       %3975 = OpDot %float %3974 %3952
       %3976 = OpConvertFToS %int %3920
       %3977 = OpFSub %v3float %3916 %351
       %3978 = OpCompositeConstruct %v3int %3976 %int_0 %int_0
       %3979 = OpBitcast %v3uint %3978
       %3980 = OpIMul %v3uint %3979 %401
       %3981 = OpIAdd %v3uint %3980 %403
       %3982 = OpCompositeExtract %uint %3981 1
       %3983 = OpCompositeExtract %uint %3981 2
       %3984 = OpIMul %uint %3982 %3983
       %3985 = OpCompositeExtract %uint %3981 0
       %3986 = OpIAdd %uint %3985 %3984
       %3987 = OpIMul %uint %3983 %3986
       %3988 = OpIAdd %uint %3982 %3987
       %3989 = OpIMul %uint %3986 %3988
       %3990 = OpIAdd %uint %3983 %3989
       %3991 = OpIMul %uint %3988 %3990
       %3992 = OpIAdd %uint %3986 %3991
       %3993 = OpCompositeInsert %v3uint %3992 %550 0
       %3994 = OpShiftRightLogical %v3uint %3993 %3943
       %3995 = OpCompositeExtract %uint %3994 0
       %3996 = OpCompositeConstruct %v3uint %3995 %3995 %3995
       %3997 = OpBitwiseAnd %v3uint %3996 %386
       %3998 = OpConvertUToF %v3float %3997
       %3999 = OpExtInst %v3float %1 Fma %3998 %390 %278
       %4000 = OpDot %float %3999 %3977
       %4001 = OpConvertFToS %int %3921
       %4002 = OpFSub %v3float %3916 %134
       %4003 = OpCompositeConstruct %v3int %4001 %int_0 %int_0
       %4004 = OpBitcast %v3uint %4003
       %4005 = OpIMul %v3uint %4004 %401
       %4006 = OpIAdd %v3uint %4005 %403
       %4007 = OpCompositeExtract %uint %4006 1
       %4008 = OpCompositeExtract %uint %4006 2
       %4009 = OpIMul %uint %4007 %4008
       %4010 = OpCompositeExtract %uint %4006 0
       %4011 = OpIAdd %uint %4010 %4009
       %4012 = OpIMul %uint %4008 %4011
       %4013 = OpIAdd %uint %4007 %4012
       %4014 = OpIMul %uint %4011 %4013
       %4015 = OpIAdd %uint %4008 %4014
       %4016 = OpIMul %uint %4013 %4015
       %4017 = OpIAdd %uint %4011 %4016
       %4018 = OpCompositeInsert %v3uint %4017 %550 0
       %4019 = OpShiftRightLogical %v3uint %4018 %3943
       %4020 = OpCompositeExtract %uint %4019 0
       %4021 = OpCompositeConstruct %v3uint %4020 %4020 %4020
       %4022 = OpBitwiseAnd %v3uint %4021 %386
       %4023 = OpConvertUToF %v3float %4022
       %4024 = OpExtInst %v3float %1 Fma %4023 %390 %278
       %4025 = OpDot %float %4024 %4002
       %4026 = OpConvertFToS %int %3922
       %4027 = OpFSub %v3float %3916 %290
       %4028 = OpCompositeConstruct %v3int %4026 %int_0 %int_0
       %4029 = OpBitcast %v3uint %4028
       %4030 = OpIMul %v3uint %4029 %401
       %4031 = OpIAdd %v3uint %4030 %403
       %4032 = OpCompositeExtract %uint %4031 1
       %4033 = OpCompositeExtract %uint %4031 2
       %4034 = OpIMul %uint %4032 %4033
       %4035 = OpCompositeExtract %uint %4031 0
       %4036 = OpIAdd %uint %4035 %4034
       %4037 = OpIMul %uint %4033 %4036
       %4038 = OpIAdd %uint %4032 %4037
       %4039 = OpIMul %uint %4036 %4038
       %4040 = OpIAdd %uint %4033 %4039
       %4041 = OpIMul %uint %4038 %4040
       %4042 = OpIAdd %uint %4036 %4041
       %4043 = OpCompositeInsert %v3uint %4042 %550 0
       %4044 = OpShiftRightLogical %v3uint %4043 %3943
       %4045 = OpCompositeExtract %uint %4044 0
       %4046 = OpCompositeConstruct %v3uint %4045 %4045 %4045
       %4047 = OpBitwiseAnd %v3uint %4046 %386
       %4048 = OpConvertUToF %v3float %4047
       %4049 = OpExtInst %v3float %1 Fma %4048 %390 %278
       %4050 = OpDot %float %4049 %4027
       %4051 = OpConvertFToS %int %3923
       %4052 = OpFSub %v3float %3916 %139
       %4053 = OpCompositeConstruct %v3int %4051 %int_0 %int_0
       %4054 = OpBitcast %v3uint %4053
       %4055 = OpIMul %v3uint %4054 %401
       %4056 = OpIAdd %v3uint %4055 %403
       %4057 = OpCompositeExtract %uint %4056 1
       %4058 = OpCompositeExtract %uint %4056 2
       %4059 = OpIMul %uint %4057 %4058
       %4060 = OpCompositeExtract %uint %4056 0
       %4061 = OpIAdd %uint %4060 %4059
       %4062 = OpIMul %uint %4058 %4061
       %4063 = OpIAdd %uint %4057 %4062
       %4064 = OpIMul %uint %4061 %4063
       %4065 = OpIAdd %uint %4058 %4064
       %4066 = OpIMul %uint %4063 %4065
       %4067 = OpIAdd %uint %4061 %4066
       %4068 = OpCompositeInsert %v3uint %4067 %550 0
       %4069 = OpShiftRightLogical %v3uint %4068 %3943
       %4070 = OpCompositeExtract %uint %4069 0
       %4071 = OpCompositeConstruct %v3uint %4070 %4070 %4070
       %4072 = OpBitwiseAnd %v3uint %4071 %386
       %4073 = OpConvertUToF %v3float %4072
       %4074 = OpExtInst %v3float %1 Fma %4073 %390 %278
       %4075 = OpDot %float %4074 %4052
       %4076 = OpConvertFToS %int %3924
       %4077 = OpFSub %v3float %3916 %135
       %4078 = OpCompositeConstruct %v3int %4076 %int_0 %int_0
       %4079 = OpBitcast %v3uint %4078
       %4080 = OpIMul %v3uint %4079 %401
       %4081 = OpIAdd %v3uint %4080 %403
       %4082 = OpCompositeExtract %uint %4081 1
       %4083 = OpCompositeExtract %uint %4081 2
       %4084 = OpIMul %uint %4082 %4083
       %4085 = OpCompositeExtract %uint %4081 0
       %4086 = OpIAdd %uint %4085 %4084
       %4087 = OpIMul %uint %4083 %4086
       %4088 = OpIAdd %uint %4082 %4087
       %4089 = OpIMul %uint %4086 %4088
       %4090 = OpIAdd %uint %4083 %4089
       %4091 = OpIMul %uint %4088 %4090
       %4092 = OpIAdd %uint %4086 %4091
       %4093 = OpCompositeInsert %v3uint %4092 %550 0
       %4094 = OpShiftRightLogical %v3uint %4093 %3943
       %4095 = OpCompositeExtract %uint %4094 0
       %4096 = OpCompositeConstruct %v3uint %4095 %4095 %4095
       %4097 = OpBitwiseAnd %v3uint %4096 %386
       %4098 = OpConvertUToF %v3float %4097
       %4099 = OpExtInst %v3float %1 Fma %4098 %390 %278
       %4100 = OpDot %float %4099 %4077
       %4101 = OpConvertFToS %int %3925
       %4102 = OpFSub %v3float %3916 %127
       %4103 = OpCompositeConstruct %v3int %4101 %int_0 %int_0
       %4104 = OpBitcast %v3uint %4103
       %4105 = OpIMul %v3uint %4104 %401
       %4106 = OpIAdd %v3uint %4105 %403
       %4107 = OpCompositeExtract %uint %4106 1
       %4108 = OpCompositeExtract %uint %4106 2
       %4109 = OpIMul %uint %4107 %4108
       %4110 = OpCompositeExtract %uint %4106 0
       %4111 = OpIAdd %uint %4110 %4109
       %4112 = OpIMul %uint %4108 %4111
       %4113 = OpIAdd %uint %4107 %4112
       %4114 = OpIMul %uint %4111 %4113
       %4115 = OpIAdd %uint %4108 %4114
       %4116 = OpIMul %uint %4113 %4115
       %4117 = OpIAdd %uint %4111 %4116
       %4118 = OpCompositeInsert %v3uint %4117 %550 0
       %4119 = OpShiftRightLogical %v3uint %4118 %3943
       %4120 = OpCompositeExtract %uint %4119 0
       %4121 = OpCompositeConstruct %v3uint %4120 %4120 %4120
       %4122 = OpBitwiseAnd %v3uint %4121 %386
       %4123 = OpConvertUToF %v3float %4122
       %4124 = OpExtInst %v3float %1 Fma %4123 %390 %278
       %4125 = OpDot %float %4124 %4102
       %4126 = OpCompositeExtract %float %3916 0
       %4127 = OpCompositeExtract %float %3916 1
       %4128 = OpCompositeExtract %float %3916 2
       %4129 = OpCompositeConstruct %v4float %4126 %4127 %4128 %float_0
       %4130 = OpFMul %v4float %4129 %4129
       %4131 = OpFMul %v4float %4130 %4129
       %4132 = OpVectorTimesScalar %v4float %4129 %float_6
       %4133 = OpFSub %v4float %4132 %381
       %4134 = OpExtInst %v4float %1 Fma %4129 %4133 %382
       %4135 = OpFMul %v4float %4131 %4134
       %4136 = OpCompositeExtract %float %4135 0
       %4137 = OpExtInst %float %1 FMix %3950 %3975 %4136
       %4138 = OpExtInst %float %1 FMix %4000 %4025 %4136
       %4139 = OpCompositeExtract %float %4135 1
       %4140 = OpExtInst %float %1 FMix %4137 %4138 %4139
       %4141 = OpExtInst %float %1 FMix %4050 %4075 %4136
       %4142 = OpExtInst %float %1 FMix %4100 %4125 %4136
       %4143 = OpExtInst %float %1 FMix %4141 %4142 %4139
       %4144 = OpCompositeExtract %float %4135 2
       %4145 = OpExtInst %float %1 FMix %4140 %4143 %4144
       %4146 = OpExtInst %float %1 FAbs %4145
       %3911 = OpExtInst %float %1 Fma %4146 %3908 %3910
       %3906 = OpVectorTimesScalar %v3float %3905 %float_2
       %3909 = OpFMul %float %3908 %float_0_5
       %3913 = OpIAdd %uint %3912 %uint_1
               OpBranch %3904
       %3915 = OpLabel
       %4147 = OpExtInst %float %1 FMix %float_0 %float_1 %3910
       %4148 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_65 %int_2
       %4149 = OpLoad %float %4148
       %4150 = OpCompositeConstruct %v3float %4149 %4149 %4149
       %4151 = OpFMul %v3float %592 %4150
       %4152 = OpFMul %v3float %4150 %641
       %4153 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_65 %int_3
       %4154 = OpLoad %float %4153
       %4155 = OpCompositeConstruct %v3float %4154 %4154 %4154
       %4156 = OpFMul %v3float %4151 %4155
       %4157 = OpFMul %v3float %4152 %4155
       %4158 = OpFMul %v3float %4157 %3585
       %4159 = OpCompositeExtract %float %4158 0
       %4160 = OpCompositeExtract %float %4158 1
       %4161 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_66 %int_1
       %4162 = OpLoad %float %4161
       %4163 = OpFMul %float %1160 %4162
       %4164 = OpCompositeExtract %float %4158 2
       %4165 = OpCompositeConstruct %v2float %4163 %4163
       %4166 = OpCompositeConstruct %v2float %4164 %4164
       %4167 = OpFAdd %v2float %4165 %4166
       %4168 = OpCompositeExtract %float %4167 0
       %4169 = OpCompositeConstruct %v3float %4159 %4160 %4168
       %4170 = OpVectorTimesScalar %v3float %4169 %float_4_76837158en07
       %4171 = OpFAdd %v3float %4170 %137
       %4172 = OpExtInst %v3float %1 Fma %4156 %3585 %4171
       %4173 = OpExtInst %v3float %1 Floor %4172
       %4174 = OpFNegate %v3float %4173
       %4175 = OpExtInst %v3float %1 Fma %4156 %3585 %4174
       %4176 = OpVectorTimesScalar %v3float %4175 %float_2097152
       %4177 = OpFAdd %v3float %4176 %4169
       %4178 = OpVectorTimesScalar %v3float %4177 %float_1
               OpBranch %4179
       %4179 = OpLabel
       %4180 = OpPhi %v3float %4178 %3915 %4181 %4182
       %4183 = OpPhi %float %float_1 %3915 %4184 %4182
       %4185 = OpPhi %float %float_0 %3915 %4186 %4182
       %4187 = OpPhi %uint %uint_0 %3915 %4188 %4182
       %4189 = OpULessThan %bool %4187 %uint_10
               OpLoopMerge %4190 %4182 DontUnroll
               OpBranchConditional %4189 %4182 %4190
       %4182 = OpLabel
       %4191 = OpExtInst %v3float %1 Fract %4180
       %4192 = OpExtInst %v3float %1 Floor %4180
       %4193 = OpDot %float %4192 %385
       %4194 = OpFAdd %float %4193 %float_19
       %4195 = OpFAdd %float %4193 %float_47
       %4196 = OpFAdd %float %4193 %float_66
       %4197 = OpFAdd %float %4193 %float_101
       %4198 = OpFAdd %float %4193 %float_120
       %4199 = OpFAdd %float %4193 %float_148
       %4200 = OpFAdd %float %4193 %float_167
       %4201 = OpConvertFToS %int %4193
       %4202 = OpCompositeConstruct %v3int %4201 %int_0 %int_0
       %4203 = OpBitcast %v3uint %4202
       %4204 = OpIMul %v3uint %4203 %401
       %4205 = OpIAdd %v3uint %4204 %403
       %4206 = OpCompositeExtract %uint %4205 1
       %4207 = OpCompositeExtract %uint %4205 2
       %4208 = OpIMul %uint %4206 %4207
       %4209 = OpCompositeExtract %uint %4205 0
       %4210 = OpIAdd %uint %4209 %4208
       %4211 = OpIMul %uint %4207 %4210
       %4212 = OpIAdd %uint %4206 %4211
       %4213 = OpIMul %uint %4210 %4212
       %4214 = OpIAdd %uint %4207 %4213
       %4215 = OpIMul %uint %4212 %4214
       %4216 = OpIAdd %uint %4210 %4215
       %4217 = OpCompositeInsert %v3uint %4216 %550 0
       %4218 = OpBitwiseAnd %v3uint %404 %405
       %4219 = OpShiftRightLogical %v3uint %4217 %4218
       %4220 = OpCompositeExtract %uint %4219 0
       %4221 = OpCompositeConstruct %v3uint %4220 %4220 %4220
       %4222 = OpBitwiseAnd %v3uint %4221 %386
       %4223 = OpConvertUToF %v3float %4222
       %4224 = OpExtInst %v3float %1 Fma %4223 %390 %278
       %4225 = OpDot %float %4224 %4191
       %4226 = OpConvertFToS %int %4194
       %4227 = OpFSub %v3float %4191 %350
       %4228 = OpCompositeConstruct %v3int %4226 %int_0 %int_0
       %4229 = OpBitcast %v3uint %4228
       %4230 = OpIMul %v3uint %4229 %401
       %4231 = OpIAdd %v3uint %4230 %403
       %4232 = OpCompositeExtract %uint %4231 1
       %4233 = OpCompositeExtract %uint %4231 2
       %4234 = OpIMul %uint %4232 %4233
       %4235 = OpCompositeExtract %uint %4231 0
       %4236 = OpIAdd %uint %4235 %4234
       %4237 = OpIMul %uint %4233 %4236
       %4238 = OpIAdd %uint %4232 %4237
       %4239 = OpIMul %uint %4236 %4238
       %4240 = OpIAdd %uint %4233 %4239
       %4241 = OpIMul %uint %4238 %4240
       %4242 = OpIAdd %uint %4236 %4241
       %4243 = OpCompositeInsert %v3uint %4242 %550 0
       %4244 = OpShiftRightLogical %v3uint %4243 %4218
       %4245 = OpCompositeExtract %uint %4244 0
       %4246 = OpCompositeConstruct %v3uint %4245 %4245 %4245
       %4247 = OpBitwiseAnd %v3uint %4246 %386
       %4248 = OpConvertUToF %v3float %4247
       %4249 = OpExtInst %v3float %1 Fma %4248 %390 %278
       %4250 = OpDot %float %4249 %4227
       %4251 = OpConvertFToS %int %4195
       %4252 = OpFSub %v3float %4191 %351
       %4253 = OpCompositeConstruct %v3int %4251 %int_0 %int_0
       %4254 = OpBitcast %v3uint %4253
       %4255 = OpIMul %v3uint %4254 %401
       %4256 = OpIAdd %v3uint %4255 %403
       %4257 = OpCompositeExtract %uint %4256 1
       %4258 = OpCompositeExtract %uint %4256 2
       %4259 = OpIMul %uint %4257 %4258
       %4260 = OpCompositeExtract %uint %4256 0
       %4261 = OpIAdd %uint %4260 %4259
       %4262 = OpIMul %uint %4258 %4261
       %4263 = OpIAdd %uint %4257 %4262
       %4264 = OpIMul %uint %4261 %4263
       %4265 = OpIAdd %uint %4258 %4264
       %4266 = OpIMul %uint %4263 %4265
       %4267 = OpIAdd %uint %4261 %4266
       %4268 = OpCompositeInsert %v3uint %4267 %550 0
       %4269 = OpShiftRightLogical %v3uint %4268 %4218
       %4270 = OpCompositeExtract %uint %4269 0
       %4271 = OpCompositeConstruct %v3uint %4270 %4270 %4270
       %4272 = OpBitwiseAnd %v3uint %4271 %386
       %4273 = OpConvertUToF %v3float %4272
       %4274 = OpExtInst %v3float %1 Fma %4273 %390 %278
       %4275 = OpDot %float %4274 %4252
       %4276 = OpConvertFToS %int %4196
       %4277 = OpFSub %v3float %4191 %134
       %4278 = OpCompositeConstruct %v3int %4276 %int_0 %int_0
       %4279 = OpBitcast %v3uint %4278
       %4280 = OpIMul %v3uint %4279 %401
       %4281 = OpIAdd %v3uint %4280 %403
       %4282 = OpCompositeExtract %uint %4281 1
       %4283 = OpCompositeExtract %uint %4281 2
       %4284 = OpIMul %uint %4282 %4283
       %4285 = OpCompositeExtract %uint %4281 0
       %4286 = OpIAdd %uint %4285 %4284
       %4287 = OpIMul %uint %4283 %4286
       %4288 = OpIAdd %uint %4282 %4287
       %4289 = OpIMul %uint %4286 %4288
       %4290 = OpIAdd %uint %4283 %4289
       %4291 = OpIMul %uint %4288 %4290
       %4292 = OpIAdd %uint %4286 %4291
       %4293 = OpCompositeInsert %v3uint %4292 %550 0
       %4294 = OpShiftRightLogical %v3uint %4293 %4218
       %4295 = OpCompositeExtract %uint %4294 0
       %4296 = OpCompositeConstruct %v3uint %4295 %4295 %4295
       %4297 = OpBitwiseAnd %v3uint %4296 %386
       %4298 = OpConvertUToF %v3float %4297
       %4299 = OpExtInst %v3float %1 Fma %4298 %390 %278
       %4300 = OpDot %float %4299 %4277
       %4301 = OpConvertFToS %int %4197
       %4302 = OpFSub %v3float %4191 %290
       %4303 = OpCompositeConstruct %v3int %4301 %int_0 %int_0
       %4304 = OpBitcast %v3uint %4303
       %4305 = OpIMul %v3uint %4304 %401
       %4306 = OpIAdd %v3uint %4305 %403
       %4307 = OpCompositeExtract %uint %4306 1
       %4308 = OpCompositeExtract %uint %4306 2
       %4309 = OpIMul %uint %4307 %4308
       %4310 = OpCompositeExtract %uint %4306 0
       %4311 = OpIAdd %uint %4310 %4309
       %4312 = OpIMul %uint %4308 %4311
       %4313 = OpIAdd %uint %4307 %4312
       %4314 = OpIMul %uint %4311 %4313
       %4315 = OpIAdd %uint %4308 %4314
       %4316 = OpIMul %uint %4313 %4315
       %4317 = OpIAdd %uint %4311 %4316
       %4318 = OpCompositeInsert %v3uint %4317 %550 0
       %4319 = OpShiftRightLogical %v3uint %4318 %4218
       %4320 = OpCompositeExtract %uint %4319 0
       %4321 = OpCompositeConstruct %v3uint %4320 %4320 %4320
       %4322 = OpBitwiseAnd %v3uint %4321 %386
       %4323 = OpConvertUToF %v3float %4322
       %4324 = OpExtInst %v3float %1 Fma %4323 %390 %278
       %4325 = OpDot %float %4324 %4302
       %4326 = OpConvertFToS %int %4198
       %4327 = OpFSub %v3float %4191 %139
       %4328 = OpCompositeConstruct %v3int %4326 %int_0 %int_0
       %4329 = OpBitcast %v3uint %4328
       %4330 = OpIMul %v3uint %4329 %401
       %4331 = OpIAdd %v3uint %4330 %403
       %4332 = OpCompositeExtract %uint %4331 1
       %4333 = OpCompositeExtract %uint %4331 2
       %4334 = OpIMul %uint %4332 %4333
       %4335 = OpCompositeExtract %uint %4331 0
       %4336 = OpIAdd %uint %4335 %4334
       %4337 = OpIMul %uint %4333 %4336
       %4338 = OpIAdd %uint %4332 %4337
       %4339 = OpIMul %uint %4336 %4338
       %4340 = OpIAdd %uint %4333 %4339
       %4341 = OpIMul %uint %4338 %4340
       %4342 = OpIAdd %uint %4336 %4341
       %4343 = OpCompositeInsert %v3uint %4342 %550 0
       %4344 = OpShiftRightLogical %v3uint %4343 %4218
       %4345 = OpCompositeExtract %uint %4344 0
       %4346 = OpCompositeConstruct %v3uint %4345 %4345 %4345
       %4347 = OpBitwiseAnd %v3uint %4346 %386
       %4348 = OpConvertUToF %v3float %4347
       %4349 = OpExtInst %v3float %1 Fma %4348 %390 %278
       %4350 = OpDot %float %4349 %4327
       %4351 = OpConvertFToS %int %4199
       %4352 = OpFSub %v3float %4191 %135
       %4353 = OpCompositeConstruct %v3int %4351 %int_0 %int_0
       %4354 = OpBitcast %v3uint %4353
       %4355 = OpIMul %v3uint %4354 %401
       %4356 = OpIAdd %v3uint %4355 %403
       %4357 = OpCompositeExtract %uint %4356 1
       %4358 = OpCompositeExtract %uint %4356 2
       %4359 = OpIMul %uint %4357 %4358
       %4360 = OpCompositeExtract %uint %4356 0
       %4361 = OpIAdd %uint %4360 %4359
       %4362 = OpIMul %uint %4358 %4361
       %4363 = OpIAdd %uint %4357 %4362
       %4364 = OpIMul %uint %4361 %4363
       %4365 = OpIAdd %uint %4358 %4364
       %4366 = OpIMul %uint %4363 %4365
       %4367 = OpIAdd %uint %4361 %4366
       %4368 = OpCompositeInsert %v3uint %4367 %550 0
       %4369 = OpShiftRightLogical %v3uint %4368 %4218
       %4370 = OpCompositeExtract %uint %4369 0
       %4371 = OpCompositeConstruct %v3uint %4370 %4370 %4370
       %4372 = OpBitwiseAnd %v3uint %4371 %386
       %4373 = OpConvertUToF %v3float %4372
       %4374 = OpExtInst %v3float %1 Fma %4373 %390 %278
       %4375 = OpDot %float %4374 %4352
       %4376 = OpConvertFToS %int %4200
       %4377 = OpFSub %v3float %4191 %127
       %4378 = OpCompositeConstruct %v3int %4376 %int_0 %int_0
       %4379 = OpBitcast %v3uint %4378
       %4380 = OpIMul %v3uint %4379 %401
       %4381 = OpIAdd %v3uint %4380 %403
       %4382 = OpCompositeExtract %uint %4381 1
       %4383 = OpCompositeExtract %uint %4381 2
       %4384 = OpIMul %uint %4382 %4383
       %4385 = OpCompositeExtract %uint %4381 0
       %4386 = OpIAdd %uint %4385 %4384
       %4387 = OpIMul %uint %4383 %4386
       %4388 = OpIAdd %uint %4382 %4387
       %4389 = OpIMul %uint %4386 %4388
       %4390 = OpIAdd %uint %4383 %4389
       %4391 = OpIMul %uint %4388 %4390
       %4392 = OpIAdd %uint %4386 %4391
       %4393 = OpCompositeInsert %v3uint %4392 %550 0
       %4394 = OpShiftRightLogical %v3uint %4393 %4218
       %4395 = OpCompositeExtract %uint %4394 0
       %4396 = OpCompositeConstruct %v3uint %4395 %4395 %4395
       %4397 = OpBitwiseAnd %v3uint %4396 %386
       %4398 = OpConvertUToF %v3float %4397
       %4399 = OpExtInst %v3float %1 Fma %4398 %390 %278
       %4400 = OpDot %float %4399 %4377
       %4401 = OpCompositeExtract %float %4191 0
       %4402 = OpCompositeExtract %float %4191 1
       %4403 = OpCompositeExtract %float %4191 2
       %4404 = OpCompositeConstruct %v4float %4401 %4402 %4403 %float_0
       %4405 = OpFMul %v4float %4404 %4404
       %4406 = OpFMul %v4float %4405 %4404
       %4407 = OpVectorTimesScalar %v4float %4404 %float_6
       %4408 = OpFSub %v4float %4407 %381
       %4409 = OpExtInst %v4float %1 Fma %4404 %4408 %382
       %4410 = OpFMul %v4float %4406 %4409
       %4411 = OpCompositeExtract %float %4410 0
       %4412 = OpExtInst %float %1 FMix %4225 %4250 %4411
       %4413 = OpExtInst %float %1 FMix %4275 %4300 %4411
       %4414 = OpCompositeExtract %float %4410 1
       %4415 = OpExtInst %float %1 FMix %4412 %4413 %4414
       %4416 = OpExtInst %float %1 FMix %4325 %4350 %4411
       %4417 = OpExtInst %float %1 FMix %4375 %4400 %4411
       %4418 = OpExtInst %float %1 FMix %4416 %4417 %4414
       %4419 = OpCompositeExtract %float %4410 2
       %4420 = OpExtInst %float %1 FMix %4415 %4418 %4419
       %4421 = OpExtInst %float %1 FAbs %4420
       %4186 = OpExtInst %float %1 Fma %4421 %4183 %4185
       %4181 = OpVectorTimesScalar %v3float %4180 %float_2
       %4184 = OpFMul %float %4183 %float_0_5
       %4188 = OpIAdd %uint %4187 %uint_1
               OpBranch %4179
       %4190 = OpLabel
       %4422 = OpExtInst %float %1 FMix %float_0 %float_1 %4185
       %4423 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_66 %int_3
       %4424 = OpLoad %float %4423
       %4425 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_66 %int_2
       %4426 = OpLoad %float %4425
       %4427 = OpExtInst %float %1 Fma %4422 %4424 %4426
       %4428 = OpFMul %float %4147 %4427
       %4429 = OpExtInst %float %1 FMix %3867 %3872 %4428
       %4430 = OpExtInst %float %1 Sin %3864
       %4431 = OpFMul %float %4430 %4429
       %4432 = OpFAdd %v3float %3548 %2560
       %4433 = OpExtInst %v3float %1 NMax %4432 %278
       %4434 = OpExtInst %v3float %1 NMin %4433 %127
       %4435 = OpCompositeExtract %float %4434 0
       %4436 = OpCompositeExtract %float %4434 1
       %4437 = OpCompositeConstruct %v2float %4435 %4436
       %4438 = OpFMul %v2float %1695 %4437
       %4439 = OpFMul %v2float %4437 %1696
       %4440 = OpCompositeExtract %float %4438 0
       %4441 = OpCompositeExtract %float %4439 0
       %4442 = OpCompositeExtract %float %4438 1
       %4443 = OpCompositeExtract %float %4439 1
       %4444 = OpFAdd %float %4440 %4442
       %4445 = OpFAdd %float %4441 %4443
       %4446 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_20 %int_3
       %4447 = OpLoad %float %4446
       %4448 = OpFMul %float %3568 %4447
       %4449 = OpFDiv %float %float_2 %4448
       %4450 = OpFMul %float %4444 %4449
       %4451 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_1
       %4452 = OpLoad %float %4451
       %4453 = OpFMul %float %4449 %4452
       %4454 = OpFMul %float %4453 %3852
       %4455 = OpExtInst %float %1 Fma %4445 %4449 %4454
       %4456 = OpExtInst %float %1 Floor %4450
       %4457 = OpFNegate %float %4456
       %4458 = OpExtInst %float %1 Fma %4444 %4449 %4457
       %4459 = OpExtInst %float %1 Fma %4458 %float_2097152 %4455
       %4460 = OpExtInst %float %1 Floor %4459
       %4461 = OpFMul %float %4456 %float_n6_28318548
       %4462 = OpExtInst %float %1 Fma %4450 %float_6_28318548 %4461
       %4463 = OpFMul %float %4460 %float_n6_28318548
       %4464 = OpExtInst %float %1 Fma %4455 %float_6_28318548 %4463
       %4465 = OpExtInst %float %1 Fma %4462 %float_2097152 %4464
       %4466 = OpFMul %float %4429 %2593
       %4467 = OpExtInst %float %1 Sin %4465
       %4468 = OpFMul %float %4467 %4466
       %4469 = OpCompositeConstruct %v3float %549 %549 %4431
       %4470 = OpCompositeConstruct %v3float %549 %549 %4468
       %4471 = OpFAdd %v3float %4469 %4470
       %4472 = OpFSub %v3float %3548 %1687
       %4473 = OpExtInst %v3float %1 NMax %4472 %278
       %4474 = OpExtInst %v3float %1 NMin %4473 %127
       %4475 = OpCompositeExtract %float %4474 0
       %4476 = OpCompositeExtract %float %4474 1
       %4477 = OpCompositeConstruct %v2float %4475 %4476
       %4478 = OpFMul %v2float %1695 %4477
       %4479 = OpFMul %v2float %4477 %1696
       %4480 = OpCompositeExtract %float %4478 0
       %4481 = OpCompositeExtract %float %4479 0
       %4482 = OpCompositeExtract %float %4478 1
       %4483 = OpCompositeExtract %float %4479 1
       %4484 = OpFAdd %float %4480 %4482
       %4485 = OpFAdd %float %4481 %4483
       %4486 = OpFMul %float %4448 %4447
       %4487 = OpFDiv %float %float_2 %4486
       %4488 = OpFMul %float %4484 %4487
       %4489 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_3
       %4490 = OpLoad %float %4489
       %4491 = OpFMul %float %4487 %4490
       %4492 = OpFMul %float %4491 %3852
       %4493 = OpExtInst %float %1 Fma %4485 %4487 %4492
       %4494 = OpExtInst %float %1 Floor %4488
       %4495 = OpFNegate %float %4494
       %4496 = OpExtInst %float %1 Fma %4484 %4487 %4495
       %4497 = OpExtInst %float %1 Fma %4496 %float_2097152 %4493
       %4498 = OpExtInst %float %1 Floor %4497
       %4499 = OpFMul %float %4494 %float_n6_28318548
       %4500 = OpExtInst %float %1 Fma %4488 %float_6_28318548 %4499
       %4501 = OpFMul %float %4498 %float_n6_28318548
       %4502 = OpExtInst %float %1 Fma %4493 %float_6_28318548 %4501
       %4503 = OpExtInst %float %1 Fma %4500 %float_2097152 %4502
       %4504 = OpFMul %float %4466 %2593
       %4505 = OpExtInst %float %1 Sin %4503
       %4506 = OpFMul %float %4505 %4504
       %4507 = OpCompositeConstruct %v3float %549 %549 %4506
       %4508 = OpFAdd %v3float %4471 %4507
       %4509 = OpFSub %v3float %3548 %2560
       %4510 = OpExtInst %v3float %1 NMax %4509 %278
       %4511 = OpExtInst %v3float %1 NMin %4510 %127
       %4512 = OpCompositeExtract %float %4511 0
       %4513 = OpCompositeExtract %float %4511 1
       %4514 = OpCompositeConstruct %v2float %4512 %4513
       %4515 = OpFMul %v2float %1695 %4514
       %4516 = OpFMul %v2float %4514 %1696
       %4517 = OpCompositeExtract %float %4515 0
       %4518 = OpCompositeExtract %float %4516 0
       %4519 = OpCompositeExtract %float %4515 1
       %4520 = OpCompositeExtract %float %4516 1
       %4521 = OpFAdd %float %4517 %4519
       %4522 = OpFAdd %float %4518 %4520
       %4523 = OpFMul %float %4486 %4447
       %4524 = OpFDiv %float %float_2 %4523
       %4525 = OpFMul %float %4521 %4524
       %4526 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_1
       %4527 = OpLoad %float %4526
       %4528 = OpFMul %float %4524 %4527
       %4529 = OpFMul %float %4528 %3852
       %4530 = OpExtInst %float %1 Fma %4522 %4524 %4529
       %4531 = OpExtInst %float %1 Floor %4525
       %4532 = OpFNegate %float %4531
       %4533 = OpExtInst %float %1 Fma %4521 %4524 %4532
       %4534 = OpExtInst %float %1 Fma %4533 %float_2097152 %4530
       %4535 = OpExtInst %float %1 Floor %4534
       %4536 = OpFMul %float %4531 %float_n6_28318548
       %4537 = OpExtInst %float %1 Fma %4525 %float_6_28318548 %4536
       %4538 = OpFMul %float %4535 %float_n6_28318548
       %4539 = OpExtInst %float %1 Fma %4530 %float_6_28318548 %4538
       %4540 = OpExtInst %float %1 Fma %4537 %float_2097152 %4539
       %4541 = OpFMul %float %4504 %2593
       %4542 = OpExtInst %float %1 Sin %4540
       %4543 = OpFMul %float %4542 %4541
       %4544 = OpCompositeConstruct %v3float %549 %549 %4543
       %4545 = OpFAdd %v3float %4508 %4544
       %4546 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_69 %int_0
       %4547 = OpLoad %float %4546
       %4548 = OpFSub %float %4547 %float_n1
       %4549 = OpExtInst %float %1 FAbs %4548
       %4550 = OpFOrdGreaterThan %bool %4549 %float_9_99999975en06
       %4551 = OpFOrdGreaterThanEqual %bool %4547 %float_n1
       %4552 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_69 %int_1
       %4553 = OpLoad %float %4552
       %4554 = OpSelect %float %4551 %4547 %4553
       %4555 = OpSelect %float %4550 %4554 %4547
       %4556 = OpFSub %float %4555 %float_1
       %4557 = OpExtInst %float %1 FAbs %4556
       %4558 = OpFOrdGreaterThan %bool %4557 %float_9_99999975en06
       %4559 = OpFOrdGreaterThanEqual %bool %4555 %float_1
       %4560 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_69 %int_2
       %4561 = OpLoad %float %4560
       %4562 = OpSelect %float %4559 %4561 %4547
       %4563 = OpSelect %float %4558 %4562 %4547
       %4564 = OpExtInst %float %1 FAbs %4563
       %4565 = OpFOrdGreaterThan %bool %4564 %float_9_99999975en06
       %4566 = OpFOrdGreaterThanEqual %bool %4563 %float_0
       %4567 = OpSelect %float %4566 %float_1 %float_n1
       %4568 = OpSelect %float %4565 %4567 %float_1
       %4569 = OpExtInst %float %1 NMax %4568 %float_n1
       %4570 = OpExtInst %float %1 NMin %4569 %float_1
       %4571 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_70 %int_3
       %4572 = OpLoad %float %4571
       %4573 = OpCompositeConstruct %v3float %4570 %4572 %float_0
       %4574 = OpFAdd %v3float %4573 %1687
       %4575 = OpExtInst %v3float %1 NMax %4574 %278
       %4576 = OpExtInst %v3float %1 NMin %4575 %127
       %4577 = OpCompositeExtract %float %4576 0
       %4578 = OpCompositeExtract %float %4576 1
       %4579 = OpCompositeConstruct %v2float %4577 %4578
       %4580 = OpFMul %v2float %1695 %4579
       %4581 = OpFMul %v2float %4579 %1696
       %4582 = OpCompositeExtract %float %4580 0
       %4583 = OpCompositeExtract %float %4581 0
       %4584 = OpCompositeExtract %float %4580 1
       %4585 = OpCompositeExtract %float %4581 1
       %4586 = OpFAdd %float %4582 %4584
       %4587 = OpFAdd %float %4583 %4585
       %4588 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_28 %int_3
       %4589 = OpLoad %float %4588
       %4590 = OpFMul %float %3565 %4589
       %4591 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_0
       %4592 = OpLoad %float %4591
       %4593 = OpFMul %float %4592 %4590
       %4594 = OpFDiv %float %float_2 %4593
       %4595 = OpFMul %float %4586 %4594
       %4596 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_1
       %4597 = OpLoad %float %4596
       %4598 = OpFMul %float %4594 %4597
       %4599 = OpFMul %float %4598 %3852
       %4600 = OpExtInst %float %1 Fma %4587 %4594 %4599
       %4601 = OpExtInst %float %1 Floor %4595
       %4602 = OpFNegate %float %4601
       %4603 = OpExtInst %float %1 Fma %4586 %4594 %4602
       %4604 = OpExtInst %float %1 Fma %4603 %float_2097152 %4600
       %4605 = OpExtInst %float %1 Floor %4604
       %4606 = OpFMul %float %4601 %float_n6_28318548
       %4607 = OpExtInst %float %1 Fma %4595 %float_6_28318548 %4606
       %4608 = OpFMul %float %4605 %float_n6_28318548
       %4609 = OpExtInst %float %1 Fma %4600 %float_6_28318548 %4608
       %4610 = OpExtInst %float %1 Fma %4607 %float_2097152 %4609
       %4611 = OpFMul %float %4429 %2732
       %4612 = OpExtInst %float %1 Sin %4610
       %4613 = OpFMul %float %4612 %4611
       %4614 = OpFAdd %v3float %4573 %2560
       %4615 = OpExtInst %v3float %1 NMax %4614 %278
       %4616 = OpExtInst %v3float %1 NMin %4615 %127
       %4617 = OpCompositeExtract %float %4616 0
       %4618 = OpCompositeExtract %float %4616 1
       %4619 = OpCompositeConstruct %v2float %4617 %4618
       %4620 = OpFMul %v2float %1695 %4619
       %4621 = OpFMul %v2float %4619 %1696
       %4622 = OpCompositeExtract %float %4620 0
       %4623 = OpCompositeExtract %float %4621 0
       %4624 = OpCompositeExtract %float %4620 1
       %4625 = OpCompositeExtract %float %4621 1
       %4626 = OpFAdd %float %4622 %4624
       %4627 = OpFAdd %float %4623 %4625
       %4628 = OpFMul %float %4593 %4447
       %4629 = OpFDiv %float %float_2 %4628
       %4630 = OpFMul %float %4626 %4629
       %4631 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_2
       %4632 = OpLoad %float %4631
       %4633 = OpFMul %float %4629 %4632
       %4634 = OpFMul %float %4633 %3852
       %4635 = OpExtInst %float %1 Fma %4627 %4629 %4634
       %4636 = OpExtInst %float %1 Floor %4630
       %4637 = OpFNegate %float %4636
       %4638 = OpExtInst %float %1 Fma %4626 %4629 %4637
       %4639 = OpExtInst %float %1 Fma %4638 %float_2097152 %4635
       %4640 = OpExtInst %float %1 Floor %4639
       %4641 = OpFMul %float %4636 %float_n6_28318548
       %4642 = OpExtInst %float %1 Fma %4630 %float_6_28318548 %4641
       %4643 = OpFMul %float %4640 %float_n6_28318548
       %4644 = OpExtInst %float %1 Fma %4635 %float_6_28318548 %4643
       %4645 = OpExtInst %float %1 Fma %4642 %float_2097152 %4644
       %4646 = OpFMul %float %4611 %2593
       %4647 = OpExtInst %float %1 Sin %4645
       %4648 = OpFMul %float %4647 %4646
       %4649 = OpCompositeConstruct %v3float %549 %549 %4613
       %4650 = OpCompositeConstruct %v3float %549 %549 %4648
       %4651 = OpFAdd %v3float %4649 %4650
       %4652 = OpFSub %v3float %4573 %1687
       %4653 = OpExtInst %v3float %1 NMax %4652 %278
       %4654 = OpExtInst %v3float %1 NMin %4653 %127
       %4655 = OpCompositeExtract %float %4654 0
       %4656 = OpCompositeExtract %float %4654 1
       %4657 = OpCompositeConstruct %v2float %4655 %4656
       %4658 = OpFMul %v2float %1695 %4657
       %4659 = OpFMul %v2float %4657 %1696
       %4660 = OpCompositeExtract %float %4658 0
       %4661 = OpCompositeExtract %float %4659 0
       %4662 = OpCompositeExtract %float %4658 1
       %4663 = OpCompositeExtract %float %4659 1
       %4664 = OpFAdd %float %4660 %4662
       %4665 = OpFAdd %float %4661 %4663
       %4666 = OpFMul %float %4628 %4447
       %4667 = OpFDiv %float %float_2 %4666
       %4668 = OpFMul %float %4664 %4667
       %4669 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_3
       %4670 = OpLoad %float %4669
       %4671 = OpFMul %float %4667 %4670
       %4672 = OpFMul %float %4671 %3852
       %4673 = OpExtInst %float %1 Fma %4665 %4667 %4672
       %4674 = OpExtInst %float %1 Floor %4668
       %4675 = OpFNegate %float %4674
       %4676 = OpExtInst %float %1 Fma %4664 %4667 %4675
       %4677 = OpExtInst %float %1 Fma %4676 %float_2097152 %4673
       %4678 = OpExtInst %float %1 Floor %4677
       %4679 = OpFMul %float %4674 %float_n6_28318548
       %4680 = OpExtInst %float %1 Fma %4668 %float_6_28318548 %4679
       %4681 = OpFMul %float %4678 %float_n6_28318548
       %4682 = OpExtInst %float %1 Fma %4673 %float_6_28318548 %4681
       %4683 = OpExtInst %float %1 Fma %4680 %float_2097152 %4682
       %4684 = OpFMul %float %4646 %2593
       %4685 = OpExtInst %float %1 Sin %4683
       %4686 = OpFMul %float %4685 %4684
       %4687 = OpCompositeConstruct %v3float %549 %549 %4686
       %4688 = OpFAdd %v3float %4651 %4687
       %4689 = OpFSub %v3float %4573 %2560
       %4690 = OpExtInst %v3float %1 NMax %4689 %278
       %4691 = OpExtInst %v3float %1 NMin %4690 %127
       %4692 = OpCompositeExtract %float %4691 0
       %4693 = OpCompositeExtract %float %4691 1
       %4694 = OpCompositeConstruct %v2float %4692 %4693
       %4695 = OpFMul %v2float %1695 %4694
       %4696 = OpFMul %v2float %4694 %1696
       %4697 = OpCompositeExtract %float %4695 0
       %4698 = OpCompositeExtract %float %4696 0
       %4699 = OpCompositeExtract %float %4695 1
       %4700 = OpCompositeExtract %float %4696 1
       %4701 = OpFAdd %float %4697 %4699
       %4702 = OpFAdd %float %4698 %4700
       %4703 = OpFMul %float %4666 %4447
       %4704 = OpFDiv %float %float_2 %4703
       %4705 = OpFMul %float %4701 %4704
       %4706 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_0
       %4707 = OpLoad %float %4706
       %4708 = OpFMul %float %4704 %4707
       %4709 = OpFMul %float %4708 %3852
       %4710 = OpExtInst %float %1 Fma %4702 %4704 %4709
       %4711 = OpExtInst %float %1 Floor %4705
       %4712 = OpFNegate %float %4711
       %4713 = OpExtInst %float %1 Fma %4701 %4704 %4712
       %4714 = OpExtInst %float %1 Fma %4713 %float_2097152 %4710
       %4715 = OpExtInst %float %1 Floor %4714
       %4716 = OpFMul %float %4711 %float_n6_28318548
       %4717 = OpExtInst %float %1 Fma %4705 %float_6_28318548 %4716
       %4718 = OpFMul %float %4715 %float_n6_28318548
       %4719 = OpExtInst %float %1 Fma %4710 %float_6_28318548 %4718
       %4720 = OpExtInst %float %1 Fma %4717 %float_2097152 %4719
       %4721 = OpFMul %float %4684 %2593
       %4722 = OpExtInst %float %1 Sin %4720
       %4723 = OpFMul %float %4722 %4721
       %4724 = OpCompositeConstruct %v3float %549 %549 %4723
       %4725 = OpFAdd %v3float %4688 %4724
       %4726 = OpFAdd %v3float %4545 %4725
       %4727 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_1
       %4728 = OpLoad %float %4727
       %4729 = OpFSub %float %4728 %float_n1
       %4730 = OpExtInst %float %1 FAbs %4729
       %4731 = OpFOrdGreaterThan %bool %4730 %float_9_99999975en06
       %4732 = OpFOrdGreaterThanEqual %bool %4728 %float_n1
       %4733 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_2
       %4734 = OpLoad %float %4733
       %4735 = OpSelect %float %4732 %4728 %4734
       %4736 = OpSelect %float %4731 %4735 %4728
       %4737 = OpFSub %float %4736 %float_1
       %4738 = OpExtInst %float %1 FAbs %4737
       %4739 = OpFOrdGreaterThan %bool %4738 %float_9_99999975en06
       %4740 = OpFOrdGreaterThanEqual %bool %4736 %float_1
       %4741 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_3
       %4742 = OpLoad %float %4741
       %4743 = OpSelect %float %4740 %4742 %4728
       %4744 = OpSelect %float %4739 %4743 %4728
       %4745 = OpExtInst %float %1 FAbs %4744
       %4746 = OpFOrdGreaterThan %bool %4745 %float_9_99999975en06
       %4747 = OpFOrdGreaterThanEqual %bool %4744 %float_0
       %4748 = OpSelect %float %4747 %float_1 %float_n1
       %4749 = OpSelect %float %4746 %4748 %float_1
       %4750 = OpExtInst %float %1 NMax %4749 %float_n1
       %4751 = OpExtInst %float %1 NMin %4750 %float_1
       %4752 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_0
       %4753 = OpLoad %float %4752
       %4754 = OpCompositeConstruct %v3float %4751 %4753 %float_0
       %4755 = OpFAdd %v3float %4754 %1687
       %4756 = OpExtInst %v3float %1 NMax %4755 %278
       %4757 = OpExtInst %v3float %1 NMin %4756 %127
       %4758 = OpCompositeExtract %float %4757 0
       %4759 = OpCompositeExtract %float %4757 1
       %4760 = OpCompositeConstruct %v2float %4758 %4759
       %4761 = OpFMul %v2float %1695 %4760
       %4762 = OpFMul %v2float %4760 %1696
       %4763 = OpCompositeExtract %float %4761 0
       %4764 = OpCompositeExtract %float %4762 0
       %4765 = OpCompositeExtract %float %4761 1
       %4766 = OpCompositeExtract %float %4762 1
       %4767 = OpFAdd %float %4763 %4765
       %4768 = OpFAdd %float %4764 %4766
       %4769 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_76 %int_1
       %4770 = OpLoad %float %4769
       %4771 = OpFMul %float %4770 %4590
       %4772 = OpFDiv %float %float_2 %4771
       %4773 = OpFMul %float %4767 %4772
       %4774 = OpFMul %float %4772 %4597
       %4775 = OpFMul %float %4774 %3852
       %4776 = OpExtInst %float %1 Fma %4768 %4772 %4775
       %4777 = OpExtInst %float %1 Floor %4773
       %4778 = OpFNegate %float %4777
       %4779 = OpExtInst %float %1 Fma %4767 %4772 %4778
       %4780 = OpExtInst %float %1 Fma %4779 %float_2097152 %4776
       %4781 = OpExtInst %float %1 Floor %4780
       %4782 = OpFMul %float %4777 %float_n6_28318548
       %4783 = OpExtInst %float %1 Fma %4773 %float_6_28318548 %4782
       %4784 = OpFMul %float %4781 %float_n6_28318548
       %4785 = OpExtInst %float %1 Fma %4776 %float_6_28318548 %4784
       %4786 = OpExtInst %float %1 Fma %4783 %float_2097152 %4785
       %4787 = OpExtInst %float %1 Sin %4786
       %4788 = OpFMul %float %4787 %4611
       %4789 = OpFAdd %v3float %4754 %2560
       %4790 = OpExtInst %v3float %1 NMax %4789 %278
       %4791 = OpExtInst %v3float %1 NMin %4790 %127
       %4792 = OpCompositeExtract %float %4791 0
       %4793 = OpCompositeExtract %float %4791 1
       %4794 = OpCompositeConstruct %v2float %4792 %4793
       %4795 = OpFMul %v2float %1695 %4794
       %4796 = OpFMul %v2float %4794 %1696
       %4797 = OpCompositeExtract %float %4795 0
       %4798 = OpCompositeExtract %float %4796 0
       %4799 = OpCompositeExtract %float %4795 1
       %4800 = OpCompositeExtract %float %4796 1
       %4801 = OpFAdd %float %4797 %4799
       %4802 = OpFAdd %float %4798 %4800
       %4803 = OpFMul %float %4771 %4447
       %4804 = OpFDiv %float %float_2 %4803
       %4805 = OpFMul %float %4801 %4804
       %4806 = OpFMul %float %4804 %4632
       %4807 = OpFMul %float %4806 %3852
       %4808 = OpExtInst %float %1 Fma %4802 %4804 %4807
       %4809 = OpExtInst %float %1 Floor %4805
       %4810 = OpFNegate %float %4809
       %4811 = OpExtInst %float %1 Fma %4801 %4804 %4810
       %4812 = OpExtInst %float %1 Fma %4811 %float_2097152 %4808
       %4813 = OpExtInst %float %1 Floor %4812
       %4814 = OpFMul %float %4809 %float_n6_28318548
       %4815 = OpExtInst %float %1 Fma %4805 %float_6_28318548 %4814
       %4816 = OpFMul %float %4813 %float_n6_28318548
       %4817 = OpExtInst %float %1 Fma %4808 %float_6_28318548 %4816
       %4818 = OpExtInst %float %1 Fma %4815 %float_2097152 %4817
       %4819 = OpExtInst %float %1 Sin %4818
       %4820 = OpFMul %float %4819 %4646
       %4821 = OpCompositeConstruct %v3float %549 %549 %4788
       %4822 = OpCompositeConstruct %v3float %549 %549 %4820
       %4823 = OpFAdd %v3float %4821 %4822
       %4824 = OpFSub %v3float %4754 %1687
       %4825 = OpExtInst %v3float %1 NMax %4824 %278
       %4826 = OpExtInst %v3float %1 NMin %4825 %127
       %4827 = OpCompositeExtract %float %4826 0
       %4828 = OpCompositeExtract %float %4826 1
       %4829 = OpCompositeConstruct %v2float %4827 %4828
       %4830 = OpFMul %v2float %1695 %4829
       %4831 = OpFMul %v2float %4829 %1696
       %4832 = OpCompositeExtract %float %4830 0
       %4833 = OpCompositeExtract %float %4831 0
       %4834 = OpCompositeExtract %float %4830 1
       %4835 = OpCompositeExtract %float %4831 1
       %4836 = OpFAdd %float %4832 %4834
       %4837 = OpFAdd %float %4833 %4835
       %4838 = OpFMul %float %4803 %4447
       %4839 = OpFDiv %float %float_2 %4838
       %4840 = OpFMul %float %4836 %4839
       %4841 = OpFMul %float %4839 %4670
       %4842 = OpFMul %float %4841 %3852
       %4843 = OpExtInst %float %1 Fma %4837 %4839 %4842
       %4844 = OpExtInst %float %1 Floor %4840
       %4845 = OpFNegate %float %4844
       %4846 = OpExtInst %float %1 Fma %4836 %4839 %4845
       %4847 = OpExtInst %float %1 Fma %4846 %float_2097152 %4843
       %4848 = OpExtInst %float %1 Floor %4847
       %4849 = OpFMul %float %4844 %float_n6_28318548
       %4850 = OpExtInst %float %1 Fma %4840 %float_6_28318548 %4849
       %4851 = OpFMul %float %4848 %float_n6_28318548
       %4852 = OpExtInst %float %1 Fma %4843 %float_6_28318548 %4851
       %4853 = OpExtInst %float %1 Fma %4850 %float_2097152 %4852
       %4854 = OpExtInst %float %1 Sin %4853
       %4855 = OpFMul %float %4854 %4684
       %4856 = OpCompositeConstruct %v3float %549 %549 %4855
       %4857 = OpFAdd %v3float %4823 %4856
       %4858 = OpFSub %v3float %4754 %2560
       %4859 = OpExtInst %v3float %1 NMax %4858 %278
       %4860 = OpExtInst %v3float %1 NMin %4859 %127
       %4861 = OpCompositeExtract %float %4860 0
       %4862 = OpCompositeExtract %float %4860 1
       %4863 = OpCompositeConstruct %v2float %4861 %4862
       %4864 = OpFMul %v2float %1695 %4863
       %4865 = OpFMul %v2float %4863 %1696
       %4866 = OpCompositeExtract %float %4864 0
       %4867 = OpCompositeExtract %float %4865 0
       %4868 = OpCompositeExtract %float %4864 1
       %4869 = OpCompositeExtract %float %4865 1
       %4870 = OpFAdd %float %4866 %4868
       %4871 = OpFAdd %float %4867 %4869
       %4872 = OpFMul %float %4838 %4447
       %4873 = OpFDiv %float %float_2 %4872
       %4874 = OpFMul %float %4870 %4873
       %4875 = OpFMul %float %4873 %4707
       %4876 = OpFMul %float %4875 %3852
       %4877 = OpExtInst %float %1 Fma %4871 %4873 %4876
       %4878 = OpExtInst %float %1 Floor %4874
       %4879 = OpFNegate %float %4878
       %4880 = OpExtInst %float %1 Fma %4870 %4873 %4879
       %4881 = OpExtInst %float %1 Fma %4880 %float_2097152 %4877
       %4882 = OpExtInst %float %1 Floor %4881
       %4883 = OpFMul %float %4878 %float_n6_28318548
       %4884 = OpExtInst %float %1 Fma %4874 %float_6_28318548 %4883
       %4885 = OpFMul %float %4882 %float_n6_28318548
       %4886 = OpExtInst %float %1 Fma %4877 %float_6_28318548 %4885
       %4887 = OpExtInst %float %1 Fma %4884 %float_2097152 %4886
       %4888 = OpExtInst %float %1 Sin %4887
       %4889 = OpFMul %float %4888 %4721
       %4890 = OpCompositeConstruct %v3float %549 %549 %4889
       %4891 = OpFAdd %v3float %4857 %4890
       %4892 = OpFAdd %v3float %4726 %4891
       %4893 = OpFMul %float %3565 %float_0_800000012
       %4894 = OpFMul %float %3567 %4893
       %4895 = OpFDiv %float %float_2 %4894
       %4896 = OpFMul %float %3561 %4895
       %4897 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_76 %int_2
       %4898 = OpLoad %float %4897
       %4899 = OpFMul %float %4895 %4898
       %4900 = OpFMul %float %4899 %3852
       %4901 = OpExtInst %float %1 Fma %3562 %4895 %4900
       %4902 = OpExtInst %float %1 Floor %4896
       %4903 = OpFNegate %float %4902
       %4904 = OpExtInst %float %1 Fma %3561 %4895 %4903
       %4905 = OpExtInst %float %1 Fma %4904 %float_2097152 %4901
       %4906 = OpExtInst %float %1 Floor %4905
       %4907 = OpFMul %float %4902 %float_n6_28318548
       %4908 = OpExtInst %float %1 Fma %4896 %float_6_28318548 %4907
       %4909 = OpFMul %float %4906 %float_n6_28318548
       %4910 = OpExtInst %float %1 Fma %4901 %float_6_28318548 %4909
       %4911 = OpExtInst %float %1 Fma %4908 %float_2097152 %4910
       %4912 = OpFMul %float %4429 %float_0_800000012
       %4913 = OpExtInst %float %1 Sin %4911
       %4914 = OpFMul %float %4913 %4912
       %4915 = OpFMul %float %4894 %4447
       %4916 = OpFDiv %float %float_2 %4915
       %4917 = OpFMul %float %4444 %4916
       %4918 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_76 %int_3
       %4919 = OpLoad %float %4918
       %4920 = OpFMul %float %4916 %4919
       %4921 = OpFMul %float %4920 %3852
       %4922 = OpExtInst %float %1 Fma %4445 %4916 %4921
       %4923 = OpExtInst %float %1 Floor %4917
       %4924 = OpFNegate %float %4923
       %4925 = OpExtInst %float %1 Fma %4444 %4916 %4924
       %4926 = OpExtInst %float %1 Fma %4925 %float_2097152 %4922
       %4927 = OpExtInst %float %1 Floor %4926
       %4928 = OpFMul %float %4923 %float_n6_28318548
       %4929 = OpExtInst %float %1 Fma %4917 %float_6_28318548 %4928
       %4930 = OpFMul %float %4927 %float_n6_28318548
       %4931 = OpExtInst %float %1 Fma %4922 %float_6_28318548 %4930
       %4932 = OpExtInst %float %1 Fma %4929 %float_2097152 %4931
       %4933 = OpFMul %float %4912 %2593
       %4934 = OpExtInst %float %1 Sin %4932
       %4935 = OpFMul %float %4934 %4933
       %4936 = OpCompositeConstruct %v3float %549 %549 %4914
       %4937 = OpCompositeConstruct %v3float %549 %549 %4935
       %4938 = OpFAdd %v3float %4936 %4937
       %4939 = OpFMul %float %4915 %4447
       %4940 = OpFDiv %float %float_2 %4939
       %4941 = OpFMul %float %4484 %4940
       %4942 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_77 %int_0
       %4943 = OpLoad %float %4942
       %4944 = OpFMul %float %4940 %4943
       %4945 = OpFMul %float %4944 %3852
       %4946 = OpExtInst %float %1 Fma %4485 %4940 %4945
       %4947 = OpExtInst %float %1 Floor %4941
       %4948 = OpFNegate %float %4947
       %4949 = OpExtInst %float %1 Fma %4484 %4940 %4948
       %4950 = OpExtInst %float %1 Fma %4949 %float_2097152 %4946
       %4951 = OpExtInst %float %1 Floor %4950
       %4952 = OpFMul %float %4947 %float_n6_28318548
       %4953 = OpExtInst %float %1 Fma %4941 %float_6_28318548 %4952
       %4954 = OpFMul %float %4951 %float_n6_28318548
       %4955 = OpExtInst %float %1 Fma %4946 %float_6_28318548 %4954
       %4956 = OpExtInst %float %1 Fma %4953 %float_2097152 %4955
       %4957 = OpFMul %float %4933 %2593
       %4958 = OpExtInst %float %1 Sin %4956
       %4959 = OpFMul %float %4958 %4957
       %4960 = OpCompositeConstruct %v3float %549 %549 %4959
       %4961 = OpFAdd %v3float %4938 %4960
       %4962 = OpFMul %float %4939 %4447
       %4963 = OpFDiv %float %float_2 %4962
       %4964 = OpFMul %float %4521 %4963
       %4965 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_77 %int_1
       %4966 = OpLoad %float %4965
       %4967 = OpFMul %float %4963 %4966
       %4968 = OpFMul %float %4967 %3852
       %4969 = OpExtInst %float %1 Fma %4522 %4963 %4968
       %4970 = OpExtInst %float %1 Floor %4964
       %4971 = OpFNegate %float %4970
       %4972 = OpExtInst %float %1 Fma %4521 %4963 %4971
       %4973 = OpExtInst %float %1 Fma %4972 %float_2097152 %4969
       %4974 = OpExtInst %float %1 Floor %4973
       %4975 = OpFMul %float %4970 %float_n6_28318548
       %4976 = OpExtInst %float %1 Fma %4964 %float_6_28318548 %4975
       %4977 = OpFMul %float %4974 %float_n6_28318548
       %4978 = OpExtInst %float %1 Fma %4969 %float_6_28318548 %4977
       %4979 = OpExtInst %float %1 Fma %4976 %float_2097152 %4978
       %4980 = OpFMul %float %4957 %2593
       %4981 = OpExtInst %float %1 Sin %4979
       %4982 = OpFMul %float %4981 %4980
       %4983 = OpCompositeConstruct %v3float %549 %549 %4982
       %4984 = OpFAdd %v3float %4961 %4983
       %4985 = OpFMul %float %4893 %4589
       %4986 = OpFMul %float %4592 %4985
       %4987 = OpFDiv %float %float_2 %4986
       %4988 = OpFMul %float %4586 %4987
       %4989 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_77 %int_2
       %4990 = OpLoad %float %4989
       %4991 = OpFMul %float %4987 %4990
       %4992 = OpFMul %float %4991 %3852
       %4993 = OpExtInst %float %1 Fma %4587 %4987 %4992
       %4994 = OpExtInst %float %1 Floor %4988
       %4995 = OpFNegate %float %4994
       %4996 = OpExtInst %float %1 Fma %4586 %4987 %4995
       %4997 = OpExtInst %float %1 Fma %4996 %float_2097152 %4993
       %4998 = OpExtInst %float %1 Floor %4997
       %4999 = OpFMul %float %4994 %float_n6_28318548
       %5000 = OpExtInst %float %1 Fma %4988 %float_6_28318548 %4999
       %5001 = OpFMul %float %4998 %float_n6_28318548
       %5002 = OpExtInst %float %1 Fma %4993 %float_6_28318548 %5001
       %5003 = OpExtInst %float %1 Fma %5000 %float_2097152 %5002
       %5004 = OpFMul %float %4912 %2732
       %5005 = OpExtInst %float %1 Sin %5003
       %5006 = OpFMul %float %5005 %5004
       %5007 = OpFMul %float %4986 %4447
       %5008 = OpFDiv %float %float_2 %5007
       %5009 = OpFMul %float %4626 %5008
       %5010 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_77 %int_3
       %5011 = OpLoad %float %5010
       %5012 = OpFMul %float %5008 %5011
       %5013 = OpFMul %float %5012 %3852
       %5014 = OpExtInst %float %1 Fma %4627 %5008 %5013
       %5015 = OpExtInst %float %1 Floor %5009
       %5016 = OpFNegate %float %5015
       %5017 = OpExtInst %float %1 Fma %4626 %5008 %5016
       %5018 = OpExtInst %float %1 Fma %5017 %float_2097152 %5014
       %5019 = OpExtInst %float %1 Floor %5018
       %5020 = OpFMul %float %5015 %float_n6_28318548
       %5021 = OpExtInst %float %1 Fma %5009 %float_6_28318548 %5020
       %5022 = OpFMul %float %5019 %float_n6_28318548
       %5023 = OpExtInst %float %1 Fma %5014 %float_6_28318548 %5022
       %5024 = OpExtInst %float %1 Fma %5021 %float_2097152 %5023
       %5025 = OpFMul %float %5004 %2593
       %5026 = OpExtInst %float %1 Sin %5024
       %5027 = OpFMul %float %5026 %5025
       %5028 = OpCompositeConstruct %v3float %549 %549 %5006
       %5029 = OpCompositeConstruct %v3float %549 %549 %5027
       %5030 = OpFAdd %v3float %5028 %5029
       %5031 = OpFMul %float %5007 %4447
       %5032 = OpFDiv %float %float_2 %5031
       %5033 = OpFMul %float %4664 %5032
       %5034 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_0
       %5035 = OpLoad %float %5034
       %5036 = OpFMul %float %5032 %5035
       %5037 = OpFMul %float %5036 %3852
       %5038 = OpExtInst %float %1 Fma %4665 %5032 %5037
       %5039 = OpExtInst %float %1 Floor %5033
       %5040 = OpFNegate %float %5039
       %5041 = OpExtInst %float %1 Fma %4664 %5032 %5040
       %5042 = OpExtInst %float %1 Fma %5041 %float_2097152 %5038
       %5043 = OpExtInst %float %1 Floor %5042
       %5044 = OpFMul %float %5039 %float_n6_28318548
       %5045 = OpExtInst %float %1 Fma %5033 %float_6_28318548 %5044
       %5046 = OpFMul %float %5043 %float_n6_28318548
       %5047 = OpExtInst %float %1 Fma %5038 %float_6_28318548 %5046
       %5048 = OpExtInst %float %1 Fma %5045 %float_2097152 %5047
       %5049 = OpFMul %float %5025 %2593
       %5050 = OpExtInst %float %1 Sin %5048
       %5051 = OpFMul %float %5050 %5049
       %5052 = OpCompositeConstruct %v3float %549 %549 %5051
       %5053 = OpFAdd %v3float %5030 %5052
       %5054 = OpFMul %float %5031 %4447
       %5055 = OpFDiv %float %float_2 %5054
       %5056 = OpFMul %float %4701 %5055
       %5057 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_1
       %5058 = OpLoad %float %5057
       %5059 = OpFMul %float %5055 %5058
       %5060 = OpFMul %float %5059 %3852
       %5061 = OpExtInst %float %1 Fma %4702 %5055 %5060
       %5062 = OpExtInst %float %1 Floor %5056
       %5063 = OpFNegate %float %5062
       %5064 = OpExtInst %float %1 Fma %4701 %5055 %5063
       %5065 = OpExtInst %float %1 Fma %5064 %float_2097152 %5061
       %5066 = OpExtInst %float %1 Floor %5065
       %5067 = OpFMul %float %5062 %float_n6_28318548
       %5068 = OpExtInst %float %1 Fma %5056 %float_6_28318548 %5067
       %5069 = OpFMul %float %5066 %float_n6_28318548
       %5070 = OpExtInst %float %1 Fma %5061 %float_6_28318548 %5069
       %5071 = OpExtInst %float %1 Fma %5068 %float_2097152 %5070
       %5072 = OpFMul %float %5049 %2593
       %5073 = OpExtInst %float %1 Sin %5071
       %5074 = OpFMul %float %5073 %5072
       %5075 = OpCompositeConstruct %v3float %549 %549 %5074
       %5076 = OpFAdd %v3float %5053 %5075
       %5077 = OpFAdd %v3float %4984 %5076
       %5078 = OpFMul %float %4770 %4985
       %5079 = OpFDiv %float %float_2 %5078
       %5080 = OpFMul %float %4767 %5079
       %5081 = OpFMul %float %5079 %4990
       %5082 = OpFMul %float %5081 %3852
       %5083 = OpExtInst %float %1 Fma %4768 %5079 %5082
       %5084 = OpExtInst %float %1 Floor %5080
       %5085 = OpFNegate %float %5084
       %5086 = OpExtInst %float %1 Fma %4767 %5079 %5085
       %5087 = OpExtInst %float %1 Fma %5086 %float_2097152 %5083
       %5088 = OpExtInst %float %1 Floor %5087
       %5089 = OpFMul %float %5084 %float_n6_28318548
       %5090 = OpExtInst %float %1 Fma %5080 %float_6_28318548 %5089
       %5091 = OpFMul %float %5088 %float_n6_28318548
       %5092 = OpExtInst %float %1 Fma %5083 %float_6_28318548 %5091
       %5093 = OpExtInst %float %1 Fma %5090 %float_2097152 %5092
       %5094 = OpExtInst %float %1 Sin %5093
       %5095 = OpFMul %float %5094 %5004
       %5096 = OpFMul %float %5078 %4447
       %5097 = OpFDiv %float %float_2 %5096
       %5098 = OpFMul %float %4801 %5097
       %5099 = OpFMul %float %5097 %5011
       %5100 = OpFMul %float %5099 %3852
       %5101 = OpExtInst %float %1 Fma %4802 %5097 %5100
       %5102 = OpExtInst %float %1 Floor %5098
       %5103 = OpFNegate %float %5102
       %5104 = OpExtInst %float %1 Fma %4801 %5097 %5103
       %5105 = OpExtInst %float %1 Fma %5104 %float_2097152 %5101
       %5106 = OpExtInst %float %1 Floor %5105
       %5107 = OpFMul %float %5102 %float_n6_28318548
       %5108 = OpExtInst %float %1 Fma %5098 %float_6_28318548 %5107
       %5109 = OpFMul %float %5106 %float_n6_28318548
       %5110 = OpExtInst %float %1 Fma %5101 %float_6_28318548 %5109
       %5111 = OpExtInst %float %1 Fma %5108 %float_2097152 %5110
       %5112 = OpExtInst %float %1 Sin %5111
       %5113 = OpFMul %float %5112 %5025
       %5114 = OpCompositeConstruct %v3float %549 %549 %5095
       %5115 = OpCompositeConstruct %v3float %549 %549 %5113
       %5116 = OpFAdd %v3float %5114 %5115
       %5117 = OpFMul %float %5096 %4447
       %5118 = OpFDiv %float %float_2 %5117
       %5119 = OpFMul %float %4836 %5118
       %5120 = OpFMul %float %5118 %5035
       %5121 = OpFMul %float %5120 %3852
       %5122 = OpExtInst %float %1 Fma %4837 %5118 %5121
       %5123 = OpExtInst %float %1 Floor %5119
       %5124 = OpFNegate %float %5123
       %5125 = OpExtInst %float %1 Fma %4836 %5118 %5124
       %5126 = OpExtInst %float %1 Fma %5125 %float_2097152 %5122
       %5127 = OpExtInst %float %1 Floor %5126
       %5128 = OpFMul %float %5123 %float_n6_28318548
       %5129 = OpExtInst %float %1 Fma %5119 %float_6_28318548 %5128
       %5130 = OpFMul %float %5127 %float_n6_28318548
       %5131 = OpExtInst %float %1 Fma %5122 %float_6_28318548 %5130
       %5132 = OpExtInst %float %1 Fma %5129 %float_2097152 %5131
       %5133 = OpExtInst %float %1 Sin %5132
       %5134 = OpFMul %float %5133 %5049
       %5135 = OpCompositeConstruct %v3float %549 %549 %5134
       %5136 = OpFAdd %v3float %5116 %5135
       %5137 = OpFMul %float %5117 %4447
       %5138 = OpFDiv %float %float_2 %5137
       %5139 = OpFMul %float %4870 %5138
       %5140 = OpFMul %float %5138 %5058
       %5141 = OpFMul %float %5140 %3852
       %5142 = OpExtInst %float %1 Fma %4871 %5138 %5141
       %5143 = OpExtInst %float %1 Floor %5139
       %5144 = OpFNegate %float %5143
       %5145 = OpExtInst %float %1 Fma %4870 %5138 %5144
       %5146 = OpExtInst %float %1 Fma %5145 %float_2097152 %5142
       %5147 = OpExtInst %float %1 Floor %5146
       %5148 = OpFMul %float %5143 %float_n6_28318548
       %5149 = OpExtInst %float %1 Fma %5139 %float_6_28318548 %5148
       %5150 = OpFMul %float %5147 %float_n6_28318548
       %5151 = OpExtInst %float %1 Fma %5142 %float_6_28318548 %5150
       %5152 = OpExtInst %float %1 Fma %5149 %float_2097152 %5151
       %5153 = OpExtInst %float %1 Sin %5152
       %5154 = OpFMul %float %5153 %5072
       %5155 = OpCompositeConstruct %v3float %549 %549 %5154
       %5156 = OpFAdd %v3float %5136 %5155
       %5157 = OpFAdd %v3float %5077 %5156
       %5158 = OpFMul %float %3565 %float_4
       %5159 = OpFMul %float %3567 %5158
       %5160 = OpFDiv %float %float_2 %5159
       %5161 = OpFMul %float %3561 %5160
       %5162 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_2
       %5163 = OpLoad %float %5162
       %5164 = OpFMul %float %5160 %5163
       %5165 = OpFMul %float %5164 %3852
       %5166 = OpExtInst %float %1 Fma %3562 %5160 %5165
       %5167 = OpExtInst %float %1 Floor %5161
       %5168 = OpFNegate %float %5167
       %5169 = OpExtInst %float %1 Fma %3561 %5160 %5168
       %5170 = OpExtInst %float %1 Fma %5169 %float_2097152 %5166
       %5171 = OpExtInst %float %1 Floor %5170
       %5172 = OpFMul %float %5167 %float_n6_28318548
       %5173 = OpExtInst %float %1 Fma %5161 %float_6_28318548 %5172
       %5174 = OpFMul %float %5171 %float_n6_28318548
       %5175 = OpExtInst %float %1 Fma %5166 %float_6_28318548 %5174
       %5176 = OpExtInst %float %1 Fma %5173 %float_2097152 %5175
       %5177 = OpExtInst %float %1 Sin %5176
       %5178 = OpFMul %float %5177 %4912
       %5179 = OpFMul %float %5159 %4447
       %5180 = OpFDiv %float %float_2 %5179
       %5181 = OpFMul %float %4444 %5180
       %5182 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_3
       %5183 = OpLoad %float %5182
       %5184 = OpFMul %float %5180 %5183
       %5185 = OpFMul %float %5184 %3852
       %5186 = OpExtInst %float %1 Fma %4445 %5180 %5185
       %5187 = OpExtInst %float %1 Floor %5181
       %5188 = OpFNegate %float %5187
       %5189 = OpExtInst %float %1 Fma %4444 %5180 %5188
       %5190 = OpExtInst %float %1 Fma %5189 %float_2097152 %5186
       %5191 = OpExtInst %float %1 Floor %5190
       %5192 = OpFMul %float %5187 %float_n6_28318548
       %5193 = OpExtInst %float %1 Fma %5181 %float_6_28318548 %5192
       %5194 = OpFMul %float %5191 %float_n6_28318548
       %5195 = OpExtInst %float %1 Fma %5186 %float_6_28318548 %5194
       %5196 = OpExtInst %float %1 Fma %5193 %float_2097152 %5195
       %5197 = OpExtInst %float %1 Sin %5196
       %5198 = OpFMul %float %5197 %4933
       %5199 = OpCompositeConstruct %v3float %549 %549 %5178
       %5200 = OpCompositeConstruct %v3float %549 %549 %5198
       %5201 = OpFAdd %v3float %5199 %5200
       %5202 = OpFMul %float %5179 %4447
       %5203 = OpFDiv %float %float_2 %5202
       %5204 = OpFMul %float %4484 %5203
       %5205 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_0
       %5206 = OpLoad %float %5205
       %5207 = OpFMul %float %5203 %5206
       %5208 = OpFMul %float %5207 %3852
       %5209 = OpExtInst %float %1 Fma %4485 %5203 %5208
       %5210 = OpExtInst %float %1 Floor %5204
       %5211 = OpFNegate %float %5210
       %5212 = OpExtInst %float %1 Fma %4484 %5203 %5211
       %5213 = OpExtInst %float %1 Fma %5212 %float_2097152 %5209
       %5214 = OpExtInst %float %1 Floor %5213
       %5215 = OpFMul %float %5210 %float_n6_28318548
       %5216 = OpExtInst %float %1 Fma %5204 %float_6_28318548 %5215
       %5217 = OpFMul %float %5214 %float_n6_28318548
       %5218 = OpExtInst %float %1 Fma %5209 %float_6_28318548 %5217
       %5219 = OpExtInst %float %1 Fma %5216 %float_2097152 %5218
       %5220 = OpExtInst %float %1 Sin %5219
       %5221 = OpFMul %float %5220 %4957
       %5222 = OpCompositeConstruct %v3float %549 %549 %5221
       %5223 = OpFAdd %v3float %5201 %5222
       %5224 = OpFMul %float %5202 %4447
       %5225 = OpFDiv %float %float_2 %5224
       %5226 = OpFMul %float %4521 %5225
       %5227 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_1
       %5228 = OpLoad %float %5227
       %5229 = OpFMul %float %5225 %5228
       %5230 = OpFMul %float %5229 %3852
       %5231 = OpExtInst %float %1 Fma %4522 %5225 %5230
       %5232 = OpExtInst %float %1 Floor %5226
       %5233 = OpFNegate %float %5232
       %5234 = OpExtInst %float %1 Fma %4521 %5225 %5233
       %5235 = OpExtInst %float %1 Fma %5234 %float_2097152 %5231
       %5236 = OpExtInst %float %1 Floor %5235
       %5237 = OpFMul %float %5232 %float_n6_28318548
       %5238 = OpExtInst %float %1 Fma %5226 %float_6_28318548 %5237
       %5239 = OpFMul %float %5236 %float_n6_28318548
       %5240 = OpExtInst %float %1 Fma %5231 %float_6_28318548 %5239
       %5241 = OpExtInst %float %1 Fma %5238 %float_2097152 %5240
       %5242 = OpExtInst %float %1 Sin %5241
       %5243 = OpFMul %float %5242 %4980
       %5244 = OpCompositeConstruct %v3float %549 %549 %5243
       %5245 = OpFAdd %v3float %5223 %5244
       %5246 = OpFMul %float %5158 %4589
       %5247 = OpFMul %float %4592 %5246
       %5248 = OpFDiv %float %float_2 %5247
       %5249 = OpFMul %float %4586 %5248
       %5250 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_2
       %5251 = OpLoad %float %5250
       %5252 = OpFMul %float %5248 %5251
       %5253 = OpFMul %float %5252 %3852
       %5254 = OpExtInst %float %1 Fma %4587 %5248 %5253
       %5255 = OpExtInst %float %1 Floor %5249
       %5256 = OpFNegate %float %5255
       %5257 = OpExtInst %float %1 Fma %4586 %5248 %5256
       %5258 = OpExtInst %float %1 Fma %5257 %float_2097152 %5254
       %5259 = OpExtInst %float %1 Floor %5258
       %5260 = OpFMul %float %5255 %float_n6_28318548
       %5261 = OpExtInst %float %1 Fma %5249 %float_6_28318548 %5260
       %5262 = OpFMul %float %5259 %float_n6_28318548
       %5263 = OpExtInst %float %1 Fma %5254 %float_6_28318548 %5262
       %5264 = OpExtInst %float %1 Fma %5261 %float_2097152 %5263
       %5265 = OpExtInst %float %1 Sin %5264
       %5266 = OpFMul %float %5265 %5004
       %5267 = OpFMul %float %5247 %4447
       %5268 = OpFDiv %float %float_2 %5267
       %5269 = OpFMul %float %4626 %5268
       %5270 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_3
       %5271 = OpLoad %float %5270
       %5272 = OpFMul %float %5268 %5271
       %5273 = OpFMul %float %5272 %3852
       %5274 = OpExtInst %float %1 Fma %4627 %5268 %5273
       %5275 = OpExtInst %float %1 Floor %5269
       %5276 = OpFNegate %float %5275
       %5277 = OpExtInst %float %1 Fma %4626 %5268 %5276
       %5278 = OpExtInst %float %1 Fma %5277 %float_2097152 %5274
       %5279 = OpExtInst %float %1 Floor %5278
       %5280 = OpFMul %float %5275 %float_n6_28318548
       %5281 = OpExtInst %float %1 Fma %5269 %float_6_28318548 %5280
       %5282 = OpFMul %float %5279 %float_n6_28318548
       %5283 = OpExtInst %float %1 Fma %5274 %float_6_28318548 %5282
       %5284 = OpExtInst %float %1 Fma %5281 %float_2097152 %5283
       %5285 = OpExtInst %float %1 Sin %5284
       %5286 = OpFMul %float %5285 %5025
       %5287 = OpCompositeConstruct %v3float %549 %549 %5266
       %5288 = OpCompositeConstruct %v3float %549 %549 %5286
       %5289 = OpFAdd %v3float %5287 %5288
       %5290 = OpFMul %float %5267 %4447
       %5291 = OpFDiv %float %float_2 %5290
       %5292 = OpFMul %float %4664 %5291
       %5293 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_80 %int_0
       %5294 = OpLoad %float %5293
       %5295 = OpFMul %float %5291 %5294
       %5296 = OpFMul %float %5295 %3852
       %5297 = OpExtInst %float %1 Fma %4665 %5291 %5296
       %5298 = OpExtInst %float %1 Floor %5292
       %5299 = OpFNegate %float %5298
       %5300 = OpExtInst %float %1 Fma %4664 %5291 %5299
       %5301 = OpExtInst %float %1 Fma %5300 %float_2097152 %5297
       %5302 = OpExtInst %float %1 Floor %5301
       %5303 = OpFMul %float %5298 %float_n6_28318548
       %5304 = OpExtInst %float %1 Fma %5292 %float_6_28318548 %5303
       %5305 = OpFMul %float %5302 %float_n6_28318548
       %5306 = OpExtInst %float %1 Fma %5297 %float_6_28318548 %5305
       %5307 = OpExtInst %float %1 Fma %5304 %float_2097152 %5306
       %5308 = OpExtInst %float %1 Sin %5307
       %5309 = OpFMul %float %5308 %5049
       %5310 = OpCompositeConstruct %v3float %549 %549 %5309
       %5311 = OpFAdd %v3float %5289 %5310
       %5312 = OpFMul %float %5290 %4447
       %5313 = OpFDiv %float %float_2 %5312
       %5314 = OpFMul %float %4701 %5313
       %5315 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_80 %int_1
       %5316 = OpLoad %float %5315
       %5317 = OpFMul %float %5313 %5316
       %5318 = OpFMul %float %5317 %3852
       %5319 = OpExtInst %float %1 Fma %4702 %5313 %5318
       %5320 = OpExtInst %float %1 Floor %5314
       %5321 = OpFNegate %float %5320
       %5322 = OpExtInst %float %1 Fma %4701 %5313 %5321
       %5323 = OpExtInst %float %1 Fma %5322 %float_2097152 %5319
       %5324 = OpExtInst %float %1 Floor %5323
       %5325 = OpFMul %float %5320 %float_n6_28318548
       %5326 = OpExtInst %float %1 Fma %5314 %float_6_28318548 %5325
       %5327 = OpFMul %float %5324 %float_n6_28318548
       %5328 = OpExtInst %float %1 Fma %5319 %float_6_28318548 %5327
       %5329 = OpExtInst %float %1 Fma %5326 %float_2097152 %5328
       %5330 = OpExtInst %float %1 Sin %5329
       %5331 = OpFMul %float %5330 %5072
       %5332 = OpCompositeConstruct %v3float %549 %549 %5331
       %5333 = OpFAdd %v3float %5311 %5332
       %5334 = OpFAdd %v3float %5245 %5333
       %5335 = OpFMul %float %4770 %5246
       %5336 = OpFDiv %float %float_2 %5335
       %5337 = OpFMul %float %4767 %5336
       %5338 = OpFMul %float %5336 %5251
       %5339 = OpFMul %float %5338 %3852
       %5340 = OpExtInst %float %1 Fma %4768 %5336 %5339
       %5341 = OpExtInst %float %1 Floor %5337
       %5342 = OpFNegate %float %5341
       %5343 = OpExtInst %float %1 Fma %4767 %5336 %5342
       %5344 = OpExtInst %float %1 Fma %5343 %float_2097152 %5340
       %5345 = OpExtInst %float %1 Floor %5344
       %5346 = OpFMul %float %5341 %float_n6_28318548
       %5347 = OpExtInst %float %1 Fma %5337 %float_6_28318548 %5346
       %5348 = OpFMul %float %5345 %float_n6_28318548
       %5349 = OpExtInst %float %1 Fma %5340 %float_6_28318548 %5348
       %5350 = OpExtInst %float %1 Fma %5347 %float_2097152 %5349
       %5351 = OpExtInst %float %1 Sin %5350
       %5352 = OpFMul %float %5351 %5004
       %5353 = OpFMul %float %5335 %4447
       %5354 = OpFDiv %float %float_2 %5353
       %5355 = OpFMul %float %4801 %5354
       %5356 = OpFMul %float %5354 %5271
       %5357 = OpFMul %float %5356 %3852
       %5358 = OpExtInst %float %1 Fma %4802 %5354 %5357
       %5359 = OpExtInst %float %1 Floor %5355
       %5360 = OpFNegate %float %5359
       %5361 = OpExtInst %float %1 Fma %4801 %5354 %5360
       %5362 = OpExtInst %float %1 Fma %5361 %float_2097152 %5358
       %5363 = OpExtInst %float %1 Floor %5362
       %5364 = OpFMul %float %5359 %float_n6_28318548
       %5365 = OpExtInst %float %1 Fma %5355 %float_6_28318548 %5364
       %5366 = OpFMul %float %5363 %float_n6_28318548
       %5367 = OpExtInst %float %1 Fma %5358 %float_6_28318548 %5366
       %5368 = OpExtInst %float %1 Fma %5365 %float_2097152 %5367
       %5369 = OpExtInst %float %1 Sin %5368
       %5370 = OpFMul %float %5369 %5025
       %5371 = OpCompositeConstruct %v3float %549 %549 %5352
       %5372 = OpCompositeConstruct %v3float %549 %549 %5370
       %5373 = OpFAdd %v3float %5371 %5372
       %5374 = OpFMul %float %5353 %4447
       %5375 = OpFDiv %float %float_2 %5374
       %5376 = OpFMul %float %4836 %5375
       %5377 = OpFMul %float %5375 %5294
       %5378 = OpFMul %float %5377 %3852
       %5379 = OpExtInst %float %1 Fma %4837 %5375 %5378
       %5380 = OpExtInst %float %1 Floor %5376
       %5381 = OpFNegate %float %5380
       %5382 = OpExtInst %float %1 Fma %4836 %5375 %5381
       %5383 = OpExtInst %float %1 Fma %5382 %float_2097152 %5379
       %5384 = OpExtInst %float %1 Floor %5383
       %5385 = OpFMul %float %5380 %float_n6_28318548
       %5386 = OpExtInst %float %1 Fma %5376 %float_6_28318548 %5385
       %5387 = OpFMul %float %5384 %float_n6_28318548
       %5388 = OpExtInst %float %1 Fma %5379 %float_6_28318548 %5387
       %5389 = OpExtInst %float %1 Fma %5386 %float_2097152 %5388
       %5390 = OpExtInst %float %1 Sin %5389
       %5391 = OpFMul %float %5390 %5049
       %5392 = OpCompositeConstruct %v3float %549 %549 %5391
       %5393 = OpFAdd %v3float %5373 %5392
       %5394 = OpFMul %float %5374 %4447
       %5395 = OpFDiv %float %float_2 %5394
       %5396 = OpFMul %float %4870 %5395
       %5397 = OpFMul %float %5395 %5316
       %5398 = OpFMul %float %5397 %3852
       %5399 = OpExtInst %float %1 Fma %4871 %5395 %5398
       %5400 = OpExtInst %float %1 Floor %5396
       %5401 = OpFNegate %float %5400
       %5402 = OpExtInst %float %1 Fma %4870 %5395 %5401
       %5403 = OpExtInst %float %1 Fma %5402 %float_2097152 %5399
       %5404 = OpExtInst %float %1 Floor %5403
       %5405 = OpFMul %float %5400 %float_n6_28318548
       %5406 = OpExtInst %float %1 Fma %5396 %float_6_28318548 %5405
       %5407 = OpFMul %float %5404 %float_n6_28318548
       %5408 = OpExtInst %float %1 Fma %5399 %float_6_28318548 %5407
       %5409 = OpExtInst %float %1 Fma %5406 %float_2097152 %5408
       %5410 = OpExtInst %float %1 Sin %5409
       %5411 = OpFMul %float %5410 %5072
       %5412 = OpCompositeConstruct %v3float %549 %549 %5411
       %5413 = OpFAdd %v3float %5393 %5412
       %5414 = OpFAdd %v3float %5334 %5413
       %5415 = OpFMul %float %3565 %float_0_75
       %5416 = OpFMul %float %3567 %5415
       %5417 = OpFDiv %float %float_2 %5416
       %5418 = OpFMul %float %3561 %5417
       %5419 = OpFMul %float %5417 %4898
       %5420 = OpFMul %float %5419 %3852
       %5421 = OpExtInst %float %1 Fma %3562 %5417 %5420
       %5422 = OpExtInst %float %1 Floor %5418
       %5423 = OpFNegate %float %5422
       %5424 = OpExtInst %float %1 Fma %3561 %5417 %5423
       %5425 = OpExtInst %float %1 Fma %5424 %float_2097152 %5421
       %5426 = OpExtInst %float %1 Floor %5425
       %5427 = OpFMul %float %5422 %float_n6_28318548
       %5428 = OpExtInst %float %1 Fma %5418 %float_6_28318548 %5427
       %5429 = OpFMul %float %5426 %float_n6_28318548
       %5430 = OpExtInst %float %1 Fma %5421 %float_6_28318548 %5429
       %5431 = OpExtInst %float %1 Fma %5428 %float_2097152 %5430
       %5432 = OpFMul %float %4429 %float_0_5
       %5433 = OpExtInst %float %1 Sin %5431
       %5434 = OpFMul %float %5433 %5432
       %5435 = OpFMul %float %5416 %4447
       %5436 = OpFDiv %float %float_2 %5435
       %5437 = OpFMul %float %4444 %5436
       %5438 = OpFMul %float %5436 %4919
       %5439 = OpFMul %float %5438 %3852
       %5440 = OpExtInst %float %1 Fma %4445 %5436 %5439
       %5441 = OpExtInst %float %1 Floor %5437
       %5442 = OpFNegate %float %5441
       %5443 = OpExtInst %float %1 Fma %4444 %5436 %5442
       %5444 = OpExtInst %float %1 Fma %5443 %float_2097152 %5440
       %5445 = OpExtInst %float %1 Floor %5444
       %5446 = OpFMul %float %5441 %float_n6_28318548
       %5447 = OpExtInst %float %1 Fma %5437 %float_6_28318548 %5446
       %5448 = OpFMul %float %5445 %float_n6_28318548
       %5449 = OpExtInst %float %1 Fma %5440 %float_6_28318548 %5448
       %5450 = OpExtInst %float %1 Fma %5447 %float_2097152 %5449
       %5451 = OpFMul %float %5432 %2593
       %5452 = OpExtInst %float %1 Sin %5450
       %5453 = OpFMul %float %5452 %5451
       %5454 = OpCompositeConstruct %v3float %549 %549 %5434
       %5455 = OpCompositeConstruct %v3float %549 %549 %5453
       %5456 = OpFAdd %v3float %5454 %5455
       %5457 = OpFMul %float %5435 %4447
       %5458 = OpFDiv %float %float_2 %5457
       %5459 = OpFMul %float %4484 %5458
       %5460 = OpFMul %float %5458 %4943
       %5461 = OpFMul %float %5460 %3852
       %5462 = OpExtInst %float %1 Fma %4485 %5458 %5461
       %5463 = OpExtInst %float %1 Floor %5459
       %5464 = OpFNegate %float %5463
       %5465 = OpExtInst %float %1 Fma %4484 %5458 %5464
       %5466 = OpExtInst %float %1 Fma %5465 %float_2097152 %5462
       %5467 = OpExtInst %float %1 Floor %5466
       %5468 = OpFMul %float %5463 %float_n6_28318548
       %5469 = OpExtInst %float %1 Fma %5459 %float_6_28318548 %5468
       %5470 = OpFMul %float %5467 %float_n6_28318548
       %5471 = OpExtInst %float %1 Fma %5462 %float_6_28318548 %5470
       %5472 = OpExtInst %float %1 Fma %5469 %float_2097152 %5471
       %5473 = OpFMul %float %5451 %2593
       %5474 = OpExtInst %float %1 Sin %5472
       %5475 = OpFMul %float %5474 %5473
       %5476 = OpCompositeConstruct %v3float %549 %549 %5475
       %5477 = OpFAdd %v3float %5456 %5476
       %5478 = OpFMul %float %5457 %4447
       %5479 = OpFDiv %float %float_2 %5478
       %5480 = OpFMul %float %4521 %5479
       %5481 = OpFMul %float %5479 %4966
       %5482 = OpFMul %float %5481 %3852
       %5483 = OpExtInst %float %1 Fma %4522 %5479 %5482
       %5484 = OpExtInst %float %1 Floor %5480
       %5485 = OpFNegate %float %5484
       %5486 = OpExtInst %float %1 Fma %4521 %5479 %5485
       %5487 = OpExtInst %float %1 Fma %5486 %float_2097152 %5483
       %5488 = OpExtInst %float %1 Floor %5487
       %5489 = OpFMul %float %5484 %float_n6_28318548
       %5490 = OpExtInst %float %1 Fma %5480 %float_6_28318548 %5489
       %5491 = OpFMul %float %5488 %float_n6_28318548
       %5492 = OpExtInst %float %1 Fma %5483 %float_6_28318548 %5491
       %5493 = OpExtInst %float %1 Fma %5490 %float_2097152 %5492
       %5494 = OpFMul %float %5473 %2593
       %5495 = OpExtInst %float %1 Sin %5493
       %5496 = OpFMul %float %5495 %5494
       %5497 = OpCompositeConstruct %v3float %549 %549 %5496
       %5498 = OpFAdd %v3float %5477 %5497
       %5499 = OpFMul %float %5415 %4589
       %5500 = OpFMul %float %4592 %5499
       %5501 = OpFDiv %float %float_2 %5500
       %5502 = OpFMul %float %4586 %5501
       %5503 = OpFMul %float %5501 %4990
       %5504 = OpFMul %float %5503 %3852
       %5505 = OpExtInst %float %1 Fma %4587 %5501 %5504
       %5506 = OpExtInst %float %1 Floor %5502
       %5507 = OpFNegate %float %5506
       %5508 = OpExtInst %float %1 Fma %4586 %5501 %5507
       %5509 = OpExtInst %float %1 Fma %5508 %float_2097152 %5505
       %5510 = OpExtInst %float %1 Floor %5509
       %5511 = OpFMul %float %5506 %float_n6_28318548
       %5512 = OpExtInst %float %1 Fma %5502 %float_6_28318548 %5511
       %5513 = OpFMul %float %5510 %float_n6_28318548
       %5514 = OpExtInst %float %1 Fma %5505 %float_6_28318548 %5513
       %5515 = OpExtInst %float %1 Fma %5512 %float_2097152 %5514
       %5516 = OpFMul %float %5432 %2732
       %5517 = OpExtInst %float %1 Sin %5515
       %5518 = OpFMul %float %5517 %5516
       %5519 = OpFMul %float %5500 %4447
       %5520 = OpFDiv %float %float_2 %5519
       %5521 = OpFMul %float %4626 %5520
       %5522 = OpFMul %float %5520 %5011
       %5523 = OpFMul %float %5522 %3852
       %5524 = OpExtInst %float %1 Fma %4627 %5520 %5523
       %5525 = OpExtInst %float %1 Floor %5521
       %5526 = OpFNegate %float %5525
       %5527 = OpExtInst %float %1 Fma %4626 %5520 %5526
       %5528 = OpExtInst %float %1 Fma %5527 %float_2097152 %5524
       %5529 = OpExtInst %float %1 Floor %5528
       %5530 = OpFMul %float %5525 %float_n6_28318548
       %5531 = OpExtInst %float %1 Fma %5521 %float_6_28318548 %5530
       %5532 = OpFMul %float %5529 %float_n6_28318548
       %5533 = OpExtInst %float %1 Fma %5524 %float_6_28318548 %5532
       %5534 = OpExtInst %float %1 Fma %5531 %float_2097152 %5533
       %5535 = OpFMul %float %5516 %2593
       %5536 = OpExtInst %float %1 Sin %5534
       %5537 = OpFMul %float %5536 %5535
       %5538 = OpCompositeConstruct %v3float %549 %549 %5518
       %5539 = OpCompositeConstruct %v3float %549 %549 %5537
       %5540 = OpFAdd %v3float %5538 %5539
       %5541 = OpFMul %float %5519 %4447
       %5542 = OpFDiv %float %float_2 %5541
       %5543 = OpFMul %float %4664 %5542
       %5544 = OpFMul %float %5542 %5035
       %5545 = OpFMul %float %5544 %3852
       %5546 = OpExtInst %float %1 Fma %4665 %5542 %5545
       %5547 = OpExtInst %float %1 Floor %5543
       %5548 = OpFNegate %float %5547
       %5549 = OpExtInst %float %1 Fma %4664 %5542 %5548
       %5550 = OpExtInst %float %1 Fma %5549 %float_2097152 %5546
       %5551 = OpExtInst %float %1 Floor %5550
       %5552 = OpFMul %float %5547 %float_n6_28318548
       %5553 = OpExtInst %float %1 Fma %5543 %float_6_28318548 %5552
       %5554 = OpFMul %float %5551 %float_n6_28318548
       %5555 = OpExtInst %float %1 Fma %5546 %float_6_28318548 %5554
       %5556 = OpExtInst %float %1 Fma %5553 %float_2097152 %5555
       %5557 = OpFMul %float %5535 %2593
       %5558 = OpExtInst %float %1 Sin %5556
       %5559 = OpFMul %float %5558 %5557
       %5560 = OpCompositeConstruct %v3float %549 %549 %5559
       %5561 = OpFAdd %v3float %5540 %5560
       %5562 = OpFMul %float %5541 %4447
       %5563 = OpFDiv %float %float_2 %5562
       %5564 = OpFMul %float %4701 %5563
       %5565 = OpFMul %float %5563 %5058
       %5566 = OpFMul %float %5565 %3852
       %5567 = OpExtInst %float %1 Fma %4702 %5563 %5566
       %5568 = OpExtInst %float %1 Floor %5564
       %5569 = OpFNegate %float %5568
       %5570 = OpExtInst %float %1 Fma %4701 %5563 %5569
       %5571 = OpExtInst %float %1 Fma %5570 %float_2097152 %5567
       %5572 = OpExtInst %float %1 Floor %5571
       %5573 = OpFMul %float %5568 %float_n6_28318548
       %5574 = OpExtInst %float %1 Fma %5564 %float_6_28318548 %5573
       %5575 = OpFMul %float %5572 %float_n6_28318548
       %5576 = OpExtInst %float %1 Fma %5567 %float_6_28318548 %5575
       %5577 = OpExtInst %float %1 Fma %5574 %float_2097152 %5576
       %5578 = OpFMul %float %5557 %2593
       %5579 = OpExtInst %float %1 Sin %5577
       %5580 = OpFMul %float %5579 %5578
       %5581 = OpCompositeConstruct %v3float %549 %549 %5580
       %5582 = OpFAdd %v3float %5561 %5581
       %5583 = OpFAdd %v3float %5498 %5582
       %5584 = OpFMul %float %4770 %5499
       %5585 = OpFDiv %float %float_2 %5584
       %5586 = OpFMul %float %4767 %5585
       %5587 = OpFMul %float %5585 %4990
       %5588 = OpFMul %float %5587 %3852
       %5589 = OpExtInst %float %1 Fma %4768 %5585 %5588
       %5590 = OpExtInst %float %1 Floor %5586
       %5591 = OpFNegate %float %5590
       %5592 = OpExtInst %float %1 Fma %4767 %5585 %5591
       %5593 = OpExtInst %float %1 Fma %5592 %float_2097152 %5589
       %5594 = OpExtInst %float %1 Floor %5593
       %5595 = OpFMul %float %5590 %float_n6_28318548
       %5596 = OpExtInst %float %1 Fma %5586 %float_6_28318548 %5595
       %5597 = OpFMul %float %5594 %float_n6_28318548
       %5598 = OpExtInst %float %1 Fma %5589 %float_6_28318548 %5597
       %5599 = OpExtInst %float %1 Fma %5596 %float_2097152 %5598
       %5600 = OpExtInst %float %1 Sin %5599
       %5601 = OpFMul %float %5600 %5516
       %5602 = OpFMul %float %5584 %4447
       %5603 = OpFDiv %float %float_2 %5602
       %5604 = OpFMul %float %4801 %5603
       %5605 = OpFMul %float %5603 %5011
       %5606 = OpFMul %float %5605 %3852
       %5607 = OpExtInst %float %1 Fma %4802 %5603 %5606
       %5608 = OpExtInst %float %1 Floor %5604
       %5609 = OpFNegate %float %5608
       %5610 = OpExtInst %float %1 Fma %4801 %5603 %5609
       %5611 = OpExtInst %float %1 Fma %5610 %float_2097152 %5607
       %5612 = OpExtInst %float %1 Floor %5611
       %5613 = OpFMul %float %5608 %float_n6_28318548
       %5614 = OpExtInst %float %1 Fma %5604 %float_6_28318548 %5613
       %5615 = OpFMul %float %5612 %float_n6_28318548
       %5616 = OpExtInst %float %1 Fma %5607 %float_6_28318548 %5615
       %5617 = OpExtInst %float %1 Fma %5614 %float_2097152 %5616
       %5618 = OpExtInst %float %1 Sin %5617
       %5619 = OpFMul %float %5618 %5535
       %5620 = OpCompositeConstruct %v3float %549 %549 %5601
       %5621 = OpCompositeConstruct %v3float %549 %549 %5619
       %5622 = OpFAdd %v3float %5620 %5621
       %5623 = OpFMul %float %5602 %4447
       %5624 = OpFDiv %float %float_2 %5623
       %5625 = OpFMul %float %4836 %5624
       %5626 = OpFMul %float %5624 %5035
       %5627 = OpFMul %float %5626 %3852
       %5628 = OpExtInst %float %1 Fma %4837 %5624 %5627
       %5629 = OpExtInst %float %1 Floor %5625
       %5630 = OpFNegate %float %5629
       %5631 = OpExtInst %float %1 Fma %4836 %5624 %5630
       %5632 = OpExtInst %float %1 Fma %5631 %float_2097152 %5628
       %5633 = OpExtInst %float %1 Floor %5632
       %5634 = OpFMul %float %5629 %float_n6_28318548
       %5635 = OpExtInst %float %1 Fma %5625 %float_6_28318548 %5634
       %5636 = OpFMul %float %5633 %float_n6_28318548
       %5637 = OpExtInst %float %1 Fma %5628 %float_6_28318548 %5636
       %5638 = OpExtInst %float %1 Fma %5635 %float_2097152 %5637
       %5639 = OpExtInst %float %1 Sin %5638
       %5640 = OpFMul %float %5639 %5557
       %5641 = OpCompositeConstruct %v3float %549 %549 %5640
       %5642 = OpFAdd %v3float %5622 %5641
       %5643 = OpFMul %float %5623 %4447
       %5644 = OpFDiv %float %float_2 %5643
       %5645 = OpFMul %float %4870 %5644
       %5646 = OpFMul %float %5644 %5058
       %5647 = OpFMul %float %5646 %3852
       %5648 = OpExtInst %float %1 Fma %4871 %5644 %5647
       %5649 = OpExtInst %float %1 Floor %5645
       %5650 = OpFNegate %float %5649
       %5651 = OpExtInst %float %1 Fma %4870 %5644 %5650
       %5652 = OpExtInst %float %1 Fma %5651 %float_2097152 %5648
       %5653 = OpExtInst %float %1 Floor %5652
       %5654 = OpFMul %float %5649 %float_n6_28318548
       %5655 = OpExtInst %float %1 Fma %5645 %float_6_28318548 %5654
       %5656 = OpFMul %float %5653 %float_n6_28318548
       %5657 = OpExtInst %float %1 Fma %5648 %float_6_28318548 %5656
       %5658 = OpExtInst %float %1 Fma %5655 %float_2097152 %5657
       %5659 = OpExtInst %float %1 Sin %5658
       %5660 = OpFMul %float %5659 %5578
       %5661 = OpCompositeConstruct %v3float %549 %549 %5660
       %5662 = OpFAdd %v3float %5642 %5661
       %5663 = OpFAdd %v3float %5583 %5662
       %5664 = OpFAdd %v3float %5414 %5663
       %5665 = OpFAdd %v3float %5157 %5664
       %5666 = OpFAdd %v3float %4892 %5665
       %5667 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_80 %int_2
       %5668 = OpLoad %float %5667
       %5669 = OpFSub %float %5668 %float_n1
       %5670 = OpExtInst %float %1 FAbs %5669
       %5671 = OpFOrdGreaterThan %bool %5670 %float_9_99999975en06
       %5672 = OpFOrdGreaterThanEqual %bool %5668 %float_n1
       %5673 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_80 %int_3
       %5674 = OpLoad %float %5673
       %5675 = OpSelect %float %5672 %5668 %5674
       %5676 = OpSelect %float %5671 %5675 %5668
       %5677 = OpFSub %float %5676 %float_1
       %5678 = OpExtInst %float %1 FAbs %5677
       %5679 = OpFOrdGreaterThan %bool %5678 %float_9_99999975en06
       %5680 = OpFOrdGreaterThanEqual %bool %5676 %float_1
       %5681 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_81 %int_0
       %5682 = OpLoad %float %5681
       %5683 = OpSelect %float %5680 %5682 %5668
       %5684 = OpSelect %float %5679 %5683 %5668
       %5685 = OpExtInst %float %1 FAbs %5684
       %5686 = OpFOrdGreaterThan %bool %5685 %float_9_99999975en06
       %5687 = OpFOrdGreaterThanEqual %bool %5684 %float_0
       %5688 = OpSelect %float %5687 %float_1 %float_n1
       %5689 = OpSelect %float %5686 %5688 %float_1
       %5690 = OpExtInst %float %1 NMax %5689 %float_n1
       %5691 = OpExtInst %float %1 NMin %5690 %float_1
       %5692 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_82 %int_1
       %5693 = OpLoad %float %5692
       %5694 = OpCompositeConstruct %v3float %5691 %5693 %float_0
       %5695 = OpFAdd %v3float %5694 %1687
       %5696 = OpExtInst %v3float %1 NMax %5695 %278
       %5697 = OpExtInst %v3float %1 NMin %5696 %127
       %5698 = OpCompositeExtract %float %5697 0
       %5699 = OpCompositeExtract %float %5697 1
       %5700 = OpCompositeConstruct %v2float %5698 %5699
       %5701 = OpFMul %v2float %1695 %5700
       %5702 = OpFMul %v2float %5700 %1696
       %5703 = OpCompositeExtract %float %5701 0
       %5704 = OpCompositeExtract %float %5702 0
       %5705 = OpCompositeExtract %float %5701 1
       %5706 = OpCompositeExtract %float %5702 1
       %5707 = OpFAdd %float %5703 %5705
       %5708 = OpFAdd %float %5704 %5706
       %5709 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_83 %int_2
       %5710 = OpLoad %float %5709
       %5711 = OpFMul %float %5710 %3565
       %5712 = OpFDiv %float %float_2 %5711
       %5713 = OpFMul %float %5707 %5712
       %5714 = OpFMul %float %5712 %3572
       %5715 = OpFAdd %v3float %641 %288
       %5716 = OpFMul %v3float %592 %3585
       %5717 = OpFMul %v3float %5715 %3585
       %5718 = OpFMul %v3float %5716 %3576
       %5719 = OpFMul %v3float %3576 %5717
       %5720 = OpFMul %v3float %5719 %3581
       %5721 = OpCompositeExtract %float %5720 0
       %5722 = OpCompositeExtract %float %5720 1
       %5723 = OpCompositeExtract %float %5720 2
       %5724 = OpCompositeConstruct %v2float %5723 %5723
       %5725 = OpFAdd %v2float %3593 %5724
       %5726 = OpCompositeExtract %float %5725 0
       %5727 = OpCompositeConstruct %v3float %5721 %5722 %5726
       %5728 = OpVectorTimesScalar %v3float %5727 %float_4_76837158en07
       %5729 = OpFAdd %v3float %5728 %137
       %5730 = OpExtInst %v3float %1 Fma %5718 %3581 %5729
       %5731 = OpExtInst %v3float %1 Floor %5730
       %5732 = OpFNegate %v3float %5731
       %5733 = OpExtInst %v3float %1 Fma %5718 %3581 %5732
       %5734 = OpVectorTimesScalar %v3float %5733 %float_2097152
       %5735 = OpFAdd %v3float %5734 %5727
       %5736 = OpVectorTimesScalar %v3float %5735 %float_1
               OpBranch %5737
       %5737 = OpLabel
       %5738 = OpPhi %v3float %5736 %4190 %5739 %5740
       %5741 = OpPhi %float %float_1 %4190 %5742 %5740
       %5743 = OpPhi %float %float_0 %4190 %5744 %5740
       %5745 = OpPhi %uint %uint_0 %4190 %5746 %5740
       %5747 = OpULessThan %bool %5745 %uint_6
               OpLoopMerge %5748 %5740 DontUnroll
               OpBranchConditional %5747 %5740 %5748
       %5740 = OpLabel
       %5749 = OpExtInst %v3float %1 Fract %5738
       %5750 = OpExtInst %v3float %1 Floor %5738
       %5751 = OpDot %float %5750 %385
       %5752 = OpFAdd %float %5751 %float_19
       %5753 = OpFAdd %float %5751 %float_47
       %5754 = OpFAdd %float %5751 %float_66
       %5755 = OpFAdd %float %5751 %float_101
       %5756 = OpFAdd %float %5751 %float_120
       %5757 = OpFAdd %float %5751 %float_148
       %5758 = OpFAdd %float %5751 %float_167
       %5759 = OpConvertFToS %int %5751
       %5760 = OpCompositeConstruct %v3int %5759 %int_0 %int_0
       %5761 = OpBitcast %v3uint %5760
       %5762 = OpIMul %v3uint %5761 %401
       %5763 = OpIAdd %v3uint %5762 %403
       %5764 = OpCompositeExtract %uint %5763 1
       %5765 = OpCompositeExtract %uint %5763 2
       %5766 = OpIMul %uint %5764 %5765
       %5767 = OpCompositeExtract %uint %5763 0
       %5768 = OpIAdd %uint %5767 %5766
       %5769 = OpIMul %uint %5765 %5768
       %5770 = OpIAdd %uint %5764 %5769
       %5771 = OpIMul %uint %5768 %5770
       %5772 = OpIAdd %uint %5765 %5771
       %5773 = OpIMul %uint %5770 %5772
       %5774 = OpIAdd %uint %5768 %5773
       %5775 = OpCompositeInsert %v3uint %5774 %550 0
       %5776 = OpBitwiseAnd %v3uint %404 %405
       %5777 = OpShiftRightLogical %v3uint %5775 %5776
       %5778 = OpCompositeExtract %uint %5777 0
       %5779 = OpCompositeConstruct %v3uint %5778 %5778 %5778
       %5780 = OpBitwiseAnd %v3uint %5779 %386
       %5781 = OpConvertUToF %v3float %5780
       %5782 = OpExtInst %v3float %1 Fma %5781 %390 %278
       %5783 = OpDot %float %5782 %5749
       %5784 = OpConvertFToS %int %5752
       %5785 = OpFSub %v3float %5749 %350
       %5786 = OpCompositeConstruct %v3int %5784 %int_0 %int_0
       %5787 = OpBitcast %v3uint %5786
       %5788 = OpIMul %v3uint %5787 %401
       %5789 = OpIAdd %v3uint %5788 %403
       %5790 = OpCompositeExtract %uint %5789 1
       %5791 = OpCompositeExtract %uint %5789 2
       %5792 = OpIMul %uint %5790 %5791
       %5793 = OpCompositeExtract %uint %5789 0
       %5794 = OpIAdd %uint %5793 %5792
       %5795 = OpIMul %uint %5791 %5794
       %5796 = OpIAdd %uint %5790 %5795
       %5797 = OpIMul %uint %5794 %5796
       %5798 = OpIAdd %uint %5791 %5797
       %5799 = OpIMul %uint %5796 %5798
       %5800 = OpIAdd %uint %5794 %5799
       %5801 = OpCompositeInsert %v3uint %5800 %550 0
       %5802 = OpShiftRightLogical %v3uint %5801 %5776
       %5803 = OpCompositeExtract %uint %5802 0
       %5804 = OpCompositeConstruct %v3uint %5803 %5803 %5803
       %5805 = OpBitwiseAnd %v3uint %5804 %386
       %5806 = OpConvertUToF %v3float %5805
       %5807 = OpExtInst %v3float %1 Fma %5806 %390 %278
       %5808 = OpDot %float %5807 %5785
       %5809 = OpConvertFToS %int %5753
       %5810 = OpFSub %v3float %5749 %351
       %5811 = OpCompositeConstruct %v3int %5809 %int_0 %int_0
       %5812 = OpBitcast %v3uint %5811
       %5813 = OpIMul %v3uint %5812 %401
       %5814 = OpIAdd %v3uint %5813 %403
       %5815 = OpCompositeExtract %uint %5814 1
       %5816 = OpCompositeExtract %uint %5814 2
       %5817 = OpIMul %uint %5815 %5816
       %5818 = OpCompositeExtract %uint %5814 0
       %5819 = OpIAdd %uint %5818 %5817
       %5820 = OpIMul %uint %5816 %5819
       %5821 = OpIAdd %uint %5815 %5820
       %5822 = OpIMul %uint %5819 %5821
       %5823 = OpIAdd %uint %5816 %5822
       %5824 = OpIMul %uint %5821 %5823
       %5825 = OpIAdd %uint %5819 %5824
       %5826 = OpCompositeInsert %v3uint %5825 %550 0
       %5827 = OpShiftRightLogical %v3uint %5826 %5776
       %5828 = OpCompositeExtract %uint %5827 0
       %5829 = OpCompositeConstruct %v3uint %5828 %5828 %5828
       %5830 = OpBitwiseAnd %v3uint %5829 %386
       %5831 = OpConvertUToF %v3float %5830
       %5832 = OpExtInst %v3float %1 Fma %5831 %390 %278
       %5833 = OpDot %float %5832 %5810
       %5834 = OpConvertFToS %int %5754
       %5835 = OpFSub %v3float %5749 %134
       %5836 = OpCompositeConstruct %v3int %5834 %int_0 %int_0
       %5837 = OpBitcast %v3uint %5836
       %5838 = OpIMul %v3uint %5837 %401
       %5839 = OpIAdd %v3uint %5838 %403
       %5840 = OpCompositeExtract %uint %5839 1
       %5841 = OpCompositeExtract %uint %5839 2
       %5842 = OpIMul %uint %5840 %5841
       %5843 = OpCompositeExtract %uint %5839 0
       %5844 = OpIAdd %uint %5843 %5842
       %5845 = OpIMul %uint %5841 %5844
       %5846 = OpIAdd %uint %5840 %5845
       %5847 = OpIMul %uint %5844 %5846
       %5848 = OpIAdd %uint %5841 %5847
       %5849 = OpIMul %uint %5846 %5848
       %5850 = OpIAdd %uint %5844 %5849
       %5851 = OpCompositeInsert %v3uint %5850 %550 0
       %5852 = OpShiftRightLogical %v3uint %5851 %5776
       %5853 = OpCompositeExtract %uint %5852 0
       %5854 = OpCompositeConstruct %v3uint %5853 %5853 %5853
       %5855 = OpBitwiseAnd %v3uint %5854 %386
       %5856 = OpConvertUToF %v3float %5855
       %5857 = OpExtInst %v3float %1 Fma %5856 %390 %278
       %5858 = OpDot %float %5857 %5835
       %5859 = OpConvertFToS %int %5755
       %5860 = OpFSub %v3float %5749 %290
       %5861 = OpCompositeConstruct %v3int %5859 %int_0 %int_0
       %5862 = OpBitcast %v3uint %5861
       %5863 = OpIMul %v3uint %5862 %401
       %5864 = OpIAdd %v3uint %5863 %403
       %5865 = OpCompositeExtract %uint %5864 1
       %5866 = OpCompositeExtract %uint %5864 2
       %5867 = OpIMul %uint %5865 %5866
       %5868 = OpCompositeExtract %uint %5864 0
       %5869 = OpIAdd %uint %5868 %5867
       %5870 = OpIMul %uint %5866 %5869
       %5871 = OpIAdd %uint %5865 %5870
       %5872 = OpIMul %uint %5869 %5871
       %5873 = OpIAdd %uint %5866 %5872
       %5874 = OpIMul %uint %5871 %5873
       %5875 = OpIAdd %uint %5869 %5874
       %5876 = OpCompositeInsert %v3uint %5875 %550 0
       %5877 = OpShiftRightLogical %v3uint %5876 %5776
       %5878 = OpCompositeExtract %uint %5877 0
       %5879 = OpCompositeConstruct %v3uint %5878 %5878 %5878
       %5880 = OpBitwiseAnd %v3uint %5879 %386
       %5881 = OpConvertUToF %v3float %5880
       %5882 = OpExtInst %v3float %1 Fma %5881 %390 %278
       %5883 = OpDot %float %5882 %5860
       %5884 = OpConvertFToS %int %5756
       %5885 = OpFSub %v3float %5749 %139
       %5886 = OpCompositeConstruct %v3int %5884 %int_0 %int_0
       %5887 = OpBitcast %v3uint %5886
       %5888 = OpIMul %v3uint %5887 %401
       %5889 = OpIAdd %v3uint %5888 %403
       %5890 = OpCompositeExtract %uint %5889 1
       %5891 = OpCompositeExtract %uint %5889 2
       %5892 = OpIMul %uint %5890 %5891
       %5893 = OpCompositeExtract %uint %5889 0
       %5894 = OpIAdd %uint %5893 %5892
       %5895 = OpIMul %uint %5891 %5894
       %5896 = OpIAdd %uint %5890 %5895
       %5897 = OpIMul %uint %5894 %5896
       %5898 = OpIAdd %uint %5891 %5897
       %5899 = OpIMul %uint %5896 %5898
       %5900 = OpIAdd %uint %5894 %5899
       %5901 = OpCompositeInsert %v3uint %5900 %550 0
       %5902 = OpShiftRightLogical %v3uint %5901 %5776
       %5903 = OpCompositeExtract %uint %5902 0
       %5904 = OpCompositeConstruct %v3uint %5903 %5903 %5903
       %5905 = OpBitwiseAnd %v3uint %5904 %386
       %5906 = OpConvertUToF %v3float %5905
       %5907 = OpExtInst %v3float %1 Fma %5906 %390 %278
       %5908 = OpDot %float %5907 %5885
       %5909 = OpConvertFToS %int %5757
       %5910 = OpFSub %v3float %5749 %135
       %5911 = OpCompositeConstruct %v3int %5909 %int_0 %int_0
       %5912 = OpBitcast %v3uint %5911
       %5913 = OpIMul %v3uint %5912 %401
       %5914 = OpIAdd %v3uint %5913 %403
       %5915 = OpCompositeExtract %uint %5914 1
       %5916 = OpCompositeExtract %uint %5914 2
       %5917 = OpIMul %uint %5915 %5916
       %5918 = OpCompositeExtract %uint %5914 0
       %5919 = OpIAdd %uint %5918 %5917
       %5920 = OpIMul %uint %5916 %5919
       %5921 = OpIAdd %uint %5915 %5920
       %5922 = OpIMul %uint %5919 %5921
       %5923 = OpIAdd %uint %5916 %5922
       %5924 = OpIMul %uint %5921 %5923
       %5925 = OpIAdd %uint %5919 %5924
       %5926 = OpCompositeInsert %v3uint %5925 %550 0
       %5927 = OpShiftRightLogical %v3uint %5926 %5776
       %5928 = OpCompositeExtract %uint %5927 0
       %5929 = OpCompositeConstruct %v3uint %5928 %5928 %5928
       %5930 = OpBitwiseAnd %v3uint %5929 %386
       %5931 = OpConvertUToF %v3float %5930
       %5932 = OpExtInst %v3float %1 Fma %5931 %390 %278
       %5933 = OpDot %float %5932 %5910
       %5934 = OpConvertFToS %int %5758
       %5935 = OpFSub %v3float %5749 %127
       %5936 = OpCompositeConstruct %v3int %5934 %int_0 %int_0
       %5937 = OpBitcast %v3uint %5936
       %5938 = OpIMul %v3uint %5937 %401
       %5939 = OpIAdd %v3uint %5938 %403
       %5940 = OpCompositeExtract %uint %5939 1
       %5941 = OpCompositeExtract %uint %5939 2
       %5942 = OpIMul %uint %5940 %5941
       %5943 = OpCompositeExtract %uint %5939 0
       %5944 = OpIAdd %uint %5943 %5942
       %5945 = OpIMul %uint %5941 %5944
       %5946 = OpIAdd %uint %5940 %5945
       %5947 = OpIMul %uint %5944 %5946
       %5948 = OpIAdd %uint %5941 %5947
       %5949 = OpIMul %uint %5946 %5948
       %5950 = OpIAdd %uint %5944 %5949
       %5951 = OpCompositeInsert %v3uint %5950 %550 0
       %5952 = OpShiftRightLogical %v3uint %5951 %5776
       %5953 = OpCompositeExtract %uint %5952 0
       %5954 = OpCompositeConstruct %v3uint %5953 %5953 %5953
       %5955 = OpBitwiseAnd %v3uint %5954 %386
       %5956 = OpConvertUToF %v3float %5955
       %5957 = OpExtInst %v3float %1 Fma %5956 %390 %278
       %5958 = OpDot %float %5957 %5935
       %5959 = OpCompositeExtract %float %5749 0
       %5960 = OpCompositeExtract %float %5749 1
       %5961 = OpCompositeExtract %float %5749 2
       %5962 = OpCompositeConstruct %v4float %5959 %5960 %5961 %float_0
       %5963 = OpFMul %v4float %5962 %5962
       %5964 = OpFMul %v4float %5963 %5962
       %5965 = OpVectorTimesScalar %v4float %5962 %float_6
       %5966 = OpFSub %v4float %5965 %381
       %5967 = OpExtInst %v4float %1 Fma %5962 %5966 %382
       %5968 = OpFMul %v4float %5964 %5967
       %5969 = OpCompositeExtract %float %5968 0
       %5970 = OpExtInst %float %1 FMix %5783 %5808 %5969
       %5971 = OpExtInst %float %1 FMix %5833 %5858 %5969
       %5972 = OpCompositeExtract %float %5968 1
       %5973 = OpExtInst %float %1 FMix %5970 %5971 %5972
       %5974 = OpExtInst %float %1 FMix %5883 %5908 %5969
       %5975 = OpExtInst %float %1 FMix %5933 %5958 %5969
       %5976 = OpExtInst %float %1 FMix %5974 %5975 %5972
       %5977 = OpCompositeExtract %float %5968 2
       %5978 = OpExtInst %float %1 FMix %5973 %5976 %5977
       %5744 = OpExtInst %float %1 Fma %5978 %5741 %5743
       %5739 = OpVectorTimesScalar %v3float %5738 %float_2
       %5742 = OpFMul %float %5741 %float_0_5
       %5746 = OpIAdd %uint %5745 %uint_1
               OpBranch %5737
       %5748 = OpLabel
       %5979 = OpExtInst %float %1 Fma %5743 %float_0_5 %float_0_5
       %5980 = OpExtInst %float %1 FMix %float_0 %float_1 %5979
       %5981 = OpExtInst %float %1 FClamp %5980 %float_0 %float_1
       %5982 = OpExtInst %float %1 FMix %1160 %1713 %5981
       %5983 = OpFMul %float %5714 %5982
       %5984 = OpExtInst %float %1 Fma %5708 %5712 %5983
       %5985 = OpExtInst %float %1 Floor %5713
       %5986 = OpFNegate %float %5985
       %5987 = OpExtInst %float %1 Fma %5707 %5712 %5986
       %5988 = OpExtInst %float %1 Fma %5987 %float_2097152 %5984
       %5989 = OpExtInst %float %1 Floor %5988
       %5990 = OpFMul %float %5985 %float_n6_28318548
       %5991 = OpExtInst %float %1 Fma %5713 %float_6_28318548 %5990
       %5992 = OpFMul %float %5989 %float_n6_28318548
       %5993 = OpExtInst %float %1 Fma %5984 %float_6_28318548 %5992
       %5994 = OpExtInst %float %1 Fma %5991 %float_2097152 %5993
       %5995 = OpFMul %v3float %5716 %3875
       %5996 = OpFMul %v3float %3875 %5717
       %5997 = OpFMul %v3float %5996 %3880
       %5998 = OpCompositeExtract %float %5997 0
       %5999 = OpCompositeExtract %float %5997 1
       %6000 = OpCompositeExtract %float %5997 2
       %6001 = OpCompositeConstruct %v2float %6000 %6000
       %6002 = OpFAdd %v2float %3890 %6001
       %6003 = OpCompositeExtract %float %6002 0
       %6004 = OpCompositeConstruct %v3float %5998 %5999 %6003
       %6005 = OpVectorTimesScalar %v3float %6004 %float_4_76837158en07
       %6006 = OpFAdd %v3float %6005 %137
       %6007 = OpExtInst %v3float %1 Fma %5995 %3880 %6006
       %6008 = OpExtInst %v3float %1 Floor %6007
       %6009 = OpFNegate %v3float %6008
       %6010 = OpExtInst %v3float %1 Fma %5995 %3880 %6009
       %6011 = OpVectorTimesScalar %v3float %6010 %float_2097152
       %6012 = OpFAdd %v3float %6011 %6004
       %6013 = OpVectorTimesScalar %v3float %6012 %float_1
               OpBranch %6014
       %6014 = OpLabel
       %6015 = OpPhi %v3float %6013 %5748 %6016 %6017
       %6018 = OpPhi %float %float_1 %5748 %6019 %6017
       %6020 = OpPhi %float %float_0 %5748 %6021 %6017
       %6022 = OpPhi %uint %uint_0 %5748 %6023 %6017
       %6024 = OpULessThan %bool %6022 %uint_10
               OpLoopMerge %6025 %6017 DontUnroll
               OpBranchConditional %6024 %6017 %6025
       %6017 = OpLabel
       %6026 = OpExtInst %v3float %1 Fract %6015
       %6027 = OpExtInst %v3float %1 Floor %6015
       %6028 = OpDot %float %6027 %385
       %6029 = OpFAdd %float %6028 %float_19
       %6030 = OpFAdd %float %6028 %float_47
       %6031 = OpFAdd %float %6028 %float_66
       %6032 = OpFAdd %float %6028 %float_101
       %6033 = OpFAdd %float %6028 %float_120
       %6034 = OpFAdd %float %6028 %float_148
       %6035 = OpFAdd %float %6028 %float_167
       %6036 = OpConvertFToS %int %6028
       %6037 = OpCompositeConstruct %v3int %6036 %int_0 %int_0
       %6038 = OpBitcast %v3uint %6037
       %6039 = OpIMul %v3uint %6038 %401
       %6040 = OpIAdd %v3uint %6039 %403
       %6041 = OpCompositeExtract %uint %6040 1
       %6042 = OpCompositeExtract %uint %6040 2
       %6043 = OpIMul %uint %6041 %6042
       %6044 = OpCompositeExtract %uint %6040 0
       %6045 = OpIAdd %uint %6044 %6043
       %6046 = OpIMul %uint %6042 %6045
       %6047 = OpIAdd %uint %6041 %6046
       %6048 = OpIMul %uint %6045 %6047
       %6049 = OpIAdd %uint %6042 %6048
       %6050 = OpIMul %uint %6047 %6049
       %6051 = OpIAdd %uint %6045 %6050
       %6052 = OpCompositeInsert %v3uint %6051 %550 0
       %6053 = OpBitwiseAnd %v3uint %404 %405
       %6054 = OpShiftRightLogical %v3uint %6052 %6053
       %6055 = OpCompositeExtract %uint %6054 0
       %6056 = OpCompositeConstruct %v3uint %6055 %6055 %6055
       %6057 = OpBitwiseAnd %v3uint %6056 %386
       %6058 = OpConvertUToF %v3float %6057
       %6059 = OpExtInst %v3float %1 Fma %6058 %390 %278
       %6060 = OpDot %float %6059 %6026
       %6061 = OpConvertFToS %int %6029
       %6062 = OpFSub %v3float %6026 %350
       %6063 = OpCompositeConstruct %v3int %6061 %int_0 %int_0
       %6064 = OpBitcast %v3uint %6063
       %6065 = OpIMul %v3uint %6064 %401
       %6066 = OpIAdd %v3uint %6065 %403
       %6067 = OpCompositeExtract %uint %6066 1
       %6068 = OpCompositeExtract %uint %6066 2
       %6069 = OpIMul %uint %6067 %6068
       %6070 = OpCompositeExtract %uint %6066 0
       %6071 = OpIAdd %uint %6070 %6069
       %6072 = OpIMul %uint %6068 %6071
       %6073 = OpIAdd %uint %6067 %6072
       %6074 = OpIMul %uint %6071 %6073
       %6075 = OpIAdd %uint %6068 %6074
       %6076 = OpIMul %uint %6073 %6075
       %6077 = OpIAdd %uint %6071 %6076
       %6078 = OpCompositeInsert %v3uint %6077 %550 0
       %6079 = OpShiftRightLogical %v3uint %6078 %6053
       %6080 = OpCompositeExtract %uint %6079 0
       %6081 = OpCompositeConstruct %v3uint %6080 %6080 %6080
       %6082 = OpBitwiseAnd %v3uint %6081 %386
       %6083 = OpConvertUToF %v3float %6082
       %6084 = OpExtInst %v3float %1 Fma %6083 %390 %278
       %6085 = OpDot %float %6084 %6062
       %6086 = OpConvertFToS %int %6030
       %6087 = OpFSub %v3float %6026 %351
       %6088 = OpCompositeConstruct %v3int %6086 %int_0 %int_0
       %6089 = OpBitcast %v3uint %6088
       %6090 = OpIMul %v3uint %6089 %401
       %6091 = OpIAdd %v3uint %6090 %403
       %6092 = OpCompositeExtract %uint %6091 1
       %6093 = OpCompositeExtract %uint %6091 2
       %6094 = OpIMul %uint %6092 %6093
       %6095 = OpCompositeExtract %uint %6091 0
       %6096 = OpIAdd %uint %6095 %6094
       %6097 = OpIMul %uint %6093 %6096
       %6098 = OpIAdd %uint %6092 %6097
       %6099 = OpIMul %uint %6096 %6098
       %6100 = OpIAdd %uint %6093 %6099
       %6101 = OpIMul %uint %6098 %6100
       %6102 = OpIAdd %uint %6096 %6101
       %6103 = OpCompositeInsert %v3uint %6102 %550 0
       %6104 = OpShiftRightLogical %v3uint %6103 %6053
       %6105 = OpCompositeExtract %uint %6104 0
       %6106 = OpCompositeConstruct %v3uint %6105 %6105 %6105
       %6107 = OpBitwiseAnd %v3uint %6106 %386
       %6108 = OpConvertUToF %v3float %6107
       %6109 = OpExtInst %v3float %1 Fma %6108 %390 %278
       %6110 = OpDot %float %6109 %6087
       %6111 = OpConvertFToS %int %6031
       %6112 = OpFSub %v3float %6026 %134
       %6113 = OpCompositeConstruct %v3int %6111 %int_0 %int_0
       %6114 = OpBitcast %v3uint %6113
       %6115 = OpIMul %v3uint %6114 %401
       %6116 = OpIAdd %v3uint %6115 %403
       %6117 = OpCompositeExtract %uint %6116 1
       %6118 = OpCompositeExtract %uint %6116 2
       %6119 = OpIMul %uint %6117 %6118
       %6120 = OpCompositeExtract %uint %6116 0
       %6121 = OpIAdd %uint %6120 %6119
       %6122 = OpIMul %uint %6118 %6121
       %6123 = OpIAdd %uint %6117 %6122
       %6124 = OpIMul %uint %6121 %6123
       %6125 = OpIAdd %uint %6118 %6124
       %6126 = OpIMul %uint %6123 %6125
       %6127 = OpIAdd %uint %6121 %6126
       %6128 = OpCompositeInsert %v3uint %6127 %550 0
       %6129 = OpShiftRightLogical %v3uint %6128 %6053
       %6130 = OpCompositeExtract %uint %6129 0
       %6131 = OpCompositeConstruct %v3uint %6130 %6130 %6130
       %6132 = OpBitwiseAnd %v3uint %6131 %386
       %6133 = OpConvertUToF %v3float %6132
       %6134 = OpExtInst %v3float %1 Fma %6133 %390 %278
       %6135 = OpDot %float %6134 %6112
       %6136 = OpConvertFToS %int %6032
       %6137 = OpFSub %v3float %6026 %290
       %6138 = OpCompositeConstruct %v3int %6136 %int_0 %int_0
       %6139 = OpBitcast %v3uint %6138
       %6140 = OpIMul %v3uint %6139 %401
       %6141 = OpIAdd %v3uint %6140 %403
       %6142 = OpCompositeExtract %uint %6141 1
       %6143 = OpCompositeExtract %uint %6141 2
       %6144 = OpIMul %uint %6142 %6143
       %6145 = OpCompositeExtract %uint %6141 0
       %6146 = OpIAdd %uint %6145 %6144
       %6147 = OpIMul %uint %6143 %6146
       %6148 = OpIAdd %uint %6142 %6147
       %6149 = OpIMul %uint %6146 %6148
       %6150 = OpIAdd %uint %6143 %6149
       %6151 = OpIMul %uint %6148 %6150
       %6152 = OpIAdd %uint %6146 %6151
       %6153 = OpCompositeInsert %v3uint %6152 %550 0
       %6154 = OpShiftRightLogical %v3uint %6153 %6053
       %6155 = OpCompositeExtract %uint %6154 0
       %6156 = OpCompositeConstruct %v3uint %6155 %6155 %6155
       %6157 = OpBitwiseAnd %v3uint %6156 %386
       %6158 = OpConvertUToF %v3float %6157
       %6159 = OpExtInst %v3float %1 Fma %6158 %390 %278
       %6160 = OpDot %float %6159 %6137
       %6161 = OpConvertFToS %int %6033
       %6162 = OpFSub %v3float %6026 %139
       %6163 = OpCompositeConstruct %v3int %6161 %int_0 %int_0
       %6164 = OpBitcast %v3uint %6163
       %6165 = OpIMul %v3uint %6164 %401
       %6166 = OpIAdd %v3uint %6165 %403
       %6167 = OpCompositeExtract %uint %6166 1
       %6168 = OpCompositeExtract %uint %6166 2
       %6169 = OpIMul %uint %6167 %6168
       %6170 = OpCompositeExtract %uint %6166 0
       %6171 = OpIAdd %uint %6170 %6169
       %6172 = OpIMul %uint %6168 %6171
       %6173 = OpIAdd %uint %6167 %6172
       %6174 = OpIMul %uint %6171 %6173
       %6175 = OpIAdd %uint %6168 %6174
       %6176 = OpIMul %uint %6173 %6175
       %6177 = OpIAdd %uint %6171 %6176
       %6178 = OpCompositeInsert %v3uint %6177 %550 0
       %6179 = OpShiftRightLogical %v3uint %6178 %6053
       %6180 = OpCompositeExtract %uint %6179 0
       %6181 = OpCompositeConstruct %v3uint %6180 %6180 %6180
       %6182 = OpBitwiseAnd %v3uint %6181 %386
       %6183 = OpConvertUToF %v3float %6182
       %6184 = OpExtInst %v3float %1 Fma %6183 %390 %278
       %6185 = OpDot %float %6184 %6162
       %6186 = OpConvertFToS %int %6034
       %6187 = OpFSub %v3float %6026 %135
       %6188 = OpCompositeConstruct %v3int %6186 %int_0 %int_0
       %6189 = OpBitcast %v3uint %6188
       %6190 = OpIMul %v3uint %6189 %401
       %6191 = OpIAdd %v3uint %6190 %403
       %6192 = OpCompositeExtract %uint %6191 1
       %6193 = OpCompositeExtract %uint %6191 2
       %6194 = OpIMul %uint %6192 %6193
       %6195 = OpCompositeExtract %uint %6191 0
       %6196 = OpIAdd %uint %6195 %6194
       %6197 = OpIMul %uint %6193 %6196
       %6198 = OpIAdd %uint %6192 %6197
       %6199 = OpIMul %uint %6196 %6198
       %6200 = OpIAdd %uint %6193 %6199
       %6201 = OpIMul %uint %6198 %6200
       %6202 = OpIAdd %uint %6196 %6201
       %6203 = OpCompositeInsert %v3uint %6202 %550 0
       %6204 = OpShiftRightLogical %v3uint %6203 %6053
       %6205 = OpCompositeExtract %uint %6204 0
       %6206 = OpCompositeConstruct %v3uint %6205 %6205 %6205
       %6207 = OpBitwiseAnd %v3uint %6206 %386
       %6208 = OpConvertUToF %v3float %6207
       %6209 = OpExtInst %v3float %1 Fma %6208 %390 %278
       %6210 = OpDot %float %6209 %6187
       %6211 = OpConvertFToS %int %6035
       %6212 = OpFSub %v3float %6026 %127
       %6213 = OpCompositeConstruct %v3int %6211 %int_0 %int_0
       %6214 = OpBitcast %v3uint %6213
       %6215 = OpIMul %v3uint %6214 %401
       %6216 = OpIAdd %v3uint %6215 %403
       %6217 = OpCompositeExtract %uint %6216 1
       %6218 = OpCompositeExtract %uint %6216 2
       %6219 = OpIMul %uint %6217 %6218
       %6220 = OpCompositeExtract %uint %6216 0
       %6221 = OpIAdd %uint %6220 %6219
       %6222 = OpIMul %uint %6218 %6221
       %6223 = OpIAdd %uint %6217 %6222
       %6224 = OpIMul %uint %6221 %6223
       %6225 = OpIAdd %uint %6218 %6224
       %6226 = OpIMul %uint %6223 %6225
       %6227 = OpIAdd %uint %6221 %6226
       %6228 = OpCompositeInsert %v3uint %6227 %550 0
       %6229 = OpShiftRightLogical %v3uint %6228 %6053
       %6230 = OpCompositeExtract %uint %6229 0
       %6231 = OpCompositeConstruct %v3uint %6230 %6230 %6230
       %6232 = OpBitwiseAnd %v3uint %6231 %386
       %6233 = OpConvertUToF %v3float %6232
       %6234 = OpExtInst %v3float %1 Fma %6233 %390 %278
       %6235 = OpDot %float %6234 %6212
       %6236 = OpCompositeExtract %float %6026 0
       %6237 = OpCompositeExtract %float %6026 1
       %6238 = OpCompositeExtract %float %6026 2
       %6239 = OpCompositeConstruct %v4float %6236 %6237 %6238 %float_0
       %6240 = OpFMul %v4float %6239 %6239
       %6241 = OpFMul %v4float %6240 %6239
       %6242 = OpVectorTimesScalar %v4float %6239 %float_6
       %6243 = OpFSub %v4float %6242 %381
       %6244 = OpExtInst %v4float %1 Fma %6239 %6243 %382
       %6245 = OpFMul %v4float %6241 %6244
       %6246 = OpCompositeExtract %float %6245 0
       %6247 = OpExtInst %float %1 FMix %6060 %6085 %6246
       %6248 = OpExtInst %float %1 FMix %6110 %6135 %6246
       %6249 = OpCompositeExtract %float %6245 1
       %6250 = OpExtInst %float %1 FMix %6247 %6248 %6249
       %6251 = OpExtInst %float %1 FMix %6160 %6185 %6246
       %6252 = OpExtInst %float %1 FMix %6210 %6235 %6246
       %6253 = OpExtInst %float %1 FMix %6251 %6252 %6249
       %6254 = OpCompositeExtract %float %6245 2
       %6255 = OpExtInst %float %1 FMix %6250 %6253 %6254
       %6256 = OpExtInst %float %1 FAbs %6255
       %6021 = OpExtInst %float %1 Fma %6256 %6018 %6020
       %6016 = OpVectorTimesScalar %v3float %6015 %float_2
       %6019 = OpFMul %float %6018 %float_0_5
       %6023 = OpIAdd %uint %6022 %uint_1
               OpBranch %6014
       %6025 = OpLabel
       %6257 = OpExtInst %float %1 FMix %float_0 %float_1 %6020
       %6258 = OpFMul %v3float %5716 %4150
       %6259 = OpFMul %v3float %4150 %5717
       %6260 = OpFMul %v3float %6259 %4155
       %6261 = OpCompositeExtract %float %6260 0
       %6262 = OpCompositeExtract %float %6260 1
       %6263 = OpCompositeExtract %float %6260 2
       %6264 = OpCompositeConstruct %v2float %6263 %6263
       %6265 = OpFAdd %v2float %4165 %6264
       %6266 = OpCompositeExtract %float %6265 0
       %6267 = OpCompositeConstruct %v3float %6261 %6262 %6266
       %6268 = OpVectorTimesScalar %v3float %6267 %float_4_76837158en07
       %6269 = OpFAdd %v3float %6268 %137
       %6270 = OpExtInst %v3float %1 Fma %6258 %4155 %6269
       %6271 = OpExtInst %v3float %1 Floor %6270
       %6272 = OpFNegate %v3float %6271
       %6273 = OpExtInst %v3float %1 Fma %6258 %4155 %6272
       %6274 = OpVectorTimesScalar %v3float %6273 %float_2097152
       %6275 = OpFAdd %v3float %6274 %6267
       %6276 = OpVectorTimesScalar %v3float %6275 %float_1
               OpBranch %6277
       %6277 = OpLabel
       %6278 = OpPhi %v3float %6276 %6025 %6279 %6280
       %6281 = OpPhi %float %float_1 %6025 %6282 %6280
       %6283 = OpPhi %float %float_0 %6025 %6284 %6280
       %6285 = OpPhi %uint %uint_0 %6025 %6286 %6280
       %6287 = OpULessThan %bool %6285 %uint_10
               OpLoopMerge %6288 %6280 DontUnroll
               OpBranchConditional %6287 %6280 %6288
       %6280 = OpLabel
       %6289 = OpExtInst %v3float %1 Fract %6278
       %6290 = OpExtInst %v3float %1 Floor %6278
       %6291 = OpDot %float %6290 %385
       %6292 = OpFAdd %float %6291 %float_19
       %6293 = OpFAdd %float %6291 %float_47
       %6294 = OpFAdd %float %6291 %float_66
       %6295 = OpFAdd %float %6291 %float_101
       %6296 = OpFAdd %float %6291 %float_120
       %6297 = OpFAdd %float %6291 %float_148
       %6298 = OpFAdd %float %6291 %float_167
       %6299 = OpConvertFToS %int %6291
       %6300 = OpCompositeConstruct %v3int %6299 %int_0 %int_0
       %6301 = OpBitcast %v3uint %6300
       %6302 = OpIMul %v3uint %6301 %401
       %6303 = OpIAdd %v3uint %6302 %403
       %6304 = OpCompositeExtract %uint %6303 1
       %6305 = OpCompositeExtract %uint %6303 2
       %6306 = OpIMul %uint %6304 %6305
       %6307 = OpCompositeExtract %uint %6303 0
       %6308 = OpIAdd %uint %6307 %6306
       %6309 = OpIMul %uint %6305 %6308
       %6310 = OpIAdd %uint %6304 %6309
       %6311 = OpIMul %uint %6308 %6310
       %6312 = OpIAdd %uint %6305 %6311
       %6313 = OpIMul %uint %6310 %6312
       %6314 = OpIAdd %uint %6308 %6313
       %6315 = OpCompositeInsert %v3uint %6314 %550 0
       %6316 = OpBitwiseAnd %v3uint %404 %405
       %6317 = OpShiftRightLogical %v3uint %6315 %6316
       %6318 = OpCompositeExtract %uint %6317 0
       %6319 = OpCompositeConstruct %v3uint %6318 %6318 %6318
       %6320 = OpBitwiseAnd %v3uint %6319 %386
       %6321 = OpConvertUToF %v3float %6320
       %6322 = OpExtInst %v3float %1 Fma %6321 %390 %278
       %6323 = OpDot %float %6322 %6289
       %6324 = OpConvertFToS %int %6292
       %6325 = OpFSub %v3float %6289 %350
       %6326 = OpCompositeConstruct %v3int %6324 %int_0 %int_0
       %6327 = OpBitcast %v3uint %6326
       %6328 = OpIMul %v3uint %6327 %401
       %6329 = OpIAdd %v3uint %6328 %403
       %6330 = OpCompositeExtract %uint %6329 1
       %6331 = OpCompositeExtract %uint %6329 2
       %6332 = OpIMul %uint %6330 %6331
       %6333 = OpCompositeExtract %uint %6329 0
       %6334 = OpIAdd %uint %6333 %6332
       %6335 = OpIMul %uint %6331 %6334
       %6336 = OpIAdd %uint %6330 %6335
       %6337 = OpIMul %uint %6334 %6336
       %6338 = OpIAdd %uint %6331 %6337
       %6339 = OpIMul %uint %6336 %6338
       %6340 = OpIAdd %uint %6334 %6339
       %6341 = OpCompositeInsert %v3uint %6340 %550 0
       %6342 = OpShiftRightLogical %v3uint %6341 %6316
       %6343 = OpCompositeExtract %uint %6342 0
       %6344 = OpCompositeConstruct %v3uint %6343 %6343 %6343
       %6345 = OpBitwiseAnd %v3uint %6344 %386
       %6346 = OpConvertUToF %v3float %6345
       %6347 = OpExtInst %v3float %1 Fma %6346 %390 %278
       %6348 = OpDot %float %6347 %6325
       %6349 = OpConvertFToS %int %6293
       %6350 = OpFSub %v3float %6289 %351
       %6351 = OpCompositeConstruct %v3int %6349 %int_0 %int_0
       %6352 = OpBitcast %v3uint %6351
       %6353 = OpIMul %v3uint %6352 %401
       %6354 = OpIAdd %v3uint %6353 %403
       %6355 = OpCompositeExtract %uint %6354 1
       %6356 = OpCompositeExtract %uint %6354 2
       %6357 = OpIMul %uint %6355 %6356
       %6358 = OpCompositeExtract %uint %6354 0
       %6359 = OpIAdd %uint %6358 %6357
       %6360 = OpIMul %uint %6356 %6359
       %6361 = OpIAdd %uint %6355 %6360
       %6362 = OpIMul %uint %6359 %6361
       %6363 = OpIAdd %uint %6356 %6362
       %6364 = OpIMul %uint %6361 %6363
       %6365 = OpIAdd %uint %6359 %6364
       %6366 = OpCompositeInsert %v3uint %6365 %550 0
       %6367 = OpShiftRightLogical %v3uint %6366 %6316
       %6368 = OpCompositeExtract %uint %6367 0
       %6369 = OpCompositeConstruct %v3uint %6368 %6368 %6368
       %6370 = OpBitwiseAnd %v3uint %6369 %386
       %6371 = OpConvertUToF %v3float %6370
       %6372 = OpExtInst %v3float %1 Fma %6371 %390 %278
       %6373 = OpDot %float %6372 %6350
       %6374 = OpConvertFToS %int %6294
       %6375 = OpFSub %v3float %6289 %134
       %6376 = OpCompositeConstruct %v3int %6374 %int_0 %int_0
       %6377 = OpBitcast %v3uint %6376
       %6378 = OpIMul %v3uint %6377 %401
       %6379 = OpIAdd %v3uint %6378 %403
       %6380 = OpCompositeExtract %uint %6379 1
       %6381 = OpCompositeExtract %uint %6379 2
       %6382 = OpIMul %uint %6380 %6381
       %6383 = OpCompositeExtract %uint %6379 0
       %6384 = OpIAdd %uint %6383 %6382
       %6385 = OpIMul %uint %6381 %6384
       %6386 = OpIAdd %uint %6380 %6385
       %6387 = OpIMul %uint %6384 %6386
       %6388 = OpIAdd %uint %6381 %6387
       %6389 = OpIMul %uint %6386 %6388
       %6390 = OpIAdd %uint %6384 %6389
       %6391 = OpCompositeInsert %v3uint %6390 %550 0
       %6392 = OpShiftRightLogical %v3uint %6391 %6316
       %6393 = OpCompositeExtract %uint %6392 0
       %6394 = OpCompositeConstruct %v3uint %6393 %6393 %6393
       %6395 = OpBitwiseAnd %v3uint %6394 %386
       %6396 = OpConvertUToF %v3float %6395
       %6397 = OpExtInst %v3float %1 Fma %6396 %390 %278
       %6398 = OpDot %float %6397 %6375
       %6399 = OpConvertFToS %int %6295
       %6400 = OpFSub %v3float %6289 %290
       %6401 = OpCompositeConstruct %v3int %6399 %int_0 %int_0
       %6402 = OpBitcast %v3uint %6401
       %6403 = OpIMul %v3uint %6402 %401
       %6404 = OpIAdd %v3uint %6403 %403
       %6405 = OpCompositeExtract %uint %6404 1
       %6406 = OpCompositeExtract %uint %6404 2
       %6407 = OpIMul %uint %6405 %6406
       %6408 = OpCompositeExtract %uint %6404 0
       %6409 = OpIAdd %uint %6408 %6407
       %6410 = OpIMul %uint %6406 %6409
       %6411 = OpIAdd %uint %6405 %6410
       %6412 = OpIMul %uint %6409 %6411
       %6413 = OpIAdd %uint %6406 %6412
       %6414 = OpIMul %uint %6411 %6413
       %6415 = OpIAdd %uint %6409 %6414
       %6416 = OpCompositeInsert %v3uint %6415 %550 0
       %6417 = OpShiftRightLogical %v3uint %6416 %6316
       %6418 = OpCompositeExtract %uint %6417 0
       %6419 = OpCompositeConstruct %v3uint %6418 %6418 %6418
       %6420 = OpBitwiseAnd %v3uint %6419 %386
       %6421 = OpConvertUToF %v3float %6420
       %6422 = OpExtInst %v3float %1 Fma %6421 %390 %278
       %6423 = OpDot %float %6422 %6400
       %6424 = OpConvertFToS %int %6296
       %6425 = OpFSub %v3float %6289 %139
       %6426 = OpCompositeConstruct %v3int %6424 %int_0 %int_0
       %6427 = OpBitcast %v3uint %6426
       %6428 = OpIMul %v3uint %6427 %401
       %6429 = OpIAdd %v3uint %6428 %403
       %6430 = OpCompositeExtract %uint %6429 1
       %6431 = OpCompositeExtract %uint %6429 2
       %6432 = OpIMul %uint %6430 %6431
       %6433 = OpCompositeExtract %uint %6429 0
       %6434 = OpIAdd %uint %6433 %6432
       %6435 = OpIMul %uint %6431 %6434
       %6436 = OpIAdd %uint %6430 %6435
       %6437 = OpIMul %uint %6434 %6436
       %6438 = OpIAdd %uint %6431 %6437
       %6439 = OpIMul %uint %6436 %6438
       %6440 = OpIAdd %uint %6434 %6439
       %6441 = OpCompositeInsert %v3uint %6440 %550 0
       %6442 = OpShiftRightLogical %v3uint %6441 %6316
       %6443 = OpCompositeExtract %uint %6442 0
       %6444 = OpCompositeConstruct %v3uint %6443 %6443 %6443
       %6445 = OpBitwiseAnd %v3uint %6444 %386
       %6446 = OpConvertUToF %v3float %6445
       %6447 = OpExtInst %v3float %1 Fma %6446 %390 %278
       %6448 = OpDot %float %6447 %6425
       %6449 = OpConvertFToS %int %6297
       %6450 = OpFSub %v3float %6289 %135
       %6451 = OpCompositeConstruct %v3int %6449 %int_0 %int_0
       %6452 = OpBitcast %v3uint %6451
       %6453 = OpIMul %v3uint %6452 %401
       %6454 = OpIAdd %v3uint %6453 %403
       %6455 = OpCompositeExtract %uint %6454 1
       %6456 = OpCompositeExtract %uint %6454 2
       %6457 = OpIMul %uint %6455 %6456
       %6458 = OpCompositeExtract %uint %6454 0
       %6459 = OpIAdd %uint %6458 %6457
       %6460 = OpIMul %uint %6456 %6459
       %6461 = OpIAdd %uint %6455 %6460
       %6462 = OpIMul %uint %6459 %6461
       %6463 = OpIAdd %uint %6456 %6462
       %6464 = OpIMul %uint %6461 %6463
       %6465 = OpIAdd %uint %6459 %6464
       %6466 = OpCompositeInsert %v3uint %6465 %550 0
       %6467 = OpShiftRightLogical %v3uint %6466 %6316
       %6468 = OpCompositeExtract %uint %6467 0
       %6469 = OpCompositeConstruct %v3uint %6468 %6468 %6468
       %6470 = OpBitwiseAnd %v3uint %6469 %386
       %6471 = OpConvertUToF %v3float %6470
       %6472 = OpExtInst %v3float %1 Fma %6471 %390 %278
       %6473 = OpDot %float %6472 %6450
       %6474 = OpConvertFToS %int %6298
       %6475 = OpFSub %v3float %6289 %127
       %6476 = OpCompositeConstruct %v3int %6474 %int_0 %int_0
       %6477 = OpBitcast %v3uint %6476
       %6478 = OpIMul %v3uint %6477 %401
       %6479 = OpIAdd %v3uint %6478 %403
       %6480 = OpCompositeExtract %uint %6479 1
       %6481 = OpCompositeExtract %uint %6479 2
       %6482 = OpIMul %uint %6480 %6481
       %6483 = OpCompositeExtract %uint %6479 0
       %6484 = OpIAdd %uint %6483 %6482
       %6485 = OpIMul %uint %6481 %6484
       %6486 = OpIAdd %uint %6480 %6485
       %6487 = OpIMul %uint %6484 %6486
       %6488 = OpIAdd %uint %6481 %6487
       %6489 = OpIMul %uint %6486 %6488
       %6490 = OpIAdd %uint %6484 %6489
       %6491 = OpCompositeInsert %v3uint %6490 %550 0
       %6492 = OpShiftRightLogical %v3uint %6491 %6316
       %6493 = OpCompositeExtract %uint %6492 0
       %6494 = OpCompositeConstruct %v3uint %6493 %6493 %6493
       %6495 = OpBitwiseAnd %v3uint %6494 %386
       %6496 = OpConvertUToF %v3float %6495
       %6497 = OpExtInst %v3float %1 Fma %6496 %390 %278
       %6498 = OpDot %float %6497 %6475
       %6499 = OpCompositeExtract %float %6289 0
       %6500 = OpCompositeExtract %float %6289 1
       %6501 = OpCompositeExtract %float %6289 2
       %6502 = OpCompositeConstruct %v4float %6499 %6500 %6501 %float_0
       %6503 = OpFMul %v4float %6502 %6502
       %6504 = OpFMul %v4float %6503 %6502
       %6505 = OpVectorTimesScalar %v4float %6502 %float_6
       %6506 = OpFSub %v4float %6505 %381
       %6507 = OpExtInst %v4float %1 Fma %6502 %6506 %382
       %6508 = OpFMul %v4float %6504 %6507
       %6509 = OpCompositeExtract %float %6508 0
       %6510 = OpExtInst %float %1 FMix %6323 %6348 %6509
       %6511 = OpExtInst %float %1 FMix %6373 %6398 %6509
       %6512 = OpCompositeExtract %float %6508 1
       %6513 = OpExtInst %float %1 FMix %6510 %6511 %6512
       %6514 = OpExtInst %float %1 FMix %6423 %6448 %6509
       %6515 = OpExtInst %float %1 FMix %6473 %6498 %6509
       %6516 = OpExtInst %float %1 FMix %6514 %6515 %6512
       %6517 = OpCompositeExtract %float %6508 2
       %6518 = OpExtInst %float %1 FMix %6513 %6516 %6517
       %6519 = OpExtInst %float %1 FAbs %6518
       %6284 = OpExtInst %float %1 Fma %6519 %6281 %6283
       %6279 = OpVectorTimesScalar %v3float %6278 %float_2
       %6282 = OpFMul %float %6281 %float_0_5
       %6286 = OpIAdd %uint %6285 %uint_1
               OpBranch %6277
       %6288 = OpLabel
       %6520 = OpExtInst %float %1 FMix %float_0 %float_1 %6283
       %6521 = OpExtInst %float %1 Fma %6520 %4424 %4426
       %6522 = OpFMul %float %6257 %6521
       %6523 = OpExtInst %float %1 FMix %3867 %3872 %6522
       %6524 = OpExtInst %float %1 Sin %5994
       %6525 = OpFMul %float %6524 %6523
       %6526 = OpFAdd %v3float %5694 %2560
       %6527 = OpExtInst %v3float %1 NMax %6526 %278
       %6528 = OpExtInst %v3float %1 NMin %6527 %127
       %6529 = OpCompositeExtract %float %6528 0
       %6530 = OpCompositeExtract %float %6528 1
       %6531 = OpCompositeConstruct %v2float %6529 %6530
       %6532 = OpFMul %v2float %1695 %6531
       %6533 = OpFMul %v2float %6531 %1696
       %6534 = OpCompositeExtract %float %6532 0
       %6535 = OpCompositeExtract %float %6533 0
       %6536 = OpCompositeExtract %float %6532 1
       %6537 = OpCompositeExtract %float %6533 1
       %6538 = OpFAdd %float %6534 %6536
       %6539 = OpFAdd %float %6535 %6537
       %6540 = OpFMul %float %5711 %4447
       %6541 = OpFDiv %float %float_2 %6540
       %6542 = OpFMul %float %6538 %6541
       %6543 = OpFMul %float %6541 %4452
       %6544 = OpFMul %float %6543 %5982
       %6545 = OpExtInst %float %1 Fma %6539 %6541 %6544
       %6546 = OpExtInst %float %1 Floor %6542
       %6547 = OpFNegate %float %6546
       %6548 = OpExtInst %float %1 Fma %6538 %6541 %6547
       %6549 = OpExtInst %float %1 Fma %6548 %float_2097152 %6545
       %6550 = OpExtInst %float %1 Floor %6549
       %6551 = OpFMul %float %6546 %float_n6_28318548
       %6552 = OpExtInst %float %1 Fma %6542 %float_6_28318548 %6551
       %6553 = OpFMul %float %6550 %float_n6_28318548
       %6554 = OpExtInst %float %1 Fma %6545 %float_6_28318548 %6553
       %6555 = OpExtInst %float %1 Fma %6552 %float_2097152 %6554
       %6556 = OpFMul %float %6523 %2593
       %6557 = OpExtInst %float %1 Sin %6555
       %6558 = OpFMul %float %6557 %6556
       %6559 = OpCompositeConstruct %v3float %549 %549 %6525
       %6560 = OpCompositeConstruct %v3float %549 %549 %6558
       %6561 = OpFAdd %v3float %6559 %6560
       %6562 = OpFSub %v3float %5694 %1687
       %6563 = OpExtInst %v3float %1 NMax %6562 %278
       %6564 = OpExtInst %v3float %1 NMin %6563 %127
       %6565 = OpCompositeExtract %float %6564 0
       %6566 = OpCompositeExtract %float %6564 1
       %6567 = OpCompositeConstruct %v2float %6565 %6566
       %6568 = OpFMul %v2float %1695 %6567
       %6569 = OpFMul %v2float %6567 %1696
       %6570 = OpCompositeExtract %float %6568 0
       %6571 = OpCompositeExtract %float %6569 0
       %6572 = OpCompositeExtract %float %6568 1
       %6573 = OpCompositeExtract %float %6569 1
       %6574 = OpFAdd %float %6570 %6572
       %6575 = OpFAdd %float %6571 %6573
       %6576 = OpFMul %float %6540 %4447
       %6577 = OpFDiv %float %float_2 %6576
       %6578 = OpFMul %float %6574 %6577
       %6579 = OpFMul %float %6577 %4490
       %6580 = OpFMul %float %6579 %5982
       %6581 = OpExtInst %float %1 Fma %6575 %6577 %6580
       %6582 = OpExtInst %float %1 Floor %6578
       %6583 = OpFNegate %float %6582
       %6584 = OpExtInst %float %1 Fma %6574 %6577 %6583
       %6585 = OpExtInst %float %1 Fma %6584 %float_2097152 %6581
       %6586 = OpExtInst %float %1 Floor %6585
       %6587 = OpFMul %float %6582 %float_n6_28318548
       %6588 = OpExtInst %float %1 Fma %6578 %float_6_28318548 %6587
       %6589 = OpFMul %float %6586 %float_n6_28318548
       %6590 = OpExtInst %float %1 Fma %6581 %float_6_28318548 %6589
       %6591 = OpExtInst %float %1 Fma %6588 %float_2097152 %6590
       %6592 = OpFMul %float %6556 %2593
       %6593 = OpExtInst %float %1 Sin %6591
       %6594 = OpFMul %float %6593 %6592
       %6595 = OpCompositeConstruct %v3float %549 %549 %6594
       %6596 = OpFAdd %v3float %6561 %6595
       %6597 = OpFSub %v3float %5694 %2560
       %6598 = OpExtInst %v3float %1 NMax %6597 %278
       %6599 = OpExtInst %v3float %1 NMin %6598 %127
       %6600 = OpCompositeExtract %float %6599 0
       %6601 = OpCompositeExtract %float %6599 1
       %6602 = OpCompositeConstruct %v2float %6600 %6601
       %6603 = OpFMul %v2float %1695 %6602
       %6604 = OpFMul %v2float %6602 %1696
       %6605 = OpCompositeExtract %float %6603 0
       %6606 = OpCompositeExtract %float %6604 0
       %6607 = OpCompositeExtract %float %6603 1
       %6608 = OpCompositeExtract %float %6604 1
       %6609 = OpFAdd %float %6605 %6607
       %6610 = OpFAdd %float %6606 %6608
       %6611 = OpFMul %float %6576 %4447
       %6612 = OpFDiv %float %float_2 %6611
       %6613 = OpFMul %float %6609 %6612
       %6614 = OpFMul %float %6612 %4527
       %6615 = OpFMul %float %6614 %5982
       %6616 = OpExtInst %float %1 Fma %6610 %6612 %6615
       %6617 = OpExtInst %float %1 Floor %6613
       %6618 = OpFNegate %float %6617
       %6619 = OpExtInst %float %1 Fma %6609 %6612 %6618
       %6620 = OpExtInst %float %1 Fma %6619 %float_2097152 %6616
       %6621 = OpExtInst %float %1 Floor %6620
       %6622 = OpFMul %float %6617 %float_n6_28318548
       %6623 = OpExtInst %float %1 Fma %6613 %float_6_28318548 %6622
       %6624 = OpFMul %float %6621 %float_n6_28318548
       %6625 = OpExtInst %float %1 Fma %6616 %float_6_28318548 %6624
       %6626 = OpExtInst %float %1 Fma %6623 %float_2097152 %6625
       %6627 = OpFMul %float %6592 %2593
       %6628 = OpExtInst %float %1 Sin %6626
       %6629 = OpFMul %float %6628 %6627
       %6630 = OpCompositeConstruct %v3float %549 %549 %6629
       %6631 = OpFAdd %v3float %6596 %6630
       %6632 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_83 %int_3
       %6633 = OpLoad %float %6632
       %6634 = OpFSub %float %6633 %float_n1
       %6635 = OpExtInst %float %1 FAbs %6634
       %6636 = OpFOrdGreaterThan %bool %6635 %float_9_99999975en06
       %6637 = OpFOrdGreaterThanEqual %bool %6633 %float_n1
       %6638 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_84 %int_0
       %6639 = OpLoad %float %6638
       %6640 = OpSelect %float %6637 %6633 %6639
       %6641 = OpSelect %float %6636 %6640 %6633
       %6642 = OpFSub %float %6641 %float_1
       %6643 = OpExtInst %float %1 FAbs %6642
       %6644 = OpFOrdGreaterThan %bool %6643 %float_9_99999975en06
       %6645 = OpFOrdGreaterThanEqual %bool %6641 %float_1
       %6646 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_84 %int_1
       %6647 = OpLoad %float %6646
       %6648 = OpSelect %float %6645 %6647 %6633
       %6649 = OpSelect %float %6644 %6648 %6633
       %6650 = OpExtInst %float %1 FAbs %6649
       %6651 = OpFOrdGreaterThan %bool %6650 %float_9_99999975en06
       %6652 = OpFOrdGreaterThanEqual %bool %6649 %float_0
       %6653 = OpSelect %float %6652 %float_1 %float_n1
       %6654 = OpSelect %float %6651 %6653 %float_1
       %6655 = OpExtInst %float %1 NMax %6654 %float_n1
       %6656 = OpExtInst %float %1 NMin %6655 %float_1
       %6657 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_85 %int_2
       %6658 = OpLoad %float %6657
       %6659 = OpCompositeConstruct %v3float %6656 %6658 %float_0
       %6660 = OpFAdd %v3float %6659 %1687
       %6661 = OpExtInst %v3float %1 NMax %6660 %278
       %6662 = OpExtInst %v3float %1 NMin %6661 %127
       %6663 = OpCompositeExtract %float %6662 0
       %6664 = OpCompositeExtract %float %6662 1
       %6665 = OpCompositeConstruct %v2float %6663 %6664
       %6666 = OpFMul %v2float %1695 %6665
       %6667 = OpFMul %v2float %6665 %1696
       %6668 = OpCompositeExtract %float %6666 0
       %6669 = OpCompositeExtract %float %6667 0
       %6670 = OpCompositeExtract %float %6666 1
       %6671 = OpCompositeExtract %float %6667 1
       %6672 = OpFAdd %float %6668 %6670
       %6673 = OpFAdd %float %6669 %6671
       %6674 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_86 %int_3
       %6675 = OpLoad %float %6674
       %6676 = OpFMul %float %6675 %4590
       %6677 = OpFDiv %float %float_2 %6676
       %6678 = OpFMul %float %6672 %6677
       %6679 = OpFMul %float %6677 %4597
       %6680 = OpFMul %float %6679 %5982
       %6681 = OpExtInst %float %1 Fma %6673 %6677 %6680
       %6682 = OpExtInst %float %1 Floor %6678
       %6683 = OpFNegate %float %6682
       %6684 = OpExtInst %float %1 Fma %6672 %6677 %6683
       %6685 = OpExtInst %float %1 Fma %6684 %float_2097152 %6681
       %6686 = OpExtInst %float %1 Floor %6685
       %6687 = OpFMul %float %6682 %float_n6_28318548
       %6688 = OpExtInst %float %1 Fma %6678 %float_6_28318548 %6687
       %6689 = OpFMul %float %6686 %float_n6_28318548
       %6690 = OpExtInst %float %1 Fma %6681 %float_6_28318548 %6689
       %6691 = OpExtInst %float %1 Fma %6688 %float_2097152 %6690
       %6692 = OpFMul %float %6523 %2732
       %6693 = OpExtInst %float %1 Sin %6691
       %6694 = OpFMul %float %6693 %6692
       %6695 = OpFAdd %v3float %6659 %2560
       %6696 = OpExtInst %v3float %1 NMax %6695 %278
       %6697 = OpExtInst %v3float %1 NMin %6696 %127
       %6698 = OpCompositeExtract %float %6697 0
       %6699 = OpCompositeExtract %float %6697 1
       %6700 = OpCompositeConstruct %v2float %6698 %6699
       %6701 = OpFMul %v2float %1695 %6700
       %6702 = OpFMul %v2float %6700 %1696
       %6703 = OpCompositeExtract %float %6701 0
       %6704 = OpCompositeExtract %float %6702 0
       %6705 = OpCompositeExtract %float %6701 1
       %6706 = OpCompositeExtract %float %6702 1
       %6707 = OpFAdd %float %6703 %6705
       %6708 = OpFAdd %float %6704 %6706
       %6709 = OpFMul %float %6676 %4447
       %6710 = OpFDiv %float %float_2 %6709
       %6711 = OpFMul %float %6707 %6710
       %6712 = OpFMul %float %6710 %4632
       %6713 = OpFMul %float %6712 %5982
       %6714 = OpExtInst %float %1 Fma %6708 %6710 %6713
       %6715 = OpExtInst %float %1 Floor %6711
       %6716 = OpFNegate %float %6715
       %6717 = OpExtInst %float %1 Fma %6707 %6710 %6716
       %6718 = OpExtInst %float %1 Fma %6717 %float_2097152 %6714
       %6719 = OpExtInst %float %1 Floor %6718
       %6720 = OpFMul %float %6715 %float_n6_28318548
       %6721 = OpExtInst %float %1 Fma %6711 %float_6_28318548 %6720
       %6722 = OpFMul %float %6719 %float_n6_28318548
       %6723 = OpExtInst %float %1 Fma %6714 %float_6_28318548 %6722
       %6724 = OpExtInst %float %1 Fma %6721 %float_2097152 %6723
       %6725 = OpFMul %float %6692 %2593
       %6726 = OpExtInst %float %1 Sin %6724
       %6727 = OpFMul %float %6726 %6725
       %6728 = OpCompositeConstruct %v3float %549 %549 %6694
       %6729 = OpCompositeConstruct %v3float %549 %549 %6727
       %6730 = OpFAdd %v3float %6728 %6729
       %6731 = OpFSub %v3float %6659 %1687
       %6732 = OpExtInst %v3float %1 NMax %6731 %278
       %6733 = OpExtInst %v3float %1 NMin %6732 %127
       %6734 = OpCompositeExtract %float %6733 0
       %6735 = OpCompositeExtract %float %6733 1
       %6736 = OpCompositeConstruct %v2float %6734 %6735
       %6737 = OpFMul %v2float %1695 %6736
       %6738 = OpFMul %v2float %6736 %1696
       %6739 = OpCompositeExtract %float %6737 0
       %6740 = OpCompositeExtract %float %6738 0
       %6741 = OpCompositeExtract %float %6737 1
       %6742 = OpCompositeExtract %float %6738 1
       %6743 = OpFAdd %float %6739 %6741
       %6744 = OpFAdd %float %6740 %6742
       %6745 = OpFMul %float %6709 %4447
       %6746 = OpFDiv %float %float_2 %6745
       %6747 = OpFMul %float %6743 %6746
       %6748 = OpFMul %float %6746 %4670
       %6749 = OpFMul %float %6748 %5982
       %6750 = OpExtInst %float %1 Fma %6744 %6746 %6749
       %6751 = OpExtInst %float %1 Floor %6747
       %6752 = OpFNegate %float %6751
       %6753 = OpExtInst %float %1 Fma %6743 %6746 %6752
       %6754 = OpExtInst %float %1 Fma %6753 %float_2097152 %6750
       %6755 = OpExtInst %float %1 Floor %6754
       %6756 = OpFMul %float %6751 %float_n6_28318548
       %6757 = OpExtInst %float %1 Fma %6747 %float_6_28318548 %6756
       %6758 = OpFMul %float %6755 %float_n6_28318548
       %6759 = OpExtInst %float %1 Fma %6750 %float_6_28318548 %6758
       %6760 = OpExtInst %float %1 Fma %6757 %float_2097152 %6759
       %6761 = OpFMul %float %6725 %2593
       %6762 = OpExtInst %float %1 Sin %6760
       %6763 = OpFMul %float %6762 %6761
       %6764 = OpCompositeConstruct %v3float %549 %549 %6763
       %6765 = OpFAdd %v3float %6730 %6764
       %6766 = OpFSub %v3float %6659 %2560
       %6767 = OpExtInst %v3float %1 NMax %6766 %278
       %6768 = OpExtInst %v3float %1 NMin %6767 %127
       %6769 = OpCompositeExtract %float %6768 0
       %6770 = OpCompositeExtract %float %6768 1
       %6771 = OpCompositeConstruct %v2float %6769 %6770
       %6772 = OpFMul %v2float %1695 %6771
       %6773 = OpFMul %v2float %6771 %1696
       %6774 = OpCompositeExtract %float %6772 0
       %6775 = OpCompositeExtract %float %6773 0
       %6776 = OpCompositeExtract %float %6772 1
       %6777 = OpCompositeExtract %float %6773 1
       %6778 = OpFAdd %float %6774 %6776
       %6779 = OpFAdd %float %6775 %6777
       %6780 = OpFMul %float %6745 %4447
       %6781 = OpFDiv %float %float_2 %6780
       %6782 = OpFMul %float %6778 %6781
       %6783 = OpFMul %float %6781 %4707
       %6784 = OpFMul %float %6783 %5982
       %6785 = OpExtInst %float %1 Fma %6779 %6781 %6784
       %6786 = OpExtInst %float %1 Floor %6782
       %6787 = OpFNegate %float %6786
       %6788 = OpExtInst %float %1 Fma %6778 %6781 %6787
       %6789 = OpExtInst %float %1 Fma %6788 %float_2097152 %6785
       %6790 = OpExtInst %float %1 Floor %6789
       %6791 = OpFMul %float %6786 %float_n6_28318548
       %6792 = OpExtInst %float %1 Fma %6782 %float_6_28318548 %6791
       %6793 = OpFMul %float %6790 %float_n6_28318548
       %6794 = OpExtInst %float %1 Fma %6785 %float_6_28318548 %6793
       %6795 = OpExtInst %float %1 Fma %6792 %float_2097152 %6794
       %6796 = OpFMul %float %6761 %2593
       %6797 = OpExtInst %float %1 Sin %6795
       %6798 = OpFMul %float %6797 %6796
       %6799 = OpCompositeConstruct %v3float %549 %549 %6798
       %6800 = OpFAdd %v3float %6765 %6799
       %6801 = OpFAdd %v3float %6631 %6800
       %6802 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_0
       %6803 = OpLoad %float %6802
       %6804 = OpFSub %float %6803 %float_n1
       %6805 = OpExtInst %float %1 FAbs %6804
       %6806 = OpFOrdGreaterThan %bool %6805 %float_9_99999975en06
       %6807 = OpFOrdGreaterThanEqual %bool %6803 %float_n1
       %6808 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_1
       %6809 = OpLoad %float %6808
       %6810 = OpSelect %float %6807 %6803 %6809
       %6811 = OpSelect %float %6806 %6810 %6803
       %6812 = OpFSub %float %6811 %float_1
       %6813 = OpExtInst %float %1 FAbs %6812
       %6814 = OpFOrdGreaterThan %bool %6813 %float_9_99999975en06
       %6815 = OpFOrdGreaterThanEqual %bool %6811 %float_1
       %6816 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_2
       %6817 = OpLoad %float %6816
       %6818 = OpSelect %float %6815 %6817 %6803
       %6819 = OpSelect %float %6814 %6818 %6803
       %6820 = OpExtInst %float %1 FAbs %6819
       %6821 = OpFOrdGreaterThan %bool %6820 %float_9_99999975en06
       %6822 = OpFOrdGreaterThanEqual %bool %6819 %float_0
       %6823 = OpSelect %float %6822 %float_1 %float_n1
       %6824 = OpSelect %float %6821 %6823 %float_1
       %6825 = OpExtInst %float %1 NMax %6824 %float_n1
       %6826 = OpExtInst %float %1 NMin %6825 %float_1
       %6827 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_88 %int_3
       %6828 = OpLoad %float %6827
       %6829 = OpCompositeConstruct %v3float %6826 %6828 %float_0
       %6830 = OpFAdd %v3float %6829 %1687
       %6831 = OpExtInst %v3float %1 NMax %6830 %278
       %6832 = OpExtInst %v3float %1 NMin %6831 %127
       %6833 = OpCompositeExtract %float %6832 0
       %6834 = OpCompositeExtract %float %6832 1
       %6835 = OpCompositeConstruct %v2float %6833 %6834
       %6836 = OpFMul %v2float %1695 %6835
       %6837 = OpFMul %v2float %6835 %1696
       %6838 = OpCompositeExtract %float %6836 0
       %6839 = OpCompositeExtract %float %6837 0
       %6840 = OpCompositeExtract %float %6836 1
       %6841 = OpCompositeExtract %float %6837 1
       %6842 = OpFAdd %float %6838 %6840
       %6843 = OpFAdd %float %6839 %6841
       %6844 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_0
       %6845 = OpLoad %float %6844
       %6846 = OpFMul %float %6845 %4590
       %6847 = OpFDiv %float %float_2 %6846
       %6848 = OpFMul %float %6842 %6847
       %6849 = OpFMul %float %6847 %4597
       %6850 = OpFMul %float %6849 %5982
       %6851 = OpExtInst %float %1 Fma %6843 %6847 %6850
       %6852 = OpExtInst %float %1 Floor %6848
       %6853 = OpFNegate %float %6852
       %6854 = OpExtInst %float %1 Fma %6842 %6847 %6853
       %6855 = OpExtInst %float %1 Fma %6854 %float_2097152 %6851
       %6856 = OpExtInst %float %1 Floor %6855
       %6857 = OpFMul %float %6852 %float_n6_28318548
       %6858 = OpExtInst %float %1 Fma %6848 %float_6_28318548 %6857
       %6859 = OpFMul %float %6856 %float_n6_28318548
       %6860 = OpExtInst %float %1 Fma %6851 %float_6_28318548 %6859
       %6861 = OpExtInst %float %1 Fma %6858 %float_2097152 %6860
       %6862 = OpExtInst %float %1 Sin %6861
       %6863 = OpFMul %float %6862 %6692
       %6864 = OpFAdd %v3float %6829 %2560
       %6865 = OpExtInst %v3float %1 NMax %6864 %278
       %6866 = OpExtInst %v3float %1 NMin %6865 %127
       %6867 = OpCompositeExtract %float %6866 0
       %6868 = OpCompositeExtract %float %6866 1
       %6869 = OpCompositeConstruct %v2float %6867 %6868
       %6870 = OpFMul %v2float %1695 %6869
       %6871 = OpFMul %v2float %6869 %1696
       %6872 = OpCompositeExtract %float %6870 0
       %6873 = OpCompositeExtract %float %6871 0
       %6874 = OpCompositeExtract %float %6870 1
       %6875 = OpCompositeExtract %float %6871 1
       %6876 = OpFAdd %float %6872 %6874
       %6877 = OpFAdd %float %6873 %6875
       %6878 = OpFMul %float %6846 %4447
       %6879 = OpFDiv %float %float_2 %6878
       %6880 = OpFMul %float %6876 %6879
       %6881 = OpFMul %float %6879 %4632
       %6882 = OpFMul %float %6881 %5982
       %6883 = OpExtInst %float %1 Fma %6877 %6879 %6882
       %6884 = OpExtInst %float %1 Floor %6880
       %6885 = OpFNegate %float %6884
       %6886 = OpExtInst %float %1 Fma %6876 %6879 %6885
       %6887 = OpExtInst %float %1 Fma %6886 %float_2097152 %6883
       %6888 = OpExtInst %float %1 Floor %6887
       %6889 = OpFMul %float %6884 %float_n6_28318548
       %6890 = OpExtInst %float %1 Fma %6880 %float_6_28318548 %6889
       %6891 = OpFMul %float %6888 %float_n6_28318548
       %6892 = OpExtInst %float %1 Fma %6883 %float_6_28318548 %6891
       %6893 = OpExtInst %float %1 Fma %6890 %float_2097152 %6892
       %6894 = OpExtInst %float %1 Sin %6893
       %6895 = OpFMul %float %6894 %6725
       %6896 = OpCompositeConstruct %v3float %549 %549 %6863
       %6897 = OpCompositeConstruct %v3float %549 %549 %6895
       %6898 = OpFAdd %v3float %6896 %6897
       %6899 = OpFSub %v3float %6829 %1687
       %6900 = OpExtInst %v3float %1 NMax %6899 %278
       %6901 = OpExtInst %v3float %1 NMin %6900 %127
       %6902 = OpCompositeExtract %float %6901 0
       %6903 = OpCompositeExtract %float %6901 1
       %6904 = OpCompositeConstruct %v2float %6902 %6903
       %6905 = OpFMul %v2float %1695 %6904
       %6906 = OpFMul %v2float %6904 %1696
       %6907 = OpCompositeExtract %float %6905 0
       %6908 = OpCompositeExtract %float %6906 0
       %6909 = OpCompositeExtract %float %6905 1
       %6910 = OpCompositeExtract %float %6906 1
       %6911 = OpFAdd %float %6907 %6909
       %6912 = OpFAdd %float %6908 %6910
       %6913 = OpFMul %float %6878 %4447
       %6914 = OpFDiv %float %float_2 %6913
       %6915 = OpFMul %float %6911 %6914
       %6916 = OpFMul %float %6914 %4670
       %6917 = OpFMul %float %6916 %5982
       %6918 = OpExtInst %float %1 Fma %6912 %6914 %6917
       %6919 = OpExtInst %float %1 Floor %6915
       %6920 = OpFNegate %float %6919
       %6921 = OpExtInst %float %1 Fma %6911 %6914 %6920
       %6922 = OpExtInst %float %1 Fma %6921 %float_2097152 %6918
       %6923 = OpExtInst %float %1 Floor %6922
       %6924 = OpFMul %float %6919 %float_n6_28318548
       %6925 = OpExtInst %float %1 Fma %6915 %float_6_28318548 %6924
       %6926 = OpFMul %float %6923 %float_n6_28318548
       %6927 = OpExtInst %float %1 Fma %6918 %float_6_28318548 %6926
       %6928 = OpExtInst %float %1 Fma %6925 %float_2097152 %6927
       %6929 = OpExtInst %float %1 Sin %6928
       %6930 = OpFMul %float %6929 %6761
       %6931 = OpCompositeConstruct %v3float %549 %549 %6930
       %6932 = OpFAdd %v3float %6898 %6931
       %6933 = OpFSub %v3float %6829 %2560
       %6934 = OpExtInst %v3float %1 NMax %6933 %278
       %6935 = OpExtInst %v3float %1 NMin %6934 %127
       %6936 = OpCompositeExtract %float %6935 0
       %6937 = OpCompositeExtract %float %6935 1
       %6938 = OpCompositeConstruct %v2float %6936 %6937
       %6939 = OpFMul %v2float %1695 %6938
       %6940 = OpFMul %v2float %6938 %1696
       %6941 = OpCompositeExtract %float %6939 0
       %6942 = OpCompositeExtract %float %6940 0
       %6943 = OpCompositeExtract %float %6939 1
       %6944 = OpCompositeExtract %float %6940 1
       %6945 = OpFAdd %float %6941 %6943
       %6946 = OpFAdd %float %6942 %6944
       %6947 = OpFMul %float %6913 %4447
       %6948 = OpFDiv %float %float_2 %6947
       %6949 = OpFMul %float %6945 %6948
       %6950 = OpFMul %float %6948 %4707
       %6951 = OpFMul %float %6950 %5982
       %6952 = OpExtInst %float %1 Fma %6946 %6948 %6951
       %6953 = OpExtInst %float %1 Floor %6949
       %6954 = OpFNegate %float %6953
       %6955 = OpExtInst %float %1 Fma %6945 %6948 %6954
       %6956 = OpExtInst %float %1 Fma %6955 %float_2097152 %6952
       %6957 = OpExtInst %float %1 Floor %6956
       %6958 = OpFMul %float %6953 %float_n6_28318548
       %6959 = OpExtInst %float %1 Fma %6949 %float_6_28318548 %6958
       %6960 = OpFMul %float %6957 %float_n6_28318548
       %6961 = OpExtInst %float %1 Fma %6952 %float_6_28318548 %6960
       %6962 = OpExtInst %float %1 Fma %6959 %float_2097152 %6961
       %6963 = OpExtInst %float %1 Sin %6962
       %6964 = OpFMul %float %6963 %6796
       %6965 = OpCompositeConstruct %v3float %549 %549 %6964
       %6966 = OpFAdd %v3float %6932 %6965
       %6967 = OpFAdd %v3float %6801 %6966
       %6968 = OpFMul %float %3565 %float_8
       %6969 = OpFMul %float %5710 %6968
       %6970 = OpFDiv %float %float_2 %6969
       %6971 = OpFMul %float %5707 %6970
       %6972 = OpFMul %float %6970 %4898
       %6973 = OpFMul %float %6972 %5982
       %6974 = OpExtInst %float %1 Fma %5708 %6970 %6973
       %6975 = OpExtInst %float %1 Floor %6971
       %6976 = OpFNegate %float %6975
       %6977 = OpExtInst %float %1 Fma %5707 %6970 %6976
       %6978 = OpExtInst %float %1 Fma %6977 %float_2097152 %6974
       %6979 = OpExtInst %float %1 Floor %6978
       %6980 = OpFMul %float %6975 %float_n6_28318548
       %6981 = OpExtInst %float %1 Fma %6971 %float_6_28318548 %6980
       %6982 = OpFMul %float %6979 %float_n6_28318548
       %6983 = OpExtInst %float %1 Fma %6974 %float_6_28318548 %6982
       %6984 = OpExtInst %float %1 Fma %6981 %float_2097152 %6983
       %6985 = OpFMul %float %6523 %float_8
       %6986 = OpExtInst %float %1 Sin %6984
       %6987 = OpFMul %float %6986 %6985
       %6988 = OpFMul %float %6969 %4447
       %6989 = OpFDiv %float %float_2 %6988
       %6990 = OpFMul %float %6538 %6989
       %6991 = OpFMul %float %6989 %4919
       %6992 = OpFMul %float %6991 %5982
       %6993 = OpExtInst %float %1 Fma %6539 %6989 %6992
       %6994 = OpExtInst %float %1 Floor %6990
       %6995 = OpFNegate %float %6994
       %6996 = OpExtInst %float %1 Fma %6538 %6989 %6995
       %6997 = OpExtInst %float %1 Fma %6996 %float_2097152 %6993
       %6998 = OpExtInst %float %1 Floor %6997
       %6999 = OpFMul %float %6994 %float_n6_28318548
       %7000 = OpExtInst %float %1 Fma %6990 %float_6_28318548 %6999
       %7001 = OpFMul %float %6998 %float_n6_28318548
       %7002 = OpExtInst %float %1 Fma %6993 %float_6_28318548 %7001
       %7003 = OpExtInst %float %1 Fma %7000 %float_2097152 %7002
       %7004 = OpFMul %float %6985 %2593
       %7005 = OpExtInst %float %1 Sin %7003
       %7006 = OpFMul %float %7005 %7004
       %7007 = OpCompositeConstruct %v3float %549 %549 %6987
       %7008 = OpCompositeConstruct %v3float %549 %549 %7006
       %7009 = OpFAdd %v3float %7007 %7008
       %7010 = OpFMul %float %6988 %4447
       %7011 = OpFDiv %float %float_2 %7010
       %7012 = OpFMul %float %6574 %7011
       %7013 = OpFMul %float %7011 %4943
       %7014 = OpFMul %float %7013 %5982
       %7015 = OpExtInst %float %1 Fma %6575 %7011 %7014
       %7016 = OpExtInst %float %1 Floor %7012
       %7017 = OpFNegate %float %7016
       %7018 = OpExtInst %float %1 Fma %6574 %7011 %7017
       %7019 = OpExtInst %float %1 Fma %7018 %float_2097152 %7015
       %7020 = OpExtInst %float %1 Floor %7019
       %7021 = OpFMul %float %7016 %float_n6_28318548
       %7022 = OpExtInst %float %1 Fma %7012 %float_6_28318548 %7021
       %7023 = OpFMul %float %7020 %float_n6_28318548
       %7024 = OpExtInst %float %1 Fma %7015 %float_6_28318548 %7023
       %7025 = OpExtInst %float %1 Fma %7022 %float_2097152 %7024
       %7026 = OpFMul %float %7004 %2593
       %7027 = OpExtInst %float %1 Sin %7025
       %7028 = OpFMul %float %7027 %7026
       %7029 = OpCompositeConstruct %v3float %549 %549 %7028
       %7030 = OpFAdd %v3float %7009 %7029
       %7031 = OpFMul %float %7010 %4447
       %7032 = OpFDiv %float %float_2 %7031
       %7033 = OpFMul %float %6609 %7032
       %7034 = OpFMul %float %7032 %4966
       %7035 = OpFMul %float %7034 %5982
       %7036 = OpExtInst %float %1 Fma %6610 %7032 %7035
       %7037 = OpExtInst %float %1 Floor %7033
       %7038 = OpFNegate %float %7037
       %7039 = OpExtInst %float %1 Fma %6609 %7032 %7038
       %7040 = OpExtInst %float %1 Fma %7039 %float_2097152 %7036
       %7041 = OpExtInst %float %1 Floor %7040
       %7042 = OpFMul %float %7037 %float_n6_28318548
       %7043 = OpExtInst %float %1 Fma %7033 %float_6_28318548 %7042
       %7044 = OpFMul %float %7041 %float_n6_28318548
       %7045 = OpExtInst %float %1 Fma %7036 %float_6_28318548 %7044
       %7046 = OpExtInst %float %1 Fma %7043 %float_2097152 %7045
       %7047 = OpFMul %float %7026 %2593
       %7048 = OpExtInst %float %1 Sin %7046
       %7049 = OpFMul %float %7048 %7047
       %7050 = OpCompositeConstruct %v3float %549 %549 %7049
       %7051 = OpFAdd %v3float %7030 %7050
       %7052 = OpFMul %float %6968 %4589
       %7053 = OpFMul %float %6675 %7052
       %7054 = OpFDiv %float %float_2 %7053
       %7055 = OpFMul %float %6672 %7054
       %7056 = OpFMul %float %7054 %4990
       %7057 = OpFMul %float %7056 %5982
       %7058 = OpExtInst %float %1 Fma %6673 %7054 %7057
       %7059 = OpExtInst %float %1 Floor %7055
       %7060 = OpFNegate %float %7059
       %7061 = OpExtInst %float %1 Fma %6672 %7054 %7060
       %7062 = OpExtInst %float %1 Fma %7061 %float_2097152 %7058
       %7063 = OpExtInst %float %1 Floor %7062
       %7064 = OpFMul %float %7059 %float_n6_28318548
       %7065 = OpExtInst %float %1 Fma %7055 %float_6_28318548 %7064
       %7066 = OpFMul %float %7063 %float_n6_28318548
       %7067 = OpExtInst %float %1 Fma %7058 %float_6_28318548 %7066
       %7068 = OpExtInst %float %1 Fma %7065 %float_2097152 %7067
       %7069 = OpFMul %float %6985 %2732
       %7070 = OpExtInst %float %1 Sin %7068
       %7071 = OpFMul %float %7070 %7069
       %7072 = OpFMul %float %7053 %4447
       %7073 = OpFDiv %float %float_2 %7072
       %7074 = OpFMul %float %6707 %7073
       %7075 = OpFMul %float %7073 %5011
       %7076 = OpFMul %float %7075 %5982
       %7077 = OpExtInst %float %1 Fma %6708 %7073 %7076
       %7078 = OpExtInst %float %1 Floor %7074
       %7079 = OpFNegate %float %7078
       %7080 = OpExtInst %float %1 Fma %6707 %7073 %7079
       %7081 = OpExtInst %float %1 Fma %7080 %float_2097152 %7077
       %7082 = OpExtInst %float %1 Floor %7081
       %7083 = OpFMul %float %7078 %float_n6_28318548
       %7084 = OpExtInst %float %1 Fma %7074 %float_6_28318548 %7083
       %7085 = OpFMul %float %7082 %float_n6_28318548
       %7086 = OpExtInst %float %1 Fma %7077 %float_6_28318548 %7085
       %7087 = OpExtInst %float %1 Fma %7084 %float_2097152 %7086
       %7088 = OpFMul %float %7069 %2593
       %7089 = OpExtInst %float %1 Sin %7087
       %7090 = OpFMul %float %7089 %7088
       %7091 = OpCompositeConstruct %v3float %549 %549 %7071
       %7092 = OpCompositeConstruct %v3float %549 %549 %7090
       %7093 = OpFAdd %v3float %7091 %7092
       %7094 = OpFMul %float %7072 %4447
       %7095 = OpFDiv %float %float_2 %7094
       %7096 = OpFMul %float %6743 %7095
       %7097 = OpFMul %float %7095 %5035
       %7098 = OpFMul %float %7097 %5982
       %7099 = OpExtInst %float %1 Fma %6744 %7095 %7098
       %7100 = OpExtInst %float %1 Floor %7096
       %7101 = OpFNegate %float %7100
       %7102 = OpExtInst %float %1 Fma %6743 %7095 %7101
       %7103 = OpExtInst %float %1 Fma %7102 %float_2097152 %7099
       %7104 = OpExtInst %float %1 Floor %7103
       %7105 = OpFMul %float %7100 %float_n6_28318548
       %7106 = OpExtInst %float %1 Fma %7096 %float_6_28318548 %7105
       %7107 = OpFMul %float %7104 %float_n6_28318548
       %7108 = OpExtInst %float %1 Fma %7099 %float_6_28318548 %7107
       %7109 = OpExtInst %float %1 Fma %7106 %float_2097152 %7108
       %7110 = OpFMul %float %7088 %2593
       %7111 = OpExtInst %float %1 Sin %7109
       %7112 = OpFMul %float %7111 %7110
       %7113 = OpCompositeConstruct %v3float %549 %549 %7112
       %7114 = OpFAdd %v3float %7093 %7113
       %7115 = OpFMul %float %7094 %4447
       %7116 = OpFDiv %float %float_2 %7115
       %7117 = OpFMul %float %6778 %7116
       %7118 = OpFMul %float %7116 %5058
       %7119 = OpFMul %float %7118 %5982
       %7120 = OpExtInst %float %1 Fma %6779 %7116 %7119
       %7121 = OpExtInst %float %1 Floor %7117
       %7122 = OpFNegate %float %7121
       %7123 = OpExtInst %float %1 Fma %6778 %7116 %7122
       %7124 = OpExtInst %float %1 Fma %7123 %float_2097152 %7120
       %7125 = OpExtInst %float %1 Floor %7124
       %7126 = OpFMul %float %7121 %float_n6_28318548
       %7127 = OpExtInst %float %1 Fma %7117 %float_6_28318548 %7126
       %7128 = OpFMul %float %7125 %float_n6_28318548
       %7129 = OpExtInst %float %1 Fma %7120 %float_6_28318548 %7128
       %7130 = OpExtInst %float %1 Fma %7127 %float_2097152 %7129
       %7131 = OpFMul %float %7110 %2593
       %7132 = OpExtInst %float %1 Sin %7130
       %7133 = OpFMul %float %7132 %7131
       %7134 = OpCompositeConstruct %v3float %549 %549 %7133
       %7135 = OpFAdd %v3float %7114 %7134
       %7136 = OpFAdd %v3float %7051 %7135
       %7137 = OpFMul %float %6845 %7052
       %7138 = OpFDiv %float %float_2 %7137
       %7139 = OpFMul %float %6842 %7138
       %7140 = OpFMul %float %7138 %4990
       %7141 = OpFMul %float %7140 %5982
       %7142 = OpExtInst %float %1 Fma %6843 %7138 %7141
       %7143 = OpExtInst %float %1 Floor %7139
       %7144 = OpFNegate %float %7143
       %7145 = OpExtInst %float %1 Fma %6842 %7138 %7144
       %7146 = OpExtInst %float %1 Fma %7145 %float_2097152 %7142
       %7147 = OpExtInst %float %1 Floor %7146
       %7148 = OpFMul %float %7143 %float_n6_28318548
       %7149 = OpExtInst %float %1 Fma %7139 %float_6_28318548 %7148
       %7150 = OpFMul %float %7147 %float_n6_28318548
       %7151 = OpExtInst %float %1 Fma %7142 %float_6_28318548 %7150
       %7152 = OpExtInst %float %1 Fma %7149 %float_2097152 %7151
       %7153 = OpExtInst %float %1 Sin %7152
       %7154 = OpFMul %float %7153 %7069
       %7155 = OpFMul %float %7137 %4447
       %7156 = OpFDiv %float %float_2 %7155
       %7157 = OpFMul %float %6876 %7156
       %7158 = OpFMul %float %7156 %5011
       %7159 = OpFMul %float %7158 %5982
       %7160 = OpExtInst %float %1 Fma %6877 %7156 %7159
       %7161 = OpExtInst %float %1 Floor %7157
       %7162 = OpFNegate %float %7161
       %7163 = OpExtInst %float %1 Fma %6876 %7156 %7162
       %7164 = OpExtInst %float %1 Fma %7163 %float_2097152 %7160
       %7165 = OpExtInst %float %1 Floor %7164
       %7166 = OpFMul %float %7161 %float_n6_28318548
       %7167 = OpExtInst %float %1 Fma %7157 %float_6_28318548 %7166
       %7168 = OpFMul %float %7165 %float_n6_28318548
       %7169 = OpExtInst %float %1 Fma %7160 %float_6_28318548 %7168
       %7170 = OpExtInst %float %1 Fma %7167 %float_2097152 %7169
       %7171 = OpExtInst %float %1 Sin %7170
       %7172 = OpFMul %float %7171 %7088
       %7173 = OpCompositeConstruct %v3float %549 %549 %7154
       %7174 = OpCompositeConstruct %v3float %549 %549 %7172
       %7175 = OpFAdd %v3float %7173 %7174
       %7176 = OpFMul %float %7155 %4447
       %7177 = OpFDiv %float %float_2 %7176
       %7178 = OpFMul %float %6911 %7177
       %7179 = OpFMul %float %7177 %5035
       %7180 = OpFMul %float %7179 %5982
       %7181 = OpExtInst %float %1 Fma %6912 %7177 %7180
       %7182 = OpExtInst %float %1 Floor %7178
       %7183 = OpFNegate %float %7182
       %7184 = OpExtInst %float %1 Fma %6911 %7177 %7183
       %7185 = OpExtInst %float %1 Fma %7184 %float_2097152 %7181
       %7186 = OpExtInst %float %1 Floor %7185
       %7187 = OpFMul %float %7182 %float_n6_28318548
       %7188 = OpExtInst %float %1 Fma %7178 %float_6_28318548 %7187
       %7189 = OpFMul %float %7186 %float_n6_28318548
       %7190 = OpExtInst %float %1 Fma %7181 %float_6_28318548 %7189
       %7191 = OpExtInst %float %1 Fma %7188 %float_2097152 %7190
       %7192 = OpExtInst %float %1 Sin %7191
       %7193 = OpFMul %float %7192 %7110
       %7194 = OpCompositeConstruct %v3float %549 %549 %7193
       %7195 = OpFAdd %v3float %7175 %7194
       %7196 = OpFMul %float %7176 %4447
       %7197 = OpFDiv %float %float_2 %7196
       %7198 = OpFMul %float %6945 %7197
       %7199 = OpFMul %float %7197 %5058
       %7200 = OpFMul %float %7199 %5982
       %7201 = OpExtInst %float %1 Fma %6946 %7197 %7200
       %7202 = OpExtInst %float %1 Floor %7198
       %7203 = OpFNegate %float %7202
       %7204 = OpExtInst %float %1 Fma %6945 %7197 %7203
       %7205 = OpExtInst %float %1 Fma %7204 %float_2097152 %7201
       %7206 = OpExtInst %float %1 Floor %7205
       %7207 = OpFMul %float %7202 %float_n6_28318548
       %7208 = OpExtInst %float %1 Fma %7198 %float_6_28318548 %7207
       %7209 = OpFMul %float %7206 %float_n6_28318548
       %7210 = OpExtInst %float %1 Fma %7201 %float_6_28318548 %7209
       %7211 = OpExtInst %float %1 Fma %7208 %float_2097152 %7210
       %7212 = OpExtInst %float %1 Sin %7211
       %7213 = OpFMul %float %7212 %7131
       %7214 = OpCompositeConstruct %v3float %549 %549 %7213
       %7215 = OpFAdd %v3float %7195 %7214
       %7216 = OpFAdd %v3float %7136 %7215
       %7217 = OpFMul %float %5710 %5158
       %7218 = OpFDiv %float %float_2 %7217
       %7219 = OpFMul %float %5707 %7218
       %7220 = OpFMul %float %7218 %5163
       %7221 = OpFMul %float %7220 %5982
       %7222 = OpExtInst %float %1 Fma %5708 %7218 %7221
       %7223 = OpExtInst %float %1 Floor %7219
       %7224 = OpFNegate %float %7223
       %7225 = OpExtInst %float %1 Fma %5707 %7218 %7224
       %7226 = OpExtInst %float %1 Fma %7225 %float_2097152 %7222
       %7227 = OpExtInst %float %1 Floor %7226
       %7228 = OpFMul %float %7223 %float_n6_28318548
       %7229 = OpExtInst %float %1 Fma %7219 %float_6_28318548 %7228
       %7230 = OpFMul %float %7227 %float_n6_28318548
       %7231 = OpExtInst %float %1 Fma %7222 %float_6_28318548 %7230
       %7232 = OpExtInst %float %1 Fma %7229 %float_2097152 %7231
       %7233 = OpFMul %float %6523 %float_4
       %7234 = OpExtInst %float %1 Sin %7232
       %7235 = OpFMul %float %7234 %7233
       %7236 = OpFMul %float %7217 %4447
       %7237 = OpFDiv %float %float_2 %7236
       %7238 = OpFMul %float %6538 %7237
       %7239 = OpFMul %float %7237 %5183
       %7240 = OpFMul %float %7239 %5982
       %7241 = OpExtInst %float %1 Fma %6539 %7237 %7240
       %7242 = OpExtInst %float %1 Floor %7238
       %7243 = OpFNegate %float %7242
       %7244 = OpExtInst %float %1 Fma %6538 %7237 %7243
       %7245 = OpExtInst %float %1 Fma %7244 %float_2097152 %7241
       %7246 = OpExtInst %float %1 Floor %7245
       %7247 = OpFMul %float %7242 %float_n6_28318548
       %7248 = OpExtInst %float %1 Fma %7238 %float_6_28318548 %7247
       %7249 = OpFMul %float %7246 %float_n6_28318548
       %7250 = OpExtInst %float %1 Fma %7241 %float_6_28318548 %7249
       %7251 = OpExtInst %float %1 Fma %7248 %float_2097152 %7250
       %7252 = OpFMul %float %7233 %2593
       %7253 = OpExtInst %float %1 Sin %7251
       %7254 = OpFMul %float %7253 %7252
       %7255 = OpCompositeConstruct %v3float %549 %549 %7235
       %7256 = OpCompositeConstruct %v3float %549 %549 %7254
       %7257 = OpFAdd %v3float %7255 %7256
       %7258 = OpFMul %float %7236 %4447
       %7259 = OpFDiv %float %float_2 %7258
       %7260 = OpFMul %float %6574 %7259
       %7261 = OpFMul %float %7259 %5206
       %7262 = OpFMul %float %7261 %5982
       %7263 = OpExtInst %float %1 Fma %6575 %7259 %7262
       %7264 = OpExtInst %float %1 Floor %7260
       %7265 = OpFNegate %float %7264
       %7266 = OpExtInst %float %1 Fma %6574 %7259 %7265
       %7267 = OpExtInst %float %1 Fma %7266 %float_2097152 %7263
       %7268 = OpExtInst %float %1 Floor %7267
       %7269 = OpFMul %float %7264 %float_n6_28318548
       %7270 = OpExtInst %float %1 Fma %7260 %float_6_28318548 %7269
       %7271 = OpFMul %float %7268 %float_n6_28318548
       %7272 = OpExtInst %float %1 Fma %7263 %float_6_28318548 %7271
       %7273 = OpExtInst %float %1 Fma %7270 %float_2097152 %7272
       %7274 = OpFMul %float %7252 %2593
       %7275 = OpExtInst %float %1 Sin %7273
       %7276 = OpFMul %float %7275 %7274
       %7277 = OpCompositeConstruct %v3float %549 %549 %7276
       %7278 = OpFAdd %v3float %7257 %7277
       %7279 = OpFMul %float %7258 %4447
       %7280 = OpFDiv %float %float_2 %7279
       %7281 = OpFMul %float %6609 %7280
       %7282 = OpFMul %float %7280 %5228
       %7283 = OpFMul %float %7282 %5982
       %7284 = OpExtInst %float %1 Fma %6610 %7280 %7283
       %7285 = OpExtInst %float %1 Floor %7281
       %7286 = OpFNegate %float %7285
       %7287 = OpExtInst %float %1 Fma %6609 %7280 %7286
       %7288 = OpExtInst %float %1 Fma %7287 %float_2097152 %7284
       %7289 = OpExtInst %float %1 Floor %7288
       %7290 = OpFMul %float %7285 %float_n6_28318548
       %7291 = OpExtInst %float %1 Fma %7281 %float_6_28318548 %7290
       %7292 = OpFMul %float %7289 %float_n6_28318548
       %7293 = OpExtInst %float %1 Fma %7284 %float_6_28318548 %7292
       %7294 = OpExtInst %float %1 Fma %7291 %float_2097152 %7293
       %7295 = OpFMul %float %7274 %2593
       %7296 = OpExtInst %float %1 Sin %7294
       %7297 = OpFMul %float %7296 %7295
       %7298 = OpCompositeConstruct %v3float %549 %549 %7297
       %7299 = OpFAdd %v3float %7278 %7298
       %7300 = OpFMul %float %6675 %5246
       %7301 = OpFDiv %float %float_2 %7300
       %7302 = OpFMul %float %6672 %7301
       %7303 = OpFMul %float %7301 %5251
       %7304 = OpFMul %float %7303 %5982
       %7305 = OpExtInst %float %1 Fma %6673 %7301 %7304
       %7306 = OpExtInst %float %1 Floor %7302
       %7307 = OpFNegate %float %7306
       %7308 = OpExtInst %float %1 Fma %6672 %7301 %7307
       %7309 = OpExtInst %float %1 Fma %7308 %float_2097152 %7305
       %7310 = OpExtInst %float %1 Floor %7309
       %7311 = OpFMul %float %7306 %float_n6_28318548
       %7312 = OpExtInst %float %1 Fma %7302 %float_6_28318548 %7311
       %7313 = OpFMul %float %7310 %float_n6_28318548
       %7314 = OpExtInst %float %1 Fma %7305 %float_6_28318548 %7313
       %7315 = OpExtInst %float %1 Fma %7312 %float_2097152 %7314
       %7316 = OpFMul %float %7233 %2732
       %7317 = OpExtInst %float %1 Sin %7315
       %7318 = OpFMul %float %7317 %7316
       %7319 = OpFMul %float %7300 %4447
       %7320 = OpFDiv %float %float_2 %7319
       %7321 = OpFMul %float %6707 %7320
       %7322 = OpFMul %float %7320 %5271
       %7323 = OpFMul %float %7322 %5982
       %7324 = OpExtInst %float %1 Fma %6708 %7320 %7323
       %7325 = OpExtInst %float %1 Floor %7321
       %7326 = OpFNegate %float %7325
       %7327 = OpExtInst %float %1 Fma %6707 %7320 %7326
       %7328 = OpExtInst %float %1 Fma %7327 %float_2097152 %7324
       %7329 = OpExtInst %float %1 Floor %7328
       %7330 = OpFMul %float %7325 %float_n6_28318548
       %7331 = OpExtInst %float %1 Fma %7321 %float_6_28318548 %7330
       %7332 = OpFMul %float %7329 %float_n6_28318548
       %7333 = OpExtInst %float %1 Fma %7324 %float_6_28318548 %7332
       %7334 = OpExtInst %float %1 Fma %7331 %float_2097152 %7333
       %7335 = OpFMul %float %7316 %2593
       %7336 = OpExtInst %float %1 Sin %7334
       %7337 = OpFMul %float %7336 %7335
       %7338 = OpCompositeConstruct %v3float %549 %549 %7318
       %7339 = OpCompositeConstruct %v3float %549 %549 %7337
       %7340 = OpFAdd %v3float %7338 %7339
       %7341 = OpFMul %float %7319 %4447
       %7342 = OpFDiv %float %float_2 %7341
       %7343 = OpFMul %float %6743 %7342
       %7344 = OpFMul %float %7342 %5294
       %7345 = OpFMul %float %7344 %5982
       %7346 = OpExtInst %float %1 Fma %6744 %7342 %7345
       %7347 = OpExtInst %float %1 Floor %7343
       %7348 = OpFNegate %float %7347
       %7349 = OpExtInst %float %1 Fma %6743 %7342 %7348
       %7350 = OpExtInst %float %1 Fma %7349 %float_2097152 %7346
       %7351 = OpExtInst %float %1 Floor %7350
       %7352 = OpFMul %float %7347 %float_n6_28318548
       %7353 = OpExtInst %float %1 Fma %7343 %float_6_28318548 %7352
       %7354 = OpFMul %float %7351 %float_n6_28318548
       %7355 = OpExtInst %float %1 Fma %7346 %float_6_28318548 %7354
       %7356 = OpExtInst %float %1 Fma %7353 %float_2097152 %7355
       %7357 = OpFMul %float %7335 %2593
       %7358 = OpExtInst %float %1 Sin %7356
       %7359 = OpFMul %float %7358 %7357
       %7360 = OpCompositeConstruct %v3float %549 %549 %7359
       %7361 = OpFAdd %v3float %7340 %7360
       %7362 = OpFMul %float %7341 %4447
       %7363 = OpFDiv %float %float_2 %7362
       %7364 = OpFMul %float %6778 %7363
       %7365 = OpFMul %float %7363 %5316
       %7366 = OpFMul %float %7365 %5982
       %7367 = OpExtInst %float %1 Fma %6779 %7363 %7366
       %7368 = OpExtInst %float %1 Floor %7364
       %7369 = OpFNegate %float %7368
       %7370 = OpExtInst %float %1 Fma %6778 %7363 %7369
       %7371 = OpExtInst %float %1 Fma %7370 %float_2097152 %7367
       %7372 = OpExtInst %float %1 Floor %7371
       %7373 = OpFMul %float %7368 %float_n6_28318548
       %7374 = OpExtInst %float %1 Fma %7364 %float_6_28318548 %7373
       %7375 = OpFMul %float %7372 %float_n6_28318548
       %7376 = OpExtInst %float %1 Fma %7367 %float_6_28318548 %7375
       %7377 = OpExtInst %float %1 Fma %7374 %float_2097152 %7376
       %7378 = OpFMul %float %7357 %2593
       %7379 = OpExtInst %float %1 Sin %7377
       %7380 = OpFMul %float %7379 %7378
       %7381 = OpCompositeConstruct %v3float %549 %549 %7380
       %7382 = OpFAdd %v3float %7361 %7381
       %7383 = OpFAdd %v3float %7299 %7382
       %7384 = OpFMul %float %6845 %5246
       %7385 = OpFDiv %float %float_2 %7384
       %7386 = OpFMul %float %6842 %7385
       %7387 = OpFMul %float %7385 %5251
       %7388 = OpFMul %float %7387 %5982
       %7389 = OpExtInst %float %1 Fma %6843 %7385 %7388
       %7390 = OpExtInst %float %1 Floor %7386
       %7391 = OpFNegate %float %7390
       %7392 = OpExtInst %float %1 Fma %6842 %7385 %7391
       %7393 = OpExtInst %float %1 Fma %7392 %float_2097152 %7389
       %7394 = OpExtInst %float %1 Floor %7393
       %7395 = OpFMul %float %7390 %float_n6_28318548
       %7396 = OpExtInst %float %1 Fma %7386 %float_6_28318548 %7395
       %7397 = OpFMul %float %7394 %float_n6_28318548
       %7398 = OpExtInst %float %1 Fma %7389 %float_6_28318548 %7397
       %7399 = OpExtInst %float %1 Fma %7396 %float_2097152 %7398
       %7400 = OpExtInst %float %1 Sin %7399
       %7401 = OpFMul %float %7400 %7316
       %7402 = OpFMul %float %7384 %4447
       %7403 = OpFDiv %float %float_2 %7402
       %7404 = OpFMul %float %6876 %7403
       %7405 = OpFMul %float %7403 %5271
       %7406 = OpFMul %float %7405 %5982
       %7407 = OpExtInst %float %1 Fma %6877 %7403 %7406
       %7408 = OpExtInst %float %1 Floor %7404
       %7409 = OpFNegate %float %7408
       %7410 = OpExtInst %float %1 Fma %6876 %7403 %7409
       %7411 = OpExtInst %float %1 Fma %7410 %float_2097152 %7407
       %7412 = OpExtInst %float %1 Floor %7411
       %7413 = OpFMul %float %7408 %float_n6_28318548
       %7414 = OpExtInst %float %1 Fma %7404 %float_6_28318548 %7413
       %7415 = OpFMul %float %7412 %float_n6_28318548
       %7416 = OpExtInst %float %1 Fma %7407 %float_6_28318548 %7415
       %7417 = OpExtInst %float %1 Fma %7414 %float_2097152 %7416
       %7418 = OpExtInst %float %1 Sin %7417
       %7419 = OpFMul %float %7418 %7335
       %7420 = OpCompositeConstruct %v3float %549 %549 %7401
       %7421 = OpCompositeConstruct %v3float %549 %549 %7419
       %7422 = OpFAdd %v3float %7420 %7421
       %7423 = OpFMul %float %7402 %4447
       %7424 = OpFDiv %float %float_2 %7423
       %7425 = OpFMul %float %6911 %7424
       %7426 = OpFMul %float %7424 %5294
       %7427 = OpFMul %float %7426 %5982
       %7428 = OpExtInst %float %1 Fma %6912 %7424 %7427
       %7429 = OpExtInst %float %1 Floor %7425
       %7430 = OpFNegate %float %7429
       %7431 = OpExtInst %float %1 Fma %6911 %7424 %7430
       %7432 = OpExtInst %float %1 Fma %7431 %float_2097152 %7428
       %7433 = OpExtInst %float %1 Floor %7432
       %7434 = OpFMul %float %7429 %float_n6_28318548
       %7435 = OpExtInst %float %1 Fma %7425 %float_6_28318548 %7434
       %7436 = OpFMul %float %7433 %float_n6_28318548
       %7437 = OpExtInst %float %1 Fma %7428 %float_6_28318548 %7436
       %7438 = OpExtInst %float %1 Fma %7435 %float_2097152 %7437
       %7439 = OpExtInst %float %1 Sin %7438
       %7440 = OpFMul %float %7439 %7357
       %7441 = OpCompositeConstruct %v3float %549 %549 %7440
       %7442 = OpFAdd %v3float %7422 %7441
       %7443 = OpFMul %float %7423 %4447
       %7444 = OpFDiv %float %float_2 %7443
       %7445 = OpFMul %float %6945 %7444
       %7446 = OpFMul %float %7444 %5316
       %7447 = OpFMul %float %7446 %5982
       %7448 = OpExtInst %float %1 Fma %6946 %7444 %7447
       %7449 = OpExtInst %float %1 Floor %7445
       %7450 = OpFNegate %float %7449
       %7451 = OpExtInst %float %1 Fma %6945 %7444 %7450
       %7452 = OpExtInst %float %1 Fma %7451 %float_2097152 %7448
       %7453 = OpExtInst %float %1 Floor %7452
       %7454 = OpFMul %float %7449 %float_n6_28318548
       %7455 = OpExtInst %float %1 Fma %7445 %float_6_28318548 %7454
       %7456 = OpFMul %float %7453 %float_n6_28318548
       %7457 = OpExtInst %float %1 Fma %7448 %float_6_28318548 %7456
       %7458 = OpExtInst %float %1 Fma %7455 %float_2097152 %7457
       %7459 = OpExtInst %float %1 Sin %7458
       %7460 = OpFMul %float %7459 %7378
       %7461 = OpCompositeConstruct %v3float %549 %549 %7460
       %7462 = OpFAdd %v3float %7442 %7461
       %7463 = OpFAdd %v3float %7383 %7462
       %7464 = OpFMul %float %5710 %5415
       %7465 = OpFDiv %float %float_2 %7464
       %7466 = OpFMul %float %5707 %7465
       %7467 = OpFMul %float %7465 %4898
       %7468 = OpFMul %float %7467 %5982
       %7469 = OpExtInst %float %1 Fma %5708 %7465 %7468
       %7470 = OpExtInst %float %1 Floor %7466
       %7471 = OpFNegate %float %7470
       %7472 = OpExtInst %float %1 Fma %5707 %7465 %7471
       %7473 = OpExtInst %float %1 Fma %7472 %float_2097152 %7469
       %7474 = OpExtInst %float %1 Floor %7473
       %7475 = OpFMul %float %7470 %float_n6_28318548
       %7476 = OpExtInst %float %1 Fma %7466 %float_6_28318548 %7475
       %7477 = OpFMul %float %7474 %float_n6_28318548
       %7478 = OpExtInst %float %1 Fma %7469 %float_6_28318548 %7477
       %7479 = OpExtInst %float %1 Fma %7476 %float_2097152 %7478
       %7480 = OpFMul %float %6523 %float_0_5
       %7481 = OpExtInst %float %1 Sin %7479
       %7482 = OpFMul %float %7481 %7480
       %7483 = OpFMul %float %7464 %4447
       %7484 = OpFDiv %float %float_2 %7483
       %7485 = OpFMul %float %6538 %7484
       %7486 = OpFMul %float %7484 %4919
       %7487 = OpFMul %float %7486 %5982
       %7488 = OpExtInst %float %1 Fma %6539 %7484 %7487
       %7489 = OpExtInst %float %1 Floor %7485
       %7490 = OpFNegate %float %7489
       %7491 = OpExtInst %float %1 Fma %6538 %7484 %7490
       %7492 = OpExtInst %float %1 Fma %7491 %float_2097152 %7488
       %7493 = OpExtInst %float %1 Floor %7492
       %7494 = OpFMul %float %7489 %float_n6_28318548
       %7495 = OpExtInst %float %1 Fma %7485 %float_6_28318548 %7494
       %7496 = OpFMul %float %7493 %float_n6_28318548
       %7497 = OpExtInst %float %1 Fma %7488 %float_6_28318548 %7496
       %7498 = OpExtInst %float %1 Fma %7495 %float_2097152 %7497
       %7499 = OpFMul %float %7480 %2593
       %7500 = OpExtInst %float %1 Sin %7498
       %7501 = OpFMul %float %7500 %7499
       %7502 = OpCompositeConstruct %v3float %549 %549 %7482
       %7503 = OpCompositeConstruct %v3float %549 %549 %7501
       %7504 = OpFAdd %v3float %7502 %7503
       %7505 = OpFMul %float %7483 %4447
       %7506 = OpFDiv %float %float_2 %7505
       %7507 = OpFMul %float %6574 %7506
       %7508 = OpFMul %float %7506 %4943
       %7509 = OpFMul %float %7508 %5982
       %7510 = OpExtInst %float %1 Fma %6575 %7506 %7509
       %7511 = OpExtInst %float %1 Floor %7507
       %7512 = OpFNegate %float %7511
       %7513 = OpExtInst %float %1 Fma %6574 %7506 %7512
       %7514 = OpExtInst %float %1 Fma %7513 %float_2097152 %7510
       %7515 = OpExtInst %float %1 Floor %7514
       %7516 = OpFMul %float %7511 %float_n6_28318548
       %7517 = OpExtInst %float %1 Fma %7507 %float_6_28318548 %7516
       %7518 = OpFMul %float %7515 %float_n6_28318548
       %7519 = OpExtInst %float %1 Fma %7510 %float_6_28318548 %7518
       %7520 = OpExtInst %float %1 Fma %7517 %float_2097152 %7519
       %7521 = OpFMul %float %7499 %2593
       %7522 = OpExtInst %float %1 Sin %7520
       %7523 = OpFMul %float %7522 %7521
       %7524 = OpCompositeConstruct %v3float %549 %549 %7523
       %7525 = OpFAdd %v3float %7504 %7524
       %7526 = OpFMul %float %7505 %4447
       %7527 = OpFDiv %float %float_2 %7526
       %7528 = OpFMul %float %6609 %7527
       %7529 = OpFMul %float %7527 %4966
       %7530 = OpFMul %float %7529 %5982
       %7531 = OpExtInst %float %1 Fma %6610 %7527 %7530
       %7532 = OpExtInst %float %1 Floor %7528
       %7533 = OpFNegate %float %7532
       %7534 = OpExtInst %float %1 Fma %6609 %7527 %7533
       %7535 = OpExtInst %float %1 Fma %7534 %float_2097152 %7531
       %7536 = OpExtInst %float %1 Floor %7535
       %7537 = OpFMul %float %7532 %float_n6_28318548
       %7538 = OpExtInst %float %1 Fma %7528 %float_6_28318548 %7537
       %7539 = OpFMul %float %7536 %float_n6_28318548
       %7540 = OpExtInst %float %1 Fma %7531 %float_6_28318548 %7539
       %7541 = OpExtInst %float %1 Fma %7538 %float_2097152 %7540
       %7542 = OpFMul %float %7521 %2593
       %7543 = OpExtInst %float %1 Sin %7541
       %7544 = OpFMul %float %7543 %7542
       %7545 = OpCompositeConstruct %v3float %549 %549 %7544
       %7546 = OpFAdd %v3float %7525 %7545
       %7547 = OpFMul %float %6675 %5499
       %7548 = OpFDiv %float %float_2 %7547
       %7549 = OpFMul %float %6672 %7548
       %7550 = OpFMul %float %7548 %4990
       %7551 = OpFMul %float %7550 %5982
       %7552 = OpExtInst %float %1 Fma %6673 %7548 %7551
       %7553 = OpExtInst %float %1 Floor %7549
       %7554 = OpFNegate %float %7553
       %7555 = OpExtInst %float %1 Fma %6672 %7548 %7554
       %7556 = OpExtInst %float %1 Fma %7555 %float_2097152 %7552
       %7557 = OpExtInst %float %1 Floor %7556
       %7558 = OpFMul %float %7553 %float_n6_28318548
       %7559 = OpExtInst %float %1 Fma %7549 %float_6_28318548 %7558
       %7560 = OpFMul %float %7557 %float_n6_28318548
       %7561 = OpExtInst %float %1 Fma %7552 %float_6_28318548 %7560
       %7562 = OpExtInst %float %1 Fma %7559 %float_2097152 %7561
       %7563 = OpFMul %float %7480 %2732
       %7564 = OpExtInst %float %1 Sin %7562
       %7565 = OpFMul %float %7564 %7563
       %7566 = OpFMul %float %7547 %4447
       %7567 = OpFDiv %float %float_2 %7566
       %7568 = OpFMul %float %6707 %7567
       %7569 = OpFMul %float %7567 %5011
       %7570 = OpFMul %float %7569 %5982
       %7571 = OpExtInst %float %1 Fma %6708 %7567 %7570
       %7572 = OpExtInst %float %1 Floor %7568
       %7573 = OpFNegate %float %7572
       %7574 = OpExtInst %float %1 Fma %6707 %7567 %7573
       %7575 = OpExtInst %float %1 Fma %7574 %float_2097152 %7571
       %7576 = OpExtInst %float %1 Floor %7575
       %7577 = OpFMul %float %7572 %float_n6_28318548
       %7578 = OpExtInst %float %1 Fma %7568 %float_6_28318548 %7577
       %7579 = OpFMul %float %7576 %float_n6_28318548
       %7580 = OpExtInst %float %1 Fma %7571 %float_6_28318548 %7579
       %7581 = OpExtInst %float %1 Fma %7578 %float_2097152 %7580
       %7582 = OpFMul %float %7563 %2593
       %7583 = OpExtInst %float %1 Sin %7581
       %7584 = OpFMul %float %7583 %7582
       %7585 = OpCompositeConstruct %v3float %549 %549 %7565
       %7586 = OpCompositeConstruct %v3float %549 %549 %7584
       %7587 = OpFAdd %v3float %7585 %7586
       %7588 = OpFMul %float %7566 %4447
       %7589 = OpFDiv %float %float_2 %7588
       %7590 = OpFMul %float %6743 %7589
       %7591 = OpFMul %float %7589 %5035
       %7592 = OpFMul %float %7591 %5982
       %7593 = OpExtInst %float %1 Fma %6744 %7589 %7592
       %7594 = OpExtInst %float %1 Floor %7590
       %7595 = OpFNegate %float %7594
       %7596 = OpExtInst %float %1 Fma %6743 %7589 %7595
       %7597 = OpExtInst %float %1 Fma %7596 %float_2097152 %7593
       %7598 = OpExtInst %float %1 Floor %7597
       %7599 = OpFMul %float %7594 %float_n6_28318548
       %7600 = OpExtInst %float %1 Fma %7590 %float_6_28318548 %7599
       %7601 = OpFMul %float %7598 %float_n6_28318548
       %7602 = OpExtInst %float %1 Fma %7593 %float_6_28318548 %7601
       %7603 = OpExtInst %float %1 Fma %7600 %float_2097152 %7602
       %7604 = OpFMul %float %7582 %2593
       %7605 = OpExtInst %float %1 Sin %7603
       %7606 = OpFMul %float %7605 %7604
       %7607 = OpCompositeConstruct %v3float %549 %549 %7606
       %7608 = OpFAdd %v3float %7587 %7607
       %7609 = OpFMul %float %7588 %4447
       %7610 = OpFDiv %float %float_2 %7609
       %7611 = OpFMul %float %6778 %7610
       %7612 = OpFMul %float %7610 %5058
       %7613 = OpFMul %float %7612 %5982
       %7614 = OpExtInst %float %1 Fma %6779 %7610 %7613
       %7615 = OpExtInst %float %1 Floor %7611
       %7616 = OpFNegate %float %7615
       %7617 = OpExtInst %float %1 Fma %6778 %7610 %7616
       %7618 = OpExtInst %float %1 Fma %7617 %float_2097152 %7614
       %7619 = OpExtInst %float %1 Floor %7618
       %7620 = OpFMul %float %7615 %float_n6_28318548
       %7621 = OpExtInst %float %1 Fma %7611 %float_6_28318548 %7620
       %7622 = OpFMul %float %7619 %float_n6_28318548
       %7623 = OpExtInst %float %1 Fma %7614 %float_6_28318548 %7622
       %7624 = OpExtInst %float %1 Fma %7621 %float_2097152 %7623
       %7625 = OpFMul %float %7604 %2593
       %7626 = OpExtInst %float %1 Sin %7624
       %7627 = OpFMul %float %7626 %7625
       %7628 = OpCompositeConstruct %v3float %549 %549 %7627
       %7629 = OpFAdd %v3float %7608 %7628
       %7630 = OpFAdd %v3float %7546 %7629
       %7631 = OpFMul %float %6845 %5499
       %7632 = OpFDiv %float %float_2 %7631
       %7633 = OpFMul %float %6842 %7632
       %7634 = OpFMul %float %7632 %4990
       %7635 = OpFMul %float %7634 %5982
       %7636 = OpExtInst %float %1 Fma %6843 %7632 %7635
       %7637 = OpExtInst %float %1 Floor %7633
       %7638 = OpFNegate %float %7637
       %7639 = OpExtInst %float %1 Fma %6842 %7632 %7638
       %7640 = OpExtInst %float %1 Fma %7639 %float_2097152 %7636
       %7641 = OpExtInst %float %1 Floor %7640
       %7642 = OpFMul %float %7637 %float_n6_28318548
       %7643 = OpExtInst %float %1 Fma %7633 %float_6_28318548 %7642
       %7644 = OpFMul %float %7641 %float_n6_28318548
       %7645 = OpExtInst %float %1 Fma %7636 %float_6_28318548 %7644
       %7646 = OpExtInst %float %1 Fma %7643 %float_2097152 %7645
       %7647 = OpExtInst %float %1 Sin %7646
       %7648 = OpFMul %float %7647 %7563
       %7649 = OpFMul %float %7631 %4447
       %7650 = OpFDiv %float %float_2 %7649
       %7651 = OpFMul %float %6876 %7650
       %7652 = OpFMul %float %7650 %5011
       %7653 = OpFMul %float %7652 %5982
       %7654 = OpExtInst %float %1 Fma %6877 %7650 %7653
       %7655 = OpExtInst %float %1 Floor %7651
       %7656 = OpFNegate %float %7655
       %7657 = OpExtInst %float %1 Fma %6876 %7650 %7656
       %7658 = OpExtInst %float %1 Fma %7657 %float_2097152 %7654
       %7659 = OpExtInst %float %1 Floor %7658
       %7660 = OpFMul %float %7655 %float_n6_28318548
       %7661 = OpExtInst %float %1 Fma %7651 %float_6_28318548 %7660
       %7662 = OpFMul %float %7659 %float_n6_28318548
       %7663 = OpExtInst %float %1 Fma %7654 %float_6_28318548 %7662
       %7664 = OpExtInst %float %1 Fma %7661 %float_2097152 %7663
       %7665 = OpExtInst %float %1 Sin %7664
       %7666 = OpFMul %float %7665 %7582
       %7667 = OpCompositeConstruct %v3float %549 %549 %7648
       %7668 = OpCompositeConstruct %v3float %549 %549 %7666
       %7669 = OpFAdd %v3float %7667 %7668
       %7670 = OpFMul %float %7649 %4447
       %7671 = OpFDiv %float %float_2 %7670
       %7672 = OpFMul %float %6911 %7671
       %7673 = OpFMul %float %7671 %5035
       %7674 = OpFMul %float %7673 %5982
       %7675 = OpExtInst %float %1 Fma %6912 %7671 %7674
       %7676 = OpExtInst %float %1 Floor %7672
       %7677 = OpFNegate %float %7676
       %7678 = OpExtInst %float %1 Fma %6911 %7671 %7677
       %7679 = OpExtInst %float %1 Fma %7678 %float_2097152 %7675
       %7680 = OpExtInst %float %1 Floor %7679
       %7681 = OpFMul %float %7676 %float_n6_28318548
       %7682 = OpExtInst %float %1 Fma %7672 %float_6_28318548 %7681
       %7683 = OpFMul %float %7680 %float_n6_28318548
       %7684 = OpExtInst %float %1 Fma %7675 %float_6_28318548 %7683
       %7685 = OpExtInst %float %1 Fma %7682 %float_2097152 %7684
       %7686 = OpExtInst %float %1 Sin %7685
       %7687 = OpFMul %float %7686 %7604
       %7688 = OpCompositeConstruct %v3float %549 %549 %7687
       %7689 = OpFAdd %v3float %7669 %7688
       %7690 = OpFMul %float %7670 %4447
       %7691 = OpFDiv %float %float_2 %7690
       %7692 = OpFMul %float %6945 %7691
       %7693 = OpFMul %float %7691 %5058
       %7694 = OpFMul %float %7693 %5982
       %7695 = OpExtInst %float %1 Fma %6946 %7691 %7694
       %7696 = OpExtInst %float %1 Floor %7692
       %7697 = OpFNegate %float %7696
       %7698 = OpExtInst %float %1 Fma %6945 %7691 %7697
       %7699 = OpExtInst %float %1 Fma %7698 %float_2097152 %7695
       %7700 = OpExtInst %float %1 Floor %7699
       %7701 = OpFMul %float %7696 %float_n6_28318548
       %7702 = OpExtInst %float %1 Fma %7692 %float_6_28318548 %7701
       %7703 = OpFMul %float %7700 %float_n6_28318548
       %7704 = OpExtInst %float %1 Fma %7695 %float_6_28318548 %7703
       %7705 = OpExtInst %float %1 Fma %7702 %float_2097152 %7704
       %7706 = OpExtInst %float %1 Sin %7705
       %7707 = OpFMul %float %7706 %7625
       %7708 = OpCompositeConstruct %v3float %549 %549 %7707
       %7709 = OpFAdd %v3float %7689 %7708
       %7710 = OpFAdd %v3float %7630 %7709
       %7711 = OpFAdd %v3float %7463 %7710
       %7712 = OpFAdd %v3float %7216 %7711
       %7713 = OpFAdd %v3float %6967 %7712
       %7714 = OpFAdd %v3float %5666 %7713
       %7715 = OpExtInst %v3float %1 Fma %3517 %3520 %7714
       %7716 = OpCompositeExtract %float %7715 2
       %7717 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_1
       %7718 = OpLoad %float %7717
       %7719 = OpFNegate %float %7718
       %7720 = OpExtInst %float %1 Fma %7716 %1724 %7719
       %7721 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_0
       %7722 = OpLoad %float %7721
       %7723 = OpFMul %float %7720 %7722
       %7724 = OpExtInst %float %1 FClamp %7723 %float_0 %float_1
       %7725 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_1
       %7726 = OpLoad %float %7725
       %7727 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_2
       %7728 = OpLoad %float %7727
       %7729 = OpFNegate %float %7728
       %7730 = OpExtInst %float %1 Fma %7724 %7726 %7729
       %7731 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_92 %int_1
       %7732 = OpLoad %float %7731
       %7733 = OpFMul %float %7730 %7732
       %7734 = OpExtInst %float %1 FClamp %7733 %float_0 %float_1
       %7735 = OpCompositeConstruct %v3float %7716 %7716 %7716
       %7736 = OpExtInst %v3float %1 Fma %7735 %620 %640
       %7737 = OpDPdx %v3float %592
       %7738 = OpVectorTimesScalar %v3float %7737 %float_2097152
       %7739 = OpDPdx %v3float %7736
       %7740 = OpFAdd %v3float %7738 %7739
       %7741 = OpDPdy %v3float %592
       %7742 = OpVectorTimesScalar %v3float %7741 %float_2097152
       %7743 = OpDPdy %v3float %7736
       %7744 = OpFAdd %v3float %7742 %7743
       %7745 = OpExtInst %v3float %1 Cross %7740 %7744
       %7746 = OpExtInst %v3float %1 Normalize %7745
       %7747 = OpDPdx %v3float %592
       %7748 = OpVectorTimesScalar %v3float %7747 %float_2097152
       %7749 = OpDPdx %v3float %640
       %7750 = OpFAdd %v3float %7748 %7749
       %7751 = OpDPdy %v3float %592
       %7752 = OpVectorTimesScalar %v3float %7751 %float_2097152
       %7753 = OpDPdy %v3float %640
       %7754 = OpFAdd %v3float %7752 %7753
       %7755 = OpExtInst %v3float %1 Cross %7750 %7754
       %7756 = OpExtInst %v3float %1 Normalize %7755
       %7757 = OpFSub %v3float %7746 %7756
       %7758 = OpFAdd %v3float %7757 %620
       %7759 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_92 %int_3
       %7760 = OpLoad %float %7759
       %7761 = OpCompositeConstruct %v3float %7760 %7760 %7760
       %7762 = OpExtInst %v3float %1 FMix %7758 %290 %7761
       %7763 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_0
       %7764 = OpLoad %float %7763
       %7765 = OpCompositeConstruct %v3float %7764 %7764 %7764
       %7766 = OpExtInst %v3float %1 Fma %7762 %7765 %641
       %7767 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_1
       %7768 = OpLoad %float %7767
       %7769 = OpCompositeConstruct %v3float %7768 %7768 %7768
       %7770 = OpFMul %v3float %592 %7769
       %7771 = OpFMul %v3float %7766 %7769
       %7772 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_3
       %7773 = OpLoad %float %7772
       %7774 = OpFMul %float %1160 %7773
       %7775 = OpCompositeConstruct %v2float %7774 %7774
       %7776 = OpFAdd %v2float %7775 %275
       %7777 = OpCompositeExtract %float %7770 0
       %7778 = OpCompositeExtract %float %7771 0
       %7779 = OpCompositeExtract %float %7770 1
       %7780 = OpCompositeExtract %float %7771 1
       %7781 = OpCompositeExtract %float %7776 0
       %7782 = OpCompositeConstruct %v3float %7777 %7779 %float_0
       %7783 = OpCompositeConstruct %v3float %7778 %7780 %7781
       %7784 = OpVectorTimesScalar %v3float %7783 %float_4_76837158en07
       %7785 = OpFAdd %v3float %7784 %137
       %7786 = OpFAdd %v3float %7782 %7785
       %7787 = OpExtInst %v3float %1 Floor %7786
       %7788 = OpFSub %v3float %7782 %7787
       %7789 = OpVectorTimesScalar %v3float %7788 %float_2097152
       %7790 = OpFAdd %v3float %7789 %7783
       %7791 = OpVectorTimesScalar %v3float %7790 %float_1
               OpBranch %7792
       %7792 = OpLabel
       %7793 = OpPhi %v3float %7791 %6288 %7794 %7795
       %7796 = OpPhi %float %float_1 %6288 %7797 %7795
       %7798 = OpPhi %float %float_0 %6288 %7799 %7795
       %7800 = OpPhi %uint %uint_0 %6288 %7801 %7795
       %7802 = OpULessThan %bool %7800 %uint_10
               OpLoopMerge %7803 %7795 DontUnroll
               OpBranchConditional %7802 %7795 %7803
       %7795 = OpLabel
       %7804 = OpExtInst %v3float %1 Fract %7793
       %7805 = OpExtInst %v3float %1 Floor %7793
       %7806 = OpDot %float %7805 %385
       %7807 = OpFAdd %float %7806 %float_19
       %7808 = OpFAdd %float %7806 %float_47
       %7809 = OpFAdd %float %7806 %float_66
       %7810 = OpFAdd %float %7806 %float_101
       %7811 = OpFAdd %float %7806 %float_120
       %7812 = OpFAdd %float %7806 %float_148
       %7813 = OpFAdd %float %7806 %float_167
       %7814 = OpConvertFToS %int %7806
       %7815 = OpCompositeConstruct %v3int %7814 %int_0 %int_0
       %7816 = OpBitcast %v3uint %7815
       %7817 = OpIMul %v3uint %7816 %401
       %7818 = OpIAdd %v3uint %7817 %403
       %7819 = OpCompositeExtract %uint %7818 1
       %7820 = OpCompositeExtract %uint %7818 2
       %7821 = OpIMul %uint %7819 %7820
       %7822 = OpCompositeExtract %uint %7818 0
       %7823 = OpIAdd %uint %7822 %7821
       %7824 = OpIMul %uint %7820 %7823
       %7825 = OpIAdd %uint %7819 %7824
       %7826 = OpIMul %uint %7823 %7825
       %7827 = OpIAdd %uint %7820 %7826
       %7828 = OpIMul %uint %7825 %7827
       %7829 = OpIAdd %uint %7823 %7828
       %7830 = OpCompositeInsert %v3uint %7829 %550 0
       %7831 = OpBitwiseAnd %v3uint %404 %405
       %7832 = OpShiftRightLogical %v3uint %7830 %7831
       %7833 = OpCompositeExtract %uint %7832 0
       %7834 = OpCompositeConstruct %v3uint %7833 %7833 %7833
       %7835 = OpBitwiseAnd %v3uint %7834 %386
       %7836 = OpConvertUToF %v3float %7835
       %7837 = OpExtInst %v3float %1 Fma %7836 %390 %278
       %7838 = OpDot %float %7837 %7804
       %7839 = OpConvertFToS %int %7807
       %7840 = OpFSub %v3float %7804 %350
       %7841 = OpCompositeConstruct %v3int %7839 %int_0 %int_0
       %7842 = OpBitcast %v3uint %7841
       %7843 = OpIMul %v3uint %7842 %401
       %7844 = OpIAdd %v3uint %7843 %403
       %7845 = OpCompositeExtract %uint %7844 1
       %7846 = OpCompositeExtract %uint %7844 2
       %7847 = OpIMul %uint %7845 %7846
       %7848 = OpCompositeExtract %uint %7844 0
       %7849 = OpIAdd %uint %7848 %7847
       %7850 = OpIMul %uint %7846 %7849
       %7851 = OpIAdd %uint %7845 %7850
       %7852 = OpIMul %uint %7849 %7851
       %7853 = OpIAdd %uint %7846 %7852
       %7854 = OpIMul %uint %7851 %7853
       %7855 = OpIAdd %uint %7849 %7854
       %7856 = OpCompositeInsert %v3uint %7855 %550 0
       %7857 = OpShiftRightLogical %v3uint %7856 %7831
       %7858 = OpCompositeExtract %uint %7857 0
       %7859 = OpCompositeConstruct %v3uint %7858 %7858 %7858
       %7860 = OpBitwiseAnd %v3uint %7859 %386
       %7861 = OpConvertUToF %v3float %7860
       %7862 = OpExtInst %v3float %1 Fma %7861 %390 %278
       %7863 = OpDot %float %7862 %7840
       %7864 = OpConvertFToS %int %7808
       %7865 = OpFSub %v3float %7804 %351
       %7866 = OpCompositeConstruct %v3int %7864 %int_0 %int_0
       %7867 = OpBitcast %v3uint %7866
       %7868 = OpIMul %v3uint %7867 %401
       %7869 = OpIAdd %v3uint %7868 %403
       %7870 = OpCompositeExtract %uint %7869 1
       %7871 = OpCompositeExtract %uint %7869 2
       %7872 = OpIMul %uint %7870 %7871
       %7873 = OpCompositeExtract %uint %7869 0
       %7874 = OpIAdd %uint %7873 %7872
       %7875 = OpIMul %uint %7871 %7874
       %7876 = OpIAdd %uint %7870 %7875
       %7877 = OpIMul %uint %7874 %7876
       %7878 = OpIAdd %uint %7871 %7877
       %7879 = OpIMul %uint %7876 %7878
       %7880 = OpIAdd %uint %7874 %7879
       %7881 = OpCompositeInsert %v3uint %7880 %550 0
       %7882 = OpShiftRightLogical %v3uint %7881 %7831
       %7883 = OpCompositeExtract %uint %7882 0
       %7884 = OpCompositeConstruct %v3uint %7883 %7883 %7883
       %7885 = OpBitwiseAnd %v3uint %7884 %386
       %7886 = OpConvertUToF %v3float %7885
       %7887 = OpExtInst %v3float %1 Fma %7886 %390 %278
       %7888 = OpDot %float %7887 %7865
       %7889 = OpConvertFToS %int %7809
       %7890 = OpFSub %v3float %7804 %134
       %7891 = OpCompositeConstruct %v3int %7889 %int_0 %int_0
       %7892 = OpBitcast %v3uint %7891
       %7893 = OpIMul %v3uint %7892 %401
       %7894 = OpIAdd %v3uint %7893 %403
       %7895 = OpCompositeExtract %uint %7894 1
       %7896 = OpCompositeExtract %uint %7894 2
       %7897 = OpIMul %uint %7895 %7896
       %7898 = OpCompositeExtract %uint %7894 0
       %7899 = OpIAdd %uint %7898 %7897
       %7900 = OpIMul %uint %7896 %7899
       %7901 = OpIAdd %uint %7895 %7900
       %7902 = OpIMul %uint %7899 %7901
       %7903 = OpIAdd %uint %7896 %7902
       %7904 = OpIMul %uint %7901 %7903
       %7905 = OpIAdd %uint %7899 %7904
       %7906 = OpCompositeInsert %v3uint %7905 %550 0
       %7907 = OpShiftRightLogical %v3uint %7906 %7831
       %7908 = OpCompositeExtract %uint %7907 0
       %7909 = OpCompositeConstruct %v3uint %7908 %7908 %7908
       %7910 = OpBitwiseAnd %v3uint %7909 %386
       %7911 = OpConvertUToF %v3float %7910
       %7912 = OpExtInst %v3float %1 Fma %7911 %390 %278
       %7913 = OpDot %float %7912 %7890
       %7914 = OpConvertFToS %int %7810
       %7915 = OpFSub %v3float %7804 %290
       %7916 = OpCompositeConstruct %v3int %7914 %int_0 %int_0
       %7917 = OpBitcast %v3uint %7916
       %7918 = OpIMul %v3uint %7917 %401
       %7919 = OpIAdd %v3uint %7918 %403
       %7920 = OpCompositeExtract %uint %7919 1
       %7921 = OpCompositeExtract %uint %7919 2
       %7922 = OpIMul %uint %7920 %7921
       %7923 = OpCompositeExtract %uint %7919 0
       %7924 = OpIAdd %uint %7923 %7922
       %7925 = OpIMul %uint %7921 %7924
       %7926 = OpIAdd %uint %7920 %7925
       %7927 = OpIMul %uint %7924 %7926
       %7928 = OpIAdd %uint %7921 %7927
       %7929 = OpIMul %uint %7926 %7928
       %7930 = OpIAdd %uint %7924 %7929
       %7931 = OpCompositeInsert %v3uint %7930 %550 0
       %7932 = OpShiftRightLogical %v3uint %7931 %7831
       %7933 = OpCompositeExtract %uint %7932 0
       %7934 = OpCompositeConstruct %v3uint %7933 %7933 %7933
       %7935 = OpBitwiseAnd %v3uint %7934 %386
       %7936 = OpConvertUToF %v3float %7935
       %7937 = OpExtInst %v3float %1 Fma %7936 %390 %278
       %7938 = OpDot %float %7937 %7915
       %7939 = OpConvertFToS %int %7811
       %7940 = OpFSub %v3float %7804 %139
       %7941 = OpCompositeConstruct %v3int %7939 %int_0 %int_0
       %7942 = OpBitcast %v3uint %7941
       %7943 = OpIMul %v3uint %7942 %401
       %7944 = OpIAdd %v3uint %7943 %403
       %7945 = OpCompositeExtract %uint %7944 1
       %7946 = OpCompositeExtract %uint %7944 2
       %7947 = OpIMul %uint %7945 %7946
       %7948 = OpCompositeExtract %uint %7944 0
       %7949 = OpIAdd %uint %7948 %7947
       %7950 = OpIMul %uint %7946 %7949
       %7951 = OpIAdd %uint %7945 %7950
       %7952 = OpIMul %uint %7949 %7951
       %7953 = OpIAdd %uint %7946 %7952
       %7954 = OpIMul %uint %7951 %7953
       %7955 = OpIAdd %uint %7949 %7954
       %7956 = OpCompositeInsert %v3uint %7955 %550 0
       %7957 = OpShiftRightLogical %v3uint %7956 %7831
       %7958 = OpCompositeExtract %uint %7957 0
       %7959 = OpCompositeConstruct %v3uint %7958 %7958 %7958
       %7960 = OpBitwiseAnd %v3uint %7959 %386
       %7961 = OpConvertUToF %v3float %7960
       %7962 = OpExtInst %v3float %1 Fma %7961 %390 %278
       %7963 = OpDot %float %7962 %7940
       %7964 = OpConvertFToS %int %7812
       %7965 = OpFSub %v3float %7804 %135
       %7966 = OpCompositeConstruct %v3int %7964 %int_0 %int_0
       %7967 = OpBitcast %v3uint %7966
       %7968 = OpIMul %v3uint %7967 %401
       %7969 = OpIAdd %v3uint %7968 %403
       %7970 = OpCompositeExtract %uint %7969 1
       %7971 = OpCompositeExtract %uint %7969 2
       %7972 = OpIMul %uint %7970 %7971
       %7973 = OpCompositeExtract %uint %7969 0
       %7974 = OpIAdd %uint %7973 %7972
       %7975 = OpIMul %uint %7971 %7974
       %7976 = OpIAdd %uint %7970 %7975
       %7977 = OpIMul %uint %7974 %7976
       %7978 = OpIAdd %uint %7971 %7977
       %7979 = OpIMul %uint %7976 %7978
       %7980 = OpIAdd %uint %7974 %7979
       %7981 = OpCompositeInsert %v3uint %7980 %550 0
       %7982 = OpShiftRightLogical %v3uint %7981 %7831
       %7983 = OpCompositeExtract %uint %7982 0
       %7984 = OpCompositeConstruct %v3uint %7983 %7983 %7983
       %7985 = OpBitwiseAnd %v3uint %7984 %386
       %7986 = OpConvertUToF %v3float %7985
       %7987 = OpExtInst %v3float %1 Fma %7986 %390 %278
       %7988 = OpDot %float %7987 %7965
       %7989 = OpConvertFToS %int %7813
       %7990 = OpFSub %v3float %7804 %127
       %7991 = OpCompositeConstruct %v3int %7989 %int_0 %int_0
       %7992 = OpBitcast %v3uint %7991
       %7993 = OpIMul %v3uint %7992 %401
       %7994 = OpIAdd %v3uint %7993 %403
       %7995 = OpCompositeExtract %uint %7994 1
       %7996 = OpCompositeExtract %uint %7994 2
       %7997 = OpIMul %uint %7995 %7996
       %7998 = OpCompositeExtract %uint %7994 0
       %7999 = OpIAdd %uint %7998 %7997
       %8000 = OpIMul %uint %7996 %7999
       %8001 = OpIAdd %uint %7995 %8000
       %8002 = OpIMul %uint %7999 %8001
       %8003 = OpIAdd %uint %7996 %8002
       %8004 = OpIMul %uint %8001 %8003
       %8005 = OpIAdd %uint %7999 %8004
       %8006 = OpCompositeInsert %v3uint %8005 %550 0
       %8007 = OpShiftRightLogical %v3uint %8006 %7831
       %8008 = OpCompositeExtract %uint %8007 0
       %8009 = OpCompositeConstruct %v3uint %8008 %8008 %8008
       %8010 = OpBitwiseAnd %v3uint %8009 %386
       %8011 = OpConvertUToF %v3float %8010
       %8012 = OpExtInst %v3float %1 Fma %8011 %390 %278
       %8013 = OpDot %float %8012 %7990
       %8014 = OpCompositeExtract %float %7804 0
       %8015 = OpCompositeExtract %float %7804 1
       %8016 = OpCompositeExtract %float %7804 2
       %8017 = OpCompositeConstruct %v4float %8014 %8015 %8016 %float_0
       %8018 = OpFMul %v4float %8017 %8017
       %8019 = OpFMul %v4float %8018 %8017
       %8020 = OpVectorTimesScalar %v4float %8017 %float_6
       %8021 = OpFSub %v4float %8020 %381
       %8022 = OpExtInst %v4float %1 Fma %8017 %8021 %382
       %8023 = OpFMul %v4float %8019 %8022
       %8024 = OpCompositeExtract %float %8023 0
       %8025 = OpExtInst %float %1 FMix %7838 %7863 %8024
       %8026 = OpExtInst %float %1 FMix %7888 %7913 %8024
       %8027 = OpCompositeExtract %float %8023 1
       %8028 = OpExtInst %float %1 FMix %8025 %8026 %8027
       %8029 = OpExtInst %float %1 FMix %7938 %7963 %8024
       %8030 = OpExtInst %float %1 FMix %7988 %8013 %8024
       %8031 = OpExtInst %float %1 FMix %8029 %8030 %8027
       %8032 = OpCompositeExtract %float %8023 2
       %8033 = OpExtInst %float %1 FMix %8028 %8031 %8032
       %8034 = OpExtInst %float %1 FAbs %8033
       %7799 = OpExtInst %float %1 Fma %8034 %7796 %7798
       %7794 = OpVectorTimesScalar %v3float %7793 %float_2
       %7797 = OpFMul %float %7796 %float_0_5
       %7801 = OpIAdd %uint %7800 %uint_1
               OpBranch %7792
       %7803 = OpLabel
       %8035 = OpExtInst %float %1 FMix %float_0 %float_1 %7798
       %8036 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_0
       %8037 = OpLoad %float %8036
       %8038 = OpFNegate %float %7734
       %8039 = OpExtInst %float %1 Fma %8038 %8037 %8035
       %8040 = OpExtInst %float %1 Fma %7734 %8037 %float_1
       %8041 = OpExtInst %float %1 Fma %8038 %8037 %8040
       %8042 = OpFDiv %float %8039 %8041
       %8043 = OpExtInst %float %1 Fma %8042 %float_n1 %float_1
       %8044 = OpExtInst %float %1 FClamp %8043 %float_0 %float_1
       %8045 = OpFOrdLessThanEqual %bool %8044 %float_0
       %8046 = OpExtInst %float %1 Pow %8044 %float_2
       %8047 = OpSelect %float %8045 %float_0 %8046
       %8048 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_2
       %8049 = OpLoad %float %8048
       %8050 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_1
       %8051 = OpLoad %float %8050
       %8052 = OpExtInst %float %1 FMix %8049 %8051 %8047
       %8053 = OpExtInst %float %1 FClamp %8052 %float_0 %float_1
       %8054 = OpFMul %float %7734 %8053
       %8055 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_3
       %8056 = OpLoad %float %8055
       %8057 = OpCompositeConstruct %v3float %8056 %8056 %8056
       %8058 = OpFMul %v3float %592 %8057
       %8059 = OpFMul %v3float %641 %8057
       %8060 = OpVectorTimesScalar %v3float %8059 %float_4_76837158en07
       %8061 = OpFAdd %v3float %8060 %137
       %8062 = OpExtInst %v3float %1 Fma %592 %8057 %8061
       %8063 = OpExtInst %v3float %1 Floor %8062
       %8064 = OpFNegate %v3float %8063
       %8065 = OpExtInst %v3float %1 Fma %592 %8057 %8064
       %8066 = OpVectorTimesScalar %v3float %8065 %float_2097152
       %8067 = OpExtInst %v3float %1 Fma %641 %8057 %8066
       %8068 = OpVectorTimesScalar %v3float %8067 %float_1
               OpBranch %8069
       %8069 = OpLabel
       %8070 = OpPhi %v3float %542 %7803 %8071 %8072
       %8073 = OpPhi %v3float %8068 %7803 %8074 %8072
       %8075 = OpPhi %float %float_1 %7803 %8076 %8072
       %8077 = OpPhi %float %float_0 %7803 %8078 %8072
       %8079 = OpPhi %uint %uint_0 %7803 %8080 %8072
       %8081 = OpULessThan %bool %8079 %uint_1
               OpLoopMerge %8082 %8072 DontUnroll
               OpBranchConditional %8081 %8083 %8082
       %8083 = OpLabel
       %8084 = OpExtInst %v3float %1 Fract %8073
       %8085 = OpExtInst %v3float %1 Floor %8073
       %8086 = OpCompositeInsert %v3float %float_0 %8070 0
               OpBranch %8087
       %8087 = OpLabel
       %8088 = OpPhi %v4float %352 %8083 %8089 %8090
       %8071 = OpPhi %v3float %8086 %8083 %8091 %8090
       %8092 = OpCompositeExtract %float %8071 0
       %8093 = OpFOrdLessThanEqual %bool %8092 %float_1
               OpLoopMerge %8094 %8090 None
               OpBranchConditional %8093 %8095 %8094
       %8095 = OpLabel
       %8096 = OpCompositeInsert %v3float %float_0 %8071 1
               OpBranch %8097
       %8097 = OpLabel
       %8098 = OpPhi %v3float %8096 %8095 %8099 %8100
       %8089 = OpPhi %v4float %8088 %8095 %8101 %8100
       %8102 = OpCompositeExtract %float %8098 1
       %8103 = OpFOrdLessThanEqual %bool %8102 %float_1
               OpLoopMerge %8104 %8100 None
               OpBranchConditional %8103 %8105 %8104
       %8105 = OpLabel
       %8106 = OpCompositeInsert %v3float %float_0 %8098 2
               OpBranch %8107
       %8107 = OpLabel
       %8101 = OpPhi %v4float %8089 %8105 %8108 %8109
       %8110 = OpPhi %v3float %8106 %8105 %8111 %8109
       %8112 = OpCompositeExtract %float %8110 2
       %8113 = OpFOrdLessThanEqual %bool %8112 %float_1
               OpLoopMerge %8114 %8109 None
               OpBranchConditional %8113 %8109 %8114
       %8109 = OpLabel
       %8115 = OpFAdd %v3float %8085 %8110
       %8116 = OpVectorShuffle %v3float %538 %8115 3 4 5
       %8117 = OpConvertFToS %v3int %8116
       %8118 = OpBitcast %v3uint %8117
       %8119 = OpIMul %v3uint %8118 %401
       %8120 = OpIAdd %v3uint %8119 %403
       %8121 = OpCompositeExtract %uint %8120 1
       %8122 = OpCompositeExtract %uint %8120 2
       %8123 = OpIMul %uint %8121 %8122
       %8124 = OpCompositeExtract %uint %8120 0
       %8125 = OpIAdd %uint %8124 %8123
       %8126 = OpIMul %uint %8122 %8125
       %8127 = OpIAdd %uint %8121 %8126
       %8128 = OpIMul %uint %8125 %8127
       %8129 = OpIAdd %uint %8122 %8128
       %8130 = OpIMul %uint %8127 %8129
       %8131 = OpIAdd %uint %8125 %8130
       %8132 = OpCompositeInsert %v3uint %8131 %8120 0
       %8133 = OpIMul %uint %8129 %8131
       %8134 = OpIAdd %uint %8127 %8133
       %8135 = OpCompositeInsert %v3uint %8134 %8132 1
       %8136 = OpIMul %uint %8131 %8134
       %8137 = OpIAdd %uint %8129 %8136
       %8138 = OpCompositeInsert %v3uint %8137 %8135 2
       %8139 = OpBitwiseAnd %v3uint %404 %405
       %8140 = OpShiftRightLogical %v3uint %8138 %8139
       %8141 = OpConvertUToF %v3float %8140
       %8142 = OpExtInst %v3float %1 Fma %8141 %522 %511
       %8143 = OpExtInst %v3float %1 Normalize %8142
       %8144 = OpVectorTimesScalar %v3float %8143 %float_0_2588
       %8145 = OpFAdd %v3float %8110 %8144
       %8146 = OpFSub %v3float %8084 %8145
       %8147 = OpCompositeExtract %float %8101 3
       %8148 = OpDot %float %8146 %8146
       %8149 = OpExtInst %float %1 NMin %8147 %8148
       %8108 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %8149
       %8150 = OpFAdd %float %8112 %float_1
       %8111 = OpCompositeInsert %v3float %8150 %8110 2
               OpBranch %8107
       %8114 = OpLabel
               OpBranch %8100
       %8100 = OpLabel
       %8151 = OpCompositeExtract %float %8110 1
       %8152 = OpFAdd %float %8151 %float_1
       %8099 = OpCompositeInsert %v3float %8152 %8110 1
               OpBranch %8097
       %8104 = OpLabel
               OpBranch %8090
       %8090 = OpLabel
       %8153 = OpCompositeExtract %float %8098 0
       %8154 = OpFAdd %float %8153 %float_1
       %8091 = OpCompositeInsert %v3float %8154 %8098 0
               OpBranch %8087
       %8094 = OpLabel
       %8155 = OpCompositeExtract %float %8088 3
       %8156 = OpExtInst %float %1 Sqrt %8155
       %8157 = OpExtInst %float %1 Fma %8156 %float_2 %float_n1
       %8158 = OpExtInst %float %1 FAbs %8157
       %8078 = OpExtInst %float %1 Fma %8158 %8075 %8077
       %8074 = OpVectorTimesScalar %v3float %8073 %float_2
       %8076 = OpFMul %float %8075 %float_0_5
               OpBranch %8072
       %8072 = OpLabel
       %8080 = OpIAdd %uint %8079 %uint_1
               OpBranch %8069
       %8082 = OpLabel
       %8159 = OpExtInst %float %1 FMix %float_n1 %float_1 %8077
       %8160 = OpExtInst %float %1 FClamp %8159 %float_0 %float_1
       %8161 = OpFMul %v3float %8059 %277
       %8162 = OpVectorTimesScalar %v3float %8161 %float_4_76837158en07
       %8163 = OpFAdd %v3float %8162 %137
       %8164 = OpExtInst %v3float %1 Fma %8058 %277 %8163
       %8165 = OpExtInst %v3float %1 Floor %8164
       %8166 = OpFNegate %v3float %8165
       %8167 = OpExtInst %v3float %1 Fma %8058 %277 %8166
       %8168 = OpVectorTimesScalar %v3float %8167 %float_2097152
       %8169 = OpExtInst %v3float %1 Fma %8059 %277 %8168
       %8170 = OpVectorTimesScalar %v3float %8169 %float_1
               OpBranch %8171
       %8171 = OpLabel
       %8172 = OpPhi %v3float %542 %8082 %8173 %8174
       %8175 = OpPhi %v3float %8170 %8082 %8176 %8174
       %8177 = OpPhi %float %float_1 %8082 %8178 %8174
       %8179 = OpPhi %float %float_0 %8082 %8180 %8174
       %8181 = OpPhi %uint %uint_0 %8082 %8182 %8174
       %8183 = OpULessThan %bool %8181 %uint_1
               OpLoopMerge %8184 %8174 DontUnroll
               OpBranchConditional %8183 %8185 %8184
       %8185 = OpLabel
       %8186 = OpExtInst %v3float %1 Fract %8175
       %8187 = OpExtInst %v3float %1 Floor %8175
       %8188 = OpCompositeInsert %v3float %float_0 %8172 0
               OpBranch %8189
       %8189 = OpLabel
       %8190 = OpPhi %v4float %352 %8185 %8191 %8192
       %8173 = OpPhi %v3float %8188 %8185 %8193 %8192
       %8194 = OpCompositeExtract %float %8173 0
       %8195 = OpFOrdLessThanEqual %bool %8194 %float_1
               OpLoopMerge %8196 %8192 None
               OpBranchConditional %8195 %8197 %8196
       %8197 = OpLabel
       %8198 = OpCompositeInsert %v3float %float_0 %8173 1
               OpBranch %8199
       %8199 = OpLabel
       %8200 = OpPhi %v3float %8198 %8197 %8201 %8202
       %8191 = OpPhi %v4float %8190 %8197 %8203 %8202
       %8204 = OpCompositeExtract %float %8200 1
       %8205 = OpFOrdLessThanEqual %bool %8204 %float_1
               OpLoopMerge %8206 %8202 None
               OpBranchConditional %8205 %8207 %8206
       %8207 = OpLabel
       %8208 = OpCompositeInsert %v3float %float_0 %8200 2
               OpBranch %8209
       %8209 = OpLabel
       %8203 = OpPhi %v4float %8191 %8207 %8210 %8211
       %8212 = OpPhi %v3float %8208 %8207 %8213 %8211
       %8214 = OpCompositeExtract %float %8212 2
       %8215 = OpFOrdLessThanEqual %bool %8214 %float_1
               OpLoopMerge %8216 %8211 None
               OpBranchConditional %8215 %8211 %8216
       %8211 = OpLabel
       %8217 = OpFAdd %v3float %8187 %8212
       %8218 = OpVectorShuffle %v3float %538 %8217 3 4 5
       %8219 = OpConvertFToS %v3int %8218
       %8220 = OpBitcast %v3uint %8219
       %8221 = OpIMul %v3uint %8220 %401
       %8222 = OpIAdd %v3uint %8221 %403
       %8223 = OpCompositeExtract %uint %8222 1
       %8224 = OpCompositeExtract %uint %8222 2
       %8225 = OpIMul %uint %8223 %8224
       %8226 = OpCompositeExtract %uint %8222 0
       %8227 = OpIAdd %uint %8226 %8225
       %8228 = OpIMul %uint %8224 %8227
       %8229 = OpIAdd %uint %8223 %8228
       %8230 = OpIMul %uint %8227 %8229
       %8231 = OpIAdd %uint %8224 %8230
       %8232 = OpIMul %uint %8229 %8231
       %8233 = OpIAdd %uint %8227 %8232
       %8234 = OpCompositeInsert %v3uint %8233 %8222 0
       %8235 = OpIMul %uint %8231 %8233
       %8236 = OpIAdd %uint %8229 %8235
       %8237 = OpCompositeInsert %v3uint %8236 %8234 1
       %8238 = OpIMul %uint %8233 %8236
       %8239 = OpIAdd %uint %8231 %8238
       %8240 = OpCompositeInsert %v3uint %8239 %8237 2
       %8241 = OpBitwiseAnd %v3uint %404 %405
       %8242 = OpShiftRightLogical %v3uint %8240 %8241
       %8243 = OpConvertUToF %v3float %8242
       %8244 = OpExtInst %v3float %1 Fma %8243 %522 %511
       %8245 = OpExtInst %v3float %1 Normalize %8244
       %8246 = OpVectorTimesScalar %v3float %8245 %float_0_2588
       %8247 = OpFAdd %v3float %8212 %8246
       %8248 = OpFSub %v3float %8186 %8247
       %8249 = OpCompositeExtract %float %8203 3
       %8250 = OpDot %float %8248 %8248
       %8251 = OpExtInst %float %1 NMin %8249 %8250
       %8210 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %8251
       %8252 = OpFAdd %float %8214 %float_1
       %8213 = OpCompositeInsert %v3float %8252 %8212 2
               OpBranch %8209
       %8216 = OpLabel
               OpBranch %8202
       %8202 = OpLabel
       %8253 = OpCompositeExtract %float %8212 1
       %8254 = OpFAdd %float %8253 %float_1
       %8201 = OpCompositeInsert %v3float %8254 %8212 1
               OpBranch %8199
       %8206 = OpLabel
               OpBranch %8192
       %8192 = OpLabel
       %8255 = OpCompositeExtract %float %8200 0
       %8256 = OpFAdd %float %8255 %float_1
       %8193 = OpCompositeInsert %v3float %8256 %8200 0
               OpBranch %8189
       %8196 = OpLabel
       %8257 = OpCompositeExtract %float %8190 3
       %8258 = OpExtInst %float %1 Sqrt %8257
       %8259 = OpExtInst %float %1 Fma %8258 %float_2 %float_n1
       %8260 = OpExtInst %float %1 FAbs %8259
       %8180 = OpExtInst %float %1 Fma %8260 %8177 %8179
       %8176 = OpVectorTimesScalar %v3float %8175 %float_2
       %8178 = OpFMul %float %8177 %float_0_5
               OpBranch %8174
       %8174 = OpLabel
       %8182 = OpIAdd %uint %8181 %uint_1
               OpBranch %8171
       %8184 = OpLabel
       %8261 = OpExtInst %float %1 FMix %float_n1 %float_1 %8179
       %8262 = OpExtInst %float %1 FClamp %8261 %float_0 %float_1
       %8263 = OpFAdd %float %8160 %8262
       %8264 = OpFNegate %float %8263
       %8265 = OpExtInst %float %1 Fma %7734 %8053 %8264
       %8266 = OpExtInst %float %1 Fma %1654 %1656 %8265
       %8267 = OpFMul %float %773 %8266
       %8268 = OpExtInst %float %1 FClamp %8267 %float_0 %float_1
       %8269 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_1
       %8270 = OpLoad %float %8269
       %8271 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_0
       %8272 = OpLoad %float %8271
       %8273 = OpExtInst %float %1 FMix %8270 %8272 %8268
       %8274 = OpCompositeExtract %float %3517 2
       %8275 = OpCompositeConstruct %v3float %8274 %8274 %8274
       %8276 = OpExtInst %v3float %1 Fma %8275 %620 %640
       %8277 = OpDPdx %v3float %592
       %8278 = OpVectorTimesScalar %v3float %8277 %float_2097152
       %8279 = OpDPdx %v3float %8276
       %8280 = OpFAdd %v3float %8278 %8279
       %8281 = OpDPdy %v3float %592
       %8282 = OpVectorTimesScalar %v3float %8281 %float_2097152
       %8283 = OpDPdy %v3float %8276
       %8284 = OpFAdd %v3float %8282 %8283
       %8285 = OpExtInst %v3float %1 Cross %8280 %8284
       %8286 = OpExtInst %v3float %1 Normalize %8285
       %8287 = OpFSub %v3float %8286 %7756
       %8288 = OpFAdd %v3float %8287 %620
       %8289 = OpDot %float %7762 %657
       %8290 = OpExtInst %float %1 NMax %float_0 %8289
       %8291 = OpFSub %float %float_1 %8290
       %8292 = OpExtInst %float %1 FAbs %8291
       %8293 = OpExtInst %float %1 NMax %8292 %float_9_99999975en05
       %8294 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_2
       %8295 = OpLoad %float %8294
       %8296 = OpFOrdLessThanEqual %bool %8293 %float_0
       %8297 = OpExtInst %float %1 Pow %8293 %8295
       %8298 = OpSelect %float %8296 %float_0 %8297
       %8299 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_0
       %8300 = OpLoad %float %8299
       %8301 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_3
       %8302 = OpLoad %float %8301
       %8303 = OpExtInst %float %1 Fma %8298 %8300 %8302
       %8304 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_2
       %8305 = OpLoad %float %8304
       %8306 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_1
       %8307 = OpLoad %float %8306
       %8308 = OpExtInst %float %1 FMix %8305 %8307 %8303
       %8309 = OpCompositeConstruct %v3float %8308 %8308 %8308
       %8310 = OpExtInst %v3float %1 FMix %7762 %290 %8309
       %8311 = OpCompositeConstruct %v3float %772 %772 %772
       %8312 = OpExtInst %v3float %1 FMix %8288 %8310 %8311
       %8313 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_3
       %8314 = OpLoad %float %8313
       %8315 = OpExtInst %float %1 FMix %8314 %float_0 %772
       %8316 = OpCompositeConstruct %v3float %8315 %8315 %8315
       %8317 = OpExtInst %v3float %1 FMix %8312 %290 %8316
       %8318 = OpExtInst %float %1 Fma %1443 %1652 %1443
       %8319 = OpExtInst %float %1 Fma %8054 %8263 %8054
       %8320 = OpFAdd %float %8318 %8319
       %8321 = OpFMul %float %773 %8320
       %8322 = OpCompositeConstruct %v3float %8321 %8321 %8321
       %8323 = OpExtInst %v3float %1 Fma %8322 %620 %640
       %8324 = OpDPdx %v3float %592
       %8325 = OpVectorTimesScalar %v3float %8324 %float_2097152
       %8326 = OpDPdx %v3float %8323
       %8327 = OpFAdd %v3float %8325 %8326
       %8328 = OpDPdy %v3float %592
       %8329 = OpVectorTimesScalar %v3float %8328 %float_2097152
       %8330 = OpDPdy %v3float %8323
       %8331 = OpFAdd %v3float %8329 %8330
       %8332 = OpExtInst %v3float %1 Cross %8327 %8331
       %8333 = OpExtInst %v3float %1 Normalize %8332
       %8334 = OpFSub %v3float %8333 %7756
       %8335 = OpFAdd %v3float %8334 %620
       %8336 = OpCompositeConstruct %v3float %1443 %1443 %1443
       %8337 = OpExtInst %v3float %1 FMix %8317 %8335 %8336
       %8338 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_97 %int_0
       %8339 = OpLoad %float %8338
       %8340 = OpExtInst %float %1 FMix %8339 %float_1 %8268
       %8341 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_1
       %8342 = OpLoad %float %8341
       %8343 = OpExtInst %float %1 Pow %8293 %8342
       %8344 = OpSelect %float %8296 %float_0 %8343
       %8345 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_3
       %8346 = OpLoad %float %8345
       %8347 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_2
       %8348 = OpLoad %float %8347
       %8349 = OpExtInst %float %1 Fma %8344 %8346 %8348
       %8350 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_0
       %8351 = OpLoad %float %8350
       %8352 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_103 %int_3
       %8353 = OpLoad %float %8352
       %8354 = OpExtInst %float %1 FMix %8351 %8353 %8349
       %8355 = OpExtInst %float %1 FMix %8354 %float_1 %8268
       %8356 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_1
       %8357 = OpLoad %float %8356
       %8358 = OpExtInst %float %1 FMix %float_0 %8357 %8268
       %8359 = OpCompositeConstruct %v3float %8358 %8358 %8358
       %8360 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_107
       %8361 = OpLoad %v4float %8360
       %8362 = OpVectorShuffle %v3float %8361 %8361 0 1 2
       %8363 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_106
       %8364 = OpLoad %v4float %8363
       %8365 = OpVectorShuffle %v3float %8364 %8364 0 1 2
       %8366 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_2
       %8367 = OpLoad %float %8366
       %8368 = OpCompositeConstruct %v3float %8367 %8367 %8367
       %8369 = OpFAdd %v3float %8362 %8365
       %8370 = OpFDiv %v3float %8362 %8369
       %8371 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_107 %int_3
       %8372 = OpLoad %float %8371
       %8373 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_108 %int_0
       %8374 = OpLoad %float %8373
       %8375 = OpFSub %float %695 %float_0_333299994
       %8376 = OpFOrdLessThan %bool %8375 %float_0
               OpSelectionMerge %8377 None
               OpBranchConditional %8376 %8378 %8377
       %8378 = OpLabel
               OpKill
       %8377 = OpLabel
       %8379 = OpAccessChain %_ptr_Uniform_uint %View %uint_20
       %8380 = OpLoad %uint %8379
       %8381 = OpConvertUToF %float %8380
       %8382 = OpVectorTimesScalar %v2float %464 %8381
       %8383 = OpFAdd %v2float %621 %8382
       %8384 = OpDot %float %8383 %465
       %8385 = OpExtInst %float %1 Fract %8384
       %8386 = OpFMul %float %float_52_9829178 %8385
       %8387 = OpExtInst %float %1 Fract %8386
       %8388 = OpIMul %uint %580 %uint_41
       %8389 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %8388
       %8390 = OpLoad %v4float %8389
       %8391 = OpCompositeExtract %float %8390 0
       %8392 = OpBitcast %uint %8391
       %8393 = OpBitwiseAnd %uint %8392 %uint_512
       %8394 = OpINotEqual %bool %8393 %uint_0
       %8395 = OpSelect %uint %8394 %uint_32 %uint_0
       %8396 = OpBitwiseOr %uint %uint_1 %8395
       %8397 = OpLoad %v4float %8389
       %8398 = OpCompositeExtract %float %8397 0
       %8399 = OpBitcast %uint %8398
       %8400 = OpBitwiseAnd %uint %8399 %uint_256
       %8401 = OpINotEqual %bool %8400 %uint_0
       %8402 = OpSelect %uint %8401 %uint_64 %uint_0
       %8403 = OpBitwiseOr %uint %8396 %8402
       %8404 = OpBitwiseAnd %uint %8403 %uint_4294967288
       %8405 = OpBitwiseOr %uint %8404 %uint_4
       %8406 = OpVectorShuffle %v3float %8359 %457 0 1 2
       %8407 = OpExtInst %v3float %1 FClamp %8406 %102 %127
       %8408 = OpVectorShuffle %v3float %610 %610 3 3 3
       %8409 = OpVectorShuffle %v3float %610 %610 0 1 2
       %8410 = OpExtInst %v3float %1 Fma %8407 %8408 %8409
       %8411 = OpExtInst %float %1 FClamp %8355 %float_0 %float_1
       %8412 = OpCompositeExtract %float %612 3
       %8413 = OpCompositeExtract %float %612 0
       %8414 = OpExtInst %float %1 Fma %8411 %8412 %8413
       %8415 = OpCompositeInsert %v4float %8414 %543 1
       %8416 = OpCompositeExtract %float %614 1
       %8417 = OpCompositeExtract %float %614 0
       %8418 = OpExtInst %float %1 Fma %8273 %8416 %8417
       %8419 = OpAccessChain %_ptr_Uniform_float %View %uint_39
       %8420 = OpLoad %float %8419
       %8421 = OpExtInst %float %1 NMax %8420 %8418
       %8422 = OpExtInst %float %1 FClamp %8421 %float_0 %float_1
       %8423 = OpCompositeInsert %v4float %8422 %8415 2
       %8424 = OpExtInst %float %1 FClamp %8340 %float_0 %float_1
       %8425 = OpCompositeInsert %v4float %8424 %8423 3
       %8426 = OpVectorShuffle %v3float %8370 %457 0 1 2
       %8427 = OpExtInst %v3float %1 FClamp %8426 %102 %127
       %8428 = OpVectorShuffle %v4float %457 %8427 4 5 6 3
       %8429 = OpVectorShuffle %v3float %8369 %457 0 1 2
       %8430 = OpExtInst %v3float %1 FClamp %8429 %102 %163
       %8431 = OpCompositeInsert %v4float %float_0 %8428 3
       %8432 = OpVectorShuffle %v3float %8368 %457 0 1 2
       %8433 = OpExtInst %v3float %1 FClamp %8432 %102 %163
       %8434 = OpVectorShuffle %v3float %8410 %457 0 1 2
       %8435 = OpExtInst %v3float %1 Normalize %8337
       %8436 = OpDot %float %8435 %8435
       %8437 = OpBitcast %uint %8436
       %8438 = OpBitwiseAnd %uint %8437 %uint_2139095040
       %8439 = OpINotEqual %bool %8438 %uint_2139095040
       %8440 = OpLogicalNot %bool %8439
               OpSelectionMerge %8441 DontFlatten
               OpBranchConditional %8440 %8442 %8441
       %8442 = OpLabel
       %8443 = OpExtInst %v3float %1 Normalize %620
               OpBranch %8441
       %8441 = OpLabel
       %8444 = OpPhi %v3float %8337 %8377 %8443 %8442
       %8445 = OpPhi %v3float %8435 %8377 %8443 %8442
       %8446 = OpFSub %float %float_1 %8424
       %8447 = OpLoad %v4float %8389
       %8448 = OpCompositeExtract %float %8447 0
       %8449 = OpBitcast %uint %8448
       %8450 = OpBitwiseAnd %uint %8449 %uint_2
       %8451 = OpINotEqual %bool %8450 %uint_0
       %8452 = OpAccessChain %_ptr_Uniform_float %View %uint_38
       %8453 = OpLoad %float %8452
       %8454 = OpFOrdGreaterThan %bool %8453 %float_0
       %8455 = OpLogicalAnd %bool %8451 %8454
               OpSelectionMerge %8456 None
               OpBranchConditional %8455 %8457 %8456
       %8457 = OpLabel
       %8458 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_0
       %8459 = OpLoad %float %8458
               OpBranch %8456
       %8456 = OpLabel
       %8460 = OpPhi %float %float_1 %8441 %8459 %8457
       %8461 = OpLoad %v4float %8389
       %8462 = OpCompositeExtract %float %8461 0
       %8463 = OpBitcast %uint %8462
       %8464 = OpBitwiseAnd %uint %8463 %uint_4
       %8465 = OpINotEqual %bool %8464 %uint_0
               OpSelectionMerge %8466 DontFlatten
               OpBranchConditional %8465 %8467 %8466
       %8467 = OpLabel
       %8468 = OpVectorTimesScalar %v3float %592 %float_2097152
       %8469 = OpFAdd %v3float %8468 %640
       %8470 = OpAccessChain %_ptr_Uniform_v3float %View %uint_33
       %8471 = OpLoad %v3float %8470
       %8472 = OpAccessChain %_ptr_Uniform_v3float %View %uint_34
       %8473 = OpLoad %v3float %8472
       %8474 = OpExtInst %v3float %1 Fma %8469 %8471 %8473
       %8475 = OpExtInst %v3float %1 FClamp %8474 %102 %302
       %8476 = OpAccessChain %_ptr_Uniform_v3float %View %uint_35
       %8477 = OpLoad %v3float %8476
       %8478 = OpFMul %v3float %8475 %8477
       %8479 = OpCompositeExtract %float %8478 0
       %8480 = OpCompositeExtract %float %8478 1
       %8481 = OpCompositeExtract %float %8478 2
       %8482 = OpConvertFToS %int %8479
       %8483 = OpConvertFToS %int %8480
       %8484 = OpConvertFToS %int %8481
       %8485 = OpCompositeConstruct %v4int %8482 %8483 %8484 %int_0
       %8486 = OpVectorShuffle %v3int %8485 %8485 0 1 2
       %8487 = OpLoad %type_3d_image %View_VolumetricLightmapIndirectionTexture
       %8488 = OpImageFetch %v4uint %8487 %8486 Lod %int_0
       %8489 = OpConvertUToF %v4float %8488
       %8490 = OpAccessChain %_ptr_Uniform_float %View %uint_36
       %8491 = OpLoad %float %8490
       %8492 = OpFAdd %float %8491 %float_1
       %8493 = OpVectorShuffle %v3float %8489 %8489 0 1 2
       %8494 = OpVectorTimesScalar %v3float %8493 %8492
       %8495 = OpCompositeExtract %float %8489 3
       %8496 = OpCompositeConstruct %v3float %8495 %8495 %8495
       %8497 = OpFDiv %v3float %8478 %8496
       %8498 = OpExtInst %v3float %1 Fract %8497
       %8499 = OpVectorTimesScalar %v3float %8498 %8491
       %8500 = OpFAdd %v3float %8494 %8499
       %8501 = OpFAdd %v3float %8500 %137
       %8502 = OpAccessChain %_ptr_Uniform_v3float %View %uint_37
       %8503 = OpLoad %v3float %8502
       %8504 = OpFMul %v3float %8501 %8503
       %8505 = OpLoad %type_3d_image_0 %View_DirectionalLightShadowingBrickTexture
       %8506 = OpLoad %type_sampler %View_SharedBilinearClampedSampler
       %8507 = OpSampledImage %type_sampled_image_0 %8505 %8506
       %8508 = OpImageSampleExplicitLod %v4float %8507 %8504 Lod %float_0
       %8509 = OpCompositeExtract %float %8508 0
               OpBranch %8466
       %8466 = OpLabel
       %8510 = OpPhi %float %8460 %8456 %8509 %8467
       %8511 = OpCompositeConstruct %v4float %8510 %float_1 %float_1 %float_1
       %8512 = OpFOrdEqual %v4bool %8511 %98
       %8513 = OpAll %bool %8512
       %8514 = OpFOrdEqual %v4bool %8511 %117
       %8515 = OpAll %bool %8514
       %8516 = OpLogicalNot %bool %8513
       %8517 = OpLogicalNot %bool %8515
       %8518 = OpLogicalAnd %bool %8516 %8517
               OpSelectionMerge %8519 None
               OpBranchConditional %8518 %8520 %8521
       %8521 = OpLabel
               OpSelectionMerge %8522 None
               OpBranchConditional %8513 %8523 %8524
       %8524 = OpLabel
               OpSelectionMerge %8525 None
               OpBranchConditional %8515 %8526 %8525
       %8526 = OpLabel
       %8527 = OpBitwiseOr %uint %8405 %uint_0
       %8528 = OpBitwiseOr %uint %8527 %uint_0
               OpBranch %8525
       %8525 = OpLabel
       %8529 = OpPhi %uint %8405 %8524 %8528 %8526
               OpBranch %8522
       %8523 = OpLabel
       %8530 = OpBitwiseOr %uint %8405 %uint_0
       %8531 = OpBitwiseOr %uint %8530 %uint_16
               OpBranch %8522
       %8522 = OpLabel
       %8532 = OpPhi %uint %8529 %8525 %8531 %8523
               OpBranch %8519
       %8520 = OpLabel
       %8533 = OpBitwiseOr %uint %8405 %uint_8
               OpBranch %8519
       %8519 = OpLabel
       %8534 = OpPhi %uint %8532 %8522 %8533 %8520
       %8535 = OpFMul %float %float_0_0799999982 %8414
       %8536 = OpCompositeConstruct %v3float %8535 %8535 %8535
       %8537 = OpAccessChain %_ptr_Uniform_float %View %uint_15 %int_3
       %8538 = OpLoad %float %8537
       %8539 = OpVectorTimesScalar %v3float %8434 %8538
       %8540 = OpFAdd %v3float %8539 %8409
       %8541 = OpAccessChain %_ptr_Uniform_float %View %uint_16 %int_3
       %8542 = OpLoad %float %8541
       %8543 = OpVectorTimesScalar %v3float %8536 %8542
       %8544 = OpVectorShuffle %v3float %612 %612 0 1 2
       %8545 = OpFAdd %v3float %8543 %8544
       %8546 = OpAccessChain %_ptr_Uniform_float %View %uint_25
       %8547 = OpLoad %float %8546
       %8548 = OpFOrdNotEqual %bool %8547 %float_0
               OpSelectionMerge %8549 None
               OpBranchConditional %8548 %8550 %8549
       %8550 = OpLabel
       %8551 = OpVectorTimesScalar %v3float %8545 %float_0_449999988
       %8552 = OpFAdd %v3float %8540 %8551
               OpBranch %8549
       %8549 = OpLabel
       %8553 = OpPhi %v3float %8540 %8519 %8552 %8550
       %8554 = OpCompositeConstruct %v3bool %8548 %8548 %8548
       %8555 = OpSelect %v3float %8554 %102 %8545
               OpSelectionMerge %8556 None
               OpBranchConditional %8454 %8557 %8556
       %8557 = OpLabel
       %8558 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_1 %int_0
       %8559 = OpLoad %v4float %8558
       %8560 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_0
       %8561 = OpLoad %v4float %8560
       %8562 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_3 %uint_0
       %8563 = OpLoad %float %8562
       %8564 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_1 %int_1
       %8565 = OpLoad %v4float %8564
       %8566 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_1
       %8567 = OpLoad %v4float %8566
       %8568 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_3 %uint_1
       %8569 = OpLoad %float %8568
       %8570 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_1 %int_2
       %8571 = OpLoad %v4float %8570
       %8572 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_2
       %8573 = OpLoad %v4float %8572
       %8574 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_3 %uint_2
       %8575 = OpLoad %float %8574
       %8576 = OpCompositeExtract %float %8445 1
       %8577 = OpFMul %float %float_n0_488602996 %8576
       %8578 = OpCompositeInsert %v4float %8577 %551 1
       %8579 = OpCompositeExtract %float %8445 2
       %8580 = OpFMul %float %float_0_488602996 %8579
       %8581 = OpCompositeInsert %v4float %8580 %8578 2
       %8582 = OpCompositeExtract %float %8445 0
       %8583 = OpFMul %float %float_n0_488602996 %8582
       %8584 = OpCompositeInsert %v4float %8583 %8581 3
       %8585 = OpFMul %v3float %8445 %8445
       %8586 = OpFMul %float %float_1_09254801 %8582
       %8587 = OpFMul %float %8586 %8576
       %8588 = OpCompositeInsert %v4float %8587 %540 0
       %8589 = OpFMul %float %float_n1_09254801 %8576
       %8590 = OpFMul %float %8589 %8579
       %8591 = OpCompositeInsert %v4float %8590 %8588 1
       %8592 = OpCompositeExtract %float %8585 2
       %8593 = OpExtInst %float %1 Fma %float_3 %8592 %float_n1
       %8594 = OpFMul %float %float_0_315391988 %8593
       %8595 = OpCompositeInsert %v4float %8594 %8591 2
       %8596 = OpFMul %float %float_n1_09254801 %8582
       %8597 = OpFMul %float %8596 %8579
       %8598 = OpCompositeInsert %v4float %8597 %8595 3
       %8599 = OpCompositeExtract %float %8585 0
       %8600 = OpCompositeExtract %float %8585 1
       %8601 = OpFSub %float %8599 %8600
       %8602 = OpCompositeInsert %v4float %float_0_886227548 %8584 0
       %8603 = OpVectorShuffle %v3float %8602 %8602 1 2 3
       %8604 = OpVectorTimesScalar %v3float %8603 %float_2_09439516
       %8605 = OpVectorShuffle %v4float %8602 %8604 0 4 5 6
       %8606 = OpVectorTimesScalar %v4float %8598 %float_0_785398185
       %8607 = OpFMul %float %8601 %float_0_429042608
       %8608 = OpDot %float %8559 %8605
       %8609 = OpDot %float %8561 %8606
       %8610 = OpFAdd %float %8608 %8609
       %8611 = OpExtInst %float %1 Fma %8563 %8607 %8610
       %8612 = OpCompositeInsert %v3float %8611 %552 0
       %8613 = OpDot %float %8565 %8605
       %8614 = OpDot %float %8567 %8606
       %8615 = OpFAdd %float %8613 %8614
       %8616 = OpExtInst %float %1 Fma %8569 %8607 %8615
       %8617 = OpCompositeInsert %v3float %8616 %8612 1
       %8618 = OpDot %float %8571 %8605
       %8619 = OpDot %float %8573 %8606
       %8620 = OpFAdd %float %8618 %8619
       %8621 = OpExtInst %float %1 Fma %8575 %8607 %8620
       %8622 = OpCompositeInsert %v3float %8621 %8617 2
       %8623 = OpExtInst %v3float %1 NMax %102 %8622
               OpBranch %8556
       %8556 = OpLabel
       %8624 = OpPhi %v3float %102 %8549 %8623 %8557
       %8625 = OpAccessChain %_ptr_Uniform_v3float %View %uint_24
       %8626 = OpLoad %v3float %8625
       %8627 = OpFMul %v3float %8624 %8626
       %8628 = OpFMul %v3float %8627 %8553
       %8629 = OpVectorTimesScalar %v3float %8434 %float_2_04040003
       %8630 = OpFSub %v3float %8629 %174
       %8631 = OpVectorTimesScalar %v3float %8434 %float_n4_79510021
       %8632 = OpFAdd %v3float %8631 %177
       %8633 = OpVectorTimesScalar %v3float %8434 %float_2_75519991
       %8634 = OpFAdd %v3float %8633 %180
       %8635 = OpVectorTimesScalar %v3float %8630 %float_1
       %8636 = OpFAdd %v3float %8635 %8632
       %8637 = OpVectorTimesScalar %v3float %8636 %float_1
       %8638 = OpFAdd %v3float %8637 %8634
       %8639 = OpVectorTimesScalar %v3float %8638 %float_1
       %8640 = OpExtInst %v3float %1 NMax %127 %8639
       %8641 = OpFMul %v3float %8628 %8640
       %8642 = OpVectorTimesScalar %v3float %8553 %8424
       %8643 = OpVectorTimesScalar %v3float %8641 %8424
       %8644 = OpAccessChain %_ptr_Uniform_v4float %View %uint_11
       %8645 = OpLoad %v4float %8644
       %8646 = OpVectorShuffle %v2float %8645 %8645 2 3
       %8647 = OpFMul %v2float %623 %8646
       %8648 = OpConvertFToU %v2uint %8647
       %8649 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_3
       %8650 = OpLoad %uint %8649
       %8651 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_4
       %8652 = OpLoad %v3float %8651
       %8653 = OpAccessChain %_ptr_Uniform_v3int %OpaqueBasePass %uint_2
       %8654 = OpLoad %v3int %8653
       %8655 = OpCompositeExtract %float %8652 0
       %8656 = OpCompositeExtract %float %8652 1
       %8657 = OpExtInst %float %1 Fma %584 %8655 %8656
       %8658 = OpExtInst %float %1 Log2 %8657
       %8659 = OpCompositeExtract %float %8652 2
       %8660 = OpFMul %float %8658 %8659
       %8661 = OpExtInst %float %1 NMax %float_0 %8660
       %8662 = OpConvertFToU %uint %8661
       %8663 = OpCompositeExtract %int %8654 2
       %8664 = OpISub %int %8663 %int_1
       %8665 = OpBitcast %uint %8664
       %8666 = OpExtInst %uint %1 UMin %8662 %8665
       %8667 = OpCompositeConstruct %v2uint %8650 %8650
       %8668 = OpBitwiseAnd %v2uint %8667 %305
       %8669 = OpShiftRightLogical %v2uint %8648 %8668
       %8670 = OpCompositeExtract %uint %8669 0
       %8671 = OpCompositeExtract %uint %8669 1
       %8672 = OpCompositeExtract %int %8654 1
       %8673 = OpBitcast %uint %8672
       %8674 = OpIMul %uint %8666 %8673
       %8675 = OpIAdd %uint %8674 %8671
       %8676 = OpCompositeExtract %int %8654 0
       %8677 = OpBitcast %uint %8676
       %8678 = OpIMul %uint %8675 %8677
       %8679 = OpIAdd %uint %8678 %8670
       %8680 = OpAccessChain %_ptr_Uniform_uint %SingleLayerWater %uint_3
       %8681 = OpLoad %uint %8680
       %8682 = OpINotEqual %bool %8681 %uint_0
       %8683 = OpAccessChain %_ptr_Uniform_uint %SingleLayerWater %uint_4
       %8684 = OpLoad %uint %8683
       %8685 = OpINotEqual %bool %8684 %uint_0
       %8686 = OpLogicalAnd %bool %true %8685
       %8687 = OpExtInst %v2float %1 Trunc %124
       %8688 = OpConvertFToS %v2int %8687
       %8689 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_18
       %8690 = OpLoad %int %8689
       %8691 = OpINotEqual %bool %8690 %int_0
               OpSelectionMerge %8692 DontFlatten
               OpBranchConditional %8691 %8693 %8692
       %8693 = OpLabel
       %8694 = OpCompositeExtract %int %8688 0
       %8695 = OpCompositeExtract %int %8688 1
       %8696 = OpCompositeConstruct %v3int %8694 %8695 %int_0
       %8697 = OpVectorShuffle %v2int %8696 %8696 0 1
       %8698 = OpLoad %type_2d_image %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture
       %8699 = OpImageFetch %v4float %8698 %8697 Lod %int_0
               OpBranch %8692
       %8692 = OpLabel
       %8700 = OpPhi %v4float %117 %8556 %8699 %8693
       %8701 = OpFMul %v4float %8700 %8700
       %8702 = OpLoad %v4float %8389
       %8703 = OpCompositeExtract %float %8702 0
       %8704 = OpBitcast %uint %8703
       %8705 = OpBitwiseAnd %uint %8704 %uint_2048
       %8706 = OpINotEqual %bool %8705 %uint_0
       %8707 = OpSelect %uint %8706 %uint_1 %uint_0
       %8708 = OpBitwiseAnd %uint %8704 %uint_4096
       %8709 = OpINotEqual %bool %8708 %uint_0
       %8710 = OpSelect %uint %8709 %uint_1 %uint_0
       %8711 = OpBitwiseAnd %uint %8704 %uint_8192
       %8712 = OpINotEqual %bool %8711 %uint_0
       %8713 = OpSelect %uint %8712 %uint_1 %uint_0
       %8714 = OpShiftLeftLogical %uint %8710 %uint_1
       %8715 = OpBitwiseOr %uint %8707 %8714
       %8716 = OpShiftLeftLogical %uint %8713 %uint_2
       %8717 = OpBitwiseOr %uint %8715 %8716
       %8718 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_1
       %8719 = OpLoad %uint %8718
       %8720 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_8
       %8721 = OpLoad %uint %8720
       %8722 = OpAccessChain %_ptr_Uniform_v2float %OpaqueBasePass %uint_9
       %8723 = OpLoad %v2float %8722
       %8724 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_7
       %8725 = OpLoad %v3float %8724
       %8726 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_5
       %8727 = OpLoad %v3float %8726
       %8728 = OpAccessChain %_ptr_Uniform_float %OpaqueBasePass %uint_6
       %8729 = OpLoad %float %8728
       %8730 = OpINotEqual %bool %8719 %uint_0
               OpSelectionMerge %8731 DontFlatten
               OpBranchConditional %8730 %8732 %8731
       %8732 = OpLabel
       %8733 = OpBitwiseAnd %uint %8721 %uint_2
       %8734 = OpShiftRightLogical %uint %8733 %uint_1
       %8735 = OpConvertUToF %float %8734
       %8736 = OpBitwiseAnd %uint %8721 %uint_4
       %8737 = OpShiftRightLogical %uint %8736 %uint_2
       %8738 = OpConvertUToF %float %8737
       %8739 = OpBitwiseAnd %uint %8721 %uint_8
       %8740 = OpShiftRightLogical %uint %8739 %uint_3
       %8741 = OpConvertUToF %float %8740
       %8742 = OpCompositeConstruct %v4float %549 %8735 %8738 %8741
       %8743 = OpShiftRightLogical %uint %8721 %uint_8
       %8744 = OpBitwiseAnd %uint %8743 %uint_7
       %8745 = OpCompositeInsert %v4float %float_1 %8742 0
       %8746 = OpCompositeInsert %v4float %float_1 %8511 0
       %8747 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_10
       %8748 = OpLoad %uint %8747
       %8749 = OpUGreaterThan %bool %8748 %uint_0
               OpSelectionMerge %8750 None
               OpBranchConditional %8749 %8751 %8750
       %8751 = OpLabel
       %8752 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_12
       %8753 = OpLoad %v4float %8752
       %8754 = OpCompositeConstruct %v4float %643 %643 %643 %643
       %8755 = OpFOrdGreaterThanEqual %v4bool %8754 %8753
       %8756 = OpSelect %v4float %8755 %117 %98
       %8757 = OpCompositeExtract %float %8756 0
       %8758 = OpCompositeExtract %float %8756 1
       %8759 = OpFAdd %float %8757 %8758
       %8760 = OpCompositeExtract %float %8756 2
       %8761 = OpFAdd %float %8759 %8760
       %8762 = OpCompositeExtract %float %8756 3
       %8763 = OpFAdd %float %8761 %8762
       %8764 = OpConvertFToU %uint %8763
       %8765 = OpULessThan %bool %8764 %8748
               OpSelectionMerge %8766 None
               OpBranchConditional %8765 %8767 %8766
       %8767 = OpLabel
       %8768 = OpCompositeExtract %float %639 0
       %8769 = OpCompositeExtract %float %639 1
       %8770 = OpCompositeExtract %float %639 2
       %8771 = OpCompositeConstruct %v4float %8768 %8769 %8770 %float_1
       %8772 = OpAccessChain %_ptr_Uniform_mat4v4float %OpaqueBasePass %uint_13 %8764
       %8773 = OpLoad %mat4v4float %8772
       %8774 = OpMatrixTimesVector %v4float %8773 %8771
       %8775 = OpVectorShuffle %v2float %8774 %8774 0 1
       %8776 = OpCompositeExtract %float %8774 3
       %8777 = OpCompositeConstruct %v2float %8776 %8776
       %8778 = OpFDiv %v2float %8775 %8777
       %8779 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_14 %8764
       %8780 = OpLoad %v4float %8779
       %8781 = OpVectorShuffle %v2float %8780 %8780 0 1
       %8782 = OpFOrdGreaterThanEqual %v2bool %8778 %8781
       %8783 = OpVectorShuffle %v2float %8780 %8780 2 3
       %8784 = OpFOrdLessThanEqual %v2bool %8778 %8783
       %8785 = OpCompositeExtract %bool %8782 0
       %8786 = OpCompositeExtract %bool %8784 0
       %8787 = OpLogicalAnd %bool %8785 %8786
       %8788 = OpCompositeExtract %bool %8782 1
       %8789 = OpCompositeExtract %bool %8784 1
       %8790 = OpLogicalAnd %bool %8788 %8789
       %8791 = OpCompositeConstruct %v2bool %8787 %8790
       %8792 = OpAll %bool %8791
               OpSelectionMerge %8793 None
               OpBranchConditional %8792 %8794 %8793
       %8794 = OpLabel
       %8795 = OpLoad %type_2d_image %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas
       %8796 = OpLoad %type_sampler %OpaqueBasePass_Shared_Forward_ShadowmapSampler
       %8797 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_15
       %8798 = OpLoad %v4float %8797
       %8799 = OpCompositeExtract %float %8774 2
       %8800 = OpFSub %float %float_1 %8799
       %8801 = OpVectorShuffle %v2float %8798 %8798 0 1
       %8802 = OpExtInst %v2float %1 Fma %8778 %8801 %527
       %8803 = OpExtInst %v2float %1 Fract %8802
       %8804 = OpExtInst %v2float %1 Floor %8802
       %8805 = OpFAdd %v2float %8804 %312
       %8806 = OpVectorShuffle %v2float %8798 %8798 2 3
       %8807 = OpFMul %v2float %8805 %8806
       %8808 = OpSampledImage %type_sampled_image %8795 %8796
       %8809 = OpImageGather %v4float %8808 %8807 %int_0 None
       %8810 = OpExtInst %float %1 Fma %8800 %float_4000 %float_n1
       %8811 = OpVectorTimesScalar %v4float %8809 %float_4000
       %8812 = OpCompositeConstruct %v4float %8810 %8810 %8810 %8810
       %8813 = OpFSub %v4float %8811 %8812
       %8814 = OpExtInst %v4float %1 FClamp %8813 %98 %117
       %8815 = OpVectorShuffle %v2float %8814 %8814 3 0
       %8816 = OpVectorShuffle %v2float %8814 %8814 2 1
       %8817 = OpVectorShuffle %v2float %8803 %8803 0 0
       %8818 = OpExtInst %v2float %1 FMix %8815 %8816 %8817
       %8819 = OpCompositeExtract %float %8818 0
       %8820 = OpCompositeExtract %float %8818 1
       %8821 = OpCompositeExtract %float %8803 1
       %8822 = OpExtInst %float %1 FMix %8819 %8820 %8821
               OpBranch %8793
       %8793 = OpLabel
       %8823 = OpPhi %float %float_1 %8767 %8822 %8794
               OpBranch %8766
       %8766 = OpLabel
       %8824 = OpPhi %float %float_1 %8751 %8823 %8793
               OpBranch %8750
       %8750 = OpLabel
       %8825 = OpPhi %float %float_1 %8732 %8824 %8766
       %8826 = OpLogicalNot %bool %8682
       %8827 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_11
       %8828 = OpLoad %int %8827
       %8829 = OpINotEqual %bool %8828 %int_n1
       %8830 = OpLogicalAnd %bool %8826 %8829
               OpSelectionMerge %8831 DontFlatten
               OpBranchConditional %8830 %8832 %8831
       %8832 = OpLabel
               OpSelectionMerge %8833 None
               OpSwitch %uint_0 %8834
       %8834 = OpLabel
       %8835 = OpExtInst %float %1 NMax %float_0 %float_0
       %8836 = OpBitcast %uint %8828
       %8837 = OpIMul %uint %8836 %uint_336
       %8838 = OpIAdd %uint %8837 %uint_96
       %8839 = OpShiftRightLogical %uint %8838 %uint_2
       %8840 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8839
       %8841 = OpLoad %uint %8840
       %8842 = OpIAdd %uint %8839 %uint_1
       %8843 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8842
       %8844 = OpLoad %uint %8843
       %8845 = OpIAdd %uint %8839 %uint_2
       %8846 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8845
       %8847 = OpLoad %uint %8846
       %8848 = OpIAdd %uint %8839 %uint_3
       %8849 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8848
       %8850 = OpLoad %uint %8849
       %8851 = OpCompositeConstruct %v4uint %8841 %8844 %8847 %8850
       %8852 = OpBitcast %v4float %8851
       %8853 = OpCompositeInsert %mat4v4float %8852 %541 2
       %8854 = OpIAdd %uint %8837 %uint_128
       %8855 = OpShiftRightLogical %uint %8854 %uint_2
       %8856 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8855
       %8857 = OpLoad %uint %8856
       %8858 = OpIAdd %uint %8855 %uint_1
       %8859 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8858
       %8860 = OpLoad %uint %8859
       %8861 = OpIAdd %uint %8855 %uint_2
       %8862 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8861
       %8863 = OpLoad %uint %8862
       %8864 = OpIAdd %uint %8855 %uint_3
       %8865 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8864
       %8866 = OpLoad %uint %8865
       %8867 = OpCompositeConstruct %v4uint %8857 %8860 %8863 %8866
       %8868 = OpBitcast %v4float %8867
       %8869 = OpCompositeInsert %mat4v4float %8868 %541 0
       %8870 = OpIAdd %uint %8837 %uint_144
       %8871 = OpShiftRightLogical %uint %8870 %uint_2
       %8872 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8871
       %8873 = OpLoad %uint %8872
       %8874 = OpIAdd %uint %8871 %uint_1
       %8875 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8874
       %8876 = OpLoad %uint %8875
       %8877 = OpIAdd %uint %8871 %uint_2
       %8878 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8877
       %8879 = OpLoad %uint %8878
       %8880 = OpIAdd %uint %8871 %uint_3
       %8881 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8880
       %8882 = OpLoad %uint %8881
       %8883 = OpCompositeConstruct %v4uint %8873 %8876 %8879 %8882
       %8884 = OpBitcast %v4float %8883
       %8885 = OpCompositeInsert %mat4v4float %8884 %8869 1
       %8886 = OpIAdd %uint %8837 %uint_160
       %8887 = OpShiftRightLogical %uint %8886 %uint_2
       %8888 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8887
       %8889 = OpLoad %uint %8888
       %8890 = OpIAdd %uint %8887 %uint_1
       %8891 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8890
       %8892 = OpLoad %uint %8891
       %8893 = OpIAdd %uint %8887 %uint_2
       %8894 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8893
       %8895 = OpLoad %uint %8894
       %8896 = OpIAdd %uint %8887 %uint_3
       %8897 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8896
       %8898 = OpLoad %uint %8897
       %8899 = OpCompositeConstruct %v4uint %8889 %8892 %8895 %8898
       %8900 = OpBitcast %v4float %8899
       %8901 = OpCompositeInsert %mat4v4float %8900 %8885 2
       %8902 = OpIAdd %uint %8837 %uint_176
       %8903 = OpShiftRightLogical %uint %8902 %uint_2
       %8904 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8903
       %8905 = OpLoad %uint %8904
       %8906 = OpIAdd %uint %8903 %uint_1
       %8907 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8906
       %8908 = OpLoad %uint %8907
       %8909 = OpIAdd %uint %8903 %uint_2
       %8910 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8909
       %8911 = OpLoad %uint %8910
       %8912 = OpIAdd %uint %8903 %uint_3
       %8913 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8912
       %8914 = OpLoad %uint %8913
       %8915 = OpCompositeConstruct %v4uint %8905 %8908 %8911 %8914
       %8916 = OpBitcast %v4float %8915
       %8917 = OpCompositeInsert %mat4v4float %8916 %8901 3
       %8918 = OpIAdd %uint %8837 %uint_256
       %8919 = OpShiftRightLogical %uint %8918 %uint_2
       %8920 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8919
       %8921 = OpLoad %uint %8920
       %8922 = OpIAdd %uint %8919 %uint_1
       %8923 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8922
       %8924 = OpLoad %uint %8923
       %8925 = OpIAdd %uint %8919 %uint_2
       %8926 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8925
       %8927 = OpLoad %uint %8926
       %8928 = OpCompositeConstruct %v3uint %8921 %8924 %8927
       %8929 = OpBitcast %v3float %8928
       %8930 = OpIAdd %uint %8837 %uint_268
       %8931 = OpShiftRightLogical %uint %8930 %uint_2
       %8932 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8931
       %8933 = OpLoad %uint %8932
       %8934 = OpIAdd %uint %8837 %uint_272
       %8935 = OpShiftRightLogical %uint %8934 %uint_2
       %8936 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8935
       %8937 = OpLoad %uint %8936
       %8938 = OpIAdd %uint %8935 %uint_1
       %8939 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8938
       %8940 = OpLoad %uint %8939
       %8941 = OpIAdd %uint %8935 %uint_2
       %8942 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8941
       %8943 = OpLoad %uint %8942
       %8944 = OpCompositeConstruct %v3uint %8937 %8940 %8943
       %8945 = OpBitcast %v3float %8944
       %8946 = OpIAdd %uint %8837 %uint_288
       %8947 = OpShiftRightLogical %uint %8946 %uint_2
       %8948 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8947
       %8949 = OpLoad %uint %8948
       %8950 = OpIAdd %uint %8947 %uint_1
       %8951 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8950
       %8952 = OpLoad %uint %8951
       %8953 = OpIAdd %uint %8947 %uint_2
       %8954 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8953
       %8955 = OpLoad %uint %8954
       %8956 = OpCompositeConstruct %v3uint %8949 %8952 %8955
       %8957 = OpBitcast %v3float %8956
       %8958 = OpIAdd %uint %8837 %uint_300
       %8959 = OpShiftRightLogical %uint %8958 %uint_2
       %8960 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8959
       %8961 = OpLoad %uint %8960
       %8962 = OpBitcast %float %8961
       %8963 = OpIAdd %uint %8837 %uint_312
       %8964 = OpShiftRightLogical %uint %8963 %uint_2
       %8965 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8964
       %8966 = OpLoad %uint %8965
       %8967 = OpBitcast %int %8966
       %8968 = OpIAdd %uint %8837 %uint_316
       %8969 = OpShiftRightLogical %uint %8968 %uint_2
       %8970 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8969
       %8971 = OpLoad %uint %8970
       %8972 = OpBitcast %int %8971
       %8973 = OpFNegate %v3float %8929
       %8974 = OpFNegate %v3float %8957
       %8975 = OpIEqual %bool %8933 %uint_0
               OpSelectionMerge %8976 None
               OpBranchConditional %8975 %8977 %8978
       %8978 = OpLabel
       %8979 = OpFAdd %v3float %592 %8929
       %8980 = OpFAdd %v3float %640 %8945
       %8981 = OpVectorTimesScalar %v3float %8979 %float_2097152
       %8982 = OpFAdd %v3float %8981 %8980
       %8983 = OpINotEqual %bool %8933 %uint_2
               OpSelectionMerge %8984 None
               OpBranchConditional %8983 %8985 %8984
       %8985 = OpLabel
               OpSelectionMerge %8986 None
               OpSwitch %uint_0 %8987
       %8987 = OpLabel
       %8988 = OpCompositeExtract %float %8982 0
       %8989 = OpExtInst %float %1 FAbs %8988
       %8990 = OpCompositeExtract %float %8982 1
       %8991 = OpExtInst %float %1 FAbs %8990
       %8992 = OpFOrdGreaterThanEqual %bool %8989 %8991
       %8993 = OpCompositeExtract %float %8982 2
       %8994 = OpExtInst %float %1 FAbs %8993
       %8995 = OpFOrdGreaterThanEqual %bool %8989 %8994
       %8996 = OpLogicalAnd %bool %8992 %8995
               OpSelectionMerge %8997 None
               OpBranchConditional %8996 %8998 %8999
       %8999 = OpLabel
       %9000 = OpFOrdGreaterThan %bool %8991 %8994
               OpSelectionMerge %9001 None
               OpBranchConditional %9000 %9002 %9003
       %9003 = OpLabel
       %9004 = OpFOrdGreaterThan %bool %8993 %float_0
       %9005 = OpSelect %uint %9004 %uint_4 %uint_5
               OpBranch %8986
       %9002 = OpLabel
       %9006 = OpFOrdGreaterThan %bool %8990 %float_0
       %9007 = OpSelect %uint %9006 %uint_2 %uint_3
               OpBranch %8986
       %9001 = OpLabel
               OpUnreachable
       %8998 = OpLabel
       %9008 = OpFOrdGreaterThan %bool %8988 %float_0
       %9009 = OpSelect %uint %9008 %uint_0 %uint_1
               OpBranch %8986
       %8997 = OpLabel
               OpUnreachable
       %8986 = OpLabel
       %9010 = OpPhi %uint %9005 %9003 %9007 %9002 %9009 %8998
       %9011 = OpIAdd %uint %8836 %9010
       %9012 = OpBitcast %int %9011
       %9013 = OpBitcast %uint %9012
       %9014 = OpIMul %uint %9013 %uint_336
       %9015 = OpIAdd %uint %9014 %uint_96
       %9016 = OpShiftRightLogical %uint %9015 %uint_2
       %9017 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9016
       %9018 = OpLoad %uint %9017
       %9019 = OpIAdd %uint %9016 %uint_1
       %9020 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9019
       %9021 = OpLoad %uint %9020
       %9022 = OpIAdd %uint %9016 %uint_2
       %9023 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9022
       %9024 = OpLoad %uint %9023
       %9025 = OpIAdd %uint %9016 %uint_3
       %9026 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9025
       %9027 = OpLoad %uint %9026
       %9028 = OpCompositeConstruct %v4uint %9018 %9021 %9024 %9027
       %9029 = OpBitcast %v4float %9028
       %9030 = OpCompositeInsert %mat4v4float %9029 %541 2
       %9031 = OpIAdd %uint %9014 %uint_128
       %9032 = OpShiftRightLogical %uint %9031 %uint_2
       %9033 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9032
       %9034 = OpLoad %uint %9033
       %9035 = OpIAdd %uint %9032 %uint_1
       %9036 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9035
       %9037 = OpLoad %uint %9036
       %9038 = OpIAdd %uint %9032 %uint_2
       %9039 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9038
       %9040 = OpLoad %uint %9039
       %9041 = OpIAdd %uint %9032 %uint_3
       %9042 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9041
       %9043 = OpLoad %uint %9042
       %9044 = OpCompositeConstruct %v4uint %9034 %9037 %9040 %9043
       %9045 = OpBitcast %v4float %9044
       %9046 = OpCompositeInsert %mat4v4float %9045 %541 0
       %9047 = OpIAdd %uint %9014 %uint_144
       %9048 = OpShiftRightLogical %uint %9047 %uint_2
       %9049 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9048
       %9050 = OpLoad %uint %9049
       %9051 = OpIAdd %uint %9048 %uint_1
       %9052 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9051
       %9053 = OpLoad %uint %9052
       %9054 = OpIAdd %uint %9048 %uint_2
       %9055 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9054
       %9056 = OpLoad %uint %9055
       %9057 = OpIAdd %uint %9048 %uint_3
       %9058 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9057
       %9059 = OpLoad %uint %9058
       %9060 = OpCompositeConstruct %v4uint %9050 %9053 %9056 %9059
       %9061 = OpBitcast %v4float %9060
       %9062 = OpCompositeInsert %mat4v4float %9061 %9046 1
       %9063 = OpIAdd %uint %9014 %uint_160
       %9064 = OpShiftRightLogical %uint %9063 %uint_2
       %9065 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9064
       %9066 = OpLoad %uint %9065
       %9067 = OpIAdd %uint %9064 %uint_1
       %9068 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9067
       %9069 = OpLoad %uint %9068
       %9070 = OpIAdd %uint %9064 %uint_2
       %9071 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9070
       %9072 = OpLoad %uint %9071
       %9073 = OpIAdd %uint %9064 %uint_3
       %9074 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9073
       %9075 = OpLoad %uint %9074
       %9076 = OpCompositeConstruct %v4uint %9066 %9069 %9072 %9075
       %9077 = OpBitcast %v4float %9076
       %9078 = OpCompositeInsert %mat4v4float %9077 %9062 2
       %9079 = OpIAdd %uint %9014 %uint_176
       %9080 = OpShiftRightLogical %uint %9079 %uint_2
       %9081 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9080
       %9082 = OpLoad %uint %9081
       %9083 = OpIAdd %uint %9080 %uint_1
       %9084 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9083
       %9085 = OpLoad %uint %9084
       %9086 = OpIAdd %uint %9080 %uint_2
       %9087 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9086
       %9088 = OpLoad %uint %9087
       %9089 = OpIAdd %uint %9080 %uint_3
       %9090 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9089
       %9091 = OpLoad %uint %9090
       %9092 = OpCompositeConstruct %v4uint %9082 %9085 %9088 %9091
       %9093 = OpBitcast %v4float %9092
       %9094 = OpCompositeInsert %mat4v4float %9093 %9078 3
               OpBranch %8984
       %8984 = OpLabel
       %9095 = OpPhi %mat4v4float %8853 %8978 %9030 %8986
       %9096 = OpPhi %int %8828 %8978 %9012 %8986
       %9097 = OpPhi %mat4v4float %8917 %8978 %9094 %8986
       %9098 = OpCompositeExtract %float %8982 0
       %9099 = OpCompositeExtract %float %8982 1
       %9100 = OpCompositeExtract %float %8982 2
       %9101 = OpCompositeConstruct %v4float %9098 %9099 %9100 %float_1
       %9102 = OpMatrixTimesVector %v4float %9097 %9101
       %9103 = OpCompositeExtract %float %9102 3
       %9104 = OpCompositeConstruct %v3float %9103 %9103 %9103
       %9105 = OpVectorShuffle %v3float %9102 %9102 0 1 2
       %9106 = OpFDiv %v3float %9105 %9104
       %9107 = OpVectorShuffle %v2float %9106 %457 0 1
               OpSelectionMerge %9108 None
               OpSwitch %uint_0 %9109
       %9109 = OpLabel
       %9110 = OpBitcast %uint %9096
       %9111 = OpVectorTimesScalar %v2float %9107 %float_128
       %9112 = OpConvertFToU %v2uint %9111
               OpSelectionMerge %9113 None
               OpSwitch %uint_0 %9114
       %9114 = OpLabel
       %9115 = OpBitcast %int %9110
       %9116 = OpBitcast %uint %9115
       %9117 = OpULessThan %bool %9116 %uint_8192
               OpSelectionMerge %9118 None
               OpBranchConditional %9117 %9119 %9118
       %9119 = OpLabel
               OpBranch %9113
       %9118 = OpLabel
       %9120 = OpISub %uint %9110 %uint_8192
       %9121 = OpIMul %uint %9120 %uint_21845
       %9122 = OpIAdd %uint %uint_8192 %9121
       %9123 = OpCompositeExtract %uint %9112 0
       %9124 = OpCompositeExtract %uint %9112 1
       %9125 = OpShiftLeftLogical %uint %9124 %uint_7
       %9126 = OpIAdd %uint %9123 %9125
       %9127 = OpIAdd %uint %9122 %9126
               OpBranch %9113
       %9113 = OpLabel
       %9128 = OpPhi %uint %9110 %9119 %9127 %9118
       %9129 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9128
       %9130 = OpLoad %uint %9129
       %9131 = OpBitwiseAnd %uint %9130 %uint_1023
       %9132 = OpShiftRightLogical %uint %9130 %uint_10
       %9133 = OpBitwiseAnd %uint %9132 %uint_1023
       %9134 = OpCompositeConstruct %v2uint %9131 %9133
       %9135 = OpShiftRightLogical %uint %9130 %uint_20
       %9136 = OpBitwiseAnd %uint %9135 %uint_63
       %9137 = OpBitwiseAnd %uint %9130 %uint_134217728
       %9138 = OpINotEqual %bool %9137 %uint_0
       %9139 = OpSelect %uint %9117 %uint_7 %9136
       %9140 = OpBitwiseAnd %uint %9139 %uint_31
       %9141 = OpShiftRightLogical %uint %uint_16384 %9140
       %9142 = OpConvertUToF %float %9141
       %9143 = OpVectorTimesScalar %v2float %9107 %9142
       %9144 = OpConvertFToU %v2uint %9143
       %9145 = OpIMul %v2uint %9134 %340
       %9146 = OpBitwiseAnd %v2uint %9144 %341
       %9147 = OpIAdd %v2uint %9145 %9146
               OpSelectionMerge %9148 None
               OpBranchConditional %9138 %9149 %9148
       %9149 = OpLabel
       %9150 = OpCompositeExtract %uint %9147 0
       %9151 = OpCompositeExtract %uint %9147 1
       %9152 = OpCompositeConstruct %v4uint %9150 %9151 %uint_0 %uint_0
       %9153 = OpBitcast %v4int %9152
       %9154 = OpVectorShuffle %v3int %9153 %9153 0 1 2
       %9155 = OpCompositeExtract %int %9153 3
       %9156 = OpLoad %type_2d_image_array_0 %VirtualShadowMap_PhysicalPagePool
       %9157 = OpImageFetch %v4uint %9156 %9154 Lod %9155
       %9158 = OpCompositeExtract %uint %9157 0
       %9159 = OpBitcast %float %9158
               OpBranch %9108
       %9148 = OpLabel
               OpBranch %9108
       %9108 = OpLabel
       %9160 = OpPhi %float %9159 %9149 %float_0 %9148
       %9161 = OpPhi %bool %true %9149 %false %9148
               OpSelectionMerge %9162 None
               OpBranchConditional %9161 %9163 %9162
       %9163 = OpLabel
       %9164 = OpFNegate %float %8835
       %9165 = OpCompositeExtract %float %9095 2 2
       %9166 = OpFMul %float %9164 %9165
       %9167 = OpFDiv %float %9166 %9103
       %9168 = OpFSub %float %9160 %9167
       %9169 = OpCompositeExtract %float %9106 2
       %9170 = OpFOrdGreaterThan %bool %9168 %9169
       %9171 = OpSelect %float %9170 %float_0 %float_1
               OpBranch %8833
       %9162 = OpLabel
               OpBranch %8976
       %8977 = OpLabel
       %9172 = OpFSub %v3float %592 %8973
       %9173 = OpFSub %v3float %640 %8974
       %9174 = OpVectorTimesScalar %v3float %9172 %float_2097152
       %9175 = OpFAdd %v3float %9174 %9173
       %9176 = OpExtInst %float %1 Length %9175
       %9177 = OpExtInst %float %1 Log2 %9176
       %9178 = OpFAdd %float %9177 %8962
       %9179 = OpExtInst %float %1 Floor %9178
       %9180 = OpConvertFToS %int %9179
       %9181 = OpISub %int %9180 %8967
       %9182 = OpExtInst %int %1 SMax %int_0 %9181
       %9183 = OpSLessThan %bool %9182 %8972
               OpSelectionMerge %9184 None
               OpBranchConditional %9183 %9185 %9184
       %9185 = OpLabel
       %9186 = OpIAdd %int %8828 %9182
       %9187 = OpBitcast %uint %9186
       %9188 = OpIMul %uint %9187 %uint_336
       %9189 = OpIAdd %uint %9188 %uint_96
       %9190 = OpShiftRightLogical %uint %9189 %uint_2
       %9191 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9190
       %9192 = OpLoad %uint %9191
       %9193 = OpIAdd %uint %9190 %uint_1
       %9194 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9193
       %9195 = OpLoad %uint %9194
       %9196 = OpIAdd %uint %9190 %uint_2
       %9197 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9196
       %9198 = OpLoad %uint %9197
       %9199 = OpIAdd %uint %9190 %uint_3
       %9200 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9199
       %9201 = OpLoad %uint %9200
       %9202 = OpCompositeConstruct %v4uint %9192 %9195 %9198 %9201
       %9203 = OpBitcast %v4float %9202
       %9204 = OpIAdd %uint %9188 %uint_112
       %9205 = OpShiftRightLogical %uint %9204 %uint_2
       %9206 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9205
       %9207 = OpIAdd %uint %9205 %uint_1
       %9208 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9207
       %9209 = OpIAdd %uint %9205 %uint_2
       %9210 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9209
       %9211 = OpIAdd %uint %9205 %uint_3
       %9212 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9211
       %9213 = OpIAdd %uint %9188 %uint_128
       %9214 = OpShiftRightLogical %uint %9213 %uint_2
       %9215 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9214
       %9216 = OpLoad %uint %9215
       %9217 = OpIAdd %uint %9214 %uint_1
       %9218 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9217
       %9219 = OpLoad %uint %9218
       %9220 = OpIAdd %uint %9214 %uint_2
       %9221 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9220
       %9222 = OpLoad %uint %9221
       %9223 = OpIAdd %uint %9214 %uint_3
       %9224 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9223
       %9225 = OpLoad %uint %9224
       %9226 = OpCompositeConstruct %v4uint %9216 %9219 %9222 %9225
       %9227 = OpBitcast %v4float %9226
       %9228 = OpCompositeInsert %mat4v4float %9227 %541 0
       %9229 = OpIAdd %uint %9188 %uint_144
       %9230 = OpShiftRightLogical %uint %9229 %uint_2
       %9231 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9230
       %9232 = OpLoad %uint %9231
       %9233 = OpIAdd %uint %9230 %uint_1
       %9234 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9233
       %9235 = OpLoad %uint %9234
       %9236 = OpIAdd %uint %9230 %uint_2
       %9237 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9236
       %9238 = OpLoad %uint %9237
       %9239 = OpIAdd %uint %9230 %uint_3
       %9240 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9239
       %9241 = OpLoad %uint %9240
       %9242 = OpCompositeConstruct %v4uint %9232 %9235 %9238 %9241
       %9243 = OpBitcast %v4float %9242
       %9244 = OpCompositeInsert %mat4v4float %9243 %9228 1
       %9245 = OpIAdd %uint %9188 %uint_160
       %9246 = OpShiftRightLogical %uint %9245 %uint_2
       %9247 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9246
       %9248 = OpLoad %uint %9247
       %9249 = OpIAdd %uint %9246 %uint_1
       %9250 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9249
       %9251 = OpLoad %uint %9250
       %9252 = OpIAdd %uint %9246 %uint_2
       %9253 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9252
       %9254 = OpLoad %uint %9253
       %9255 = OpIAdd %uint %9246 %uint_3
       %9256 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9255
       %9257 = OpLoad %uint %9256
       %9258 = OpCompositeConstruct %v4uint %9248 %9251 %9254 %9257
       %9259 = OpBitcast %v4float %9258
       %9260 = OpCompositeInsert %mat4v4float %9259 %9244 2
       %9261 = OpIAdd %uint %9188 %uint_176
       %9262 = OpShiftRightLogical %uint %9261 %uint_2
       %9263 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9262
       %9264 = OpLoad %uint %9263
       %9265 = OpIAdd %uint %9262 %uint_1
       %9266 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9265
       %9267 = OpLoad %uint %9266
       %9268 = OpIAdd %uint %9262 %uint_2
       %9269 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9268
       %9270 = OpLoad %uint %9269
       %9271 = OpIAdd %uint %9262 %uint_3
       %9272 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9271
       %9273 = OpLoad %uint %9272
       %9274 = OpCompositeConstruct %v4uint %9264 %9267 %9270 %9273
       %9275 = OpBitcast %v4float %9274
       %9276 = OpCompositeInsert %mat4v4float %9275 %9260 3
       %9277 = OpIAdd %uint %9188 %uint_256
       %9278 = OpShiftRightLogical %uint %9277 %uint_2
       %9279 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9278
       %9280 = OpLoad %uint %9279
       %9281 = OpIAdd %uint %9278 %uint_1
       %9282 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9281
       %9283 = OpLoad %uint %9282
       %9284 = OpIAdd %uint %9278 %uint_2
       %9285 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9284
       %9286 = OpLoad %uint %9285
       %9287 = OpCompositeConstruct %v3uint %9280 %9283 %9286
       %9288 = OpBitcast %v3float %9287
       %9289 = OpIAdd %uint %9188 %uint_272
       %9290 = OpShiftRightLogical %uint %9289 %uint_2
       %9291 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9290
       %9292 = OpLoad %uint %9291
       %9293 = OpIAdd %uint %9290 %uint_1
       %9294 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9293
       %9295 = OpLoad %uint %9294
       %9296 = OpIAdd %uint %9290 %uint_2
       %9297 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9296
       %9298 = OpLoad %uint %9297
       %9299 = OpCompositeConstruct %v3uint %9292 %9295 %9298
       %9300 = OpBitcast %v3float %9299
       %9301 = OpFAdd %v3float %592 %9288
       %9302 = OpFAdd %v3float %640 %9300
       %9303 = OpVectorTimesScalar %v3float %9301 %float_2097152
       %9304 = OpFAdd %v3float %9303 %9302
       %9305 = OpCompositeExtract %float %9304 0
       %9306 = OpCompositeExtract %float %9304 1
       %9307 = OpCompositeExtract %float %9304 2
       %9308 = OpCompositeConstruct %v4float %9305 %9306 %9307 %float_1
       %9309 = OpMatrixTimesVector %v4float %9276 %9308
       %9310 = OpVectorShuffle %v2float %9309 %9309 0 1
       %9311 = OpVectorTimesScalar %v2float %9310 %float_128
       %9312 = OpConvertFToU %v2uint %9311
               OpSelectionMerge %9313 None
               OpSwitch %uint_0 %9314
       %9314 = OpLabel
       %9315 = OpBitcast %int %9187
       %9316 = OpBitcast %uint %9315
       %9317 = OpULessThan %bool %9316 %uint_8192
               OpSelectionMerge %9318 None
               OpBranchConditional %9317 %9319 %9318
       %9319 = OpLabel
               OpBranch %9313
       %9318 = OpLabel
       %9320 = OpISub %uint %9187 %uint_8192
       %9321 = OpIMul %uint %9320 %uint_21845
       %9322 = OpIAdd %uint %uint_8192 %9321
       %9323 = OpCompositeExtract %uint %9312 0
       %9324 = OpCompositeExtract %uint %9312 1
       %9325 = OpShiftLeftLogical %uint %9324 %uint_7
       %9326 = OpIAdd %uint %9323 %9325
       %9327 = OpIAdd %uint %9322 %9326
               OpBranch %9313
       %9313 = OpLabel
       %9328 = OpPhi %uint %9187 %9319 %9327 %9318
       %9329 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9328
       %9330 = OpLoad %uint %9329
       %9331 = OpBitwiseAnd %uint %9330 %uint_1023
       %9332 = OpShiftRightLogical %uint %9330 %uint_10
       %9333 = OpBitwiseAnd %uint %9332 %uint_1023
       %9334 = OpCompositeConstruct %v2uint %9331 %9333
       %9335 = OpShiftRightLogical %uint %9330 %uint_20
       %9336 = OpBitwiseAnd %uint %9335 %uint_63
       %9337 = OpBitwiseAnd %uint %9330 %uint_134217728
       %9338 = OpINotEqual %bool %9337 %uint_0
       %9339 = OpIEqual %bool %9336 %uint_0
       %9340 = OpLogicalAnd %bool %9338 %9339
               OpSelectionMerge %9341 None
               OpBranchConditional %9338 %9342 %9341
       %9342 = OpLabel
       %9343 = OpIAdd %uint %9187 %9336
       %9344 = OpBitcast %int %9343
       %9345 = OpVectorTimesScalar %v2float %9310 %float_16384
       %9346 = OpConvertFToU %v2uint %9345
       %9347 = OpUGreaterThan %bool %9336 %uint_0
               OpSelectionMerge %9348 None
               OpBranchConditional %9347 %9349 %9348
       %9349 = OpLabel
       %9350 = OpIAdd %uint %9188 %uint_304
       %9351 = OpShiftRightLogical %uint %9350 %uint_2
       %9352 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9351
       %9353 = OpLoad %uint %9352
       %9354 = OpIAdd %uint %9351 %uint_1
       %9355 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9354
       %9356 = OpLoad %uint %9355
       %9357 = OpCompositeConstruct %v2uint %9353 %9356
       %9358 = OpBitcast %v2int %9357
       %9359 = OpBitcast %uint %9344
       %9360 = OpIMul %uint %9359 %uint_336
       %9361 = OpIAdd %uint %9360 %uint_304
       %9362 = OpShiftRightLogical %uint %9361 %uint_2
       %9363 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9362
       %9364 = OpLoad %uint %9363
       %9365 = OpIAdd %uint %9362 %uint_1
       %9366 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9365
       %9367 = OpLoad %uint %9366
       %9368 = OpCompositeConstruct %v2uint %9364 %9367
       %9369 = OpBitcast %v2int %9368
       %9370 = OpIMul %v2int %370 %9358
       %9371 = OpIMul %v2int %370 %9369
       %9372 = OpBitcast %v2uint %9370
       %9373 = OpISub %v2uint %9312 %9372
       %9374 = OpBitcast %int %9336
       %9375 = OpCompositeConstruct %v2int %9374 %9374
       %9376 = OpBitwiseAnd %v2int %9375 %371
       %9377 = OpShiftLeftLogical %v2int %9371 %9376
       %9378 = OpBitcast %v2uint %9377
       %9379 = OpIAdd %v2uint %9373 %9378
       %9380 = OpCompositeConstruct %v2uint %9336 %9336
       %9381 = OpBitwiseAnd %v2uint %9380 %305
       %9382 = OpShiftRightLogical %v2uint %9379 %9381
       %9383 = OpIMul %v2uint %9382 %340
       %9384 = OpIAdd %v2uint %9383 %341
       %9385 = OpLoad %uint %9206
       %9386 = OpLoad %uint %9208
       %9387 = OpLoad %uint %9210
       %9388 = OpLoad %uint %9212
       %9389 = OpCompositeConstruct %v4uint %9385 %9386 %9387 %9388
       %9390 = OpBitcast %v4float %9389
       %9391 = OpLoad %uint %9352
       %9392 = OpLoad %uint %9355
       %9393 = OpCompositeConstruct %v2uint %9391 %9392
       %9394 = OpBitcast %v2int %9393
       %9395 = OpIAdd %int %9186 %9374
       %9396 = OpBitcast %uint %9395
       %9397 = OpIMul %uint %9396 %uint_336
       %9398 = OpIAdd %uint %9397 %uint_112
       %9399 = OpShiftRightLogical %uint %9398 %uint_2
       %9400 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9399
       %9401 = OpLoad %uint %9400
       %9402 = OpIAdd %uint %9399 %uint_1
       %9403 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9402
       %9404 = OpLoad %uint %9403
       %9405 = OpIAdd %uint %9399 %uint_2
       %9406 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9405
       %9407 = OpLoad %uint %9406
       %9408 = OpIAdd %uint %9399 %uint_3
       %9409 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9408
       %9410 = OpLoad %uint %9409
       %9411 = OpCompositeConstruct %v4uint %9401 %9404 %9407 %9410
       %9412 = OpBitcast %v4float %9411
       %9413 = OpIAdd %uint %9397 %uint_304
       %9414 = OpShiftRightLogical %uint %9413 %uint_2
       %9415 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9414
       %9416 = OpLoad %uint %9415
       %9417 = OpIAdd %uint %9414 %uint_1
       %9418 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9417
       %9419 = OpLoad %uint %9418
       %9420 = OpCompositeConstruct %v2uint %9416 %9419
       %9421 = OpBitcast %v2int %9420
       %9422 = OpConvertSToF %v2float %9394
       %9423 = OpConvertSToF %v2float %9421
       %9424 = OpSGreaterThanEqual %bool %9374 %int_0
       %9425 = OpBitcast %uint %9374
       %9426 = OpBitwiseAnd %uint %9425 %uint_31
       %9427 = OpShiftLeftLogical %uint %uint_1 %9426
       %9428 = OpConvertUToF %float %9427
       %9429 = OpFDiv %float %float_1 %9428
       %9430 = OpSNegate %int %9374
       %9431 = OpBitcast %uint %9430
       %9432 = OpBitwiseAnd %uint %9431 %uint_31
       %9433 = OpShiftLeftLogical %uint %uint_1 %9432
       %9434 = OpConvertUToF %float %9433
       %9435 = OpSelect %float %9424 %9429 %9434
       %9436 = OpVectorTimesScalar %v2float %9422 %9435
       %9437 = OpFSub %v2float %9423 %9436
       %9438 = OpVectorTimesScalar %v2float %9437 %float_0_25
       %9439 = OpCompositeExtract %float %9390 2
       %9440 = OpCompositeExtract %float %9412 2
       %9441 = OpFNegate %float %9435
       %9442 = OpExtInst %float %1 Fma %9441 %9439 %9440
       %9443 = OpVectorTimesScalar %v2float %9310 %9435
       %9444 = OpVectorShuffle %v2float %9438 %458 0 1
       %9445 = OpFAdd %v2float %9443 %9444
       %9446 = OpVectorTimesScalar %v2float %9445 %float_16384
       %9447 = OpConvertFToU %v2uint %9446
       %9448 = OpExtInst %v2uint %1 UClamp %9447 %9383 %9384
               OpSelectionMerge %9449 None
               OpSwitch %uint_0 %9450
       %9450 = OpLabel
       %9451 = OpBitcast %int %9359
       %9452 = OpBitcast %uint %9451
       %9453 = OpULessThan %bool %9452 %uint_8192
               OpSelectionMerge %9454 None
               OpBranchConditional %9453 %9455 %9454
       %9455 = OpLabel
               OpBranch %9449
       %9454 = OpLabel
       %9456 = OpISub %uint %9359 %uint_8192
       %9457 = OpIMul %uint %9456 %uint_21845
       %9458 = OpIAdd %uint %uint_8192 %9457
       %9459 = OpCompositeExtract %uint %9382 0
       %9460 = OpCompositeExtract %uint %9382 1
       %9461 = OpShiftLeftLogical %uint %9460 %uint_7
       %9462 = OpIAdd %uint %9459 %9461
       %9463 = OpIAdd %uint %9458 %9462
               OpBranch %9449
       %9449 = OpLabel
       %9464 = OpPhi %uint %9359 %9455 %9463 %9454
       %9465 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9464
       %9466 = OpLoad %uint %9465
       %9467 = OpBitwiseAnd %uint %9466 %uint_1023
       %9468 = OpShiftRightLogical %uint %9466 %uint_10
       %9469 = OpBitwiseAnd %uint %9468 %uint_1023
       %9470 = OpCompositeConstruct %v2uint %9467 %9469
       %9471 = OpShiftRightLogical %uint %9466 %uint_20
       %9472 = OpBitwiseAnd %uint %9471 %uint_63
       %9473 = OpBitwiseAnd %uint %9466 %uint_134217728
       %9474 = OpINotEqual %bool %9473 %uint_0
       %9475 = OpIEqual %bool %9472 %uint_0
       %9476 = OpLogicalAnd %bool %9474 %9475
               OpBranch %9348
       %9348 = OpLabel
       %9477 = OpPhi %float %float_1 %9342 %9435 %9449
       %9478 = OpPhi %float %float_0 %9342 %9442 %9449
       %9479 = OpPhi %v2uint %9346 %9342 %9448 %9449
       %9480 = OpPhi %v2uint %9334 %9342 %9470 %9449
       %9481 = OpPhi %bool %9340 %9342 %9476 %9449
               OpSelectionMerge %9482 None
               OpBranchConditional %9481 %9483 %9482
       %9483 = OpLabel
       %9484 = OpIMul %v2uint %9480 %340
       %9485 = OpBitwiseAnd %v2uint %9479 %341
       %9486 = OpIAdd %v2uint %9484 %9485
       %9487 = OpCompositeExtract %uint %9486 0
       %9488 = OpCompositeExtract %uint %9486 1
       %9489 = OpCompositeConstruct %v4uint %9487 %9488 %uint_0 %uint_0
       %9490 = OpBitcast %v4int %9489
       %9491 = OpVectorShuffle %v3int %9490 %9490 0 1 2
       %9492 = OpCompositeExtract %int %9490 3
       %9493 = OpLoad %type_2d_image_array_0 %VirtualShadowMap_PhysicalPagePool
       %9494 = OpImageFetch %v4uint %9493 %9491 Lod %9492
       %9495 = OpCompositeExtract %uint %9494 0
       %9496 = OpBitcast %float %9495
       %9497 = OpFSub %float %9496 %9478
       %9498 = OpFDiv %float %9497 %9477
               OpBranch %9482
       %9482 = OpLabel
       %9499 = OpPhi %float %float_0 %9348 %9498 %9483
       %9500 = OpSelect %bool %9481 %true %false
               OpBranch %9341
       %9341 = OpLabel
       %9501 = OpPhi %float %float_0 %9313 %9499 %9482
       %9502 = OpPhi %bool %false %9313 %9500 %9482
               OpSelectionMerge %9503 None
               OpBranchConditional %9502 %9504 %9503
       %9504 = OpLabel
       %9505 = OpCompositeExtract %float %9203 2
       %9506 = OpExtInst %float %1 Fma %8835 %9505 %9501
       %9507 = OpCompositeExtract %float %9309 2
       %9508 = OpFOrdGreaterThan %bool %9506 %9507
       %9509 = OpSelect %float %9508 %float_0 %float_1
               OpBranch %8833
       %9503 = OpLabel
               OpBranch %9184
       %9184 = OpLabel
               OpBranch %8976
       %8976 = OpLabel
               OpBranch %8833
       %8833 = OpLabel
       %9510 = OpPhi %float %9171 %9163 %9509 %9504 %float_1 %8976
       %9511 = OpFMul %float %8825 %9510
               OpBranch %8831
       %8831 = OpLabel
       %9512 = OpPhi %float %8825 %8750 %9511 %8833
       %9513 = OpDot %float %8745 %117
       %9514 = OpDot %float %8746 %8745
       %9515 = OpExtInst %float %1 FMix %float_1 %9514 %9513
       %9516 = OpCompositeExtract %float %8723 0
       %9517 = OpCompositeExtract %float %8723 1
       %9518 = OpExtInst %float %1 Fma %643 %9516 %9517
       %9519 = OpExtInst %float %1 FClamp %9518 %float_0 %float_1
       %9520 = OpFMul %float %9519 %9519
       %9521 = OpExtInst %float %1 FMix %9512 %9515 %9520
       %9522 = OpExtInst %float %1 NMin %9521 %float_1
       %9523 = OpFAdd %float %9521 %9522
       %9524 = OpFOrdGreaterThan %bool %9523 %float_0
               OpSelectionMerge %9525 DontFlatten
               OpBranchConditional %9524 %9526 %9525
       %9526 = OpLabel
       %9527 = OpExtInst %float %1 NMax %8422 %8420
       %9528 = OpDot %float %8727 %8727
       %9529 = OpFAdd %float %9528 %float_1
       %9530 = OpFDiv %float %float_1 %9529
       %9531 = OpExtInst %float %1 InverseSqrt %9528
       %9532 = OpVectorTimesScalar %v3float %8727 %9531
       %9533 = OpDot %float %8445 %9532
       %9534 = OpFOrdGreaterThan %bool %8729 %float_0
               OpSelectionMerge %9535 None
               OpBranchConditional %9534 %9536 %9535
       %9536 = OpLabel
       %9537 = OpFMul %float %8729 %8729
       %9538 = OpFMul %float %9537 %9530
       %9539 = OpExtInst %float %1 FClamp %9538 %float_0 %float_1
       %9540 = OpExtInst %float %1 Sqrt %9539
       %9541 = OpFOrdLessThan %bool %9533 %9540
               OpSelectionMerge %9542 None
               OpBranchConditional %9541 %9543 %9542
       %9543 = OpLabel
       %9544 = OpFNegate %float %9540
       %9545 = OpExtInst %float %1 NMax %9533 %9544
       %9546 = OpFAdd %float %9540 %9545
       %9547 = OpFMul %float %9546 %9546
       %9548 = OpFMul %float %float_4 %9540
       %9549 = OpFDiv %float %9547 %9548
               OpBranch %9542
       %9542 = OpLabel
       %9550 = OpPhi %float %9533 %9536 %9549 %9543
               OpBranch %9535
       %9535 = OpLabel
       %9551 = OpPhi %float %9533 %9526 %9550 %9542
       %9552 = OpExtInst %float %1 FClamp %9551 %float_0 %float_1
       %9553 = OpExtInst %float %1 NMax %9527 %8420
       %9554 = OpFMul %float %8729 %9531
       %9555 = OpFNegate %float %9553
       %9556 = OpExtInst %float %1 Fma %9555 %9553 %float_1
       %9557 = OpFMul %float %9554 %9556
       %9558 = OpExtInst %float %1 FClamp %9557 %float_0 %float_1
       %9559 = OpExtInst %float %1 NMax %459 %8729
       %9560 = OpFNegate %float %9559
       %9561 = OpExtInst %float %1 Fma %9560 %float_0_0500000007 %float_1
       %9562 = OpExtInst %float %1 FClamp %9561 %float_0 %float_1
       %9563 = OpBitcast %uint %9562
       %9564 = OpShiftLeftLogical %uint %9563 %uint_1
       %9565 = OpBitwiseOr %uint %uint_0 %9564
       %9566 = OpDot %float %8445 %657
       %9567 = OpDot %float %657 %9532
       %9568 = OpExtInst %float %1 Fma %float_2 %9567 %float_2
       %9569 = OpExtInst %float %1 InverseSqrt %9568
       %9570 = OpFAdd %float %9533 %9566
       %9571 = OpFMul %float %9570 %9569
       %9572 = OpExtInst %float %1 FClamp %9571 %float_0 %float_1
       %9573 = OpExtInst %float %1 Fma %9569 %9567 %9569
       %9574 = OpExtInst %float %1 FClamp %9573 %float_0 %float_1
       %9575 = OpFOrdGreaterThan %bool %9558 %float_0
               OpSelectionMerge %9576 None
               OpBranchConditional %9575 %9577 %9576
       %9577 = OpLabel
       %9578 = OpFNegate %float %9558
       %9579 = OpExtInst %float %1 Fma %9578 %9558 %float_1
       %9580 = OpExtInst %float %1 Sqrt %9579
       %9581 = OpFMul %float %float_2 %9533
       %9582 = OpFNegate %float %9567
       %9583 = OpExtInst %float %1 Fma %9581 %9566 %9582
       %9584 = OpFOrdGreaterThanEqual %bool %9583 %9580
               OpSelectionMerge %9585 None
               OpBranchConditional %9584 %9586 %9587
       %9587 = OpLabel
       %9588 = OpFNegate %float %9583
       %9589 = OpExtInst %float %1 Fma %9588 %9583 %float_1
       %9590 = OpExtInst %float %1 InverseSqrt %9589
       %9591 = OpFMul %float %9558 %9590
       %9592 = OpExtInst %float %1 Fma %9588 %9533 %9566
       %9593 = OpFMul %float %9591 %9592
       %9594 = OpFMul %float %float_2 %9566
       %9595 = OpExtInst %float %1 Fma %9594 %9566 %float_n1
       %9596 = OpExtInst %float %1 Fma %9588 %9567 %9595
       %9597 = OpFMul %float %9591 %9596
       %9598 = OpFNegate %float %9533
       %9599 = OpExtInst %float %1 Fma %9598 %9533 %float_1
       %9600 = OpFNegate %float %9566
       %9601 = OpExtInst %float %1 Fma %9600 %9566 %9599
       %9602 = OpExtInst %float %1 Fma %9582 %9567 %9601
       %9603 = OpFMul %float %9581 %9566
       %9604 = OpExtInst %float %1 Fma %9603 %9567 %9602
       %9605 = OpExtInst %float %1 FClamp %9604 %float_0 %float_1
       %9606 = OpExtInst %float %1 Sqrt %9605
       %9607 = OpFMul %float %9591 %9606
       %9608 = OpFMul %float %9607 %float_2
       %9609 = OpFMul %float %9608 %9566
       %9610 = OpExtInst %float %1 Fma %9533 %9580 %9566
       %9611 = OpExtInst %float %1 Fma %9591 %9592 %9610
       %9612 = OpExtInst %float %1 Fma %9567 %9580 %float_1
       %9613 = OpExtInst %float %1 Fma %9591 %9596 %9612
       %9614 = OpFMul %float %9607 %9613
       %9615 = OpFMul %float %9611 %9613
       %9616 = OpFMul %float %9609 %9611
       %9617 = OpFMul %float %float_0_25 %9609
       %9618 = OpFMul %float %9617 %9611
       %9619 = OpExtInst %float %1 Fma %float_n0_5 %9614 %9618
       %9620 = OpFMul %float %9615 %9619
       %9621 = OpFMul %float %9614 %float_n2
       %9622 = OpExtInst %float %1 Fma %9609 %9611 %9621
       %9623 = OpFMul %float %9616 %9622
       %9624 = OpExtInst %float %1 Fma %9614 %9614 %9623
       %9625 = OpFMul %float %9613 %9613
       %9626 = OpExtInst %float %1 Fma %9567 %9580 %9613
       %9627 = OpExtInst %float %1 Fma %float_n0_5 %9626 %float_n0_5
       %9628 = OpFMul %float %9615 %9627
       %9629 = OpExtInst %float %1 Fma %9610 %9625 %9628
       %9630 = OpExtInst %float %1 Fma %9611 %9629 %9624
       %9631 = OpFMul %float %float_2 %9620
       %9632 = OpFMul %float %9620 %9620
       %9633 = OpExtInst %float %1 Fma %9630 %9630 %9632
       %9634 = OpFDiv %float %9631 %9633
       %9635 = OpFMul %float %9634 %9630
       %9636 = OpFNegate %float %9634
       %9637 = OpExtInst %float %1 Fma %9636 %9620 %float_1
       %9638 = OpFMul %float %9635 %9607
       %9639 = OpExtInst %float %1 Fma %9637 %9593 %9638
       %9640 = OpFMul %float %9635 %9609
       %9641 = OpExtInst %float %1 Fma %9637 %9597 %9640
       %9642 = OpExtInst %float %1 Fma %9533 %9580 %9639
       %9643 = OpExtInst %float %1 Fma %9567 %9580 %9641
       %9644 = OpExtInst %float %1 Fma %float_2 %9643 %float_2
       %9645 = OpExtInst %float %1 InverseSqrt %9644
       %9646 = OpFAdd %float %9642 %9566
       %9647 = OpFMul %float %9646 %9645
       %9648 = OpExtInst %float %1 FClamp %9647 %float_0 %float_1
       %9649 = OpExtInst %float %1 Fma %9645 %9643 %9645
       %9650 = OpExtInst %float %1 FClamp %9649 %float_0 %float_1
               OpBranch %9585
       %9586 = OpLabel
       %9651 = OpExtInst %float %1 FAbs %9566
               OpBranch %9585
       %9585 = OpLabel
       %9652 = OpPhi %float %9648 %9587 %float_1 %9586
       %9653 = OpPhi %float %9650 %9587 %9651 %9586
               OpBranch %9576
       %9576 = OpLabel
       %9654 = OpPhi %float %9572 %9535 %9652 %9585
       %9655 = OpPhi %float %9574 %9535 %9653 %9585
       %9656 = OpExtInst %float %1 FAbs %9566
       %9657 = OpFAdd %float %9656 %float_9_99999975en06
       %9658 = OpExtInst %float %1 FClamp %9657 %float_0 %float_1
       %9659 = OpFMul %float %9527 %9527
       %9660 = OpFMul %float %9659 %9659
       %9661 = OpShiftRightLogical %uint %9565 %uint_1
       %9662 = OpBitcast %float %9661
       %9663 = OpExtInst %float %1 FClamp %9566 %float_0 %float_1
       %9664 = OpExtInst %float %1 FClamp %9552 %float_0 %float_1
       %9665 = OpExtInst %float %1 FClamp %9574 %float_0 %float_1
       %9666 = OpExtInst %float %1 FClamp %9572 %float_0 %float_1
       %9667 = OpBitcast %int %9660
       %9668 = OpISub %int %int_2129859010 %9667
       %9669 = OpBitcast %float %9668
       %9670 = OpExtInst %float %1 Fma %float_2 %9669 %float_n1
       %9671 = OpExtInst %float %1 Log2 %9670
       %9672 = OpFMul %float %float_0_055555556 %9671
       %9673 = OpExtInst %float %1 FClamp %9672 %float_0 %float_1
       %9674 = OpFSub %float %float_1 %9665
       %9675 = OpFMul %float %9674 %9674
       %9676 = OpFMul %float %9675 %9675
       %9677 = OpExtInst %float %1 Fma %9676 %9674 %9665
       %9678 = OpFSub %float %float_1 %9663
       %9679 = OpFMul %float %9678 %9678
       %9680 = OpFMul %float %9679 %9679
       %9681 = OpFMul %float %9680 %9678
       %9682 = OpExtInst %float %1 Fma %float_n0_75 %9681 %float_1
       %9683 = OpFSub %float %float_1 %9664
       %9684 = OpFMul %float %9683 %9683
       %9685 = OpFMul %float %9684 %9684
       %9686 = OpFMul %float %9685 %9683
       %9687 = OpExtInst %float %1 Fma %float_n0_75 %9686 %float_1
       %9688 = OpFMul %float %9682 %9687
       %9689 = OpExtInst %float %1 Fma %float_2_20000005 %9673 %float_n0_5
       %9690 = OpExtInst %float %1 FClamp %9689 %float_0 %float_1
       %9691 = OpExtInst %float %1 FMix %9677 %9688 %9690
       %9692 = OpExtInst %float %1 Fma %float_34_5 %9673 %float_n59
       %9693 = OpExtInst %float %1 Fma %9692 %9673 %float_24_5
       %9694 = OpFMul %float %9693 %9665
       %9695 = OpExtInst %float %1 Fma %float_73_1999969 %9673 %float_n21_2000008
       %9696 = OpExtInst %float %1 NMax %9695 %float_8_89999962
       %9697 = OpFNegate %float %9696
       %9698 = OpBitcast %int %9666
       %9699 = OpShiftRightArithmetic %int %9698 %int_1
       %9700 = OpIAdd %int %int_532487669 %9699
       %9701 = OpBitcast %float %9700
       %9702 = OpFMul %float %9697 %9701
       %9703 = OpExtInst %float %1 Exp2 %9702
       %9704 = OpFMul %float %9694 %9703
       %9705 = OpExtInst %float %1 Fma %9704 %9662 %9691
       %9706 = OpFMul %float %float_0_318309873 %9705
       %9707 = OpVectorTimesScalar %v3float %8642 %9706
       %9708 = OpVectorTimesScalar %v3float %127 %9552
       %9709 = OpFMul %v3float %9707 %9708
       %9710 = OpBitwiseAnd %uint %9565 %uint_1
       %9711 = OpIEqual %bool %9710 %uint_1
               OpSelectionMerge %9712 None
               OpBranchConditional %9711 %9713 %9714
       %9714 = OpLabel
               OpSelectionMerge %9715 None
               OpBranchConditional %9575 %9716 %9715
       %9716 = OpLabel
       %9717 = OpFMul %float %float_0_25 %9558
       %9718 = OpShiftRightArithmetic %int %9667 %int_1
       %9719 = OpIAdd %int %int_532487669 %9718
       %9720 = OpBitcast %float %9719
       %9721 = OpExtInst %float %1 Fma %float_3 %9720 %9558
       %9722 = OpFMul %float %9717 %9721
       %9723 = OpFAdd %float %9655 %float_0_00100000005
       %9724 = OpFDiv %float %9722 %9723
       %9725 = OpExtInst %float %1 Fma %9659 %9659 %9724
       %9726 = OpFDiv %float %9660 %9725
               OpBranch %9715
       %9715 = OpLabel
       %9727 = OpPhi %float %float_1 %9714 %9726 %9716
       %9728 = OpFNegate %float %9654
       %9729 = OpExtInst %float %1 Fma %9654 %9660 %9728
       %9730 = OpExtInst %float %1 Fma %9729 %9654 %float_1
       %9731 = OpFMul %float %float_3_14159274 %9730
       %9732 = OpFMul %float %9731 %9730
       %9733 = OpFDiv %float %9660 %9732
       %9734 = OpFMul %float %9733 %9727
       %9735 = OpExtInst %float %1 Sqrt %9660
       %9736 = OpFSub %float %float_1 %9735
       %9737 = OpExtInst %float %1 Fma %9658 %9736 %9735
       %9738 = OpExtInst %float %1 Fma %9552 %9736 %9735
       %9739 = OpFMul %float %9658 %9738
       %9740 = OpExtInst %float %1 Fma %9552 %9737 %9739
       %9741 = OpFDiv %float %float_0_5 %9740
       %9742 = OpFSub %float %float_1 %9655
       %9743 = OpFMul %float %9742 %9742
       %9744 = OpFMul %float %9743 %9743
       %9745 = OpFMul %float %9744 %9742
       %9746 = OpCompositeExtract %float %8555 1
       %9747 = OpFMul %float %float_50 %9746
       %9748 = OpExtInst %float %1 FClamp %9747 %float_0 %float_1
       %9749 = OpFMul %float %9748 %9745
       %9750 = OpCompositeConstruct %v3float %9749 %9749 %9749
       %9751 = OpFNegate %float %9744
       %9752 = OpExtInst %float %1 Fma %9751 %9742 %float_1
       %9753 = OpVectorTimesScalar %v3float %8555 %9752
       %9754 = OpFAdd %v3float %9750 %9753
       %9755 = OpFMul %float %9734 %9741
       %9756 = OpVectorTimesScalar %v3float %9754 %9755
       %9757 = OpFMul %v3float %9708 %9756
               OpBranch %9712
       %9713 = OpLabel
               OpBranch %9712
       %9712 = OpLabel
       %9758 = OpPhi %v3float %9757 %9715 %102 %9713
       %9759 = OpCompositeExtract %float %8555 1
       %9760 = OpFMul %float %float_50 %9759
       %9761 = OpExtInst %float %1 FClamp %9760 %float_0 %float_1
       %9762 = OpCompositeConstruct %v3float %9761 %9761 %9761
       %9763 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
       %9764 = OpLoad %type_sampler %View_ShadingEnergySampler
       %9765 = OpCompositeConstruct %v2float %9658 %9527
       %9766 = OpSampledImage %type_sampled_image %9763 %9764
       %9767 = OpImageSampleExplicitLod %v4float %9766 %9765 Lod %float_0
       %9768 = OpAccessChain %_ptr_Uniform_uint %View %uint_40
       %9769 = OpLoad %uint %9768
       %9770 = OpINotEqual %bool %9769 %uint_0
       %9771 = OpCompositeConstruct %v3bool %9770 %9770 %9770
       %9772 = OpCompositeExtract %float %9767 0
       %9773 = OpFSub %float %float_1 %9772
       %9774 = OpFDiv %float %9773 %9772
       %9775 = OpVectorTimesScalar %v3float %8555 %9774
       %9776 = OpFAdd %v3float %127 %9775
       %9777 = OpSelect %v3float %9771 %9776 %127
       %9778 = OpVectorTimesScalar %v3float %8555 %9772
       %9779 = OpFSub %v3float %9762 %8555
       %9780 = OpCompositeExtract %float %9767 1
       %9781 = OpVectorTimesScalar %v3float %9779 %9780
       %9782 = OpFAdd %v3float %9778 %9781
       %9783 = OpFMul %v3float %9777 %9782
       %9784 = OpAccessChain %_ptr_Uniform_uint %View %uint_41
       %9785 = OpLoad %uint %9784
       %9786 = OpINotEqual %bool %9785 %uint_0
       %9787 = OpDot %float %9783 %171
       %9788 = OpFSub %float %float_1 %9787
       %9789 = OpSelect %float %9786 %9788 %float_1
       %9790 = OpVectorTimesScalar %v3float %9709 %9789
       %9791 = OpFMul %v3float %9758 %9777
       %9792 = OpVectorTimesScalar %v3float %9791 %float_1
       %9793 = OpVectorTimesScalar %v3float %8725 %9521
       %9794 = OpFMul %v3float %9792 %9793
       %9795 = OpExtInst %v3float %1 Fma %9790 %9793 %102
               OpBranch %9525
       %9525 = OpLabel
       %9796 = OpPhi %v3float %458 %8831 %9795 %9712
       %9797 = OpPhi %v3float %458 %8831 %9794 %9712
       %9798 = OpCompositeExtract %float %9796 0
       %9799 = OpCompositeExtract %float %9796 1
       %9800 = OpCompositeExtract %float %9796 2
       %9801 = OpCompositeConstruct %v4float %9798 %9799 %9800 %float_0
       %9802 = OpCompositeExtract %float %9797 0
       %9803 = OpCompositeExtract %float %9797 1
       %9804 = OpCompositeExtract %float %9797 2
       %9805 = OpCompositeConstruct %v4float %9802 %9803 %9804 %float_0
       %9806 = OpBitwiseAnd %uint %8744 %8717
       %9807 = OpINotEqual %bool %9806 %uint_0
               OpSelectionMerge %9808 Flatten
               OpBranchConditional %9807 %9809 %9808
       %9809 = OpLabel
       %9810 = OpVectorShuffle %v4float %9801 %9801 4 5 6 3
       %9811 = OpVectorShuffle %v4float %9805 %9805 4 5 6 3
               OpSelectionMerge %9812 None
               OpBranchConditional %8686 %9813 %9814
       %9814 = OpLabel
               OpBranch %9812
       %9813 = OpLabel
       %9815 = OpVectorShuffle %v3float %9801 %457 0 1 2
       %9816 = OpVectorShuffle %v3float %9805 %457 0 1 2
       %9817 = OpFAdd %v3float %9815 %9816
               OpBranch %9812
       %9812 = OpLabel
       %9818 = OpPhi %v3float %102 %9814 %9817 %9813
       %9819 = OpCompositeConstruct %v4bool %8686 %8686 %8686 %8686
       %9820 = OpSelect %v4float %9819 %98 %9810
       %9821 = OpSelect %v4float %9819 %98 %9811
               OpBranch %9808
       %9808 = OpLabel
       %9822 = OpPhi %v3float %102 %9525 %9818 %9812
       %9823 = OpPhi %v4float %98 %9525 %9820 %9812
       %9824 = OpPhi %v4float %98 %9525 %9821 %9812
               OpBranch %8731
       %8731 = OpLabel
       %9825 = OpPhi %v4float %8511 %8692 %8746 %9808
       %9826 = OpPhi %v3float %102 %8692 %9822 %9808
       %9827 = OpPhi %float %float_1 %8692 %9521 %9808
       %9828 = OpPhi %v4float %98 %8692 %9823 %9808
       %9829 = OpPhi %v4float %98 %8692 %9824 %9808
       %9830 = OpIMul %uint %8679 %uint_2
       %9831 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid %int_0 %9830
       %9832 = OpLoad %uint %9831
       %9833 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %int_0
       %9834 = OpLoad %uint %9833
       %9835 = OpExtInst %uint %1 UMin %9832 %9834
       %9836 = OpIAdd %uint %9830 %uint_1
       %9837 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid %int_0 %9836
       %9838 = OpLoad %uint %9837
       %9839 = OpExtInst %uint %1 UMin %9835 %9834
               OpBranch %9840
       %9840 = OpLabel
       %9841 = OpPhi %v4float %9828 %8731 %9842 %9843
       %9844 = OpPhi %v4float %9829 %8731 %9845 %9843
       %9846 = OpPhi %uint %uint_0 %8731 %9847 %9843
       %9848 = OpULessThan %bool %9846 %9839
               OpLoopMerge %9849 %9843 DontUnroll
               OpBranchConditional %9848 %9850 %9849
       %9850 = OpLabel
       %9851 = OpIAdd %uint %9838 %9846
       %9852 = OpLoad %type_buffer_image %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit
       %9853 = OpImageFetch %v4uint %9852 %9851 None
       %9854 = OpCompositeExtract %uint %9853 0
       %9855 = OpIMul %uint %9854 %uint_6
       %9856 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9855
       %9857 = OpLoad %v4float %9856
       %9858 = OpIAdd %uint %9855 %uint_1
       %9859 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9858
       %9860 = OpLoad %v4float %9859
       %9861 = OpIAdd %uint %9855 %uint_2
       %9862 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9861
       %9863 = OpLoad %v4float %9862
       %9864 = OpIAdd %uint %9855 %uint_3
       %9865 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9864
       %9866 = OpLoad %v4float %9865
       %9867 = OpIAdd %uint %9855 %uint_4
       %9868 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9867
       %9869 = OpLoad %v4float %9868
       %9870 = OpCompositeExtract %float %9863 3
       %9871 = OpBitcast %uint %9870
       %9872 = OpShiftRightLogical %uint %9871 %uint_16
       %9873 = OpBitwiseAnd %uint %9872 %uint_3
       %9874 = OpVectorShuffle %v3float %9857 %9857 0 1 2
       %9875 = OpCompositeExtract %float %9857 3
       %9876 = OpCompositeExtract %float %9860 1
       %9877 = OpBitcast %uint %9876
       %9878 = OpShiftRightLogical %uint %9877 %uint_0
       %9879 = OpBitwiseAnd %uint %9878 %uint_1023
       %9880 = OpConvertUToF %float %9879
       %9881 = OpShiftRightLogical %uint %9877 %uint_10
       %9882 = OpBitwiseAnd %uint %9881 %uint_1023
       %9883 = OpConvertUToF %float %9882
       %9884 = OpShiftRightLogical %uint %9877 %uint_20
       %9885 = OpBitwiseAnd %uint %9884 %uint_1023
       %9886 = OpConvertUToF %float %9885
       %9887 = OpCompositeConstruct %v3float %9880 %9883 %9886
       %9888 = OpCompositeExtract %float %9860 0
       %9889 = OpVectorTimesScalar %v3float %9887 %9888
       %9890 = OpCompositeExtract %float %9860 3
       %9891 = OpVectorShuffle %v3float %9863 %9863 0 1 2
       %9892 = OpCompositeExtract %float %9866 2
       %9893 = OpBitcast %uint %9892
       %9894 = OpBitwiseAnd %uint %9893 %uint_65535
       %9895 = OpExtInst %v2float %1 UnpackHalf2x16 %9894
       %9896 = OpCompositeExtract %float %9895 0
       %9897 = OpCompositeExtract %float %9866 3
       %9898 = OpBitcast %uint %9897
       %9899 = OpExtInst %v2float %1 UnpackHalf2x16 %9898
       %9900 = OpCompositeExtract %float %9899 0
       %9901 = OpVectorShuffle %v3float %9869 %9869 0 1 2
       %9902 = OpShiftRightLogical %uint %9893 %uint_16
       %9903 = OpExtInst %v2float %1 UnpackHalf2x16 %9902
       %9904 = OpCompositeExtract %float %9903 0
       %9905 = OpFOrdEqual %bool %9890 %float_0
       %9906 = OpCompositeExtract %float %9869 3
       %9907 = OpBitcast %uint %9906
       %9908 = OpBitwiseAnd %uint %9907 %uint_65535
       %9909 = OpExtInst %v2float %1 UnpackHalf2x16 %9908
       %9910 = OpCompositeExtract %float %9909 0
       %9911 = OpIEqual %bool %9873 %uint_2
       %9912 = OpBitwiseAnd %uint %9871 %uint_255
       %9913 = OpINotEqual %bool %9912 %uint_0
       %9914 = OpSelect %uint %9913 %uint_1 %uint_0
       %9915 = OpBitwiseAnd %uint %9871 %uint_1
       %9916 = OpConvertUToF %float %9915
       %9917 = OpBitwiseAnd %uint %9871 %uint_2
       %9918 = OpShiftRightLogical %uint %9917 %uint_1
       %9919 = OpConvertUToF %float %9918
       %9920 = OpBitwiseAnd %uint %9871 %uint_4
       %9921 = OpShiftRightLogical %uint %9920 %uint_2
       %9922 = OpConvertUToF %float %9921
       %9923 = OpBitwiseAnd %uint %9871 %uint_8
       %9924 = OpShiftRightLogical %uint %9923 %uint_3
       %9925 = OpConvertUToF %float %9924
       %9926 = OpCompositeConstruct %v4float %9916 %9919 %9922 %9925
       %9927 = OpShiftRightLogical %uint %9871 %uint_4
       %9928 = OpBitwiseAnd %uint %9927 %uint_1
       %9929 = OpConvertUToF %float %9928
       %9930 = OpBitwiseAnd %uint %9927 %uint_2
       %9931 = OpShiftRightLogical %uint %9930 %uint_1
       %9932 = OpConvertUToF %float %9931
       %9933 = OpBitwiseAnd %uint %9927 %uint_4
       %9934 = OpShiftRightLogical %uint %9933 %uint_2
       %9935 = OpConvertUToF %float %9934
       %9936 = OpBitwiseAnd %uint %9927 %uint_8
       %9937 = OpShiftRightLogical %uint %9936 %uint_3
       %9938 = OpConvertUToF %float %9937
       %9939 = OpCompositeConstruct %v4float %9929 %9932 %9935 %9938
       %9940 = OpShiftRightLogical %uint %9871 %uint_8
       %9941 = OpBitwiseAnd %uint %9940 %uint_7
       %9942 = OpDot %float %9939 %8701
       %9943 = OpFSub %v3float %9874 %639
       %9944 = OpDot %float %9943 %9943
       %9945 = OpExtInst %float %1 InverseSqrt %9944
       %9946 = OpVectorTimesScalar %v3float %9943 %9945
               OpSelectionMerge %9947 None
               OpBranchConditional %9905 %9948 %9949
       %9949 = OpLabel
       %9950 = OpVectorTimesScalar %v3float %9943 %9875
       %9951 = OpDot %float %9950 %9950
       %9952 = OpExtInst %float %1 FClamp %9951 %float_0 %float_1
       %9953 = OpFSub %float %float_1 %9952
       %9954 = OpExtInst %float %1 Pow %9953 %9890
               OpBranch %9947
       %9948 = OpLabel
       %9955 = OpFMul %float %9875 %9875
       %9956 = OpFMul %float %9944 %9955
       %9957 = OpFNegate %float %9956
       %9958 = OpExtInst %float %1 Fma %9957 %9956 %float_1
       %9959 = OpExtInst %float %1 FClamp %9958 %float_0 %float_1
       %9960 = OpFMul %float %9959 %9959
               OpBranch %9947
       %9947 = OpLabel
       %9961 = OpPhi %float %9954 %9949 %9960 %9948
               OpSelectionMerge %9962 None
               OpBranchConditional %9911 %9963 %9962
       %9963 = OpLabel
       %9964 = OpDot %float %9946 %9891
       %9965 = OpCompositeExtract %float %9866 0
       %9966 = OpFSub %float %9964 %9965
       %9967 = OpCompositeExtract %float %9866 1
       %9968 = OpFMul %float %9966 %9967
       %9969 = OpExtInst %float %1 FClamp %9968 %float_0 %float_1
       %9970 = OpFMul %float %9969 %9969
       %9971 = OpFMul %float %9961 %9970
               OpBranch %9962
       %9962 = OpLabel
       %9972 = OpPhi %float %9961 %9947 %9971 %9963
       %9973 = OpVectorTimesScalar %v3float %9889 %9972
       %9974 = OpFOrdGreaterThan %bool %9972 %float_0
               OpSelectionMerge %9975 DontFlatten
               OpBranchConditional %9974 %9976 %9975
       %9976 = OpLabel
       %9977 = OpINotEqual %bool %9914 %uint_0
               OpSelectionMerge %9978 DontFlatten
               OpBranchConditional %9977 %9979 %9978
       %9979 = OpLabel
       %9980 = OpDot %float %9926 %117
       %9981 = OpDot %float %9825 %9926
       %9982 = OpExtInst %float %1 FMix %float_1 %9981 %9980
       %9983 = OpFMul %float %9942 %9982
               OpBranch %9978
       %9978 = OpLabel
       %9984 = OpPhi %float %float_1 %9976 %9983 %9979
       %9985 = OpFAdd %float %9984 %9984
       %9986 = OpFOrdGreaterThan %bool %9985 %float_0
               OpSelectionMerge %9987 DontFlatten
               OpBranchConditional %9986 %9988 %9987
       %9988 = OpLabel
       %9989 = OpFMul %float %float_0_5 %9900
       %9990 = OpVectorTimesScalar %v3float %9901 %9989
       %9991 = OpFSub %v3float %9943 %9990
       %9992 = OpFAdd %v3float %9943 %9990
       %9993 = OpExtInst %float %1 NMax %8422 %8420
       %9994 = OpFOrdGreaterThan %bool %9900 %float_0
               OpSelectionMerge %9995 DontFlatten
               OpBranchConditional %9994 %9996 %9997
       %9997 = OpLabel
       %9998 = OpDot %float %9991 %9991
       %9999 = OpFAdd %float %9998 %float_1
      %10000 = OpFDiv %float %float_1 %9999
      %10001 = OpExtInst %float %1 InverseSqrt %9998
      %10002 = OpVectorTimesScalar %v3float %9991 %10001
      %10003 = OpDot %float %8445 %10002
               OpBranch %9995
       %9996 = OpLabel
      %10004 = OpDot %float %9991 %9991
      %10005 = OpDot %float %9992 %9992
      %10006 = OpExtInst %float %1 InverseSqrt %10004
      %10007 = OpExtInst %float %1 InverseSqrt %10005
      %10008 = OpFMul %float %10006 %10007
      %10009 = OpDot %float %9991 %9992
      %10010 = OpFMul %float %10009 %10008
      %10011 = OpExtInst %float %1 Fma %10010 %float_0_5 %float_0_5
      %10012 = OpExtInst %float %1 Fma %10006 %10007 %10011
      %10013 = OpFDiv %float %10008 %10012
      %10014 = OpDot %float %8445 %9991
      %10015 = OpDot %float %8445 %9992
      %10016 = OpFMul %float %10015 %10007
      %10017 = OpExtInst %float %1 Fma %10014 %10006 %10016
      %10018 = OpFMul %float %float_0_5 %10017
               OpBranch %9995
       %9995 = OpLabel
      %10019 = OpPhi %float %float_1 %9997 %10010 %9996
      %10020 = OpPhi %float %10003 %9997 %10018 %9996
      %10021 = OpPhi %float %10000 %9997 %10013 %9996
      %10022 = OpFOrdGreaterThan %bool %9896 %float_0
               OpSelectionMerge %10023 None
               OpBranchConditional %10022 %10024 %10023
      %10024 = OpLabel
      %10025 = OpFMul %float %9896 %9896
      %10026 = OpFMul %float %10025 %10021
      %10027 = OpExtInst %float %1 FClamp %10026 %float_0 %float_1
      %10028 = OpExtInst %float %1 Sqrt %10027
      %10029 = OpFOrdLessThan %bool %10020 %10028
               OpSelectionMerge %10030 None
               OpBranchConditional %10029 %10031 %10030
      %10031 = OpLabel
      %10032 = OpFNegate %float %10028
      %10033 = OpExtInst %float %1 NMax %10020 %10032
      %10034 = OpFAdd %float %10028 %10033
      %10035 = OpFMul %float %10034 %10034
      %10036 = OpFMul %float %float_4 %10028
      %10037 = OpFDiv %float %10035 %10036
               OpBranch %10030
      %10030 = OpLabel
      %10038 = OpPhi %float %10020 %10024 %10037 %10031
               OpBranch %10023
      %10023 = OpLabel
      %10039 = OpPhi %float %10020 %9995 %10038 %10030
      %10040 = OpExtInst %float %1 FClamp %10039 %float_0 %float_1
      %10041 = OpSelect %float %9905 %10021 %float_1
               OpSelectionMerge %10042 None
               OpBranchConditional %9994 %10043 %10042
      %10043 = OpLabel
      %10044 = OpFNegate %v3float %657
      %10045 = OpExtInst %v3float %1 Reflect %10044 %8445
      %10046 = OpFSub %v3float %9992 %9991
      %10047 = OpDot %float %10045 %10046
      %10048 = OpVectorTimesScalar %v3float %10045 %10047
      %10049 = OpFSub %v3float %10048 %10046
      %10050 = OpDot %float %9991 %10049
      %10051 = OpFMul %float %10047 %10047
      %10052 = OpFNegate %float %10051
      %10053 = OpExtInst %float %1 Fma %9900 %9900 %10052
      %10054 = OpFDiv %float %10050 %10053
      %10055 = OpExtInst %float %1 FClamp %10054 %float_0 %float_1
      %10056 = OpVectorTimesScalar %v3float %10046 %10055
      %10057 = OpFAdd %v3float %9991 %10056
               OpBranch %10042
      %10042 = OpLabel
      %10058 = OpPhi %v3float %9991 %10023 %10057 %10043
      %10059 = OpDot %float %10058 %10058
      %10060 = OpExtInst %float %1 InverseSqrt %10059
      %10061 = OpVectorTimesScalar %v3float %10058 %10060
      %10062 = OpExtInst %float %1 NMax %9993 %8420
      %10063 = OpFMul %float %9896 %10060
      %10064 = OpFNegate %float %10062
      %10065 = OpExtInst %float %1 Fma %10064 %10062 %float_1
      %10066 = OpFMul %float %10063 %10065
      %10067 = OpExtInst %float %1 FClamp %10066 %float_0 %float_1
      %10068 = OpFMul %float %9904 %10060
      %10069 = OpExtInst %float %1 FClamp %10068 %float_0 %float_1
      %10070 = OpExtInst %float %1 NMax %9900 %9896
      %10071 = OpFNegate %float %10070
      %10072 = OpExtInst %float %1 Fma %10071 %float_0_0500000007 %float_1
      %10073 = OpExtInst %float %1 FClamp %10072 %float_0 %float_1
      %10074 = OpBitcast %uint %10073
      %10075 = OpShiftLeftLogical %uint %10074 %uint_1
      %10076 = OpBitwiseOr %uint %uint_0 %10075
      %10077 = OpDot %float %8445 %10061
      %10078 = OpDot %float %8445 %657
      %10079 = OpDot %float %657 %10061
      %10080 = OpExtInst %float %1 Fma %float_2 %10079 %float_2
      %10081 = OpExtInst %float %1 InverseSqrt %10080
      %10082 = OpFAdd %float %10077 %10078
      %10083 = OpFMul %float %10082 %10081
      %10084 = OpExtInst %float %1 FClamp %10083 %float_0 %float_1
      %10085 = OpExtInst %float %1 Fma %10081 %10079 %10081
      %10086 = OpExtInst %float %1 FClamp %10085 %float_0 %float_1
      %10087 = OpFOrdGreaterThan %bool %10067 %float_0
               OpSelectionMerge %10088 None
               OpBranchConditional %10087 %10089 %10088
      %10089 = OpLabel
      %10090 = OpFNegate %float %10067
      %10091 = OpExtInst %float %1 Fma %10090 %10067 %float_1
      %10092 = OpExtInst %float %1 Sqrt %10091
      %10093 = OpFMul %float %float_2 %10077
      %10094 = OpFNegate %float %10079
      %10095 = OpExtInst %float %1 Fma %10093 %10078 %10094
      %10096 = OpFOrdGreaterThanEqual %bool %10095 %10092
               OpSelectionMerge %10097 None
               OpBranchConditional %10096 %10098 %10099
      %10099 = OpLabel
      %10100 = OpFNegate %float %10095
      %10101 = OpExtInst %float %1 Fma %10100 %10095 %float_1
      %10102 = OpExtInst %float %1 InverseSqrt %10101
      %10103 = OpFMul %float %10067 %10102
      %10104 = OpExtInst %float %1 Fma %10100 %10077 %10078
      %10105 = OpFMul %float %10103 %10104
      %10106 = OpFMul %float %float_2 %10078
      %10107 = OpExtInst %float %1 Fma %10106 %10078 %float_n1
      %10108 = OpExtInst %float %1 Fma %10100 %10079 %10107
      %10109 = OpFMul %float %10103 %10108
      %10110 = OpFNegate %float %10077
      %10111 = OpExtInst %float %1 Fma %10110 %10077 %float_1
      %10112 = OpFNegate %float %10078
      %10113 = OpExtInst %float %1 Fma %10112 %10078 %10111
      %10114 = OpExtInst %float %1 Fma %10094 %10079 %10113
      %10115 = OpFMul %float %10093 %10078
      %10116 = OpExtInst %float %1 Fma %10115 %10079 %10114
      %10117 = OpExtInst %float %1 FClamp %10116 %float_0 %float_1
      %10118 = OpExtInst %float %1 Sqrt %10117
      %10119 = OpFMul %float %10103 %10118
      %10120 = OpFMul %float %10119 %float_2
      %10121 = OpFMul %float %10120 %10078
      %10122 = OpExtInst %float %1 Fma %10077 %10092 %10078
      %10123 = OpExtInst %float %1 Fma %10103 %10104 %10122
      %10124 = OpExtInst %float %1 Fma %10079 %10092 %float_1
      %10125 = OpExtInst %float %1 Fma %10103 %10108 %10124
      %10126 = OpFMul %float %10119 %10125
      %10127 = OpFMul %float %10123 %10125
      %10128 = OpFMul %float %10121 %10123
      %10129 = OpFMul %float %float_0_25 %10121
      %10130 = OpFMul %float %10129 %10123
      %10131 = OpExtInst %float %1 Fma %float_n0_5 %10126 %10130
      %10132 = OpFMul %float %10127 %10131
      %10133 = OpFMul %float %10126 %float_n2
      %10134 = OpExtInst %float %1 Fma %10121 %10123 %10133
      %10135 = OpFMul %float %10128 %10134
      %10136 = OpExtInst %float %1 Fma %10126 %10126 %10135
      %10137 = OpFMul %float %10125 %10125
      %10138 = OpExtInst %float %1 Fma %10079 %10092 %10125
      %10139 = OpExtInst %float %1 Fma %float_n0_5 %10138 %float_n0_5
      %10140 = OpFMul %float %10127 %10139
      %10141 = OpExtInst %float %1 Fma %10122 %10137 %10140
      %10142 = OpExtInst %float %1 Fma %10123 %10141 %10136
      %10143 = OpFMul %float %float_2 %10132
      %10144 = OpFMul %float %10132 %10132
      %10145 = OpExtInst %float %1 Fma %10142 %10142 %10144
      %10146 = OpFDiv %float %10143 %10145
      %10147 = OpFMul %float %10146 %10142
      %10148 = OpFNegate %float %10146
      %10149 = OpExtInst %float %1 Fma %10148 %10132 %float_1
      %10150 = OpFMul %float %10147 %10119
      %10151 = OpExtInst %float %1 Fma %10149 %10105 %10150
      %10152 = OpFMul %float %10147 %10121
      %10153 = OpExtInst %float %1 Fma %10149 %10109 %10152
      %10154 = OpExtInst %float %1 Fma %10077 %10092 %10151
      %10155 = OpExtInst %float %1 Fma %10079 %10092 %10153
      %10156 = OpExtInst %float %1 Fma %float_2 %10155 %float_2
      %10157 = OpExtInst %float %1 InverseSqrt %10156
      %10158 = OpFAdd %float %10154 %10078
      %10159 = OpFMul %float %10158 %10157
      %10160 = OpExtInst %float %1 FClamp %10159 %float_0 %float_1
      %10161 = OpExtInst %float %1 Fma %10157 %10155 %10157
      %10162 = OpExtInst %float %1 FClamp %10161 %float_0 %float_1
               OpBranch %10097
      %10098 = OpLabel
      %10163 = OpExtInst %float %1 FAbs %10078
               OpBranch %10097
      %10097 = OpLabel
      %10164 = OpPhi %float %10160 %10099 %float_1 %10098
      %10165 = OpPhi %float %10162 %10099 %10163 %10098
               OpBranch %10088
      %10088 = OpLabel
      %10166 = OpPhi %float %10084 %10042 %10164 %10097
      %10167 = OpPhi %float %10086 %10042 %10165 %10097
      %10168 = OpExtInst %float %1 FAbs %10078
      %10169 = OpFAdd %float %10168 %float_9_99999975en06
      %10170 = OpExtInst %float %1 FClamp %10169 %float_0 %float_1
      %10171 = OpFMul %float %9993 %9993
      %10172 = OpFMul %float %10171 %10171
      %10173 = OpShiftRightLogical %uint %10076 %uint_1
      %10174 = OpBitcast %float %10173
      %10175 = OpExtInst %float %1 FClamp %10078 %float_0 %float_1
      %10176 = OpExtInst %float %1 FClamp %10040 %float_0 %float_1
      %10177 = OpExtInst %float %1 FClamp %10086 %float_0 %float_1
      %10178 = OpExtInst %float %1 FClamp %10084 %float_0 %float_1
      %10179 = OpBitcast %int %10172
      %10180 = OpISub %int %int_2129859010 %10179
      %10181 = OpBitcast %float %10180
      %10182 = OpExtInst %float %1 Fma %float_2 %10181 %float_n1
      %10183 = OpExtInst %float %1 Log2 %10182
      %10184 = OpFMul %float %float_0_055555556 %10183
      %10185 = OpExtInst %float %1 FClamp %10184 %float_0 %float_1
      %10186 = OpFSub %float %float_1 %10177
      %10187 = OpFMul %float %10186 %10186
      %10188 = OpFMul %float %10187 %10187
      %10189 = OpExtInst %float %1 Fma %10188 %10186 %10177
      %10190 = OpFSub %float %float_1 %10175
      %10191 = OpFMul %float %10190 %10190
      %10192 = OpFMul %float %10191 %10191
      %10193 = OpFMul %float %10192 %10190
      %10194 = OpExtInst %float %1 Fma %float_n0_75 %10193 %float_1
      %10195 = OpFSub %float %float_1 %10176
      %10196 = OpFMul %float %10195 %10195
      %10197 = OpFMul %float %10196 %10196
      %10198 = OpFMul %float %10197 %10195
      %10199 = OpExtInst %float %1 Fma %float_n0_75 %10198 %float_1
      %10200 = OpFMul %float %10194 %10199
      %10201 = OpExtInst %float %1 Fma %float_2_20000005 %10185 %float_n0_5
      %10202 = OpExtInst %float %1 FClamp %10201 %float_0 %float_1
      %10203 = OpExtInst %float %1 FMix %10189 %10200 %10202
      %10204 = OpExtInst %float %1 Fma %float_34_5 %10185 %float_n59
      %10205 = OpExtInst %float %1 Fma %10204 %10185 %float_24_5
      %10206 = OpFMul %float %10205 %10177
      %10207 = OpExtInst %float %1 Fma %float_73_1999969 %10185 %float_n21_2000008
      %10208 = OpExtInst %float %1 NMax %10207 %float_8_89999962
      %10209 = OpFNegate %float %10208
      %10210 = OpBitcast %int %10178
      %10211 = OpShiftRightArithmetic %int %10210 %int_1
      %10212 = OpIAdd %int %int_532487669 %10211
      %10213 = OpBitcast %float %10212
      %10214 = OpFMul %float %10209 %10213
      %10215 = OpExtInst %float %1 Exp2 %10214
      %10216 = OpFMul %float %10206 %10215
      %10217 = OpExtInst %float %1 Fma %10216 %10174 %10203
      %10218 = OpFMul %float %float_0_318309873 %10217
      %10219 = OpVectorTimesScalar %v3float %8642 %10218
      %10220 = OpFMul %float %10041 %10040
      %10221 = OpVectorTimesScalar %v3float %127 %10220
      %10222 = OpFMul %v3float %10219 %10221
      %10223 = OpBitwiseAnd %uint %10076 %uint_1
      %10224 = OpIEqual %bool %10223 %uint_1
               OpSelectionMerge %10225 None
               OpBranchConditional %10224 %10226 %10227
      %10227 = OpLabel
      %10228 = OpFOrdGreaterThan %bool %10069 %float_0
               OpSelectionMerge %10229 None
               OpBranchConditional %10228 %10230 %10229
      %10230 = OpLabel
      %10231 = OpFMul %float %10069 %10069
      %10232 = OpExtInst %float %1 Fma %10167 %float_3_5999999 %float_0_400000006
      %10233 = OpFDiv %float %10231 %10232
      %10234 = OpExtInst %float %1 Fma %10171 %10171 %10233
      %10235 = OpExtInst %float %1 FClamp %10234 %float_0 %float_1
               OpBranch %10229
      %10229 = OpLabel
      %10236 = OpPhi %float %10172 %10227 %10235 %10230
               OpSelectionMerge %10237 None
               OpBranchConditional %10087 %10238 %10237
      %10238 = OpLabel
      %10239 = OpFMul %float %float_0_25 %10067
      %10240 = OpBitcast %int %10236
      %10241 = OpShiftRightArithmetic %int %10240 %int_1
      %10242 = OpIAdd %int %int_532487669 %10241
      %10243 = OpBitcast %float %10242
      %10244 = OpExtInst %float %1 Fma %float_3 %10243 %10067
      %10245 = OpFMul %float %10239 %10244
      %10246 = OpFAdd %float %10167 %float_0_00100000005
      %10247 = OpFDiv %float %10245 %10246
      %10248 = OpFAdd %float %10236 %10247
      %10249 = OpFDiv %float %10236 %10248
               OpBranch %10237
      %10237 = OpLabel
      %10250 = OpPhi %float %float_1 %10229 %10249 %10238
      %10251 = OpPhi %float %10236 %10229 %10248 %10238
      %10252 = OpFOrdLessThan %bool %10019 %float_1
               OpSelectionMerge %10253 None
               OpBranchConditional %10252 %10254 %10253
      %10254 = OpLabel
      %10255 = OpFSub %float %float_1_00010002 %10019
      %10256 = OpFAdd %float %float_1 %10019
      %10257 = OpFDiv %float %10255 %10256
      %10258 = OpExtInst %float %1 Sqrt %10257
      %10259 = OpFMul %float %float_0_25 %10258
      %10260 = OpBitcast %int %10251
      %10261 = OpShiftRightArithmetic %int %10260 %int_1
      %10262 = OpIAdd %int %int_532487669 %10261
      %10263 = OpBitcast %float %10262
      %10264 = OpExtInst %float %1 Fma %float_3 %10263 %10258
      %10265 = OpFMul %float %10259 %10264
      %10266 = OpFAdd %float %10167 %float_0_00100000005
      %10267 = OpFDiv %float %10265 %10266
      %10268 = OpFAdd %float %10251 %10267
      %10269 = OpFDiv %float %10251 %10268
      %10270 = OpExtInst %float %1 Sqrt %10269
      %10271 = OpFMul %float %10250 %10270
               OpBranch %10253
      %10253 = OpLabel
      %10272 = OpPhi %float %10250 %10237 %10271 %10254
      %10273 = OpFNegate %float %10166
      %10274 = OpExtInst %float %1 Fma %10166 %10236 %10273
      %10275 = OpExtInst %float %1 Fma %10274 %10166 %float_1
      %10276 = OpFMul %float %float_3_14159274 %10275
      %10277 = OpFMul %float %10276 %10275
      %10278 = OpFDiv %float %10236 %10277
      %10279 = OpFMul %float %10278 %10272
      %10280 = OpExtInst %float %1 Sqrt %10236
      %10281 = OpFSub %float %float_1 %10280
      %10282 = OpExtInst %float %1 Fma %10170 %10281 %10280
      %10283 = OpExtInst %float %1 Fma %10040 %10281 %10280
      %10284 = OpFMul %float %10170 %10283
      %10285 = OpExtInst %float %1 Fma %10040 %10282 %10284
      %10286 = OpFDiv %float %float_0_5 %10285
      %10287 = OpFSub %float %float_1 %10167
      %10288 = OpFMul %float %10287 %10287
      %10289 = OpFMul %float %10288 %10288
      %10290 = OpFMul %float %10289 %10287
      %10291 = OpCompositeExtract %float %8555 1
      %10292 = OpFMul %float %float_50 %10291
      %10293 = OpExtInst %float %1 FClamp %10292 %float_0 %float_1
      %10294 = OpFMul %float %10293 %10290
      %10295 = OpCompositeConstruct %v3float %10294 %10294 %10294
      %10296 = OpFNegate %float %10289
      %10297 = OpExtInst %float %1 Fma %10296 %10287 %float_1
      %10298 = OpVectorTimesScalar %v3float %8555 %10297
      %10299 = OpFAdd %v3float %10295 %10298
      %10300 = OpFMul %float %10279 %10286
      %10301 = OpVectorTimesScalar %v3float %10299 %10300
      %10302 = OpFMul %v3float %10221 %10301
               OpBranch %10225
      %10226 = OpLabel
               OpBranch %10225
      %10225 = OpLabel
      %10303 = OpPhi %v3float %10302 %10253 %102 %10226
      %10304 = OpCompositeExtract %float %8555 1
      %10305 = OpFMul %float %float_50 %10304
      %10306 = OpExtInst %float %1 FClamp %10305 %float_0 %float_1
      %10307 = OpCompositeConstruct %v3float %10306 %10306 %10306
      %10308 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
      %10309 = OpLoad %type_sampler %View_ShadingEnergySampler
      %10310 = OpCompositeConstruct %v2float %10170 %9993
      %10311 = OpSampledImage %type_sampled_image %10308 %10309
      %10312 = OpImageSampleExplicitLod %v4float %10311 %10310 Lod %float_0
      %10313 = OpAccessChain %_ptr_Uniform_uint %View %uint_40
      %10314 = OpLoad %uint %10313
      %10315 = OpINotEqual %bool %10314 %uint_0
      %10316 = OpCompositeConstruct %v3bool %10315 %10315 %10315
      %10317 = OpCompositeExtract %float %10312 0
      %10318 = OpFSub %float %float_1 %10317
      %10319 = OpFDiv %float %10318 %10317
      %10320 = OpVectorTimesScalar %v3float %8555 %10319
      %10321 = OpFAdd %v3float %127 %10320
      %10322 = OpSelect %v3float %10316 %10321 %127
      %10323 = OpVectorTimesScalar %v3float %8555 %10317
      %10324 = OpFSub %v3float %10307 %8555
      %10325 = OpCompositeExtract %float %10312 1
      %10326 = OpVectorTimesScalar %v3float %10324 %10325
      %10327 = OpFAdd %v3float %10323 %10326
      %10328 = OpFMul %v3float %10322 %10327
      %10329 = OpAccessChain %_ptr_Uniform_uint %View %uint_41
      %10330 = OpLoad %uint %10329
      %10331 = OpINotEqual %bool %10330 %uint_0
      %10332 = OpDot %float %10328 %171
      %10333 = OpFSub %float %float_1 %10332
      %10334 = OpSelect %float %10331 %10333 %float_1
      %10335 = OpVectorTimesScalar %v3float %10222 %10334
      %10336 = OpFMul %v3float %10303 %10322
      %10337 = OpVectorTimesScalar %v3float %10336 %9910
      %10338 = OpVectorTimesScalar %v3float %9973 %9984
      %10339 = OpFMul %v3float %10337 %10338
      %10340 = OpExtInst %v3float %1 Fma %10335 %10338 %102
               OpBranch %9987
       %9987 = OpLabel
      %10341 = OpPhi %v3float %458 %9978 %10340 %10225
      %10342 = OpPhi %v3float %458 %9978 %10339 %10225
               OpBranch %9975
       %9975 = OpLabel
      %10343 = OpPhi %v3float %458 %9962 %10341 %9987
      %10344 = OpPhi %v3float %458 %9962 %10342 %9987
      %10345 = OpCompositeExtract %float %10343 0
      %10346 = OpCompositeExtract %float %10343 1
      %10347 = OpCompositeExtract %float %10343 2
      %10348 = OpCompositeConstruct %v4float %10345 %10346 %10347 %float_0
      %10349 = OpCompositeExtract %float %10344 0
      %10350 = OpCompositeExtract %float %10344 1
      %10351 = OpCompositeExtract %float %10344 2
      %10352 = OpCompositeConstruct %v4float %10349 %10350 %10351 %float_0
      %10353 = OpBitwiseAnd %uint %9941 %8717
      %10354 = OpINotEqual %bool %10353 %uint_0
               OpSelectionMerge %10355 Flatten
               OpBranchConditional %10354 %10356 %10355
      %10356 = OpLabel
      %10357 = OpFAdd %v4float %9841 %10348
      %10358 = OpFAdd %v4float %9844 %10352
               OpBranch %10355
      %10355 = OpLabel
       %9842 = OpPhi %v4float %9841 %9975 %10357 %10356
       %9845 = OpPhi %v4float %9844 %9975 %10358 %10356
               OpBranch %9843
       %9843 = OpLabel
       %9847 = OpIAdd %uint %9846 %uint_1
               OpBranch %9840
       %9849 = OpLabel
      %10359 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_16
      %10360 = OpLoad %uint %10359
      %10361 = OpIEqual %bool %10360 %uint_0
      %10362 = OpCompositeConstruct %v4bool %10361 %10361 %10361 %10361
      %10363 = OpSelect %v4float %10362 %98 %9841
      %10364 = OpSelect %v4float %10362 %98 %9844
      %10365 = OpVectorShuffle %v3float %10363 %10363 0 1 2
      %10366 = OpVectorShuffle %v3float %10364 %10364 0 1 2
      %10367 = OpFAdd %v3float %10365 %10366
      %10368 = OpAccessChain %_ptr_Uniform_float %View %uint_18
      %10369 = OpLoad %float %10368
      %10370 = OpFOrdGreaterThan %bool %10369 %float_0
               OpSelectionMerge %10371 DontFlatten
               OpBranchConditional %10370 %10372 %10371
      %10372 = OpLabel
      %10373 = OpIAdd %uint %8388 %uint_1
      %10374 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10373
      %10375 = OpLoad %v4float %10374
      %10376 = OpVectorShuffle %v3float %10375 %10375 0 1 2
      %10377 = OpIAdd %uint %8388 %uint_18
      %10378 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10377
      %10379 = OpLoad %v4float %10378
      %10380 = OpIAdd %uint %8388 %uint_17
      %10381 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10380
      %10382 = OpLoad %v4float %10381
      %10383 = OpCompositeExtract %float %10382 3
      %10384 = OpVectorShuffle %v3float %10379 %10379 0 1 2
      %10385 = OpIAdd %uint %8388 %uint_24
      %10386 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10385
      %10387 = OpLoad %v4float %10386
      %10388 = OpCompositeExtract %float %10387 3
      %10389 = OpIAdd %uint %8388 %uint_25
      %10390 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10389
      %10391 = OpLoad %v4float %10390
      %10392 = OpCompositeExtract %float %10391 3
      %10393 = OpIAdd %uint %8388 %uint_31
      %10394 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10393
      %10395 = OpLoad %v4float %10394
      %10396 = OpCompositeExtract %float %10395 0
      %10397 = OpCompositeConstruct %v3float %10383 %10388 %10392
      %10398 = OpFSub %v3float %592 %10376
      %10399 = OpFSub %v3float %640 %10384
      %10400 = OpVectorTimesScalar %v3float %10398 %float_2097152
      %10401 = OpFAdd %v3float %10400 %10399
      %10402 = OpExtInst %v3float %1 FAbs %10401
      %10403 = OpFAdd %v3float %10397 %127
      %10404 = OpFOrdGreaterThan %v3bool %10402 %10403
      %10405 = OpAny %bool %10404
               OpSelectionMerge %10406 None
               OpBranchConditional %10405 %10407 %10408
      %10408 = OpLabel
      %10409 = OpFOrdGreaterThan %bool %10396 %float_0
               OpSelectionMerge %10410 None
               OpBranchConditional %10409 %10411 %10410
      %10411 = OpLabel
      %10412 = OpFSub %v3float %639 %581
      %10413 = OpExtInst %v3float %1 FAbs %10412
      %10414 = OpCompositeExtract %float %10413 0
      %10415 = OpCompositeExtract %float %10413 1
      %10416 = OpCompositeExtract %float %10413 2
      %10417 = OpExtInst %float %1 NMax %10415 %10416
      %10418 = OpExtInst %float %1 NMax %10414 %10417
      %10419 = OpFSub %float %10418 %10396
      %10420 = OpExtInst %float %1 FAbs %10419
      %10421 = OpFMul %float %10420 %float_20
      %10422 = OpExtInst %float %1 FClamp %10421 %float_0 %float_1
      %10423 = OpFSub %float %float_1 %10422
      %10424 = OpVectorTimesScalar %v3float %139 %10423
               OpBranch %10410
      %10410 = OpLabel
      %10425 = OpPhi %v3float %102 %10408 %10424 %10411
               OpBranch %10406
      %10407 = OpLabel
      %10426 = OpFMul %v3float %592 %133
      %10427 = OpFMul %v3float %640 %133
      %10428 = OpCompositeExtract %float %10426 0
      %10429 = OpCompositeExtract %float %10427 0
      %10430 = OpCompositeExtract %float %10426 1
      %10431 = OpCompositeExtract %float %10427 1
      %10432 = OpFAdd %float %10428 %10430
      %10433 = OpFAdd %float %10429 %10431
      %10434 = OpCompositeExtract %float %10426 2
      %10435 = OpCompositeExtract %float %10427 2
      %10436 = OpFAdd %float %10432 %10434
      %10437 = OpFAdd %float %10433 %10435
      %10438 = OpFMul %float %10436 %float_4194_3042
      %10439 = OpExtInst %float %1 Fract %10438
      %10440 = OpExtInst %float %1 Fma %10437 %float_0_00200000009 %10439
      %10441 = OpExtInst %float %1 Fract %10440
      %10442 = OpCompositeConstruct %v3float %10441 %10441 %10441
      %10443 = OpFOrdGreaterThan %v3bool %10442 %137
      %10444 = OpSelect %v3float %10443 %127 %102
      %10445 = OpExtInst %v3float %1 FMix %134 %135 %10444
               OpBranch %10406
      %10406 = OpLabel
      %10446 = OpPhi %v3float %102 %10410 %10445 %10407
      %10447 = OpPhi %v3float %10425 %10410 %10445 %10407
               OpBranch %10371
      %10371 = OpLabel
      %10448 = OpPhi %v3float %102 %9849 %10446 %10406
      %10449 = OpPhi %v3float %102 %9849 %10447 %10406
      %10450 = OpFAdd %v3float %10367 %8643
      %10451 = OpFAdd %v3float %10450 %10449
      %10452 = OpVectorShuffle %v3float %616 %616 0 1 2
      %10453 = OpVectorTimesScalar %v3float %10452 %float_3_14159274
      %10454 = OpVectorTimesScalar %v3float %8627 %float_3_14159274
      %10455 = OpDot %float %8445 %657
      %10456 = OpExtInst %float %1 NMax %float_0 %10455
      %10457 = OpLoad %type_2d_image %OpaqueBasePass_PreIntegratedGFTexture
      %10458 = OpLoad %type_sampler %View_SharedBilinearClampedSampler
      %10459 = OpCompositeConstruct %v2float %10456 %8422
      %10460 = OpSampledImage %type_sampled_image %10457 %10458
      %10461 = OpImageSampleExplicitLod %v4float %10460 %10459 Lod %float_0
      %10462 = OpCompositeExtract %float %10461 0
      %10463 = OpVectorTimesScalar %v3float %8555 %10462
      %10464 = OpCompositeExtract %float %8555 1
      %10465 = OpFMul %float %float_50 %10464
      %10466 = OpExtInst %float %1 FClamp %10465 %float_0 %float_1
      %10467 = OpCompositeExtract %float %10461 1
      %10468 = OpFMul %float %10466 %10467
      %10469 = OpCompositeConstruct %v3float %10468 %10468 %10468
      %10470 = OpFAdd %v3float %10463 %10469
      %10471 = OpLoad %type_2d_image %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture
      %10472 = OpAccessChain %_ptr_Uniform_v2float %SingleLayerWater %uint_2
      %10473 = OpLoad %v2float %10472
      %10474 = OpLoad %type_2d_image %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture
      %10475 = OpAccessChain %_ptr_Uniform_v4float %SingleLayerWater %uint_0
      %10476 = OpLoad %v4float %10475
      %10477 = OpVectorShuffle %v2float %10476 %10476 0 1
      %10478 = OpVectorShuffle %v2float %10476 %10476 2 3
      %10479 = OpAccessChain %_ptr_Uniform_v4float %SingleLayerWater %uint_1
      %10480 = OpLoad %v4float %10479
      %10481 = OpFOrdGreaterThan %bool %8446 %float_0
               OpSelectionMerge %10482 None
               OpBranchConditional %10481 %10483 %10482
      %10483 = OpLabel
      %10484 = OpExtInst %float %1 NMin %8535 %float_0_99000001
      %10485 = OpExtInst %float %1 Sqrt %10484
      %10486 = OpFSub %float %float_1 %10485
      %10487 = OpFDiv %float %float_2 %10486
      %10488 = OpFSub %float %10487 %float_1
      %10489 = OpExtInst %v2float %1 FClamp %648 %10477 %10478
      %10490 = OpSampledImage %type_sampled_image %10471 %10458
      %10491 = OpImageSampleExplicitLod %v4float %10490 %10489 Lod %float_0
      %10492 = OpCompositeExtract %float %10491 0
      %10493 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_0
      %10494 = OpLoad %float %10493
      %10495 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_1
      %10496 = OpLoad %float %10495
      %10497 = OpExtInst %float %1 Fma %10492 %10494 %10496
      %10498 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_2
      %10499 = OpLoad %float %10498
      %10500 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_3
      %10501 = OpLoad %float %10500
      %10502 = OpFNegate %float %10501
      %10503 = OpExtInst %float %1 Fma %10492 %10499 %10502
      %10504 = OpFDiv %float %float_1 %10503
      %10505 = OpFAdd %float %10497 %10504
      %10506 = OpCompositeExtract %v4float %586 0
      %10507 = OpVectorShuffle %v3float %10506 %10506 0 1 2
      %10508 = OpCompositeExtract %v4float %586 1
      %10509 = OpVectorShuffle %v3float %10508 %10508 0 1 2
      %10510 = OpCompositeExtract %v4float %586 2
      %10511 = OpVectorShuffle %v3float %10510 %10510 0 1 2
      %10512 = OpCompositeConstruct %mat3v3float %10507 %10509 %10511
      %10513 = OpMatrixTimesVector %v3float %10512 %8445
      %10514 = OpExtInst %v3float %1 Normalize %10513
      %10515 = OpVectorShuffle %v2float %10514 %10514 0 1
      %10516 = OpFSub %float %8372 %float_1
      %10517 = OpVectorTimesScalar %v2float %10515 %10516
      %10518 = OpVectorShuffle %v2float %604 %604 0 1
      %10519 = OpFMul %v2float %10517 %10518
      %10520 = OpVectorShuffle %v2float %606 %606 2 3
      %10521 = OpFMul %v2float %10519 %10520
      %10522 = OpCompositeExtract %float %10480 0
      %10523 = OpCompositeExtract %float %10480 1
      %10524 = OpFMul %float %10523 %10522
      %10525 = OpCompositeConstruct %v2float %10522 %10524
      %10526 = OpVectorShuffle %v2float %10480 %10480 2 3
      %10527 = OpFMul %v2float %10526 %309
      %10528 = OpFMul %v2float %10527 %10525
      %10529 = OpFMul %v2float %10521 %10528
      %10530 = OpFNegate %float %8374
      %10531 = OpFMul %float %8374 %float_n0_5
      %10532 = OpExtInst %float %1 FAbs %10531
      %10533 = OpExtInst %float %1 FClamp %10532 %float_0 %float_50
      %10534 = OpExtInst %float %1 NMax %float_1 %10533
      %10535 = OpFDiv %float %float_1 %10534
      %10536 = OpFSub %float %10505 %643
      %10537 = OpExtInst %float %1 Fma %10536 %10535 %10530
      %10538 = OpExtInst %float %1 FClamp %10537 %float_0 %float_1
      %10539 = OpVectorTimesScalar %v2float %10529 %10538
      %10540 = OpVectorTimesScalar %v2float %10539 %float_4
      %10541 = OpFMul %float %10536 %float_0_0333333351
      %10542 = OpExtInst %float %1 FClamp %10541 %float_0 %float_1
      %10543 = OpVectorTimesScalar %v2float %10540 %10542
      %10544 = OpFAdd %v2float %10489 %10543
      %10545 = OpExtInst %v2float %1 FClamp %10544 %10477 %10478
      %10546 = OpSampledImage %type_sampled_image %10471 %10458
      %10547 = OpImageGather %v4float %10546 %10545 %int_0 None
      %10548 = OpCompositeExtract %float %10547 0
      %10549 = OpExtInst %float %1 Fma %10548 %10494 %10496
      %10550 = OpExtInst %float %1 Fma %10548 %10499 %10502
      %10551 = OpFDiv %float %float_1 %10550
      %10552 = OpFAdd %float %10549 %10551
      %10553 = OpCompositeExtract %float %10547 1
      %10554 = OpExtInst %float %1 Fma %10553 %10494 %10496
      %10555 = OpExtInst %float %1 Fma %10553 %10499 %10502
      %10556 = OpFDiv %float %float_1 %10555
      %10557 = OpFAdd %float %10554 %10556
      %10558 = OpCompositeExtract %float %10547 2
      %10559 = OpExtInst %float %1 Fma %10558 %10494 %10496
      %10560 = OpExtInst %float %1 Fma %10558 %10499 %10502
      %10561 = OpFDiv %float %float_1 %10560
      %10562 = OpFAdd %float %10559 %10561
      %10563 = OpCompositeExtract %float %10547 3
      %10564 = OpExtInst %float %1 Fma %10563 %10494 %10496
      %10565 = OpExtInst %float %1 Fma %10563 %10499 %10502
      %10566 = OpFDiv %float %float_1 %10565
      %10567 = OpFAdd %float %10564 %10566
      %10568 = OpCompositeConstruct %v4float %10552 %10557 %10562 %10567
      %10569 = OpCompositeConstruct %v4float %643 %643 %643 %643
      %10570 = OpFOrdLessThan %v4bool %10568 %10569
      %10571 = OpAny %bool %10570
               OpSelectionMerge %10572 None
               OpBranchConditional %10571 %10573 %10574
      %10574 = OpLabel
      %10575 = OpFMul %v2float %10545 %10473
      %10576 = OpVectorTimesScalar %v2float %10575 %float_1
      %10577 = OpFSub %v2float %10576 %149
      %10578 = OpExtInst %v2float %1 Fract %10577
      %10579 = OpVectorShuffle %v4float %10547 %10547 3 2 0 1
      %10580 = OpCompositeExtract %float %10578 0
      %10581 = OpFSub %float %float_1 %10580
      %10582 = OpCompositeExtract %float %10578 1
      %10583 = OpFSub %float %float_1 %10582
      %10584 = OpFMul %float %10581 %10583
      %10585 = OpCompositeInsert %v4float %10584 %540 0
      %10586 = OpFMul %float %10580 %10583
      %10587 = OpCompositeInsert %v4float %10586 %10585 1
      %10588 = OpFMul %float %10581 %10582
      %10589 = OpCompositeInsert %v4float %10588 %10587 2
      %10590 = OpFMul %float %10580 %10582
      %10591 = OpCompositeInsert %v4float %10590 %10589 3
      %10592 = OpDot %float %10579 %10591
      %10593 = OpExtInst %float %1 Fma %10592 %10494 %10496
      %10594 = OpExtInst %float %1 Fma %10592 %10499 %10502
      %10595 = OpFDiv %float %float_1 %10594
      %10596 = OpFAdd %float %10593 %10595
               OpBranch %10572
      %10573 = OpLabel
               OpBranch %10572
      %10572 = OpLabel
      %10597 = OpPhi %float %10596 %10574 %10505 %10573
      %10598 = OpPhi %float %10592 %10574 %10492 %10573
      %10599 = OpCompositeConstruct %v2bool %10571 %10571
      %10600 = OpSelect %v2float %10599 %10489 %10545
      %10601 = OpExtInst %float %1 NMax %float_9_99999996en13 %10598
      %10602 = OpFSub %float %10597 %643
      %10603 = OpExtInst %float %1 NMax %float_0 %10602
      %10604 = OpVectorShuffle %v3float %8431 %8431 0 1 2
      %10605 = OpVectorShuffle %v3float %8430 %457 0 1 2
      %10606 = OpFMul %v3float %10604 %10605
      %10607 = OpVectorShuffle %v3float %8433 %457 0 1 2
      %10608 = OpFMul %float %10603 %float_0_0199999996
      %10609 = OpExtInst %float %1 FClamp %10608 %float_0 %float_1
      %10610 = OpCompositeConstruct %v3float %10609 %10609 %10609
      %10611 = OpExtInst %v3float %1 FMix %127 %10607 %10610
      %10612 = OpExtInst %v3float %1 NMax %10605 %189
      %10613 = OpFDiv %float %float_1 %10488
               OpSelectionMerge %10614 None
               OpSwitch %uint_0 %10615
      %10615 = OpLabel
      %10616 = OpDot %float %657 %8445
      %10617 = OpFMul %float %10613 %10613
      %10618 = OpFNegate %float %10616
      %10619 = OpExtInst %float %1 Fma %10618 %10616 %float_1
      %10620 = OpFNegate %float %10617
      %10621 = OpExtInst %float %1 Fma %10620 %10619 %float_1
      %10622 = OpFOrdLessThan %bool %10621 %float_0
               OpSelectionMerge %10623 None
               OpBranchConditional %10622 %10624 %10623
      %10624 = OpLabel
      %10625 = OpFNegate %v3float %657
      %10626 = OpExtInst %v3float %1 Reflect %10625 %8445
               OpBranch %10614
      %10623 = OpLabel
      %10627 = OpFOrdGreaterThanEqual %bool %10616 %float_0
      %10628 = OpSelect %float %10627 %float_1 %float_n1
      %10629 = OpFNegate %float %10628
      %10630 = OpExtInst %float %1 Sqrt %10621
      %10631 = OpFMul %float %10629 %10630
      %10632 = OpExtInst %float %1 Fma %10613 %10616 %10631
      %10633 = OpVectorTimesScalar %v3float %8445 %10632
      %10634 = OpVectorTimesScalar %v3float %657 %10613
      %10635 = OpFSub %v3float %10633 %10634
               OpBranch %10614
      %10614 = OpLabel
      %10636 = OpPhi %v3float %10626 %10624 %10635 %10623
      %10637 = OpPhi %bool %false %10624 %true %10623
               OpSelectionMerge %10638 None
               OpBranchConditional %10637 %10639 %10638
      %10639 = OpLabel
      %10640 = OpFNegate %v3float %618
      %10641 = OpDot %float %10640 %10636
      %10642 = OpExtInst %float %1 Fma %float_1_54999995 %float_0 %float_n0
      %10643 = OpExtInst %float %1 Fma %10642 %10641 %float_1
      %10644 = OpFNegate %float %10642
      %10645 = OpExtInst %float %1 Fma %10644 %10642 %float_1
      %10646 = OpFMul %float %float_12_566371 %10643
      %10647 = OpFMul %float %10646 %10643
      %10648 = OpFDiv %float %10645 %10647
               OpBranch %10638
      %10638 = OpLabel
      %10649 = OpPhi %float %float_0 %10614 %10648 %10639
      %10650 = OpCompositeConstruct %v4float %631 %632 %10601 %float_1
      %10651 = OpMatrixTimesVector %v4float %590 %10650
      %10652 = OpVectorShuffle %v3float %10651 %10651 0 1 2
      %10653 = OpCompositeExtract %float %10651 3
      %10654 = OpCompositeConstruct %v3float %10653 %10653 %10653
      %10655 = OpFDiv %v3float %10652 %10654
      %10656 = OpFSub %v3float %10655 %600
      %10657 = OpFSub %v3float %592 %592
      %10658 = OpFSub %v3float %640 %10656
      %10659 = OpVectorTimesScalar %v3float %10657 %float_2097152
      %10660 = OpFAdd %v3float %10659 %10658
      %10661 = OpCompositeExtract %float %10660 2
      %10662 = OpExtInst %float %1 NMax %float_0 %10661
      %10663 = OpFNegate %float %10662
      %10664 = OpVectorTimesScalar %v3float %10605 %10663
      %10665 = OpExtInst %v3float %1 Exp %10664
      %10666 = OpSampledImage %type_sampled_image %10474 %10458
      %10667 = OpImageSampleExplicitLod %v4float %10666 %10600 Lod %float_0
      %10668 = OpVectorShuffle %v3float %10667 %10667 0 1 2
      %10669 = OpVectorTimesScalar %v3float %10665 %608
      %10670 = OpFMul %v3float %10669 %10668
      %10671 = OpVectorTimesScalar %v3float %10453 %10649
      %10672 = OpVectorTimesScalar %v3float %10454 %float_0_0795774683
      %10673 = OpSelect %float %8686 %float_0 %float_1
      %10674 = OpSelect %float %8686 %float_1 %float_0
      %10675 = OpVectorTimesScalar %v3float %10605 %10603
      %10676 = OpFNegate %v3float %10675
      %10677 = OpExtInst %v3float %1 Exp %10676
      %10678 = OpVectorTimesScalar %v3float %10671 %9827
      %10679 = OpVectorTimesScalar %v3float %10678 %10673
      %10680 = OpFAdd %v3float %10672 %10679
      %10681 = OpFSub %v3float %127 %10677
      %10682 = OpFMul %v3float %10606 %10681
      %10683 = OpFDiv %v3float %10682 %10612
      %10684 = OpExtInst %v3float %1 FClamp %10683 %102 %127
      %10685 = OpFMul %v3float %10680 %10684
      %10686 = OpVectorTimesScalar %v3float %10678 %10674
      %10687 = OpFMul %v3float %10686 %10684
      %10688 = OpFSub %v3float %127 %10470
      %10689 = OpVectorShuffle %v3float %127 %10688 3 4 5
      %10690 = OpFMul %v3float %10687 %10689
      %10691 = OpVectorTimesScalar %v3float %10690 %8446
      %10692 = OpFAdd %v3float %9826 %10691
      %10693 = OpVectorShuffle %v3float %538 %127 3 4 5
      %10694 = OpFMul %v3float %10677 %10693
      %10695 = OpFMul %v3float %10670 %10611
      %10696 = OpFMul %v3float %10694 %10695
      %10697 = OpExtInst %v3float %1 Fma %10685 %10689 %10696
      %10698 = OpVectorTimesScalar %v3float %10697 %8446
               OpBranch %10482
      %10482 = OpLabel
      %10699 = OpPhi %v3float %9826 %10371 %10692 %10638
      %10700 = OpPhi %v3float %102 %10371 %10698 %10638
      %10701 = OpFAdd %v3float %10451 %10700
      %10702 = OpExtInst %v3float %1 Normalize %8444
      %10703 = OpConvertFToU %v2uint %621
      %10704 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %10705 = OpExtInst %v3float %1 FClamp %8434 %102 %127
      %10706 = OpExtInst %v3float %1 Fma %10705 %8408 %8409
      %10707 = OpCompositeInsert %v4float %float_0 %8425 0
      %10708 = OpExtInst %float %1 FClamp %8414 %float_0 %float_1
      %10709 = OpExtInst %float %1 Fma %10708 %8412 %8413
      %10710 = OpCompositeInsert %v4float %10709 %10707 1
      %10711 = OpExtInst %float %1 Fma %8422 %8416 %8417
      %10712 = OpExtInst %float %1 NMax %8420 %10711
      %10713 = OpExtInst %float %1 FClamp %10712 %float_0 %float_1
      %10714 = OpCompositeInsert %v4float %10713 %10710 2
      %10715 = OpExtInst %float %1 FClamp %8424 %float_0 %float_1
      %10716 = OpCompositeInsert %v4float %10715 %10714 3
      %10717 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
      %10718 = OpLoad %type_sampler %View_ShadingEnergySampler
      %10719 = OpAccessChain %_ptr_Uniform_uint %View %uint_40
      %10720 = OpLoad %uint %10719
      %10721 = OpINotEqual %bool %10720 %uint_0
      %10722 = OpCompositeConstruct %v3bool %10721 %10721 %10721
      %10723 = OpAny %bool %555
               OpSelectionMerge %10724 None
               OpBranchConditional %10723 %10725 %10724
      %10725 = OpLabel
               OpSelectionMerge %10726 None
               OpSwitch %uint_4 %10726 0 %10727 3 %10728 5 %10729 4 %10730
      %10730 = OpLabel
      %10731 = OpExtInst %v3float %1 Fma %102 %127 %102
      %10732 = OpExtInst %float %1 Fma %float_1 %10713 %459
               OpSelectionMerge %10733 None
               OpSwitch %uint_0 %10734
      %10734 = OpLabel
               OpSelectionMerge %10735 None
               OpSwitch %uint_4 %10735 0 %10736 3 %10737 5 %10738 4 %10739
      %10739 = OpLabel
      %10740 = OpVectorShuffle %v3float %10706 %457 0 1 2
               OpBranch %10735
      %10738 = OpLabel
      %10741 = OpVectorShuffle %v3float %10706 %457 0 1 2
               OpBranch %10735
      %10737 = OpLabel
      %10742 = OpVectorShuffle %v3float %10706 %457 0 1 2
               OpBranch %10735
      %10736 = OpLabel
      %10743 = OpVectorShuffle %v3float %10706 %457 0 1 2
      %10744 = OpVectorShuffle %v3float %10716 %10716 0 1 2
      %10745 = OpExtInst %float %1 NMax %10709 %10713
      %10746 = OpExtInst %float %1 NMax %float_0 %10745
      %10747 = OpFSub %float %10746 %float_0_0799999982
      %10748 = OpFMul %float %10747 %float_3_125
      %10749 = OpExtInst %float %1 FClamp %10748 %float_0 %float_1
      %10750 = OpCompositeConstruct %v3float %10749 %10749 %10749
      %10751 = OpExtInst %v3float %1 FMix %10743 %10744 %10750
               OpBranch %10735
      %10735 = OpLabel
      %10752 = OpPhi %v3float %455 %10734 %10740 %10739 %10741 %10738 %10742 %10737 %10751 %10736
      %10753 = OpPhi %bool %false %10734 %true %10739 %true %10738 %true %10737 %true %10736
               OpSelectionMerge %10754 None
               OpBranchConditional %10753 %10733 %10754
      %10754 = OpLabel
               OpBranch %10733
      %10733 = OpLabel
      %10755 = OpPhi %v3float %10752 %10735 %102 %10754
      %10756 = OpVectorTimesScalar %v3float %10755 %float_1
      %10757 = OpBitwiseAnd %uint %8534 %uint_4294967288
      %10758 = OpBitwiseOr %uint %10757 %uint_4
               OpBranch %10726
      %10729 = OpLabel
      %10759 = OpBitwiseOr %uint %8534 %uint_0
      %10760 = OpBitwiseAnd %uint %10759 %uint_4294967288
      %10761 = OpBitwiseOr %uint %10760 %uint_6
               OpBranch %10726
      %10728 = OpLabel
      %10762 = OpExtInst %v3float %1 Fma %102 %127 %102
               OpSelectionMerge %10763 None
               OpSwitch %uint_0 %10764
      %10764 = OpLabel
               OpSelectionMerge %10765 None
               OpSwitch %uint_4 %10765 0 %10766 3 %10767 5 %10768 4 %10769
      %10769 = OpLabel
      %10770 = OpVectorShuffle %v3float %10706 %457 0 1 2
               OpBranch %10765
      %10768 = OpLabel
      %10771 = OpVectorShuffle %v3float %10706 %457 0 1 2
               OpBranch %10765
      %10767 = OpLabel
      %10772 = OpVectorShuffle %v3float %10706 %457 0 1 2
               OpBranch %10765
      %10766 = OpLabel
      %10773 = OpVectorShuffle %v3float %10706 %457 0 1 2
      %10774 = OpVectorShuffle %v3float %10716 %10716 0 1 2
      %10775 = OpExtInst %float %1 NMax %10709 %10713
      %10776 = OpExtInst %float %1 NMax %float_0 %10775
      %10777 = OpFSub %float %10776 %float_0_0799999982
      %10778 = OpFMul %float %10777 %float_3_125
      %10779 = OpExtInst %float %1 FClamp %10778 %float_0 %float_1
      %10780 = OpCompositeConstruct %v3float %10779 %10779 %10779
      %10781 = OpExtInst %v3float %1 FMix %10773 %10774 %10780
               OpBranch %10765
      %10765 = OpLabel
      %10782 = OpPhi %v3float %455 %10764 %10770 %10769 %10771 %10768 %10772 %10767 %10781 %10766
      %10783 = OpPhi %bool %false %10764 %true %10769 %true %10768 %true %10767 %true %10766
               OpSelectionMerge %10784 None
               OpBranchConditional %10783 %10763 %10784
      %10784 = OpLabel
               OpBranch %10763
      %10763 = OpLabel
      %10785 = OpPhi %v3float %10782 %10765 %102 %10784
      %10786 = OpVectorTimesScalar %v3float %10785 %float_1
      %10787 = OpBitwiseAnd %uint %8534 %uint_4294967288
      %10788 = OpBitwiseOr %uint %10787 %uint_5
               OpBranch %10726
      %10727 = OpLabel
      %10789 = OpExtInst %v3float %1 Fma %102 %127 %102
      %10790 = OpAll %bool %555
      %10791 = OpLogicalAnd %bool %true %10790
      %10792 = OpLogicalAnd %bool %10791 %true
               OpSelectionMerge %10793 None
               OpSwitch %uint_0 %10794
      %10794 = OpLabel
               OpSelectionMerge %10795 None
               OpSwitch %uint_4 %10795 0 %10796 3 %10797 5 %10798 4 %10799
      %10799 = OpLabel
      %10800 = OpVectorShuffle %v3float %10706 %457 0 1 2
               OpBranch %10795
      %10798 = OpLabel
      %10801 = OpVectorShuffle %v3float %10706 %457 0 1 2
               OpBranch %10795
      %10797 = OpLabel
      %10802 = OpVectorShuffle %v3float %10706 %457 0 1 2
               OpBranch %10795
      %10796 = OpLabel
      %10803 = OpVectorShuffle %v3float %10706 %457 0 1 2
      %10804 = OpVectorShuffle %v3float %10716 %10716 0 1 2
      %10805 = OpExtInst %float %1 NMax %10709 %10713
      %10806 = OpExtInst %float %1 NMax %float_0 %10805
      %10807 = OpFSub %float %10806 %float_0_0799999982
      %10808 = OpFMul %float %10807 %float_3_125
      %10809 = OpExtInst %float %1 FClamp %10808 %float_0 %float_1
      %10810 = OpCompositeConstruct %v3float %10809 %10809 %10809
      %10811 = OpExtInst %v3float %1 FMix %10803 %10804 %10810
               OpBranch %10795
      %10795 = OpLabel
      %10812 = OpPhi %v3float %455 %10794 %10800 %10799 %10801 %10798 %10802 %10797 %10811 %10796
      %10813 = OpPhi %bool %false %10794 %true %10799 %true %10798 %true %10797 %true %10796
               OpSelectionMerge %10814 None
               OpBranchConditional %10813 %10793 %10814
      %10814 = OpLabel
               OpBranch %10793
      %10793 = OpLabel
      %10815 = OpPhi %v3float %10812 %10795 %102 %10814
      %10816 = OpVectorTimesScalar %v3float %10815 %float_1
               OpSelectionMerge %10817 None
               OpBranchConditional %false %10818 %10817
      %10818 = OpLabel
               OpSelectionMerge %10819 None
               OpBranchConditional %false %10820 %10819
      %10820 = OpLabel
      %10821 = OpExtInst %float %1 NMax %float_0_0399999991 %float_0_0399999991
      %10822 = OpExtInst %float %1 NMax %float_0_0399999991 %10821
      %10823 = OpFSub %float %10822 %float_0_0799999982
      %10824 = OpFMul %float %10823 %float_3_125
      %10825 = OpExtInst %float %1 FClamp %10824 %float_0 %float_1
      %10826 = OpExtInst %float %1 FMix %float_0 %float_0_0399999991 %10825
      %10827 = OpCompositeConstruct %v3float %10826 %10826 %10826
               OpBranch %10819
      %10819 = OpLabel
      %10828 = OpPhi %v3float %10816 %10818 %10827 %10820
      %10829 = OpPhi %float %459 %10818 %float_0 %10820
               OpBranch %10817
      %10817 = OpLabel
      %10830 = OpPhi %v3float %10816 %10793 %10828 %10819
      %10831 = OpPhi %float %459 %10793 %10829 %10819
      %10832 = OpBitwiseOr %uint %8534 %uint_0
      %10833 = OpBitwiseOr %uint %10832 %uint_0
               OpBranch %10726
      %10726 = OpLabel
      %10834 = OpPhi %v3float %102 %10725 %10731 %10733 %102 %10729 %10762 %10763 %10789 %10817
      %10835 = OpPhi %uint %456 %10725 %uint_2 %10733 %uint_1 %10729 %uint_1 %10763 %uint_1 %10817
      %10836 = OpPhi %bool %true %10725 %false %10733 %false %10729 %false %10763 %10792 %10817
      %10837 = OpPhi %bool %true %10725 %false %10733 %false %10729 %false %10763 %true %10817
      %10838 = OpPhi %v3float %458 %10725 %10756 %10733 %458 %10729 %10786 %10763 %10830 %10817
      %10839 = OpPhi %float %459 %10725 %10732 %10733 %float_1 %10729 %float_1 %10763 %10831 %10817
      %10840 = OpPhi %float %float_0 %10725 %float_1 %10733 %float_1 %10729 %float_1 %10763 %float_1 %10817
      %10841 = OpPhi %uint %8534 %10725 %10758 %10733 %10761 %10729 %10788 %10763 %10833 %10817
      %10842 = OpCompositeConstruct %_arr_v3float_uint_4 %10702 %458 %458 %458
               OpStore %577 %10842
      %10843 = OpAccessChain %_ptr_Function_v3float %577 %uint_0
      %10844 = OpLoad %v3float %10843
      %10845 = OpVectorTimesScalar %v3float %10844 %float_1
               OpBranch %10724
      %10724 = OpLabel
      %10846 = OpPhi %uint %uint_8192 %10482 %uint_8194 %10726
      %10847 = OpPhi %v3float %102 %10482 %10834 %10726
      %10848 = OpPhi %uint %456 %10482 %10835 %10726
      %10849 = OpPhi %uint %8534 %10482 %10841 %10726
      %10850 = OpPhi %bool %true %10482 %10836 %10726
      %10851 = OpPhi %bool %true %10482 %10837 %10726
      %10852 = OpPhi %v3float %458 %10482 %10838 %10726
      %10853 = OpPhi %float %459 %10482 %10839 %10726
      %10854 = OpPhi %v3float %458 %10482 %10845 %10726
      %10855 = OpPhi %float %float_0 %10482 %10840 %10726
      %10856 = OpSelect %uint %10723 %uint_1 %uint_0
      %10857 = OpFOrdGreaterThan %bool %10855 %float_0
      %10858 = OpCompositeConstruct %v3bool %10857 %10857 %10857
      %10859 = OpExtInst %v3float %1 Normalize %10854
      %10860 = OpSelect %v3float %10858 %10859 %102
      %10861 = OpFDiv %float %10853 %10855
      %10862 = OpSelect %float %10857 %10861 %float_0
      %10863 = OpCompositeConstruct %v3float %10855 %10855 %10855
      %10864 = OpFDiv %v3float %10852 %10863
      %10865 = OpSelect %v3float %10858 %10864 %102
               OpSelectionMerge %10866 None
               OpBranchConditional %10851 %10867 %10866
      %10867 = OpLabel
      %10868 = OpIEqual %bool %10856 %uint_1
      %10869 = OpLogicalAnd %bool %10850 %10868
      %10870 = OpSelect %uint %10869 %uint_2 %uint_3
      %10871 = OpSelect %uint %10869 %uint_1 %10870
      %10872 = OpBitwiseAnd %uint %10849 %uint_4294967288
      %10873 = OpBitwiseAnd %uint %10871 %uint_7
      %10874 = OpBitwiseOr %uint %10872 %10873
               OpSelectionMerge %10875 None
               OpBranchConditional %10869 %10876 %10875
      %10876 = OpLabel
      %10877 = OpShiftRightLogical %uint %10846 %uint_6
      %10878 = OpBitwiseAnd %uint %10877 %uint_1
      %10879 = OpINotEqual %bool %10878 %uint_0
               OpSelectionMerge %10880 None
               OpBranchConditional %10879 %10881 %10880
      %10881 = OpLabel
               OpBranch %10880
      %10880 = OpLabel
      %10882 = OpPhi %uint %uint_0 %10876 %uint_1 %10881
      %10883 = OpShiftRightLogical %uint %10846 %uint_9
      %10884 = OpBitwiseAnd %uint %10883 %uint_1
      %10885 = OpINotEqual %bool %10884 %uint_0
      %10886 = OpLogicalAnd %bool %10885 %true
               OpSelectionMerge %10887 None
               OpBranchConditional %10886 %10888 %10887
      %10888 = OpLabel
      %10889 = OpBitwiseOr %uint %10882 %uint_4
               OpBranch %10887
      %10887 = OpLabel
      %10890 = OpPhi %uint %10882 %10880 %10889 %10888
      %10891 = OpShiftRightLogical %uint %10846 %uint_10
      %10892 = OpBitwiseAnd %uint %10891 %uint_1
      %10893 = OpINotEqual %bool %10892 %uint_0
               OpSelectionMerge %10894 None
               OpBranchConditional %10893 %10895 %10894
      %10895 = OpLabel
      %10896 = OpBitwiseOr %uint %10890 %uint_8
               OpBranch %10894
      %10894 = OpLabel
      %10897 = OpPhi %uint %10890 %10887 %10896 %10895
      %10898 = OpShiftRightLogical %uint %10846 %uint_2
      %10899 = OpBitwiseAnd %uint %10898 %uint_7
      %10900 = OpIEqual %bool %10899 %uint_4
               OpSelectionMerge %10901 None
               OpBranchConditional %10900 %10902 %10901
      %10902 = OpLabel
      %10903 = OpBitwiseOr %uint %10897 %uint_16
               OpBranch %10901
      %10901 = OpLabel
      %10904 = OpPhi %uint %10897 %10894 %10903 %10902
      %10905 = OpIEqual %bool %10899 %uint_1
               OpSelectionMerge %10906 None
               OpBranchConditional %10905 %10907 %10906
      %10907 = OpLabel
      %10908 = OpBitwiseOr %uint %10904 %uint_32
               OpBranch %10906
      %10906 = OpLabel
      %10909 = OpPhi %uint %10904 %10901 %10908 %10907
      %10910 = OpIEqual %bool %10899 %uint_3
               OpSelectionMerge %10911 None
               OpBranchConditional %10910 %10912 %10911
      %10912 = OpLabel
      %10913 = OpBitwiseOr %uint %10909 %uint_64
               OpBranch %10911
      %10911 = OpLabel
      %10914 = OpPhi %uint %10909 %10906 %10913 %10912
      %10915 = OpBitwiseAnd %uint %10914 %uint_2
      %10916 = OpIEqual %bool %10915 %uint_2
      %10917 = OpIEqual %bool %10915 %uint_3
      %10918 = OpLogicalOr %bool %10916 %10917
               OpSelectionMerge %10919 None
               OpBranchConditional %10918 %10920 %10921
      %10921 = OpLabel
      %10922 = OpBitwiseAnd %uint %10914 %uint_4
      %10923 = OpIEqual %bool %10922 %uint_4
               OpSelectionMerge %10924 None
               OpBranchConditional %10923 %10925 %10926
      %10926 = OpLabel
      %10927 = OpBitwiseAnd %uint %10914 %uint_40
      %10928 = OpIEqual %bool %10927 %uint_40
               OpSelectionMerge %10929 None
               OpBranchConditional %10928 %10930 %10931
      %10931 = OpLabel
      %10932 = OpBitwiseAnd %uint %10914 %uint_32
      %10933 = OpIEqual %bool %10932 %uint_32
               OpSelectionMerge %10934 None
               OpBranchConditional %10933 %10935 %10936
      %10936 = OpLabel
      %10937 = OpBitwiseAnd %uint %10914 %uint_72
      %10938 = OpIEqual %bool %10937 %uint_64
      %10939 = OpSelect %uint %10938 %uint_4 %uint_0
      %10940 = OpSelect %uint %10938 %uint_0 %456
               OpBranch %10934
      %10935 = OpLabel
               OpBranch %10934
      %10934 = OpLabel
      %10941 = OpPhi %uint %10939 %10936 %uint_3 %10935
      %10942 = OpPhi %uint %10940 %10936 %uint_0 %10935
               OpBranch %10929
      %10930 = OpLabel
               OpBranch %10929
      %10929 = OpLabel
      %10943 = OpPhi %uint %10941 %10934 %uint_5 %10930
      %10944 = OpPhi %uint %10942 %10934 %uint_0 %10930
               OpBranch %10924
      %10925 = OpLabel
               OpBranch %10924
      %10924 = OpLabel
      %10945 = OpPhi %uint %10943 %10929 %uint_2 %10925
      %10946 = OpPhi %uint %10944 %10929 %456 %10925
               OpBranch %10919
      %10920 = OpLabel
               OpBranch %10919
      %10919 = OpLabel
      %10947 = OpPhi %uint %10945 %10924 %uint_1 %10920
      %10948 = OpPhi %uint %10946 %10924 %456 %10920
               OpBranch %10875
      %10875 = OpLabel
      %10949 = OpPhi %uint %uint_0 %10867 %10947 %10919
      %10950 = OpPhi %uint %456 %10867 %10948 %10919
               OpBranch %10866
      %10866 = OpLabel
      %10951 = OpPhi %uint %uint_0 %10724 %10949 %10875
      %10952 = OpPhi %uint %456 %10724 %10950 %10875
      %10953 = OpPhi %uint %10849 %10724 %10874 %10875
               OpSelectionMerge %10954 DontFlatten
               OpBranchConditional %10723 %10955 %10954
      %10955 = OpLabel
      %10956 = OpCompositeConstruct %_arr_v3float_uint_4 %10702 %458 %458 %458
               OpStore %578 %10956
      %10957 = OpShiftRightLogical %uint %10846 %uint_14
      %10958 = OpBitwiseAnd %uint %10957 %uint_3
      %10959 = OpAccessChain %_ptr_Function_v3float %578 %10958
      %10960 = OpLoad %v3float %10959
      %10961 = OpDot %float %10960 %657
      %10962 = OpShiftRightLogical %uint %10846 %uint_11
      %10963 = OpBitwiseAnd %uint %10962 %uint_7
               OpSelectionMerge %10964 None
               OpSwitch %10963 %10964 0 %10965 3 %10966 5 %10967
      %10967 = OpLabel
      %10968 = OpVectorShuffle %v3float %10706 %457 0 1 2
      %10969 = OpVectorTimesScalar %v3float %10968 %float_1
               OpBranch %10964
      %10966 = OpLabel
      %10970 = OpVectorShuffle %v3float %10706 %457 0 1 2
      %10971 = OpDot %float %657 %10960
      %10972 = OpVectorTimesScalar %v3float %10960 %10971
      %10973 = OpFSub %v3float %657 %10972
      %10974 = OpExtInst %v3float %1 Normalize %10973
      %10975 = OpExtInst %float %1 NMin %float_0 %float_1
      %10976 = OpDot %float %657 %10974
      %10977 = OpDot %float %10960 %10974
      %10978 = OpExtInst %float %1 FClamp %10977 %float_n1 %float_1
      %10979 = OpExtInst %float %1 FClamp %10961 %float_n1 %float_1
      %10980 = OpExtInst %float %1 FAbs %10979
      %10981 = OpExtInst %float %1 Fma %float_n0_156582996 %10980 %float_1_57079637
      %10982 = OpFSub %float %float_1 %10980
      %10983 = OpExtInst %float %1 Sqrt %10982
      %10984 = OpFMul %float %10981 %10983
      %10985 = OpFOrdGreaterThanEqual %bool %10979 %float_0
      %10986 = OpFNegate %float %10981
      %10987 = OpExtInst %float %1 Fma %10986 %10983 %float_3_14159274
      %10988 = OpSelect %float %10985 %10984 %10987
      %10989 = OpFSub %float %float_1_57079637 %10988
      %10990 = OpExtInst %float %1 FAbs %10978
      %10991 = OpExtInst %float %1 Fma %float_n0_156582996 %10990 %float_1_57079637
      %10992 = OpFSub %float %float_1 %10990
      %10993 = OpExtInst %float %1 Sqrt %10992
      %10994 = OpFMul %float %10991 %10993
      %10995 = OpFOrdGreaterThanEqual %bool %10978 %float_0
      %10996 = OpFNegate %float %10991
      %10997 = OpExtInst %float %1 Fma %10996 %10993 %float_3_14159274
      %10998 = OpSelect %float %10995 %10994 %10997
      %10999 = OpFSub %float %float_1_57079637 %10998
      %11000 = OpFSub %float %10989 %10999
      %11001 = OpExtInst %float %1 FAbs %11000
      %11002 = OpFMul %float %float_0_5 %11001
      %11003 = OpExtInst %float %1 Cos %11002
      %11004 = OpVectorTimesScalar %v3float %10960 %10978
      %11005 = OpFSub %v3float %10974 %11004
      %11006 = OpVectorTimesScalar %v3float %10960 %10979
      %11007 = OpFSub %v3float %657 %11006
      %11008 = OpDot %float %11005 %11007
      %11009 = OpDot %float %11005 %11005
      %11010 = OpDot %float %11007 %11007
      %11011 = OpExtInst %float %1 Fma %11009 %11010 %float_9_99999975en05
      %11012 = OpExtInst %float %1 InverseSqrt %11011
      %11013 = OpFMul %float %11008 %11012
      %11014 = OpExtInst %float %1 Fma %float_0_5 %11013 %float_0_5
      %11015 = OpExtInst %float %1 FClamp %11014 %float_0 %float_1
      %11016 = OpExtInst %float %1 Sqrt %11015
      %11017 = OpFDiv %float %float_1_19000006 %11003
      %11018 = OpExtInst %float %1 Fma %float_0_360000014 %11003 %11017
      %11019 = OpExtInst %float %1 Fma %float_0_00392156886 %float_0_00392156886 %float_0_200000003
      %11020 = OpExtInst %float %1 Fma %float_1_53787023en05 %float_0_5 %float_0_200000003
      %11021 = OpExtInst %float %1 Fma %float_1_53787023en05 %float_2 %float_0_200000003
      %11022 = OpFMul %float %float_0_997551024 %11016
      %11023 = OpFNegate %float %10979
      %11024 = OpExtInst %float %1 Fma %11023 %10979 %float_1
      %11025 = OpExtInst %float %1 Sqrt %11024
      %11026 = OpFMul %float %float_n0_0699428469 %10979
      %11027 = OpExtInst %float %1 Fma %11022 %11025 %11026
      %11028 = OpFMul %float %float_1_41421354 %11016
      %11029 = OpFMul %float %11019 %11028
      %11030 = OpFAdd %float %10978 %10979
      %11031 = OpExtInst %float %1 Fma %float_0_139885694 %11027 %11030
      %11032 = OpFMul %float %11031 %11031
      %11033 = OpFMul %float %float_n0_5 %11032
      %11034 = OpFMul %float %11029 %11029
      %11035 = OpFDiv %float %11033 %11034
      %11036 = OpExtInst %float %1 Exp %11035
      %11037 = OpFMul %float %float_2_50662827 %11029
      %11038 = OpFDiv %float %11036 %11037
      %11039 = OpFMul %float %float_0_25 %11016
      %11040 = OpExtInst %float %1 Fma %float_0_5 %10976 %float_0_5
      %11041 = OpExtInst %float %1 FClamp %11040 %float_0 %float_1
      %11042 = OpExtInst %float %1 Sqrt %11041
      %11043 = OpFSub %float %float_1 %11042
      %11044 = OpFMul %float %11043 %11043
      %11045 = OpFMul %float %11044 %11044
      %11046 = OpFMul %float %11045 %11043
      %11047 = OpExtInst %float %1 Fma %float_0_953479409 %11046 %float_0_0465205647
      %11048 = OpFMul %float %11038 %11039
      %11049 = OpFMul %float %11048 %11047
      %11050 = OpFMul %float %10709 %float_2
      %11051 = OpFMul %float %11049 %11050
      %11052 = OpFNegate %float %10976
      %11053 = OpExtInst %float %1 FClamp %11052 %float_0 %float_1
      %11054 = OpExtInst %float %1 FMix %float_1 %10975 %11053
      %11055 = OpFMul %float %11051 %11054
      %11056 = OpCompositeConstruct %v3float %11055 %11055 %11055
      %11057 = OpFSub %float %11030 %float_0_0350000001
      %11058 = OpFMul %float %11057 %11057
      %11059 = OpFMul %float %float_n0_5 %11058
      %11060 = OpFMul %float %11020 %11020
      %11061 = OpFDiv %float %11059 %11060
      %11062 = OpExtInst %float %1 Exp %11061
      %11063 = OpFMul %float %float_2_50662827 %11020
      %11064 = OpFDiv %float %11062 %11063
      %11065 = OpFDiv %float %float_1 %11018
      %11066 = OpExtInst %float %1 Fma %float_n0_800000012 %11013 %float_0_600000024
      %11067 = OpExtInst %float %1 Fma %11065 %11066 %float_1
      %11068 = OpFMul %float %11016 %11067
      %11069 = OpFNegate %float %11068
      %11070 = OpExtInst %float %1 Fma %11069 %11068 %float_1
      %11071 = OpExtInst %float %1 FClamp %11070 %float_0 %float_1
      %11072 = OpExtInst %float %1 Sqrt %11071
      %11073 = OpFNegate %float %11003
      %11074 = OpExtInst %float %1 Fma %11073 %11072 %float_1
      %11075 = OpFMul %float %11074 %11074
      %11076 = OpFMul %float %11075 %11075
      %11077 = OpFMul %float %11076 %11074
      %11078 = OpExtInst %float %1 Fma %float_0_953479409 %11077 %float_0_0465205647
      %11079 = OpFSub %float %float_1 %11078
      %11080 = OpFMul %float %11079 %11079
      %11081 = OpExtInst %v3float %1 FAbs %10970
      %11082 = OpFMul %float %11068 %11065
      %11083 = OpFNegate %float %11082
      %11084 = OpExtInst %float %1 Fma %11083 %11082 %float_1
      %11085 = OpExtInst %float %1 Sqrt %11084
      %11086 = OpFMul %float %float_0_5 %11085
      %11087 = OpFDiv %float %11086 %11003
      %11088 = OpCompositeConstruct %v3float %11087 %11087 %11087
      %11089 = OpExtInst %v3float %1 Pow %11081 %11088
      %11090 = OpExtInst %float %1 Fma %float_n3_6500001 %11013 %float_n3_98000002
      %11091 = OpExtInst %float %1 Exp %11090
      %11092 = OpFMul %float %11064 %11091
      %11093 = OpFMul %float %11092 %11080
      %11094 = OpVectorTimesScalar %v3float %11089 %11093
      %11095 = OpVectorTimesScalar %v3float %11094 %10975
      %11096 = OpFAdd %v3float %11056 %11095
      %11097 = OpFSub %float %11030 %float_0_140000001
      %11098 = OpFMul %float %11097 %11097
      %11099 = OpFMul %float %float_n0_5 %11098
      %11100 = OpFMul %float %11021 %11021
      %11101 = OpFDiv %float %11099 %11100
      %11102 = OpExtInst %float %1 Exp %11101
      %11103 = OpFMul %float %float_2_50662827 %11021
      %11104 = OpFDiv %float %11102 %11103
      %11105 = OpExtInst %float %1 Fma %11073 %float_0_5 %float_1
      %11106 = OpFMul %float %11105 %11105
      %11107 = OpFMul %float %11106 %11106
      %11108 = OpFMul %float %11107 %11105
      %11109 = OpExtInst %float %1 Fma %float_0_953479409 %11108 %float_0_0465205647
      %11110 = OpFSub %float %float_1 %11109
      %11111 = OpFMul %float %11110 %11110
      %11112 = OpFMul %float %11111 %11109
      %11113 = OpFDiv %float %float_0_800000012 %11003
      %11114 = OpCompositeConstruct %v3float %11113 %11113 %11113
      %11115 = OpExtInst %v3float %1 Pow %11081 %11114
      %11116 = OpExtInst %float %1 Fma %float_17 %11013 %float_n16_7800007
      %11117 = OpExtInst %float %1 Exp %11116
      %11118 = OpFMul %float %11104 %11117
      %11119 = OpFMul %float %11118 %11112
      %11120 = OpVectorTimesScalar %v3float %11115 %11119
      %11121 = OpFAdd %v3float %11096 %11120
      %11122 = OpVectorTimesScalar %v3float %11121 %float_1
      %11123 = OpVectorShuffle %v3float %538 %127 3 4 5
      %11124 = OpExtInst %v3float %1 Fma %458 %11123 %11122
      %11125 = OpFNegate %v3float %11124
      %11126 = OpExtInst %v3float %1 NMin %11125 %102
      %11127 = OpFNegate %v3float %11126
      %11128 = OpVectorTimesScalar %v3float %11127 %float_6_28318548
      %11129 = OpExtInst %v3float %1 NMin %127 %11128
               OpBranch %10964
      %10965 = OpLabel
      %11130 = OpVectorShuffle %v3float %10706 %457 0 1 2
      %11131 = OpVectorShuffle %v3float %10716 %10716 0 1 2
      %11132 = OpCompositeConstruct %v2float %10961 %float_0_00100000005
      %11133 = OpSampledImage %type_sampled_image %10717 %10718
      %11134 = OpImageSampleExplicitLod %v4float %11133 %11132 Lod %float_0
      %11135 = OpCompositeExtract %float %11134 0
      %11136 = OpFSub %float %float_1 %11135
      %11137 = OpFDiv %float %11136 %11135
      %11138 = OpVectorTimesScalar %v3float %11131 %11137
      %11139 = OpFAdd %v3float %127 %11138
      %11140 = OpSelect %v3float %10722 %11139 %127
      %11141 = OpVectorTimesScalar %v3float %11131 %11135
      %11142 = OpFNegate %v3float %11131
      %11143 = OpCompositeExtract %float %11134 1
      %11144 = OpVectorTimesScalar %v3float %11142 %11143
      %11145 = OpFAdd %v3float %11141 %11144
      %11146 = OpFMul %v3float %11140 %11145
      %11147 = OpAccessChain %_ptr_Uniform_uint %View %uint_41
      %11148 = OpLoad %uint %11147
      %11149 = OpINotEqual %bool %11148 %uint_0
      %11150 = OpDot %float %11146 %171
      %11151 = OpFSub %float %float_1 %11150
      %11152 = OpSelect %float %11149 %11151 %float_1
      %11153 = OpVectorTimesScalar %v3float %11130 %11152
      %11154 = OpShiftRightLogical %uint %10846 %uint_2
      %11155 = OpBitwiseAnd %uint %11154 %uint_7
      %11156 = OpIEqual %bool %11155 %uint_4
               OpSelectionMerge %11157 DontFlatten
               OpBranchConditional %11156 %11158 %11157
      %11158 = OpLabel
      %11159 = OpExtInst %float %1 NMax %459 %459
      %11160 = OpExtInst %float %1 NMax %459 %11159
      %11161 = OpFSub %float %11160 %float_0_0399999991
      %11162 = OpExtInst %float %1 NMax %float_0 %11161
      %11163 = OpFMul %float %11162 %float_3
      %11164 = OpExtInst %float %1 FClamp %11163 %float_0 %float_1
      %11165 = OpFMul %float %11164 %11164
      %11166 = OpCompositeExtract %float %10706 0
      %11167 = OpExtInst %float %1 FClamp %10961 %float_0 %float_1
      %11168 = OpExtInst %float %1 FAbs %11167
      %11169 = OpExtInst %float %1 Fma %float_n0_156582996 %11168 %float_1_57079637
      %11170 = OpFSub %float %float_1 %11168
      %11171 = OpExtInst %float %1 Sqrt %11170
      %11172 = OpFMul %float %11169 %11171
      %11173 = OpFMul %float %11172 %float_0_636619747
      %11174 = OpExtInst %float %1 FClamp %11173 %float_0 %float_1
      %11175 = OpCompositeConstruct %v3float %float_0 %11166 %11174
      %11176 = OpExtInst %v3float %1 Fma %497 %11175 %496
      %11177 = OpLoad %type_3d_image_0 %View_SimpleVolumeEnvTexture
      %11178 = OpLoad %type_sampler %View_SimpleVolumeEnvTextureSampler
      %11179 = OpSampledImage %type_sampled_image_0 %11177 %11178
      %11180 = OpImageSampleExplicitLod %v4float %11179 %11176 Lod %float_0
      %11181 = OpCompositeExtract %float %11180 0
      %11182 = OpExtInst %float %1 Fma %float_10 %float_0_00158730161 %float_1
      %11183 = OpExtInst %float %1 FClamp %11182 %float_0 %float_1
      %11184 = OpFMul %float %11181 %11183
      %11185 = OpCompositeExtract %float %10706 1
      %11186 = OpCompositeConstruct %v3float %float_0 %11185 %11174
      %11187 = OpExtInst %v3float %1 Fma %497 %11186 %496
      %11188 = OpSampledImage %type_sampled_image_0 %11177 %11178
      %11189 = OpImageSampleExplicitLod %v4float %11188 %11187 Lod %float_0
      %11190 = OpCompositeExtract %float %11189 0
      %11191 = OpFMul %float %11190 %11183
      %11192 = OpCompositeExtract %float %10706 2
      %11193 = OpCompositeConstruct %v3float %float_0 %11192 %11174
      %11194 = OpExtInst %v3float %1 Fma %497 %11193 %496
      %11195 = OpSampledImage %type_sampled_image_0 %11177 %11178
      %11196 = OpImageSampleExplicitLod %v4float %11195 %11194 Lod %float_0
      %11197 = OpCompositeExtract %float %11196 0
      %11198 = OpFMul %float %11197 %11183
      %11199 = OpCompositeConstruct %v3float %11184 %11191 %11198
      %11200 = OpCompositeExtract %float %11153 0
      %11201 = OpCompositeExtract %float %11153 1
      %11202 = OpCompositeExtract %float %11153 2
      %11203 = OpExtInst %float %1 NMax %11201 %11202
      %11204 = OpExtInst %float %1 NMax %11200 %11203
      %11205 = OpExtInst %float %1 NMax %11191 %11198
      %11206 = OpExtInst %float %1 NMax %11184 %11205
      %11207 = OpFOrdLessThan %bool %11204 %11206
               OpSelectionMerge %11208 None
               OpBranchConditional %11207 %11209 %11208
      %11209 = OpLabel
      %11210 = OpFDiv %float %11204 %11206
      %11211 = OpVectorTimesScalar %v3float %11199 %11210
               OpBranch %11208
      %11208 = OpLabel
      %11212 = OpPhi %v3float %11199 %11158 %11211 %11209
      %11213 = OpVectorTimesScalar %v3float %11212 %11152
      %11214 = OpCompositeConstruct %v3float %11165 %11165 %11165
      %11215 = OpExtInst %v3float %1 FMix %11153 %11213 %11214
               OpBranch %11157
      %11157 = OpLabel
      %11216 = OpPhi %v3float %11153 %10965 %11215 %11208
      %11217 = OpIEqual %bool %11155 %uint_1
               OpSelectionMerge %11218 DontFlatten
               OpBranchConditional %11217 %11219 %11218
      %11219 = OpLabel
      %11220 = OpExtInst %v3float %1 NMax %355 %554
      %11221 = OpFDiv %v3float %127 %11220
      %11222 = OpExtInst %v3float %1 NMax %344 %11221
      %11223 = OpExtInst %float %1 FAbs %float_1
      %11224 = OpExtInst %float %1 NMax %float_9_99999975en05 %11223
      %11225 = OpFDiv %float %float_1 %11224
      %11226 = OpFNegate %v3float %11222
      %11227 = OpVectorTimesScalar %v3float %11226 %11225
      %11228 = OpExtInst %v3float %1 Exp %11227
      %11229 = OpFMul %v3float %498 %11228
      %11230 = OpVectorTimesScalar %v3float %11229 %11152
               OpBranch %11218
      %11218 = OpLabel
      %11231 = OpPhi %v3float %458 %11157 %11230 %11219
      %11232 = OpShiftRightLogical %uint %10846 %uint_9
      %11233 = OpBitwiseAnd %uint %11232 %uint_1
      %11234 = OpINotEqual %bool %11233 %uint_0
               OpSelectionMerge %11235 DontFlatten
               OpBranchConditional %11234 %11236 %11235
      %11236 = OpLabel
      %11237 = OpVectorTimesScalar %v3float %11130 %float_1
      %11238 = OpVectorTimesScalar %v3float %11216 %float_1
               OpBranch %10964
      %11235 = OpLabel
               OpBranch %10964
      %10964 = OpLabel
      %11239 = OpPhi %v3float %458 %10955 %10969 %10967 %11129 %10966 %11238 %11236 %11216 %11235
      %11240 = OpPhi %v3float %458 %10955 %10960 %10967 %10974 %10966 %10960 %11236 %10960 %11235
      %11241 = OpPhi %v3float %458 %10955 %458 %10967 %458 %10966 %11231 %11236 %11231 %11235
      %11242 = OpPhi %v3float %458 %10955 %10968 %10967 %458 %10966 %11237 %11236 %11130 %11235
      %11243 = OpFOrdGreaterThan %v3bool %11241 %102
      %11244 = OpAny %bool %11243
               OpSelectionMerge %11245 None
               OpBranchConditional %8454 %11246 %11245
      %11246 = OpLabel
      %11247 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_1 %int_0
      %11248 = OpLoad %v4float %11247
      %11249 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_0
      %11250 = OpLoad %v4float %11249
      %11251 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_3 %uint_0
      %11252 = OpLoad %float %11251
      %11253 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_1 %int_1
      %11254 = OpLoad %v4float %11253
      %11255 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_1
      %11256 = OpLoad %v4float %11255
      %11257 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_3 %uint_1
      %11258 = OpLoad %float %11257
      %11259 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_1 %int_2
      %11260 = OpLoad %v4float %11259
      %11261 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_2
      %11262 = OpLoad %v4float %11261
      %11263 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_3 %uint_2
      %11264 = OpLoad %float %11263
      %11265 = OpCompositeExtract %float %11240 1
      %11266 = OpFMul %float %float_n0_488602996 %11265
      %11267 = OpCompositeInsert %v4float %11266 %551 1
      %11268 = OpCompositeExtract %float %11240 2
      %11269 = OpFMul %float %float_0_488602996 %11268
      %11270 = OpCompositeInsert %v4float %11269 %11267 2
      %11271 = OpCompositeExtract %float %11240 0
      %11272 = OpFMul %float %float_n0_488602996 %11271
      %11273 = OpCompositeInsert %v4float %11272 %11270 3
      %11274 = OpFMul %v3float %11240 %11240
      %11275 = OpFMul %float %float_1_09254801 %11271
      %11276 = OpFMul %float %11275 %11265
      %11277 = OpCompositeInsert %v4float %11276 %540 0
      %11278 = OpFMul %float %float_n1_09254801 %11265
      %11279 = OpFMul %float %11278 %11268
      %11280 = OpCompositeInsert %v4float %11279 %11277 1
      %11281 = OpCompositeExtract %float %11274 2
      %11282 = OpExtInst %float %1 Fma %float_3 %11281 %float_n1
      %11283 = OpFMul %float %float_0_315391988 %11282
      %11284 = OpCompositeInsert %v4float %11283 %11280 2
      %11285 = OpFMul %float %float_n1_09254801 %11271
      %11286 = OpFMul %float %11285 %11268
      %11287 = OpCompositeInsert %v4float %11286 %11284 3
      %11288 = OpCompositeExtract %float %11274 0
      %11289 = OpCompositeExtract %float %11274 1
      %11290 = OpFSub %float %11288 %11289
      %11291 = OpCompositeInsert %v4float %float_0_886227548 %11273 0
      %11292 = OpVectorShuffle %v3float %11291 %11291 1 2 3
      %11293 = OpVectorTimesScalar %v3float %11292 %float_2_09439516
      %11294 = OpVectorShuffle %v4float %11291 %11293 0 4 5 6
      %11295 = OpVectorTimesScalar %v4float %11287 %float_0_785398185
      %11296 = OpFMul %float %11290 %float_0_429042608
      %11297 = OpDot %float %11248 %11294
      %11298 = OpDot %float %11250 %11295
      %11299 = OpFAdd %float %11297 %11298
      %11300 = OpExtInst %float %1 Fma %11252 %11296 %11299
      %11301 = OpCompositeInsert %v3float %11300 %102 0
      %11302 = OpDot %float %11254 %11294
      %11303 = OpDot %float %11256 %11295
      %11304 = OpFAdd %float %11302 %11303
      %11305 = OpExtInst %float %1 Fma %11258 %11296 %11304
      %11306 = OpCompositeInsert %v3float %11305 %11301 1
      %11307 = OpDot %float %11260 %11294
      %11308 = OpDot %float %11262 %11295
      %11309 = OpFAdd %float %11307 %11308
      %11310 = OpExtInst %float %1 Fma %11264 %11296 %11309
      %11311 = OpCompositeInsert %v3float %11310 %11306 2
      %11312 = OpExtInst %v3float %1 NMax %102 %11311
               OpSelectionMerge %11313 None
               OpBranchConditional %11244 %11314 %11313
      %11314 = OpLabel
      %11315 = OpFNegate %v3float %11240
      %11316 = OpCompositeExtract %float %11315 1
      %11317 = OpFMul %float %float_n0_488602996 %11316
      %11318 = OpCompositeInsert %v4float %11317 %551 1
      %11319 = OpCompositeExtract %float %11315 2
      %11320 = OpFMul %float %float_0_488602996 %11319
      %11321 = OpCompositeInsert %v4float %11320 %11318 2
      %11322 = OpCompositeExtract %float %11315 0
      %11323 = OpFMul %float %float_n0_488602996 %11322
      %11324 = OpCompositeInsert %v4float %11323 %11321 3
      %11325 = OpFMul %v3float %11315 %11315
      %11326 = OpFMul %float %float_1_09254801 %11322
      %11327 = OpFMul %float %11326 %11316
      %11328 = OpCompositeInsert %v4float %11327 %540 0
      %11329 = OpFMul %float %float_n1_09254801 %11316
      %11330 = OpFMul %float %11329 %11319
      %11331 = OpCompositeInsert %v4float %11330 %11328 1
      %11332 = OpCompositeExtract %float %11325 2
      %11333 = OpExtInst %float %1 Fma %float_3 %11332 %float_n1
      %11334 = OpFMul %float %float_0_315391988 %11333
      %11335 = OpCompositeInsert %v4float %11334 %11331 2
      %11336 = OpFMul %float %float_n1_09254801 %11322
      %11337 = OpFMul %float %11336 %11319
      %11338 = OpCompositeInsert %v4float %11337 %11335 3
      %11339 = OpCompositeExtract %float %11325 0
      %11340 = OpCompositeExtract %float %11325 1
      %11341 = OpFSub %float %11339 %11340
      %11342 = OpCompositeInsert %v4float %float_0_886227548 %11324 0
      %11343 = OpVectorShuffle %v3float %11342 %11342 1 2 3
      %11344 = OpVectorTimesScalar %v3float %11343 %float_2_09439516
      %11345 = OpVectorShuffle %v4float %11342 %11344 0 4 5 6
      %11346 = OpVectorTimesScalar %v4float %11338 %float_0_785398185
      %11347 = OpFMul %float %11341 %float_0_429042608
      %11348 = OpDot %float %11248 %11345
      %11349 = OpDot %float %11250 %11346
      %11350 = OpFAdd %float %11348 %11349
      %11351 = OpExtInst %float %1 Fma %11252 %11347 %11350
      %11352 = OpCompositeInsert %v3float %11351 %552 0
      %11353 = OpDot %float %11254 %11345
      %11354 = OpDot %float %11256 %11346
      %11355 = OpFAdd %float %11353 %11354
      %11356 = OpExtInst %float %1 Fma %11258 %11347 %11355
      %11357 = OpCompositeInsert %v3float %11356 %11352 1
      %11358 = OpDot %float %11260 %11345
      %11359 = OpDot %float %11262 %11346
      %11360 = OpFAdd %float %11358 %11359
      %11361 = OpExtInst %float %1 Fma %11264 %11347 %11360
      %11362 = OpCompositeInsert %v3float %11361 %11357 2
      %11363 = OpExtInst %v3float %1 NMax %102 %11362
               OpBranch %11313
      %11313 = OpLabel
      %11364 = OpPhi %v3float %102 %11246 %11363 %11314
               OpBranch %11245
      %11245 = OpLabel
      %11365 = OpPhi %v3float %102 %10964 %11364 %11313
      %11366 = OpPhi %v3float %102 %10964 %11312 %11313
      %11367 = OpFMul %v3float %11366 %8626
      %11368 = OpFMul %v3float %11365 %8626
      %11369 = OpDot %float %11367 %171
      %11370 = OpVectorTimesScalar %v3float %11242 %float_2_04040003
      %11371 = OpFSub %v3float %11370 %174
      %11372 = OpVectorTimesScalar %v3float %11242 %float_n4_79510021
      %11373 = OpFAdd %v3float %11372 %177
      %11374 = OpVectorTimesScalar %v3float %11242 %float_2_75519991
      %11375 = OpFAdd %v3float %11374 %180
      %11376 = OpVectorTimesScalar %v3float %11371 %float_1
      %11377 = OpFAdd %v3float %11376 %11373
      %11378 = OpVectorTimesScalar %v3float %11377 %float_1
      %11379 = OpFAdd %v3float %11378 %11375
      %11380 = OpVectorTimesScalar %v3float %11379 %float_1
      %11381 = OpExtInst %v3float %1 NMax %127 %11380
      %11382 = OpExtInst %v3float %1 NMax %127 %520
      %11383 = OpCompositeExtract %float %11382 1
      %11384 = OpCompositeInsert %v2float %11383 %553 0
      %11385 = OpCompositeInsert %v2float %11369 %11384 1
      %11386 = OpFMul %v3float %11368 %11241
      %11387 = OpExtInst %v3float %1 Fma %11367 %11239 %11386
      %11388 = OpExtInst %v3float %1 Fma %11387 %11381 %10847
               OpBranch %10954
      %10954 = OpLabel
      %11389 = OpPhi %v3float %10847 %10866 %11388 %11245
      %11390 = OpPhi %float %float_0 %10866 %float_1 %11245
      %11391 = OpPhi %v2float %124 %10866 %11385 %11245
      %11392 = OpExtInst %float %1 NMax %float_1 %11390
      %11393 = OpFDiv %float %float_1 %11392
      %11394 = OpVectorTimesScalar %v2float %11391 %11393
      %11395 = OpCompositeExtract %float %11394 0
      %11396 = OpCompositeExtract %float %11394 1
      %11397 = OpBitwiseAnd %uint %10953 %uint_4294902015
      %11398 = OpFMul %float %11396 %11395
      %11399 = OpAccessChain %_ptr_Uniform_float %View %uint_13
      %11400 = OpLoad %float %11399
      %11401 = OpExtInst %float %1 Fma %11398 %11400 %float_0_00390625
      %11402 = OpExtInst %float %1 Log2 %11401
      %11403 = OpExtInst %float %1 Fma %11402 %float_0_0625 %float_0_5
      %11404 = OpFMul %float %11403 %float_255
      %11405 = OpExtInst %float %1 NMin %float_255 %11404
      %11406 = OpConvertFToU %uint %11405
      %11407 = OpBitwiseAnd %uint %11406 %uint_255
      %11408 = OpShiftLeftLogical %uint %11407 %uint_8
      %11409 = OpBitwiseOr %uint %11397 %11408
      %11410 = OpBitwiseAnd %uint %11409 %uint_7
      %11411 = OpIEqual %bool %11410 %uint_1
      %11412 = OpLogicalOr %bool %11411 %false
      %11413 = OpIEqual %bool %11410 %uint_4
      %11414 = OpIEqual %bool %11410 %uint_2
      %11415 = OpLogicalOr %bool %11414 %false
      %11416 = OpIEqual %bool %11410 %uint_5
      %11417 = OpIEqual %bool %11410 %uint_6
      %11418 = OpLogicalOr %bool %11416 %11417
      %11419 = OpLogicalNot %bool %11412
      %11420 = OpLogicalNot %bool %11415
      %11421 = OpLogicalAnd %bool %11419 %11420
      %11422 = OpLogicalNot %bool %11418
      %11423 = OpLogicalAnd %bool %11421 %11422
      %11424 = OpLogicalNot %bool %11413
      %11425 = OpLogicalAnd %bool %11423 %11424
               OpSelectionMerge %11426 None
               OpBranchConditional %11425 %11427 %11426
      %11427 = OpLabel
      %11428 = OpBitwiseAnd %uint %10856 %uint_15
      %11429 = OpShiftLeftLogical %uint %11428 %uint_16
      %11430 = OpBitwiseOr %uint %uint_0 %11429
      %11431 = OpBitwiseAnd %uint %11430 %uint_4287627263
      %11432 = OpBitwiseOr %uint %11431 %uint_1048576
      %11433 = OpBitwiseAnd %uint %11432 %uint_4169138175
      %11434 = OpBitwiseOr %uint %11433 %uint_0
      %11435 = OpBitwiseAnd %uint %11409 %uint_134217728
      %11436 = OpBitwiseOr %uint %11434 %11435
      %11437 = OpBitwiseAnd %uint %11436 %uint_4294901760
      %11438 = OpBitwiseAnd %uint %11409 %uint_65535
      %11439 = OpShiftLeftLogical %uint %11438 %uint_0
      %11440 = OpBitwiseOr %uint %11437 %11439
      %11441 = OpExtInst %v3float %1 FAbs %10702
      %11442 = OpDot %float %127 %11441
      %11443 = OpCompositeConstruct %v2float %11442 %11442
      %11444 = OpVectorShuffle %v2float %10702 %10702 0 1
      %11445 = OpFDiv %v2float %11444 %11443
      %11446 = OpVectorShuffle %v3float %10702 %11445 3 4 2
      %11447 = OpCompositeExtract %float %10702 2
      %11448 = OpFOrdLessThanEqual %bool %11447 %float_0
               OpSelectionMerge %11449 None
               OpBranchConditional %11448 %11450 %11449
      %11450 = OpLabel
      %11451 = OpVectorShuffle %v2float %11445 %458 1 0
      %11452 = OpExtInst %v2float %1 FAbs %11451
      %11453 = OpFSub %v2float %312 %11452
      %11454 = OpVectorShuffle %v2float %11445 %458 0 1
      %11455 = OpFOrdGreaterThanEqual %v2bool %11454 %124
      %11456 = OpCompositeExtract %bool %11455 0
      %11457 = OpSelect %float %11456 %float_1 %float_n1
      %11458 = OpCompositeExtract %bool %11455 1
      %11459 = OpSelect %float %11458 %float_1 %float_n1
      %11460 = OpCompositeConstruct %v2float %11457 %11459
      %11461 = OpFMul %v2float %11453 %11460
      %11462 = OpVectorShuffle %v3float %10702 %11461 3 4 2
               OpBranch %11449
      %11449 = OpLabel
      %11463 = OpPhi %v3float %11446 %11427 %11462 %11450
      %11464 = OpCompositeExtract %float %11463 0
      %11465 = OpCompositeExtract %float %11463 1
      %11466 = OpCompositeConstruct %v2float %11464 %float_0
      %11467 = OpExtInst %uint %1 PackHalf2x16 %11466
      %11468 = OpCompositeConstruct %v2float %11465 %float_0
      %11469 = OpExtInst %uint %1 PackHalf2x16 %11468
      %11470 = OpShiftLeftLogical %uint %11469 %uint_16
      %11471 = OpBitwiseOr %uint %11467 %11470
               OpBranch %11426
      %11426 = OpLabel
      %11472 = OpPhi %uint %uint_0 %10954 %11471 %11449
      %11473 = OpPhi %uint %uint_0 %10954 %11440 %11449
      %11474 = OpSelect %uint %11425 %uint_2 %uint_0
               OpSelectionMerge %11475 DontFlatten
               OpBranchConditional %10723 %11476 %11475
      %11476 = OpLabel
      %11477 = OpBitwiseAnd %uint %10846 %uint_4294967263
      %11478 = OpBitwiseOr %uint %11477 %uint_32
      %11479 = OpAny %bool %556
      %11480 = OpBitwiseAnd %uint %11478 %uint_4294901759
      %11481 = OpSelect %uint %11479 %uint_1 %uint_0
      %11482 = OpBitwiseAnd %uint %11481 %uint_1
      %11483 = OpShiftLeftLogical %uint %11482 %uint_16
      %11484 = OpBitwiseOr %uint %11480 %11483
      %11485 = OpLogicalAnd %bool %11412 %true
               OpSelectionMerge %11486 None
               OpBranchConditional %11485 %11487 %11488
      %11488 = OpLabel
      %11489 = OpLogicalAnd %bool %11415 %true
               OpSelectionMerge %11490 None
               OpBranchConditional %11489 %11491 %11492
      %11492 = OpLabel
               OpSelectionMerge %11493 None
               OpBranchConditional %11417 %11494 %11495
      %11495 = OpLabel
               OpSelectionMerge %11496 None
               OpBranchConditional %11416 %11497 %11498
      %11498 = OpLabel
               OpSelectionMerge %11499 None
               OpBranchConditional %11413 %11500 %11501
      %11501 = OpLabel
      %11502 = OpBitwiseAnd %uint %11484 %uint_4194303
      %11503 = OpExtInst %uint %1 PackHalf2x16 %275
      %11504 = OpShiftRightLogical %uint %11503 %uint_5
      %11505 = OpBitwiseAnd %uint %11504 %uint_1023
      %11506 = OpBitwiseAnd %uint %11505 %uint_1023
      %11507 = OpShiftLeftLogical %uint %11506 %uint_22
      %11508 = OpBitwiseOr %uint %11502 %11507
      %11509 = OpULessThan %bool %11474 %uint_3
               OpSelectionMerge %11510 None
               OpBranchConditional %11509 %11511 %11512
      %11512 = OpLabel
      %11513 = OpISub %uint %11474 %uint_3
      %11514 = OpCompositeExtract %uint %10703 0
      %11515 = OpCompositeExtract %uint %10703 1
      %11516 = OpCompositeConstruct %v3uint %11514 %11515 %11513
               OpImageWrite %10704 %11516 %11508 None
               OpBranch %11510
      %11511 = OpLabel
      %11517 = OpIEqual %bool %11474 %uint_0
      %11518 = OpSelect %uint %11517 %11508 %11473
      %11519 = OpIEqual %bool %11474 %uint_1
      %11520 = OpSelect %uint %11519 %11508 %11472
      %11521 = OpIEqual %bool %11474 %uint_2
      %11522 = OpSelect %uint %11521 %11508 %uint_0
               OpBranch %11510
      %11510 = OpLabel
      %11523 = OpPhi %uint %uint_0 %11512 %11522 %11511
      %11524 = OpPhi %uint %11472 %11512 %11520 %11511
      %11525 = OpPhi %uint %11473 %11512 %11518 %11511
      %11526 = OpIAdd %uint %11474 %uint_1
               OpBranch %11499
      %11500 = OpLabel
      %11527 = OpVectorShuffle %v3float %10706 %457 0 1 2
      %11528 = OpFSub %float %8387 %float_0_5
      %11529 = OpFMul %float %11528 %float_0_00787401572
      %11530 = OpFMul %float %11528 %float_0_0158730168
      %11531 = OpCompositeConstruct %v3float %11529 %11529 %11530
      %11532 = OpExtInst %v3float %1 FClamp %11527 %102 %127
      %11533 = OpCompositeExtract %float %11532 0
               OpSelectionMerge %11534 None
               OpSwitch %uint_0 %11535
      %11535 = OpLabel
      %11536 = OpFOrdLessThan %bool %11533 %float_0_00313066994
               OpSelectionMerge %11537 None
               OpBranchConditional %11536 %11538 %11537
      %11538 = OpLabel
      %11539 = OpFMul %float %11533 %float_12_9200001
               OpBranch %11534
      %11537 = OpLabel
      %11540 = OpExtInst %float %1 Pow %11533 %float_0_416666657
      %11541 = OpExtInst %float %1 Fma %11540 %float_1_05499995 %float_n0_0549999997
               OpBranch %11534
      %11534 = OpLabel
      %11542 = OpPhi %float %11539 %11538 %11541 %11537
      %11543 = OpCompositeExtract %float %11532 1
               OpSelectionMerge %11544 None
               OpSwitch %uint_0 %11545
      %11545 = OpLabel
      %11546 = OpFOrdLessThan %bool %11543 %float_0_00313066994
               OpSelectionMerge %11547 None
               OpBranchConditional %11546 %11548 %11547
      %11548 = OpLabel
      %11549 = OpFMul %float %11543 %float_12_9200001
               OpBranch %11544
      %11547 = OpLabel
      %11550 = OpExtInst %float %1 Pow %11543 %float_0_416666657
      %11551 = OpExtInst %float %1 Fma %11550 %float_1_05499995 %float_n0_0549999997
               OpBranch %11544
      %11544 = OpLabel
      %11552 = OpPhi %float %11549 %11548 %11551 %11547
      %11553 = OpCompositeExtract %float %11532 2
               OpSelectionMerge %11554 None
               OpSwitch %uint_0 %11555
      %11555 = OpLabel
      %11556 = OpFOrdLessThan %bool %11553 %float_0_00313066994
               OpSelectionMerge %11557 None
               OpBranchConditional %11556 %11558 %11557
      %11558 = OpLabel
      %11559 = OpFMul %float %11553 %float_12_9200001
               OpBranch %11554
      %11557 = OpLabel
      %11560 = OpExtInst %float %1 Pow %11553 %float_0_416666657
      %11561 = OpExtInst %float %1 Fma %11560 %float_1_05499995 %float_n0_0549999997
               OpBranch %11554
      %11554 = OpLabel
      %11562 = OpPhi %float %11559 %11558 %11561 %11557
      %11563 = OpCompositeConstruct %v3float %11542 %11552 %11562
      %11564 = OpBitcast %v3uint %11563
      %11565 = OpBitwiseAnd %v3uint %11564 %348
      %11566 = OpExtInst %v3uint %1 UMin %11565 %500
      %11567 = OpConvertUToF %v3float %11566
      %11568 = OpExtInst %v3float %1 Fma %11531 %11567 %11563
      %11569 = OpExtInst %v3float %1 FClamp %11568 %102 %127
      %11570 = OpCompositeExtract %float %11569 0
      %11571 = OpFMul %float %11570 %float_127
      %11572 = OpConvertFToU %uint %11571
      %11573 = OpShiftLeftLogical %uint %11572 %uint_0
      %11574 = OpCompositeExtract %float %11569 1
      %11575 = OpFMul %float %11574 %float_127
      %11576 = OpConvertFToU %uint %11575
      %11577 = OpShiftLeftLogical %uint %11576 %uint_7
      %11578 = OpCompositeExtract %float %11569 2
      %11579 = OpFMul %float %11578 %float_63
      %11580 = OpConvertFToU %uint %11579
      %11581 = OpShiftLeftLogical %uint %11580 %uint_14
      %11582 = OpBitwiseOr %uint %11573 %11577
      %11583 = OpBitwiseOr %uint %11582 %11581
      %11584 = OpBitwiseAnd %uint %11583 %uint_4095
      %11585 = OpShiftRightLogical %uint %11583 %uint_12
      %11586 = OpBitwiseAnd %uint %11585 %uint_255
      %11587 = OpExtInst %float %1 FClamp %10713 %float_0 %float_1
      %11588 = OpFMul %float %11587 %float_255
      %11589 = OpConvertFToU %uint %11588
      %11590 = OpCompositeConstruct %v3float %10715 %float_0 %10709
      %11591 = OpExtInst %v3float %1 FClamp %11590 %102 %127
      %11592 = OpBitcast %v3uint %11591
      %11593 = OpBitwiseAnd %v3uint %11592 %348
      %11594 = OpExtInst %v3uint %1 UMin %11593 %500
      %11595 = OpConvertUToF %v3float %11594
      %11596 = OpExtInst %v3float %1 Fma %11531 %11595 %11591
      %11597 = OpExtInst %v3float %1 FClamp %11596 %102 %127
      %11598 = OpCompositeExtract %float %11597 0
      %11599 = OpFMul %float %11598 %float_127
      %11600 = OpConvertFToU %uint %11599
      %11601 = OpShiftLeftLogical %uint %11600 %uint_0
      %11602 = OpCompositeExtract %float %11597 1
      %11603 = OpFMul %float %11602 %float_127
      %11604 = OpConvertFToU %uint %11603
      %11605 = OpShiftLeftLogical %uint %11604 %uint_7
      %11606 = OpCompositeExtract %float %11597 2
      %11607 = OpFMul %float %11606 %float_63
      %11608 = OpConvertFToU %uint %11607
      %11609 = OpShiftLeftLogical %uint %11608 %uint_14
      %11610 = OpBitwiseOr %uint %11601 %11605
      %11611 = OpBitwiseOr %uint %11610 %11609
      %11612 = OpBitwiseAnd %uint %11409 %uint_65535
      %11613 = OpShiftLeftLogical %uint %11612 %uint_0
      %11614 = OpBitwiseOr %uint %uint_0 %11613
      %11615 = OpShiftLeftLogical %uint %11586 %uint_8
      %11616 = OpBitwiseOr %uint %11615 %11589
      %11617 = OpBitwiseAnd %uint %11614 %uint_65535
      %11618 = OpShiftLeftLogical %uint %11616 %uint_16
      %11619 = OpBitwiseOr %uint %11617 %11618
      %11620 = OpULessThan %bool %11474 %uint_3
               OpSelectionMerge %11621 None
               OpBranchConditional %11620 %11622 %11623
      %11623 = OpLabel
      %11624 = OpISub %uint %11474 %uint_3
      %11625 = OpCompositeExtract %uint %10703 0
      %11626 = OpCompositeExtract %uint %10703 1
      %11627 = OpCompositeConstruct %v3uint %11625 %11626 %11624
               OpImageWrite %10704 %11627 %11619 None
               OpBranch %11621
      %11622 = OpLabel
      %11628 = OpIEqual %bool %11474 %uint_0
      %11629 = OpSelect %uint %11628 %11619 %11473
      %11630 = OpIEqual %bool %11474 %uint_1
      %11631 = OpSelect %uint %11630 %11619 %11472
      %11632 = OpIEqual %bool %11474 %uint_2
      %11633 = OpSelect %uint %11632 %11619 %uint_0
               OpBranch %11621
      %11621 = OpLabel
      %11634 = OpPhi %uint %uint_0 %11623 %11633 %11622
      %11635 = OpPhi %uint %11472 %11623 %11631 %11622
      %11636 = OpPhi %uint %11473 %11623 %11629 %11622
      %11637 = OpIAdd %uint %11474 %uint_1
      %11638 = OpShiftLeftLogical %uint %11584 %uint_20
      %11639 = OpBitwiseOr %uint %11638 %11611
      %11640 = OpULessThan %bool %11637 %uint_3
               OpSelectionMerge %11641 None
               OpBranchConditional %11640 %11642 %11643
      %11643 = OpLabel
      %11644 = OpIAdd %uint %11474 %uint_4294967294
      %11645 = OpCompositeExtract %uint %10703 0
      %11646 = OpCompositeExtract %uint %10703 1
      %11647 = OpCompositeConstruct %v3uint %11645 %11646 %11644
               OpImageWrite %10704 %11647 %11639 None
               OpBranch %11641
      %11642 = OpLabel
      %11648 = OpIEqual %bool %11637 %uint_0
      %11649 = OpSelect %uint %11648 %11639 %11636
      %11650 = OpIEqual %bool %11637 %uint_1
      %11651 = OpSelect %uint %11650 %11639 %11635
      %11652 = OpIEqual %bool %11637 %uint_2
      %11653 = OpSelect %uint %11652 %11639 %11634
               OpBranch %11641
      %11641 = OpLabel
      %11654 = OpPhi %uint %11634 %11643 %11653 %11642
      %11655 = OpPhi %uint %11635 %11643 %11651 %11642
      %11656 = OpPhi %uint %11636 %11643 %11649 %11642
      %11657 = OpIAdd %uint %11474 %uint_2
               OpBranch %11499
      %11499 = OpLabel
      %11658 = OpPhi %uint %11508 %11510 %uint_0 %11641
      %11659 = OpPhi %uint %11523 %11510 %11654 %11641
      %11660 = OpPhi %uint %11524 %11510 %11655 %11641
      %11661 = OpPhi %uint %11525 %11510 %11656 %11641
      %11662 = OpPhi %uint %11526 %11510 %11657 %11641
               OpBranch %11496
      %11497 = OpLabel
      %11663 = OpBitwiseAnd %uint %11409 %uint_65535
      %11664 = OpShiftLeftLogical %uint %11663 %uint_0
      %11665 = OpBitwiseOr %uint %uint_0 %11664
      %11666 = OpBitwiseAnd %uint %11665 %uint_65535
      %11667 = OpULessThan %bool %11474 %uint_3
               OpSelectionMerge %11668 None
               OpBranchConditional %11667 %11669 %11670
      %11670 = OpLabel
      %11671 = OpISub %uint %11474 %uint_3
      %11672 = OpCompositeExtract %uint %10703 0
      %11673 = OpCompositeExtract %uint %10703 1
      %11674 = OpCompositeConstruct %v3uint %11672 %11673 %11671
               OpImageWrite %10704 %11674 %11666 None
               OpBranch %11668
      %11669 = OpLabel
      %11675 = OpIEqual %bool %11474 %uint_0
      %11676 = OpSelect %uint %11675 %11666 %11473
      %11677 = OpIEqual %bool %11474 %uint_1
      %11678 = OpSelect %uint %11677 %11666 %11472
      %11679 = OpIEqual %bool %11474 %uint_2
      %11680 = OpSelect %uint %11679 %11666 %uint_0
               OpBranch %11668
      %11668 = OpLabel
      %11681 = OpPhi %uint %uint_0 %11670 %11680 %11669
      %11682 = OpPhi %uint %11472 %11670 %11678 %11669
      %11683 = OpPhi %uint %11473 %11670 %11676 %11669
      %11684 = OpIAdd %uint %11474 %uint_1
               OpBranch %11496
      %11496 = OpLabel
      %11685 = OpPhi %uint %11658 %11499 %11484 %11668
      %11686 = OpPhi %uint %11659 %11499 %11681 %11668
      %11687 = OpPhi %uint %11660 %11499 %11682 %11668
      %11688 = OpPhi %uint %11661 %11499 %11683 %11668
      %11689 = OpPhi %uint %11662 %11499 %11684 %11668
               OpBranch %11493
      %11494 = OpLabel
      %11690 = OpBitwiseAnd %uint %11409 %uint_65535
      %11691 = OpShiftLeftLogical %uint %11690 %uint_0
      %11692 = OpBitwiseOr %uint %uint_0 %11691
      %11693 = OpBitwiseAnd %uint %11692 %uint_65535
      %11694 = OpExtInst %float %1 FClamp %10709 %float_0 %float_1
      %11695 = OpFMul %float %11694 %float_255
      %11696 = OpConvertFToU %uint %11695
      %11697 = OpShiftLeftLogical %uint %11696 %uint_16
      %11698 = OpBitwiseOr %uint %uint_0 %11697
      %11699 = OpBitwiseOr %uint %11698 %uint_0
      %11700 = OpBitwiseOr %uint %11693 %11699
      %11701 = OpULessThan %bool %11474 %uint_3
               OpSelectionMerge %11702 None
               OpBranchConditional %11701 %11703 %11704
      %11704 = OpLabel
      %11705 = OpISub %uint %11474 %uint_3
      %11706 = OpCompositeExtract %uint %10703 0
      %11707 = OpCompositeExtract %uint %10703 1
      %11708 = OpCompositeConstruct %v3uint %11706 %11707 %11705
               OpImageWrite %10704 %11708 %11700 None
               OpBranch %11702
      %11703 = OpLabel
      %11709 = OpIEqual %bool %11474 %uint_0
      %11710 = OpSelect %uint %11709 %11700 %11473
      %11711 = OpIEqual %bool %11474 %uint_1
      %11712 = OpSelect %uint %11711 %11700 %11472
      %11713 = OpIEqual %bool %11474 %uint_2
      %11714 = OpSelect %uint %11713 %11700 %uint_0
               OpBranch %11702
      %11702 = OpLabel
      %11715 = OpPhi %uint %uint_0 %11704 %11714 %11703
      %11716 = OpPhi %uint %11472 %11704 %11712 %11703
      %11717 = OpPhi %uint %11473 %11704 %11710 %11703
      %11718 = OpIAdd %uint %11474 %uint_1
               OpBranch %11493
      %11493 = OpLabel
      %11719 = OpPhi %uint %11685 %11496 %11484 %11702
      %11720 = OpPhi %uint %11686 %11496 %11715 %11702
      %11721 = OpPhi %uint %11687 %11496 %11716 %11702
      %11722 = OpPhi %uint %11688 %11496 %11717 %11702
      %11723 = OpPhi %uint %11689 %11496 %11718 %11702
               OpBranch %11490
      %11491 = OpLabel
      %11724 = OpBitwiseAnd %uint %11484 %uint_4294967293
      %11725 = OpBitwiseOr %uint %11724 %uint_2
      %11726 = OpBitwiseAnd %uint %11409 %uint_65535
      %11727 = OpShiftLeftLogical %uint %11726 %uint_0
      %11728 = OpBitwiseOr %uint %uint_0 %11727
      %11729 = OpBitwiseAnd %uint %11728 %uint_65535
      %11730 = OpBitwiseAnd %uint %10951 %uint_7
      %11731 = OpShiftLeftLogical %uint %11730 %uint_16
      %11732 = OpBitwiseOr %uint %11729 %11731
      %11733 = OpIEqual %bool %10951 %uint_0
               OpSelectionMerge %11734 DontFlatten
               OpBranchConditional %11733 %11735 %11736
      %11736 = OpLabel
      %11737 = OpIEqual %bool %10951 %uint_1
               OpSelectionMerge %11738 None
               OpBranchConditional %11737 %11739 %11740
      %11740 = OpLabel
      %11741 = OpIEqual %bool %10951 %uint_2
               OpSelectionMerge %11742 None
               OpBranchConditional %11741 %11743 %11744
      %11744 = OpLabel
      %11745 = OpIEqual %bool %10951 %uint_3
      %11746 = OpIEqual %bool %10951 %uint_5
      %11747 = OpLogicalOr %bool %11745 %11746
               OpSelectionMerge %11748 None
               OpBranchConditional %11747 %11749 %11750
      %11750 = OpLabel
      %11751 = OpIEqual %bool %10951 %uint_4
               OpSelectionMerge %11752 None
               OpBranchConditional %11751 %11753 %11752
      %11753 = OpLabel
      %11754 = OpVectorShuffle %v3float %10706 %457 0 1 2
      %11755 = OpFSub %float %8387 %float_0_5
      %11756 = OpFMul %float %11755 %float_0_00787401572
      %11757 = OpFMul %float %11755 %float_0_0158730168
      %11758 = OpCompositeConstruct %v3float %11756 %11756 %11757
      %11759 = OpExtInst %v3float %1 FClamp %11754 %102 %127
      %11760 = OpCompositeExtract %float %11759 0
               OpSelectionMerge %11761 None
               OpSwitch %uint_0 %11762
      %11762 = OpLabel
      %11763 = OpFOrdLessThan %bool %11760 %float_0_00313066994
               OpSelectionMerge %11764 None
               OpBranchConditional %11763 %11765 %11764
      %11765 = OpLabel
      %11766 = OpFMul %float %11760 %float_12_9200001
               OpBranch %11761
      %11764 = OpLabel
      %11767 = OpExtInst %float %1 Pow %11760 %float_0_416666657
      %11768 = OpExtInst %float %1 Fma %11767 %float_1_05499995 %float_n0_0549999997
               OpBranch %11761
      %11761 = OpLabel
      %11769 = OpPhi %float %11766 %11765 %11768 %11764
      %11770 = OpCompositeExtract %float %11759 1
               OpSelectionMerge %11771 None
               OpSwitch %uint_0 %11772
      %11772 = OpLabel
      %11773 = OpFOrdLessThan %bool %11770 %float_0_00313066994
               OpSelectionMerge %11774 None
               OpBranchConditional %11773 %11775 %11774
      %11775 = OpLabel
      %11776 = OpFMul %float %11770 %float_12_9200001
               OpBranch %11771
      %11774 = OpLabel
      %11777 = OpExtInst %float %1 Pow %11770 %float_0_416666657
      %11778 = OpExtInst %float %1 Fma %11777 %float_1_05499995 %float_n0_0549999997
               OpBranch %11771
      %11771 = OpLabel
      %11779 = OpPhi %float %11776 %11775 %11778 %11774
      %11780 = OpCompositeExtract %float %11759 2
               OpSelectionMerge %11781 None
               OpSwitch %uint_0 %11782
      %11782 = OpLabel
      %11783 = OpFOrdLessThan %bool %11780 %float_0_00313066994
               OpSelectionMerge %11784 None
               OpBranchConditional %11783 %11785 %11784
      %11785 = OpLabel
      %11786 = OpFMul %float %11780 %float_12_9200001
               OpBranch %11781
      %11784 = OpLabel
      %11787 = OpExtInst %float %1 Pow %11780 %float_0_416666657
      %11788 = OpExtInst %float %1 Fma %11787 %float_1_05499995 %float_n0_0549999997
               OpBranch %11781
      %11781 = OpLabel
      %11789 = OpPhi %float %11786 %11785 %11788 %11784
      %11790 = OpCompositeConstruct %v3float %11769 %11779 %11789
      %11791 = OpBitcast %v3uint %11790
      %11792 = OpBitwiseAnd %v3uint %11791 %348
      %11793 = OpExtInst %v3uint %1 UMin %11792 %500
      %11794 = OpConvertUToF %v3float %11793
      %11795 = OpExtInst %v3float %1 Fma %11758 %11794 %11790
      %11796 = OpExtInst %v3float %1 FClamp %11795 %102 %127
      %11797 = OpCompositeExtract %float %11796 0
      %11798 = OpFMul %float %11797 %float_127
      %11799 = OpConvertFToU %uint %11798
      %11800 = OpShiftLeftLogical %uint %11799 %uint_0
      %11801 = OpCompositeExtract %float %11796 1
      %11802 = OpFMul %float %11801 %float_127
      %11803 = OpConvertFToU %uint %11802
      %11804 = OpShiftLeftLogical %uint %11803 %uint_7
      %11805 = OpCompositeExtract %float %11796 2
      %11806 = OpFMul %float %11805 %float_63
      %11807 = OpConvertFToU %uint %11806
      %11808 = OpShiftLeftLogical %uint %11807 %uint_14
      %11809 = OpBitwiseOr %uint %11800 %11804
      %11810 = OpBitwiseOr %uint %11809 %11808
      %11811 = OpVectorShuffle %v3float %10716 %10716 0 1 2
      %11812 = OpExtInst %v3float %1 FClamp %11811 %102 %127
      %11813 = OpCompositeExtract %float %11812 0
               OpSelectionMerge %11814 None
               OpSwitch %uint_0 %11815
      %11815 = OpLabel
      %11816 = OpFOrdLessThan %bool %11813 %float_0_00313066994
               OpSelectionMerge %11817 None
               OpBranchConditional %11816 %11818 %11817
      %11818 = OpLabel
      %11819 = OpFMul %float %11813 %float_12_9200001
               OpBranch %11814
      %11817 = OpLabel
      %11820 = OpExtInst %float %1 Pow %11813 %float_0_416666657
      %11821 = OpExtInst %float %1 Fma %11820 %float_1_05499995 %float_n0_0549999997
               OpBranch %11814
      %11814 = OpLabel
      %11822 = OpPhi %float %11819 %11818 %11821 %11817
      %11823 = OpCompositeExtract %float %11812 1
               OpSelectionMerge %11824 None
               OpSwitch %uint_0 %11825
      %11825 = OpLabel
      %11826 = OpFOrdLessThan %bool %11823 %float_0_00313066994
               OpSelectionMerge %11827 None
               OpBranchConditional %11826 %11828 %11827
      %11828 = OpLabel
      %11829 = OpFMul %float %11823 %float_12_9200001
               OpBranch %11824
      %11827 = OpLabel
      %11830 = OpExtInst %float %1 Pow %11823 %float_0_416666657
      %11831 = OpExtInst %float %1 Fma %11830 %float_1_05499995 %float_n0_0549999997
               OpBranch %11824
      %11824 = OpLabel
      %11832 = OpPhi %float %11829 %11828 %11831 %11827
      %11833 = OpCompositeExtract %float %11812 2
               OpSelectionMerge %11834 None
               OpSwitch %uint_0 %11835
      %11835 = OpLabel
      %11836 = OpFOrdLessThan %bool %11833 %float_0_00313066994
               OpSelectionMerge %11837 None
               OpBranchConditional %11836 %11838 %11837
      %11838 = OpLabel
      %11839 = OpFMul %float %11833 %float_12_9200001
               OpBranch %11834
      %11837 = OpLabel
      %11840 = OpExtInst %float %1 Pow %11833 %float_0_416666657
      %11841 = OpExtInst %float %1 Fma %11840 %float_1_05499995 %float_n0_0549999997
               OpBranch %11834
      %11834 = OpLabel
      %11842 = OpPhi %float %11839 %11838 %11841 %11837
      %11843 = OpCompositeConstruct %v3float %11822 %11832 %11842
      %11844 = OpBitcast %v3uint %11843
      %11845 = OpBitwiseAnd %v3uint %11844 %348
      %11846 = OpExtInst %v3uint %1 UMin %11845 %500
      %11847 = OpConvertUToF %v3float %11846
      %11848 = OpExtInst %v3float %1 Fma %11758 %11847 %11843
      %11849 = OpExtInst %v3float %1 FClamp %11848 %102 %127
      %11850 = OpCompositeExtract %float %11849 0
      %11851 = OpFMul %float %11850 %float_127
      %11852 = OpConvertFToU %uint %11851
      %11853 = OpShiftLeftLogical %uint %11852 %uint_0
      %11854 = OpCompositeExtract %float %11849 1
      %11855 = OpFMul %float %11854 %float_127
      %11856 = OpConvertFToU %uint %11855
      %11857 = OpShiftLeftLogical %uint %11856 %uint_7
      %11858 = OpCompositeExtract %float %11849 2
      %11859 = OpFMul %float %11858 %float_63
      %11860 = OpConvertFToU %uint %11859
      %11861 = OpShiftLeftLogical %uint %11860 %uint_14
      %11862 = OpBitwiseOr %uint %11853 %11857
      %11863 = OpBitwiseOr %uint %11862 %11861
      %11864 = OpBitwiseOr %uint %11732 %uint_0
      %11865 = OpULessThan %bool %11474 %uint_3
               OpSelectionMerge %11866 None
               OpBranchConditional %11865 %11867 %11868
      %11868 = OpLabel
      %11869 = OpISub %uint %11474 %uint_3
      %11870 = OpCompositeExtract %uint %10703 0
      %11871 = OpCompositeExtract %uint %10703 1
      %11872 = OpCompositeConstruct %v3uint %11870 %11871 %11869
               OpImageWrite %10704 %11872 %11864 None
               OpBranch %11866
      %11867 = OpLabel
      %11873 = OpIEqual %bool %11474 %uint_0
      %11874 = OpSelect %uint %11873 %11864 %11473
      %11875 = OpIEqual %bool %11474 %uint_1
      %11876 = OpSelect %uint %11875 %11864 %11472
      %11877 = OpIEqual %bool %11474 %uint_2
      %11878 = OpSelect %uint %11877 %11864 %uint_0
               OpBranch %11866
      %11866 = OpLabel
      %11879 = OpPhi %uint %uint_0 %11868 %11878 %11867
      %11880 = OpPhi %uint %11472 %11868 %11876 %11867
      %11881 = OpPhi %uint %11473 %11868 %11874 %11867
      %11882 = OpIAdd %uint %11474 %uint_1
      %11883 = OpBitwiseOr %uint %11810 %uint_0
      %11884 = OpULessThan %bool %11882 %uint_3
               OpSelectionMerge %11885 None
               OpBranchConditional %11884 %11886 %11887
      %11887 = OpLabel
      %11888 = OpIAdd %uint %11474 %uint_4294967294
      %11889 = OpCompositeExtract %uint %10703 0
      %11890 = OpCompositeExtract %uint %10703 1
      %11891 = OpCompositeConstruct %v3uint %11889 %11890 %11888
               OpImageWrite %10704 %11891 %11883 None
               OpBranch %11885
      %11886 = OpLabel
      %11892 = OpIEqual %bool %11882 %uint_0
      %11893 = OpSelect %uint %11892 %11883 %11881
      %11894 = OpIEqual %bool %11882 %uint_1
      %11895 = OpSelect %uint %11894 %11883 %11880
      %11896 = OpIEqual %bool %11882 %uint_2
      %11897 = OpSelect %uint %11896 %11883 %11879
               OpBranch %11885
      %11885 = OpLabel
      %11898 = OpPhi %uint %11879 %11887 %11897 %11886
      %11899 = OpPhi %uint %11880 %11887 %11895 %11886
      %11900 = OpPhi %uint %11881 %11887 %11893 %11886
      %11901 = OpIAdd %uint %11474 %uint_2
      %11902 = OpBitwiseOr %uint %11863 %uint_0
      %11903 = OpULessThan %bool %11901 %uint_3
               OpSelectionMerge %11904 None
               OpBranchConditional %11903 %11905 %11906
      %11906 = OpLabel
      %11907 = OpIAdd %uint %11474 %uint_4294967295
      %11908 = OpCompositeExtract %uint %10703 0
      %11909 = OpCompositeExtract %uint %10703 1
      %11910 = OpCompositeConstruct %v3uint %11908 %11909 %11907
               OpImageWrite %10704 %11910 %11902 None
               OpBranch %11904
      %11905 = OpLabel
      %11911 = OpIEqual %bool %11901 %uint_0
      %11912 = OpSelect %uint %11911 %11902 %11900
      %11913 = OpIEqual %bool %11901 %uint_1
      %11914 = OpSelect %uint %11913 %11902 %11899
      %11915 = OpIEqual %bool %11901 %uint_2
      %11916 = OpSelect %uint %11915 %11902 %11898
               OpBranch %11904
      %11904 = OpLabel
      %11917 = OpPhi %uint %11898 %11906 %11916 %11905
      %11918 = OpPhi %uint %11899 %11906 %11914 %11905
      %11919 = OpPhi %uint %11900 %11906 %11912 %11905
      %11920 = OpIAdd %uint %11474 %uint_3
               OpBranch %11752
      %11752 = OpLabel
      %11921 = OpPhi %uint %uint_0 %11750 %11917 %11904
      %11922 = OpPhi %uint %11472 %11750 %11918 %11904
      %11923 = OpPhi %uint %11473 %11750 %11919 %11904
      %11924 = OpPhi %uint %11474 %11750 %11920 %11904
      %11925 = OpSelect %uint %11751 %uint_0 %11725
               OpBranch %11748
      %11749 = OpLabel
      %11926 = OpExtInst %float %1 FAbs %459
      %11927 = OpFSub %float %float_1 %11926
      %11928 = OpVectorShuffle %v3float %10706 %457 0 1 2
      %11929 = OpFSub %float %8387 %float_0_5
      %11930 = OpFMul %float %11929 %float_0_00787401572
      %11931 = OpFMul %float %11929 %float_0_0158730168
      %11932 = OpCompositeConstruct %v3float %11930 %11930 %11931
      %11933 = OpExtInst %v3float %1 FClamp %11928 %102 %127
      %11934 = OpCompositeExtract %float %11933 0
               OpSelectionMerge %11935 None
               OpSwitch %uint_0 %11936
      %11936 = OpLabel
      %11937 = OpFOrdLessThan %bool %11934 %float_0_00313066994
               OpSelectionMerge %11938 None
               OpBranchConditional %11937 %11939 %11938
      %11939 = OpLabel
      %11940 = OpFMul %float %11934 %float_12_9200001
               OpBranch %11935
      %11938 = OpLabel
      %11941 = OpExtInst %float %1 Pow %11934 %float_0_416666657
      %11942 = OpExtInst %float %1 Fma %11941 %float_1_05499995 %float_n0_0549999997
               OpBranch %11935
      %11935 = OpLabel
      %11943 = OpPhi %float %11940 %11939 %11942 %11938
      %11944 = OpCompositeExtract %float %11933 1
               OpSelectionMerge %11945 None
               OpSwitch %uint_0 %11946
      %11946 = OpLabel
      %11947 = OpFOrdLessThan %bool %11944 %float_0_00313066994
               OpSelectionMerge %11948 None
               OpBranchConditional %11947 %11949 %11948
      %11949 = OpLabel
      %11950 = OpFMul %float %11944 %float_12_9200001
               OpBranch %11945
      %11948 = OpLabel
      %11951 = OpExtInst %float %1 Pow %11944 %float_0_416666657
      %11952 = OpExtInst %float %1 Fma %11951 %float_1_05499995 %float_n0_0549999997
               OpBranch %11945
      %11945 = OpLabel
      %11953 = OpPhi %float %11950 %11949 %11952 %11948
      %11954 = OpCompositeExtract %float %11933 2
               OpSelectionMerge %11955 None
               OpSwitch %uint_0 %11956
      %11956 = OpLabel
      %11957 = OpFOrdLessThan %bool %11954 %float_0_00313066994
               OpSelectionMerge %11958 None
               OpBranchConditional %11957 %11959 %11958
      %11959 = OpLabel
      %11960 = OpFMul %float %11954 %float_12_9200001
               OpBranch %11955
      %11958 = OpLabel
      %11961 = OpExtInst %float %1 Pow %11954 %float_0_416666657
      %11962 = OpExtInst %float %1 Fma %11961 %float_1_05499995 %float_n0_0549999997
               OpBranch %11955
      %11955 = OpLabel
      %11963 = OpPhi %float %11960 %11959 %11962 %11958
      %11964 = OpCompositeConstruct %v3float %11943 %11953 %11963
      %11965 = OpBitcast %v3uint %11964
      %11966 = OpBitwiseAnd %v3uint %11965 %348
      %11967 = OpExtInst %v3uint %1 UMin %11966 %500
      %11968 = OpConvertUToF %v3float %11967
      %11969 = OpExtInst %v3float %1 Fma %11932 %11968 %11964
      %11970 = OpExtInst %v3float %1 FClamp %11969 %102 %127
      %11971 = OpCompositeExtract %float %11970 0
      %11972 = OpFMul %float %11971 %float_127
      %11973 = OpConvertFToU %uint %11972
      %11974 = OpShiftLeftLogical %uint %11973 %uint_0
      %11975 = OpCompositeExtract %float %11970 1
      %11976 = OpFMul %float %11975 %float_127
      %11977 = OpConvertFToU %uint %11976
      %11978 = OpShiftLeftLogical %uint %11977 %uint_7
      %11979 = OpCompositeExtract %float %11970 2
      %11980 = OpFMul %float %11979 %float_63
      %11981 = OpConvertFToU %uint %11980
      %11982 = OpShiftLeftLogical %uint %11981 %uint_14
      %11983 = OpBitwiseOr %uint %11974 %11978
      %11984 = OpBitwiseOr %uint %11983 %11982
      %11985 = OpVectorShuffle %v3float %10716 %10716 0 1 2
      %11986 = OpExtInst %v3float %1 FClamp %11985 %102 %127
      %11987 = OpCompositeExtract %float %11986 0
               OpSelectionMerge %11988 None
               OpSwitch %uint_0 %11989
      %11989 = OpLabel
      %11990 = OpFOrdLessThan %bool %11987 %float_0_00313066994
               OpSelectionMerge %11991 None
               OpBranchConditional %11990 %11992 %11991
      %11992 = OpLabel
      %11993 = OpFMul %float %11987 %float_12_9200001
               OpBranch %11988
      %11991 = OpLabel
      %11994 = OpExtInst %float %1 Pow %11987 %float_0_416666657
      %11995 = OpExtInst %float %1 Fma %11994 %float_1_05499995 %float_n0_0549999997
               OpBranch %11988
      %11988 = OpLabel
      %11996 = OpPhi %float %11993 %11992 %11995 %11991
      %11997 = OpCompositeExtract %float %11986 1
               OpSelectionMerge %11998 None
               OpSwitch %uint_0 %11999
      %11999 = OpLabel
      %12000 = OpFOrdLessThan %bool %11997 %float_0_00313066994
               OpSelectionMerge %12001 None
               OpBranchConditional %12000 %12002 %12001
      %12002 = OpLabel
      %12003 = OpFMul %float %11997 %float_12_9200001
               OpBranch %11998
      %12001 = OpLabel
      %12004 = OpExtInst %float %1 Pow %11997 %float_0_416666657
      %12005 = OpExtInst %float %1 Fma %12004 %float_1_05499995 %float_n0_0549999997
               OpBranch %11998
      %11998 = OpLabel
      %12006 = OpPhi %float %12003 %12002 %12005 %12001
      %12007 = OpCompositeExtract %float %11986 2
               OpSelectionMerge %12008 None
               OpSwitch %uint_0 %12009
      %12009 = OpLabel
      %12010 = OpFOrdLessThan %bool %12007 %float_0_00313066994
               OpSelectionMerge %12011 None
               OpBranchConditional %12010 %12012 %12011
      %12012 = OpLabel
      %12013 = OpFMul %float %12007 %float_12_9200001
               OpBranch %12008
      %12011 = OpLabel
      %12014 = OpExtInst %float %1 Pow %12007 %float_0_416666657
      %12015 = OpExtInst %float %1 Fma %12014 %float_1_05499995 %float_n0_0549999997
               OpBranch %12008
      %12008 = OpLabel
      %12016 = OpPhi %float %12013 %12012 %12015 %12011
      %12017 = OpCompositeConstruct %v3float %11996 %12006 %12016
      %12018 = OpBitcast %v3uint %12017
      %12019 = OpBitwiseAnd %v3uint %12018 %348
      %12020 = OpExtInst %v3uint %1 UMin %12019 %500
      %12021 = OpConvertUToF %v3float %12020
      %12022 = OpExtInst %v3float %1 Fma %11932 %12021 %12017
      %12023 = OpExtInst %v3float %1 FClamp %12022 %102 %127
      %12024 = OpCompositeExtract %float %12023 0
      %12025 = OpFMul %float %12024 %float_127
      %12026 = OpConvertFToU %uint %12025
      %12027 = OpShiftLeftLogical %uint %12026 %uint_0
      %12028 = OpCompositeExtract %float %12023 1
      %12029 = OpFMul %float %12028 %float_127
      %12030 = OpConvertFToU %uint %12029
      %12031 = OpShiftLeftLogical %uint %12030 %uint_7
      %12032 = OpCompositeExtract %float %12023 2
      %12033 = OpFMul %float %12032 %float_63
      %12034 = OpConvertFToU %uint %12033
      %12035 = OpShiftLeftLogical %uint %12034 %uint_14
      %12036 = OpBitwiseOr %uint %12027 %12031
      %12037 = OpBitwiseOr %uint %12036 %12035
      %12038 = OpExtInst %float %1 FClamp %11927 %float_0 %float_1
      %12039 = OpExtInst %float %1 FClamp %12038 %float_0 %float_1
      %12040 = OpFMul %float %12039 %float_127
      %12041 = OpConvertFToU %uint %12040
      %12042 = OpExtInst %uint %1 PackHalf2x16 %557
      %12043 = OpShiftLeftLogical %uint %12042 %uint_15
      %12044 = OpBitwiseAnd %uint %12043 %uint_1072693248
      %12045 = OpShiftLeftLogical %uint %12042 %uint_5
      %12046 = OpBitwiseAnd %uint %12045 %uint_1047552
      %12047 = OpShiftRightLogical %uint %12042 %uint_5
      %12048 = OpBitwiseAnd %uint %12047 %uint_1023
      %12049 = OpBitwiseOr %uint %12044 %12046
      %12050 = OpBitwiseOr %uint %12049 %12048
      %12051 = OpBitwiseAnd %uint %12050 %uint_4095
      %12052 = OpShiftRightLogical %uint %12050 %uint_12
      %12053 = OpBitwiseAnd %uint %12052 %uint_4095
      %12054 = OpShiftRightLogical %uint %12050 %uint_24
      %12055 = OpBitwiseAnd %uint %12054 %uint_63
      %12056 = OpBitwiseAnd %uint %12041 %uint_127
      %12057 = OpShiftLeftLogical %uint %12056 %uint_19
      %12058 = OpBitwiseOr %uint %11732 %12057
      %12059 = OpShiftLeftLogical %uint %12055 %uint_26
      %12060 = OpBitwiseOr %uint %12058 %12059
      %12061 = OpULessThan %bool %11474 %uint_3
               OpSelectionMerge %12062 None
               OpBranchConditional %12061 %12063 %12064
      %12064 = OpLabel
      %12065 = OpISub %uint %11474 %uint_3
      %12066 = OpCompositeExtract %uint %10703 0
      %12067 = OpCompositeExtract %uint %10703 1
      %12068 = OpCompositeConstruct %v3uint %12066 %12067 %12065
               OpImageWrite %10704 %12068 %12060 None
               OpBranch %12062
      %12063 = OpLabel
      %12069 = OpIEqual %bool %11474 %uint_0
      %12070 = OpSelect %uint %12069 %12060 %11473
      %12071 = OpIEqual %bool %11474 %uint_1
      %12072 = OpSelect %uint %12071 %12060 %11472
      %12073 = OpIEqual %bool %11474 %uint_2
      %12074 = OpSelect %uint %12073 %12060 %uint_0
               OpBranch %12062
      %12062 = OpLabel
      %12075 = OpPhi %uint %uint_0 %12064 %12074 %12063
      %12076 = OpPhi %uint %11472 %12064 %12072 %12063
      %12077 = OpPhi %uint %11473 %12064 %12070 %12063
      %12078 = OpIAdd %uint %11474 %uint_1
      %12079 = OpShiftLeftLogical %uint %12051 %uint_20
      %12080 = OpBitwiseOr %uint %11984 %12079
      %12081 = OpULessThan %bool %12078 %uint_3
               OpSelectionMerge %12082 None
               OpBranchConditional %12081 %12083 %12084
      %12084 = OpLabel
      %12085 = OpIAdd %uint %11474 %uint_4294967294
      %12086 = OpCompositeExtract %uint %10703 0
      %12087 = OpCompositeExtract %uint %10703 1
      %12088 = OpCompositeConstruct %v3uint %12086 %12087 %12085
               OpImageWrite %10704 %12088 %12080 None
               OpBranch %12082
      %12083 = OpLabel
      %12089 = OpIEqual %bool %12078 %uint_0
      %12090 = OpSelect %uint %12089 %12080 %12077
      %12091 = OpIEqual %bool %12078 %uint_1
      %12092 = OpSelect %uint %12091 %12080 %12076
      %12093 = OpIEqual %bool %12078 %uint_2
      %12094 = OpSelect %uint %12093 %12080 %12075
               OpBranch %12082
      %12082 = OpLabel
      %12095 = OpPhi %uint %12075 %12084 %12094 %12083
      %12096 = OpPhi %uint %12076 %12084 %12092 %12083
      %12097 = OpPhi %uint %12077 %12084 %12090 %12083
      %12098 = OpIAdd %uint %11474 %uint_2
      %12099 = OpShiftLeftLogical %uint %12053 %uint_20
      %12100 = OpBitwiseOr %uint %12037 %12099
      %12101 = OpULessThan %bool %12098 %uint_3
               OpSelectionMerge %12102 None
               OpBranchConditional %12101 %12103 %12104
      %12104 = OpLabel
      %12105 = OpIAdd %uint %11474 %uint_4294967295
      %12106 = OpCompositeExtract %uint %10703 0
      %12107 = OpCompositeExtract %uint %10703 1
      %12108 = OpCompositeConstruct %v3uint %12106 %12107 %12105
               OpImageWrite %10704 %12108 %12100 None
               OpBranch %12102
      %12103 = OpLabel
      %12109 = OpIEqual %bool %12098 %uint_0
      %12110 = OpSelect %uint %12109 %12100 %12097
      %12111 = OpIEqual %bool %12098 %uint_1
      %12112 = OpSelect %uint %12111 %12100 %12096
      %12113 = OpIEqual %bool %12098 %uint_2
      %12114 = OpSelect %uint %12113 %12100 %12095
               OpBranch %12102
      %12102 = OpLabel
      %12115 = OpPhi %uint %12095 %12104 %12114 %12103
      %12116 = OpPhi %uint %12096 %12104 %12112 %12103
      %12117 = OpPhi %uint %12097 %12104 %12110 %12103
      %12118 = OpIAdd %uint %11474 %uint_3
               OpBranch %11748
      %11748 = OpLabel
      %12119 = OpPhi %uint %11925 %11752 %uint_0 %12102
      %12120 = OpPhi %uint %11921 %11752 %12115 %12102
      %12121 = OpPhi %uint %11922 %11752 %12116 %12102
      %12122 = OpPhi %uint %11923 %11752 %12117 %12102
      %12123 = OpPhi %uint %11924 %11752 %12118 %12102
               OpBranch %11742
      %11743 = OpLabel
      %12124 = OpVectorShuffle %v3float %10706 %457 0 1 2
      %12125 = OpFSub %float %8387 %float_0_5
      %12126 = OpFMul %float %12125 %float_0_00787401572
      %12127 = OpFMul %float %12125 %float_0_0158730168
      %12128 = OpCompositeConstruct %v3float %12126 %12126 %12127
      %12129 = OpExtInst %v3float %1 FClamp %12124 %102 %127
      %12130 = OpCompositeExtract %float %12129 0
               OpSelectionMerge %12131 None
               OpSwitch %uint_0 %12132
      %12132 = OpLabel
      %12133 = OpFOrdLessThan %bool %12130 %float_0_00313066994
               OpSelectionMerge %12134 None
               OpBranchConditional %12133 %12135 %12134
      %12135 = OpLabel
      %12136 = OpFMul %float %12130 %float_12_9200001
               OpBranch %12131
      %12134 = OpLabel
      %12137 = OpExtInst %float %1 Pow %12130 %float_0_416666657
      %12138 = OpExtInst %float %1 Fma %12137 %float_1_05499995 %float_n0_0549999997
               OpBranch %12131
      %12131 = OpLabel
      %12139 = OpPhi %float %12136 %12135 %12138 %12134
      %12140 = OpCompositeExtract %float %12129 1
               OpSelectionMerge %12141 None
               OpSwitch %uint_0 %12142
      %12142 = OpLabel
      %12143 = OpFOrdLessThan %bool %12140 %float_0_00313066994
               OpSelectionMerge %12144 None
               OpBranchConditional %12143 %12145 %12144
      %12145 = OpLabel
      %12146 = OpFMul %float %12140 %float_12_9200001
               OpBranch %12141
      %12144 = OpLabel
      %12147 = OpExtInst %float %1 Pow %12140 %float_0_416666657
      %12148 = OpExtInst %float %1 Fma %12147 %float_1_05499995 %float_n0_0549999997
               OpBranch %12141
      %12141 = OpLabel
      %12149 = OpPhi %float %12146 %12145 %12148 %12144
      %12150 = OpCompositeExtract %float %12129 2
               OpSelectionMerge %12151 None
               OpSwitch %uint_0 %12152
      %12152 = OpLabel
      %12153 = OpFOrdLessThan %bool %12150 %float_0_00313066994
               OpSelectionMerge %12154 None
               OpBranchConditional %12153 %12155 %12154
      %12155 = OpLabel
      %12156 = OpFMul %float %12150 %float_12_9200001
               OpBranch %12151
      %12154 = OpLabel
      %12157 = OpExtInst %float %1 Pow %12150 %float_0_416666657
      %12158 = OpExtInst %float %1 Fma %12157 %float_1_05499995 %float_n0_0549999997
               OpBranch %12151
      %12151 = OpLabel
      %12159 = OpPhi %float %12156 %12155 %12158 %12154
      %12160 = OpCompositeConstruct %v3float %12139 %12149 %12159
      %12161 = OpBitcast %v3uint %12160
      %12162 = OpBitwiseAnd %v3uint %12161 %348
      %12163 = OpExtInst %v3uint %1 UMin %12162 %500
      %12164 = OpConvertUToF %v3float %12163
      %12165 = OpExtInst %v3float %1 Fma %12128 %12164 %12160
      %12166 = OpExtInst %v3float %1 FClamp %12165 %102 %127
      %12167 = OpCompositeExtract %float %12166 0
      %12168 = OpFMul %float %12167 %float_127
      %12169 = OpConvertFToU %uint %12168
      %12170 = OpShiftLeftLogical %uint %12169 %uint_0
      %12171 = OpCompositeExtract %float %12166 1
      %12172 = OpFMul %float %12171 %float_127
      %12173 = OpConvertFToU %uint %12172
      %12174 = OpShiftLeftLogical %uint %12173 %uint_7
      %12175 = OpCompositeExtract %float %12166 2
      %12176 = OpFMul %float %12175 %float_63
      %12177 = OpConvertFToU %uint %12176
      %12178 = OpShiftLeftLogical %uint %12177 %uint_14
      %12179 = OpBitwiseOr %uint %12170 %12174
      %12180 = OpBitwiseOr %uint %12179 %12178
      %12181 = OpVectorShuffle %v3float %10716 %10716 0 1 2
      %12182 = OpExtInst %v3float %1 FClamp %12181 %102 %127
      %12183 = OpCompositeExtract %float %12182 0
               OpSelectionMerge %12184 None
               OpSwitch %uint_0 %12185
      %12185 = OpLabel
      %12186 = OpFOrdLessThan %bool %12183 %float_0_00313066994
               OpSelectionMerge %12187 None
               OpBranchConditional %12186 %12188 %12187
      %12188 = OpLabel
      %12189 = OpFMul %float %12183 %float_12_9200001
               OpBranch %12184
      %12187 = OpLabel
      %12190 = OpExtInst %float %1 Pow %12183 %float_0_416666657
      %12191 = OpExtInst %float %1 Fma %12190 %float_1_05499995 %float_n0_0549999997
               OpBranch %12184
      %12184 = OpLabel
      %12192 = OpPhi %float %12189 %12188 %12191 %12187
      %12193 = OpCompositeExtract %float %12182 1
               OpSelectionMerge %12194 None
               OpSwitch %uint_0 %12195
      %12195 = OpLabel
      %12196 = OpFOrdLessThan %bool %12193 %float_0_00313066994
               OpSelectionMerge %12197 None
               OpBranchConditional %12196 %12198 %12197
      %12198 = OpLabel
      %12199 = OpFMul %float %12193 %float_12_9200001
               OpBranch %12194
      %12197 = OpLabel
      %12200 = OpExtInst %float %1 Pow %12193 %float_0_416666657
      %12201 = OpExtInst %float %1 Fma %12200 %float_1_05499995 %float_n0_0549999997
               OpBranch %12194
      %12194 = OpLabel
      %12202 = OpPhi %float %12199 %12198 %12201 %12197
      %12203 = OpCompositeExtract %float %12182 2
               OpSelectionMerge %12204 None
               OpSwitch %uint_0 %12205
      %12205 = OpLabel
      %12206 = OpFOrdLessThan %bool %12203 %float_0_00313066994
               OpSelectionMerge %12207 None
               OpBranchConditional %12206 %12208 %12207
      %12208 = OpLabel
      %12209 = OpFMul %float %12203 %float_12_9200001
               OpBranch %12204
      %12207 = OpLabel
      %12210 = OpExtInst %float %1 Pow %12203 %float_0_416666657
      %12211 = OpExtInst %float %1 Fma %12210 %float_1_05499995 %float_n0_0549999997
               OpBranch %12204
      %12204 = OpLabel
      %12212 = OpPhi %float %12209 %12208 %12211 %12207
      %12213 = OpCompositeConstruct %v3float %12192 %12202 %12212
      %12214 = OpBitcast %v3uint %12213
      %12215 = OpBitwiseAnd %v3uint %12214 %348
      %12216 = OpExtInst %v3uint %1 UMin %12215 %500
      %12217 = OpConvertUToF %v3float %12216
      %12218 = OpExtInst %v3float %1 Fma %12128 %12217 %12213
      %12219 = OpExtInst %v3float %1 FClamp %12218 %102 %127
      %12220 = OpCompositeExtract %float %12219 0
      %12221 = OpFMul %float %12220 %float_127
      %12222 = OpConvertFToU %uint %12221
      %12223 = OpShiftLeftLogical %uint %12222 %uint_0
      %12224 = OpCompositeExtract %float %12219 1
      %12225 = OpFMul %float %12224 %float_127
      %12226 = OpConvertFToU %uint %12225
      %12227 = OpShiftLeftLogical %uint %12226 %uint_7
      %12228 = OpCompositeExtract %float %12219 2
      %12229 = OpFMul %float %12228 %float_63
      %12230 = OpConvertFToU %uint %12229
      %12231 = OpShiftLeftLogical %uint %12230 %uint_14
      %12232 = OpBitwiseOr %uint %12223 %12227
      %12233 = OpBitwiseOr %uint %12232 %12231
               OpSelectionMerge %12234 None
               OpSwitch %uint_0 %12235
      %12235 = OpLabel
               OpSelectionMerge %12236 None
               OpBranchConditional %true %12237 %12236
      %12237 = OpLabel
               OpBranch %12234
      %12236 = OpLabel
      %12238 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12234
      %12234 = OpLabel
      %12239 = OpPhi %float %float_0 %12237 %12238 %12236
               OpSelectionMerge %12240 None
               OpSwitch %uint_0 %12241
      %12241 = OpLabel
               OpSelectionMerge %12242 None
               OpBranchConditional %true %12243 %12242
      %12243 = OpLabel
               OpBranch %12240
      %12242 = OpLabel
      %12244 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12240
      %12240 = OpLabel
      %12245 = OpPhi %float %float_0 %12243 %12244 %12242
               OpSelectionMerge %12246 None
               OpSwitch %uint_0 %12247
      %12247 = OpLabel
               OpSelectionMerge %12248 None
               OpBranchConditional %true %12249 %12248
      %12249 = OpLabel
               OpBranch %12246
      %12248 = OpLabel
      %12250 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12246
      %12246 = OpLabel
      %12251 = OpPhi %float %float_0 %12249 %12250 %12248
      %12252 = OpCompositeConstruct %v3float %12239 %12245 %12251
      %12253 = OpBitcast %v3uint %12252
      %12254 = OpBitwiseAnd %v3uint %12253 %348
      %12255 = OpExtInst %v3uint %1 UMin %12254 %500
      %12256 = OpConvertUToF %v3float %12255
      %12257 = OpExtInst %v3float %1 Fma %12128 %12256 %12252
      %12258 = OpExtInst %v3float %1 FClamp %12257 %102 %127
      %12259 = OpCompositeExtract %float %12258 0
      %12260 = OpFMul %float %12259 %float_127
      %12261 = OpConvertFToU %uint %12260
      %12262 = OpShiftLeftLogical %uint %12261 %uint_0
      %12263 = OpCompositeExtract %float %12258 1
      %12264 = OpFMul %float %12263 %float_127
      %12265 = OpConvertFToU %uint %12264
      %12266 = OpShiftLeftLogical %uint %12265 %uint_7
      %12267 = OpCompositeExtract %float %12258 2
      %12268 = OpFMul %float %12267 %float_63
      %12269 = OpConvertFToU %uint %12268
      %12270 = OpShiftLeftLogical %uint %12269 %uint_14
      %12271 = OpBitwiseOr %uint %12262 %12266
      %12272 = OpBitwiseOr %uint %12271 %12270
      %12273 = OpBitwiseOr %uint %11732 %uint_0
      %12274 = OpULessThan %bool %11474 %uint_3
               OpSelectionMerge %12275 None
               OpBranchConditional %12274 %12276 %12277
      %12277 = OpLabel
      %12278 = OpISub %uint %11474 %uint_3
      %12279 = OpCompositeExtract %uint %10703 0
      %12280 = OpCompositeExtract %uint %10703 1
      %12281 = OpCompositeConstruct %v3uint %12279 %12280 %12278
               OpImageWrite %10704 %12281 %12273 None
               OpBranch %12275
      %12276 = OpLabel
      %12282 = OpIEqual %bool %11474 %uint_0
      %12283 = OpSelect %uint %12282 %12273 %11473
      %12284 = OpIEqual %bool %11474 %uint_1
      %12285 = OpSelect %uint %12284 %12273 %11472
      %12286 = OpIEqual %bool %11474 %uint_2
      %12287 = OpSelect %uint %12286 %12273 %uint_0
               OpBranch %12275
      %12275 = OpLabel
      %12288 = OpPhi %uint %uint_0 %12277 %12287 %12276
      %12289 = OpPhi %uint %11472 %12277 %12285 %12276
      %12290 = OpPhi %uint %11473 %12277 %12283 %12276
      %12291 = OpIAdd %uint %11474 %uint_1
      %12292 = OpBitwiseAnd %uint %12272 %uint_1047552
      %12293 = OpShiftLeftLogical %uint %12292 %uint_10
      %12294 = OpBitwiseOr %uint %12180 %12293
      %12295 = OpULessThan %bool %12291 %uint_3
               OpSelectionMerge %12296 None
               OpBranchConditional %12295 %12297 %12298
      %12298 = OpLabel
      %12299 = OpIAdd %uint %11474 %uint_4294967294
      %12300 = OpCompositeExtract %uint %10703 0
      %12301 = OpCompositeExtract %uint %10703 1
      %12302 = OpCompositeConstruct %v3uint %12300 %12301 %12299
               OpImageWrite %10704 %12302 %12294 None
               OpBranch %12296
      %12297 = OpLabel
      %12303 = OpIEqual %bool %12291 %uint_0
      %12304 = OpSelect %uint %12303 %12294 %12290
      %12305 = OpIEqual %bool %12291 %uint_1
      %12306 = OpSelect %uint %12305 %12294 %12289
      %12307 = OpIEqual %bool %12291 %uint_2
      %12308 = OpSelect %uint %12307 %12294 %12288
               OpBranch %12296
      %12296 = OpLabel
      %12309 = OpPhi %uint %12288 %12298 %12308 %12297
      %12310 = OpPhi %uint %12289 %12298 %12306 %12297
      %12311 = OpPhi %uint %12290 %12298 %12304 %12297
      %12312 = OpIAdd %uint %11474 %uint_2
      %12313 = OpBitwiseAnd %uint %12272 %uint_1023
      %12314 = OpShiftLeftLogical %uint %12313 %uint_20
      %12315 = OpBitwiseOr %uint %12233 %12314
      %12316 = OpULessThan %bool %12312 %uint_3
               OpSelectionMerge %12317 None
               OpBranchConditional %12316 %12318 %12319
      %12319 = OpLabel
      %12320 = OpIAdd %uint %11474 %uint_4294967295
      %12321 = OpCompositeExtract %uint %10703 0
      %12322 = OpCompositeExtract %uint %10703 1
      %12323 = OpCompositeConstruct %v3uint %12321 %12322 %12320
               OpImageWrite %10704 %12323 %12315 None
               OpBranch %12317
      %12318 = OpLabel
      %12324 = OpIEqual %bool %12312 %uint_0
      %12325 = OpSelect %uint %12324 %12315 %12311
      %12326 = OpIEqual %bool %12312 %uint_1
      %12327 = OpSelect %uint %12326 %12315 %12310
      %12328 = OpIEqual %bool %12312 %uint_2
      %12329 = OpSelect %uint %12328 %12315 %12309
               OpBranch %12317
      %12317 = OpLabel
      %12330 = OpPhi %uint %12309 %12319 %12329 %12318
      %12331 = OpPhi %uint %12310 %12319 %12327 %12318
      %12332 = OpPhi %uint %12311 %12319 %12325 %12318
      %12333 = OpIAdd %uint %11474 %uint_3
               OpBranch %11742
      %11742 = OpLabel
      %12334 = OpPhi %uint %12119 %11748 %uint_0 %12317
      %12335 = OpPhi %uint %12120 %11748 %12330 %12317
      %12336 = OpPhi %uint %12121 %11748 %12331 %12317
      %12337 = OpPhi %uint %12122 %11748 %12332 %12317
      %12338 = OpPhi %uint %12123 %11748 %12333 %12317
               OpBranch %11738
      %11739 = OpLabel
      %12339 = OpVectorShuffle %v3float %10706 %457 0 1 2
      %12340 = OpFSub %float %8387 %float_0_5
      %12341 = OpFMul %float %12340 %float_0_00787401572
      %12342 = OpFMul %float %12340 %float_0_0158730168
      %12343 = OpCompositeConstruct %v3float %12341 %12341 %12342
      %12344 = OpExtInst %v3float %1 FClamp %12339 %102 %127
      %12345 = OpCompositeExtract %float %12344 0
               OpSelectionMerge %12346 None
               OpSwitch %uint_0 %12347
      %12347 = OpLabel
      %12348 = OpFOrdLessThan %bool %12345 %float_0_00313066994
               OpSelectionMerge %12349 None
               OpBranchConditional %12348 %12350 %12349
      %12350 = OpLabel
      %12351 = OpFMul %float %12345 %float_12_9200001
               OpBranch %12346
      %12349 = OpLabel
      %12352 = OpExtInst %float %1 Pow %12345 %float_0_416666657
      %12353 = OpExtInst %float %1 Fma %12352 %float_1_05499995 %float_n0_0549999997
               OpBranch %12346
      %12346 = OpLabel
      %12354 = OpPhi %float %12351 %12350 %12353 %12349
      %12355 = OpCompositeExtract %float %12344 1
               OpSelectionMerge %12356 None
               OpSwitch %uint_0 %12357
      %12357 = OpLabel
      %12358 = OpFOrdLessThan %bool %12355 %float_0_00313066994
               OpSelectionMerge %12359 None
               OpBranchConditional %12358 %12360 %12359
      %12360 = OpLabel
      %12361 = OpFMul %float %12355 %float_12_9200001
               OpBranch %12356
      %12359 = OpLabel
      %12362 = OpExtInst %float %1 Pow %12355 %float_0_416666657
      %12363 = OpExtInst %float %1 Fma %12362 %float_1_05499995 %float_n0_0549999997
               OpBranch %12356
      %12356 = OpLabel
      %12364 = OpPhi %float %12361 %12360 %12363 %12359
      %12365 = OpCompositeExtract %float %12344 2
               OpSelectionMerge %12366 None
               OpSwitch %uint_0 %12367
      %12367 = OpLabel
      %12368 = OpFOrdLessThan %bool %12365 %float_0_00313066994
               OpSelectionMerge %12369 None
               OpBranchConditional %12368 %12370 %12369
      %12370 = OpLabel
      %12371 = OpFMul %float %12365 %float_12_9200001
               OpBranch %12366
      %12369 = OpLabel
      %12372 = OpExtInst %float %1 Pow %12365 %float_0_416666657
      %12373 = OpExtInst %float %1 Fma %12372 %float_1_05499995 %float_n0_0549999997
               OpBranch %12366
      %12366 = OpLabel
      %12374 = OpPhi %float %12371 %12370 %12373 %12369
      %12375 = OpCompositeConstruct %v3float %12354 %12364 %12374
      %12376 = OpBitcast %v3uint %12375
      %12377 = OpBitwiseAnd %v3uint %12376 %348
      %12378 = OpExtInst %v3uint %1 UMin %12377 %500
      %12379 = OpConvertUToF %v3float %12378
      %12380 = OpExtInst %v3float %1 Fma %12343 %12379 %12375
      %12381 = OpExtInst %v3float %1 FClamp %12380 %102 %127
      %12382 = OpCompositeExtract %float %12381 0
      %12383 = OpFMul %float %12382 %float_127
      %12384 = OpConvertFToU %uint %12383
      %12385 = OpShiftLeftLogical %uint %12384 %uint_0
      %12386 = OpCompositeExtract %float %12381 1
      %12387 = OpFMul %float %12386 %float_127
      %12388 = OpConvertFToU %uint %12387
      %12389 = OpShiftLeftLogical %uint %12388 %uint_7
      %12390 = OpCompositeExtract %float %12381 2
      %12391 = OpFMul %float %12390 %float_63
      %12392 = OpConvertFToU %uint %12391
      %12393 = OpShiftLeftLogical %uint %12392 %uint_14
      %12394 = OpBitwiseOr %uint %12385 %12389
      %12395 = OpBitwiseOr %uint %12394 %12393
      %12396 = OpExtInst %float %1 FClamp %10709 %float_0 %float_1
      %12397 = OpFMul %float %12396 %float_255
      %12398 = OpConvertFToU %uint %12397
      %12399 = OpShiftLeftLogical %uint %12398 %uint_8
      %12400 = OpExtInst %float %1 FClamp %10713 %float_0 %float_1
      %12401 = OpFMul %float %12400 %float_255
      %12402 = OpConvertFToU %uint %12401
      %12403 = OpShiftLeftLogical %uint %12402 %uint_16
      %12404 = OpBitwiseOr %uint %uint_0 %12399
      %12405 = OpBitwiseOr %uint %12404 %12403
      %12406 = OpBitwiseOr %uint %12405 %uint_0
      %12407 = OpBitwiseOr %uint %11732 %uint_0
      %12408 = OpULessThan %bool %11474 %uint_3
               OpSelectionMerge %12409 None
               OpBranchConditional %12408 %12410 %12411
      %12411 = OpLabel
      %12412 = OpISub %uint %11474 %uint_3
      %12413 = OpCompositeExtract %uint %10703 0
      %12414 = OpCompositeExtract %uint %10703 1
      %12415 = OpCompositeConstruct %v3uint %12413 %12414 %12412
               OpImageWrite %10704 %12415 %12407 None
               OpBranch %12409
      %12410 = OpLabel
      %12416 = OpIEqual %bool %11474 %uint_0
      %12417 = OpSelect %uint %12416 %12407 %11473
      %12418 = OpIEqual %bool %11474 %uint_1
      %12419 = OpSelect %uint %12418 %12407 %11472
      %12420 = OpIEqual %bool %11474 %uint_2
      %12421 = OpSelect %uint %12420 %12407 %uint_0
               OpBranch %12409
      %12409 = OpLabel
      %12422 = OpPhi %uint %uint_0 %12411 %12421 %12410
      %12423 = OpPhi %uint %11472 %12411 %12419 %12410
      %12424 = OpPhi %uint %11473 %12411 %12417 %12410
      %12425 = OpIAdd %uint %11474 %uint_1
      %12426 = OpBitwiseOr %uint %12395 %uint_0
      %12427 = OpULessThan %bool %12425 %uint_3
               OpSelectionMerge %12428 None
               OpBranchConditional %12427 %12429 %12430
      %12430 = OpLabel
      %12431 = OpIAdd %uint %11474 %uint_4294967294
      %12432 = OpCompositeExtract %uint %10703 0
      %12433 = OpCompositeExtract %uint %10703 1
      %12434 = OpCompositeConstruct %v3uint %12432 %12433 %12431
               OpImageWrite %10704 %12434 %12426 None
               OpBranch %12428
      %12429 = OpLabel
      %12435 = OpIEqual %bool %12425 %uint_0
      %12436 = OpSelect %uint %12435 %12426 %12424
      %12437 = OpIEqual %bool %12425 %uint_1
      %12438 = OpSelect %uint %12437 %12426 %12423
      %12439 = OpIEqual %bool %12425 %uint_2
      %12440 = OpSelect %uint %12439 %12426 %12422
               OpBranch %12428
      %12428 = OpLabel
      %12441 = OpPhi %uint %12422 %12430 %12440 %12429
      %12442 = OpPhi %uint %12423 %12430 %12438 %12429
      %12443 = OpPhi %uint %12424 %12430 %12436 %12429
      %12444 = OpIAdd %uint %11474 %uint_2
      %12445 = OpBitwiseOr %uint %12406 %uint_0
      %12446 = OpULessThan %bool %12444 %uint_3
               OpSelectionMerge %12447 None
               OpBranchConditional %12446 %12448 %12449
      %12449 = OpLabel
      %12450 = OpIAdd %uint %11474 %uint_4294967295
      %12451 = OpCompositeExtract %uint %10703 0
      %12452 = OpCompositeExtract %uint %10703 1
      %12453 = OpCompositeConstruct %v3uint %12451 %12452 %12450
               OpImageWrite %10704 %12453 %12445 None
               OpBranch %12447
      %12448 = OpLabel
      %12454 = OpIEqual %bool %12444 %uint_0
      %12455 = OpSelect %uint %12454 %12445 %12443
      %12456 = OpIEqual %bool %12444 %uint_1
      %12457 = OpSelect %uint %12456 %12445 %12442
      %12458 = OpIEqual %bool %12444 %uint_2
      %12459 = OpSelect %uint %12458 %12445 %12441
               OpBranch %12447
      %12447 = OpLabel
      %12460 = OpPhi %uint %12441 %12449 %12459 %12448
      %12461 = OpPhi %uint %12442 %12449 %12457 %12448
      %12462 = OpPhi %uint %12443 %12449 %12455 %12448
      %12463 = OpIAdd %uint %11474 %uint_3
               OpBranch %11738
      %11738 = OpLabel
      %12464 = OpPhi %uint %12334 %11742 %uint_0 %12447
      %12465 = OpPhi %uint %12335 %11742 %12460 %12447
      %12466 = OpPhi %uint %12336 %11742 %12461 %12447
      %12467 = OpPhi %uint %12337 %11742 %12462 %12447
      %12468 = OpPhi %uint %12338 %11742 %12463 %12447
               OpBranch %11734
      %11735 = OpLabel
      %12469 = OpBitwiseAnd %uint %11725 %uint_2047
      %12470 = OpShiftLeftLogical %uint %12469 %uint_19
      %12471 = OpBitwiseOr %uint %11732 %12470
      %12472 = OpULessThan %bool %11474 %uint_3
               OpSelectionMerge %12473 None
               OpBranchConditional %12472 %12474 %12475
      %12475 = OpLabel
      %12476 = OpISub %uint %11474 %uint_3
      %12477 = OpCompositeExtract %uint %10703 0
      %12478 = OpCompositeExtract %uint %10703 1
      %12479 = OpCompositeConstruct %v3uint %12477 %12478 %12476
               OpImageWrite %10704 %12479 %12471 None
               OpBranch %12473
      %12474 = OpLabel
      %12480 = OpIEqual %bool %11474 %uint_0
      %12481 = OpSelect %uint %12480 %12471 %11473
      %12482 = OpIEqual %bool %11474 %uint_1
      %12483 = OpSelect %uint %12482 %12471 %11472
      %12484 = OpIEqual %bool %11474 %uint_2
      %12485 = OpSelect %uint %12484 %12471 %uint_0
               OpBranch %12473
      %12473 = OpLabel
      %12486 = OpPhi %uint %uint_0 %12475 %12485 %12474
      %12487 = OpPhi %uint %11472 %12475 %12483 %12474
      %12488 = OpPhi %uint %11473 %12475 %12481 %12474
      %12489 = OpIAdd %uint %11474 %uint_1
               OpBranch %11734
      %11734 = OpLabel
      %12490 = OpPhi %uint %12464 %11738 %11725 %12473
      %12491 = OpPhi %uint %12465 %11738 %12486 %12473
      %12492 = OpPhi %uint %12466 %11738 %12487 %12473
      %12493 = OpPhi %uint %12467 %11738 %12488 %12473
      %12494 = OpPhi %uint %12468 %11738 %12489 %12473
               OpBranch %11490
      %11490 = OpLabel
      %12495 = OpPhi %uint %11719 %11493 %12490 %11734
      %12496 = OpPhi %uint %11720 %11493 %12491 %11734
      %12497 = OpPhi %uint %11721 %11493 %12492 %11734
      %12498 = OpPhi %uint %11722 %11493 %12493 %11734
      %12499 = OpPhi %uint %11723 %11493 %12494 %11734
               OpBranch %11486
      %11487 = OpLabel
      %12500 = OpVectorShuffle %v3float %10706 %457 0 1 2
      %12501 = OpFSub %float %8387 %float_0_5
      %12502 = OpFMul %float %12501 %float_0_00787401572
      %12503 = OpFMul %float %12501 %float_0_0158730168
      %12504 = OpCompositeConstruct %v3float %12502 %12502 %12503
      %12505 = OpExtInst %v3float %1 FClamp %12500 %102 %127
      %12506 = OpCompositeExtract %float %12505 0
               OpSelectionMerge %12507 None
               OpSwitch %uint_0 %12508
      %12508 = OpLabel
      %12509 = OpFOrdLessThan %bool %12506 %float_0_00313066994
               OpSelectionMerge %12510 None
               OpBranchConditional %12509 %12511 %12510
      %12511 = OpLabel
      %12512 = OpFMul %float %12506 %float_12_9200001
               OpBranch %12507
      %12510 = OpLabel
      %12513 = OpExtInst %float %1 Pow %12506 %float_0_416666657
      %12514 = OpExtInst %float %1 Fma %12513 %float_1_05499995 %float_n0_0549999997
               OpBranch %12507
      %12507 = OpLabel
      %12515 = OpPhi %float %12512 %12511 %12514 %12510
      %12516 = OpCompositeExtract %float %12505 1
               OpSelectionMerge %12517 None
               OpSwitch %uint_0 %12518
      %12518 = OpLabel
      %12519 = OpFOrdLessThan %bool %12516 %float_0_00313066994
               OpSelectionMerge %12520 None
               OpBranchConditional %12519 %12521 %12520
      %12521 = OpLabel
      %12522 = OpFMul %float %12516 %float_12_9200001
               OpBranch %12517
      %12520 = OpLabel
      %12523 = OpExtInst %float %1 Pow %12516 %float_0_416666657
      %12524 = OpExtInst %float %1 Fma %12523 %float_1_05499995 %float_n0_0549999997
               OpBranch %12517
      %12517 = OpLabel
      %12525 = OpPhi %float %12522 %12521 %12524 %12520
      %12526 = OpCompositeExtract %float %12505 2
               OpSelectionMerge %12527 None
               OpSwitch %uint_0 %12528
      %12528 = OpLabel
      %12529 = OpFOrdLessThan %bool %12526 %float_0_00313066994
               OpSelectionMerge %12530 None
               OpBranchConditional %12529 %12531 %12530
      %12531 = OpLabel
      %12532 = OpFMul %float %12526 %float_12_9200001
               OpBranch %12527
      %12530 = OpLabel
      %12533 = OpExtInst %float %1 Pow %12526 %float_0_416666657
      %12534 = OpExtInst %float %1 Fma %12533 %float_1_05499995 %float_n0_0549999997
               OpBranch %12527
      %12527 = OpLabel
      %12535 = OpPhi %float %12532 %12531 %12534 %12530
      %12536 = OpCompositeConstruct %v3float %12515 %12525 %12535
      %12537 = OpBitcast %v3uint %12536
      %12538 = OpBitwiseAnd %v3uint %12537 %348
      %12539 = OpExtInst %v3uint %1 UMin %12538 %500
      %12540 = OpConvertUToF %v3float %12539
      %12541 = OpExtInst %v3float %1 Fma %12504 %12540 %12536
      %12542 = OpExtInst %v3float %1 FClamp %12541 %102 %127
      %12543 = OpCompositeExtract %float %12542 0
      %12544 = OpFMul %float %12543 %float_127
      %12545 = OpConvertFToU %uint %12544
      %12546 = OpShiftLeftLogical %uint %12545 %uint_0
      %12547 = OpCompositeExtract %float %12542 1
      %12548 = OpFMul %float %12547 %float_127
      %12549 = OpConvertFToU %uint %12548
      %12550 = OpShiftLeftLogical %uint %12549 %uint_7
      %12551 = OpCompositeExtract %float %12542 2
      %12552 = OpFMul %float %12551 %float_63
      %12553 = OpConvertFToU %uint %12552
      %12554 = OpShiftLeftLogical %uint %12553 %uint_14
      %12555 = OpBitwiseOr %uint %12546 %12550
      %12556 = OpBitwiseOr %uint %12555 %12554
      %12557 = OpBitwiseAnd %uint %12556 %uint_4095
      %12558 = OpShiftRightLogical %uint %12556 %uint_12
      %12559 = OpBitwiseAnd %uint %12558 %uint_255
      %12560 = OpVectorShuffle %v3float %10716 %10716 0 1 2
      %12561 = OpExtInst %v3float %1 FClamp %12560 %102 %127
      %12562 = OpCompositeExtract %float %12561 0
               OpSelectionMerge %12563 None
               OpSwitch %uint_0 %12564
      %12564 = OpLabel
      %12565 = OpFOrdLessThan %bool %12562 %float_0_00313066994
               OpSelectionMerge %12566 None
               OpBranchConditional %12565 %12567 %12566
      %12567 = OpLabel
      %12568 = OpFMul %float %12562 %float_12_9200001
               OpBranch %12563
      %12566 = OpLabel
      %12569 = OpExtInst %float %1 Pow %12562 %float_0_416666657
      %12570 = OpExtInst %float %1 Fma %12569 %float_1_05499995 %float_n0_0549999997
               OpBranch %12563
      %12563 = OpLabel
      %12571 = OpPhi %float %12568 %12567 %12570 %12566
      %12572 = OpCompositeExtract %float %12561 1
               OpSelectionMerge %12573 None
               OpSwitch %uint_0 %12574
      %12574 = OpLabel
      %12575 = OpFOrdLessThan %bool %12572 %float_0_00313066994
               OpSelectionMerge %12576 None
               OpBranchConditional %12575 %12577 %12576
      %12577 = OpLabel
      %12578 = OpFMul %float %12572 %float_12_9200001
               OpBranch %12573
      %12576 = OpLabel
      %12579 = OpExtInst %float %1 Pow %12572 %float_0_416666657
      %12580 = OpExtInst %float %1 Fma %12579 %float_1_05499995 %float_n0_0549999997
               OpBranch %12573
      %12573 = OpLabel
      %12581 = OpPhi %float %12578 %12577 %12580 %12576
      %12582 = OpCompositeExtract %float %12561 2
               OpSelectionMerge %12583 None
               OpSwitch %uint_0 %12584
      %12584 = OpLabel
      %12585 = OpFOrdLessThan %bool %12582 %float_0_00313066994
               OpSelectionMerge %12586 None
               OpBranchConditional %12585 %12587 %12586
      %12587 = OpLabel
      %12588 = OpFMul %float %12582 %float_12_9200001
               OpBranch %12583
      %12586 = OpLabel
      %12589 = OpExtInst %float %1 Pow %12582 %float_0_416666657
      %12590 = OpExtInst %float %1 Fma %12589 %float_1_05499995 %float_n0_0549999997
               OpBranch %12583
      %12583 = OpLabel
      %12591 = OpPhi %float %12588 %12587 %12590 %12586
      %12592 = OpCompositeConstruct %v3float %12571 %12581 %12591
      %12593 = OpBitcast %v3uint %12592
      %12594 = OpBitwiseAnd %v3uint %12593 %348
      %12595 = OpExtInst %v3uint %1 UMin %12594 %500
      %12596 = OpConvertUToF %v3float %12595
      %12597 = OpExtInst %v3float %1 Fma %12504 %12596 %12592
      %12598 = OpExtInst %v3float %1 FClamp %12597 %102 %127
      %12599 = OpCompositeExtract %float %12598 0
      %12600 = OpFMul %float %12599 %float_127
      %12601 = OpConvertFToU %uint %12600
      %12602 = OpShiftLeftLogical %uint %12601 %uint_0
      %12603 = OpCompositeExtract %float %12598 1
      %12604 = OpFMul %float %12603 %float_127
      %12605 = OpConvertFToU %uint %12604
      %12606 = OpShiftLeftLogical %uint %12605 %uint_7
      %12607 = OpCompositeExtract %float %12598 2
      %12608 = OpFMul %float %12607 %float_63
      %12609 = OpConvertFToU %uint %12608
      %12610 = OpShiftLeftLogical %uint %12609 %uint_14
      %12611 = OpBitwiseOr %uint %12602 %12606
      %12612 = OpBitwiseOr %uint %12611 %12610
      %12613 = OpBitwiseAnd %uint %11409 %uint_65535
      %12614 = OpShiftLeftLogical %uint %12613 %uint_0
      %12615 = OpBitwiseOr %uint %uint_0 %12614
      %12616 = OpShiftLeftLogical %uint %12559 %uint_8
      %12617 = OpBitwiseOr %uint %12616 %uint_0
      %12618 = OpBitwiseAnd %uint %12615 %uint_65535
      %12619 = OpShiftLeftLogical %uint %12617 %uint_16
      %12620 = OpBitwiseOr %uint %12618 %12619
      %12621 = OpULessThan %bool %11474 %uint_3
               OpSelectionMerge %12622 None
               OpBranchConditional %12621 %12623 %12624
      %12624 = OpLabel
      %12625 = OpISub %uint %11474 %uint_3
      %12626 = OpCompositeExtract %uint %10703 0
      %12627 = OpCompositeExtract %uint %10703 1
      %12628 = OpCompositeConstruct %v3uint %12626 %12627 %12625
               OpImageWrite %10704 %12628 %12620 None
               OpBranch %12622
      %12623 = OpLabel
      %12629 = OpIEqual %bool %11474 %uint_0
      %12630 = OpSelect %uint %12629 %12620 %11473
      %12631 = OpIEqual %bool %11474 %uint_1
      %12632 = OpSelect %uint %12631 %12620 %11472
      %12633 = OpIEqual %bool %11474 %uint_2
      %12634 = OpSelect %uint %12633 %12620 %uint_0
               OpBranch %12622
      %12622 = OpLabel
      %12635 = OpPhi %uint %uint_0 %12624 %12634 %12623
      %12636 = OpPhi %uint %11472 %12624 %12632 %12623
      %12637 = OpPhi %uint %11473 %12624 %12630 %12623
      %12638 = OpIAdd %uint %11474 %uint_1
      %12639 = OpShiftLeftLogical %uint %12557 %uint_20
      %12640 = OpBitwiseOr %uint %12612 %12639
      %12641 = OpULessThan %bool %12638 %uint_3
               OpSelectionMerge %12642 None
               OpBranchConditional %12641 %12643 %12644
      %12644 = OpLabel
      %12645 = OpIAdd %uint %11474 %uint_4294967294
      %12646 = OpCompositeExtract %uint %10703 0
      %12647 = OpCompositeExtract %uint %10703 1
      %12648 = OpCompositeConstruct %v3uint %12646 %12647 %12645
               OpImageWrite %10704 %12648 %12640 None
               OpBranch %12642
      %12643 = OpLabel
      %12649 = OpIEqual %bool %12638 %uint_0
      %12650 = OpSelect %uint %12649 %12640 %12637
      %12651 = OpIEqual %bool %12638 %uint_1
      %12652 = OpSelect %uint %12651 %12640 %12636
      %12653 = OpIEqual %bool %12638 %uint_2
      %12654 = OpSelect %uint %12653 %12640 %12635
               OpBranch %12642
      %12642 = OpLabel
      %12655 = OpPhi %uint %12635 %12644 %12654 %12643
      %12656 = OpPhi %uint %12636 %12644 %12652 %12643
      %12657 = OpPhi %uint %12637 %12644 %12650 %12643
      %12658 = OpIAdd %uint %11474 %uint_2
               OpBranch %11486
      %11486 = OpLabel
      %12659 = OpPhi %uint %12495 %11490 %uint_0 %12642
      %12660 = OpPhi %uint %12496 %11490 %12655 %12642
      %12661 = OpPhi %uint %12497 %11490 %12656 %12642
      %12662 = OpPhi %uint %12498 %11490 %12657 %12642
      %12663 = OpPhi %uint %12499 %11490 %12658 %12642
      %12664 = OpLogicalNot %bool %11485
      %12665 = OpLogicalAnd %bool %12664 %11424
      %12666 = OpIEqual %bool %10951 %uint_0
      %12667 = OpLogicalAnd %bool %12665 %12666
               OpSelectionMerge %12668 None
               OpBranchConditional %12667 %12669 %12668
      %12669 = OpLabel
      %12670 = OpShiftRightLogical %uint %12659 %uint_11
      %12671 = OpBitwiseAnd %uint %12670 %uint_7
               OpSelectionMerge %12672 None
               OpSwitch %12671 %12672 0 %12673 3 %12674 5 %12675
      %12675 = OpLabel
               OpSelectionMerge %12676 None
               OpBranchConditional %true %12677 %12676
      %12677 = OpLabel
      %12678 = OpExtInst %v2float %1 FAbs %560
      %12679 = OpFSub %v2float %312 %12678
      %12680 = OpVectorShuffle %v3float %457 %12679 4 5 2
               OpBranch %12676
      %12676 = OpLabel
      %12681 = OpPhi %v3float %554 %12675 %12680 %12677
      %12682 = OpVectorShuffle %v2float %12681 %12681 0 1
               OpSelectionMerge %12683 None
               OpBranchConditional %true %12684 %12683
      %12684 = OpLabel
      %12685 = OpExtInst %v2float %1 FAbs %560
      %12686 = OpFSub %v2float %312 %12685
      %12687 = OpVectorShuffle %v3float %457 %12686 4 5 2
               OpBranch %12683
      %12683 = OpLabel
      %12688 = OpPhi %v3float %554 %12676 %12687 %12684
      %12689 = OpVectorShuffle %v2float %12688 %12688 0 1
      %12690 = OpVectorShuffle %v3float %10706 %457 0 1 2
      %12691 = OpExtInst %v3float %1 FClamp %12690 %102 %127
      %12692 = OpCompositeExtract %float %12691 0
               OpSelectionMerge %12693 None
               OpSwitch %uint_0 %12694
      %12694 = OpLabel
      %12695 = OpFOrdLessThan %bool %12692 %float_0_00313066994
               OpSelectionMerge %12696 None
               OpBranchConditional %12695 %12697 %12696
      %12697 = OpLabel
      %12698 = OpFMul %float %12692 %float_12_9200001
               OpBranch %12693
      %12696 = OpLabel
      %12699 = OpExtInst %float %1 Pow %12692 %float_0_416666657
      %12700 = OpExtInst %float %1 Fma %12699 %float_1_05499995 %float_n0_0549999997
               OpBranch %12693
      %12693 = OpLabel
      %12701 = OpPhi %float %12698 %12697 %12700 %12696
      %12702 = OpCompositeExtract %float %12691 1
               OpSelectionMerge %12703 None
               OpSwitch %uint_0 %12704
      %12704 = OpLabel
      %12705 = OpFOrdLessThan %bool %12702 %float_0_00313066994
               OpSelectionMerge %12706 None
               OpBranchConditional %12705 %12707 %12706
      %12707 = OpLabel
      %12708 = OpFMul %float %12702 %float_12_9200001
               OpBranch %12703
      %12706 = OpLabel
      %12709 = OpExtInst %float %1 Pow %12702 %float_0_416666657
      %12710 = OpExtInst %float %1 Fma %12709 %float_1_05499995 %float_n0_0549999997
               OpBranch %12703
      %12703 = OpLabel
      %12711 = OpPhi %float %12708 %12707 %12710 %12706
      %12712 = OpCompositeExtract %float %12691 2
               OpSelectionMerge %12713 None
               OpSwitch %uint_0 %12714
      %12714 = OpLabel
      %12715 = OpFOrdLessThan %bool %12712 %float_0_00313066994
               OpSelectionMerge %12716 None
               OpBranchConditional %12715 %12717 %12716
      %12717 = OpLabel
      %12718 = OpFMul %float %12712 %float_12_9200001
               OpBranch %12713
      %12716 = OpLabel
      %12719 = OpExtInst %float %1 Pow %12712 %float_0_416666657
      %12720 = OpExtInst %float %1 Fma %12719 %float_1_05499995 %float_n0_0549999997
               OpBranch %12713
      %12713 = OpLabel
      %12721 = OpPhi %float %12718 %12717 %12720 %12716
      %12722 = OpExtInst %float %1 FClamp %12701 %float_0 %float_1
      %12723 = OpFMul %float %12722 %float_255
      %12724 = OpConvertFToU %uint %12723
      %12725 = OpShiftLeftLogical %uint %12724 %uint_0
      %12726 = OpExtInst %float %1 FClamp %12711 %float_0 %float_1
      %12727 = OpFMul %float %12726 %float_255
      %12728 = OpConvertFToU %uint %12727
      %12729 = OpShiftLeftLogical %uint %12728 %uint_8
      %12730 = OpExtInst %float %1 FClamp %12721 %float_0 %float_1
      %12731 = OpFMul %float %12730 %float_255
      %12732 = OpConvertFToU %uint %12731
      %12733 = OpShiftLeftLogical %uint %12732 %uint_16
      %12734 = OpBitwiseOr %uint %12725 %12729
      %12735 = OpBitwiseOr %uint %12734 %12733
      %12736 = OpBitwiseOr %uint %12735 %uint_0
      %12737 = OpULessThan %bool %12663 %uint_3
               OpSelectionMerge %12738 None
               OpBranchConditional %12737 %12739 %12740
      %12740 = OpLabel
      %12741 = OpISub %uint %12663 %uint_3
      %12742 = OpCompositeExtract %uint %10703 0
      %12743 = OpCompositeExtract %uint %10703 1
      %12744 = OpCompositeConstruct %v3uint %12742 %12743 %12741
               OpImageWrite %10704 %12744 %12736 None
               OpBranch %12738
      %12739 = OpLabel
      %12745 = OpIEqual %bool %12663 %uint_0
      %12746 = OpSelect %uint %12745 %12736 %12662
      %12747 = OpIEqual %bool %12663 %uint_1
      %12748 = OpSelect %uint %12747 %12736 %12661
      %12749 = OpIEqual %bool %12663 %uint_2
      %12750 = OpSelect %uint %12749 %12736 %12660
               OpBranch %12738
      %12738 = OpLabel
      %12751 = OpPhi %uint %12660 %12740 %12750 %12739
      %12752 = OpPhi %uint %12661 %12740 %12748 %12739
      %12753 = OpPhi %uint %12662 %12740 %12746 %12739
      %12754 = OpIAdd %uint %12663 %uint_1
      %12755 = OpVectorTimesScalar %v2float %12682 %float_0_5
      %12756 = OpFAdd %v2float %12755 %149
      %12757 = OpVectorTimesScalar %v2float %12689 %float_0_5
      %12758 = OpFAdd %v2float %12757 %149
      %12759 = OpCompositeExtract %float %12756 0
      %12760 = OpCompositeExtract %float %12756 1
      %12761 = OpCompositeExtract %float %12758 0
      %12762 = OpCompositeExtract %float %12758 1
      %12763 = OpExtInst %float %1 FClamp %12759 %float_0 %float_1
      %12764 = OpFMul %float %12763 %float_255
      %12765 = OpConvertFToU %uint %12764
      %12766 = OpShiftLeftLogical %uint %12765 %uint_0
      %12767 = OpExtInst %float %1 FClamp %12760 %float_0 %float_1
      %12768 = OpFMul %float %12767 %float_255
      %12769 = OpConvertFToU %uint %12768
      %12770 = OpShiftLeftLogical %uint %12769 %uint_8
      %12771 = OpExtInst %float %1 FClamp %12761 %float_0 %float_1
      %12772 = OpFMul %float %12771 %float_255
      %12773 = OpConvertFToU %uint %12772
      %12774 = OpShiftLeftLogical %uint %12773 %uint_16
      %12775 = OpExtInst %float %1 FClamp %12762 %float_0 %float_1
      %12776 = OpFMul %float %12775 %float_255
      %12777 = OpConvertFToU %uint %12776
      %12778 = OpShiftLeftLogical %uint %12777 %uint_24
      %12779 = OpBitwiseOr %uint %12766 %12770
      %12780 = OpBitwiseOr %uint %12779 %12774
      %12781 = OpBitwiseOr %uint %12780 %12778
      %12782 = OpULessThan %bool %12754 %uint_3
               OpSelectionMerge %12783 None
               OpBranchConditional %12782 %12784 %12785
      %12785 = OpLabel
      %12786 = OpIAdd %uint %12663 %uint_4294967294
      %12787 = OpCompositeExtract %uint %10703 0
      %12788 = OpCompositeExtract %uint %10703 1
      %12789 = OpCompositeConstruct %v3uint %12787 %12788 %12786
               OpImageWrite %10704 %12789 %12781 None
               OpBranch %12783
      %12784 = OpLabel
      %12790 = OpIEqual %bool %12754 %uint_0
      %12791 = OpSelect %uint %12790 %12781 %12753
      %12792 = OpIEqual %bool %12754 %uint_1
      %12793 = OpSelect %uint %12792 %12781 %12752
      %12794 = OpIEqual %bool %12754 %uint_2
      %12795 = OpSelect %uint %12794 %12781 %12751
               OpBranch %12783
      %12783 = OpLabel
      %12796 = OpPhi %uint %12751 %12785 %12795 %12784
      %12797 = OpPhi %uint %12752 %12785 %12793 %12784
      %12798 = OpPhi %uint %12753 %12785 %12791 %12784
      %12799 = OpShiftRightLogical %uint %12659 %uint_2
      %12800 = OpBitwiseAnd %uint %12799 %uint_7
      %12801 = OpIEqual %bool %12800 %uint_3
               OpSelectionMerge %12802 None
               OpBranchConditional %12801 %12803 %12802
      %12803 = OpLabel
      %12804 = OpBitwiseAnd %uint %10952 %uint_4294967292
      %12805 = OpBitwiseOr %uint %12804 %uint_3
      %12806 = OpExtInst %float %1 Fma %10713 %float_255 %float_0_5
      %12807 = OpConvertFToU %uint %12806
      %12808 = OpBitwiseAnd %uint %12805 %uint_3
      %12809 = OpShiftLeftLogical %uint %12807 %uint_24
      %12810 = OpBitwiseOr %uint %12808 %12809
      %12811 = OpBitwiseOr %uint %12810 %uint_16711680
      %12812 = OpCompositeExtract %float %10706 0
      %12813 = OpCompositeExtract %float %10706 1
      %12814 = OpCompositeExtract %float %10706 2
      %12815 = OpCompositeConstruct %v4float %12812 %12813 %12814 %float_0
      %12816 = OpVectorShuffle %v3float %12815 %12815 0 1 2
      %12817 = OpExtInst %v3float %1 FClamp %12816 %102 %127
      %12818 = OpCompositeExtract %float %12817 0
               OpSelectionMerge %12819 None
               OpSwitch %uint_0 %12820
      %12820 = OpLabel
      %12821 = OpFOrdLessThan %bool %12818 %float_0_00313066994
               OpSelectionMerge %12822 None
               OpBranchConditional %12821 %12823 %12822
      %12823 = OpLabel
      %12824 = OpFMul %float %12818 %float_12_9200001
               OpBranch %12819
      %12822 = OpLabel
      %12825 = OpExtInst %float %1 Pow %12818 %float_0_416666657
      %12826 = OpExtInst %float %1 Fma %12825 %float_1_05499995 %float_n0_0549999997
               OpBranch %12819
      %12819 = OpLabel
      %12827 = OpPhi %float %12824 %12823 %12826 %12822
      %12828 = OpCompositeExtract %float %12817 1
               OpSelectionMerge %12829 None
               OpSwitch %uint_0 %12830
      %12830 = OpLabel
      %12831 = OpFOrdLessThan %bool %12828 %float_0_00313066994
               OpSelectionMerge %12832 None
               OpBranchConditional %12831 %12833 %12832
      %12833 = OpLabel
      %12834 = OpFMul %float %12828 %float_12_9200001
               OpBranch %12829
      %12832 = OpLabel
      %12835 = OpExtInst %float %1 Pow %12828 %float_0_416666657
      %12836 = OpExtInst %float %1 Fma %12835 %float_1_05499995 %float_n0_0549999997
               OpBranch %12829
      %12829 = OpLabel
      %12837 = OpPhi %float %12834 %12833 %12836 %12832
      %12838 = OpCompositeExtract %float %12817 2
               OpSelectionMerge %12839 None
               OpSwitch %uint_0 %12840
      %12840 = OpLabel
      %12841 = OpFOrdLessThan %bool %12838 %float_0_00313066994
               OpSelectionMerge %12842 None
               OpBranchConditional %12841 %12843 %12842
      %12843 = OpLabel
      %12844 = OpFMul %float %12838 %float_12_9200001
               OpBranch %12839
      %12842 = OpLabel
      %12845 = OpExtInst %float %1 Pow %12838 %float_0_416666657
      %12846 = OpExtInst %float %1 Fma %12845 %float_1_05499995 %float_n0_0549999997
               OpBranch %12839
      %12839 = OpLabel
      %12847 = OpPhi %float %12844 %12843 %12846 %12842
      %12848 = OpExtInst %float %1 FClamp %12827 %float_0 %float_1
      %12849 = OpFMul %float %12848 %float_255
      %12850 = OpConvertFToU %uint %12849
      %12851 = OpShiftLeftLogical %uint %12850 %uint_0
      %12852 = OpExtInst %float %1 FClamp %12837 %float_0 %float_1
      %12853 = OpFMul %float %12852 %float_255
      %12854 = OpConvertFToU %uint %12853
      %12855 = OpShiftLeftLogical %uint %12854 %uint_8
      %12856 = OpExtInst %float %1 FClamp %12847 %float_0 %float_1
      %12857 = OpFMul %float %12856 %float_255
      %12858 = OpConvertFToU %uint %12857
      %12859 = OpShiftLeftLogical %uint %12858 %uint_16
      %12860 = OpBitwiseOr %uint %12851 %12855
      %12861 = OpBitwiseOr %uint %12860 %12859
      %12862 = OpBitwiseOr %uint %12861 %uint_0
               OpBranch %12802
      %12802 = OpLabel
      %12863 = OpPhi %uint %456 %12783 %12862 %12839
      %12864 = OpPhi %uint %10952 %12783 %12811 %12839
               OpBranch %12672
      %12674 = OpLabel
      %12865 = OpCompositeExtract %float %10706 0
      %12866 = OpCompositeExtract %float %10706 1
      %12867 = OpCompositeExtract %float %10706 2
      %12868 = OpCompositeConstruct %v4float %12865 %12866 %12867 %float_0
      %12869 = OpVectorShuffle %v3float %12868 %12868 0 1 2
      %12870 = OpExtInst %v3float %1 FClamp %12869 %102 %127
      %12871 = OpCompositeExtract %float %12870 0
               OpSelectionMerge %12872 None
               OpSwitch %uint_0 %12873
      %12873 = OpLabel
      %12874 = OpFOrdLessThan %bool %12871 %float_0_00313066994
               OpSelectionMerge %12875 None
               OpBranchConditional %12874 %12876 %12875
      %12876 = OpLabel
      %12877 = OpFMul %float %12871 %float_12_9200001
               OpBranch %12872
      %12875 = OpLabel
      %12878 = OpExtInst %float %1 Pow %12871 %float_0_416666657
      %12879 = OpExtInst %float %1 Fma %12878 %float_1_05499995 %float_n0_0549999997
               OpBranch %12872
      %12872 = OpLabel
      %12880 = OpPhi %float %12877 %12876 %12879 %12875
      %12881 = OpCompositeExtract %float %12870 1
               OpSelectionMerge %12882 None
               OpSwitch %uint_0 %12883
      %12883 = OpLabel
      %12884 = OpFOrdLessThan %bool %12881 %float_0_00313066994
               OpSelectionMerge %12885 None
               OpBranchConditional %12884 %12886 %12885
      %12886 = OpLabel
      %12887 = OpFMul %float %12881 %float_12_9200001
               OpBranch %12882
      %12885 = OpLabel
      %12888 = OpExtInst %float %1 Pow %12881 %float_0_416666657
      %12889 = OpExtInst %float %1 Fma %12888 %float_1_05499995 %float_n0_0549999997
               OpBranch %12882
      %12882 = OpLabel
      %12890 = OpPhi %float %12887 %12886 %12889 %12885
      %12891 = OpCompositeExtract %float %12870 2
               OpSelectionMerge %12892 None
               OpSwitch %uint_0 %12893
      %12893 = OpLabel
      %12894 = OpFOrdLessThan %bool %12891 %float_0_00313066994
               OpSelectionMerge %12895 None
               OpBranchConditional %12894 %12896 %12895
      %12896 = OpLabel
      %12897 = OpFMul %float %12891 %float_12_9200001
               OpBranch %12892
      %12895 = OpLabel
      %12898 = OpExtInst %float %1 Pow %12891 %float_0_416666657
      %12899 = OpExtInst %float %1 Fma %12898 %float_1_05499995 %float_n0_0549999997
               OpBranch %12892
      %12892 = OpLabel
      %12900 = OpPhi %float %12897 %12896 %12899 %12895
      %12901 = OpExtInst %float %1 FClamp %12880 %float_0 %float_1
      %12902 = OpFMul %float %12901 %float_255
      %12903 = OpConvertFToU %uint %12902
      %12904 = OpShiftLeftLogical %uint %12903 %uint_0
      %12905 = OpExtInst %float %1 FClamp %12890 %float_0 %float_1
      %12906 = OpFMul %float %12905 %float_255
      %12907 = OpConvertFToU %uint %12906
      %12908 = OpShiftLeftLogical %uint %12907 %uint_8
      %12909 = OpExtInst %float %1 FClamp %12900 %float_0 %float_1
      %12910 = OpFMul %float %12909 %float_255
      %12911 = OpConvertFToU %uint %12910
      %12912 = OpShiftLeftLogical %uint %12911 %uint_16
      %12913 = OpBitwiseOr %uint %12904 %12908
      %12914 = OpBitwiseOr %uint %12913 %12912
      %12915 = OpBitwiseOr %uint %12914 %uint_0
      %12916 = OpULessThan %bool %12663 %uint_3
               OpSelectionMerge %12917 None
               OpBranchConditional %12916 %12918 %12919
      %12919 = OpLabel
      %12920 = OpISub %uint %12663 %uint_3
      %12921 = OpCompositeExtract %uint %10703 0
      %12922 = OpCompositeExtract %uint %10703 1
      %12923 = OpCompositeConstruct %v3uint %12921 %12922 %12920
               OpImageWrite %10704 %12923 %12915 None
               OpBranch %12917
      %12918 = OpLabel
      %12924 = OpIEqual %bool %12663 %uint_0
      %12925 = OpSelect %uint %12924 %12915 %12662
      %12926 = OpIEqual %bool %12663 %uint_1
      %12927 = OpSelect %uint %12926 %12915 %12661
      %12928 = OpIEqual %bool %12663 %uint_2
      %12929 = OpSelect %uint %12928 %12915 %12660
               OpBranch %12917
      %12917 = OpLabel
      %12930 = OpPhi %uint %12660 %12919 %12929 %12918
      %12931 = OpPhi %uint %12661 %12919 %12927 %12918
      %12932 = OpPhi %uint %12662 %12919 %12925 %12918
      %12933 = OpIAdd %uint %12663 %uint_1
      %12934 = OpExtInst %float %1 FClamp %10709 %float_0 %float_1
      %12935 = OpFMul %float %12934 %float_255
      %12936 = OpConvertFToU %uint %12935
      %12937 = OpShiftLeftLogical %uint %12936 %uint_8
      %12938 = OpExtInst %float %1 FClamp %10713 %float_0 %float_1
      %12939 = OpFMul %float %12938 %float_255
      %12940 = OpConvertFToU %uint %12939
      %12941 = OpShiftLeftLogical %uint %12940 %uint_16
      %12942 = OpExtInst %float %1 FClamp %10715 %float_0 %float_1
      %12943 = OpFMul %float %12942 %float_255
      %12944 = OpConvertFToU %uint %12943
      %12945 = OpShiftLeftLogical %uint %12944 %uint_24
      %12946 = OpBitwiseOr %uint %uint_0 %12937
      %12947 = OpBitwiseOr %uint %12946 %12941
      %12948 = OpBitwiseOr %uint %12947 %12945
      %12949 = OpULessThan %bool %12933 %uint_3
               OpSelectionMerge %12950 None
               OpBranchConditional %12949 %12951 %12952
      %12952 = OpLabel
      %12953 = OpIAdd %uint %12663 %uint_4294967294
      %12954 = OpCompositeExtract %uint %10703 0
      %12955 = OpCompositeExtract %uint %10703 1
      %12956 = OpCompositeConstruct %v3uint %12954 %12955 %12953
               OpImageWrite %10704 %12956 %12948 None
               OpBranch %12950
      %12951 = OpLabel
      %12957 = OpIEqual %bool %12933 %uint_0
      %12958 = OpSelect %uint %12957 %12948 %12932
      %12959 = OpIEqual %bool %12933 %uint_1
      %12960 = OpSelect %uint %12959 %12948 %12931
      %12961 = OpIEqual %bool %12933 %uint_2
      %12962 = OpSelect %uint %12961 %12948 %12930
               OpBranch %12950
      %12950 = OpLabel
      %12963 = OpPhi %uint %12930 %12952 %12962 %12951
      %12964 = OpPhi %uint %12931 %12952 %12960 %12951
      %12965 = OpPhi %uint %12932 %12952 %12958 %12951
               OpBranch %12672
      %12673 = OpLabel
      %12966 = OpVectorShuffle %v3float %10706 %457 0 1 2
      %12967 = OpFSub %float %8387 %float_0_5
      %12968 = OpFMul %float %12967 %float_0_00787401572
      %12969 = OpFMul %float %12967 %float_0_0158730168
      %12970 = OpCompositeConstruct %v3float %12968 %12968 %12969
      %12971 = OpExtInst %v3float %1 FClamp %12966 %102 %127
      %12972 = OpCompositeExtract %float %12971 0
               OpSelectionMerge %12973 None
               OpSwitch %uint_0 %12974
      %12974 = OpLabel
      %12975 = OpFOrdLessThan %bool %12972 %float_0_00313066994
               OpSelectionMerge %12976 None
               OpBranchConditional %12975 %12977 %12976
      %12977 = OpLabel
      %12978 = OpFMul %float %12972 %float_12_9200001
               OpBranch %12973
      %12976 = OpLabel
      %12979 = OpExtInst %float %1 Pow %12972 %float_0_416666657
      %12980 = OpExtInst %float %1 Fma %12979 %float_1_05499995 %float_n0_0549999997
               OpBranch %12973
      %12973 = OpLabel
      %12981 = OpPhi %float %12978 %12977 %12980 %12976
      %12982 = OpCompositeExtract %float %12971 1
               OpSelectionMerge %12983 None
               OpSwitch %uint_0 %12984
      %12984 = OpLabel
      %12985 = OpFOrdLessThan %bool %12982 %float_0_00313066994
               OpSelectionMerge %12986 None
               OpBranchConditional %12985 %12987 %12986
      %12987 = OpLabel
      %12988 = OpFMul %float %12982 %float_12_9200001
               OpBranch %12983
      %12986 = OpLabel
      %12989 = OpExtInst %float %1 Pow %12982 %float_0_416666657
      %12990 = OpExtInst %float %1 Fma %12989 %float_1_05499995 %float_n0_0549999997
               OpBranch %12983
      %12983 = OpLabel
      %12991 = OpPhi %float %12988 %12987 %12990 %12986
      %12992 = OpCompositeExtract %float %12971 2
               OpSelectionMerge %12993 None
               OpSwitch %uint_0 %12994
      %12994 = OpLabel
      %12995 = OpFOrdLessThan %bool %12992 %float_0_00313066994
               OpSelectionMerge %12996 None
               OpBranchConditional %12995 %12997 %12996
      %12997 = OpLabel
      %12998 = OpFMul %float %12992 %float_12_9200001
               OpBranch %12993
      %12996 = OpLabel
      %12999 = OpExtInst %float %1 Pow %12992 %float_0_416666657
      %13000 = OpExtInst %float %1 Fma %12999 %float_1_05499995 %float_n0_0549999997
               OpBranch %12993
      %12993 = OpLabel
      %13001 = OpPhi %float %12998 %12997 %13000 %12996
      %13002 = OpCompositeConstruct %v3float %12981 %12991 %13001
      %13003 = OpBitcast %v3uint %13002
      %13004 = OpBitwiseAnd %v3uint %13003 %348
      %13005 = OpExtInst %v3uint %1 UMin %13004 %500
      %13006 = OpConvertUToF %v3float %13005
      %13007 = OpExtInst %v3float %1 Fma %12970 %13006 %13002
      %13008 = OpExtInst %v3float %1 FClamp %13007 %102 %127
      %13009 = OpCompositeExtract %float %13008 0
      %13010 = OpFMul %float %13009 %float_127
      %13011 = OpConvertFToU %uint %13010
      %13012 = OpShiftLeftLogical %uint %13011 %uint_0
      %13013 = OpCompositeExtract %float %13008 1
      %13014 = OpFMul %float %13013 %float_127
      %13015 = OpConvertFToU %uint %13014
      %13016 = OpShiftLeftLogical %uint %13015 %uint_7
      %13017 = OpCompositeExtract %float %13008 2
      %13018 = OpFMul %float %13017 %float_63
      %13019 = OpConvertFToU %uint %13018
      %13020 = OpShiftLeftLogical %uint %13019 %uint_14
      %13021 = OpBitwiseOr %uint %13012 %13016
      %13022 = OpBitwiseOr %uint %13021 %13020
      %13023 = OpVectorShuffle %v3float %10716 %10716 0 1 2
      %13024 = OpExtInst %v3float %1 FClamp %13023 %102 %127
      %13025 = OpCompositeExtract %float %13024 0
               OpSelectionMerge %13026 None
               OpSwitch %uint_0 %13027
      %13027 = OpLabel
      %13028 = OpFOrdLessThan %bool %13025 %float_0_00313066994
               OpSelectionMerge %13029 None
               OpBranchConditional %13028 %13030 %13029
      %13030 = OpLabel
      %13031 = OpFMul %float %13025 %float_12_9200001
               OpBranch %13026
      %13029 = OpLabel
      %13032 = OpExtInst %float %1 Pow %13025 %float_0_416666657
      %13033 = OpExtInst %float %1 Fma %13032 %float_1_05499995 %float_n0_0549999997
               OpBranch %13026
      %13026 = OpLabel
      %13034 = OpPhi %float %13031 %13030 %13033 %13029
      %13035 = OpCompositeExtract %float %13024 1
               OpSelectionMerge %13036 None
               OpSwitch %uint_0 %13037
      %13037 = OpLabel
      %13038 = OpFOrdLessThan %bool %13035 %float_0_00313066994
               OpSelectionMerge %13039 None
               OpBranchConditional %13038 %13040 %13039
      %13040 = OpLabel
      %13041 = OpFMul %float %13035 %float_12_9200001
               OpBranch %13036
      %13039 = OpLabel
      %13042 = OpExtInst %float %1 Pow %13035 %float_0_416666657
      %13043 = OpExtInst %float %1 Fma %13042 %float_1_05499995 %float_n0_0549999997
               OpBranch %13036
      %13036 = OpLabel
      %13044 = OpPhi %float %13041 %13040 %13043 %13039
      %13045 = OpCompositeExtract %float %13024 2
               OpSelectionMerge %13046 None
               OpSwitch %uint_0 %13047
      %13047 = OpLabel
      %13048 = OpFOrdLessThan %bool %13045 %float_0_00313066994
               OpSelectionMerge %13049 None
               OpBranchConditional %13048 %13050 %13049
      %13050 = OpLabel
      %13051 = OpFMul %float %13045 %float_12_9200001
               OpBranch %13046
      %13049 = OpLabel
      %13052 = OpExtInst %float %1 Pow %13045 %float_0_416666657
      %13053 = OpExtInst %float %1 Fma %13052 %float_1_05499995 %float_n0_0549999997
               OpBranch %13046
      %13046 = OpLabel
      %13054 = OpPhi %float %13051 %13050 %13053 %13049
      %13055 = OpCompositeConstruct %v3float %13034 %13044 %13054
      %13056 = OpBitcast %v3uint %13055
      %13057 = OpBitwiseAnd %v3uint %13056 %348
      %13058 = OpExtInst %v3uint %1 UMin %13057 %500
      %13059 = OpConvertUToF %v3float %13058
      %13060 = OpExtInst %v3float %1 Fma %12970 %13059 %13055
      %13061 = OpExtInst %v3float %1 FClamp %13060 %102 %127
      %13062 = OpCompositeExtract %float %13061 0
      %13063 = OpFMul %float %13062 %float_127
      %13064 = OpConvertFToU %uint %13063
      %13065 = OpShiftLeftLogical %uint %13064 %uint_0
      %13066 = OpCompositeExtract %float %13061 1
      %13067 = OpFMul %float %13066 %float_127
      %13068 = OpConvertFToU %uint %13067
      %13069 = OpShiftLeftLogical %uint %13068 %uint_7
      %13070 = OpCompositeExtract %float %13061 2
      %13071 = OpFMul %float %13070 %float_63
      %13072 = OpConvertFToU %uint %13071
      %13073 = OpShiftLeftLogical %uint %13072 %uint_14
      %13074 = OpBitwiseOr %uint %13065 %13069
      %13075 = OpBitwiseOr %uint %13074 %13073
      %13076 = OpShiftLeftLogical %uint %13022 %uint_12
      %13077 = OpBitwiseAnd %uint %13076 %uint_4294963200
      %13078 = OpBitwiseAnd %uint %13075 %uint_4095
      %13079 = OpBitwiseOr %uint %13077 %13078
      %13080 = OpShiftRightLogical %uint %13075 %uint_12
      %13081 = OpBitwiseAnd %uint %13080 %uint_255
      %13082 = OpULessThan %bool %12663 %uint_3
               OpSelectionMerge %13083 None
               OpBranchConditional %13082 %13084 %13085
      %13085 = OpLabel
      %13086 = OpISub %uint %12663 %uint_3
      %13087 = OpCompositeExtract %uint %10703 0
      %13088 = OpCompositeExtract %uint %10703 1
      %13089 = OpCompositeConstruct %v3uint %13087 %13088 %13086
               OpImageWrite %10704 %13089 %13079 None
               OpBranch %13083
      %13084 = OpLabel
      %13090 = OpIEqual %bool %12663 %uint_0
      %13091 = OpSelect %uint %13090 %13079 %12662
      %13092 = OpIEqual %bool %12663 %uint_1
      %13093 = OpSelect %uint %13092 %13079 %12661
      %13094 = OpIEqual %bool %12663 %uint_2
      %13095 = OpSelect %uint %13094 %13079 %12660
               OpBranch %13083
      %13083 = OpLabel
      %13096 = OpPhi %uint %12660 %13085 %13095 %13084
      %13097 = OpPhi %uint %12661 %13085 %13093 %13084
      %13098 = OpPhi %uint %12662 %13085 %13091 %13084
      %13099 = OpIAdd %uint %12663 %uint_1
      %13100 = OpFAdd %float %10715 %float_1
      %13101 = OpFMul %float %13100 %float_0_5
      %13102 = OpExtInst %float %1 FClamp %13101 %float_0 %float_1
      %13103 = OpFMul %float %13102 %float_255
      %13104 = OpConvertFToU %uint %13103
      %13105 = OpShiftLeftLogical %uint %13104 %uint_16
      %13106 = OpBitwiseOr %uint %uint_0 %13105
      %13107 = OpBitwiseOr %uint %13106 %uint_2130706432
      %13108 = OpBitwiseOr %uint %13081 %13107
      %13109 = OpULessThan %bool %13099 %uint_3
               OpSelectionMerge %13110 None
               OpBranchConditional %13109 %13111 %13112
      %13112 = OpLabel
      %13113 = OpIAdd %uint %12663 %uint_4294967294
      %13114 = OpCompositeExtract %uint %10703 0
      %13115 = OpCompositeExtract %uint %10703 1
      %13116 = OpCompositeConstruct %v3uint %13114 %13115 %13113
               OpImageWrite %10704 %13116 %13108 None
               OpBranch %13110
      %13111 = OpLabel
      %13117 = OpIEqual %bool %13099 %uint_0
      %13118 = OpSelect %uint %13117 %13108 %13098
      %13119 = OpIEqual %bool %13099 %uint_1
      %13120 = OpSelect %uint %13119 %13108 %13097
      %13121 = OpIEqual %bool %13099 %uint_2
      %13122 = OpSelect %uint %13121 %13108 %13096
               OpBranch %13110
      %13110 = OpLabel
      %13123 = OpPhi %uint %13096 %13112 %13122 %13111
      %13124 = OpPhi %uint %13097 %13112 %13120 %13111
      %13125 = OpPhi %uint %13098 %13112 %13118 %13111
      %13126 = OpIAdd %uint %12663 %uint_2
      %13127 = OpShiftRightLogical %uint %12659 %uint_7
      %13128 = OpBitwiseAnd %uint %13127 %uint_1
      %13129 = OpINotEqual %bool %13128 %uint_0
      %13130 = OpShiftRightLogical %uint %12659 %uint_6
      %13131 = OpBitwiseAnd %uint %13130 %uint_1
      %13132 = OpINotEqual %bool %13131 %uint_0
      %13133 = OpLogicalOr %bool %13129 %13132
               OpSelectionMerge %13134 None
               OpBranchConditional %13133 %13135 %13134
      %13135 = OpLabel
      %13136 = OpExtInst %float %1 NMax %float_0 %float_0
      %13137 = OpExtInst %float %1 NMax %float_0 %13136
      %13138 = OpFOrdGreaterThan %bool %13137 %float_0
      %13139 = OpCompositeConstruct %v3bool %13138 %13138 %13138
      %13140 = OpSelect %v3float %13139 %102 %127
      %13141 = OpDot %float %13140 %336
      %13142 = OpDot %float %13140 %337
      %13143 = OpCompositeConstruct %v3float %549 %13141 %13142
      %13144 = OpExtInst %v3float %1 Fma %13143 %321 %322
      %13145 = OpCompositeExtract %float %13144 1
      %13146 = OpCompositeExtract %float %13144 2
      %13147 = OpExtInst %float %1 FClamp %13145 %float_0 %float_1
      %13148 = OpFMul %float %13147 %float_255
      %13149 = OpConvertFToU %uint %13148
      %13150 = OpShiftLeftLogical %uint %13149 %uint_0
      %13151 = OpExtInst %float %1 FClamp %13146 %float_0 %float_1
      %13152 = OpFMul %float %13151 %float_255
      %13153 = OpConvertFToU %uint %13152
      %13154 = OpShiftLeftLogical %uint %13153 %uint_8
      %13155 = OpBitwiseOr %uint %13150 %13154
      %13156 = OpBitwiseOr %uint %13155 %uint_0
      %13157 = OpBitwiseOr %uint %13156 %uint_0
      %13158 = OpBitwiseOr %uint %uint_0 %13157
      %13159 = OpULessThan %bool %13126 %uint_3
               OpSelectionMerge %13160 None
               OpBranchConditional %13159 %13161 %13162
      %13162 = OpLabel
      %13163 = OpIAdd %uint %12663 %uint_4294967295
      %13164 = OpCompositeExtract %uint %10703 0
      %13165 = OpCompositeExtract %uint %10703 1
      %13166 = OpCompositeConstruct %v3uint %13164 %13165 %13163
               OpImageWrite %10704 %13166 %13158 None
               OpBranch %13160
      %13161 = OpLabel
      %13167 = OpIEqual %bool %13126 %uint_0
      %13168 = OpSelect %uint %13167 %13158 %13125
      %13169 = OpIEqual %bool %13126 %uint_1
      %13170 = OpSelect %uint %13169 %13158 %13124
      %13171 = OpIEqual %bool %13126 %uint_2
      %13172 = OpSelect %uint %13171 %13158 %13123
               OpBranch %13160
      %13160 = OpLabel
      %13173 = OpPhi %uint %13123 %13162 %13172 %13161
      %13174 = OpPhi %uint %13124 %13162 %13170 %13161
      %13175 = OpPhi %uint %13125 %13162 %13168 %13161
      %13176 = OpIAdd %uint %12663 %uint_3
               OpBranch %13134
      %13134 = OpLabel
      %13177 = OpPhi %uint %13123 %13110 %13173 %13160
      %13178 = OpPhi %uint %13124 %13110 %13174 %13160
      %13179 = OpPhi %uint %13125 %13110 %13175 %13160
      %13180 = OpPhi %uint %13126 %13110 %13176 %13160
      %13181 = OpShiftRightLogical %uint %12659 %uint_2
      %13182 = OpBitwiseAnd %uint %13181 %uint_7
      %13183 = OpINotEqual %bool %13182 %uint_0
               OpSelectionMerge %13184 None
               OpBranchConditional %13183 %13185 %13184
      %13185 = OpLabel
      %13186 = OpINotEqual %bool %13182 %uint_4
               OpSelectionMerge %13187 None
               OpBranchConditional %13186 %13188 %13187
      %13188 = OpLabel
      %13189 = OpBitwiseAnd %uint %10952 %uint_4294967292
      %13190 = OpBitwiseAnd %uint %13182 %uint_3
      %13191 = OpBitwiseOr %uint %13189 %13190
      %13192 = OpIEqual %bool %13182 %uint_1
               OpSelectionMerge %13193 None
               OpBranchConditional %13192 %13194 %13195
      %13195 = OpLabel
      %13196 = OpIEqual %bool %13182 %uint_3
               OpSelectionMerge %13197 None
               OpBranchConditional %13196 %13198 %13199
      %13199 = OpLabel
      %13200 = OpBitwiseAnd %uint %13191 %uint_3
      %13201 = OpExtInst %uint %1 PackHalf2x16 %557
      %13202 = OpShiftRightLogical %uint %13201 %uint_5
      %13203 = OpBitwiseAnd %uint %13202 %uint_1023
      %13204 = OpShiftLeftLogical %uint %13203 %uint_22
      %13205 = OpShiftLeftLogical %uint %13203 %uint_12
      %13206 = OpBitwiseOr %uint %13204 %13205
      %13207 = OpShiftLeftLogical %uint %13203 %uint_2
      %13208 = OpBitwiseOr %uint %13206 %13207
      %13209 = OpBitwiseOr %uint %13200 %13208
               OpBranch %13197
      %13198 = OpLabel
      %13210 = OpExtInst %float %1 Fma %459 %float_255 %float_0_5
      %13211 = OpConvertFToU %uint %13210
      %13212 = OpBitwiseAnd %uint %13191 %uint_3
      %13213 = OpShiftLeftLogical %uint %13211 %uint_24
      %13214 = OpBitwiseOr %uint %13212 %13213
      %13215 = OpBitwiseOr %uint %13214 %uint_0
               OpBranch %13197
      %13197 = OpLabel
      %13216 = OpPhi %uint %13209 %13199 %13215 %13198
               OpBranch %13193
      %13194 = OpLabel
      %13217 = OpExtInst %float %1 FAbs %459
      %13218 = OpFSub %float %float_1 %13217
      %13219 = OpBitwiseAnd %uint %13191 %uint_3
      %13220 = OpExtInst %float %1 FClamp %13218 %float_0 %float_1
      %13221 = OpFMul %float %13220 %float_255
      %13222 = OpConvertFToU %uint %13221
      %13223 = OpShiftLeftLogical %uint %13222 %uint_2
      %13224 = OpBitwiseOr %uint %13219 %13223
               OpBranch %13193
      %13193 = OpLabel
      %13225 = OpPhi %uint %13216 %13197 %13224 %13194
      %13226 = OpCompositeExtract %float %10706 0
      %13227 = OpCompositeExtract %float %10706 1
      %13228 = OpCompositeExtract %float %10706 2
      %13229 = OpCompositeConstruct %v4float %13226 %13227 %13228 %float_0
      %13230 = OpVectorShuffle %v3float %13229 %13229 0 1 2
      %13231 = OpExtInst %v3float %1 FClamp %13230 %102 %127
      %13232 = OpCompositeExtract %float %13231 0
               OpSelectionMerge %13233 None
               OpSwitch %uint_0 %13234
      %13234 = OpLabel
      %13235 = OpFOrdLessThan %bool %13232 %float_0_00313066994
               OpSelectionMerge %13236 None
               OpBranchConditional %13235 %13237 %13236
      %13237 = OpLabel
      %13238 = OpFMul %float %13232 %float_12_9200001
               OpBranch %13233
      %13236 = OpLabel
      %13239 = OpExtInst %float %1 Pow %13232 %float_0_416666657
      %13240 = OpExtInst %float %1 Fma %13239 %float_1_05499995 %float_n0_0549999997
               OpBranch %13233
      %13233 = OpLabel
      %13241 = OpPhi %float %13238 %13237 %13240 %13236
      %13242 = OpCompositeExtract %float %13231 1
               OpSelectionMerge %13243 None
               OpSwitch %uint_0 %13244
      %13244 = OpLabel
      %13245 = OpFOrdLessThan %bool %13242 %float_0_00313066994
               OpSelectionMerge %13246 None
               OpBranchConditional %13245 %13247 %13246
      %13247 = OpLabel
      %13248 = OpFMul %float %13242 %float_12_9200001
               OpBranch %13243
      %13246 = OpLabel
      %13249 = OpExtInst %float %1 Pow %13242 %float_0_416666657
      %13250 = OpExtInst %float %1 Fma %13249 %float_1_05499995 %float_n0_0549999997
               OpBranch %13243
      %13243 = OpLabel
      %13251 = OpPhi %float %13248 %13247 %13250 %13246
      %13252 = OpCompositeExtract %float %13231 2
               OpSelectionMerge %13253 None
               OpSwitch %uint_0 %13254
      %13254 = OpLabel
      %13255 = OpFOrdLessThan %bool %13252 %float_0_00313066994
               OpSelectionMerge %13256 None
               OpBranchConditional %13255 %13257 %13256
      %13257 = OpLabel
      %13258 = OpFMul %float %13252 %float_12_9200001
               OpBranch %13253
      %13256 = OpLabel
      %13259 = OpExtInst %float %1 Pow %13252 %float_0_416666657
      %13260 = OpExtInst %float %1 Fma %13259 %float_1_05499995 %float_n0_0549999997
               OpBranch %13253
      %13253 = OpLabel
      %13261 = OpPhi %float %13258 %13257 %13260 %13256
      %13262 = OpExtInst %float %1 FClamp %13241 %float_0 %float_1
      %13263 = OpFMul %float %13262 %float_255
      %13264 = OpConvertFToU %uint %13263
      %13265 = OpShiftLeftLogical %uint %13264 %uint_0
      %13266 = OpExtInst %float %1 FClamp %13251 %float_0 %float_1
      %13267 = OpFMul %float %13266 %float_255
      %13268 = OpConvertFToU %uint %13267
      %13269 = OpShiftLeftLogical %uint %13268 %uint_8
      %13270 = OpExtInst %float %1 FClamp %13261 %float_0 %float_1
      %13271 = OpFMul %float %13270 %float_255
      %13272 = OpConvertFToU %uint %13271
      %13273 = OpShiftLeftLogical %uint %13272 %uint_16
      %13274 = OpBitwiseOr %uint %13265 %13269
      %13275 = OpBitwiseOr %uint %13274 %13273
      %13276 = OpBitwiseOr %uint %13275 %uint_0
               OpBranch %13187
      %13187 = OpLabel
      %13277 = OpPhi %uint %456 %13185 %13276 %13253
      %13278 = OpPhi %uint %10952 %13185 %13225 %13253
      %13279 = OpIEqual %bool %13182 %uint_3
      %13280 = OpIAdd %uint %13180 %uint_1
               OpSelectionMerge %13281 None
               OpBranchConditional %13279 %13282 %13283
      %13283 = OpLabel
      %13284 = OpShiftRightLogical %uint %12659 %uint_10
      %13285 = OpBitwiseAnd %uint %13284 %uint_1
      %13286 = OpINotEqual %bool %13285 %uint_0
      %13287 = OpIEqual %bool %13182 %uint_2
      %13288 = OpLogicalAnd %bool %13286 %13287
               OpSelectionMerge %13289 None
               OpBranchConditional %13288 %13290 %13289
      %13290 = OpLabel
      %13291 = OpExtInst %v3float %1 NMax %554 %102
      %13292 = OpVectorShuffle %v4float %457 %13291 4 5 6 3
               OpBranch %13289
      %13289 = OpLabel
      %13293 = OpPhi %v4float %457 %13283 %13292 %13290
      %13294 = OpCompositeExtract %float %13293 0
      %13295 = OpCompositeConstruct %v2float %13294 %float_0
      %13296 = OpExtInst %uint %1 PackHalf2x16 %13295
      %13297 = OpShiftLeftLogical %uint %13296 %uint_17
      %13298 = OpBitwiseAnd %uint %13297 %uint_4292870144
      %13299 = OpCompositeExtract %float %13293 1
      %13300 = OpCompositeConstruct %v2float %13299 %float_0
      %13301 = OpExtInst %uint %1 PackHalf2x16 %13300
      %13302 = OpShiftLeftLogical %uint %13301 %uint_6
      %13303 = OpBitwiseAnd %uint %13302 %uint_2096128
      %13304 = OpCompositeExtract %float %13293 2
      %13305 = OpCompositeConstruct %v2float %13304 %float_0
      %13306 = OpExtInst %uint %1 PackHalf2x16 %13305
      %13307 = OpShiftRightLogical %uint %13306 %uint_5
      %13308 = OpBitwiseAnd %uint %13307 %uint_1023
      %13309 = OpBitwiseOr %uint %13298 %13303
      %13310 = OpBitwiseOr %uint %13309 %13308
      %13311 = OpULessThan %bool %13180 %uint_3
               OpSelectionMerge %13312 None
               OpBranchConditional %13311 %13313 %13314
      %13314 = OpLabel
      %13315 = OpISub %uint %13180 %uint_3
      %13316 = OpCompositeExtract %uint %10703 0
      %13317 = OpCompositeExtract %uint %10703 1
      %13318 = OpCompositeConstruct %v3uint %13316 %13317 %13315
               OpImageWrite %10704 %13318 %13310 None
               OpBranch %13312
      %13313 = OpLabel
      %13319 = OpIEqual %bool %13180 %uint_0
      %13320 = OpSelect %uint %13319 %13310 %13179
      %13321 = OpIEqual %bool %13180 %uint_1
      %13322 = OpSelect %uint %13321 %13310 %13178
      %13323 = OpIEqual %bool %13180 %uint_2
      %13324 = OpSelect %uint %13323 %13310 %13177
               OpBranch %13312
      %13312 = OpLabel
      %13325 = OpPhi %uint %13177 %13314 %13324 %13313
      %13326 = OpPhi %uint %13178 %13314 %13322 %13313
      %13327 = OpPhi %uint %13179 %13314 %13320 %13313
               OpBranch %13281
      %13282 = OpLabel
      %13328 = OpExtInst %uint %1 PackHalf2x16 %557
      %13329 = OpShiftRightLogical %uint %13328 %uint_5
      %13330 = OpBitwiseAnd %uint %13329 %uint_1023
      %13331 = OpShiftLeftLogical %uint %13330 %uint_16
      %13332 = OpBitwiseOr %uint %uint_0 %13331
      %13333 = OpULessThan %bool %13180 %uint_3
               OpSelectionMerge %13334 None
               OpBranchConditional %13333 %13335 %13336
      %13336 = OpLabel
      %13337 = OpISub %uint %13180 %uint_3
      %13338 = OpCompositeExtract %uint %10703 0
      %13339 = OpCompositeExtract %uint %10703 1
      %13340 = OpCompositeConstruct %v3uint %13338 %13339 %13337
               OpImageWrite %10704 %13340 %13332 None
               OpBranch %13334
      %13335 = OpLabel
      %13341 = OpIEqual %bool %13180 %uint_0
      %13342 = OpSelect %uint %13341 %13332 %13179
      %13343 = OpIEqual %bool %13180 %uint_1
      %13344 = OpSelect %uint %13343 %13332 %13178
      %13345 = OpIEqual %bool %13180 %uint_2
      %13346 = OpSelect %uint %13345 %13332 %13177
               OpBranch %13334
      %13334 = OpLabel
      %13347 = OpPhi %uint %13177 %13336 %13346 %13335
      %13348 = OpPhi %uint %13178 %13336 %13344 %13335
      %13349 = OpPhi %uint %13179 %13336 %13342 %13335
               OpBranch %13281
      %13281 = OpLabel
      %13350 = OpPhi %uint %13325 %13312 %13347 %13334
      %13351 = OpPhi %uint %13326 %13312 %13348 %13334
      %13352 = OpPhi %uint %13327 %13312 %13349 %13334
               OpBranch %13184
      %13184 = OpLabel
      %13353 = OpPhi %uint %456 %13134 %13277 %13281
      %13354 = OpPhi %uint %10952 %13134 %13278 %13281
      %13355 = OpPhi %uint %13177 %13134 %13350 %13281
      %13356 = OpPhi %uint %13178 %13134 %13351 %13281
      %13357 = OpPhi %uint %13179 %13134 %13352 %13281
      %13358 = OpPhi %uint %13180 %13134 %13280 %13281
      %13359 = OpShiftRightLogical %uint %12659 %uint_9
      %13360 = OpBitwiseAnd %uint %13359 %uint_1
      %13361 = OpINotEqual %bool %13360 %uint_0
               OpSelectionMerge %13362 None
               OpBranchConditional %13361 %13363 %13362
      %13363 = OpLabel
               OpSelectionMerge %13364 None
               OpSwitch %uint_0 %13365
      %13365 = OpLabel
               OpSelectionMerge %13366 None
               OpBranchConditional %true %13367 %13366
      %13367 = OpLabel
               OpBranch %13364
      %13366 = OpLabel
      %13368 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13364
      %13364 = OpLabel
      %13369 = OpPhi %float %float_0 %13367 %13368 %13366
               OpSelectionMerge %13370 None
               OpSwitch %uint_0 %13371
      %13371 = OpLabel
               OpSelectionMerge %13372 None
               OpBranchConditional %true %13373 %13372
      %13373 = OpLabel
               OpBranch %13370
      %13372 = OpLabel
      %13374 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13370
      %13370 = OpLabel
      %13375 = OpPhi %float %float_0 %13373 %13374 %13372
               OpSelectionMerge %13376 None
               OpSwitch %uint_0 %13377
      %13377 = OpLabel
               OpSelectionMerge %13378 None
               OpBranchConditional %true %13379 %13378
      %13379 = OpLabel
               OpBranch %13376
      %13378 = OpLabel
      %13380 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13376
      %13376 = OpLabel
      %13381 = OpPhi %float %float_0 %13379 %13380 %13378
      %13382 = OpCompositeConstruct %v3float %13369 %13375 %13381
      %13383 = OpBitcast %v3uint %13382
      %13384 = OpBitwiseAnd %v3uint %13383 %348
      %13385 = OpExtInst %v3uint %1 UMin %13384 %500
      %13386 = OpConvertUToF %v3float %13385
      %13387 = OpExtInst %v3float %1 Fma %12970 %13386 %13382
      %13388 = OpExtInst %v3float %1 FClamp %13387 %102 %127
      %13389 = OpCompositeExtract %float %13388 0
      %13390 = OpFMul %float %13389 %float_127
      %13391 = OpConvertFToU %uint %13390
      %13392 = OpShiftLeftLogical %uint %13391 %uint_0
      %13393 = OpCompositeExtract %float %13388 1
      %13394 = OpFMul %float %13393 %float_127
      %13395 = OpConvertFToU %uint %13394
      %13396 = OpShiftLeftLogical %uint %13395 %uint_7
      %13397 = OpCompositeExtract %float %13388 2
      %13398 = OpFMul %float %13397 %float_63
      %13399 = OpConvertFToU %uint %13398
      %13400 = OpShiftLeftLogical %uint %13399 %uint_14
      %13401 = OpBitwiseOr %uint %13392 %13396
      %13402 = OpBitwiseOr %uint %13401 %13400
      %13403 = OpExtInst %float %1 Fma %12969 %float_0 %float_0
      %13404 = OpExtInst %float %1 FClamp %13403 %float_0 %float_1
      %13405 = OpFMul %float %13404 %float_63
      %13406 = OpConvertFToU %uint %13405
      %13407 = OpShiftLeftLogical %uint %13406 %uint_20
      %13408 = OpBitwiseOr %uint %13402 %13407
      %13409 = OpShiftLeftLogical %uint %13406 %uint_26
      %13410 = OpBitwiseOr %uint %13408 %13409
      %13411 = OpULessThan %bool %13358 %uint_3
               OpSelectionMerge %13412 None
               OpBranchConditional %13411 %13413 %13414
      %13414 = OpLabel
      %13415 = OpISub %uint %13358 %uint_3
      %13416 = OpCompositeExtract %uint %10703 0
      %13417 = OpCompositeExtract %uint %10703 1
      %13418 = OpCompositeConstruct %v3uint %13416 %13417 %13415
               OpImageWrite %10704 %13418 %13410 None
               OpBranch %13412
      %13413 = OpLabel
      %13419 = OpIEqual %bool %13358 %uint_0
      %13420 = OpSelect %uint %13419 %13410 %13357
      %13421 = OpIEqual %bool %13358 %uint_1
      %13422 = OpSelect %uint %13421 %13410 %13356
      %13423 = OpIEqual %bool %13358 %uint_2
      %13424 = OpSelect %uint %13423 %13410 %13355
               OpBranch %13412
      %13412 = OpLabel
      %13425 = OpPhi %uint %13355 %13414 %13424 %13413
      %13426 = OpPhi %uint %13356 %13414 %13422 %13413
      %13427 = OpPhi %uint %13357 %13414 %13420 %13413
      %13428 = OpIAdd %uint %13358 %uint_1
               OpBranch %13362
      %13362 = OpLabel
      %13429 = OpPhi %uint %13355 %13184 %13425 %13412
      %13430 = OpPhi %uint %13356 %13184 %13426 %13412
      %13431 = OpPhi %uint %13357 %13184 %13427 %13412
      %13432 = OpPhi %uint %13358 %13184 %13428 %13412
      %13433 = OpShiftRightLogical %uint %12659 %uint_16
      %13434 = OpBitwiseAnd %uint %13433 %uint_1
      %13435 = OpINotEqual %bool %13434 %uint_0
               OpSelectionMerge %13436 None
               OpBranchConditional %13435 %13437 %13436
      %13437 = OpLabel
               OpSelectionMerge %13438 None
               OpSwitch %uint_0 %13439
      %13439 = OpLabel
      %13440 = OpExtInst %float %1 Fma %float_1 %float_1_05499995 %float_n0_0549999997
               OpBranch %13438
      %13438 = OpLabel
               OpBranch %13441
      %13441 = OpLabel
               OpBranch %13442
      %13442 = OpLabel
      %13443 = OpExtInst %float %1 FClamp %13440 %float_0 %float_1
      %13444 = OpFMul %float %13443 %float_255
      %13445 = OpConvertFToU %uint %13444
      %13446 = OpShiftLeftLogical %uint %13445 %uint_0
      %13447 = OpShiftLeftLogical %uint %13445 %uint_8
      %13448 = OpShiftLeftLogical %uint %13445 %uint_16
      %13449 = OpBitwiseOr %uint %13446 %13447
      %13450 = OpBitwiseOr %uint %13449 %13448
      %13451 = OpBitwiseOr %uint %13450 %uint_0
      %13452 = OpULessThan %bool %13432 %uint_3
               OpSelectionMerge %13453 None
               OpBranchConditional %13452 %13454 %13455
      %13455 = OpLabel
      %13456 = OpISub %uint %13432 %uint_3
      %13457 = OpCompositeExtract %uint %10703 0
      %13458 = OpCompositeExtract %uint %10703 1
      %13459 = OpCompositeConstruct %v3uint %13457 %13458 %13456
               OpImageWrite %10704 %13459 %13451 None
               OpBranch %13453
      %13454 = OpLabel
      %13460 = OpIEqual %bool %13432 %uint_0
      %13461 = OpSelect %uint %13460 %13451 %13431
      %13462 = OpIEqual %bool %13432 %uint_1
      %13463 = OpSelect %uint %13462 %13451 %13430
      %13464 = OpIEqual %bool %13432 %uint_2
      %13465 = OpSelect %uint %13464 %13451 %13429
               OpBranch %13453
      %13453 = OpLabel
      %13466 = OpPhi %uint %13429 %13455 %13465 %13454
      %13467 = OpPhi %uint %13430 %13455 %13463 %13454
      %13468 = OpPhi %uint %13431 %13455 %13461 %13454
               OpBranch %13436
      %13436 = OpLabel
      %13469 = OpPhi %uint %13429 %13362 %13466 %13453
      %13470 = OpPhi %uint %13430 %13362 %13467 %13453
      %13471 = OpPhi %uint %13431 %13362 %13468 %13453
               OpBranch %12672
      %12672 = OpLabel
      %13472 = OpPhi %uint %456 %12669 %12863 %12802 %456 %12950 %13353 %13436
      %13473 = OpPhi %uint %10952 %12669 %12864 %12802 %10952 %12950 %13354 %13436
      %13474 = OpPhi %uint %12660 %12669 %12796 %12802 %12963 %12950 %13469 %13436
      %13475 = OpPhi %uint %12661 %12669 %12797 %12802 %12964 %12950 %13470 %13436
      %13476 = OpPhi %uint %12662 %12669 %12798 %12802 %12965 %12950 %13471 %13436
               OpBranch %12668
      %12668 = OpLabel
      %13477 = OpPhi %uint %456 %11486 %13472 %12672
      %13478 = OpPhi %uint %10952 %11486 %13473 %12672
      %13479 = OpPhi %uint %12660 %11486 %13474 %12672
      %13480 = OpPhi %uint %12661 %11486 %13475 %12672
      %13481 = OpPhi %uint %12662 %11486 %13476 %12672
               OpBranch %11475
      %11475 = OpLabel
      %13482 = OpPhi %uint %456 %11426 %13477 %12668
      %13483 = OpPhi %uint %10952 %11426 %13478 %12668
      %13484 = OpPhi %uint %uint_0 %11426 %13479 %12668
      %13485 = OpPhi %uint %11472 %11426 %13480 %12668
      %13486 = OpPhi %uint %11473 %11426 %13481 %12668
      %13487 = OpExtInst %v3float %1 FAbs %10860
      %13488 = OpDot %float %127 %13487
      %13489 = OpCompositeConstruct %v2float %13488 %13488
      %13490 = OpVectorShuffle %v2float %10860 %10860 0 1
      %13491 = OpFDiv %v2float %13490 %13489
      %13492 = OpVectorShuffle %v3float %10860 %13491 3 4 2
      %13493 = OpCompositeExtract %float %10860 2
      %13494 = OpFOrdLessThanEqual %bool %13493 %float_0
               OpSelectionMerge %13495 None
               OpBranchConditional %13494 %13496 %13495
      %13496 = OpLabel
      %13497 = OpVectorShuffle %v2float %13491 %458 1 0
      %13498 = OpExtInst %v2float %1 FAbs %13497
      %13499 = OpFSub %v2float %312 %13498
      %13500 = OpVectorShuffle %v2float %13491 %458 0 1
      %13501 = OpFOrdGreaterThanEqual %v2bool %13500 %124
      %13502 = OpCompositeExtract %bool %13501 0
      %13503 = OpSelect %float %13502 %float_1 %float_n1
      %13504 = OpCompositeExtract %bool %13501 1
      %13505 = OpSelect %float %13504 %float_1 %float_n1
      %13506 = OpCompositeConstruct %v2float %13503 %13505
      %13507 = OpFMul %v2float %13499 %13506
      %13508 = OpVectorShuffle %v3float %10860 %13507 3 4 2
               OpBranch %13495
      %13495 = OpLabel
      %13509 = OpPhi %v3float %13492 %11475 %13508 %13496
      %13510 = OpVectorShuffle %v2float %13509 %13509 0 1
      %13511 = OpVectorTimesScalar %v2float %13510 %float_1023
      %13512 = OpFAdd %v2float %13511 %325
      %13513 = OpExtInst %v2float %1 FClamp %13512 %124 %326
      %13514 = OpConvertFToU %v2uint %13513
      %13515 = OpCompositeExtract %uint %13514 0
      %13516 = OpCompositeExtract %uint %13514 1
      %13517 = OpShiftLeftLogical %uint %13516 %uint_11
      %13518 = OpBitwiseOr %uint %13515 %13517
      %13519 = OpShiftLeftLogical %uint %13518 %uint_10
      %13520 = OpExtInst %float %1 FClamp %10862 %float_0 %float_1
      %13521 = OpFMul %float %13520 %float_255
      %13522 = OpConvertFToU %uint %13521
      %13523 = OpShiftLeftLogical %uint %13522 %uint_2
      %13524 = OpBitwiseOr %uint %13519 %13523
      %13525 = OpBitwiseOr %uint %13524 %10848
      %13526 = OpBitwiseAnd %uint %13483 %uint_3
      %13527 = OpINotEqual %bool %13526 %uint_0
               OpSelectionMerge %13528 DontFlatten
               OpBranchConditional %13527 %13529 %13528
      %13529 = OpLabel
      %13530 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %13531 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_17
      %13532 = OpLoad %int %13531
      %13533 = OpBitcast %uint %13532
      %13534 = OpCompositeExtract %uint %10703 0
      %13535 = OpCompositeExtract %uint %10703 1
      %13536 = OpCompositeConstruct %v3uint %13534 %13535 %13533
               OpImageWrite %13530 %13536 %13483 None
      %13537 = OpIEqual %bool %13526 %uint_2
      %13538 = OpIEqual %bool %13526 %uint_3
      %13539 = OpLogicalOr %bool %13537 %13538
               OpSelectionMerge %13540 None
               OpBranchConditional %13539 %13541 %13540
      %13541 = OpLabel
      %13542 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %13543 = OpIAdd %uint %13533 %uint_1
      %13544 = OpCompositeConstruct %v3uint %13534 %13535 %13543
               OpImageWrite %13542 %13544 %13482 None
               OpBranch %13540
      %13540 = OpLabel
               OpBranch %13528
      %13528 = OpLabel
      %13545 = OpAccessChain %_ptr_Uniform_float %View %uint_21
      %13546 = OpLoad %float %13545
      %13547 = OpCompositeConstruct %v3float %13546 %13546 %13546
      %13548 = OpExtInst %v3float %1 FMix %10701 %10865 %13547
      %13549 = OpFAdd %v3float %11389 %10448
      %13550 = OpFAdd %v3float %13548 %13549
      %13551 = OpVectorTimesScalar %v3float %13550 %float_1
      %13552 = OpCompositeExtract %float %13551 0
      %13553 = OpCompositeExtract %float %13551 1
      %13554 = OpCompositeExtract %float %13551 2
      %13555 = OpCompositeConstruct %v4float %13552 %13553 %13554 %float_0
      %13556 = OpAccessChain %_ptr_Uniform_float %View %uint_32
      %13557 = OpLoad %float %13556
      %13558 = OpFOrdEqual %bool %13557 %float_0
               OpSelectionMerge %13559 None
               OpBranchConditional %13558 %13560 %13559
      %13560 = OpLabel
      %13561 = OpCompositeInsert %v4float %459 %13555 3
               OpBranch %13559
      %13559 = OpLabel
      %13562 = OpPhi %v4float %13555 %13528 %13561 %13560
      %13563 = OpCompositeInsert %v4float %8510 %98 0
      %13564 = OpCompositeInsert %v4float %float_1 %13563 1
      %13565 = OpCompositeInsert %v4float %float_1 %13564 2
      %13566 = OpCompositeInsert %v4float %float_1 %13565 3
      %13567 = OpVectorTimesScalar %v3float %10699 %11400
      %13568 = OpCompositeExtract %float %13567 0
      %13569 = OpCompositeExtract %float %13567 1
      %13570 = OpCompositeExtract %float %13567 2
      %13571 = OpCompositeConstruct %v4float %13568 %13569 %13570 %float_1
      %13572 = OpVectorTimesScalar %v4float %13562 %11400
      %13573 = OpVectorShuffle %v3float %13572 %13572 0 1 2
      %13574 = OpExtInst %v3float %1 NMin %13573 %484
      %13575 = OpVectorShuffle %v4float %13572 %13574 4 5 6 3
               OpStore %out_var_SV_Target0 %13575
               OpStore %out_var_SV_Target1 %13566
               OpStore %out_var_SV_Target2 %13571
               OpStore %out_var_SV_Target3 %13486
               OpStore %out_var_SV_Target4 %13485
               OpStore %out_var_SV_Target5 %13484
               OpStore %out_var_SV_Target6 %13525
               OpReturn
               OpFunctionEnd
