; SPIR-V
; Version: 1.3
; Generator: Google spiregg; 0
; Bound: 13727
; Schema: 0
               OpCapability Shader
               OpCapability SampledBuffer
               OpCapability StorageImageReadWithoutFormat
               OpExtension "SPV_GOOGLE_hlsl_functionality1"
               OpExtension "SPV_GOOGLE_user_type"
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %MainPS "MainPS" %in_var_TEXCOORD10_centroid %in_var_TEXCOORD11_centroid %in_var_PRIMITIVE_ID %in_var_TEXCOORD9 %gl_FragCoord %gl_FrontFacing %out_var_SV_Target0 %out_var_SV_Target1 %out_var_SV_Target2 %out_var_SV_Target3 %out_var_SV_Target4 %out_var_SV_Target5 %out_var_SV_Target6
               OpExecutionMode %MainPS OriginUpperLeft
               OpExecutionMode %MainPS EarlyFragmentTests

               ; Debug Information
               OpSource HLSL 620
               OpName %type_View "type.View"  ; id %16
               OpMemberName %type_View 0 "View_TranslatedWorldToView"
               OpMemberName %type_View 1 "View_ViewToClip"
               OpMemberName %type_View 2 "View_SVPositionToTranslatedWorld"
               OpMemberName %type_View 3 "View_ViewTilePosition"
               OpMemberName %type_View 4 "View_ViewForward"
               OpMemberName %type_View 5 "View_InvDeviceZToWorldZTransform"
               OpMemberName %type_View 6 "View_ScreenPositionScaleBias"
               OpMemberName %type_View 7 "View_RelativeWorldCameraOrigin"
               OpMemberName %type_View 8 "View_RelativePreViewTranslation"
               OpMemberName %type_View 9 "View_ViewRectMin"
               OpMemberName %type_View 10 "View_ViewSizeAndInvSize"
               OpMemberName %type_View 11 "View_LightProbeSizeRatioAndInvSizeRatio"
               OpMemberName %type_View 12 "View_BufferSizeAndInvSize"
               OpMemberName %type_View 13 "View_PreExposure"
               OpMemberName %type_View 14 "View_OneOverPreExposure"
               OpMemberName %type_View 15 "View_DiffuseOverrideParameter"
               OpMemberName %type_View 16 "View_SpecularOverrideParameter"
               OpMemberName %type_View 17 "View_RoughnessOverrideParameter"
               OpMemberName %type_View 18 "View_OutOfBoundsMask"
               OpMemberName %type_View 19 "View_GameTime"
               OpMemberName %type_View 20 "View_StateFrameIndexMod8"
               OpMemberName %type_View 21 "View_UnlitViewmodeMask"
               OpMemberName %type_View 22 "View_DirectionalLightColor"
               OpMemberName %type_View 23 "View_DirectionalLightDirection"
               OpMemberName %type_View 24 "View_PrecomputedIndirectLightingColorScale"
               OpMemberName %type_View 25 "View_RenderingReflectionCaptureMask"
               OpMemberName %type_View 26 "View_SkyLightApplyPrecomputedBentNormalShadowingFlag"
               OpMemberName %type_View 27 "View_SkyLightColor"
               OpMemberName %type_View 28 "View_GlobalVolumeTranslatedCenterAndExtent"
               OpMemberName %type_View 29 "View_GlobalVolumeTranslatedWorldToUVAddAndMul"
               OpMemberName %type_View 30 "View_GlobalDistanceFieldClipmapSizeInPages"
               OpMemberName %type_View 31 "View_GlobalDistanceFieldInvPageAtlasSize"
               OpMemberName %type_View 32 "View_GlobalVolumeTexelSize"
               OpMemberName %type_View 33 "View_NumGlobalSDFClipmaps"
               OpMemberName %type_View 34 "View_bCheckerboardSubsurfaceProfileRendering"
               OpMemberName %type_View 35 "View_VolumetricLightmapWorldToUVScale"
               OpMemberName %type_View 36 "View_VolumetricLightmapWorldToUVAdd"
               OpMemberName %type_View 37 "View_VolumetricLightmapIndirectionTextureSize"
               OpMemberName %type_View 38 "View_VolumetricLightmapBrickSize"
               OpMemberName %type_View 39 "View_VolumetricLightmapBrickTexelSize"
               OpMemberName %type_View 40 "View_IndirectLightingCacheShowFlag"
               OpMemberName %type_View 41 "View_MinRoughness"
               OpMemberName %type_View 42 "View_bShadingEnergyConservation"
               OpMemberName %type_View 43 "View_bShadingEnergyPreservation"
               OpName %View "View"  ; id %17
               OpName %type_3d_image "type.3d.image"  ; id %18
               OpName %View_VolumetricLightmapIndirectionTexture "View_VolumetricLightmapIndirectionTexture"  ; id %19
               OpName %type_3d_image_0 "type.3d.image"  ; id %20
               OpName %View_DirectionalLightShadowingBrickTexture "View_DirectionalLightShadowingBrickTexture"  ; id %21
               OpName %View_GlobalDistanceFieldPageAtlasTexture "View_GlobalDistanceFieldPageAtlasTexture"  ; id %22
               OpName %View_GlobalDistanceFieldPageTableTexture "View_GlobalDistanceFieldPageTableTexture"  ; id %23
               OpName %type_2d_image "type.2d.image"  ; id %24
               OpName %type_sampler "type.sampler"  ; id %25
               OpName %View_PerlinNoise3DTexture "View_PerlinNoise3DTexture"  ; id %26
               OpName %View_PerlinNoise3DTextureSampler "View_PerlinNoise3DTextureSampler"  ; id %27
               OpName %View_SharedBilinearClampedSampler "View_SharedBilinearClampedSampler"  ; id %28
               OpName %View_SharedTrilinearWrappedSampler "View_SharedTrilinearWrappedSampler"  ; id %29
               OpName %type_StructuredBuffer_v4float "type.StructuredBuffer.v4float"  ; id %30
               OpName %View_SkyIrradianceEnvironmentMap "View_SkyIrradianceEnvironmentMap"  ; id %31
               OpName %View_ShadingEnergyGGXSpecTexture "View_ShadingEnergyGGXSpecTexture"  ; id %32
               OpName %View_ShadingEnergySampler "View_ShadingEnergySampler"  ; id %33
               OpName %View_SimpleVolumeEnvTexture "View_SimpleVolumeEnvTexture"  ; id %34
               OpName %View_SimpleVolumeEnvTextureSampler "View_SimpleVolumeEnvTextureSampler"  ; id %35
               OpName %type_SingleLayerWater "type.SingleLayerWater"  ; id %36
               OpMemberName %type_SingleLayerWater 0 "SingleLayerWater_SceneWithoutSingleLayerWaterMinMaxUV"
               OpMemberName %type_SingleLayerWater 1 "SingleLayerWater_DistortionParams"
               OpMemberName %type_SingleLayerWater 2 "SingleLayerWater_SceneWithoutSingleLayerWaterTextureSize"
               OpMemberName %type_SingleLayerWater 3 "SingleLayerWater_bMainDirectionalLightVSMFiltering"
               OpMemberName %type_SingleLayerWater 4 "SingleLayerWater_bSeparateMainDirLightLuminance"
               OpName %SingleLayerWater "SingleLayerWater"  ; id %37
               OpName %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture "SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture"  ; id %38
               OpName %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture "SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture"  ; id %39
               OpName %Scene_GPUScene_GPUScenePrimitiveSceneData "Scene_GPUScene_GPUScenePrimitiveSceneData"  ; id %40
               OpName %type_OpaqueBasePass "type.OpaqueBasePass"  ; id %41
               OpMemberName %type_OpaqueBasePass 0 "OpaqueBasePass_Shared_Forward_NumLocalLights"
               OpMemberName %type_OpaqueBasePass 1 "OpaqueBasePass_Shared_Forward_HasDirectionalLight"
               OpMemberName %type_OpaqueBasePass 2 "OpaqueBasePass_Shared_Forward_CulledGridSize"
               OpMemberName %type_OpaqueBasePass 3 "OpaqueBasePass_Shared_Forward_LightGridPixelSizeShift"
               OpMemberName %type_OpaqueBasePass 4 "OpaqueBasePass_Shared_Forward_LightGridZParams"
               OpMemberName %type_OpaqueBasePass 5 "OpaqueBasePass_Shared_Forward_DirectionalLightDirection"
               OpMemberName %type_OpaqueBasePass 6 "OpaqueBasePass_Shared_Forward_DirectionalLightSourceRadius"
               OpMemberName %type_OpaqueBasePass 7 "OpaqueBasePass_Shared_Forward_DirectionalLightColor"
               OpMemberName %type_OpaqueBasePass 8 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowMapChannelMask"
               OpMemberName %type_OpaqueBasePass 9 "OpaqueBasePass_Shared_Forward_DirectionalLightDistanceFadeMAD"
               OpMemberName %type_OpaqueBasePass 10 "OpaqueBasePass_Shared_Forward_NumDirectionalLightCascades"
               OpMemberName %type_OpaqueBasePass 11 "OpaqueBasePass_Shared_Forward_DirectionalLightVSM"
               OpMemberName %type_OpaqueBasePass 12 "OpaqueBasePass_Shared_Forward_CascadeEndDepths"
               OpMemberName %type_OpaqueBasePass 13 "OpaqueBasePass_Shared_Forward_DirectionalLightTranslatedWorldToShadowMatrix"
               OpMemberName %type_OpaqueBasePass 14 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapMinMax"
               OpMemberName %type_OpaqueBasePass 15 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlasBufferSize"
               OpMemberName %type_OpaqueBasePass 16 "OpaqueBasePass_Shared_Forward_DirectLightingShowFlag"
               OpMemberName %type_OpaqueBasePass 17 "OpaqueBasePass_Shared_UseBasePassSkylight"
               OpMemberName %type_OpaqueBasePass 18 "OpaqueBasePass_Strata_FirstSliceStoringStrataSSSDataWithoutMRT"
               OpMemberName %type_OpaqueBasePass 19 "OpaqueBasePass_UseForwardScreenSpaceShadowMask"
               OpName %OpaqueBasePass "OpaqueBasePass"  ; id %42
               OpName %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas"  ; id %43
               OpName %OpaqueBasePass_Shared_Forward_ShadowmapSampler "OpaqueBasePass_Shared_Forward_ShadowmapSampler"  ; id %44
               OpName %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer "OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer"  ; id %45
               OpName %type_StructuredBuffer_uint "type.StructuredBuffer.uint"  ; id %46
               OpName %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid "OpaqueBasePass_Shared_Forward_NumCulledLightsGrid"  ; id %47
               OpName %type_buffer_image "type.buffer.image"  ; id %48
               OpName %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit "OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit"  ; id %49
               OpName %type_2d_image_array "type.2d.image.array"  ; id %50
               OpName %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs "OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs"  ; id %51
               OpName %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture "OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture"  ; id %52
               OpName %OpaqueBasePass_PreIntegratedGFTexture "OpaqueBasePass_PreIntegratedGFTexture"  ; id %53
               OpName %type_IndirectLightingCache "type.IndirectLightingCache"  ; id %54
               OpMemberName %type_IndirectLightingCache 0 "IndirectLightingCache_IndirectLightingCachePrimitiveAdd"
               OpMemberName %type_IndirectLightingCache 1 "IndirectLightingCache_IndirectLightingCachePrimitiveScale"
               OpMemberName %type_IndirectLightingCache 2 "IndirectLightingCache_IndirectLightingCacheMinUV"
               OpMemberName %type_IndirectLightingCache 3 "IndirectLightingCache_IndirectLightingCacheMaxUV"
               OpMemberName %type_IndirectLightingCache 4 "IndirectLightingCache_PointSkyBentNormal"
               OpMemberName %type_IndirectLightingCache 5 "IndirectLightingCache_DirectionalLightShadowing"
               OpName %IndirectLightingCache "IndirectLightingCache"  ; id %55
               OpName %IndirectLightingCache_IndirectLightingCacheTexture0 "IndirectLightingCache_IndirectLightingCacheTexture0"  ; id %56
               OpName %IndirectLightingCache_IndirectLightingCacheTexture1 "IndirectLightingCache_IndirectLightingCacheTexture1"  ; id %57
               OpName %IndirectLightingCache_IndirectLightingCacheTexture2 "IndirectLightingCache_IndirectLightingCacheTexture2"  ; id %58
               OpName %IndirectLightingCache_IndirectLightingCacheTextureSampler0 "IndirectLightingCache_IndirectLightingCacheTextureSampler0"  ; id %59
               OpName %type_ByteAddressBuffer "type.ByteAddressBuffer"  ; id %60
               OpName %VirtualShadowMap_ProjectionData "VirtualShadowMap_ProjectionData"  ; id %61
               OpName %VirtualShadowMap_PageTable "VirtualShadowMap_PageTable"  ; id %62
               OpName %type_2d_image_array_0 "type.2d.image.array"  ; id %63
               OpName %VirtualShadowMap_PhysicalPagePool "VirtualShadowMap_PhysicalPagePool"  ; id %64
               OpName %type_MaterialCollection0 "type.MaterialCollection0"  ; id %65
               OpMemberName %type_MaterialCollection0 0 "MaterialCollection0_Vectors"
               OpName %MaterialCollection0 "MaterialCollection0"  ; id %66
               OpName %type_Material "type.Material"  ; id %67
               OpMemberName %type_Material 0 "Material_PreshaderBuffer"
               OpName %Material "Material"  ; id %68
               OpName %in_var_TEXCOORD10_centroid "in.var.TEXCOORD10_centroid"  ; id %3
               OpName %in_var_TEXCOORD11_centroid "in.var.TEXCOORD11_centroid"  ; id %4
               OpName %in_var_PRIMITIVE_ID "in.var.PRIMITIVE_ID"  ; id %5
               OpName %in_var_TEXCOORD9 "in.var.TEXCOORD9"  ; id %6
               OpName %out_var_SV_Target0 "out.var.SV_Target0"  ; id %9
               OpName %out_var_SV_Target1 "out.var.SV_Target1"  ; id %10
               OpName %out_var_SV_Target2 "out.var.SV_Target2"  ; id %11
               OpName %out_var_SV_Target3 "out.var.SV_Target3"  ; id %12
               OpName %out_var_SV_Target4 "out.var.SV_Target4"  ; id %13
               OpName %out_var_SV_Target5 "out.var.SV_Target5"  ; id %14
               OpName %out_var_SV_Target6 "out.var.SV_Target6"  ; id %15
               OpName %MainPS "MainPS"  ; id %2
               OpName %type_sampled_image "type.sampled.image"  ; id %69
               OpName %type_sampled_image_0 "type.sampled.image"  ; id %70

               ; Annotations
               OpDecorateString %in_var_TEXCOORD10_centroid UserSemantic "TEXCOORD10_centroid"
               OpDecorateString %in_var_TEXCOORD11_centroid UserSemantic "TEXCOORD11_centroid"
               OpDecorateString %in_var_PRIMITIVE_ID UserSemantic "PRIMITIVE_ID"
               OpDecorate %in_var_PRIMITIVE_ID Flat
               OpDecorateString %in_var_TEXCOORD9 UserSemantic "TEXCOORD9"
               OpDecorate %gl_FragCoord BuiltIn FragCoord
               OpDecorateString %gl_FragCoord UserSemantic "SV_Position"
               OpDecorate %gl_FrontFacing BuiltIn FrontFacing
               OpDecorateString %gl_FrontFacing UserSemantic "SV_IsFrontFace"
               OpDecorate %gl_FrontFacing Flat
               OpDecorateString %out_var_SV_Target0 UserSemantic "SV_Target0"
               OpDecorateString %out_var_SV_Target1 UserSemantic "SV_Target1"
               OpDecorateString %out_var_SV_Target2 UserSemantic "SV_Target2"
               OpDecorateString %out_var_SV_Target3 UserSemantic "SV_Target3"
               OpDecorateString %out_var_SV_Target4 UserSemantic "SV_Target4"
               OpDecorateString %out_var_SV_Target5 UserSemantic "SV_Target5"
               OpDecorateString %out_var_SV_Target6 UserSemantic "SV_Target6"
               OpDecorate %in_var_TEXCOORD10_centroid Location 0
               OpDecorate %in_var_TEXCOORD11_centroid Location 1
               OpDecorate %in_var_PRIMITIVE_ID Location 2
               OpDecorate %in_var_TEXCOORD9 Location 3
               OpDecorate %out_var_SV_Target0 Location 0
               OpDecorate %out_var_SV_Target1 Location 1
               OpDecorate %out_var_SV_Target2 Location 2
               OpDecorate %out_var_SV_Target3 Location 3
               OpDecorate %out_var_SV_Target4 Location 4
               OpDecorate %out_var_SV_Target5 Location 5
               OpDecorate %out_var_SV_Target6 Location 6
               OpDecorate %View DescriptorSet 0
               OpDecorate %View Binding 0
               OpDecorate %View_VolumetricLightmapIndirectionTexture DescriptorSet 0
               OpDecorate %View_VolumetricLightmapIndirectionTexture Binding 1
               OpDecorate %View_DirectionalLightShadowingBrickTexture DescriptorSet 0
               OpDecorate %View_DirectionalLightShadowingBrickTexture Binding 2
               OpDecorate %View_GlobalDistanceFieldPageAtlasTexture DescriptorSet 0
               OpDecorate %View_GlobalDistanceFieldPageAtlasTexture Binding 3
               OpDecorate %View_GlobalDistanceFieldPageTableTexture DescriptorSet 0
               OpDecorate %View_GlobalDistanceFieldPageTableTexture Binding 4
               OpDecorate %View_PerlinNoise3DTexture DescriptorSet 0
               OpDecorate %View_PerlinNoise3DTexture Binding 7
               OpDecorate %View_PerlinNoise3DTextureSampler DescriptorSet 0
               OpDecorate %View_PerlinNoise3DTextureSampler Binding 8
               OpDecorate %View_SharedBilinearClampedSampler DescriptorSet 0
               OpDecorate %View_SharedBilinearClampedSampler Binding 10
               OpDecorate %View_SharedTrilinearWrappedSampler DescriptorSet 0
               OpDecorate %View_SharedTrilinearWrappedSampler Binding 11
               OpDecorate %View_SkyIrradianceEnvironmentMap DescriptorSet 0
               OpDecorate %View_SkyIrradianceEnvironmentMap Binding 15
               OpDecorate %View_ShadingEnergyGGXSpecTexture DescriptorSet 0
               OpDecorate %View_ShadingEnergyGGXSpecTexture Binding 24
               OpDecorate %View_ShadingEnergySampler DescriptorSet 0
               OpDecorate %View_ShadingEnergySampler Binding 27
               OpDecorate %View_SimpleVolumeEnvTexture DescriptorSet 0
               OpDecorate %View_SimpleVolumeEnvTexture Binding 30
               OpDecorate %View_SimpleVolumeEnvTextureSampler DescriptorSet 0
               OpDecorate %View_SimpleVolumeEnvTextureSampler Binding 31
               OpDecorate %SingleLayerWater DescriptorSet 0
               OpDecorate %SingleLayerWater Binding 35
               OpDecorate %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture DescriptorSet 0
               OpDecorate %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture Binding 36
               OpDecorate %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture DescriptorSet 0
               OpDecorate %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture Binding 37
               OpDecorate %Scene_GPUScene_GPUScenePrimitiveSceneData DescriptorSet 0
               OpDecorate %Scene_GPUScene_GPUScenePrimitiveSceneData Binding 39
               OpDecorate %OpaqueBasePass DescriptorSet 0
               OpDecorate %OpaqueBasePass Binding 40
               OpDecorate %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas Binding 41
               OpDecorate %OpaqueBasePass_Shared_Forward_ShadowmapSampler DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_ShadowmapSampler Binding 42
               OpDecorate %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer Binding 43
               OpDecorate %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid Binding 44
               OpDecorate %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit Binding 45
               OpDecorate %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs DescriptorSet 0
               OpDecorate %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs Binding 46
               OpDecorate %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture DescriptorSet 0
               OpDecorate %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture Binding 47
               OpDecorate %OpaqueBasePass_PreIntegratedGFTexture DescriptorSet 0
               OpDecorate %OpaqueBasePass_PreIntegratedGFTexture Binding 48
               OpDecorate %IndirectLightingCache DescriptorSet 0
               OpDecorate %IndirectLightingCache Binding 49
               OpDecorate %IndirectLightingCache_IndirectLightingCacheTexture0 DescriptorSet 0
               OpDecorate %IndirectLightingCache_IndirectLightingCacheTexture0 Binding 50
               OpDecorate %IndirectLightingCache_IndirectLightingCacheTexture1 DescriptorSet 0
               OpDecorate %IndirectLightingCache_IndirectLightingCacheTexture1 Binding 51
               OpDecorate %IndirectLightingCache_IndirectLightingCacheTexture2 DescriptorSet 0
               OpDecorate %IndirectLightingCache_IndirectLightingCacheTexture2 Binding 52
               OpDecorate %IndirectLightingCache_IndirectLightingCacheTextureSampler0 DescriptorSet 0
               OpDecorate %IndirectLightingCache_IndirectLightingCacheTextureSampler0 Binding 53
               OpDecorate %VirtualShadowMap_ProjectionData DescriptorSet 0
               OpDecorate %VirtualShadowMap_ProjectionData Binding 54
               OpDecorate %VirtualShadowMap_PageTable DescriptorSet 0
               OpDecorate %VirtualShadowMap_PageTable Binding 55
               OpDecorate %VirtualShadowMap_PhysicalPagePool DescriptorSet 0
               OpDecorate %VirtualShadowMap_PhysicalPagePool Binding 56
               OpDecorate %MaterialCollection0 DescriptorSet 0
               OpDecorate %MaterialCollection0 Binding 57
               OpDecorate %Material DescriptorSet 0
               OpDecorate %Material Binding 58
               OpDecorate %_arr_v4float_uint_6 ArrayStride 16
               OpMemberDecorate %type_View 0 Offset 192
               OpMemberDecorate %type_View 0 MatrixStride 16
               OpMemberDecorate %type_View 0 ColMajor
               OpMemberDecorate %type_View 1 Offset 448
               OpMemberDecorate %type_View 1 MatrixStride 16
               OpMemberDecorate %type_View 1 ColMajor
               OpMemberDecorate %type_View 2 Offset 704
               OpMemberDecorate %type_View 2 MatrixStride 16
               OpMemberDecorate %type_View 2 ColMajor
               OpMemberDecorate %type_View 3 Offset 960
               OpMemberDecorate %type_View 4 Offset 992
               OpMemberDecorate %type_View 5 Offset 1072
               OpMemberDecorate %type_View 6 Offset 1088
               OpMemberDecorate %type_View 7 Offset 1104
               OpMemberDecorate %type_View 8 Offset 1152
               OpMemberDecorate %type_View 9 Offset 1984
               OpMemberDecorate %type_View 10 Offset 2000
               OpMemberDecorate %type_View 11 Offset 2032
               OpMemberDecorate %type_View 12 Offset 2048
               OpMemberDecorate %type_View 13 Offset 2120
               OpMemberDecorate %type_View 14 Offset 2124
               OpMemberDecorate %type_View 15 Offset 2128
               OpMemberDecorate %type_View 16 Offset 2144
               OpMemberDecorate %type_View 17 Offset 2176
               OpMemberDecorate %type_View 18 Offset 2192
               OpMemberDecorate %type_View 19 Offset 2228
               OpMemberDecorate %type_View 20 Offset 2260
               OpMemberDecorate %type_View 21 Offset 2280
               OpMemberDecorate %type_View 22 Offset 2288
               OpMemberDecorate %type_View 23 Offset 2304
               OpMemberDecorate %type_View 24 Offset 2480
               OpMemberDecorate %type_View 25 Offset 2876
               OpMemberDecorate %type_View 26 Offset 2916
               OpMemberDecorate %type_View 27 Offset 2928
               OpMemberDecorate %type_View 28 Offset 3120
               OpMemberDecorate %type_View 29 Offset 3216
               OpMemberDecorate %type_View 30 Offset 3512
               OpMemberDecorate %type_View 31 Offset 3520
               OpMemberDecorate %type_View 32 Offset 3552
               OpMemberDecorate %type_View 33 Offset 3560
               OpMemberDecorate %type_View 34 Offset 3592
               OpMemberDecorate %type_View 35 Offset 3696
               OpMemberDecorate %type_View 36 Offset 3712
               OpMemberDecorate %type_View 37 Offset 3728
               OpMemberDecorate %type_View 38 Offset 3740
               OpMemberDecorate %type_View 39 Offset 3744
               OpMemberDecorate %type_View 40 Offset 3756
               OpMemberDecorate %type_View 41 Offset 3896
               OpMemberDecorate %type_View 42 Offset 5160
               OpMemberDecorate %type_View 43 Offset 5164
               OpDecorate %type_View Block
               OpDecorateString %View UserTypeGOOGLE "cbuffer"
               OpDecorateString %View_VolumetricLightmapIndirectionTexture UserTypeGOOGLE "texture3d:<uint4>"
               OpDecorateString %View_DirectionalLightShadowingBrickTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_GlobalDistanceFieldPageAtlasTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_GlobalDistanceFieldPageTableTexture UserTypeGOOGLE "texture3d:<uint>"
               OpDecorateString %View_PerlinNoise3DTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorate %_runtimearr_v4float ArrayStride 16
               OpMemberDecorate %type_StructuredBuffer_v4float 0 Offset 0
               OpMemberDecorate %type_StructuredBuffer_v4float 0 NonWritable
               OpDecorate %type_StructuredBuffer_v4float BufferBlock
               OpDecorateString %View_SkyIrradianceEnvironmentMap UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorateString %View_ShadingEnergyGGXSpecTexture UserTypeGOOGLE "texture2d:<float2>"
               OpDecorateString %View_SimpleVolumeEnvTexture UserTypeGOOGLE "texture3d:<float>"
               OpMemberDecorate %type_SingleLayerWater 0 Offset 64
               OpMemberDecorate %type_SingleLayerWater 1 Offset 80
               OpMemberDecorate %type_SingleLayerWater 2 Offset 96
               OpMemberDecorate %type_SingleLayerWater 3 Offset 112
               OpMemberDecorate %type_SingleLayerWater 4 Offset 116
               OpDecorate %type_SingleLayerWater Block
               OpDecorateString %SingleLayerWater UserTypeGOOGLE "cbuffer"
               OpDecorateString %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %Scene_GPUScene_GPUScenePrimitiveSceneData UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorate %_arr_mat4v4float_uint_4 ArrayStride 64
               OpDecorate %_arr_v4float_uint_4 ArrayStride 16
               OpMemberDecorate %type_OpaqueBasePass 0 Offset 0
               OpMemberDecorate %type_OpaqueBasePass 1 Offset 8
               OpMemberDecorate %type_OpaqueBasePass 2 Offset 16
               OpMemberDecorate %type_OpaqueBasePass 3 Offset 32
               OpMemberDecorate %type_OpaqueBasePass 4 Offset 48
               OpMemberDecorate %type_OpaqueBasePass 5 Offset 64
               OpMemberDecorate %type_OpaqueBasePass 6 Offset 76
               OpMemberDecorate %type_OpaqueBasePass 7 Offset 80
               OpMemberDecorate %type_OpaqueBasePass 8 Offset 96
               OpMemberDecorate %type_OpaqueBasePass 9 Offset 104
               OpMemberDecorate %type_OpaqueBasePass 10 Offset 112
               OpMemberDecorate %type_OpaqueBasePass 11 Offset 116
               OpMemberDecorate %type_OpaqueBasePass 12 Offset 128
               OpMemberDecorate %type_OpaqueBasePass 13 Offset 144
               OpMemberDecorate %type_OpaqueBasePass 13 MatrixStride 16
               OpMemberDecorate %type_OpaqueBasePass 13 ColMajor
               OpMemberDecorate %type_OpaqueBasePass 14 Offset 400
               OpMemberDecorate %type_OpaqueBasePass 15 Offset 464
               OpMemberDecorate %type_OpaqueBasePass 16 Offset 592
               OpMemberDecorate %type_OpaqueBasePass 17 Offset 2240
               OpMemberDecorate %type_OpaqueBasePass 18 Offset 2276
               OpMemberDecorate %type_OpaqueBasePass 19 Offset 2304
               OpDecorate %type_OpaqueBasePass Block
               OpDecorateString %OpaqueBasePass UserTypeGOOGLE "cbuffer"
               OpDecorateString %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %type_StructuredBuffer_uint 0 Offset 0
               OpMemberDecorate %type_StructuredBuffer_uint 0 NonWritable
               OpDecorate %type_StructuredBuffer_uint BufferBlock
               OpDecorateString %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid UserTypeGOOGLE "structuredbuffer:<uint>"
               OpDecorateString %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit UserTypeGOOGLE "buffer:<uint>"
               OpDecorateString %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs UserTypeGOOGLE "rwtexture2darray:<uint>"
               OpDecorateString %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %OpaqueBasePass_PreIntegratedGFTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpMemberDecorate %type_IndirectLightingCache 0 Offset 0
               OpMemberDecorate %type_IndirectLightingCache 1 Offset 16
               OpMemberDecorate %type_IndirectLightingCache 2 Offset 32
               OpMemberDecorate %type_IndirectLightingCache 3 Offset 48
               OpMemberDecorate %type_IndirectLightingCache 4 Offset 64
               OpMemberDecorate %type_IndirectLightingCache 5 Offset 80
               OpDecorate %type_IndirectLightingCache Block
               OpDecorateString %IndirectLightingCache UserTypeGOOGLE "cbuffer"
               OpDecorateString %IndirectLightingCache_IndirectLightingCacheTexture0 UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %IndirectLightingCache_IndirectLightingCacheTexture1 UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %IndirectLightingCache_IndirectLightingCacheTexture2 UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpMemberDecorate %type_ByteAddressBuffer 0 Offset 0
               OpMemberDecorate %type_ByteAddressBuffer 0 NonWritable
               OpDecorate %type_ByteAddressBuffer BufferBlock
               OpDecorateString %VirtualShadowMap_ProjectionData UserTypeGOOGLE "byteaddressbuffer"
               OpDecorateString %VirtualShadowMap_PageTable UserTypeGOOGLE "structuredbuffer:<uint>"
               OpDecorateString %VirtualShadowMap_PhysicalPagePool UserTypeGOOGLE "texture2darray:<uint>"
               OpDecorate %_arr_v4float_uint_5 ArrayStride 16
               OpMemberDecorate %type_MaterialCollection0 0 Offset 0
               OpDecorate %type_MaterialCollection0 Block
               OpDecorateString %MaterialCollection0 UserTypeGOOGLE "cbuffer"
               OpDecorate %_arr_v4float_uint_109 ArrayStride 16
               OpMemberDecorate %type_Material 0 Offset 0
               OpDecorate %type_Material Block
               OpDecorateString %Material UserTypeGOOGLE "cbuffer"

               ; Types, variables and constants
      %float = OpTypeFloat 32
%float_3_14159274 = OpConstant %float 3.14159274
%float_64512 = OpConstant %float 64512
    %v3float = OpTypeVector %float 3
    %v4float = OpTypeVector %float 4
%mat4v4float = OpTypeMatrix %v4float 4
    %v2float = OpTypeVector %float 2
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
        %int = OpTypeInt 32 1
     %uint_2 = OpConstant %uint 2
     %uint_8 = OpConstant %uint 8
     %uint_6 = OpConstant %uint 6
      %v2int = OpTypeVector %int 2
    %uint_32 = OpConstant %uint 32
      %v4int = OpTypeVector %int 4
    %float_1 = OpConstant %float 1
       %bool = OpTypeBool
     %uint_3 = OpConstant %uint 3
      %int_0 = OpConstant %int 0
      %int_2 = OpConstant %int 2
      %int_1 = OpConstant %int 1
     %uint_0 = OpConstant %uint 0
    %float_0 = OpConstant %float 0
        %102 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
      %false = OpConstantFalse %bool
      %int_6 = OpConstant %int 6
     %int_96 = OpConstant %int 96
        %106 = OpConstantComposite %v3float %float_0 %float_0 %float_0
      %int_4 = OpConstant %int 4
   %uint_512 = OpConstant %uint 512
   %uint_256 = OpConstant %uint 256
     %uint_4 = OpConstant %uint 4
      %int_3 = OpConstant %int 3
    %uint_14 = OpConstant %uint 14
    %uint_31 = OpConstant %uint 31
     %uint_1 = OpConstant %uint 1
     %int_11 = OpConstant %int 11
     %int_24 = OpConstant %int 24
     %int_17 = OpConstant %int 17
      %int_7 = OpConstant %int 7
     %int_20 = OpConstant %int 20
     %int_10 = OpConstant %int 10
        %121 = OpConstantComposite %v4float %float_1 %float_1 %float_1 %float_1
       %true = OpConstantTrue %bool
     %int_16 = OpConstant %int 16
     %int_21 = OpConstant %int 21
     %int_75 = OpConstant %int 75
     %int_76 = OpConstant %int 76
     %int_15 = OpConstant %int 15
        %128 = OpConstantComposite %v2float %float_0 %float_0
     %int_47 = OpConstant %int 47
     %int_65 = OpConstant %int 65
        %131 = OpConstantComposite %v3float %float_1 %float_1 %float_1
     %int_81 = OpConstant %int 81
     %int_14 = OpConstant %int 14
     %int_27 = OpConstant %int 27
     %int_29 = OpConstant %int 29
%float_0_577000022 = OpConstant %float 0.577000022
        %137 = OpConstantComposite %v3float %float_0_577000022 %float_0_577000022 %float_0_577000022
        %138 = OpConstantComposite %v3float %float_1 %float_1 %float_0
        %139 = OpConstantComposite %v3float %float_0 %float_1 %float_1
  %float_0_5 = OpConstant %float 0.5
        %141 = OpConstantComposite %v3float %float_0_5 %float_0_5 %float_0_5
%float_0_0500000007 = OpConstant %float 0.0500000007
        %143 = OpConstantComposite %v3float %float_1 %float_0 %float_1
     %int_84 = OpConstant %int 84
     %int_18 = OpConstant %int 18
     %int_51 = OpConstant %int 51
%float_0_00392156886 = OpConstant %float 0.00392156886
      %int_8 = OpConstant %int 8
     %int_73 = OpConstant %int 73
      %int_5 = OpConstant %int 5
     %int_25 = OpConstant %int 25
     %int_48 = OpConstant %int 48
        %153 = OpConstantComposite %v2float %float_0_5 %float_0_5
    %float_2 = OpConstant %float 2
   %float_n2 = OpConstant %float -2
        %156 = OpConstantComposite %v2float %float_2 %float_n2
   %float_47 = OpConstant %float 47
   %float_17 = OpConstant %float 17
%float_0_0671105608 = OpConstant %float 0.0671105608
%float_0_00583714992 = OpConstant %float 0.00583714992
%float_52_9829178 = OpConstant %float 52.9829178
     %int_28 = OpConstant %int 28
     %uint_5 = OpConstant %uint 5
%uint_4294967288 = OpConstant %uint 4294967288
     %uint_7 = OpConstant %uint 7
    %uint_11 = OpConstant %uint 11
        %167 = OpConstantComposite %v3float %float_64512 %float_64512 %float_64512
%uint_2139095040 = OpConstant %uint 2139095040
   %uint_128 = OpConstant %uint 128
    %int_108 = OpConstant %int 108
%float_0_449999988 = OpConstant %float 0.449999988
%float_0_300000012 = OpConstant %float 0.300000012
%float_0_589999974 = OpConstant %float 0.589999974
%float_0_109999999 = OpConstant %float 0.109999999
        %175 = OpConstantComposite %v3float %float_0_300000012 %float_0_589999974 %float_0_109999999
%float_2_04040003 = OpConstant %float 2.04040003
%float_0_332399994 = OpConstant %float 0.332399994
        %178 = OpConstantComposite %v3float %float_0_332399994 %float_0_332399994 %float_0_332399994
%float_n4_79510021 = OpConstant %float -4.79510021
%float_0_641700029 = OpConstant %float 0.641700029
        %181 = OpConstantComposite %v3float %float_0_641700029 %float_0_641700029 %float_0_641700029
%float_2_75519991 = OpConstant %float 2.75519991
%float_0_690299988 = OpConstant %float 0.690299988
        %184 = OpConstantComposite %v3float %float_0_690299988 %float_0_690299988 %float_0_690299988
     %int_n1 = OpConstant %int -1
     %v2uint = OpTypeVector %uint 2
     %int_37 = OpConstant %int 37
%float_2097152 = OpConstant %float 2097152
   %float_50 = OpConstant %float 50
%float_9_99999996en13 = OpConstant %float 9.99999996e-13
%float_0_0199999996 = OpConstant %float 0.0199999996
%float_9_99999975en06 = OpConstant %float 9.99999975e-06
        %193 = OpConstantComposite %v3float %float_9_99999975en06 %float_9_99999975en06 %float_9_99999975en06
     %int_85 = OpConstant %int 85
     %int_59 = OpConstant %int 59
%float_0_0399999991 = OpConstant %float 0.0399999991
    %uint_16 = OpConstant %uint 16
    %uint_64 = OpConstant %uint 64
    %uint_40 = OpConstant %uint 40
     %uint_9 = OpConstant %uint 9
    %uint_10 = OpConstant %uint 10
  %uint_4095 = OpConstant %uint 4095
    %uint_12 = OpConstant %uint 12
   %uint_255 = OpConstant %uint 255
    %uint_20 = OpConstant %uint 20
    %uint_19 = OpConstant %uint 19
    %uint_24 = OpConstant %uint 24
%uint_1047552 = OpConstant %uint 1047552
  %uint_1023 = OpConstant %uint 1023
    %uint_63 = OpConstant %uint 63
   %uint_127 = OpConstant %uint 127
    %uint_26 = OpConstant %uint 26
    %uint_22 = OpConstant %uint 22
%uint_4294963200 = OpConstant %uint 4294963200
  %float_100 = OpConstant %float 100
  %float_128 = OpConstant %float 128
%float_0_00390625 = OpConstant %float 0.00390625
   %float_16 = OpConstant %float 16
     %int_23 = OpConstant %int 23
     %int_22 = OpConstant %int 22
     %int_30 = OpConstant %int 30
     %int_31 = OpConstant %int 31
     %int_33 = OpConstant %int 33
     %int_35 = OpConstant %int 35
     %int_26 = OpConstant %int 26
     %int_39 = OpConstant %int 39
     %int_40 = OpConstant %int 40
     %int_42 = OpConstant %int 42
     %int_43 = OpConstant %int 43
     %int_32 = OpConstant %int 32
     %int_44 = OpConstant %int 44
     %int_45 = OpConstant %int 45
     %int_34 = OpConstant %int 34
     %int_46 = OpConstant %int 46
     %int_50 = OpConstant %int 50
     %int_52 = OpConstant %int 52
     %int_38 = OpConstant %int 38
     %int_54 = OpConstant %int 54
     %int_56 = OpConstant %int 56
     %int_57 = OpConstant %int 57
     %int_58 = OpConstant %int 58
     %int_61 = OpConstant %int 61
     %int_62 = OpConstant %int 62
     %int_63 = OpConstant %int 63
     %int_64 = OpConstant %int 64
     %int_66 = OpConstant %int 66
     %int_67 = OpConstant %int 67
     %int_68 = OpConstant %int 68
     %int_53 = OpConstant %int 53
     %int_69 = OpConstant %int 69
     %int_70 = OpConstant %int 70
     %int_72 = OpConstant %int 72
     %int_77 = OpConstant %int 77
     %int_78 = OpConstant %int 78
     %int_79 = OpConstant %int 79
     %int_80 = OpConstant %int 80
     %int_86 = OpConstant %int 86
     %int_87 = OpConstant %int 87
     %int_88 = OpConstant %int 88
     %int_90 = OpConstant %int 90
     %int_91 = OpConstant %int 91
     %int_92 = OpConstant %int 92
     %int_93 = OpConstant %int 93
     %int_94 = OpConstant %int 94
     %int_95 = OpConstant %int 95
     %int_97 = OpConstant %int 97
     %int_82 = OpConstant %int 82
     %int_83 = OpConstant %int 83
    %int_103 = OpConstant %int 103
    %int_104 = OpConstant %int 104
    %int_106 = OpConstant %int 106
    %int_107 = OpConstant %int 107
    %int_105 = OpConstant %int 105
%mat3v3float = OpTypeMatrix %v3float 3
%_arr_v3float_uint_4 = OpTypeArray %v3float %uint_4
    %uint_15 = OpConstant %uint 15
%float_100000 = OpConstant %float 100000
   %float_n1 = OpConstant %float -1
        %279 = OpConstantComposite %v2float %float_1 %float_0
%float_1_20000005 = OpConstant %float 1.20000005
        %281 = OpConstantComposite %v3float %float_1_20000005 %float_1_20000005 %float_1_20000005
        %282 = OpConstantComposite %v3float %float_n1 %float_n1 %float_n1
%float_0_100000001 = OpConstant %float 0.100000001
        %284 = OpConstantComposite %v3float %float_0_100000001 %float_0_100000001 %float_0_100000001
%float_6_28318548 = OpConstant %float 6.28318548
%float_0_00100000005 = OpConstant %float 0.00100000005
%float_0_00200000009 = OpConstant %float 0.00200000009
%float_0_800000012 = OpConstant %float 0.800000012
    %float_4 = OpConstant %float 4
 %float_0_75 = OpConstant %float 0.75
%float_10000 = OpConstant %float 10000
        %292 = OpConstantComposite %v3float %float_10000 %float_10000 %float_10000
    %float_8 = OpConstant %float 8
        %294 = OpConstantComposite %v3float %float_0 %float_0 %float_1
%float_9_99999975en05 = OpConstant %float 9.99999975e-05
    %uint_41 = OpConstant %uint 41
    %uint_18 = OpConstant %uint 18
 %uint_65535 = OpConstant %uint 65535
    %uint_17 = OpConstant %uint 17
    %uint_25 = OpConstant %uint 25
%uint_16777215 = OpConstant %uint 16777215
 %uint_32768 = OpConstant %uint 32768
  %float_127 = OpConstant %float 127
    %float_3 = OpConstant %float 3
%float_0_99000001 = OpConstant %float 0.99000001
        %306 = OpConstantComposite %v3float %float_0_99000001 %float_0_99000001 %float_0_99000001
%float_0_0799999982 = OpConstant %float 0.0799999982
        %308 = OpConstantComposite %v2uint %uint_31 %uint_31
 %float_4000 = OpConstant %float 4000
%float_0_000230000005 = OpConstant %float 0.000230000005
%float_n0_000230000005 = OpConstant %float -0.000230000005
        %312 = OpConstantComposite %v2float %float_0_000230000005 %float_n0_000230000005
%float_1_54999995 = OpConstant %float 1.54999995
  %float_255 = OpConstant %float 255
        %315 = OpConstantComposite %v2float %float_1 %float_1
 %float_1023 = OpConstant %float 1023
 %float_2047 = OpConstant %float 2047
  %uint_2047 = OpConstant %uint 2047
   %float_63 = OpConstant %float 63
%uint_1072693248 = OpConstant %uint 1072693248
%uint_4292870144 = OpConstant %uint 4292870144
%uint_2096128 = OpConstant %uint 2096128
 %float_0_25 = OpConstant %float 0.25
        %324 = OpConstantComposite %v3float %float_0_25 %float_0_25 %float_0_25
        %325 = OpConstantComposite %v3float %float_0 %float_0_5 %float_0_5
%uint_4294967292 = OpConstant %uint 4294967292
 %float_1024 = OpConstant %float 1024
        %328 = OpConstantComposite %v2float %float_1024 %float_1024
        %329 = OpConstantComposite %v2float %float_2047 %float_2047
%float_4_76837158en07 = OpConstant %float 4.76837158e-07
%float_0_333299994 = OpConstant %float 0.333299994
%float_0_488602996 = OpConstant %float 0.488602996
  %uint_2048 = OpConstant %uint 2048
  %uint_4096 = OpConstant %uint 4096
  %uint_8192 = OpConstant %uint 8192
%float_0_400000006 = OpConstant %float 0.400000006
        %337 = OpConstantComposite %v3float %float_2 %float_0 %float_n2
        %338 = OpConstantComposite %v3float %float_n1 %float_2 %float_n1
        %339 = OpConstantComposite %v3float %float_0 %float_0 %float_0_00100000005
%float_0_899999976 = OpConstant %float 0.899999976
        %341 = OpConstantComposite %v2uint %uint_128 %uint_128
        %342 = OpConstantComposite %v2uint %uint_127 %uint_127
%uint_4294967295 = OpConstant %uint 4294967295
%float_9_99999997en07 = OpConstant %float 9.99999997e-07
        %345 = OpConstantComposite %v3float %float_9_99999997en07 %float_9_99999997en07 %float_9_99999997en07
%float_0_200000003 = OpConstant %float 0.200000003
%uint_2147483647 = OpConstant %uint 2147483647
     %v3uint = OpTypeVector %uint 3
        %349 = OpConstantComposite %v3uint %uint_2147483647 %uint_2147483647 %uint_2147483647
%float_0_600000024 = OpConstant %float 0.600000024
        %351 = OpConstantComposite %v3float %float_1 %float_0 %float_0
        %352 = OpConstantComposite %v3float %float_0 %float_1 %float_0
        %353 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_100
        %354 = OpConstantComposite %v3uint %uint_8 %uint_8 %uint_8
    %float_7 = OpConstant %float 7
        %356 = OpConstantComposite %v3float %float_9_99999996en13 %float_9_99999996en13 %float_9_99999996en13
   %uint_336 = OpConstant %uint 336
    %uint_96 = OpConstant %uint 96
   %uint_112 = OpConstant %uint 112
   %uint_144 = OpConstant %uint 144
   %uint_160 = OpConstant %uint 160
   %uint_176 = OpConstant %uint 176
   %uint_268 = OpConstant %uint 268
   %uint_272 = OpConstant %uint 272
   %uint_288 = OpConstant %uint 288
   %uint_300 = OpConstant %uint 300
   %uint_304 = OpConstant %uint 304
   %uint_312 = OpConstant %uint 312
   %uint_316 = OpConstant %uint 316
 %uint_16384 = OpConstant %uint 16384
        %371 = OpConstantComposite %v2int %int_32 %int_32
        %372 = OpConstantComposite %v2int %int_31 %int_31
%float_0_0350000001 = OpConstant %float 0.0350000001
   %float_20 = OpConstant %float 20
%float_1_57079637 = OpConstant %float 1.57079637
   %float_10 = OpConstant %float 10
%float_1_19000006 = OpConstant %float 1.19000006
%float_0_360000014 = OpConstant %float 0.360000014
%float_n3_6500001 = OpConstant %float -3.6500001
%int_532487669 = OpConstant %int 532487669
    %float_6 = OpConstant %float 6
   %float_15 = OpConstant %float 15
        %383 = OpConstantComposite %v4float %float_15 %float_15 %float_15 %float_15
        %384 = OpConstantComposite %v4float %float_10 %float_10 %float_10 %float_10
   %float_19 = OpConstant %float 19
  %float_101 = OpConstant %float 101
        %387 = OpConstantComposite %v3float %float_19 %float_47 %float_101
        %388 = OpConstantComposite %v3uint %uint_32768 %uint_16384 %uint_8192
%float_6_10351562en05 = OpConstant %float 6.10351562e-05
%float_0_000122070312 = OpConstant %float 0.000122070312
%float_0_000244140625 = OpConstant %float 0.000244140625
        %392 = OpConstantComposite %v3float %float_6_10351562en05 %float_0_000122070312 %float_0_000244140625
%float_0_2588 = OpConstant %float 0.2588
 %uint_21845 = OpConstant %uint 21845
%uint_134217728 = OpConstant %uint 134217728
 %float_n0_5 = OpConstant %float -0.5
%uint_4294967294 = OpConstant %uint 4294967294
%float_0_00313066994 = OpConstant %float 0.00313066994
%float_12_9200001 = OpConstant %float 12.9200001
%float_0_416666657 = OpConstant %float 0.416666657
%float_1_05499995 = OpConstant %float 1.05499995
%uint_1664525 = OpConstant %uint 1664525
        %403 = OpConstantComposite %v3uint %uint_1664525 %uint_1664525 %uint_1664525
%uint_1013904223 = OpConstant %uint 1013904223
        %405 = OpConstantComposite %v3uint %uint_1013904223 %uint_1013904223 %uint_1013904223
        %406 = OpConstantComposite %v3uint %uint_16 %uint_16 %uint_16
        %407 = OpConstantComposite %v3uint %uint_31 %uint_31 %uint_31
%float_0_055555556 = OpConstant %float 0.055555556
%float_2_20000005 = OpConstant %float 2.20000005
 %float_34_5 = OpConstant %float 34.5
 %float_24_5 = OpConstant %float 24.5
%float_73_1999969 = OpConstant %float 73.1999969
%float_8_89999962 = OpConstant %float 8.89999962
%float_3_5999999 = OpConstant %float 3.5999999
%float_1_00010002 = OpConstant %float 1.00010002
%int_2129859010 = OpConstant %int 2129859010
%float_0_140000001 = OpConstant %float 0.140000001
%_arr_v4float_uint_6 = OpTypeArray %v4float %uint_6
  %type_View = OpTypeStruct %mat4v4float %mat4v4float %mat4v4float %v3float %v3float %v4float %v4float %v3float %v3float %v4float %v4float %v4float %v4float %float %float %v4float %v4float %v2float %float %float %uint %float %v4float %v3float %v3float %float %float %v4float %_arr_v4float_uint_6 %_arr_v4float_uint_6 %int %v3float %float %uint %float %v3float %v3float %v3float %float %v3float %float %float %uint %uint
%_ptr_Uniform_type_View = OpTypePointer Uniform %type_View
%type_3d_image = OpTypeImage %uint 3D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_3d_image = OpTypePointer UniformConstant %type_3d_image
%type_3d_image_0 = OpTypeImage %float 3D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_3d_image_0 = OpTypePointer UniformConstant %type_3d_image_0
%type_2d_image = OpTypeImage %float 2D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_2d_image = OpTypePointer UniformConstant %type_2d_image
%type_sampler = OpTypeSampler
%_ptr_UniformConstant_type_sampler = OpTypePointer UniformConstant %type_sampler
%_runtimearr_v4float = OpTypeRuntimeArray %v4float
%type_StructuredBuffer_v4float = OpTypeStruct %_runtimearr_v4float
%_ptr_Uniform_type_StructuredBuffer_v4float = OpTypePointer Uniform %type_StructuredBuffer_v4float
      %v3int = OpTypeVector %int 3
%type_SingleLayerWater = OpTypeStruct %v4float %v4float %v2float %uint %uint
%_ptr_Uniform_type_SingleLayerWater = OpTypePointer Uniform %type_SingleLayerWater
%_arr_mat4v4float_uint_4 = OpTypeArray %mat4v4float %uint_4
%_arr_v4float_uint_4 = OpTypeArray %v4float %uint_4
%type_OpaqueBasePass = OpTypeStruct %uint %uint %v3int %uint %v3float %v3float %float %v3float %uint %v2float %uint %int %v4float %_arr_mat4v4float_uint_4 %_arr_v4float_uint_4 %v4float %uint %uint %int %int
%_ptr_Uniform_type_OpaqueBasePass = OpTypePointer Uniform %type_OpaqueBasePass
%_runtimearr_uint = OpTypeRuntimeArray %uint
%type_StructuredBuffer_uint = OpTypeStruct %_runtimearr_uint
%_ptr_Uniform_type_StructuredBuffer_uint = OpTypePointer Uniform %type_StructuredBuffer_uint
%type_buffer_image = OpTypeImage %uint Buffer 2 0 0 1 R32ui
%_ptr_UniformConstant_type_buffer_image = OpTypePointer UniformConstant %type_buffer_image
%type_2d_image_array = OpTypeImage %uint 2D 2 1 0 2 R32ui
%_ptr_UniformConstant_type_2d_image_array = OpTypePointer UniformConstant %type_2d_image_array
%type_IndirectLightingCache = OpTypeStruct %v3float %v3float %v3float %v3float %v4float %float
%_ptr_Uniform_type_IndirectLightingCache = OpTypePointer Uniform %type_IndirectLightingCache
%type_ByteAddressBuffer = OpTypeStruct %_runtimearr_uint
%_ptr_Uniform_type_ByteAddressBuffer = OpTypePointer Uniform %type_ByteAddressBuffer
%type_2d_image_array_0 = OpTypeImage %uint 2D 2 1 0 1 Unknown
%_ptr_UniformConstant_type_2d_image_array_0 = OpTypePointer UniformConstant %type_2d_image_array_0
%_arr_v4float_uint_5 = OpTypeArray %v4float %uint_5
%type_MaterialCollection0 = OpTypeStruct %_arr_v4float_uint_5
%_ptr_Uniform_type_MaterialCollection0 = OpTypePointer Uniform %type_MaterialCollection0
   %uint_109 = OpConstant %uint 109
%_arr_v4float_uint_109 = OpTypeArray %v4float %uint_109
%type_Material = OpTypeStruct %_arr_v4float_uint_109
%_ptr_Uniform_type_Material = OpTypePointer Uniform %type_Material
%_ptr_Input_v4float = OpTypePointer Input %v4float
%_ptr_Input_uint = OpTypePointer Input %uint
%_ptr_Input_v3float = OpTypePointer Input %v3float
%_ptr_Input_bool = OpTypePointer Input %bool
%_ptr_Output_v4float = OpTypePointer Output %v4float
%_ptr_Output_uint = OpTypePointer Output %uint
       %void = OpTypeVoid
        %443 = OpTypeFunction %void
%_ptr_Function_v3float = OpTypePointer Function %v3float
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %v4bool = OpTypeVector %bool 4
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
%_ptr_Uniform_float = OpTypePointer Uniform %float
     %v3bool = OpTypeVector %bool 3
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
%_ptr_Uniform_int = OpTypePointer Uniform %int
%_ptr_Uniform_v3float = OpTypePointer Uniform %v3float
%type_sampled_image = OpTypeSampledImage %type_2d_image
%_ptr_Uniform_mat4v4float = OpTypePointer Uniform %mat4v4float
%type_sampled_image_0 = OpTypeSampledImage %type_3d_image_0
     %v2bool = OpTypeVector %bool 2
%_ptr_Uniform_v3int = OpTypePointer Uniform %v3int
%_ptr_Function__arr_v3float_uint_4 = OpTypePointer Function %_arr_v3float_uint_4
       %View = OpVariable %_ptr_Uniform_type_View Uniform
%View_VolumetricLightmapIndirectionTexture = OpVariable %_ptr_UniformConstant_type_3d_image UniformConstant
%View_DirectionalLightShadowingBrickTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_GlobalDistanceFieldPageAtlasTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_GlobalDistanceFieldPageTableTexture = OpVariable %_ptr_UniformConstant_type_3d_image UniformConstant
%View_PerlinNoise3DTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_PerlinNoise3DTextureSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SharedBilinearClampedSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SharedTrilinearWrappedSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SkyIrradianceEnvironmentMap = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%View_ShadingEnergyGGXSpecTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%View_ShadingEnergySampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SimpleVolumeEnvTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_SimpleVolumeEnvTextureSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%SingleLayerWater = OpVariable %_ptr_Uniform_type_SingleLayerWater Uniform
%SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%Scene_GPUScene_GPUScenePrimitiveSceneData = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%OpaqueBasePass = OpVariable %_ptr_Uniform_type_OpaqueBasePass Uniform
%OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%OpaqueBasePass_Shared_Forward_ShadowmapSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%OpaqueBasePass_Shared_Forward_NumCulledLightsGrid = OpVariable %_ptr_Uniform_type_StructuredBuffer_uint Uniform
%OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit = OpVariable %_ptr_UniformConstant_type_buffer_image UniformConstant
%OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs = OpVariable %_ptr_UniformConstant_type_2d_image_array UniformConstant
%OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%OpaqueBasePass_PreIntegratedGFTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%IndirectLightingCache = OpVariable %_ptr_Uniform_type_IndirectLightingCache Uniform
%IndirectLightingCache_IndirectLightingCacheTexture0 = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%IndirectLightingCache_IndirectLightingCacheTexture1 = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%IndirectLightingCache_IndirectLightingCacheTexture2 = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%IndirectLightingCache_IndirectLightingCacheTextureSampler0 = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%VirtualShadowMap_ProjectionData = OpVariable %_ptr_Uniform_type_ByteAddressBuffer Uniform
%VirtualShadowMap_PageTable = OpVariable %_ptr_Uniform_type_StructuredBuffer_uint Uniform
%VirtualShadowMap_PhysicalPagePool = OpVariable %_ptr_UniformConstant_type_2d_image_array_0 UniformConstant
%MaterialCollection0 = OpVariable %_ptr_Uniform_type_MaterialCollection0 Uniform
   %Material = OpVariable %_ptr_Uniform_type_Material Uniform
%in_var_TEXCOORD10_centroid = OpVariable %_ptr_Input_v4float Input
%in_var_TEXCOORD11_centroid = OpVariable %_ptr_Input_v4float Input
%in_var_PRIMITIVE_ID = OpVariable %_ptr_Input_uint Input
%in_var_TEXCOORD9 = OpVariable %_ptr_Input_v3float Input
%gl_FragCoord = OpVariable %_ptr_Input_v4float Input
%gl_FrontFacing = OpVariable %_ptr_Input_bool Input
%out_var_SV_Target0 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target1 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target2 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target3 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target4 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target5 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target6 = OpVariable %_ptr_Output_uint Output
        %457 = OpUndef %v3float
        %458 = OpConstantNull %uint
        %459 = OpConstantNull %v4float
        %460 = OpConstantNull %v3float
        %461 = OpConstantNull %float
%float_0_03125 = OpConstant %float 0.03125
        %463 = OpConstantComposite %v3float %float_0_03125 %float_0_03125 %float_0_03125
%float_32_6650009 = OpConstant %float 32.6650009
%float_11_8149996 = OpConstant %float 11.8149996
        %466 = OpConstantComposite %v2float %float_32_6650009 %float_11_8149996
        %467 = OpConstantComposite %v2float %float_0_0671105608 %float_0_00583714992
%float_0_00787401572 = OpConstant %float 0.00787401572
%float_n0_488602996 = OpConstant %float -0.488602996
%float_2_09439516 = OpConstant %float 2.09439516
%float_16384 = OpConstant %float 16384
%float_0_318309873 = OpConstant %float 0.318309873
   %float_n0 = OpConstant %float -0
%float_n0_156582996 = OpConstant %float -0.156582996
%float_n0_0699428469 = OpConstant %float -0.0699428469
%float_0_997551024 = OpConstant %float 0.997551024
%float_1_41421354 = OpConstant %float 1.41421354
%float_2_50662827 = OpConstant %float 2.50662827
%float_0_0465205647 = OpConstant %float 0.0465205647
%float_0_953479409 = OpConstant %float 0.953479409
%float_12_566371 = OpConstant %float 12.566371
%float_0_0795774683 = OpConstant %float 0.0795774683
%float_32256 = OpConstant %float 32256
        %484 = OpConstantComposite %v3float %float_32256 %float_32256 %float_32256
%uint_4294967293 = OpConstant %uint 4294967293
%uint_4294902015 = OpConstant %uint 4294902015
%float_0_0454545468 = OpConstant %float 0.0454545468
%float_0_0625 = OpConstant %float 0.0625
%float_0_909090936 = OpConstant %float 0.909090936
%float_0_875 = OpConstant %float 0.875
%uint_4287627263 = OpConstant %uint 4287627263
%uint_4169138175 = OpConstant %uint 4169138175
%uint_4294901760 = OpConstant %uint 4294901760
%uint_4294967263 = OpConstant %uint 4294967263
%uint_4294901759 = OpConstant %uint 4294901759
        %496 = OpConstantComposite %v3float %float_0_0454545468 %float_0_0454545468 %float_0_0625
        %497 = OpConstantComposite %v3float %float_0_909090936 %float_0_909090936 %float_0_875
        %498 = OpConstantComposite %v3float %float_0_318309873 %float_0_318309873 %float_0_318309873
%uint_4194303 = OpConstant %uint 4194303
        %500 = OpConstantComposite %v3uint %uint_1 %uint_1 %uint_1
%uint_16711680 = OpConstant %uint 16711680
    %uint_72 = OpConstant %uint 72
        %503 = OpConstantComposite %v3float %float_n1 %float_n1 %float_n0
%float_9_53674316en07 = OpConstant %float 9.53674316e-07
%float_n2_097152e_11 = OpConstant %float -2.097152e+11
%float_0_000100000005 = OpConstant %float 0.000100000005
        %507 = OpConstantComposite %v3float %float_0_000100000005 %float_0_000100000005 %float_0_000100000005
%float_0_000200000009 = OpConstant %float 0.000200000009
        %509 = OpConstantComposite %v3float %float_0_000200000009 %float_0_000200000009 %float_0_000200000009
        %510 = OpConstantComposite %v3float %float_n0_5 %float_n0_5 %float_n0_5
%float_4194_3042 = OpConstant %float 4194.3042
%float_0_0333333351 = OpConstant %float 0.0333333351
%float_3_125 = OpConstant %float 3.125
%float_0_636619747 = OpConstant %float 0.636619747
%float_0_00158730161 = OpConstant %float 0.00158730161
%uint_1048576 = OpConstant %uint 1048576
%float_0_0158730168 = OpConstant %float 0.0158730168
%float_0_999600053 = OpConstant %float 0.999600053
        %519 = OpConstantComposite %v3float %float_0_999600053 %float_0_999600053 %float_0_999600053
%float_1_52590219en05 = OpConstant %float 1.52590219e-05
        %521 = OpConstantComposite %v3float %float_1_52590219en05 %float_1_52590219en05 %float_1_52590219en05
%float_0_0666666701 = OpConstant %float 0.0666666701
        %523 = OpConstantComposite %v3float %float_0_0666666701 %float_0_0666666701 %float_0_0666666701
        %524 = OpConstantComposite %v3float %float_0_0625 %float_0_0625 %float_0_0625
        %525 = OpConstantComposite %v3float %float_0_00787401572 %float_0_00787401572 %float_0_00787401572
        %526 = OpConstantComposite %v2float %float_n0_5 %float_n0_5
%float_n6_28318548 = OpConstant %float -6.28318548
%float_0_139885694 = OpConstant %float 0.139885694
%float_n0_800000012 = OpConstant %float -0.800000012
%float_n3_98000002 = OpConstant %float -3.98000002
%float_n16_7800007 = OpConstant %float -16.7800007
%float_n0_75 = OpConstant %float -0.75
  %float_n59 = OpConstant %float -59
%float_n21_2000008 = OpConstant %float -21.2000008
%float_n0_0549999997 = OpConstant %float -0.0549999997
 %float_n127 = OpConstant %float -127
        %537 = OpUndef %v3float
        %538 = OpUndef %v3uint
        %539 = OpUndef %v4float
        %540 = OpUndef %v3float
        %541 = OpUndef %mat4v4float
        %542 = OpConstantComposite %v4float %float_0 %461 %461 %461
%float_0_886227548 = OpConstant %float 0.886227548
   %float_66 = OpConstant %float 66
  %float_120 = OpConstant %float 120
  %float_148 = OpConstant %float 148
  %float_167 = OpConstant %float 167
        %548 = OpUndef %float
        %549 = OpUndef %v3uint
        %550 = OpUndef %v4float
        %551 = OpUndef %v3float
        %552 = OpUndef %v2float
        %553 = OpConstantComposite %v3float %461 %461 %461
        %554 = OpConstantComposite %v3bool %true %true %true
        %555 = OpConstantComposite %v3bool %false %false %false
        %556 = OpConstantComposite %v2float %461 %float_0
  %uint_8194 = OpConstant %uint 8194
%float_1_53787023en05 = OpConstant %float 1.53787023e-05
        %559 = OpConstantComposite %v2float %461 %461
%uint_2130706432 = OpConstant %uint 2130706432
    %uint_23 = OpConstant %uint 23
    %uint_27 = OpConstant %uint 27
    %uint_33 = OpConstant %uint 33
    %uint_28 = OpConstant %uint 28
    %uint_29 = OpConstant %uint 29
    %uint_30 = OpConstant %uint 30
    %uint_35 = OpConstant %uint 35
    %uint_36 = OpConstant %uint 36
    %uint_37 = OpConstant %uint 37
    %uint_38 = OpConstant %uint 38
    %uint_39 = OpConstant %uint 39
    %uint_13 = OpConstant %uint 13
    %uint_42 = OpConstant %uint 42
    %uint_43 = OpConstant %uint 43
    %uint_21 = OpConstant %uint 21
    %uint_34 = OpConstant %uint 34

               ; Function MainPS
     %MainPS = OpFunction %void None %443
        %577 = OpLabel
        %578 = OpVariable %_ptr_Function__arr_v3float_uint_4 Function
        %579 = OpVariable %_ptr_Function__arr_v3float_uint_4 Function
        %580 = OpLoad %v4float %in_var_TEXCOORD11_centroid
        %581 = OpLoad %uint %in_var_PRIMITIVE_ID
        %582 = OpLoad %v3float %in_var_TEXCOORD9
        %583 = OpLoad %v4float %gl_FragCoord
        %584 = OpCompositeExtract %float %583 3
        %585 = OpFDiv %float %float_1 %584
        %586 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_0
        %587 = OpLoad %mat4v4float %586
        %588 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_1
        %589 = OpLoad %mat4v4float %588
        %590 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_2
        %591 = OpLoad %mat4v4float %590
        %592 = OpAccessChain %_ptr_Uniform_v3float %View %uint_3
        %593 = OpLoad %v3float %592
        %594 = OpAccessChain %_ptr_Uniform_v3float %View %uint_4
        %595 = OpLoad %v3float %594
        %596 = OpAccessChain %_ptr_Uniform_v4float %View %uint_6
        %597 = OpLoad %v4float %596
        %598 = OpAccessChain %_ptr_Uniform_v3float %View %uint_7
        %599 = OpLoad %v3float %598
        %600 = OpAccessChain %_ptr_Uniform_v3float %View %uint_8
        %601 = OpLoad %v3float %600
        %602 = OpAccessChain %_ptr_Uniform_v4float %View %uint_9
        %603 = OpLoad %v4float %602
        %604 = OpAccessChain %_ptr_Uniform_v4float %View %uint_10
        %605 = OpLoad %v4float %604
        %606 = OpAccessChain %_ptr_Uniform_v4float %View %uint_12
        %607 = OpLoad %v4float %606
        %608 = OpAccessChain %_ptr_Uniform_float %View %uint_14
        %609 = OpLoad %float %608
        %610 = OpAccessChain %_ptr_Uniform_v4float %View %uint_15
        %611 = OpLoad %v4float %610
        %612 = OpAccessChain %_ptr_Uniform_v4float %View %uint_16
        %613 = OpLoad %v4float %612
        %614 = OpAccessChain %_ptr_Uniform_v2float %View %uint_17
        %615 = OpLoad %v2float %614
        %616 = OpAccessChain %_ptr_Uniform_v4float %View %uint_22
        %617 = OpLoad %v4float %616
        %618 = OpAccessChain %_ptr_Uniform_v3float %View %uint_23
        %619 = OpLoad %v3float %618
        %620 = OpAccessChain %_ptr_Uniform_v4float %View %uint_27
        %621 = OpLoad %v4float %620
        %622 = OpFNegate %v3float %593
        %623 = OpVectorShuffle %v3float %580 %580 0 1 2
        %624 = OpVectorShuffle %v2float %583 %583 0 1
        %625 = OpVectorShuffle %v2float %603 %603 0 1
        %626 = OpFSub %v2float %624 %625
        %627 = OpVectorShuffle %v2float %605 %605 2 3
        %628 = OpExtInst %v2float %1 Fma %626 %627 %526
        %629 = OpFMul %v2float %628 %156
        %630 = OpCompositeExtract %float %629 0
        %631 = OpCompositeExtract %float %629 1
        %632 = OpCompositeConstruct %v4float %630 %631 %548 %float_1
        %633 = OpVectorTimesScalar %v4float %632 %585
        %634 = OpCompositeExtract %float %583 0
        %635 = OpCompositeExtract %float %583 1
        %636 = OpCompositeExtract %float %583 2
        %637 = OpCompositeConstruct %v4float %634 %635 %636 %float_1
        %638 = OpMatrixTimesVector %v4float %591 %637
        %639 = OpVectorShuffle %v3float %638 %638 0 1 2
        %640 = OpCompositeExtract %float %638 3
        %641 = OpCompositeConstruct %v3float %640 %640 %640
        %642 = OpFDiv %v3float %639 %641
        %643 = OpFSub %v3float %642 %601
        %644 = OpFSub %v3float %582 %601
        %645 = OpVectorShuffle %v2float %633 %633 0 1
        %646 = OpCompositeExtract %float %633 3
        %647 = OpCompositeConstruct %v2float %646 %646
        %648 = OpFDiv %v2float %645 %647
        %649 = OpVectorShuffle %v2float %597 %597 0 1
        %650 = OpVectorShuffle %v2float %597 %597 3 2
        %651 = OpExtInst %v2float %1 Fma %648 %649 %650
        %652 = OpCompositeExtract %float %589 3 3
        %653 = OpFOrdGreaterThanEqual %bool %652 %float_1
               OpSelectionMerge %654 None
               OpBranchConditional %653 %655 %656
        %656 = OpLabel
        %657 = OpFNegate %v3float %642
        %658 = OpExtInst %v3float %1 Normalize %657
               OpBranch %654
        %655 = OpLabel
        %659 = OpFNegate %v3float %595
               OpBranch %654
        %654 = OpLabel
        %660 = OpPhi %v3float %658 %656 %659 %655
        %661 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_4
        %662 = OpLoad %v4float %661
        %663 = OpCompositeExtract %float %662 0
        %664 = OpCompositeExtract %float %662 1
        %665 = OpCompositeExtract %float %662 2
        %666 = OpCompositeConstruct %v3float %663 %664 %665
        %667 = OpFMul %v3float %593 %503
        %668 = OpFNegate %v3float %643
        %669 = OpExtInst %v3float %1 Fma %668 %138 %666
        %670 = OpCompositeExtract %float %667 0
        %671 = OpCompositeExtract %float %669 0
        %672 = OpFMul %float %671 %float_4_76837158en07
        %673 = OpExtInst %float %1 Fma %671 %float_9_53674316en07 %670
        %674 = OpCompositeExtract %float %667 1
        %675 = OpCompositeExtract %float %669 1
        %676 = OpFMul %float %675 %float_4_76837158en07
        %677 = OpExtInst %float %1 Fma %675 %float_9_53674316en07 %674
        %678 = OpFMul %float %674 %677
        %679 = OpFMul %float %675 %676
        %680 = OpCompositeExtract %float %667 2
        %681 = OpCompositeExtract %float %669 2
        %682 = OpFMul %float %681 %float_4_76837158en07
        %683 = OpExtInst %float %1 Fma %681 %float_9_53674316en07 %680
        %684 = OpExtInst %float %1 Fma %670 %673 %678
        %685 = OpExtInst %float %1 Fma %671 %672 %679
        %686 = OpExtInst %float %1 Fma %680 %683 %684
        %687 = OpExtInst %float %1 Fma %681 %682 %685
        %688 = OpExtInst %float %1 Fma %687 %float_4_76837158en07 %686
        %689 = OpExtInst %float %1 Sqrt %688
        %690 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_1
        %691 = OpLoad %v4float %690
        %692 = OpCompositeExtract %float %691 0
        %693 = OpExtInst %float %1 NMax %float_9_99999975en06 %692
        %694 = OpFDiv %float %float_1 %693
        %695 = OpFMul %float %689 %694
        %696 = OpExtInst %float %1 Fma %695 %float_n2_097152e_11 %float_100000
        %697 = OpExtInst %float %1 FClamp %696 %float_0 %float_1
        %698 = OpExtInst %float %1 FMix %float_1 %float_0 %697
        %699 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_0
        %700 = OpLoad %float %699
        %701 = OpCompositeConstruct %v3float %700 %700 %700
        %702 = OpFMul %v3float %643 %701
        %703 = OpVectorTimesScalar %v3float %702 %float_4_76837158en07
        %704 = OpFAdd %v3float %703 %141
        %705 = OpExtInst %v3float %1 Fma %593 %701 %704
        %706 = OpExtInst %v3float %1 Floor %705
        %707 = OpFNegate %v3float %706
        %708 = OpExtInst %v3float %1 Fma %593 %701 %707
        %709 = OpVectorTimesScalar %v3float %708 %float_2097152
        %710 = OpExtInst %v3float %1 Fma %643 %701 %709
        %711 = OpVectorTimesScalar %v3float %710 %float_1
               OpBranch %712
        %712 = OpLabel
        %713 = OpPhi %v3float %711 %654 %714 %715
        %716 = OpPhi %float %float_1 %654 %717 %715
        %718 = OpPhi %float %float_0 %654 %719 %715
        %720 = OpPhi %uint %uint_0 %654 %721 %715
        %722 = OpULessThan %bool %720 %uint_6
               OpLoopMerge %723 %715 DontUnroll
               OpBranchConditional %722 %715 %723
        %715 = OpLabel
        %724 = OpFMul %v3float %713 %523
        %725 = OpExtInst %v3float %1 Fract %724
        %726 = OpVectorTimesScalar %v3float %725 %float_15
        %727 = OpExtInst %v3float %1 Fract %726
        %728 = OpFSub %v3float %726 %727
        %729 = OpCompositeExtract %float %727 0
        %730 = OpCompositeExtract %float %727 1
        %731 = OpCompositeExtract %float %727 2
        %732 = OpCompositeConstruct %v4float %729 %730 %731 %float_0
        %733 = OpFMul %v4float %732 %732
        %734 = OpFMul %v4float %733 %732
        %735 = OpVectorTimesScalar %v4float %732 %float_6
        %736 = OpFSub %v4float %735 %383
        %737 = OpExtInst %v4float %1 Fma %732 %736 %384
        %738 = OpFMul %v4float %734 %737
        %739 = OpVectorShuffle %v3float %738 %738 0 1 2
        %740 = OpFAdd %v3float %728 %739
        %741 = OpLoad %type_3d_image_0 %View_PerlinNoise3DTexture
        %742 = OpLoad %type_sampler %View_PerlinNoise3DTextureSampler
        %743 = OpExtInst %v3float %1 Fma %740 %524 %463
        %744 = OpSampledImage %type_sampled_image_0 %741 %742
        %745 = OpImageSampleExplicitLod %v4float %744 %743 Lod %float_0
        %746 = OpVectorShuffle %v3float %745 %745 0 1 2
        %747 = OpVectorTimesScalar %v3float %746 %float_255
        %748 = OpExtInst %v3float %1 Fma %747 %525 %282
        %749 = OpCompositeExtract %float %745 3
        %750 = OpExtInst %float %1 Fma %749 %float_255 %float_n127
        %751 = OpDot %float %726 %748
        %752 = OpFSub %float %751 %750
        %753 = OpExtInst %float %1 FAbs %752
        %719 = OpExtInst %float %1 Fma %753 %716 %718
        %714 = OpVectorTimesScalar %v3float %713 %float_2
        %717 = OpFMul %float %716 %float_0_5
        %721 = OpIAdd %uint %720 %uint_1
               OpBranch %712
        %723 = OpLabel
        %754 = OpExtInst %float %1 FMix %float_n1 %float_1 %718
        %755 = OpExtInst %float %1 FClamp %754 %float_0 %float_1
        %756 = OpExtInst %v3float %1 Fma %593 %138 %667
        %757 = OpFMul %v3float %643 %503
        %758 = OpExtInst %v3float %1 Fma %599 %138 %757
        %759 = OpVectorTimesScalar %v3float %756 %float_2097152
        %760 = OpFAdd %v3float %759 %758
        %761 = OpExtInst %float %1 Length %760
        %762 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_0
        %763 = OpLoad %v4float %762
        %764 = OpCompositeExtract %float %763 0
        %765 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_1
        %766 = OpLoad %float %765
        %767 = OpFMul %float %764 %766
        %768 = OpExtInst %float %1 NMax %float_9_99999975en06 %767
        %769 = OpFDiv %float %float_1 %768
        %770 = OpFNegate %float %761
        %771 = OpExtInst %float %1 Fma %770 %769 %float_1
        %772 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_3 %int_1
        %773 = OpLoad %float %772
        %774 = OpFMul %float %771 %773
        %775 = OpExtInst %float %1 FClamp %774 %float_0 %float_1
        %776 = OpExtInst %float %1 FMix %755 %float_1 %775
        %777 = OpFAdd %v3float %593 %622
        %778 = OpVectorTimesScalar %v3float %777 %float_2097152
        %779 = OpFAdd %v3float %778 %642
               OpBranch %780
        %780 = OpLabel
        %781 = OpPhi %v3uint %538 %723 %782 %783
        %784 = OpPhi %uint %uint_0 %723 %785 %783
        %786 = OpPhi %float %float_0 %723 %787 %783
        %788 = OpAccessChain %_ptr_Uniform_uint %View %uint_33
        %789 = OpLoad %uint %788
        %790 = OpULessThan %bool %784 %789
               OpLoopMerge %791 %783 None
               OpBranchConditional %790 %792 %791
        %792 = OpLabel
        %793 = OpAccessChain %_ptr_Uniform_v4float %View %uint_28 %784
        %794 = OpLoad %v4float %793
        %795 = OpVectorShuffle %v3float %794 %794 0 1 2
        %796 = OpVectorShuffle %v3float %794 %794 3 3 3
        %797 = OpFSub %v3float %779 %795
        %798 = OpFAdd %v3float %797 %796
        %799 = OpExtInst %v3float %1 NMax %798 %106
        %800 = OpFAdd %v3float %795 %796
        %801 = OpFSub %v3float %800 %779
        %802 = OpExtInst %v3float %1 NMax %801 %106
        %803 = OpExtInst %v3float %1 NMin %799 %802
        %804 = OpCompositeExtract %float %803 0
        %805 = OpCompositeExtract %float %803 1
        %806 = OpCompositeExtract %float %803 2
        %807 = OpExtInst %float %1 NMin %805 %806
        %808 = OpExtInst %float %1 NMin %804 %807
        %809 = OpAccessChain %_ptr_Uniform_float %View %uint_28 %784 %int_3
        %810 = OpLoad %float %809
        %811 = OpAccessChain %_ptr_Uniform_float %View %uint_32
        %812 = OpLoad %float %811
        %813 = OpFMul %float %810 %812
        %787 = OpFMul %float %float_8 %813
        %814 = OpFOrdGreaterThan %bool %808 %813
               OpSelectionMerge %815 None
               OpBranchConditional %814 %816 %815
        %816 = OpLabel
        %817 = OpAccessChain %_ptr_Uniform_v4float %View %uint_29 %784
        %818 = OpLoad %v4float %817
        %819 = OpVectorShuffle %v3float %818 %818 3 3 3
        %820 = OpVectorShuffle %v3float %818 %818 0 1 2
        %821 = OpExtInst %v3float %1 Fma %779 %819 %820
        %822 = OpExtInst %v3float %1 Fract %821
        %823 = OpExtInst %v3float %1 Fract %822
        %824 = OpExtInst %v3float %1 FClamp %823 %106 %131
        %825 = OpAccessChain %_ptr_Uniform_int %View %uint_30
        %826 = OpLoad %int %825
        %827 = OpConvertSToF %float %826
        %828 = OpVectorTimesScalar %v3float %824 %827
        %829 = OpBitcast %uint %826
        %830 = OpIMul %uint %784 %829
        %831 = OpBitcast %int %830
        %832 = OpCompositeConstruct %v3int %int_0 %int_0 %831
        %833 = OpConvertSToF %v3float %832
        %834 = OpFAdd %v3float %828 %833
        %835 = OpCompositeExtract %float %834 0
        %836 = OpCompositeExtract %float %834 1
        %837 = OpCompositeExtract %float %834 2
        %838 = OpConvertFToS %int %835
        %839 = OpConvertFToS %int %836
        %840 = OpConvertFToS %int %837
        %841 = OpCompositeConstruct %v4int %838 %839 %840 %int_0
        %842 = OpVectorShuffle %v3int %841 %841 0 1 2
        %843 = OpLoad %type_3d_image %View_GlobalDistanceFieldPageTableTexture
        %844 = OpImageFetch %v4uint %843 %842 Lod %int_0
        %845 = OpCompositeExtract %uint %844 0
        %846 = OpBitwiseAnd %uint %845 %uint_16777215
        %847 = OpULessThan %bool %845 %uint_4294967295
               OpSelectionMerge %848 None
               OpBranchConditional %847 %849 %848
        %849 = OpLabel
        %850 = OpBitwiseAnd %uint %846 %uint_127
        %851 = OpCompositeInsert %v3uint %850 %781 0
        %852 = OpShiftRightLogical %uint %846 %uint_7
        %853 = OpBitwiseAnd %uint %852 %uint_127
        %854 = OpCompositeInsert %v3uint %853 %851 1
        %855 = OpShiftRightLogical %uint %846 %uint_14
        %856 = OpCompositeInsert %v3uint %855 %854 2
        %857 = OpVectorTimesScalar %v3float %823 %827
        %858 = OpExtInst %v3float %1 Fract %857
        %859 = OpIMul %v3uint %856 %354
        %860 = OpConvertUToF %v3float %859
        %861 = OpVectorTimesScalar %v3float %858 %float_7
        %862 = OpFAdd %v3float %860 %861
        %863 = OpFAdd %v3float %862 %141
        %864 = OpAccessChain %_ptr_Uniform_v3float %View %uint_31
        %865 = OpLoad %v3float %864
        %866 = OpFMul %v3float %863 %865
        %867 = OpLoad %type_3d_image_0 %View_GlobalDistanceFieldPageAtlasTexture
        %868 = OpLoad %type_sampler %View_SharedTrilinearWrappedSampler
        %869 = OpSampledImage %type_sampled_image_0 %867 %868
        %870 = OpImageSampleExplicitLod %v4float %869 %866 Lod %float_0
        %871 = OpCompositeExtract %float %870 0
        %872 = OpFOrdLessThan %bool %871 %float_1
               OpSelectionMerge %873 None
               OpBranchConditional %872 %874 %873
        %874 = OpLabel
        %875 = OpExtInst %float %1 Fma %871 %float_2 %float_n1
        %876 = OpFMul %float %875 %787
               OpBranch %791
        %873 = OpLabel
               OpBranch %848
        %848 = OpLabel
        %877 = OpPhi %v3uint %781 %816 %856 %873
               OpBranch %815
        %815 = OpLabel
        %782 = OpPhi %v3uint %781 %792 %877 %848
               OpBranch %783
        %783 = OpLabel
        %785 = OpIAdd %uint %784 %uint_1
               OpBranch %780
        %791 = OpLabel
        %878 = OpPhi %float %786 %780 %876 %874
        %879 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_3 %int_3
        %880 = OpLoad %float %879
        %881 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_4 %int_0
        %882 = OpLoad %float %881
        %883 = OpFNegate %float %882
        %884 = OpExtInst %float %1 Fma %878 %880 %883
        %885 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_4 %int_3
        %886 = OpLoad %float %885
        %887 = OpFMul %float %884 %886
        %888 = OpExtInst %float %1 Fma %887 %float_n1 %float_1
        %889 = OpExtInst %float %1 FClamp %888 %float_0 %float_1
               OpBranch %890
        %890 = OpLabel
        %891 = OpPhi %v3uint %538 %791 %892 %893
        %894 = OpPhi %uint %uint_0 %791 %895 %893
        %896 = OpULessThan %bool %894 %789
               OpLoopMerge %897 %893 None
               OpBranchConditional %896 %898 %897
        %898 = OpLabel
        %899 = OpAccessChain %_ptr_Uniform_v4float %View %uint_28 %894
        %900 = OpAccessChain %_ptr_Uniform_float %View %uint_28 %894 %int_3
        %901 = OpLoad %float %900
        %902 = OpAccessChain %_ptr_Uniform_float %View %uint_32
        %903 = OpLoad %float %902
        %904 = OpFMul %float %901 %903
        %905 = OpLoad %v4float %899
        %906 = OpVectorShuffle %v3float %905 %905 0 1 2
        %907 = OpVectorShuffle %v3float %905 %905 3 3 3
        %908 = OpFSub %v3float %779 %906
        %909 = OpFAdd %v3float %908 %907
        %910 = OpExtInst %v3float %1 NMax %909 %106
        %911 = OpFAdd %v3float %906 %907
        %912 = OpFSub %v3float %911 %779
        %913 = OpExtInst %v3float %1 NMax %912 %106
        %914 = OpExtInst %v3float %1 NMin %910 %913
        %915 = OpCompositeExtract %float %914 0
        %916 = OpCompositeExtract %float %914 1
        %917 = OpCompositeExtract %float %914 2
        %918 = OpExtInst %float %1 NMin %916 %917
        %919 = OpExtInst %float %1 NMin %915 %918
        %920 = OpFOrdGreaterThanEqual %bool %919 %904
               OpSelectionMerge %921 None
               OpBranchConditional %920 %922 %921
        %922 = OpLabel
        %923 = OpAccessChain %_ptr_Uniform_v4float %View %uint_29 %894
        %924 = OpLoad %v4float %923
        %925 = OpVectorShuffle %v3float %924 %924 3 3 3
        %926 = OpVectorShuffle %v3float %924 %924 0 1 2
        %927 = OpExtInst %v3float %1 Fma %779 %925 %926
        %928 = OpExtInst %v3float %1 Fract %927
        %929 = OpExtInst %v3float %1 Fract %928
        %930 = OpExtInst %v3float %1 FClamp %929 %106 %131
        %931 = OpAccessChain %_ptr_Uniform_int %View %uint_30
        %932 = OpLoad %int %931
        %933 = OpConvertSToF %float %932
        %934 = OpVectorTimesScalar %v3float %930 %933
        %935 = OpBitcast %uint %932
        %936 = OpIMul %uint %894 %935
        %937 = OpBitcast %int %936
        %938 = OpCompositeConstruct %v3int %int_0 %int_0 %937
        %939 = OpConvertSToF %v3float %938
        %940 = OpFAdd %v3float %934 %939
        %941 = OpCompositeExtract %float %940 0
        %942 = OpCompositeExtract %float %940 1
        %943 = OpCompositeExtract %float %940 2
        %944 = OpConvertFToS %int %941
        %945 = OpConvertFToS %int %942
        %946 = OpConvertFToS %int %943
        %947 = OpCompositeConstruct %v4int %944 %945 %946 %int_0
        %948 = OpVectorShuffle %v3int %947 %947 0 1 2
        %949 = OpLoad %type_3d_image %View_GlobalDistanceFieldPageTableTexture
        %950 = OpImageFetch %v4uint %949 %948 Lod %int_0
        %951 = OpCompositeExtract %uint %950 0
        %952 = OpBitwiseAnd %uint %951 %uint_16777215
        %953 = OpULessThan %bool %951 %uint_4294967295
               OpSelectionMerge %954 None
               OpBranchConditional %953 %955 %954
        %955 = OpLabel
        %956 = OpBitwiseAnd %uint %952 %uint_127
        %957 = OpCompositeInsert %v3uint %956 %891 0
        %958 = OpShiftRightLogical %uint %952 %uint_7
        %959 = OpBitwiseAnd %uint %958 %uint_127
        %960 = OpCompositeInsert %v3uint %959 %957 1
        %961 = OpShiftRightLogical %uint %952 %uint_14
        %962 = OpCompositeInsert %v3uint %961 %960 2
        %963 = OpVectorTimesScalar %v3float %929 %933
        %964 = OpExtInst %v3float %1 Fract %963
        %965 = OpIMul %v3uint %962 %354
        %966 = OpConvertUToF %v3float %965
        %967 = OpVectorTimesScalar %v3float %964 %float_7
        %968 = OpFAdd %v3float %966 %967
        %969 = OpFAdd %v3float %968 %141
        %970 = OpAccessChain %_ptr_Uniform_v3float %View %uint_31
        %971 = OpLoad %v3float %970
        %972 = OpFMul %v3float %969 %971
        %973 = OpLoad %type_3d_image_0 %View_GlobalDistanceFieldPageAtlasTexture
        %974 = OpLoad %type_sampler %View_SharedTrilinearWrappedSampler
        %975 = OpSampledImage %type_sampled_image_0 %973 %974
        %976 = OpImageSampleExplicitLod %v4float %975 %972 Lod %float_0
        %977 = OpCompositeExtract %float %976 0
        %978 = OpFOrdLessThan %bool %977 %float_0_899999976
               OpSelectionMerge %979 None
               OpBranchConditional %978 %980 %979
        %980 = OpLabel
        %981 = OpFMul %float %float_0_5 %903
        %982 = OpCompositeConstruct %v3float %981 %float_0 %float_0
        %983 = OpFAdd %v3float %929 %982
        %984 = OpExtInst %v3float %1 Fract %983
        %985 = OpExtInst %v3float %1 FClamp %984 %106 %131
        %986 = OpVectorTimesScalar %v3float %985 %933
        %987 = OpFAdd %v3float %986 %939
        %988 = OpCompositeExtract %float %987 0
        %989 = OpCompositeExtract %float %987 1
        %990 = OpCompositeExtract %float %987 2
        %991 = OpConvertFToS %int %988
        %992 = OpConvertFToS %int %989
        %993 = OpConvertFToS %int %990
        %994 = OpCompositeConstruct %v4int %991 %992 %993 %int_0
        %995 = OpVectorShuffle %v3int %994 %994 0 1 2
        %996 = OpImageFetch %v4uint %949 %995 Lod %int_0
        %997 = OpCompositeExtract %uint %996 0
        %998 = OpBitwiseAnd %uint %997 %uint_16777215
        %999 = OpULessThan %bool %997 %uint_4294967295
               OpSelectionMerge %1000 None
               OpBranchConditional %999 %1001 %1000
       %1001 = OpLabel
       %1002 = OpBitwiseAnd %uint %998 %uint_127
       %1003 = OpCompositeInsert %v3uint %1002 %538 0
       %1004 = OpShiftRightLogical %uint %998 %uint_7
       %1005 = OpBitwiseAnd %uint %1004 %uint_127
       %1006 = OpCompositeInsert %v3uint %1005 %1003 1
       %1007 = OpShiftRightLogical %uint %998 %uint_14
       %1008 = OpCompositeInsert %v3uint %1007 %1006 2
       %1009 = OpVectorTimesScalar %v3float %984 %933
       %1010 = OpExtInst %v3float %1 Fract %1009
       %1011 = OpIMul %v3uint %1008 %354
       %1012 = OpConvertUToF %v3float %1011
       %1013 = OpVectorTimesScalar %v3float %1010 %float_7
       %1014 = OpFAdd %v3float %1012 %1013
       %1015 = OpFAdd %v3float %1014 %141
       %1016 = OpFMul %v3float %1015 %971
       %1017 = OpSampledImage %type_sampled_image_0 %973 %974
       %1018 = OpImageSampleExplicitLod %v4float %1017 %1016 Lod %float_0
       %1019 = OpCompositeExtract %float %1018 0
               OpBranch %1000
       %1000 = OpLabel
       %1020 = OpPhi %float %float_1 %980 %1019 %1001
       %1021 = OpFMul %float %903 %float_n0_5
       %1022 = OpCompositeConstruct %v3float %1021 %float_0 %float_0
       %1023 = OpFAdd %v3float %929 %1022
       %1024 = OpExtInst %v3float %1 Fract %1023
       %1025 = OpExtInst %v3float %1 FClamp %1024 %106 %131
       %1026 = OpVectorTimesScalar %v3float %1025 %933
       %1027 = OpFAdd %v3float %1026 %939
       %1028 = OpCompositeExtract %float %1027 0
       %1029 = OpCompositeExtract %float %1027 1
       %1030 = OpCompositeExtract %float %1027 2
       %1031 = OpConvertFToS %int %1028
       %1032 = OpConvertFToS %int %1029
       %1033 = OpConvertFToS %int %1030
       %1034 = OpCompositeConstruct %v4int %1031 %1032 %1033 %int_0
       %1035 = OpVectorShuffle %v3int %1034 %1034 0 1 2
       %1036 = OpImageFetch %v4uint %949 %1035 Lod %int_0
       %1037 = OpCompositeExtract %uint %1036 0
       %1038 = OpBitwiseAnd %uint %1037 %uint_16777215
       %1039 = OpULessThan %bool %1037 %uint_4294967295
               OpSelectionMerge %1040 None
               OpBranchConditional %1039 %1041 %1040
       %1041 = OpLabel
       %1042 = OpBitwiseAnd %uint %1038 %uint_127
       %1043 = OpCompositeInsert %v3uint %1042 %538 0
       %1044 = OpShiftRightLogical %uint %1038 %uint_7
       %1045 = OpBitwiseAnd %uint %1044 %uint_127
       %1046 = OpCompositeInsert %v3uint %1045 %1043 1
       %1047 = OpShiftRightLogical %uint %1038 %uint_14
       %1048 = OpCompositeInsert %v3uint %1047 %1046 2
       %1049 = OpVectorTimesScalar %v3float %1024 %933
       %1050 = OpExtInst %v3float %1 Fract %1049
       %1051 = OpIMul %v3uint %1048 %354
       %1052 = OpConvertUToF %v3float %1051
       %1053 = OpVectorTimesScalar %v3float %1050 %float_7
       %1054 = OpFAdd %v3float %1052 %1053
       %1055 = OpFAdd %v3float %1054 %141
       %1056 = OpFMul %v3float %1055 %971
       %1057 = OpSampledImage %type_sampled_image_0 %973 %974
       %1058 = OpImageSampleExplicitLod %v4float %1057 %1056 Lod %float_0
       %1059 = OpCompositeExtract %float %1058 0
               OpBranch %1040
       %1040 = OpLabel
       %1060 = OpPhi %float %float_1 %1000 %1059 %1041
       %1061 = OpCompositeConstruct %v3float %float_0 %981 %float_0
       %1062 = OpFAdd %v3float %929 %1061
       %1063 = OpExtInst %v3float %1 Fract %1062
       %1064 = OpExtInst %v3float %1 FClamp %1063 %106 %131
       %1065 = OpVectorTimesScalar %v3float %1064 %933
       %1066 = OpFAdd %v3float %1065 %939
       %1067 = OpCompositeExtract %float %1066 0
       %1068 = OpCompositeExtract %float %1066 1
       %1069 = OpCompositeExtract %float %1066 2
       %1070 = OpConvertFToS %int %1067
       %1071 = OpConvertFToS %int %1068
       %1072 = OpConvertFToS %int %1069
       %1073 = OpCompositeConstruct %v4int %1070 %1071 %1072 %int_0
       %1074 = OpVectorShuffle %v3int %1073 %1073 0 1 2
       %1075 = OpImageFetch %v4uint %949 %1074 Lod %int_0
       %1076 = OpCompositeExtract %uint %1075 0
       %1077 = OpBitwiseAnd %uint %1076 %uint_16777215
       %1078 = OpULessThan %bool %1076 %uint_4294967295
               OpSelectionMerge %1079 None
               OpBranchConditional %1078 %1080 %1079
       %1080 = OpLabel
       %1081 = OpBitwiseAnd %uint %1077 %uint_127
       %1082 = OpCompositeInsert %v3uint %1081 %538 0
       %1083 = OpShiftRightLogical %uint %1077 %uint_7
       %1084 = OpBitwiseAnd %uint %1083 %uint_127
       %1085 = OpCompositeInsert %v3uint %1084 %1082 1
       %1086 = OpShiftRightLogical %uint %1077 %uint_14
       %1087 = OpCompositeInsert %v3uint %1086 %1085 2
       %1088 = OpVectorTimesScalar %v3float %1063 %933
       %1089 = OpExtInst %v3float %1 Fract %1088
       %1090 = OpIMul %v3uint %1087 %354
       %1091 = OpConvertUToF %v3float %1090
       %1092 = OpVectorTimesScalar %v3float %1089 %float_7
       %1093 = OpFAdd %v3float %1091 %1092
       %1094 = OpFAdd %v3float %1093 %141
       %1095 = OpFMul %v3float %1094 %971
       %1096 = OpSampledImage %type_sampled_image_0 %973 %974
       %1097 = OpImageSampleExplicitLod %v4float %1096 %1095 Lod %float_0
       %1098 = OpCompositeExtract %float %1097 0
               OpBranch %1079
       %1079 = OpLabel
       %1099 = OpPhi %float %float_1 %1040 %1098 %1080
       %1100 = OpCompositeConstruct %v3float %float_0 %1021 %float_0
       %1101 = OpFAdd %v3float %929 %1100
       %1102 = OpExtInst %v3float %1 Fract %1101
       %1103 = OpExtInst %v3float %1 FClamp %1102 %106 %131
       %1104 = OpVectorTimesScalar %v3float %1103 %933
       %1105 = OpFAdd %v3float %1104 %939
       %1106 = OpCompositeExtract %float %1105 0
       %1107 = OpCompositeExtract %float %1105 1
       %1108 = OpCompositeExtract %float %1105 2
       %1109 = OpConvertFToS %int %1106
       %1110 = OpConvertFToS %int %1107
       %1111 = OpConvertFToS %int %1108
       %1112 = OpCompositeConstruct %v4int %1109 %1110 %1111 %int_0
       %1113 = OpVectorShuffle %v3int %1112 %1112 0 1 2
       %1114 = OpImageFetch %v4uint %949 %1113 Lod %int_0
       %1115 = OpCompositeExtract %uint %1114 0
       %1116 = OpBitwiseAnd %uint %1115 %uint_16777215
       %1117 = OpULessThan %bool %1115 %uint_4294967295
               OpSelectionMerge %1118 None
               OpBranchConditional %1117 %1119 %1118
       %1119 = OpLabel
       %1120 = OpBitwiseAnd %uint %1116 %uint_127
       %1121 = OpCompositeInsert %v3uint %1120 %538 0
       %1122 = OpShiftRightLogical %uint %1116 %uint_7
       %1123 = OpBitwiseAnd %uint %1122 %uint_127
       %1124 = OpCompositeInsert %v3uint %1123 %1121 1
       %1125 = OpShiftRightLogical %uint %1116 %uint_14
       %1126 = OpCompositeInsert %v3uint %1125 %1124 2
       %1127 = OpVectorTimesScalar %v3float %1102 %933
       %1128 = OpExtInst %v3float %1 Fract %1127
       %1129 = OpIMul %v3uint %1126 %354
       %1130 = OpConvertUToF %v3float %1129
       %1131 = OpVectorTimesScalar %v3float %1128 %float_7
       %1132 = OpFAdd %v3float %1130 %1131
       %1133 = OpFAdd %v3float %1132 %141
       %1134 = OpFMul %v3float %1133 %971
       %1135 = OpSampledImage %type_sampled_image_0 %973 %974
       %1136 = OpImageSampleExplicitLod %v4float %1135 %1134 Lod %float_0
       %1137 = OpCompositeExtract %float %1136 0
               OpBranch %1118
       %1118 = OpLabel
       %1138 = OpPhi %float %float_1 %1079 %1137 %1119
       %1139 = OpFSub %float %1020 %1060
       %1140 = OpFSub %float %1099 %1138
       %1141 = OpCompositeConstruct %v3float %1139 %1140 %548
       %1142 = OpFMul %float %904 %float_16
       %1143 = OpFMul %float %float_128 %903
       %1144 = OpVectorTimesScalar %v3float %1141 %1142
       %1145 = OpFMul %float %901 %1143
       %1146 = OpCompositeConstruct %v3float %1145 %1145 %1145
       %1147 = OpFDiv %v3float %1144 %1146
               OpBranch %897
        %979 = OpLabel
               OpBranch %954
        %954 = OpLabel
       %1148 = OpPhi %v3uint %891 %922 %962 %979
               OpBranch %921
        %921 = OpLabel
        %892 = OpPhi %v3uint %891 %898 %1148 %954
               OpBranch %893
        %893 = OpLabel
        %895 = OpIAdd %uint %894 %uint_1
               OpBranch %890
        %897 = OpLabel
       %1149 = OpPhi %v3float %339 %890 %1147 %1118
       %1150 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_5 %int_1
       %1151 = OpLoad %float %1150
       %1152 = OpCompositeConstruct %v3float %1151 %1151 %1151
       %1153 = OpExtInst %v3float %1 Fma %1149 %1152 %644
       %1154 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_5 %int_2
       %1155 = OpLoad %float %1154
       %1156 = OpCompositeConstruct %v3float %1155 %1155 %1155
       %1157 = OpFMul %v3float %593 %1156
       %1158 = OpFMul %v3float %1153 %1156
       %1159 = OpAccessChain %_ptr_Uniform_float %View %uint_19
       %1160 = OpLoad %float %1159
       %1161 = OpCompositeExtract %float %763 2
       %1162 = OpCompositeExtract %float %763 3
       %1163 = OpExtInst %float %1 FMix %1160 %1161 %1162
       %1164 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_6 %int_0
       %1165 = OpLoad %float %1164
       %1166 = OpFMul %float %1163 %1165
       %1167 = OpCompositeConstruct %v2float %1166 %1166
       %1168 = OpFAdd %v2float %1167 %279
       %1169 = OpCompositeExtract %float %1157 0
       %1170 = OpCompositeExtract %float %1158 0
       %1171 = OpCompositeExtract %float %1157 1
       %1172 = OpCompositeExtract %float %1158 1
       %1173 = OpCompositeExtract %float %1168 0
       %1174 = OpCompositeConstruct %v3float %1169 %1171 %float_0
       %1175 = OpCompositeConstruct %v3float %1170 %1172 %1173
       %1176 = OpVectorTimesScalar %v3float %1175 %float_4_76837158en07
       %1177 = OpFAdd %v3float %1176 %141
       %1178 = OpFAdd %v3float %1174 %1177
       %1179 = OpExtInst %v3float %1 Floor %1178
       %1180 = OpFSub %v3float %1174 %1179
       %1181 = OpVectorTimesScalar %v3float %1180 %float_2097152
       %1182 = OpFAdd %v3float %1181 %1175
       %1183 = OpVectorTimesScalar %v3float %1182 %float_1
               OpBranch %1184
       %1184 = OpLabel
       %1185 = OpPhi %v3float %1183 %897 %1186 %1187
       %1188 = OpPhi %float %float_1 %897 %1189 %1187
       %1190 = OpPhi %float %float_0 %897 %1191 %1187
       %1192 = OpPhi %uint %uint_0 %897 %1193 %1187
       %1194 = OpULessThan %bool %1192 %uint_10
               OpLoopMerge %1195 %1187 DontUnroll
               OpBranchConditional %1194 %1187 %1195
       %1187 = OpLabel
       %1196 = OpExtInst %v3float %1 Fract %1185
       %1197 = OpExtInst %v3float %1 Floor %1185
       %1198 = OpDot %float %1197 %387
       %1199 = OpFAdd %float %1198 %float_19
       %1200 = OpFAdd %float %1198 %float_47
       %1201 = OpFAdd %float %1198 %float_66
       %1202 = OpFAdd %float %1198 %float_101
       %1203 = OpFAdd %float %1198 %float_120
       %1204 = OpFAdd %float %1198 %float_148
       %1205 = OpFAdd %float %1198 %float_167
       %1206 = OpConvertFToS %int %1198
       %1207 = OpCompositeConstruct %v3int %1206 %int_0 %int_0
       %1208 = OpBitcast %v3uint %1207
       %1209 = OpIMul %v3uint %1208 %403
       %1210 = OpIAdd %v3uint %1209 %405
       %1211 = OpCompositeExtract %uint %1210 1
       %1212 = OpCompositeExtract %uint %1210 2
       %1213 = OpIMul %uint %1211 %1212
       %1214 = OpCompositeExtract %uint %1210 0
       %1215 = OpIAdd %uint %1214 %1213
       %1216 = OpIMul %uint %1212 %1215
       %1217 = OpIAdd %uint %1211 %1216
       %1218 = OpIMul %uint %1215 %1217
       %1219 = OpIAdd %uint %1212 %1218
       %1220 = OpIMul %uint %1217 %1219
       %1221 = OpIAdd %uint %1215 %1220
       %1222 = OpCompositeInsert %v3uint %1221 %549 0
       %1223 = OpBitwiseAnd %v3uint %406 %407
       %1224 = OpShiftRightLogical %v3uint %1222 %1223
       %1225 = OpCompositeExtract %uint %1224 0
       %1226 = OpCompositeConstruct %v3uint %1225 %1225 %1225
       %1227 = OpBitwiseAnd %v3uint %1226 %388
       %1228 = OpConvertUToF %v3float %1227
       %1229 = OpExtInst %v3float %1 Fma %1228 %392 %282
       %1230 = OpDot %float %1229 %1196
       %1231 = OpConvertFToS %int %1199
       %1232 = OpFSub %v3float %1196 %351
       %1233 = OpCompositeConstruct %v3int %1231 %int_0 %int_0
       %1234 = OpBitcast %v3uint %1233
       %1235 = OpIMul %v3uint %1234 %403
       %1236 = OpIAdd %v3uint %1235 %405
       %1237 = OpCompositeExtract %uint %1236 1
       %1238 = OpCompositeExtract %uint %1236 2
       %1239 = OpIMul %uint %1237 %1238
       %1240 = OpCompositeExtract %uint %1236 0
       %1241 = OpIAdd %uint %1240 %1239
       %1242 = OpIMul %uint %1238 %1241
       %1243 = OpIAdd %uint %1237 %1242
       %1244 = OpIMul %uint %1241 %1243
       %1245 = OpIAdd %uint %1238 %1244
       %1246 = OpIMul %uint %1243 %1245
       %1247 = OpIAdd %uint %1241 %1246
       %1248 = OpCompositeInsert %v3uint %1247 %549 0
       %1249 = OpShiftRightLogical %v3uint %1248 %1223
       %1250 = OpCompositeExtract %uint %1249 0
       %1251 = OpCompositeConstruct %v3uint %1250 %1250 %1250
       %1252 = OpBitwiseAnd %v3uint %1251 %388
       %1253 = OpConvertUToF %v3float %1252
       %1254 = OpExtInst %v3float %1 Fma %1253 %392 %282
       %1255 = OpDot %float %1254 %1232
       %1256 = OpConvertFToS %int %1200
       %1257 = OpFSub %v3float %1196 %352
       %1258 = OpCompositeConstruct %v3int %1256 %int_0 %int_0
       %1259 = OpBitcast %v3uint %1258
       %1260 = OpIMul %v3uint %1259 %403
       %1261 = OpIAdd %v3uint %1260 %405
       %1262 = OpCompositeExtract %uint %1261 1
       %1263 = OpCompositeExtract %uint %1261 2
       %1264 = OpIMul %uint %1262 %1263
       %1265 = OpCompositeExtract %uint %1261 0
       %1266 = OpIAdd %uint %1265 %1264
       %1267 = OpIMul %uint %1263 %1266
       %1268 = OpIAdd %uint %1262 %1267
       %1269 = OpIMul %uint %1266 %1268
       %1270 = OpIAdd %uint %1263 %1269
       %1271 = OpIMul %uint %1268 %1270
       %1272 = OpIAdd %uint %1266 %1271
       %1273 = OpCompositeInsert %v3uint %1272 %549 0
       %1274 = OpShiftRightLogical %v3uint %1273 %1223
       %1275 = OpCompositeExtract %uint %1274 0
       %1276 = OpCompositeConstruct %v3uint %1275 %1275 %1275
       %1277 = OpBitwiseAnd %v3uint %1276 %388
       %1278 = OpConvertUToF %v3float %1277
       %1279 = OpExtInst %v3float %1 Fma %1278 %392 %282
       %1280 = OpDot %float %1279 %1257
       %1281 = OpConvertFToS %int %1201
       %1282 = OpFSub %v3float %1196 %138
       %1283 = OpCompositeConstruct %v3int %1281 %int_0 %int_0
       %1284 = OpBitcast %v3uint %1283
       %1285 = OpIMul %v3uint %1284 %403
       %1286 = OpIAdd %v3uint %1285 %405
       %1287 = OpCompositeExtract %uint %1286 1
       %1288 = OpCompositeExtract %uint %1286 2
       %1289 = OpIMul %uint %1287 %1288
       %1290 = OpCompositeExtract %uint %1286 0
       %1291 = OpIAdd %uint %1290 %1289
       %1292 = OpIMul %uint %1288 %1291
       %1293 = OpIAdd %uint %1287 %1292
       %1294 = OpIMul %uint %1291 %1293
       %1295 = OpIAdd %uint %1288 %1294
       %1296 = OpIMul %uint %1293 %1295
       %1297 = OpIAdd %uint %1291 %1296
       %1298 = OpCompositeInsert %v3uint %1297 %549 0
       %1299 = OpShiftRightLogical %v3uint %1298 %1223
       %1300 = OpCompositeExtract %uint %1299 0
       %1301 = OpCompositeConstruct %v3uint %1300 %1300 %1300
       %1302 = OpBitwiseAnd %v3uint %1301 %388
       %1303 = OpConvertUToF %v3float %1302
       %1304 = OpExtInst %v3float %1 Fma %1303 %392 %282
       %1305 = OpDot %float %1304 %1282
       %1306 = OpConvertFToS %int %1202
       %1307 = OpFSub %v3float %1196 %294
       %1308 = OpCompositeConstruct %v3int %1306 %int_0 %int_0
       %1309 = OpBitcast %v3uint %1308
       %1310 = OpIMul %v3uint %1309 %403
       %1311 = OpIAdd %v3uint %1310 %405
       %1312 = OpCompositeExtract %uint %1311 1
       %1313 = OpCompositeExtract %uint %1311 2
       %1314 = OpIMul %uint %1312 %1313
       %1315 = OpCompositeExtract %uint %1311 0
       %1316 = OpIAdd %uint %1315 %1314
       %1317 = OpIMul %uint %1313 %1316
       %1318 = OpIAdd %uint %1312 %1317
       %1319 = OpIMul %uint %1316 %1318
       %1320 = OpIAdd %uint %1313 %1319
       %1321 = OpIMul %uint %1318 %1320
       %1322 = OpIAdd %uint %1316 %1321
       %1323 = OpCompositeInsert %v3uint %1322 %549 0
       %1324 = OpShiftRightLogical %v3uint %1323 %1223
       %1325 = OpCompositeExtract %uint %1324 0
       %1326 = OpCompositeConstruct %v3uint %1325 %1325 %1325
       %1327 = OpBitwiseAnd %v3uint %1326 %388
       %1328 = OpConvertUToF %v3float %1327
       %1329 = OpExtInst %v3float %1 Fma %1328 %392 %282
       %1330 = OpDot %float %1329 %1307
       %1331 = OpConvertFToS %int %1203
       %1332 = OpFSub %v3float %1196 %143
       %1333 = OpCompositeConstruct %v3int %1331 %int_0 %int_0
       %1334 = OpBitcast %v3uint %1333
       %1335 = OpIMul %v3uint %1334 %403
       %1336 = OpIAdd %v3uint %1335 %405
       %1337 = OpCompositeExtract %uint %1336 1
       %1338 = OpCompositeExtract %uint %1336 2
       %1339 = OpIMul %uint %1337 %1338
       %1340 = OpCompositeExtract %uint %1336 0
       %1341 = OpIAdd %uint %1340 %1339
       %1342 = OpIMul %uint %1338 %1341
       %1343 = OpIAdd %uint %1337 %1342
       %1344 = OpIMul %uint %1341 %1343
       %1345 = OpIAdd %uint %1338 %1344
       %1346 = OpIMul %uint %1343 %1345
       %1347 = OpIAdd %uint %1341 %1346
       %1348 = OpCompositeInsert %v3uint %1347 %549 0
       %1349 = OpShiftRightLogical %v3uint %1348 %1223
       %1350 = OpCompositeExtract %uint %1349 0
       %1351 = OpCompositeConstruct %v3uint %1350 %1350 %1350
       %1352 = OpBitwiseAnd %v3uint %1351 %388
       %1353 = OpConvertUToF %v3float %1352
       %1354 = OpExtInst %v3float %1 Fma %1353 %392 %282
       %1355 = OpDot %float %1354 %1332
       %1356 = OpConvertFToS %int %1204
       %1357 = OpFSub %v3float %1196 %139
       %1358 = OpCompositeConstruct %v3int %1356 %int_0 %int_0
       %1359 = OpBitcast %v3uint %1358
       %1360 = OpIMul %v3uint %1359 %403
       %1361 = OpIAdd %v3uint %1360 %405
       %1362 = OpCompositeExtract %uint %1361 1
       %1363 = OpCompositeExtract %uint %1361 2
       %1364 = OpIMul %uint %1362 %1363
       %1365 = OpCompositeExtract %uint %1361 0
       %1366 = OpIAdd %uint %1365 %1364
       %1367 = OpIMul %uint %1363 %1366
       %1368 = OpIAdd %uint %1362 %1367
       %1369 = OpIMul %uint %1366 %1368
       %1370 = OpIAdd %uint %1363 %1369
       %1371 = OpIMul %uint %1368 %1370
       %1372 = OpIAdd %uint %1366 %1371
       %1373 = OpCompositeInsert %v3uint %1372 %549 0
       %1374 = OpShiftRightLogical %v3uint %1373 %1223
       %1375 = OpCompositeExtract %uint %1374 0
       %1376 = OpCompositeConstruct %v3uint %1375 %1375 %1375
       %1377 = OpBitwiseAnd %v3uint %1376 %388
       %1378 = OpConvertUToF %v3float %1377
       %1379 = OpExtInst %v3float %1 Fma %1378 %392 %282
       %1380 = OpDot %float %1379 %1357
       %1381 = OpConvertFToS %int %1205
       %1382 = OpFSub %v3float %1196 %131
       %1383 = OpCompositeConstruct %v3int %1381 %int_0 %int_0
       %1384 = OpBitcast %v3uint %1383
       %1385 = OpIMul %v3uint %1384 %403
       %1386 = OpIAdd %v3uint %1385 %405
       %1387 = OpCompositeExtract %uint %1386 1
       %1388 = OpCompositeExtract %uint %1386 2
       %1389 = OpIMul %uint %1387 %1388
       %1390 = OpCompositeExtract %uint %1386 0
       %1391 = OpIAdd %uint %1390 %1389
       %1392 = OpIMul %uint %1388 %1391
       %1393 = OpIAdd %uint %1387 %1392
       %1394 = OpIMul %uint %1391 %1393
       %1395 = OpIAdd %uint %1388 %1394
       %1396 = OpIMul %uint %1393 %1395
       %1397 = OpIAdd %uint %1391 %1396
       %1398 = OpCompositeInsert %v3uint %1397 %549 0
       %1399 = OpShiftRightLogical %v3uint %1398 %1223
       %1400 = OpCompositeExtract %uint %1399 0
       %1401 = OpCompositeConstruct %v3uint %1400 %1400 %1400
       %1402 = OpBitwiseAnd %v3uint %1401 %388
       %1403 = OpConvertUToF %v3float %1402
       %1404 = OpExtInst %v3float %1 Fma %1403 %392 %282
       %1405 = OpDot %float %1404 %1382
       %1406 = OpCompositeExtract %float %1196 0
       %1407 = OpCompositeExtract %float %1196 1
       %1408 = OpCompositeExtract %float %1196 2
       %1409 = OpCompositeConstruct %v4float %1406 %1407 %1408 %float_0
       %1410 = OpFMul %v4float %1409 %1409
       %1411 = OpFMul %v4float %1410 %1409
       %1412 = OpVectorTimesScalar %v4float %1409 %float_6
       %1413 = OpFSub %v4float %1412 %383
       %1414 = OpExtInst %v4float %1 Fma %1409 %1413 %384
       %1415 = OpFMul %v4float %1411 %1414
       %1416 = OpCompositeExtract %float %1415 0
       %1417 = OpExtInst %float %1 FMix %1230 %1255 %1416
       %1418 = OpExtInst %float %1 FMix %1280 %1305 %1416
       %1419 = OpCompositeExtract %float %1415 1
       %1420 = OpExtInst %float %1 FMix %1417 %1418 %1419
       %1421 = OpExtInst %float %1 FMix %1330 %1355 %1416
       %1422 = OpExtInst %float %1 FMix %1380 %1405 %1416
       %1423 = OpExtInst %float %1 FMix %1421 %1422 %1419
       %1424 = OpCompositeExtract %float %1415 2
       %1425 = OpExtInst %float %1 FMix %1420 %1423 %1424
       %1426 = OpExtInst %float %1 FAbs %1425
       %1191 = OpExtInst %float %1 Fma %1426 %1188 %1190
       %1186 = OpVectorTimesScalar %v3float %1185 %float_2
       %1189 = OpFMul %float %1188 %float_0_5
       %1193 = OpIAdd %uint %1192 %uint_1
               OpBranch %1184
       %1195 = OpLabel
       %1427 = OpExtInst %float %1 FMix %float_0 %float_1 %1190
       %1428 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_6 %int_1
       %1429 = OpLoad %float %1428
       %1430 = OpFNegate %float %889
       %1431 = OpExtInst %float %1 Fma %1430 %1429 %1427
       %1432 = OpExtInst %float %1 Fma %889 %1429 %float_1
       %1433 = OpExtInst %float %1 Fma %1430 %1429 %1432
       %1434 = OpFDiv %float %1431 %1433
       %1435 = OpExtInst %float %1 Fma %1434 %float_n1 %float_1
       %1436 = OpExtInst %float %1 FClamp %1435 %float_0 %float_1
       %1437 = OpFOrdLessThanEqual %bool %1436 %float_0
       %1438 = OpExtInst %float %1 Pow %1436 %float_2
       %1439 = OpSelect %float %1437 %float_0 %1438
       %1440 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_6 %int_3
       %1441 = OpLoad %float %1440
       %1442 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_6 %int_2
       %1443 = OpLoad %float %1442
       %1444 = OpExtInst %float %1 FMix %1441 %1443 %1439
       %1445 = OpExtInst %float %1 FClamp %1444 %float_0 %float_1
       %1446 = OpFMul %float %889 %1445
       %1447 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_7 %int_0
       %1448 = OpLoad %float %1447
       %1449 = OpCompositeConstruct %v3float %1448 %1448 %1448
       %1450 = OpFMul %v3float %593 %1449
       %1451 = OpFMul %v3float %644 %1449
       %1452 = OpVectorTimesScalar %v3float %1451 %float_4_76837158en07
       %1453 = OpFAdd %v3float %1452 %141
       %1454 = OpExtInst %v3float %1 Fma %593 %1449 %1453
       %1455 = OpExtInst %v3float %1 Floor %1454
       %1456 = OpFNegate %v3float %1455
       %1457 = OpExtInst %v3float %1 Fma %593 %1449 %1456
       %1458 = OpVectorTimesScalar %v3float %1457 %float_2097152
       %1459 = OpExtInst %v3float %1 Fma %644 %1449 %1458
       %1460 = OpVectorTimesScalar %v3float %1459 %float_1
               OpBranch %1461
       %1461 = OpLabel
       %1462 = OpPhi %v3float %540 %1195 %1463 %1464
       %1465 = OpPhi %v3float %1460 %1195 %1466 %1464
       %1467 = OpPhi %float %float_1 %1195 %1468 %1464
       %1469 = OpPhi %float %float_0 %1195 %1470 %1464
       %1471 = OpPhi %uint %uint_0 %1195 %1472 %1464
       %1473 = OpULessThan %bool %1471 %uint_1
               OpLoopMerge %1474 %1464 DontUnroll
               OpBranchConditional %1473 %1475 %1474
       %1475 = OpLabel
       %1476 = OpExtInst %v3float %1 Fract %1465
       %1477 = OpExtInst %v3float %1 Floor %1465
       %1478 = OpCompositeInsert %v3float %float_0 %1462 0
               OpBranch %1479
       %1479 = OpLabel
       %1480 = OpPhi %v4float %353 %1475 %1481 %1482
       %1463 = OpPhi %v3float %1478 %1475 %1483 %1482
       %1484 = OpCompositeExtract %float %1463 0
       %1485 = OpFOrdLessThanEqual %bool %1484 %float_1
               OpLoopMerge %1486 %1482 None
               OpBranchConditional %1485 %1487 %1486
       %1487 = OpLabel
       %1488 = OpCompositeInsert %v3float %float_0 %1463 1
               OpBranch %1489
       %1489 = OpLabel
       %1490 = OpPhi %v3float %1488 %1487 %1491 %1492
       %1481 = OpPhi %v4float %1480 %1487 %1493 %1492
       %1494 = OpCompositeExtract %float %1490 1
       %1495 = OpFOrdLessThanEqual %bool %1494 %float_1
               OpLoopMerge %1496 %1492 None
               OpBranchConditional %1495 %1497 %1496
       %1497 = OpLabel
       %1498 = OpCompositeInsert %v3float %float_0 %1490 2
               OpBranch %1499
       %1499 = OpLabel
       %1493 = OpPhi %v4float %1481 %1497 %1500 %1501
       %1502 = OpPhi %v3float %1498 %1497 %1503 %1501
       %1504 = OpCompositeExtract %float %1502 2
       %1505 = OpFOrdLessThanEqual %bool %1504 %float_1
               OpLoopMerge %1506 %1501 None
               OpBranchConditional %1505 %1501 %1506
       %1501 = OpLabel
       %1507 = OpFAdd %v3float %1477 %1502
       %1508 = OpVectorShuffle %v3float %537 %1507 3 4 5
       %1509 = OpConvertFToS %v3int %1508
       %1510 = OpBitcast %v3uint %1509
       %1511 = OpIMul %v3uint %1510 %403
       %1512 = OpIAdd %v3uint %1511 %405
       %1513 = OpCompositeExtract %uint %1512 1
       %1514 = OpCompositeExtract %uint %1512 2
       %1515 = OpIMul %uint %1513 %1514
       %1516 = OpCompositeExtract %uint %1512 0
       %1517 = OpIAdd %uint %1516 %1515
       %1518 = OpIMul %uint %1514 %1517
       %1519 = OpIAdd %uint %1513 %1518
       %1520 = OpIMul %uint %1517 %1519
       %1521 = OpIAdd %uint %1514 %1520
       %1522 = OpIMul %uint %1519 %1521
       %1523 = OpIAdd %uint %1517 %1522
       %1524 = OpCompositeInsert %v3uint %1523 %1512 0
       %1525 = OpIMul %uint %1521 %1523
       %1526 = OpIAdd %uint %1519 %1525
       %1527 = OpCompositeInsert %v3uint %1526 %1524 1
       %1528 = OpIMul %uint %1523 %1526
       %1529 = OpIAdd %uint %1521 %1528
       %1530 = OpCompositeInsert %v3uint %1529 %1527 2
       %1531 = OpBitwiseAnd %v3uint %406 %407
       %1532 = OpShiftRightLogical %v3uint %1530 %1531
       %1533 = OpConvertUToF %v3float %1532
       %1534 = OpExtInst %v3float %1 Fma %1533 %521 %510
       %1535 = OpExtInst %v3float %1 Normalize %1534
       %1536 = OpVectorTimesScalar %v3float %1535 %float_0_2588
       %1537 = OpFAdd %v3float %1502 %1536
       %1538 = OpFSub %v3float %1476 %1537
       %1539 = OpCompositeExtract %float %1493 3
       %1540 = OpDot %float %1538 %1538
       %1541 = OpExtInst %float %1 NMin %1539 %1540
       %1500 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %1541
       %1542 = OpFAdd %float %1504 %float_1
       %1503 = OpCompositeInsert %v3float %1542 %1502 2
               OpBranch %1499
       %1506 = OpLabel
               OpBranch %1492
       %1492 = OpLabel
       %1543 = OpCompositeExtract %float %1502 1
       %1544 = OpFAdd %float %1543 %float_1
       %1491 = OpCompositeInsert %v3float %1544 %1502 1
               OpBranch %1489
       %1496 = OpLabel
               OpBranch %1482
       %1482 = OpLabel
       %1545 = OpCompositeExtract %float %1490 0
       %1546 = OpFAdd %float %1545 %float_1
       %1483 = OpCompositeInsert %v3float %1546 %1490 0
               OpBranch %1479
       %1486 = OpLabel
       %1547 = OpCompositeExtract %float %1480 3
       %1548 = OpExtInst %float %1 Sqrt %1547
       %1549 = OpExtInst %float %1 Fma %1548 %float_2 %float_n1
       %1550 = OpExtInst %float %1 FAbs %1549
       %1470 = OpExtInst %float %1 Fma %1550 %1467 %1469
       %1466 = OpVectorTimesScalar %v3float %1465 %float_2
       %1468 = OpFMul %float %1467 %float_0_5
               OpBranch %1464
       %1464 = OpLabel
       %1472 = OpIAdd %uint %1471 %uint_1
               OpBranch %1461
       %1474 = OpLabel
       %1551 = OpExtInst %float %1 FMix %float_n1 %float_1 %1469
       %1552 = OpExtInst %float %1 FClamp %1551 %float_0 %float_1
       %1553 = OpFMul %v3float %1451 %281
       %1554 = OpVectorTimesScalar %v3float %1553 %float_4_76837158en07
       %1555 = OpFAdd %v3float %1554 %141
       %1556 = OpExtInst %v3float %1 Fma %1450 %281 %1555
       %1557 = OpExtInst %v3float %1 Floor %1556
       %1558 = OpFNegate %v3float %1557
       %1559 = OpExtInst %v3float %1 Fma %1450 %281 %1558
       %1560 = OpVectorTimesScalar %v3float %1559 %float_2097152
       %1561 = OpExtInst %v3float %1 Fma %1451 %281 %1560
       %1562 = OpVectorTimesScalar %v3float %1561 %float_1
               OpBranch %1563
       %1563 = OpLabel
       %1564 = OpPhi %v3float %540 %1474 %1565 %1566
       %1567 = OpPhi %v3float %1562 %1474 %1568 %1566
       %1569 = OpPhi %float %float_1 %1474 %1570 %1566
       %1571 = OpPhi %float %float_0 %1474 %1572 %1566
       %1573 = OpPhi %uint %uint_0 %1474 %1574 %1566
       %1575 = OpULessThan %bool %1573 %uint_1
               OpLoopMerge %1576 %1566 DontUnroll
               OpBranchConditional %1575 %1577 %1576
       %1577 = OpLabel
       %1578 = OpExtInst %v3float %1 Fract %1567
       %1579 = OpExtInst %v3float %1 Floor %1567
       %1580 = OpCompositeInsert %v3float %float_0 %1564 0
               OpBranch %1581
       %1581 = OpLabel
       %1582 = OpPhi %v4float %353 %1577 %1583 %1584
       %1565 = OpPhi %v3float %1580 %1577 %1585 %1584
       %1586 = OpCompositeExtract %float %1565 0
       %1587 = OpFOrdLessThanEqual %bool %1586 %float_1
               OpLoopMerge %1588 %1584 None
               OpBranchConditional %1587 %1589 %1588
       %1589 = OpLabel
       %1590 = OpCompositeInsert %v3float %float_0 %1565 1
               OpBranch %1591
       %1591 = OpLabel
       %1592 = OpPhi %v3float %1590 %1589 %1593 %1594
       %1583 = OpPhi %v4float %1582 %1589 %1595 %1594
       %1596 = OpCompositeExtract %float %1592 1
       %1597 = OpFOrdLessThanEqual %bool %1596 %float_1
               OpLoopMerge %1598 %1594 None
               OpBranchConditional %1597 %1599 %1598
       %1599 = OpLabel
       %1600 = OpCompositeInsert %v3float %float_0 %1592 2
               OpBranch %1601
       %1601 = OpLabel
       %1595 = OpPhi %v4float %1583 %1599 %1602 %1603
       %1604 = OpPhi %v3float %1600 %1599 %1605 %1603
       %1606 = OpCompositeExtract %float %1604 2
       %1607 = OpFOrdLessThanEqual %bool %1606 %float_1
               OpLoopMerge %1608 %1603 None
               OpBranchConditional %1607 %1603 %1608
       %1603 = OpLabel
       %1609 = OpFAdd %v3float %1579 %1604
       %1610 = OpVectorShuffle %v3float %537 %1609 3 4 5
       %1611 = OpConvertFToS %v3int %1610
       %1612 = OpBitcast %v3uint %1611
       %1613 = OpIMul %v3uint %1612 %403
       %1614 = OpIAdd %v3uint %1613 %405
       %1615 = OpCompositeExtract %uint %1614 1
       %1616 = OpCompositeExtract %uint %1614 2
       %1617 = OpIMul %uint %1615 %1616
       %1618 = OpCompositeExtract %uint %1614 0
       %1619 = OpIAdd %uint %1618 %1617
       %1620 = OpIMul %uint %1616 %1619
       %1621 = OpIAdd %uint %1615 %1620
       %1622 = OpIMul %uint %1619 %1621
       %1623 = OpIAdd %uint %1616 %1622
       %1624 = OpIMul %uint %1621 %1623
       %1625 = OpIAdd %uint %1619 %1624
       %1626 = OpCompositeInsert %v3uint %1625 %1614 0
       %1627 = OpIMul %uint %1623 %1625
       %1628 = OpIAdd %uint %1621 %1627
       %1629 = OpCompositeInsert %v3uint %1628 %1626 1
       %1630 = OpIMul %uint %1625 %1628
       %1631 = OpIAdd %uint %1623 %1630
       %1632 = OpCompositeInsert %v3uint %1631 %1629 2
       %1633 = OpBitwiseAnd %v3uint %406 %407
       %1634 = OpShiftRightLogical %v3uint %1632 %1633
       %1635 = OpConvertUToF %v3float %1634
       %1636 = OpExtInst %v3float %1 Fma %1635 %521 %510
       %1637 = OpExtInst %v3float %1 Normalize %1636
       %1638 = OpVectorTimesScalar %v3float %1637 %float_0_2588
       %1639 = OpFAdd %v3float %1604 %1638
       %1640 = OpFSub %v3float %1578 %1639
       %1641 = OpCompositeExtract %float %1595 3
       %1642 = OpDot %float %1640 %1640
       %1643 = OpExtInst %float %1 NMin %1641 %1642
       %1602 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %1643
       %1644 = OpFAdd %float %1606 %float_1
       %1605 = OpCompositeInsert %v3float %1644 %1604 2
               OpBranch %1601
       %1608 = OpLabel
               OpBranch %1594
       %1594 = OpLabel
       %1645 = OpCompositeExtract %float %1604 1
       %1646 = OpFAdd %float %1645 %float_1
       %1593 = OpCompositeInsert %v3float %1646 %1604 1
               OpBranch %1591
       %1598 = OpLabel
               OpBranch %1584
       %1584 = OpLabel
       %1647 = OpCompositeExtract %float %1592 0
       %1648 = OpFAdd %float %1647 %float_1
       %1585 = OpCompositeInsert %v3float %1648 %1592 0
               OpBranch %1581
       %1588 = OpLabel
       %1649 = OpCompositeExtract %float %1582 3
       %1650 = OpExtInst %float %1 Sqrt %1649
       %1651 = OpExtInst %float %1 Fma %1650 %float_2 %float_n1
       %1652 = OpExtInst %float %1 FAbs %1651
       %1572 = OpExtInst %float %1 Fma %1652 %1569 %1571
       %1568 = OpVectorTimesScalar %v3float %1567 %float_2
       %1570 = OpFMul %float %1569 %float_0_5
               OpBranch %1566
       %1566 = OpLabel
       %1574 = OpIAdd %uint %1573 %uint_1
               OpBranch %1563
       %1576 = OpLabel
       %1653 = OpExtInst %float %1 FMix %float_n1 %float_1 %1571
       %1654 = OpExtInst %float %1 FClamp %1653 %float_0 %float_1
       %1655 = OpFAdd %float %1552 %1654
       %1656 = OpFNegate %float %1655
       %1657 = OpExtInst %float %1 Fma %889 %1445 %1656
       %1658 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_7 %int_1
       %1659 = OpLoad %float %1658
       %1660 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_7 %int_2
       %1661 = OpLoad %float %1660
       %1662 = OpFSub %float %1661 %float_n1
       %1663 = OpExtInst %float %1 FAbs %1662
       %1664 = OpFOrdGreaterThan %bool %1663 %float_9_99999975en06
       %1665 = OpFOrdGreaterThanEqual %bool %1661 %float_n1
       %1666 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_7 %int_3
       %1667 = OpLoad %float %1666
       %1668 = OpSelect %float %1665 %1661 %1667
       %1669 = OpSelect %float %1664 %1668 %1661
       %1670 = OpFSub %float %1669 %float_1
       %1671 = OpExtInst %float %1 FAbs %1670
       %1672 = OpFOrdGreaterThan %bool %1671 %float_9_99999975en06
       %1673 = OpFOrdGreaterThanEqual %bool %1669 %float_1
       %1674 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_8 %int_0
       %1675 = OpLoad %float %1674
       %1676 = OpSelect %float %1673 %1675 %1661
       %1677 = OpSelect %float %1672 %1676 %1661
       %1678 = OpExtInst %float %1 FAbs %1677
       %1679 = OpFOrdGreaterThan %bool %1678 %float_9_99999975en06
       %1680 = OpFOrdGreaterThanEqual %bool %1677 %float_0
       %1681 = OpSelect %float %1680 %float_1 %float_n1
       %1682 = OpSelect %float %1679 %1681 %float_1
       %1683 = OpExtInst %float %1 NMax %1682 %float_n1
       %1684 = OpExtInst %float %1 NMin %1683 %float_1
       %1685 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_10 %int_1
       %1686 = OpLoad %float %1685
       %1687 = OpCompositeConstruct %v3float %1684 %1686 %float_0
       %1688 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_11
       %1689 = OpLoad %v4float %1688
       %1690 = OpVectorShuffle %v3float %1689 %1689 0 1 2
       %1691 = OpFAdd %v3float %1687 %1690
       %1692 = OpExtInst %v3float %1 NMax %1691 %282
       %1693 = OpExtInst %v3float %1 NMin %1692 %131
       %1694 = OpCompositeExtract %float %593 0
       %1695 = OpCompositeExtract %float %644 0
       %1696 = OpCompositeExtract %float %593 1
       %1697 = OpCompositeExtract %float %644 1
       %1698 = OpCompositeConstruct %v2float %1694 %1696
       %1699 = OpCompositeConstruct %v2float %1695 %1697
       %1700 = OpCompositeExtract %float %1693 0
       %1701 = OpCompositeExtract %float %1693 1
       %1702 = OpCompositeConstruct %v2float %1700 %1701
       %1703 = OpFMul %v2float %1698 %1702
       %1704 = OpFMul %v2float %1702 %1699
       %1705 = OpCompositeExtract %float %1703 0
       %1706 = OpCompositeExtract %float %1704 0
       %1707 = OpCompositeExtract %float %1703 1
       %1708 = OpCompositeExtract %float %1704 1
       %1709 = OpFAdd %float %1705 %1707
       %1710 = OpFAdd %float %1706 %1708
       %1711 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_14 %int_0
       %1712 = OpLoad %float %1711
       %1713 = OpFMul %float %1709 %1712
       %1714 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_14 %int_2
       %1715 = OpLoad %float %1714
       %1716 = OpFSub %float %1163 %1715
       %1717 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_14 %int_3
       %1718 = OpLoad %float %1717
       %1719 = OpCompositeConstruct %v3float %1718 %1718 %1718
       %1720 = OpFMul %v3float %593 %1719
       %1721 = OpFMul %v3float %1719 %644
       %1722 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_15 %int_0
       %1723 = OpLoad %float %1722
       %1724 = OpCompositeConstruct %v3float %1723 %1723 %1723
       %1725 = OpFMul %v3float %1720 %1724
       %1726 = OpFMul %v3float %1721 %1724
       %1727 = OpCompositeExtract %float %763 1
       %1728 = OpCompositeConstruct %v3float %1727 %1727 %1727
       %1729 = OpFMul %v3float %1725 %1728
       %1730 = OpFMul %v3float %1726 %1728
       %1731 = OpFMul %v3float %1730 %284
       %1732 = OpCompositeExtract %float %1731 0
       %1733 = OpCompositeExtract %float %1731 1
       %1734 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_15 %int_2
       %1735 = OpLoad %float %1734
       %1736 = OpFMul %float %1163 %1735
       %1737 = OpCompositeExtract %float %1731 2
       %1738 = OpCompositeConstruct %v2float %1736 %1736
       %1739 = OpCompositeConstruct %v2float %1737 %1737
       %1740 = OpFAdd %v2float %1738 %1739
       %1741 = OpCompositeExtract %float %1740 0
       %1742 = OpCompositeConstruct %v3float %1732 %1733 %1741
       %1743 = OpVectorTimesScalar %v3float %1742 %float_4_76837158en07
       %1744 = OpFAdd %v3float %1743 %141
       %1745 = OpExtInst %v3float %1 Fma %1729 %284 %1744
       %1746 = OpExtInst %v3float %1 Floor %1745
       %1747 = OpFNegate %v3float %1746
       %1748 = OpExtInst %v3float %1 Fma %1729 %284 %1747
       %1749 = OpVectorTimesScalar %v3float %1748 %float_2097152
       %1750 = OpFAdd %v3float %1749 %1742
       %1751 = OpVectorTimesScalar %v3float %1750 %float_1
               OpBranch %1752
       %1752 = OpLabel
       %1753 = OpPhi %v3float %1751 %1576 %1754 %1755
       %1756 = OpPhi %float %float_1 %1576 %1757 %1755
       %1758 = OpPhi %float %float_0 %1576 %1759 %1755
       %1760 = OpPhi %uint %uint_0 %1576 %1761 %1755
       %1762 = OpULessThan %bool %1760 %uint_6
               OpLoopMerge %1763 %1755 DontUnroll
               OpBranchConditional %1762 %1755 %1763
       %1755 = OpLabel
       %1764 = OpExtInst %v3float %1 Fract %1753
       %1765 = OpExtInst %v3float %1 Floor %1753
       %1766 = OpDot %float %1765 %387
       %1767 = OpFAdd %float %1766 %float_19
       %1768 = OpFAdd %float %1766 %float_47
       %1769 = OpFAdd %float %1766 %float_66
       %1770 = OpFAdd %float %1766 %float_101
       %1771 = OpFAdd %float %1766 %float_120
       %1772 = OpFAdd %float %1766 %float_148
       %1773 = OpFAdd %float %1766 %float_167
       %1774 = OpConvertFToS %int %1766
       %1775 = OpCompositeConstruct %v3int %1774 %int_0 %int_0
       %1776 = OpBitcast %v3uint %1775
       %1777 = OpIMul %v3uint %1776 %403
       %1778 = OpIAdd %v3uint %1777 %405
       %1779 = OpCompositeExtract %uint %1778 1
       %1780 = OpCompositeExtract %uint %1778 2
       %1781 = OpIMul %uint %1779 %1780
       %1782 = OpCompositeExtract %uint %1778 0
       %1783 = OpIAdd %uint %1782 %1781
       %1784 = OpIMul %uint %1780 %1783
       %1785 = OpIAdd %uint %1779 %1784
       %1786 = OpIMul %uint %1783 %1785
       %1787 = OpIAdd %uint %1780 %1786
       %1788 = OpIMul %uint %1785 %1787
       %1789 = OpIAdd %uint %1783 %1788
       %1790 = OpCompositeInsert %v3uint %1789 %549 0
       %1791 = OpBitwiseAnd %v3uint %406 %407
       %1792 = OpShiftRightLogical %v3uint %1790 %1791
       %1793 = OpCompositeExtract %uint %1792 0
       %1794 = OpCompositeConstruct %v3uint %1793 %1793 %1793
       %1795 = OpBitwiseAnd %v3uint %1794 %388
       %1796 = OpConvertUToF %v3float %1795
       %1797 = OpExtInst %v3float %1 Fma %1796 %392 %282
       %1798 = OpDot %float %1797 %1764
       %1799 = OpConvertFToS %int %1767
       %1800 = OpFSub %v3float %1764 %351
       %1801 = OpCompositeConstruct %v3int %1799 %int_0 %int_0
       %1802 = OpBitcast %v3uint %1801
       %1803 = OpIMul %v3uint %1802 %403
       %1804 = OpIAdd %v3uint %1803 %405
       %1805 = OpCompositeExtract %uint %1804 1
       %1806 = OpCompositeExtract %uint %1804 2
       %1807 = OpIMul %uint %1805 %1806
       %1808 = OpCompositeExtract %uint %1804 0
       %1809 = OpIAdd %uint %1808 %1807
       %1810 = OpIMul %uint %1806 %1809
       %1811 = OpIAdd %uint %1805 %1810
       %1812 = OpIMul %uint %1809 %1811
       %1813 = OpIAdd %uint %1806 %1812
       %1814 = OpIMul %uint %1811 %1813
       %1815 = OpIAdd %uint %1809 %1814
       %1816 = OpCompositeInsert %v3uint %1815 %549 0
       %1817 = OpShiftRightLogical %v3uint %1816 %1791
       %1818 = OpCompositeExtract %uint %1817 0
       %1819 = OpCompositeConstruct %v3uint %1818 %1818 %1818
       %1820 = OpBitwiseAnd %v3uint %1819 %388
       %1821 = OpConvertUToF %v3float %1820
       %1822 = OpExtInst %v3float %1 Fma %1821 %392 %282
       %1823 = OpDot %float %1822 %1800
       %1824 = OpConvertFToS %int %1768
       %1825 = OpFSub %v3float %1764 %352
       %1826 = OpCompositeConstruct %v3int %1824 %int_0 %int_0
       %1827 = OpBitcast %v3uint %1826
       %1828 = OpIMul %v3uint %1827 %403
       %1829 = OpIAdd %v3uint %1828 %405
       %1830 = OpCompositeExtract %uint %1829 1
       %1831 = OpCompositeExtract %uint %1829 2
       %1832 = OpIMul %uint %1830 %1831
       %1833 = OpCompositeExtract %uint %1829 0
       %1834 = OpIAdd %uint %1833 %1832
       %1835 = OpIMul %uint %1831 %1834
       %1836 = OpIAdd %uint %1830 %1835
       %1837 = OpIMul %uint %1834 %1836
       %1838 = OpIAdd %uint %1831 %1837
       %1839 = OpIMul %uint %1836 %1838
       %1840 = OpIAdd %uint %1834 %1839
       %1841 = OpCompositeInsert %v3uint %1840 %549 0
       %1842 = OpShiftRightLogical %v3uint %1841 %1791
       %1843 = OpCompositeExtract %uint %1842 0
       %1844 = OpCompositeConstruct %v3uint %1843 %1843 %1843
       %1845 = OpBitwiseAnd %v3uint %1844 %388
       %1846 = OpConvertUToF %v3float %1845
       %1847 = OpExtInst %v3float %1 Fma %1846 %392 %282
       %1848 = OpDot %float %1847 %1825
       %1849 = OpConvertFToS %int %1769
       %1850 = OpFSub %v3float %1764 %138
       %1851 = OpCompositeConstruct %v3int %1849 %int_0 %int_0
       %1852 = OpBitcast %v3uint %1851
       %1853 = OpIMul %v3uint %1852 %403
       %1854 = OpIAdd %v3uint %1853 %405
       %1855 = OpCompositeExtract %uint %1854 1
       %1856 = OpCompositeExtract %uint %1854 2
       %1857 = OpIMul %uint %1855 %1856
       %1858 = OpCompositeExtract %uint %1854 0
       %1859 = OpIAdd %uint %1858 %1857
       %1860 = OpIMul %uint %1856 %1859
       %1861 = OpIAdd %uint %1855 %1860
       %1862 = OpIMul %uint %1859 %1861
       %1863 = OpIAdd %uint %1856 %1862
       %1864 = OpIMul %uint %1861 %1863
       %1865 = OpIAdd %uint %1859 %1864
       %1866 = OpCompositeInsert %v3uint %1865 %549 0
       %1867 = OpShiftRightLogical %v3uint %1866 %1791
       %1868 = OpCompositeExtract %uint %1867 0
       %1869 = OpCompositeConstruct %v3uint %1868 %1868 %1868
       %1870 = OpBitwiseAnd %v3uint %1869 %388
       %1871 = OpConvertUToF %v3float %1870
       %1872 = OpExtInst %v3float %1 Fma %1871 %392 %282
       %1873 = OpDot %float %1872 %1850
       %1874 = OpConvertFToS %int %1770
       %1875 = OpFSub %v3float %1764 %294
       %1876 = OpCompositeConstruct %v3int %1874 %int_0 %int_0
       %1877 = OpBitcast %v3uint %1876
       %1878 = OpIMul %v3uint %1877 %403
       %1879 = OpIAdd %v3uint %1878 %405
       %1880 = OpCompositeExtract %uint %1879 1
       %1881 = OpCompositeExtract %uint %1879 2
       %1882 = OpIMul %uint %1880 %1881
       %1883 = OpCompositeExtract %uint %1879 0
       %1884 = OpIAdd %uint %1883 %1882
       %1885 = OpIMul %uint %1881 %1884
       %1886 = OpIAdd %uint %1880 %1885
       %1887 = OpIMul %uint %1884 %1886
       %1888 = OpIAdd %uint %1881 %1887
       %1889 = OpIMul %uint %1886 %1888
       %1890 = OpIAdd %uint %1884 %1889
       %1891 = OpCompositeInsert %v3uint %1890 %549 0
       %1892 = OpShiftRightLogical %v3uint %1891 %1791
       %1893 = OpCompositeExtract %uint %1892 0
       %1894 = OpCompositeConstruct %v3uint %1893 %1893 %1893
       %1895 = OpBitwiseAnd %v3uint %1894 %388
       %1896 = OpConvertUToF %v3float %1895
       %1897 = OpExtInst %v3float %1 Fma %1896 %392 %282
       %1898 = OpDot %float %1897 %1875
       %1899 = OpConvertFToS %int %1771
       %1900 = OpFSub %v3float %1764 %143
       %1901 = OpCompositeConstruct %v3int %1899 %int_0 %int_0
       %1902 = OpBitcast %v3uint %1901
       %1903 = OpIMul %v3uint %1902 %403
       %1904 = OpIAdd %v3uint %1903 %405
       %1905 = OpCompositeExtract %uint %1904 1
       %1906 = OpCompositeExtract %uint %1904 2
       %1907 = OpIMul %uint %1905 %1906
       %1908 = OpCompositeExtract %uint %1904 0
       %1909 = OpIAdd %uint %1908 %1907
       %1910 = OpIMul %uint %1906 %1909
       %1911 = OpIAdd %uint %1905 %1910
       %1912 = OpIMul %uint %1909 %1911
       %1913 = OpIAdd %uint %1906 %1912
       %1914 = OpIMul %uint %1911 %1913
       %1915 = OpIAdd %uint %1909 %1914
       %1916 = OpCompositeInsert %v3uint %1915 %549 0
       %1917 = OpShiftRightLogical %v3uint %1916 %1791
       %1918 = OpCompositeExtract %uint %1917 0
       %1919 = OpCompositeConstruct %v3uint %1918 %1918 %1918
       %1920 = OpBitwiseAnd %v3uint %1919 %388
       %1921 = OpConvertUToF %v3float %1920
       %1922 = OpExtInst %v3float %1 Fma %1921 %392 %282
       %1923 = OpDot %float %1922 %1900
       %1924 = OpConvertFToS %int %1772
       %1925 = OpFSub %v3float %1764 %139
       %1926 = OpCompositeConstruct %v3int %1924 %int_0 %int_0
       %1927 = OpBitcast %v3uint %1926
       %1928 = OpIMul %v3uint %1927 %403
       %1929 = OpIAdd %v3uint %1928 %405
       %1930 = OpCompositeExtract %uint %1929 1
       %1931 = OpCompositeExtract %uint %1929 2
       %1932 = OpIMul %uint %1930 %1931
       %1933 = OpCompositeExtract %uint %1929 0
       %1934 = OpIAdd %uint %1933 %1932
       %1935 = OpIMul %uint %1931 %1934
       %1936 = OpIAdd %uint %1930 %1935
       %1937 = OpIMul %uint %1934 %1936
       %1938 = OpIAdd %uint %1931 %1937
       %1939 = OpIMul %uint %1936 %1938
       %1940 = OpIAdd %uint %1934 %1939
       %1941 = OpCompositeInsert %v3uint %1940 %549 0
       %1942 = OpShiftRightLogical %v3uint %1941 %1791
       %1943 = OpCompositeExtract %uint %1942 0
       %1944 = OpCompositeConstruct %v3uint %1943 %1943 %1943
       %1945 = OpBitwiseAnd %v3uint %1944 %388
       %1946 = OpConvertUToF %v3float %1945
       %1947 = OpExtInst %v3float %1 Fma %1946 %392 %282
       %1948 = OpDot %float %1947 %1925
       %1949 = OpConvertFToS %int %1773
       %1950 = OpFSub %v3float %1764 %131
       %1951 = OpCompositeConstruct %v3int %1949 %int_0 %int_0
       %1952 = OpBitcast %v3uint %1951
       %1953 = OpIMul %v3uint %1952 %403
       %1954 = OpIAdd %v3uint %1953 %405
       %1955 = OpCompositeExtract %uint %1954 1
       %1956 = OpCompositeExtract %uint %1954 2
       %1957 = OpIMul %uint %1955 %1956
       %1958 = OpCompositeExtract %uint %1954 0
       %1959 = OpIAdd %uint %1958 %1957
       %1960 = OpIMul %uint %1956 %1959
       %1961 = OpIAdd %uint %1955 %1960
       %1962 = OpIMul %uint %1959 %1961
       %1963 = OpIAdd %uint %1956 %1962
       %1964 = OpIMul %uint %1961 %1963
       %1965 = OpIAdd %uint %1959 %1964
       %1966 = OpCompositeInsert %v3uint %1965 %549 0
       %1967 = OpShiftRightLogical %v3uint %1966 %1791
       %1968 = OpCompositeExtract %uint %1967 0
       %1969 = OpCompositeConstruct %v3uint %1968 %1968 %1968
       %1970 = OpBitwiseAnd %v3uint %1969 %388
       %1971 = OpConvertUToF %v3float %1970
       %1972 = OpExtInst %v3float %1 Fma %1971 %392 %282
       %1973 = OpDot %float %1972 %1950
       %1974 = OpCompositeExtract %float %1764 0
       %1975 = OpCompositeExtract %float %1764 1
       %1976 = OpCompositeExtract %float %1764 2
       %1977 = OpCompositeConstruct %v4float %1974 %1975 %1976 %float_0
       %1978 = OpFMul %v4float %1977 %1977
       %1979 = OpFMul %v4float %1978 %1977
       %1980 = OpVectorTimesScalar %v4float %1977 %float_6
       %1981 = OpFSub %v4float %1980 %383
       %1982 = OpExtInst %v4float %1 Fma %1977 %1981 %384
       %1983 = OpFMul %v4float %1979 %1982
       %1984 = OpCompositeExtract %float %1983 0
       %1985 = OpExtInst %float %1 FMix %1798 %1823 %1984
       %1986 = OpExtInst %float %1 FMix %1848 %1873 %1984
       %1987 = OpCompositeExtract %float %1983 1
       %1988 = OpExtInst %float %1 FMix %1985 %1986 %1987
       %1989 = OpExtInst %float %1 FMix %1898 %1923 %1984
       %1990 = OpExtInst %float %1 FMix %1948 %1973 %1984
       %1991 = OpExtInst %float %1 FMix %1989 %1990 %1987
       %1992 = OpCompositeExtract %float %1983 2
       %1993 = OpExtInst %float %1 FMix %1988 %1991 %1992
       %1759 = OpExtInst %float %1 Fma %1993 %1756 %1758
       %1754 = OpVectorTimesScalar %v3float %1753 %float_2
       %1757 = OpFMul %float %1756 %float_0_5
       %1761 = OpIAdd %uint %1760 %uint_1
               OpBranch %1752
       %1763 = OpLabel
       %1994 = OpExtInst %float %1 Fma %1758 %float_0_5 %float_0_5
       %1995 = OpExtInst %float %1 FMix %float_0 %float_1 %1994
       %1996 = OpExtInst %float %1 FClamp %1995 %float_0 %float_1
       %1997 = OpExtInst %float %1 FMix %1163 %1716 %1996
       %1998 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_15 %int_3
       %1999 = OpLoad %float %1998
       %2000 = OpFMul %float %1999 %1997
       %2001 = OpExtInst %float %1 Fma %1710 %1712 %2000
       %2002 = OpExtInst %float %1 Floor %1713
       %2003 = OpFNegate %float %2002
       %2004 = OpExtInst %float %1 Fma %1709 %1712 %2003
       %2005 = OpExtInst %float %1 Fma %2004 %float_2097152 %2001
       %2006 = OpExtInst %float %1 Floor %2005
       %2007 = OpFMul %float %2002 %float_n6_28318548
       %2008 = OpExtInst %float %1 Fma %1713 %float_6_28318548 %2007
       %2009 = OpFMul %float %2006 %float_n6_28318548
       %2010 = OpExtInst %float %1 Fma %2001 %float_6_28318548 %2009
       %2011 = OpExtInst %float %1 Fma %2008 %float_2097152 %2010
       %2012 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_0
       %2013 = OpLoad %float %2012
       %2014 = OpCompositeConstruct %v3float %2013 %2013 %2013
       %2015 = OpFMul %v3float %593 %2014
       %2016 = OpFMul %v3float %2014 %644
       %2017 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_1
       %2018 = OpLoad %float %2017
       %2019 = OpCompositeConstruct %v3float %2018 %2018 %2018
       %2020 = OpFMul %v3float %2015 %2019
       %2021 = OpFMul %v3float %2016 %2019
       %2022 = OpFMul %v3float %2021 %507
       %2023 = OpCompositeExtract %float %2022 0
       %2024 = OpCompositeExtract %float %2022 1
       %2025 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_3
       %2026 = OpLoad %float %2025
       %2027 = OpFMul %float %1163 %2026
       %2028 = OpCompositeExtract %float %2022 2
       %2029 = OpCompositeConstruct %v2float %2027 %2027
       %2030 = OpCompositeConstruct %v2float %2028 %2028
       %2031 = OpFAdd %v2float %2029 %2030
       %2032 = OpCompositeExtract %float %2031 0
       %2033 = OpCompositeConstruct %v3float %2023 %2024 %2032
       %2034 = OpVectorTimesScalar %v3float %2033 %float_4_76837158en07
       %2035 = OpFAdd %v3float %2034 %141
       %2036 = OpExtInst %v3float %1 Fma %2020 %507 %2035
       %2037 = OpExtInst %v3float %1 Floor %2036
       %2038 = OpFNegate %v3float %2037
       %2039 = OpExtInst %v3float %1 Fma %2020 %507 %2038
       %2040 = OpVectorTimesScalar %v3float %2039 %float_2097152
       %2041 = OpFAdd %v3float %2040 %2033
       %2042 = OpVectorTimesScalar %v3float %2041 %float_1
               OpBranch %2043
       %2043 = OpLabel
       %2044 = OpPhi %v3float %2042 %1763 %2045 %2046
       %2047 = OpPhi %float %float_1 %1763 %2048 %2046
       %2049 = OpPhi %float %float_0 %1763 %2050 %2046
       %2051 = OpPhi %uint %uint_0 %1763 %2052 %2046
       %2053 = OpULessThan %bool %2051 %uint_10
               OpLoopMerge %2054 %2046 DontUnroll
               OpBranchConditional %2053 %2046 %2054
       %2046 = OpLabel
       %2055 = OpExtInst %v3float %1 Fract %2044
       %2056 = OpExtInst %v3float %1 Floor %2044
       %2057 = OpDot %float %2056 %387
       %2058 = OpFAdd %float %2057 %float_19
       %2059 = OpFAdd %float %2057 %float_47
       %2060 = OpFAdd %float %2057 %float_66
       %2061 = OpFAdd %float %2057 %float_101
       %2062 = OpFAdd %float %2057 %float_120
       %2063 = OpFAdd %float %2057 %float_148
       %2064 = OpFAdd %float %2057 %float_167
       %2065 = OpConvertFToS %int %2057
       %2066 = OpCompositeConstruct %v3int %2065 %int_0 %int_0
       %2067 = OpBitcast %v3uint %2066
       %2068 = OpIMul %v3uint %2067 %403
       %2069 = OpIAdd %v3uint %2068 %405
       %2070 = OpCompositeExtract %uint %2069 1
       %2071 = OpCompositeExtract %uint %2069 2
       %2072 = OpIMul %uint %2070 %2071
       %2073 = OpCompositeExtract %uint %2069 0
       %2074 = OpIAdd %uint %2073 %2072
       %2075 = OpIMul %uint %2071 %2074
       %2076 = OpIAdd %uint %2070 %2075
       %2077 = OpIMul %uint %2074 %2076
       %2078 = OpIAdd %uint %2071 %2077
       %2079 = OpIMul %uint %2076 %2078
       %2080 = OpIAdd %uint %2074 %2079
       %2081 = OpCompositeInsert %v3uint %2080 %549 0
       %2082 = OpBitwiseAnd %v3uint %406 %407
       %2083 = OpShiftRightLogical %v3uint %2081 %2082
       %2084 = OpCompositeExtract %uint %2083 0
       %2085 = OpCompositeConstruct %v3uint %2084 %2084 %2084
       %2086 = OpBitwiseAnd %v3uint %2085 %388
       %2087 = OpConvertUToF %v3float %2086
       %2088 = OpExtInst %v3float %1 Fma %2087 %392 %282
       %2089 = OpDot %float %2088 %2055
       %2090 = OpConvertFToS %int %2058
       %2091 = OpFSub %v3float %2055 %351
       %2092 = OpCompositeConstruct %v3int %2090 %int_0 %int_0
       %2093 = OpBitcast %v3uint %2092
       %2094 = OpIMul %v3uint %2093 %403
       %2095 = OpIAdd %v3uint %2094 %405
       %2096 = OpCompositeExtract %uint %2095 1
       %2097 = OpCompositeExtract %uint %2095 2
       %2098 = OpIMul %uint %2096 %2097
       %2099 = OpCompositeExtract %uint %2095 0
       %2100 = OpIAdd %uint %2099 %2098
       %2101 = OpIMul %uint %2097 %2100
       %2102 = OpIAdd %uint %2096 %2101
       %2103 = OpIMul %uint %2100 %2102
       %2104 = OpIAdd %uint %2097 %2103
       %2105 = OpIMul %uint %2102 %2104
       %2106 = OpIAdd %uint %2100 %2105
       %2107 = OpCompositeInsert %v3uint %2106 %549 0
       %2108 = OpShiftRightLogical %v3uint %2107 %2082
       %2109 = OpCompositeExtract %uint %2108 0
       %2110 = OpCompositeConstruct %v3uint %2109 %2109 %2109
       %2111 = OpBitwiseAnd %v3uint %2110 %388
       %2112 = OpConvertUToF %v3float %2111
       %2113 = OpExtInst %v3float %1 Fma %2112 %392 %282
       %2114 = OpDot %float %2113 %2091
       %2115 = OpConvertFToS %int %2059
       %2116 = OpFSub %v3float %2055 %352
       %2117 = OpCompositeConstruct %v3int %2115 %int_0 %int_0
       %2118 = OpBitcast %v3uint %2117
       %2119 = OpIMul %v3uint %2118 %403
       %2120 = OpIAdd %v3uint %2119 %405
       %2121 = OpCompositeExtract %uint %2120 1
       %2122 = OpCompositeExtract %uint %2120 2
       %2123 = OpIMul %uint %2121 %2122
       %2124 = OpCompositeExtract %uint %2120 0
       %2125 = OpIAdd %uint %2124 %2123
       %2126 = OpIMul %uint %2122 %2125
       %2127 = OpIAdd %uint %2121 %2126
       %2128 = OpIMul %uint %2125 %2127
       %2129 = OpIAdd %uint %2122 %2128
       %2130 = OpIMul %uint %2127 %2129
       %2131 = OpIAdd %uint %2125 %2130
       %2132 = OpCompositeInsert %v3uint %2131 %549 0
       %2133 = OpShiftRightLogical %v3uint %2132 %2082
       %2134 = OpCompositeExtract %uint %2133 0
       %2135 = OpCompositeConstruct %v3uint %2134 %2134 %2134
       %2136 = OpBitwiseAnd %v3uint %2135 %388
       %2137 = OpConvertUToF %v3float %2136
       %2138 = OpExtInst %v3float %1 Fma %2137 %392 %282
       %2139 = OpDot %float %2138 %2116
       %2140 = OpConvertFToS %int %2060
       %2141 = OpFSub %v3float %2055 %138
       %2142 = OpCompositeConstruct %v3int %2140 %int_0 %int_0
       %2143 = OpBitcast %v3uint %2142
       %2144 = OpIMul %v3uint %2143 %403
       %2145 = OpIAdd %v3uint %2144 %405
       %2146 = OpCompositeExtract %uint %2145 1
       %2147 = OpCompositeExtract %uint %2145 2
       %2148 = OpIMul %uint %2146 %2147
       %2149 = OpCompositeExtract %uint %2145 0
       %2150 = OpIAdd %uint %2149 %2148
       %2151 = OpIMul %uint %2147 %2150
       %2152 = OpIAdd %uint %2146 %2151
       %2153 = OpIMul %uint %2150 %2152
       %2154 = OpIAdd %uint %2147 %2153
       %2155 = OpIMul %uint %2152 %2154
       %2156 = OpIAdd %uint %2150 %2155
       %2157 = OpCompositeInsert %v3uint %2156 %549 0
       %2158 = OpShiftRightLogical %v3uint %2157 %2082
       %2159 = OpCompositeExtract %uint %2158 0
       %2160 = OpCompositeConstruct %v3uint %2159 %2159 %2159
       %2161 = OpBitwiseAnd %v3uint %2160 %388
       %2162 = OpConvertUToF %v3float %2161
       %2163 = OpExtInst %v3float %1 Fma %2162 %392 %282
       %2164 = OpDot %float %2163 %2141
       %2165 = OpConvertFToS %int %2061
       %2166 = OpFSub %v3float %2055 %294
       %2167 = OpCompositeConstruct %v3int %2165 %int_0 %int_0
       %2168 = OpBitcast %v3uint %2167
       %2169 = OpIMul %v3uint %2168 %403
       %2170 = OpIAdd %v3uint %2169 %405
       %2171 = OpCompositeExtract %uint %2170 1
       %2172 = OpCompositeExtract %uint %2170 2
       %2173 = OpIMul %uint %2171 %2172
       %2174 = OpCompositeExtract %uint %2170 0
       %2175 = OpIAdd %uint %2174 %2173
       %2176 = OpIMul %uint %2172 %2175
       %2177 = OpIAdd %uint %2171 %2176
       %2178 = OpIMul %uint %2175 %2177
       %2179 = OpIAdd %uint %2172 %2178
       %2180 = OpIMul %uint %2177 %2179
       %2181 = OpIAdd %uint %2175 %2180
       %2182 = OpCompositeInsert %v3uint %2181 %549 0
       %2183 = OpShiftRightLogical %v3uint %2182 %2082
       %2184 = OpCompositeExtract %uint %2183 0
       %2185 = OpCompositeConstruct %v3uint %2184 %2184 %2184
       %2186 = OpBitwiseAnd %v3uint %2185 %388
       %2187 = OpConvertUToF %v3float %2186
       %2188 = OpExtInst %v3float %1 Fma %2187 %392 %282
       %2189 = OpDot %float %2188 %2166
       %2190 = OpConvertFToS %int %2062
       %2191 = OpFSub %v3float %2055 %143
       %2192 = OpCompositeConstruct %v3int %2190 %int_0 %int_0
       %2193 = OpBitcast %v3uint %2192
       %2194 = OpIMul %v3uint %2193 %403
       %2195 = OpIAdd %v3uint %2194 %405
       %2196 = OpCompositeExtract %uint %2195 1
       %2197 = OpCompositeExtract %uint %2195 2
       %2198 = OpIMul %uint %2196 %2197
       %2199 = OpCompositeExtract %uint %2195 0
       %2200 = OpIAdd %uint %2199 %2198
       %2201 = OpIMul %uint %2197 %2200
       %2202 = OpIAdd %uint %2196 %2201
       %2203 = OpIMul %uint %2200 %2202
       %2204 = OpIAdd %uint %2197 %2203
       %2205 = OpIMul %uint %2202 %2204
       %2206 = OpIAdd %uint %2200 %2205
       %2207 = OpCompositeInsert %v3uint %2206 %549 0
       %2208 = OpShiftRightLogical %v3uint %2207 %2082
       %2209 = OpCompositeExtract %uint %2208 0
       %2210 = OpCompositeConstruct %v3uint %2209 %2209 %2209
       %2211 = OpBitwiseAnd %v3uint %2210 %388
       %2212 = OpConvertUToF %v3float %2211
       %2213 = OpExtInst %v3float %1 Fma %2212 %392 %282
       %2214 = OpDot %float %2213 %2191
       %2215 = OpConvertFToS %int %2063
       %2216 = OpFSub %v3float %2055 %139
       %2217 = OpCompositeConstruct %v3int %2215 %int_0 %int_0
       %2218 = OpBitcast %v3uint %2217
       %2219 = OpIMul %v3uint %2218 %403
       %2220 = OpIAdd %v3uint %2219 %405
       %2221 = OpCompositeExtract %uint %2220 1
       %2222 = OpCompositeExtract %uint %2220 2
       %2223 = OpIMul %uint %2221 %2222
       %2224 = OpCompositeExtract %uint %2220 0
       %2225 = OpIAdd %uint %2224 %2223
       %2226 = OpIMul %uint %2222 %2225
       %2227 = OpIAdd %uint %2221 %2226
       %2228 = OpIMul %uint %2225 %2227
       %2229 = OpIAdd %uint %2222 %2228
       %2230 = OpIMul %uint %2227 %2229
       %2231 = OpIAdd %uint %2225 %2230
       %2232 = OpCompositeInsert %v3uint %2231 %549 0
       %2233 = OpShiftRightLogical %v3uint %2232 %2082
       %2234 = OpCompositeExtract %uint %2233 0
       %2235 = OpCompositeConstruct %v3uint %2234 %2234 %2234
       %2236 = OpBitwiseAnd %v3uint %2235 %388
       %2237 = OpConvertUToF %v3float %2236
       %2238 = OpExtInst %v3float %1 Fma %2237 %392 %282
       %2239 = OpDot %float %2238 %2216
       %2240 = OpConvertFToS %int %2064
       %2241 = OpFSub %v3float %2055 %131
       %2242 = OpCompositeConstruct %v3int %2240 %int_0 %int_0
       %2243 = OpBitcast %v3uint %2242
       %2244 = OpIMul %v3uint %2243 %403
       %2245 = OpIAdd %v3uint %2244 %405
       %2246 = OpCompositeExtract %uint %2245 1
       %2247 = OpCompositeExtract %uint %2245 2
       %2248 = OpIMul %uint %2246 %2247
       %2249 = OpCompositeExtract %uint %2245 0
       %2250 = OpIAdd %uint %2249 %2248
       %2251 = OpIMul %uint %2247 %2250
       %2252 = OpIAdd %uint %2246 %2251
       %2253 = OpIMul %uint %2250 %2252
       %2254 = OpIAdd %uint %2247 %2253
       %2255 = OpIMul %uint %2252 %2254
       %2256 = OpIAdd %uint %2250 %2255
       %2257 = OpCompositeInsert %v3uint %2256 %549 0
       %2258 = OpShiftRightLogical %v3uint %2257 %2082
       %2259 = OpCompositeExtract %uint %2258 0
       %2260 = OpCompositeConstruct %v3uint %2259 %2259 %2259
       %2261 = OpBitwiseAnd %v3uint %2260 %388
       %2262 = OpConvertUToF %v3float %2261
       %2263 = OpExtInst %v3float %1 Fma %2262 %392 %282
       %2264 = OpDot %float %2263 %2241
       %2265 = OpCompositeExtract %float %2055 0
       %2266 = OpCompositeExtract %float %2055 1
       %2267 = OpCompositeExtract %float %2055 2
       %2268 = OpCompositeConstruct %v4float %2265 %2266 %2267 %float_0
       %2269 = OpFMul %v4float %2268 %2268
       %2270 = OpFMul %v4float %2269 %2268
       %2271 = OpVectorTimesScalar %v4float %2268 %float_6
       %2272 = OpFSub %v4float %2271 %383
       %2273 = OpExtInst %v4float %1 Fma %2268 %2272 %384
       %2274 = OpFMul %v4float %2270 %2273
       %2275 = OpCompositeExtract %float %2274 0
       %2276 = OpExtInst %float %1 FMix %2089 %2114 %2275
       %2277 = OpExtInst %float %1 FMix %2139 %2164 %2275
       %2278 = OpCompositeExtract %float %2274 1
       %2279 = OpExtInst %float %1 FMix %2276 %2277 %2278
       %2280 = OpExtInst %float %1 FMix %2189 %2214 %2275
       %2281 = OpExtInst %float %1 FMix %2239 %2264 %2275
       %2282 = OpExtInst %float %1 FMix %2280 %2281 %2278
       %2283 = OpCompositeExtract %float %2274 2
       %2284 = OpExtInst %float %1 FMix %2279 %2282 %2283
       %2285 = OpExtInst %float %1 FAbs %2284
       %2050 = OpExtInst %float %1 Fma %2285 %2047 %2049
       %2045 = OpVectorTimesScalar %v3float %2044 %float_2
       %2048 = OpFMul %float %2047 %float_0_5
       %2052 = OpIAdd %uint %2051 %uint_1
               OpBranch %2043
       %2054 = OpLabel
       %2286 = OpExtInst %float %1 FMix %float_0 %float_1 %2049
       %2287 = OpFMul %v3float %2021 %509
       %2288 = OpCompositeExtract %float %2287 0
       %2289 = OpCompositeExtract %float %2287 1
       %2290 = OpCompositeExtract %float %2287 2
       %2291 = OpCompositeConstruct %v2float %2290 %2290
       %2292 = OpFAdd %v2float %2029 %2291
       %2293 = OpCompositeExtract %float %2292 0
       %2294 = OpCompositeConstruct %v3float %2288 %2289 %2293
       %2295 = OpVectorTimesScalar %v3float %2294 %float_4_76837158en07
       %2296 = OpFAdd %v3float %2295 %141
       %2297 = OpExtInst %v3float %1 Fma %2020 %509 %2296
       %2298 = OpExtInst %v3float %1 Floor %2297
       %2299 = OpFNegate %v3float %2298
       %2300 = OpExtInst %v3float %1 Fma %2020 %509 %2299
       %2301 = OpVectorTimesScalar %v3float %2300 %float_2097152
       %2302 = OpFAdd %v3float %2301 %2294
       %2303 = OpVectorTimesScalar %v3float %2302 %float_1
               OpBranch %2304
       %2304 = OpLabel
       %2305 = OpPhi %v3float %2303 %2054 %2306 %2307
       %2308 = OpPhi %float %float_1 %2054 %2309 %2307
       %2310 = OpPhi %float %float_0 %2054 %2311 %2307
       %2312 = OpPhi %uint %uint_0 %2054 %2313 %2307
       %2314 = OpULessThan %bool %2312 %uint_10
               OpLoopMerge %2315 %2307 DontUnroll
               OpBranchConditional %2314 %2307 %2315
       %2307 = OpLabel
       %2316 = OpExtInst %v3float %1 Fract %2305
       %2317 = OpExtInst %v3float %1 Floor %2305
       %2318 = OpDot %float %2317 %387
       %2319 = OpFAdd %float %2318 %float_19
       %2320 = OpFAdd %float %2318 %float_47
       %2321 = OpFAdd %float %2318 %float_66
       %2322 = OpFAdd %float %2318 %float_101
       %2323 = OpFAdd %float %2318 %float_120
       %2324 = OpFAdd %float %2318 %float_148
       %2325 = OpFAdd %float %2318 %float_167
       %2326 = OpConvertFToS %int %2318
       %2327 = OpCompositeConstruct %v3int %2326 %int_0 %int_0
       %2328 = OpBitcast %v3uint %2327
       %2329 = OpIMul %v3uint %2328 %403
       %2330 = OpIAdd %v3uint %2329 %405
       %2331 = OpCompositeExtract %uint %2330 1
       %2332 = OpCompositeExtract %uint %2330 2
       %2333 = OpIMul %uint %2331 %2332
       %2334 = OpCompositeExtract %uint %2330 0
       %2335 = OpIAdd %uint %2334 %2333
       %2336 = OpIMul %uint %2332 %2335
       %2337 = OpIAdd %uint %2331 %2336
       %2338 = OpIMul %uint %2335 %2337
       %2339 = OpIAdd %uint %2332 %2338
       %2340 = OpIMul %uint %2337 %2339
       %2341 = OpIAdd %uint %2335 %2340
       %2342 = OpCompositeInsert %v3uint %2341 %549 0
       %2343 = OpBitwiseAnd %v3uint %406 %407
       %2344 = OpShiftRightLogical %v3uint %2342 %2343
       %2345 = OpCompositeExtract %uint %2344 0
       %2346 = OpCompositeConstruct %v3uint %2345 %2345 %2345
       %2347 = OpBitwiseAnd %v3uint %2346 %388
       %2348 = OpConvertUToF %v3float %2347
       %2349 = OpExtInst %v3float %1 Fma %2348 %392 %282
       %2350 = OpDot %float %2349 %2316
       %2351 = OpConvertFToS %int %2319
       %2352 = OpFSub %v3float %2316 %351
       %2353 = OpCompositeConstruct %v3int %2351 %int_0 %int_0
       %2354 = OpBitcast %v3uint %2353
       %2355 = OpIMul %v3uint %2354 %403
       %2356 = OpIAdd %v3uint %2355 %405
       %2357 = OpCompositeExtract %uint %2356 1
       %2358 = OpCompositeExtract %uint %2356 2
       %2359 = OpIMul %uint %2357 %2358
       %2360 = OpCompositeExtract %uint %2356 0
       %2361 = OpIAdd %uint %2360 %2359
       %2362 = OpIMul %uint %2358 %2361
       %2363 = OpIAdd %uint %2357 %2362
       %2364 = OpIMul %uint %2361 %2363
       %2365 = OpIAdd %uint %2358 %2364
       %2366 = OpIMul %uint %2363 %2365
       %2367 = OpIAdd %uint %2361 %2366
       %2368 = OpCompositeInsert %v3uint %2367 %549 0
       %2369 = OpShiftRightLogical %v3uint %2368 %2343
       %2370 = OpCompositeExtract %uint %2369 0
       %2371 = OpCompositeConstruct %v3uint %2370 %2370 %2370
       %2372 = OpBitwiseAnd %v3uint %2371 %388
       %2373 = OpConvertUToF %v3float %2372
       %2374 = OpExtInst %v3float %1 Fma %2373 %392 %282
       %2375 = OpDot %float %2374 %2352
       %2376 = OpConvertFToS %int %2320
       %2377 = OpFSub %v3float %2316 %352
       %2378 = OpCompositeConstruct %v3int %2376 %int_0 %int_0
       %2379 = OpBitcast %v3uint %2378
       %2380 = OpIMul %v3uint %2379 %403
       %2381 = OpIAdd %v3uint %2380 %405
       %2382 = OpCompositeExtract %uint %2381 1
       %2383 = OpCompositeExtract %uint %2381 2
       %2384 = OpIMul %uint %2382 %2383
       %2385 = OpCompositeExtract %uint %2381 0
       %2386 = OpIAdd %uint %2385 %2384
       %2387 = OpIMul %uint %2383 %2386
       %2388 = OpIAdd %uint %2382 %2387
       %2389 = OpIMul %uint %2386 %2388
       %2390 = OpIAdd %uint %2383 %2389
       %2391 = OpIMul %uint %2388 %2390
       %2392 = OpIAdd %uint %2386 %2391
       %2393 = OpCompositeInsert %v3uint %2392 %549 0
       %2394 = OpShiftRightLogical %v3uint %2393 %2343
       %2395 = OpCompositeExtract %uint %2394 0
       %2396 = OpCompositeConstruct %v3uint %2395 %2395 %2395
       %2397 = OpBitwiseAnd %v3uint %2396 %388
       %2398 = OpConvertUToF %v3float %2397
       %2399 = OpExtInst %v3float %1 Fma %2398 %392 %282
       %2400 = OpDot %float %2399 %2377
       %2401 = OpConvertFToS %int %2321
       %2402 = OpFSub %v3float %2316 %138
       %2403 = OpCompositeConstruct %v3int %2401 %int_0 %int_0
       %2404 = OpBitcast %v3uint %2403
       %2405 = OpIMul %v3uint %2404 %403
       %2406 = OpIAdd %v3uint %2405 %405
       %2407 = OpCompositeExtract %uint %2406 1
       %2408 = OpCompositeExtract %uint %2406 2
       %2409 = OpIMul %uint %2407 %2408
       %2410 = OpCompositeExtract %uint %2406 0
       %2411 = OpIAdd %uint %2410 %2409
       %2412 = OpIMul %uint %2408 %2411
       %2413 = OpIAdd %uint %2407 %2412
       %2414 = OpIMul %uint %2411 %2413
       %2415 = OpIAdd %uint %2408 %2414
       %2416 = OpIMul %uint %2413 %2415
       %2417 = OpIAdd %uint %2411 %2416
       %2418 = OpCompositeInsert %v3uint %2417 %549 0
       %2419 = OpShiftRightLogical %v3uint %2418 %2343
       %2420 = OpCompositeExtract %uint %2419 0
       %2421 = OpCompositeConstruct %v3uint %2420 %2420 %2420
       %2422 = OpBitwiseAnd %v3uint %2421 %388
       %2423 = OpConvertUToF %v3float %2422
       %2424 = OpExtInst %v3float %1 Fma %2423 %392 %282
       %2425 = OpDot %float %2424 %2402
       %2426 = OpConvertFToS %int %2322
       %2427 = OpFSub %v3float %2316 %294
       %2428 = OpCompositeConstruct %v3int %2426 %int_0 %int_0
       %2429 = OpBitcast %v3uint %2428
       %2430 = OpIMul %v3uint %2429 %403
       %2431 = OpIAdd %v3uint %2430 %405
       %2432 = OpCompositeExtract %uint %2431 1
       %2433 = OpCompositeExtract %uint %2431 2
       %2434 = OpIMul %uint %2432 %2433
       %2435 = OpCompositeExtract %uint %2431 0
       %2436 = OpIAdd %uint %2435 %2434
       %2437 = OpIMul %uint %2433 %2436
       %2438 = OpIAdd %uint %2432 %2437
       %2439 = OpIMul %uint %2436 %2438
       %2440 = OpIAdd %uint %2433 %2439
       %2441 = OpIMul %uint %2438 %2440
       %2442 = OpIAdd %uint %2436 %2441
       %2443 = OpCompositeInsert %v3uint %2442 %549 0
       %2444 = OpShiftRightLogical %v3uint %2443 %2343
       %2445 = OpCompositeExtract %uint %2444 0
       %2446 = OpCompositeConstruct %v3uint %2445 %2445 %2445
       %2447 = OpBitwiseAnd %v3uint %2446 %388
       %2448 = OpConvertUToF %v3float %2447
       %2449 = OpExtInst %v3float %1 Fma %2448 %392 %282
       %2450 = OpDot %float %2449 %2427
       %2451 = OpConvertFToS %int %2323
       %2452 = OpFSub %v3float %2316 %143
       %2453 = OpCompositeConstruct %v3int %2451 %int_0 %int_0
       %2454 = OpBitcast %v3uint %2453
       %2455 = OpIMul %v3uint %2454 %403
       %2456 = OpIAdd %v3uint %2455 %405
       %2457 = OpCompositeExtract %uint %2456 1
       %2458 = OpCompositeExtract %uint %2456 2
       %2459 = OpIMul %uint %2457 %2458
       %2460 = OpCompositeExtract %uint %2456 0
       %2461 = OpIAdd %uint %2460 %2459
       %2462 = OpIMul %uint %2458 %2461
       %2463 = OpIAdd %uint %2457 %2462
       %2464 = OpIMul %uint %2461 %2463
       %2465 = OpIAdd %uint %2458 %2464
       %2466 = OpIMul %uint %2463 %2465
       %2467 = OpIAdd %uint %2461 %2466
       %2468 = OpCompositeInsert %v3uint %2467 %549 0
       %2469 = OpShiftRightLogical %v3uint %2468 %2343
       %2470 = OpCompositeExtract %uint %2469 0
       %2471 = OpCompositeConstruct %v3uint %2470 %2470 %2470
       %2472 = OpBitwiseAnd %v3uint %2471 %388
       %2473 = OpConvertUToF %v3float %2472
       %2474 = OpExtInst %v3float %1 Fma %2473 %392 %282
       %2475 = OpDot %float %2474 %2452
       %2476 = OpConvertFToS %int %2324
       %2477 = OpFSub %v3float %2316 %139
       %2478 = OpCompositeConstruct %v3int %2476 %int_0 %int_0
       %2479 = OpBitcast %v3uint %2478
       %2480 = OpIMul %v3uint %2479 %403
       %2481 = OpIAdd %v3uint %2480 %405
       %2482 = OpCompositeExtract %uint %2481 1
       %2483 = OpCompositeExtract %uint %2481 2
       %2484 = OpIMul %uint %2482 %2483
       %2485 = OpCompositeExtract %uint %2481 0
       %2486 = OpIAdd %uint %2485 %2484
       %2487 = OpIMul %uint %2483 %2486
       %2488 = OpIAdd %uint %2482 %2487
       %2489 = OpIMul %uint %2486 %2488
       %2490 = OpIAdd %uint %2483 %2489
       %2491 = OpIMul %uint %2488 %2490
       %2492 = OpIAdd %uint %2486 %2491
       %2493 = OpCompositeInsert %v3uint %2492 %549 0
       %2494 = OpShiftRightLogical %v3uint %2493 %2343
       %2495 = OpCompositeExtract %uint %2494 0
       %2496 = OpCompositeConstruct %v3uint %2495 %2495 %2495
       %2497 = OpBitwiseAnd %v3uint %2496 %388
       %2498 = OpConvertUToF %v3float %2497
       %2499 = OpExtInst %v3float %1 Fma %2498 %392 %282
       %2500 = OpDot %float %2499 %2477
       %2501 = OpConvertFToS %int %2325
       %2502 = OpFSub %v3float %2316 %131
       %2503 = OpCompositeConstruct %v3int %2501 %int_0 %int_0
       %2504 = OpBitcast %v3uint %2503
       %2505 = OpIMul %v3uint %2504 %403
       %2506 = OpIAdd %v3uint %2505 %405
       %2507 = OpCompositeExtract %uint %2506 1
       %2508 = OpCompositeExtract %uint %2506 2
       %2509 = OpIMul %uint %2507 %2508
       %2510 = OpCompositeExtract %uint %2506 0
       %2511 = OpIAdd %uint %2510 %2509
       %2512 = OpIMul %uint %2508 %2511
       %2513 = OpIAdd %uint %2507 %2512
       %2514 = OpIMul %uint %2511 %2513
       %2515 = OpIAdd %uint %2508 %2514
       %2516 = OpIMul %uint %2513 %2515
       %2517 = OpIAdd %uint %2511 %2516
       %2518 = OpCompositeInsert %v3uint %2517 %549 0
       %2519 = OpShiftRightLogical %v3uint %2518 %2343
       %2520 = OpCompositeExtract %uint %2519 0
       %2521 = OpCompositeConstruct %v3uint %2520 %2520 %2520
       %2522 = OpBitwiseAnd %v3uint %2521 %388
       %2523 = OpConvertUToF %v3float %2522
       %2524 = OpExtInst %v3float %1 Fma %2523 %392 %282
       %2525 = OpDot %float %2524 %2502
       %2526 = OpCompositeExtract %float %2316 0
       %2527 = OpCompositeExtract %float %2316 1
       %2528 = OpCompositeExtract %float %2316 2
       %2529 = OpCompositeConstruct %v4float %2526 %2527 %2528 %float_0
       %2530 = OpFMul %v4float %2529 %2529
       %2531 = OpFMul %v4float %2530 %2529
       %2532 = OpVectorTimesScalar %v4float %2529 %float_6
       %2533 = OpFSub %v4float %2532 %383
       %2534 = OpExtInst %v4float %1 Fma %2529 %2533 %384
       %2535 = OpFMul %v4float %2531 %2534
       %2536 = OpCompositeExtract %float %2535 0
       %2537 = OpExtInst %float %1 FMix %2350 %2375 %2536
       %2538 = OpExtInst %float %1 FMix %2400 %2425 %2536
       %2539 = OpCompositeExtract %float %2535 1
       %2540 = OpExtInst %float %1 FMix %2537 %2538 %2539
       %2541 = OpExtInst %float %1 FMix %2450 %2475 %2536
       %2542 = OpExtInst %float %1 FMix %2500 %2525 %2536
       %2543 = OpExtInst %float %1 FMix %2541 %2542 %2539
       %2544 = OpCompositeExtract %float %2535 2
       %2545 = OpExtInst %float %1 FMix %2540 %2543 %2544
       %2546 = OpExtInst %float %1 FAbs %2545
       %2311 = OpExtInst %float %1 Fma %2546 %2308 %2310
       %2306 = OpVectorTimesScalar %v3float %2305 %float_2
       %2309 = OpFMul %float %2308 %float_0_5
       %2313 = OpIAdd %uint %2312 %uint_1
               OpBranch %2304
       %2315 = OpLabel
       %2547 = OpExtInst %float %1 FMix %float_0 %float_1 %2310
       %2548 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_1
       %2549 = OpLoad %float %2548
       %2550 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_0
       %2551 = OpLoad %float %2550
       %2552 = OpExtInst %float %1 Fma %2547 %2549 %2551
       %2553 = OpFMul %float %2286 %2552
       %2554 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_16 %int_3
       %2555 = OpLoad %float %2554
       %2556 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_2
       %2557 = OpLoad %float %2556
       %2558 = OpExtInst %float %1 FMix %2555 %2557 %2553
       %2559 = OpExtInst %float %1 Sin %2011
       %2560 = OpFMul %float %2559 %2558
       %2561 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_20
       %2562 = OpLoad %v4float %2561
       %2563 = OpVectorShuffle %v3float %2562 %2562 0 1 2
       %2564 = OpFAdd %v3float %1687 %2563
       %2565 = OpExtInst %v3float %1 NMax %2564 %282
       %2566 = OpExtInst %v3float %1 NMin %2565 %131
       %2567 = OpCompositeExtract %float %2566 0
       %2568 = OpCompositeExtract %float %2566 1
       %2569 = OpCompositeConstruct %v2float %2567 %2568
       %2570 = OpFMul %v2float %1698 %2569
       %2571 = OpFMul %v2float %2569 %1699
       %2572 = OpCompositeExtract %float %2570 0
       %2573 = OpCompositeExtract %float %2571 0
       %2574 = OpCompositeExtract %float %2570 1
       %2575 = OpCompositeExtract %float %2571 1
       %2576 = OpFAdd %float %2572 %2574
       %2577 = OpFAdd %float %2573 %2575
       %2578 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_21 %int_1
       %2579 = OpLoad %float %2578
       %2580 = OpFMul %float %2576 %2579
       %2581 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_22 %int_0
       %2582 = OpLoad %float %2581
       %2583 = OpFMul %float %2582 %1997
       %2584 = OpExtInst %float %1 Fma %2577 %2579 %2583
       %2585 = OpExtInst %float %1 Floor %2580
       %2586 = OpFNegate %float %2585
       %2587 = OpExtInst %float %1 Fma %2576 %2579 %2586
       %2588 = OpExtInst %float %1 Fma %2587 %float_2097152 %2584
       %2589 = OpExtInst %float %1 Floor %2588
       %2590 = OpFMul %float %2585 %float_n6_28318548
       %2591 = OpExtInst %float %1 Fma %2580 %float_6_28318548 %2590
       %2592 = OpFMul %float %2589 %float_n6_28318548
       %2593 = OpExtInst %float %1 Fma %2584 %float_6_28318548 %2592
       %2594 = OpExtInst %float %1 Fma %2591 %float_2097152 %2593
       %2595 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_22 %int_2
       %2596 = OpLoad %float %2595
       %2597 = OpFMul %float %2558 %2596
       %2598 = OpExtInst %float %1 Sin %2594
       %2599 = OpFMul %float %2598 %2597
       %2600 = OpCompositeConstruct %v3float %548 %548 %2560
       %2601 = OpCompositeConstruct %v3float %548 %548 %2599
       %2602 = OpFAdd %v3float %2600 %2601
       %2603 = OpFSub %v3float %1687 %1690
       %2604 = OpExtInst %v3float %1 NMax %2603 %282
       %2605 = OpExtInst %v3float %1 NMin %2604 %131
       %2606 = OpCompositeExtract %float %2605 0
       %2607 = OpCompositeExtract %float %2605 1
       %2608 = OpCompositeConstruct %v2float %2606 %2607
       %2609 = OpFMul %v2float %1698 %2608
       %2610 = OpFMul %v2float %2608 %1699
       %2611 = OpCompositeExtract %float %2609 0
       %2612 = OpCompositeExtract %float %2610 0
       %2613 = OpCompositeExtract %float %2609 1
       %2614 = OpCompositeExtract %float %2610 1
       %2615 = OpFAdd %float %2611 %2613
       %2616 = OpFAdd %float %2612 %2614
       %2617 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_23 %int_1
       %2618 = OpLoad %float %2617
       %2619 = OpFMul %float %2615 %2618
       %2620 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_23 %int_3
       %2621 = OpLoad %float %2620
       %2622 = OpFMul %float %2621 %1997
       %2623 = OpExtInst %float %1 Fma %2616 %2618 %2622
       %2624 = OpExtInst %float %1 Floor %2619
       %2625 = OpFNegate %float %2624
       %2626 = OpExtInst %float %1 Fma %2615 %2618 %2625
       %2627 = OpExtInst %float %1 Fma %2626 %float_2097152 %2623
       %2628 = OpExtInst %float %1 Floor %2627
       %2629 = OpFMul %float %2624 %float_n6_28318548
       %2630 = OpExtInst %float %1 Fma %2619 %float_6_28318548 %2629
       %2631 = OpFMul %float %2628 %float_n6_28318548
       %2632 = OpExtInst %float %1 Fma %2623 %float_6_28318548 %2631
       %2633 = OpExtInst %float %1 Fma %2630 %float_2097152 %2632
       %2634 = OpFMul %float %2597 %2596
       %2635 = OpExtInst %float %1 Sin %2633
       %2636 = OpFMul %float %2635 %2634
       %2637 = OpCompositeConstruct %v3float %548 %548 %2636
       %2638 = OpFAdd %v3float %2602 %2637
       %2639 = OpFSub %v3float %1687 %2563
       %2640 = OpExtInst %v3float %1 NMax %2639 %282
       %2641 = OpExtInst %v3float %1 NMin %2640 %131
       %2642 = OpCompositeExtract %float %2641 0
       %2643 = OpCompositeExtract %float %2641 1
       %2644 = OpCompositeConstruct %v2float %2642 %2643
       %2645 = OpFMul %v2float %1698 %2644
       %2646 = OpFMul %v2float %2644 %1699
       %2647 = OpCompositeExtract %float %2645 0
       %2648 = OpCompositeExtract %float %2646 0
       %2649 = OpCompositeExtract %float %2645 1
       %2650 = OpCompositeExtract %float %2646 1
       %2651 = OpFAdd %float %2647 %2649
       %2652 = OpFAdd %float %2648 %2650
       %2653 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_24 %int_2
       %2654 = OpLoad %float %2653
       %2655 = OpFMul %float %2651 %2654
       %2656 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_25 %int_0
       %2657 = OpLoad %float %2656
       %2658 = OpFMul %float %2657 %1997
       %2659 = OpExtInst %float %1 Fma %2652 %2654 %2658
       %2660 = OpExtInst %float %1 Floor %2655
       %2661 = OpFNegate %float %2660
       %2662 = OpExtInst %float %1 Fma %2651 %2654 %2661
       %2663 = OpExtInst %float %1 Fma %2662 %float_2097152 %2659
       %2664 = OpExtInst %float %1 Floor %2663
       %2665 = OpFMul %float %2660 %float_n6_28318548
       %2666 = OpExtInst %float %1 Fma %2655 %float_6_28318548 %2665
       %2667 = OpFMul %float %2664 %float_n6_28318548
       %2668 = OpExtInst %float %1 Fma %2659 %float_6_28318548 %2667
       %2669 = OpExtInst %float %1 Fma %2666 %float_2097152 %2668
       %2670 = OpFMul %float %2634 %2596
       %2671 = OpExtInst %float %1 Sin %2669
       %2672 = OpFMul %float %2671 %2670
       %2673 = OpCompositeConstruct %v3float %548 %548 %2672
       %2674 = OpFAdd %v3float %2638 %2673
       %2675 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_25 %int_3
       %2676 = OpLoad %float %2675
       %2677 = OpFSub %float %2676 %float_n1
       %2678 = OpExtInst %float %1 FAbs %2677
       %2679 = OpFOrdGreaterThan %bool %2678 %float_9_99999975en06
       %2680 = OpFOrdGreaterThanEqual %bool %2676 %float_n1
       %2681 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_26 %int_0
       %2682 = OpLoad %float %2681
       %2683 = OpSelect %float %2680 %2676 %2682
       %2684 = OpSelect %float %2679 %2683 %2676
       %2685 = OpFSub %float %2684 %float_1
       %2686 = OpExtInst %float %1 FAbs %2685
       %2687 = OpFOrdGreaterThan %bool %2686 %float_9_99999975en06
       %2688 = OpFOrdGreaterThanEqual %bool %2684 %float_1
       %2689 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_26 %int_1
       %2690 = OpLoad %float %2689
       %2691 = OpSelect %float %2688 %2690 %2676
       %2692 = OpSelect %float %2687 %2691 %2676
       %2693 = OpExtInst %float %1 FAbs %2692
       %2694 = OpFOrdGreaterThan %bool %2693 %float_9_99999975en06
       %2695 = OpFOrdGreaterThanEqual %bool %2692 %float_0
       %2696 = OpSelect %float %2695 %float_1 %float_n1
       %2697 = OpSelect %float %2694 %2696 %float_1
       %2698 = OpExtInst %float %1 NMax %2697 %float_n1
       %2699 = OpExtInst %float %1 NMin %2698 %float_1
       %2700 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_27 %int_2
       %2701 = OpLoad %float %2700
       %2702 = OpCompositeConstruct %v3float %2699 %2701 %float_0
       %2703 = OpFAdd %v3float %2702 %1690
       %2704 = OpExtInst %v3float %1 NMax %2703 %282
       %2705 = OpExtInst %v3float %1 NMin %2704 %131
       %2706 = OpCompositeExtract %float %2705 0
       %2707 = OpCompositeExtract %float %2705 1
       %2708 = OpCompositeConstruct %v2float %2706 %2707
       %2709 = OpFMul %v2float %1698 %2708
       %2710 = OpFMul %v2float %2708 %1699
       %2711 = OpCompositeExtract %float %2709 0
       %2712 = OpCompositeExtract %float %2710 0
       %2713 = OpCompositeExtract %float %2709 1
       %2714 = OpCompositeExtract %float %2710 1
       %2715 = OpFAdd %float %2711 %2713
       %2716 = OpFAdd %float %2712 %2714
       %2717 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_29 %int_3
       %2718 = OpLoad %float %2717
       %2719 = OpFMul %float %2715 %2718
       %2720 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_30 %int_2
       %2721 = OpLoad %float %2720
       %2722 = OpFMul %float %2721 %1997
       %2723 = OpExtInst %float %1 Fma %2716 %2718 %2722
       %2724 = OpExtInst %float %1 Floor %2719
       %2725 = OpFNegate %float %2724
       %2726 = OpExtInst %float %1 Fma %2715 %2718 %2725
       %2727 = OpExtInst %float %1 Fma %2726 %float_2097152 %2723
       %2728 = OpExtInst %float %1 Floor %2727
       %2729 = OpFMul %float %2724 %float_n6_28318548
       %2730 = OpExtInst %float %1 Fma %2719 %float_6_28318548 %2729
       %2731 = OpFMul %float %2728 %float_n6_28318548
       %2732 = OpExtInst %float %1 Fma %2723 %float_6_28318548 %2731
       %2733 = OpExtInst %float %1 Fma %2730 %float_2097152 %2732
       %2734 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_30 %int_3
       %2735 = OpLoad %float %2734
       %2736 = OpFMul %float %2558 %2735
       %2737 = OpExtInst %float %1 Sin %2733
       %2738 = OpFMul %float %2737 %2736
       %2739 = OpFAdd %v3float %2702 %2563
       %2740 = OpExtInst %v3float %1 NMax %2739 %282
       %2741 = OpExtInst %v3float %1 NMin %2740 %131
       %2742 = OpCompositeExtract %float %2741 0
       %2743 = OpCompositeExtract %float %2741 1
       %2744 = OpCompositeConstruct %v2float %2742 %2743
       %2745 = OpFMul %v2float %1698 %2744
       %2746 = OpFMul %v2float %2744 %1699
       %2747 = OpCompositeExtract %float %2745 0
       %2748 = OpCompositeExtract %float %2746 0
       %2749 = OpCompositeExtract %float %2745 1
       %2750 = OpCompositeExtract %float %2746 1
       %2751 = OpFAdd %float %2747 %2749
       %2752 = OpFAdd %float %2748 %2750
       %2753 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_31 %int_1
       %2754 = OpLoad %float %2753
       %2755 = OpFMul %float %2751 %2754
       %2756 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_31 %int_3
       %2757 = OpLoad %float %2756
       %2758 = OpFMul %float %2757 %1997
       %2759 = OpExtInst %float %1 Fma %2752 %2754 %2758
       %2760 = OpExtInst %float %1 Floor %2755
       %2761 = OpFNegate %float %2760
       %2762 = OpExtInst %float %1 Fma %2751 %2754 %2761
       %2763 = OpExtInst %float %1 Fma %2762 %float_2097152 %2759
       %2764 = OpExtInst %float %1 Floor %2763
       %2765 = OpFMul %float %2760 %float_n6_28318548
       %2766 = OpExtInst %float %1 Fma %2755 %float_6_28318548 %2765
       %2767 = OpFMul %float %2764 %float_n6_28318548
       %2768 = OpExtInst %float %1 Fma %2759 %float_6_28318548 %2767
       %2769 = OpExtInst %float %1 Fma %2766 %float_2097152 %2768
       %2770 = OpFMul %float %2736 %2596
       %2771 = OpExtInst %float %1 Sin %2769
       %2772 = OpFMul %float %2771 %2770
       %2773 = OpCompositeConstruct %v3float %548 %548 %2738
       %2774 = OpCompositeConstruct %v3float %548 %548 %2772
       %2775 = OpFAdd %v3float %2773 %2774
       %2776 = OpFSub %v3float %2702 %1690
       %2777 = OpExtInst %v3float %1 NMax %2776 %282
       %2778 = OpExtInst %v3float %1 NMin %2777 %131
       %2779 = OpCompositeExtract %float %2778 0
       %2780 = OpCompositeExtract %float %2778 1
       %2781 = OpCompositeConstruct %v2float %2779 %2780
       %2782 = OpFMul %v2float %1698 %2781
       %2783 = OpFMul %v2float %2781 %1699
       %2784 = OpCompositeExtract %float %2782 0
       %2785 = OpCompositeExtract %float %2783 0
       %2786 = OpCompositeExtract %float %2782 1
       %2787 = OpCompositeExtract %float %2783 1
       %2788 = OpFAdd %float %2784 %2786
       %2789 = OpFAdd %float %2785 %2787
       %2790 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_32 %int_1
       %2791 = OpLoad %float %2790
       %2792 = OpFMul %float %2788 %2791
       %2793 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_32 %int_3
       %2794 = OpLoad %float %2793
       %2795 = OpFMul %float %2794 %1997
       %2796 = OpExtInst %float %1 Fma %2789 %2791 %2795
       %2797 = OpExtInst %float %1 Floor %2792
       %2798 = OpFNegate %float %2797
       %2799 = OpExtInst %float %1 Fma %2788 %2791 %2798
       %2800 = OpExtInst %float %1 Fma %2799 %float_2097152 %2796
       %2801 = OpExtInst %float %1 Floor %2800
       %2802 = OpFMul %float %2797 %float_n6_28318548
       %2803 = OpExtInst %float %1 Fma %2792 %float_6_28318548 %2802
       %2804 = OpFMul %float %2801 %float_n6_28318548
       %2805 = OpExtInst %float %1 Fma %2796 %float_6_28318548 %2804
       %2806 = OpExtInst %float %1 Fma %2803 %float_2097152 %2805
       %2807 = OpFMul %float %2770 %2596
       %2808 = OpExtInst %float %1 Sin %2806
       %2809 = OpFMul %float %2808 %2807
       %2810 = OpCompositeConstruct %v3float %548 %548 %2809
       %2811 = OpFAdd %v3float %2775 %2810
       %2812 = OpFSub %v3float %2702 %2563
       %2813 = OpExtInst %v3float %1 NMax %2812 %282
       %2814 = OpExtInst %v3float %1 NMin %2813 %131
       %2815 = OpCompositeExtract %float %2814 0
       %2816 = OpCompositeExtract %float %2814 1
       %2817 = OpCompositeConstruct %v2float %2815 %2816
       %2818 = OpFMul %v2float %1698 %2817
       %2819 = OpFMul %v2float %2817 %1699
       %2820 = OpCompositeExtract %float %2818 0
       %2821 = OpCompositeExtract %float %2819 0
       %2822 = OpCompositeExtract %float %2818 1
       %2823 = OpCompositeExtract %float %2819 1
       %2824 = OpFAdd %float %2820 %2822
       %2825 = OpFAdd %float %2821 %2823
       %2826 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_33 %int_1
       %2827 = OpLoad %float %2826
       %2828 = OpFMul %float %2824 %2827
       %2829 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_33 %int_3
       %2830 = OpLoad %float %2829
       %2831 = OpFMul %float %2830 %1997
       %2832 = OpExtInst %float %1 Fma %2825 %2827 %2831
       %2833 = OpExtInst %float %1 Floor %2828
       %2834 = OpFNegate %float %2833
       %2835 = OpExtInst %float %1 Fma %2824 %2827 %2834
       %2836 = OpExtInst %float %1 Fma %2835 %float_2097152 %2832
       %2837 = OpExtInst %float %1 Floor %2836
       %2838 = OpFMul %float %2833 %float_n6_28318548
       %2839 = OpExtInst %float %1 Fma %2828 %float_6_28318548 %2838
       %2840 = OpFMul %float %2837 %float_n6_28318548
       %2841 = OpExtInst %float %1 Fma %2832 %float_6_28318548 %2840
       %2842 = OpExtInst %float %1 Fma %2839 %float_2097152 %2841
       %2843 = OpFMul %float %2807 %2596
       %2844 = OpExtInst %float %1 Sin %2842
       %2845 = OpFMul %float %2844 %2843
       %2846 = OpCompositeConstruct %v3float %548 %548 %2845
       %2847 = OpFAdd %v3float %2811 %2846
       %2848 = OpFAdd %v3float %2674 %2847
       %2849 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_0
       %2850 = OpLoad %float %2849
       %2851 = OpFSub %float %2850 %float_n1
       %2852 = OpExtInst %float %1 FAbs %2851
       %2853 = OpFOrdGreaterThan %bool %2852 %float_9_99999975en06
       %2854 = OpFOrdGreaterThanEqual %bool %2850 %float_n1
       %2855 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_1
       %2856 = OpLoad %float %2855
       %2857 = OpSelect %float %2854 %2850 %2856
       %2858 = OpSelect %float %2853 %2857 %2850
       %2859 = OpFSub %float %2858 %float_1
       %2860 = OpExtInst %float %1 FAbs %2859
       %2861 = OpFOrdGreaterThan %bool %2860 %float_9_99999975en06
       %2862 = OpFOrdGreaterThanEqual %bool %2858 %float_1
       %2863 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_2
       %2864 = OpLoad %float %2863
       %2865 = OpSelect %float %2862 %2864 %2850
       %2866 = OpSelect %float %2861 %2865 %2850
       %2867 = OpExtInst %float %1 FAbs %2866
       %2868 = OpFOrdGreaterThan %bool %2867 %float_9_99999975en06
       %2869 = OpFOrdGreaterThanEqual %bool %2866 %float_0
       %2870 = OpSelect %float %2869 %float_1 %float_n1
       %2871 = OpSelect %float %2868 %2870 %float_1
       %2872 = OpExtInst %float %1 NMax %2871 %float_n1
       %2873 = OpExtInst %float %1 NMin %2872 %float_1
       %2874 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_3
       %2875 = OpLoad %float %2874
       %2876 = OpCompositeConstruct %v3float %2873 %2875 %float_0
       %2877 = OpFAdd %v3float %2876 %1690
       %2878 = OpExtInst %v3float %1 NMax %2877 %282
       %2879 = OpExtInst %v3float %1 NMin %2878 %131
       %2880 = OpCompositeExtract %float %2879 0
       %2881 = OpCompositeExtract %float %2879 1
       %2882 = OpCompositeConstruct %v2float %2880 %2881
       %2883 = OpFMul %v2float %1698 %2882
       %2884 = OpFMul %v2float %2882 %1699
       %2885 = OpCompositeExtract %float %2883 0
       %2886 = OpCompositeExtract %float %2884 0
       %2887 = OpCompositeExtract %float %2883 1
       %2888 = OpCompositeExtract %float %2884 1
       %2889 = OpFAdd %float %2885 %2887
       %2890 = OpFAdd %float %2886 %2888
       %2891 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_37 %int_2
       %2892 = OpLoad %float %2891
       %2893 = OpFMul %float %2889 %2892
       %2894 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_37 %int_3
       %2895 = OpLoad %float %2894
       %2896 = OpFMul %float %2895 %1997
       %2897 = OpExtInst %float %1 Fma %2890 %2892 %2896
       %2898 = OpExtInst %float %1 Floor %2893
       %2899 = OpFNegate %float %2898
       %2900 = OpExtInst %float %1 Fma %2889 %2892 %2899
       %2901 = OpExtInst %float %1 Fma %2900 %float_2097152 %2897
       %2902 = OpExtInst %float %1 Floor %2901
       %2903 = OpFMul %float %2898 %float_n6_28318548
       %2904 = OpExtInst %float %1 Fma %2893 %float_6_28318548 %2903
       %2905 = OpFMul %float %2902 %float_n6_28318548
       %2906 = OpExtInst %float %1 Fma %2897 %float_6_28318548 %2905
       %2907 = OpExtInst %float %1 Fma %2904 %float_2097152 %2906
       %2908 = OpExtInst %float %1 Sin %2907
       %2909 = OpFMul %float %2908 %2736
       %2910 = OpFAdd %v3float %2876 %2563
       %2911 = OpExtInst %v3float %1 NMax %2910 %282
       %2912 = OpExtInst %v3float %1 NMin %2911 %131
       %2913 = OpCompositeExtract %float %2912 0
       %2914 = OpCompositeExtract %float %2912 1
       %2915 = OpCompositeConstruct %v2float %2913 %2914
       %2916 = OpFMul %v2float %1698 %2915
       %2917 = OpFMul %v2float %2915 %1699
       %2918 = OpCompositeExtract %float %2916 0
       %2919 = OpCompositeExtract %float %2917 0
       %2920 = OpCompositeExtract %float %2916 1
       %2921 = OpCompositeExtract %float %2917 1
       %2922 = OpFAdd %float %2918 %2920
       %2923 = OpFAdd %float %2919 %2921
       %2924 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_38 %int_1
       %2925 = OpLoad %float %2924
       %2926 = OpFMul %float %2922 %2925
       %2927 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_38 %int_2
       %2928 = OpLoad %float %2927
       %2929 = OpFMul %float %2928 %1997
       %2930 = OpExtInst %float %1 Fma %2923 %2925 %2929
       %2931 = OpExtInst %float %1 Floor %2926
       %2932 = OpFNegate %float %2931
       %2933 = OpExtInst %float %1 Fma %2922 %2925 %2932
       %2934 = OpExtInst %float %1 Fma %2933 %float_2097152 %2930
       %2935 = OpExtInst %float %1 Floor %2934
       %2936 = OpFMul %float %2931 %float_n6_28318548
       %2937 = OpExtInst %float %1 Fma %2926 %float_6_28318548 %2936
       %2938 = OpFMul %float %2935 %float_n6_28318548
       %2939 = OpExtInst %float %1 Fma %2930 %float_6_28318548 %2938
       %2940 = OpExtInst %float %1 Fma %2937 %float_2097152 %2939
       %2941 = OpExtInst %float %1 Sin %2940
       %2942 = OpFMul %float %2941 %2770
       %2943 = OpCompositeConstruct %v3float %548 %548 %2909
       %2944 = OpCompositeConstruct %v3float %548 %548 %2942
       %2945 = OpFAdd %v3float %2943 %2944
       %2946 = OpFSub %v3float %2876 %1690
       %2947 = OpExtInst %v3float %1 NMax %2946 %282
       %2948 = OpExtInst %v3float %1 NMin %2947 %131
       %2949 = OpCompositeExtract %float %2948 0
       %2950 = OpCompositeExtract %float %2948 1
       %2951 = OpCompositeConstruct %v2float %2949 %2950
       %2952 = OpFMul %v2float %1698 %2951
       %2953 = OpFMul %v2float %2951 %1699
       %2954 = OpCompositeExtract %float %2952 0
       %2955 = OpCompositeExtract %float %2953 0
       %2956 = OpCompositeExtract %float %2952 1
       %2957 = OpCompositeExtract %float %2953 1
       %2958 = OpFAdd %float %2954 %2956
       %2959 = OpFAdd %float %2955 %2957
       %2960 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_0
       %2961 = OpLoad %float %2960
       %2962 = OpFMul %float %2958 %2961
       %2963 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_1
       %2964 = OpLoad %float %2963
       %2965 = OpFMul %float %2964 %1997
       %2966 = OpExtInst %float %1 Fma %2959 %2961 %2965
       %2967 = OpExtInst %float %1 Floor %2962
       %2968 = OpFNegate %float %2967
       %2969 = OpExtInst %float %1 Fma %2958 %2961 %2968
       %2970 = OpExtInst %float %1 Fma %2969 %float_2097152 %2966
       %2971 = OpExtInst %float %1 Floor %2970
       %2972 = OpFMul %float %2967 %float_n6_28318548
       %2973 = OpExtInst %float %1 Fma %2962 %float_6_28318548 %2972
       %2974 = OpFMul %float %2971 %float_n6_28318548
       %2975 = OpExtInst %float %1 Fma %2966 %float_6_28318548 %2974
       %2976 = OpExtInst %float %1 Fma %2973 %float_2097152 %2975
       %2977 = OpExtInst %float %1 Sin %2976
       %2978 = OpFMul %float %2977 %2807
       %2979 = OpCompositeConstruct %v3float %548 %548 %2978
       %2980 = OpFAdd %v3float %2945 %2979
       %2981 = OpFSub %v3float %2876 %2563
       %2982 = OpExtInst %v3float %1 NMax %2981 %282
       %2983 = OpExtInst %v3float %1 NMin %2982 %131
       %2984 = OpCompositeExtract %float %2983 0
       %2985 = OpCompositeExtract %float %2983 1
       %2986 = OpCompositeConstruct %v2float %2984 %2985
       %2987 = OpFMul %v2float %1698 %2986
       %2988 = OpFMul %v2float %2986 %1699
       %2989 = OpCompositeExtract %float %2987 0
       %2990 = OpCompositeExtract %float %2988 0
       %2991 = OpCompositeExtract %float %2987 1
       %2992 = OpCompositeExtract %float %2988 1
       %2993 = OpFAdd %float %2989 %2991
       %2994 = OpFAdd %float %2990 %2992
       %2995 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_3
       %2996 = OpLoad %float %2995
       %2997 = OpFMul %float %2993 %2996
       %2998 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_0
       %2999 = OpLoad %float %2998
       %3000 = OpFMul %float %2999 %1997
       %3001 = OpExtInst %float %1 Fma %2994 %2996 %3000
       %3002 = OpExtInst %float %1 Floor %2997
       %3003 = OpFNegate %float %3002
       %3004 = OpExtInst %float %1 Fma %2993 %2996 %3003
       %3005 = OpExtInst %float %1 Fma %3004 %float_2097152 %3001
       %3006 = OpExtInst %float %1 Floor %3005
       %3007 = OpFMul %float %3002 %float_n6_28318548
       %3008 = OpExtInst %float %1 Fma %2997 %float_6_28318548 %3007
       %3009 = OpFMul %float %3006 %float_n6_28318548
       %3010 = OpExtInst %float %1 Fma %3001 %float_6_28318548 %3009
       %3011 = OpExtInst %float %1 Fma %3008 %float_2097152 %3010
       %3012 = OpExtInst %float %1 Sin %3011
       %3013 = OpFMul %float %3012 %2843
       %3014 = OpCompositeConstruct %v3float %548 %548 %3013
       %3015 = OpFAdd %v3float %2980 %3014
       %3016 = OpFAdd %v3float %2848 %3015
       %3017 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_1
       %3018 = OpLoad %float %3017
       %3019 = OpFSub %float %3018 %float_n1
       %3020 = OpExtInst %float %1 FAbs %3019
       %3021 = OpFOrdGreaterThan %bool %3020 %float_9_99999975en06
       %3022 = OpFOrdGreaterThanEqual %bool %3018 %float_n1
       %3023 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_2
       %3024 = OpLoad %float %3023
       %3025 = OpSelect %float %3022 %3018 %3024
       %3026 = OpSelect %float %3021 %3025 %3018
       %3027 = OpFSub %float %3026 %float_1
       %3028 = OpExtInst %float %1 FAbs %3027
       %3029 = OpFOrdGreaterThan %bool %3028 %float_9_99999975en06
       %3030 = OpFOrdGreaterThanEqual %bool %3026 %float_1
       %3031 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_3
       %3032 = OpLoad %float %3031
       %3033 = OpSelect %float %3030 %3032 %3018
       %3034 = OpSelect %float %3029 %3033 %3018
       %3035 = OpExtInst %float %1 FAbs %3034
       %3036 = OpFOrdGreaterThan %bool %3035 %float_9_99999975en06
       %3037 = OpFOrdGreaterThanEqual %bool %3034 %float_0
       %3038 = OpSelect %float %3037 %float_1 %float_n1
       %3039 = OpSelect %float %3036 %3038 %float_1
       %3040 = OpExtInst %float %1 NMax %3039 %float_n1
       %3041 = OpExtInst %float %1 NMin %3040 %float_1
       %3042 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_42 %int_0
       %3043 = OpLoad %float %3042
       %3044 = OpCompositeConstruct %v3float %3041 %3043 %float_0
       %3045 = OpFAdd %v3float %3044 %1690
       %3046 = OpExtInst %v3float %1 NMax %3045 %282
       %3047 = OpExtInst %v3float %1 NMin %3046 %131
       %3048 = OpCompositeExtract %float %3047 0
       %3049 = OpCompositeExtract %float %3047 1
       %3050 = OpCompositeConstruct %v2float %3048 %3049
       %3051 = OpFMul %v2float %1698 %3050
       %3052 = OpFMul %v2float %3050 %1699
       %3053 = OpCompositeExtract %float %3051 0
       %3054 = OpCompositeExtract %float %3052 0
       %3055 = OpCompositeExtract %float %3051 1
       %3056 = OpCompositeExtract %float %3052 1
       %3057 = OpFAdd %float %3053 %3055
       %3058 = OpFAdd %float %3054 %3056
       %3059 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_43 %int_3
       %3060 = OpLoad %float %3059
       %3061 = OpFMul %float %3057 %3060
       %3062 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_44 %int_0
       %3063 = OpLoad %float %3062
       %3064 = OpFMul %float %3063 %1997
       %3065 = OpExtInst %float %1 Fma %3058 %3060 %3064
       %3066 = OpExtInst %float %1 Floor %3061
       %3067 = OpFNegate %float %3066
       %3068 = OpExtInst %float %1 Fma %3057 %3060 %3067
       %3069 = OpExtInst %float %1 Fma %3068 %float_2097152 %3065
       %3070 = OpExtInst %float %1 Floor %3069
       %3071 = OpFMul %float %3066 %float_n6_28318548
       %3072 = OpExtInst %float %1 Fma %3061 %float_6_28318548 %3071
       %3073 = OpFMul %float %3070 %float_n6_28318548
       %3074 = OpExtInst %float %1 Fma %3065 %float_6_28318548 %3073
       %3075 = OpExtInst %float %1 Fma %3072 %float_2097152 %3074
       %3076 = OpExtInst %float %1 Sin %3075
       %3077 = OpFMul %float %3076 %2558
       %3078 = OpFAdd %v3float %3044 %2563
       %3079 = OpExtInst %v3float %1 NMax %3078 %282
       %3080 = OpExtInst %v3float %1 NMin %3079 %131
       %3081 = OpCompositeExtract %float %3080 0
       %3082 = OpCompositeExtract %float %3080 1
       %3083 = OpCompositeConstruct %v2float %3081 %3082
       %3084 = OpFMul %v2float %1698 %3083
       %3085 = OpFMul %v2float %3083 %1699
       %3086 = OpCompositeExtract %float %3084 0
       %3087 = OpCompositeExtract %float %3085 0
       %3088 = OpCompositeExtract %float %3084 1
       %3089 = OpCompositeExtract %float %3085 1
       %3090 = OpFAdd %float %3086 %3088
       %3091 = OpFAdd %float %3087 %3089
       %3092 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_44 %int_2
       %3093 = OpLoad %float %3092
       %3094 = OpFMul %float %3090 %3093
       %3095 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_44 %int_3
       %3096 = OpLoad %float %3095
       %3097 = OpFMul %float %3096 %1997
       %3098 = OpExtInst %float %1 Fma %3091 %3093 %3097
       %3099 = OpExtInst %float %1 Floor %3094
       %3100 = OpFNegate %float %3099
       %3101 = OpExtInst %float %1 Fma %3090 %3093 %3100
       %3102 = OpExtInst %float %1 Fma %3101 %float_2097152 %3098
       %3103 = OpExtInst %float %1 Floor %3102
       %3104 = OpFMul %float %3099 %float_n6_28318548
       %3105 = OpExtInst %float %1 Fma %3094 %float_6_28318548 %3104
       %3106 = OpFMul %float %3103 %float_n6_28318548
       %3107 = OpExtInst %float %1 Fma %3098 %float_6_28318548 %3106
       %3108 = OpExtInst %float %1 Fma %3105 %float_2097152 %3107
       %3109 = OpExtInst %float %1 Sin %3108
       %3110 = OpFMul %float %3109 %2597
       %3111 = OpCompositeConstruct %v3float %548 %548 %3077
       %3112 = OpCompositeConstruct %v3float %548 %548 %3110
       %3113 = OpFAdd %v3float %3111 %3112
       %3114 = OpFSub %v3float %3044 %1690
       %3115 = OpExtInst %v3float %1 NMax %3114 %282
       %3116 = OpExtInst %v3float %1 NMin %3115 %131
       %3117 = OpCompositeExtract %float %3116 0
       %3118 = OpCompositeExtract %float %3116 1
       %3119 = OpCompositeConstruct %v2float %3117 %3118
       %3120 = OpFMul %v2float %1698 %3119
       %3121 = OpFMul %v2float %3119 %1699
       %3122 = OpCompositeExtract %float %3120 0
       %3123 = OpCompositeExtract %float %3121 0
       %3124 = OpCompositeExtract %float %3120 1
       %3125 = OpCompositeExtract %float %3121 1
       %3126 = OpFAdd %float %3122 %3124
       %3127 = OpFAdd %float %3123 %3125
       %3128 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_1
       %3129 = OpLoad %float %3128
       %3130 = OpFMul %float %3126 %3129
       %3131 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_2
       %3132 = OpLoad %float %3131
       %3133 = OpFMul %float %3132 %1997
       %3134 = OpExtInst %float %1 Fma %3127 %3129 %3133
       %3135 = OpExtInst %float %1 Floor %3130
       %3136 = OpFNegate %float %3135
       %3137 = OpExtInst %float %1 Fma %3126 %3129 %3136
       %3138 = OpExtInst %float %1 Fma %3137 %float_2097152 %3134
       %3139 = OpExtInst %float %1 Floor %3138
       %3140 = OpFMul %float %3135 %float_n6_28318548
       %3141 = OpExtInst %float %1 Fma %3130 %float_6_28318548 %3140
       %3142 = OpFMul %float %3139 %float_n6_28318548
       %3143 = OpExtInst %float %1 Fma %3134 %float_6_28318548 %3142
       %3144 = OpExtInst %float %1 Fma %3141 %float_2097152 %3143
       %3145 = OpExtInst %float %1 Sin %3144
       %3146 = OpFMul %float %3145 %2634
       %3147 = OpCompositeConstruct %v3float %548 %548 %3146
       %3148 = OpFAdd %v3float %3113 %3147
       %3149 = OpFSub %v3float %3044 %2563
       %3150 = OpExtInst %v3float %1 NMax %3149 %282
       %3151 = OpExtInst %v3float %1 NMin %3150 %131
       %3152 = OpCompositeExtract %float %3151 0
       %3153 = OpCompositeExtract %float %3151 1
       %3154 = OpCompositeConstruct %v2float %3152 %3153
       %3155 = OpFMul %v2float %1698 %3154
       %3156 = OpFMul %v2float %3154 %1699
       %3157 = OpCompositeExtract %float %3155 0
       %3158 = OpCompositeExtract %float %3156 0
       %3159 = OpCompositeExtract %float %3155 1
       %3160 = OpCompositeExtract %float %3156 1
       %3161 = OpFAdd %float %3157 %3159
       %3162 = OpFAdd %float %3158 %3160
       %3163 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_0
       %3164 = OpLoad %float %3163
       %3165 = OpFMul %float %3161 %3164
       %3166 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_1
       %3167 = OpLoad %float %3166
       %3168 = OpFMul %float %3167 %1997
       %3169 = OpExtInst %float %1 Fma %3162 %3164 %3168
       %3170 = OpExtInst %float %1 Floor %3165
       %3171 = OpFNegate %float %3170
       %3172 = OpExtInst %float %1 Fma %3161 %3164 %3171
       %3173 = OpExtInst %float %1 Fma %3172 %float_2097152 %3169
       %3174 = OpExtInst %float %1 Floor %3173
       %3175 = OpFMul %float %3170 %float_n6_28318548
       %3176 = OpExtInst %float %1 Fma %3165 %float_6_28318548 %3175
       %3177 = OpFMul %float %3174 %float_n6_28318548
       %3178 = OpExtInst %float %1 Fma %3169 %float_6_28318548 %3177
       %3179 = OpExtInst %float %1 Fma %3176 %float_2097152 %3178
       %3180 = OpExtInst %float %1 Sin %3179
       %3181 = OpFMul %float %3180 %2670
       %3182 = OpCompositeConstruct %v3float %548 %548 %3181
       %3183 = OpFAdd %v3float %3148 %3182
       %3184 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_2
       %3185 = OpLoad %float %3184
       %3186 = OpFSub %float %3185 %float_n1
       %3187 = OpExtInst %float %1 FAbs %3186
       %3188 = OpFOrdGreaterThan %bool %3187 %float_9_99999975en06
       %3189 = OpFOrdGreaterThanEqual %bool %3185 %float_n1
       %3190 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_3
       %3191 = OpLoad %float %3190
       %3192 = OpSelect %float %3189 %3185 %3191
       %3193 = OpSelect %float %3188 %3192 %3185
       %3194 = OpFSub %float %3193 %float_1
       %3195 = OpExtInst %float %1 FAbs %3194
       %3196 = OpFOrdGreaterThan %bool %3195 %float_9_99999975en06
       %3197 = OpFOrdGreaterThanEqual %bool %3193 %float_1
       %3198 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_47 %int_0
       %3199 = OpLoad %float %3198
       %3200 = OpSelect %float %3197 %3199 %3185
       %3201 = OpSelect %float %3196 %3200 %3185
       %3202 = OpExtInst %float %1 FAbs %3201
       %3203 = OpFOrdGreaterThan %bool %3202 %float_9_99999975en06
       %3204 = OpFOrdGreaterThanEqual %bool %3201 %float_0
       %3205 = OpSelect %float %3204 %float_1 %float_n1
       %3206 = OpSelect %float %3203 %3205 %float_1
       %3207 = OpExtInst %float %1 NMax %3206 %float_n1
       %3208 = OpExtInst %float %1 NMin %3207 %float_1
       %3209 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_48 %int_1
       %3210 = OpLoad %float %3209
       %3211 = OpCompositeConstruct %v3float %3208 %3210 %float_0
       %3212 = OpFAdd %v3float %3211 %1690
       %3213 = OpExtInst %v3float %1 NMax %3212 %282
       %3214 = OpExtInst %v3float %1 NMin %3213 %131
       %3215 = OpCompositeExtract %float %3214 0
       %3216 = OpCompositeExtract %float %3214 1
       %3217 = OpCompositeConstruct %v2float %3215 %3216
       %3218 = OpFMul %v2float %1698 %3217
       %3219 = OpFMul %v2float %3217 %1699
       %3220 = OpCompositeExtract %float %3218 0
       %3221 = OpCompositeExtract %float %3219 0
       %3222 = OpCompositeExtract %float %3218 1
       %3223 = OpCompositeExtract %float %3219 1
       %3224 = OpFAdd %float %3220 %3222
       %3225 = OpFAdd %float %3221 %3223
       %3226 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_50 %int_0
       %3227 = OpLoad %float %3226
       %3228 = OpFMul %float %3224 %3227
       %3229 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_50 %int_1
       %3230 = OpLoad %float %3229
       %3231 = OpFMul %float %3230 %1997
       %3232 = OpExtInst %float %1 Fma %3225 %3227 %3231
       %3233 = OpExtInst %float %1 Floor %3228
       %3234 = OpFNegate %float %3233
       %3235 = OpExtInst %float %1 Fma %3224 %3227 %3234
       %3236 = OpExtInst %float %1 Fma %3235 %float_2097152 %3232
       %3237 = OpExtInst %float %1 Floor %3236
       %3238 = OpFMul %float %3233 %float_n6_28318548
       %3239 = OpExtInst %float %1 Fma %3228 %float_6_28318548 %3238
       %3240 = OpFMul %float %3237 %float_n6_28318548
       %3241 = OpExtInst %float %1 Fma %3232 %float_6_28318548 %3240
       %3242 = OpExtInst %float %1 Fma %3239 %float_2097152 %3241
       %3243 = OpExtInst %float %1 Sin %3242
       %3244 = OpFMul %float %3243 %2736
       %3245 = OpFAdd %v3float %3211 %2563
       %3246 = OpExtInst %v3float %1 NMax %3245 %282
       %3247 = OpExtInst %v3float %1 NMin %3246 %131
       %3248 = OpCompositeExtract %float %3247 0
       %3249 = OpCompositeExtract %float %3247 1
       %3250 = OpCompositeConstruct %v2float %3248 %3249
       %3251 = OpFMul %v2float %1698 %3250
       %3252 = OpFMul %v2float %3250 %1699
       %3253 = OpCompositeExtract %float %3251 0
       %3254 = OpCompositeExtract %float %3252 0
       %3255 = OpCompositeExtract %float %3251 1
       %3256 = OpCompositeExtract %float %3252 1
       %3257 = OpFAdd %float %3253 %3255
       %3258 = OpFAdd %float %3254 %3256
       %3259 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_50 %int_3
       %3260 = OpLoad %float %3259
       %3261 = OpFMul %float %3257 %3260
       %3262 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_0
       %3263 = OpLoad %float %3262
       %3264 = OpFMul %float %3263 %1997
       %3265 = OpExtInst %float %1 Fma %3258 %3260 %3264
       %3266 = OpExtInst %float %1 Floor %3261
       %3267 = OpFNegate %float %3266
       %3268 = OpExtInst %float %1 Fma %3257 %3260 %3267
       %3269 = OpExtInst %float %1 Fma %3268 %float_2097152 %3265
       %3270 = OpExtInst %float %1 Floor %3269
       %3271 = OpFMul %float %3266 %float_n6_28318548
       %3272 = OpExtInst %float %1 Fma %3261 %float_6_28318548 %3271
       %3273 = OpFMul %float %3270 %float_n6_28318548
       %3274 = OpExtInst %float %1 Fma %3265 %float_6_28318548 %3273
       %3275 = OpExtInst %float %1 Fma %3272 %float_2097152 %3274
       %3276 = OpExtInst %float %1 Sin %3275
       %3277 = OpFMul %float %3276 %2770
       %3278 = OpCompositeConstruct %v3float %548 %548 %3244
       %3279 = OpCompositeConstruct %v3float %548 %548 %3277
       %3280 = OpFAdd %v3float %3278 %3279
       %3281 = OpFSub %v3float %3211 %1690
       %3282 = OpExtInst %v3float %1 NMax %3281 %282
       %3283 = OpExtInst %v3float %1 NMin %3282 %131
       %3284 = OpCompositeExtract %float %3283 0
       %3285 = OpCompositeExtract %float %3283 1
       %3286 = OpCompositeConstruct %v2float %3284 %3285
       %3287 = OpFMul %v2float %1698 %3286
       %3288 = OpFMul %v2float %3286 %1699
       %3289 = OpCompositeExtract %float %3287 0
       %3290 = OpCompositeExtract %float %3288 0
       %3291 = OpCompositeExtract %float %3287 1
       %3292 = OpCompositeExtract %float %3288 1
       %3293 = OpFAdd %float %3289 %3291
       %3294 = OpFAdd %float %3290 %3292
       %3295 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_2
       %3296 = OpLoad %float %3295
       %3297 = OpFMul %float %3293 %3296
       %3298 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_3
       %3299 = OpLoad %float %3298
       %3300 = OpFMul %float %3299 %1997
       %3301 = OpExtInst %float %1 Fma %3294 %3296 %3300
       %3302 = OpExtInst %float %1 Floor %3297
       %3303 = OpFNegate %float %3302
       %3304 = OpExtInst %float %1 Fma %3293 %3296 %3303
       %3305 = OpExtInst %float %1 Fma %3304 %float_2097152 %3301
       %3306 = OpExtInst %float %1 Floor %3305
       %3307 = OpFMul %float %3302 %float_n6_28318548
       %3308 = OpExtInst %float %1 Fma %3297 %float_6_28318548 %3307
       %3309 = OpFMul %float %3306 %float_n6_28318548
       %3310 = OpExtInst %float %1 Fma %3301 %float_6_28318548 %3309
       %3311 = OpExtInst %float %1 Fma %3308 %float_2097152 %3310
       %3312 = OpExtInst %float %1 Sin %3311
       %3313 = OpFMul %float %3312 %2807
       %3314 = OpCompositeConstruct %v3float %548 %548 %3313
       %3315 = OpFAdd %v3float %3280 %3314
       %3316 = OpFSub %v3float %3211 %2563
       %3317 = OpExtInst %v3float %1 NMax %3316 %282
       %3318 = OpExtInst %v3float %1 NMin %3317 %131
       %3319 = OpCompositeExtract %float %3318 0
       %3320 = OpCompositeExtract %float %3318 1
       %3321 = OpCompositeConstruct %v2float %3319 %3320
       %3322 = OpFMul %v2float %1698 %3321
       %3323 = OpFMul %v2float %3321 %1699
       %3324 = OpCompositeExtract %float %3322 0
       %3325 = OpCompositeExtract %float %3323 0
       %3326 = OpCompositeExtract %float %3322 1
       %3327 = OpCompositeExtract %float %3323 1
       %3328 = OpFAdd %float %3324 %3326
       %3329 = OpFAdd %float %3325 %3327
       %3330 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_1
       %3331 = OpLoad %float %3330
       %3332 = OpFMul %float %3328 %3331
       %3333 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_2
       %3334 = OpLoad %float %3333
       %3335 = OpFMul %float %3334 %1997
       %3336 = OpExtInst %float %1 Fma %3329 %3331 %3335
       %3337 = OpExtInst %float %1 Floor %3332
       %3338 = OpFNegate %float %3337
       %3339 = OpExtInst %float %1 Fma %3328 %3331 %3338
       %3340 = OpExtInst %float %1 Fma %3339 %float_2097152 %3336
       %3341 = OpExtInst %float %1 Floor %3340
       %3342 = OpFMul %float %3337 %float_n6_28318548
       %3343 = OpExtInst %float %1 Fma %3332 %float_6_28318548 %3342
       %3344 = OpFMul %float %3341 %float_n6_28318548
       %3345 = OpExtInst %float %1 Fma %3336 %float_6_28318548 %3344
       %3346 = OpExtInst %float %1 Fma %3343 %float_2097152 %3345
       %3347 = OpExtInst %float %1 Sin %3346
       %3348 = OpFMul %float %3347 %2843
       %3349 = OpCompositeConstruct %v3float %548 %548 %3348
       %3350 = OpFAdd %v3float %3315 %3349
       %3351 = OpFAdd %v3float %3183 %3350
       %3352 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_3
       %3353 = OpLoad %float %3352
       %3354 = OpFSub %float %3353 %float_n1
       %3355 = OpExtInst %float %1 FAbs %3354
       %3356 = OpFOrdGreaterThan %bool %3355 %float_9_99999975en06
       %3357 = OpFOrdGreaterThanEqual %bool %3353 %float_n1
       %3358 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_0
       %3359 = OpLoad %float %3358
       %3360 = OpSelect %float %3357 %3353 %3359
       %3361 = OpSelect %float %3356 %3360 %3353
       %3362 = OpFSub %float %3361 %float_1
       %3363 = OpExtInst %float %1 FAbs %3362
       %3364 = OpFOrdGreaterThan %bool %3363 %float_9_99999975en06
       %3365 = OpFOrdGreaterThanEqual %bool %3361 %float_1
       %3366 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_1
       %3367 = OpLoad %float %3366
       %3368 = OpSelect %float %3365 %3367 %3353
       %3369 = OpSelect %float %3364 %3368 %3353
       %3370 = OpExtInst %float %1 FAbs %3369
       %3371 = OpFOrdGreaterThan %bool %3370 %float_9_99999975en06
       %3372 = OpFOrdGreaterThanEqual %bool %3369 %float_0
       %3373 = OpSelect %float %3372 %float_1 %float_n1
       %3374 = OpSelect %float %3371 %3373 %float_1
       %3375 = OpExtInst %float %1 NMax %3374 %float_n1
       %3376 = OpExtInst %float %1 NMin %3375 %float_1
       %3377 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_2
       %3378 = OpLoad %float %3377
       %3379 = OpCompositeConstruct %v3float %3376 %3378 %float_0
       %3380 = OpFAdd %v3float %3379 %1690
       %3381 = OpExtInst %v3float %1 NMax %3380 %282
       %3382 = OpExtInst %v3float %1 NMin %3381 %131
       %3383 = OpCompositeExtract %float %3382 0
       %3384 = OpCompositeExtract %float %3382 1
       %3385 = OpCompositeConstruct %v2float %3383 %3384
       %3386 = OpFMul %v2float %1698 %3385
       %3387 = OpFMul %v2float %3385 %1699
       %3388 = OpCompositeExtract %float %3386 0
       %3389 = OpCompositeExtract %float %3387 0
       %3390 = OpCompositeExtract %float %3386 1
       %3391 = OpCompositeExtract %float %3387 1
       %3392 = OpFAdd %float %3388 %3390
       %3393 = OpFAdd %float %3389 %3391
       %3394 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_56 %int_1
       %3395 = OpLoad %float %3394
       %3396 = OpFMul %float %3392 %3395
       %3397 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_56 %int_2
       %3398 = OpLoad %float %3397
       %3399 = OpFMul %float %3398 %1997
       %3400 = OpExtInst %float %1 Fma %3393 %3395 %3399
       %3401 = OpExtInst %float %1 Floor %3396
       %3402 = OpFNegate %float %3401
       %3403 = OpExtInst %float %1 Fma %3392 %3395 %3402
       %3404 = OpExtInst %float %1 Fma %3403 %float_2097152 %3400
       %3405 = OpExtInst %float %1 Floor %3404
       %3406 = OpFMul %float %3401 %float_n6_28318548
       %3407 = OpExtInst %float %1 Fma %3396 %float_6_28318548 %3406
       %3408 = OpFMul %float %3405 %float_n6_28318548
       %3409 = OpExtInst %float %1 Fma %3400 %float_6_28318548 %3408
       %3410 = OpExtInst %float %1 Fma %3407 %float_2097152 %3409
       %3411 = OpExtInst %float %1 Sin %3410
       %3412 = OpFMul %float %3411 %2736
       %3413 = OpFAdd %v3float %3379 %2563
       %3414 = OpExtInst %v3float %1 NMax %3413 %282
       %3415 = OpExtInst %v3float %1 NMin %3414 %131
       %3416 = OpCompositeExtract %float %3415 0
       %3417 = OpCompositeExtract %float %3415 1
       %3418 = OpCompositeConstruct %v2float %3416 %3417
       %3419 = OpFMul %v2float %1698 %3418
       %3420 = OpFMul %v2float %3418 %1699
       %3421 = OpCompositeExtract %float %3419 0
       %3422 = OpCompositeExtract %float %3420 0
       %3423 = OpCompositeExtract %float %3419 1
       %3424 = OpCompositeExtract %float %3420 1
       %3425 = OpFAdd %float %3421 %3423
       %3426 = OpFAdd %float %3422 %3424
       %3427 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_0
       %3428 = OpLoad %float %3427
       %3429 = OpFMul %float %3425 %3428
       %3430 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_1
       %3431 = OpLoad %float %3430
       %3432 = OpFMul %float %3431 %1997
       %3433 = OpExtInst %float %1 Fma %3426 %3428 %3432
       %3434 = OpExtInst %float %1 Floor %3429
       %3435 = OpFNegate %float %3434
       %3436 = OpExtInst %float %1 Fma %3425 %3428 %3435
       %3437 = OpExtInst %float %1 Fma %3436 %float_2097152 %3433
       %3438 = OpExtInst %float %1 Floor %3437
       %3439 = OpFMul %float %3434 %float_n6_28318548
       %3440 = OpExtInst %float %1 Fma %3429 %float_6_28318548 %3439
       %3441 = OpFMul %float %3438 %float_n6_28318548
       %3442 = OpExtInst %float %1 Fma %3433 %float_6_28318548 %3441
       %3443 = OpExtInst %float %1 Fma %3440 %float_2097152 %3442
       %3444 = OpExtInst %float %1 Sin %3443
       %3445 = OpFMul %float %3444 %2770
       %3446 = OpCompositeConstruct %v3float %548 %548 %3412
       %3447 = OpCompositeConstruct %v3float %548 %548 %3445
       %3448 = OpFAdd %v3float %3446 %3447
       %3449 = OpFSub %v3float %3379 %1690
       %3450 = OpExtInst %v3float %1 NMax %3449 %282
       %3451 = OpExtInst %v3float %1 NMin %3450 %131
       %3452 = OpCompositeExtract %float %3451 0
       %3453 = OpCompositeExtract %float %3451 1
       %3454 = OpCompositeConstruct %v2float %3452 %3453
       %3455 = OpFMul %v2float %1698 %3454
       %3456 = OpFMul %v2float %3454 %1699
       %3457 = OpCompositeExtract %float %3455 0
       %3458 = OpCompositeExtract %float %3456 0
       %3459 = OpCompositeExtract %float %3455 1
       %3460 = OpCompositeExtract %float %3456 1
       %3461 = OpFAdd %float %3457 %3459
       %3462 = OpFAdd %float %3458 %3460
       %3463 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_3
       %3464 = OpLoad %float %3463
       %3465 = OpFMul %float %3461 %3464
       %3466 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_0
       %3467 = OpLoad %float %3466
       %3468 = OpFMul %float %3467 %1997
       %3469 = OpExtInst %float %1 Fma %3462 %3464 %3468
       %3470 = OpExtInst %float %1 Floor %3465
       %3471 = OpFNegate %float %3470
       %3472 = OpExtInst %float %1 Fma %3461 %3464 %3471
       %3473 = OpExtInst %float %1 Fma %3472 %float_2097152 %3469
       %3474 = OpExtInst %float %1 Floor %3473
       %3475 = OpFMul %float %3470 %float_n6_28318548
       %3476 = OpExtInst %float %1 Fma %3465 %float_6_28318548 %3475
       %3477 = OpFMul %float %3474 %float_n6_28318548
       %3478 = OpExtInst %float %1 Fma %3469 %float_6_28318548 %3477
       %3479 = OpExtInst %float %1 Fma %3476 %float_2097152 %3478
       %3480 = OpExtInst %float %1 Sin %3479
       %3481 = OpFMul %float %3480 %2807
       %3482 = OpCompositeConstruct %v3float %548 %548 %3481
       %3483 = OpFAdd %v3float %3448 %3482
       %3484 = OpFSub %v3float %3379 %2563
       %3485 = OpExtInst %v3float %1 NMax %3484 %282
       %3486 = OpExtInst %v3float %1 NMin %3485 %131
       %3487 = OpCompositeExtract %float %3486 0
       %3488 = OpCompositeExtract %float %3486 1
       %3489 = OpCompositeConstruct %v2float %3487 %3488
       %3490 = OpFMul %v2float %1698 %3489
       %3491 = OpFMul %v2float %3489 %1699
       %3492 = OpCompositeExtract %float %3490 0
       %3493 = OpCompositeExtract %float %3491 0
       %3494 = OpCompositeExtract %float %3490 1
       %3495 = OpCompositeExtract %float %3491 1
       %3496 = OpFAdd %float %3492 %3494
       %3497 = OpFAdd %float %3493 %3495
       %3498 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_2
       %3499 = OpLoad %float %3498
       %3500 = OpFMul %float %3496 %3499
       %3501 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_3
       %3502 = OpLoad %float %3501
       %3503 = OpFMul %float %3502 %1997
       %3504 = OpExtInst %float %1 Fma %3497 %3499 %3503
       %3505 = OpExtInst %float %1 Floor %3500
       %3506 = OpFNegate %float %3505
       %3507 = OpExtInst %float %1 Fma %3496 %3499 %3506
       %3508 = OpExtInst %float %1 Fma %3507 %float_2097152 %3504
       %3509 = OpExtInst %float %1 Floor %3508
       %3510 = OpFMul %float %3505 %float_n6_28318548
       %3511 = OpExtInst %float %1 Fma %3500 %float_6_28318548 %3510
       %3512 = OpFMul %float %3509 %float_n6_28318548
       %3513 = OpExtInst %float %1 Fma %3504 %float_6_28318548 %3512
       %3514 = OpExtInst %float %1 Fma %3511 %float_2097152 %3513
       %3515 = OpExtInst %float %1 Sin %3514
       %3516 = OpFMul %float %3515 %2843
       %3517 = OpCompositeConstruct %v3float %548 %548 %3516
       %3518 = OpFAdd %v3float %3483 %3517
       %3519 = OpFAdd %v3float %3351 %3518
       %3520 = OpFAdd %v3float %3016 %3519
       %3521 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_0
       %3522 = OpLoad %float %3521
       %3523 = OpCompositeConstruct %v3float %3522 %3522 %3522
       %3524 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_1
       %3525 = OpLoad %float %3524
       %3526 = OpFSub %float %3525 %float_n1
       %3527 = OpExtInst %float %1 FAbs %3526
       %3528 = OpFOrdGreaterThan %bool %3527 %float_9_99999975en06
       %3529 = OpFOrdGreaterThanEqual %bool %3525 %float_n1
       %3530 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_2
       %3531 = OpLoad %float %3530
       %3532 = OpSelect %float %3529 %3525 %3531
       %3533 = OpSelect %float %3528 %3532 %3525
       %3534 = OpFSub %float %3533 %float_1
       %3535 = OpExtInst %float %1 FAbs %3534
       %3536 = OpFOrdGreaterThan %bool %3535 %float_9_99999975en06
       %3537 = OpFOrdGreaterThanEqual %bool %3533 %float_1
       %3538 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_3
       %3539 = OpLoad %float %3538
       %3540 = OpSelect %float %3537 %3539 %3525
       %3541 = OpSelect %float %3536 %3540 %3525
       %3542 = OpExtInst %float %1 FAbs %3541
       %3543 = OpFOrdGreaterThan %bool %3542 %float_9_99999975en06
       %3544 = OpFOrdGreaterThanEqual %bool %3541 %float_0
       %3545 = OpSelect %float %3544 %float_1 %float_n1
       %3546 = OpSelect %float %3543 %3545 %float_1
       %3547 = OpExtInst %float %1 NMax %3546 %float_n1
       %3548 = OpExtInst %float %1 NMin %3547 %float_1
       %3549 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_61 %int_0
       %3550 = OpLoad %float %3549
       %3551 = OpCompositeConstruct %v3float %3548 %3550 %float_0
       %3552 = OpFAdd %v3float %3551 %1690
       %3553 = OpExtInst %v3float %1 NMax %3552 %282
       %3554 = OpExtInst %v3float %1 NMin %3553 %131
       %3555 = OpCompositeExtract %float %3554 0
       %3556 = OpCompositeExtract %float %3554 1
       %3557 = OpCompositeConstruct %v2float %3555 %3556
       %3558 = OpFMul %v2float %1698 %3557
       %3559 = OpFMul %v2float %3557 %1699
       %3560 = OpCompositeExtract %float %3558 0
       %3561 = OpCompositeExtract %float %3559 0
       %3562 = OpCompositeExtract %float %3558 1
       %3563 = OpCompositeExtract %float %3559 1
       %3564 = OpFAdd %float %3560 %3562
       %3565 = OpFAdd %float %3561 %3563
       %3566 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_1
       %3567 = OpLoad %float %3566
       %3568 = OpFMul %float %3567 %1727
       %3569 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_2
       %3570 = OpLoad %float %3569
       %3571 = OpFMul %float %3570 %3568
       %3572 = OpFDiv %float %float_2 %3571
       %3573 = OpFMul %float %3564 %3572
       %3574 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_3
       %3575 = OpLoad %float %3574
       %3576 = OpFMul %float %3572 %3575
       %3577 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_63 %int_0
       %3578 = OpLoad %float %3577
       %3579 = OpCompositeConstruct %v3float %3578 %3578 %3578
       %3580 = OpFMul %v3float %593 %3579
       %3581 = OpFMul %v3float %3579 %644
       %3582 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_63 %int_1
       %3583 = OpLoad %float %3582
       %3584 = OpCompositeConstruct %v3float %3583 %3583 %3583
       %3585 = OpFMul %v3float %3580 %3584
       %3586 = OpFMul %v3float %3581 %3584
       %3587 = OpFDiv %float %float_1 %1727
       %3588 = OpCompositeConstruct %v3float %3587 %3587 %3587
       %3589 = OpFMul %v3float %3586 %3588
       %3590 = OpCompositeExtract %float %3589 0
       %3591 = OpCompositeExtract %float %3589 1
       %3592 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_63 %int_3
       %3593 = OpLoad %float %3592
       %3594 = OpFMul %float %1163 %3593
       %3595 = OpCompositeExtract %float %3589 2
       %3596 = OpCompositeConstruct %v2float %3594 %3594
       %3597 = OpCompositeConstruct %v2float %3595 %3595
       %3598 = OpFAdd %v2float %3596 %3597
       %3599 = OpCompositeExtract %float %3598 0
       %3600 = OpCompositeConstruct %v3float %3590 %3591 %3599
       %3601 = OpVectorTimesScalar %v3float %3600 %float_4_76837158en07
       %3602 = OpFAdd %v3float %3601 %141
       %3603 = OpExtInst %v3float %1 Fma %3585 %3588 %3602
       %3604 = OpExtInst %v3float %1 Floor %3603
       %3605 = OpFNegate %v3float %3604
       %3606 = OpExtInst %v3float %1 Fma %3585 %3588 %3605
       %3607 = OpVectorTimesScalar %v3float %3606 %float_2097152
       %3608 = OpFAdd %v3float %3607 %3600
       %3609 = OpVectorTimesScalar %v3float %3608 %float_1
               OpBranch %3610
       %3610 = OpLabel
       %3611 = OpPhi %v3float %3609 %2315 %3612 %3613
       %3614 = OpPhi %float %float_1 %2315 %3615 %3613
       %3616 = OpPhi %float %float_0 %2315 %3617 %3613
       %3618 = OpPhi %uint %uint_0 %2315 %3619 %3613
       %3620 = OpULessThan %bool %3618 %uint_6
               OpLoopMerge %3621 %3613 DontUnroll
               OpBranchConditional %3620 %3613 %3621
       %3613 = OpLabel
       %3622 = OpExtInst %v3float %1 Fract %3611
       %3623 = OpExtInst %v3float %1 Floor %3611
       %3624 = OpDot %float %3623 %387
       %3625 = OpFAdd %float %3624 %float_19
       %3626 = OpFAdd %float %3624 %float_47
       %3627 = OpFAdd %float %3624 %float_66
       %3628 = OpFAdd %float %3624 %float_101
       %3629 = OpFAdd %float %3624 %float_120
       %3630 = OpFAdd %float %3624 %float_148
       %3631 = OpFAdd %float %3624 %float_167
       %3632 = OpConvertFToS %int %3624
       %3633 = OpCompositeConstruct %v3int %3632 %int_0 %int_0
       %3634 = OpBitcast %v3uint %3633
       %3635 = OpIMul %v3uint %3634 %403
       %3636 = OpIAdd %v3uint %3635 %405
       %3637 = OpCompositeExtract %uint %3636 1
       %3638 = OpCompositeExtract %uint %3636 2
       %3639 = OpIMul %uint %3637 %3638
       %3640 = OpCompositeExtract %uint %3636 0
       %3641 = OpIAdd %uint %3640 %3639
       %3642 = OpIMul %uint %3638 %3641
       %3643 = OpIAdd %uint %3637 %3642
       %3644 = OpIMul %uint %3641 %3643
       %3645 = OpIAdd %uint %3638 %3644
       %3646 = OpIMul %uint %3643 %3645
       %3647 = OpIAdd %uint %3641 %3646
       %3648 = OpCompositeInsert %v3uint %3647 %549 0
       %3649 = OpBitwiseAnd %v3uint %406 %407
       %3650 = OpShiftRightLogical %v3uint %3648 %3649
       %3651 = OpCompositeExtract %uint %3650 0
       %3652 = OpCompositeConstruct %v3uint %3651 %3651 %3651
       %3653 = OpBitwiseAnd %v3uint %3652 %388
       %3654 = OpConvertUToF %v3float %3653
       %3655 = OpExtInst %v3float %1 Fma %3654 %392 %282
       %3656 = OpDot %float %3655 %3622
       %3657 = OpConvertFToS %int %3625
       %3658 = OpFSub %v3float %3622 %351
       %3659 = OpCompositeConstruct %v3int %3657 %int_0 %int_0
       %3660 = OpBitcast %v3uint %3659
       %3661 = OpIMul %v3uint %3660 %403
       %3662 = OpIAdd %v3uint %3661 %405
       %3663 = OpCompositeExtract %uint %3662 1
       %3664 = OpCompositeExtract %uint %3662 2
       %3665 = OpIMul %uint %3663 %3664
       %3666 = OpCompositeExtract %uint %3662 0
       %3667 = OpIAdd %uint %3666 %3665
       %3668 = OpIMul %uint %3664 %3667
       %3669 = OpIAdd %uint %3663 %3668
       %3670 = OpIMul %uint %3667 %3669
       %3671 = OpIAdd %uint %3664 %3670
       %3672 = OpIMul %uint %3669 %3671
       %3673 = OpIAdd %uint %3667 %3672
       %3674 = OpCompositeInsert %v3uint %3673 %549 0
       %3675 = OpShiftRightLogical %v3uint %3674 %3649
       %3676 = OpCompositeExtract %uint %3675 0
       %3677 = OpCompositeConstruct %v3uint %3676 %3676 %3676
       %3678 = OpBitwiseAnd %v3uint %3677 %388
       %3679 = OpConvertUToF %v3float %3678
       %3680 = OpExtInst %v3float %1 Fma %3679 %392 %282
       %3681 = OpDot %float %3680 %3658
       %3682 = OpConvertFToS %int %3626
       %3683 = OpFSub %v3float %3622 %352
       %3684 = OpCompositeConstruct %v3int %3682 %int_0 %int_0
       %3685 = OpBitcast %v3uint %3684
       %3686 = OpIMul %v3uint %3685 %403
       %3687 = OpIAdd %v3uint %3686 %405
       %3688 = OpCompositeExtract %uint %3687 1
       %3689 = OpCompositeExtract %uint %3687 2
       %3690 = OpIMul %uint %3688 %3689
       %3691 = OpCompositeExtract %uint %3687 0
       %3692 = OpIAdd %uint %3691 %3690
       %3693 = OpIMul %uint %3689 %3692
       %3694 = OpIAdd %uint %3688 %3693
       %3695 = OpIMul %uint %3692 %3694
       %3696 = OpIAdd %uint %3689 %3695
       %3697 = OpIMul %uint %3694 %3696
       %3698 = OpIAdd %uint %3692 %3697
       %3699 = OpCompositeInsert %v3uint %3698 %549 0
       %3700 = OpShiftRightLogical %v3uint %3699 %3649
       %3701 = OpCompositeExtract %uint %3700 0
       %3702 = OpCompositeConstruct %v3uint %3701 %3701 %3701
       %3703 = OpBitwiseAnd %v3uint %3702 %388
       %3704 = OpConvertUToF %v3float %3703
       %3705 = OpExtInst %v3float %1 Fma %3704 %392 %282
       %3706 = OpDot %float %3705 %3683
       %3707 = OpConvertFToS %int %3627
       %3708 = OpFSub %v3float %3622 %138
       %3709 = OpCompositeConstruct %v3int %3707 %int_0 %int_0
       %3710 = OpBitcast %v3uint %3709
       %3711 = OpIMul %v3uint %3710 %403
       %3712 = OpIAdd %v3uint %3711 %405
       %3713 = OpCompositeExtract %uint %3712 1
       %3714 = OpCompositeExtract %uint %3712 2
       %3715 = OpIMul %uint %3713 %3714
       %3716 = OpCompositeExtract %uint %3712 0
       %3717 = OpIAdd %uint %3716 %3715
       %3718 = OpIMul %uint %3714 %3717
       %3719 = OpIAdd %uint %3713 %3718
       %3720 = OpIMul %uint %3717 %3719
       %3721 = OpIAdd %uint %3714 %3720
       %3722 = OpIMul %uint %3719 %3721
       %3723 = OpIAdd %uint %3717 %3722
       %3724 = OpCompositeInsert %v3uint %3723 %549 0
       %3725 = OpShiftRightLogical %v3uint %3724 %3649
       %3726 = OpCompositeExtract %uint %3725 0
       %3727 = OpCompositeConstruct %v3uint %3726 %3726 %3726
       %3728 = OpBitwiseAnd %v3uint %3727 %388
       %3729 = OpConvertUToF %v3float %3728
       %3730 = OpExtInst %v3float %1 Fma %3729 %392 %282
       %3731 = OpDot %float %3730 %3708
       %3732 = OpConvertFToS %int %3628
       %3733 = OpFSub %v3float %3622 %294
       %3734 = OpCompositeConstruct %v3int %3732 %int_0 %int_0
       %3735 = OpBitcast %v3uint %3734
       %3736 = OpIMul %v3uint %3735 %403
       %3737 = OpIAdd %v3uint %3736 %405
       %3738 = OpCompositeExtract %uint %3737 1
       %3739 = OpCompositeExtract %uint %3737 2
       %3740 = OpIMul %uint %3738 %3739
       %3741 = OpCompositeExtract %uint %3737 0
       %3742 = OpIAdd %uint %3741 %3740
       %3743 = OpIMul %uint %3739 %3742
       %3744 = OpIAdd %uint %3738 %3743
       %3745 = OpIMul %uint %3742 %3744
       %3746 = OpIAdd %uint %3739 %3745
       %3747 = OpIMul %uint %3744 %3746
       %3748 = OpIAdd %uint %3742 %3747
       %3749 = OpCompositeInsert %v3uint %3748 %549 0
       %3750 = OpShiftRightLogical %v3uint %3749 %3649
       %3751 = OpCompositeExtract %uint %3750 0
       %3752 = OpCompositeConstruct %v3uint %3751 %3751 %3751
       %3753 = OpBitwiseAnd %v3uint %3752 %388
       %3754 = OpConvertUToF %v3float %3753
       %3755 = OpExtInst %v3float %1 Fma %3754 %392 %282
       %3756 = OpDot %float %3755 %3733
       %3757 = OpConvertFToS %int %3629
       %3758 = OpFSub %v3float %3622 %143
       %3759 = OpCompositeConstruct %v3int %3757 %int_0 %int_0
       %3760 = OpBitcast %v3uint %3759
       %3761 = OpIMul %v3uint %3760 %403
       %3762 = OpIAdd %v3uint %3761 %405
       %3763 = OpCompositeExtract %uint %3762 1
       %3764 = OpCompositeExtract %uint %3762 2
       %3765 = OpIMul %uint %3763 %3764
       %3766 = OpCompositeExtract %uint %3762 0
       %3767 = OpIAdd %uint %3766 %3765
       %3768 = OpIMul %uint %3764 %3767
       %3769 = OpIAdd %uint %3763 %3768
       %3770 = OpIMul %uint %3767 %3769
       %3771 = OpIAdd %uint %3764 %3770
       %3772 = OpIMul %uint %3769 %3771
       %3773 = OpIAdd %uint %3767 %3772
       %3774 = OpCompositeInsert %v3uint %3773 %549 0
       %3775 = OpShiftRightLogical %v3uint %3774 %3649
       %3776 = OpCompositeExtract %uint %3775 0
       %3777 = OpCompositeConstruct %v3uint %3776 %3776 %3776
       %3778 = OpBitwiseAnd %v3uint %3777 %388
       %3779 = OpConvertUToF %v3float %3778
       %3780 = OpExtInst %v3float %1 Fma %3779 %392 %282
       %3781 = OpDot %float %3780 %3758
       %3782 = OpConvertFToS %int %3630
       %3783 = OpFSub %v3float %3622 %139
       %3784 = OpCompositeConstruct %v3int %3782 %int_0 %int_0
       %3785 = OpBitcast %v3uint %3784
       %3786 = OpIMul %v3uint %3785 %403
       %3787 = OpIAdd %v3uint %3786 %405
       %3788 = OpCompositeExtract %uint %3787 1
       %3789 = OpCompositeExtract %uint %3787 2
       %3790 = OpIMul %uint %3788 %3789
       %3791 = OpCompositeExtract %uint %3787 0
       %3792 = OpIAdd %uint %3791 %3790
       %3793 = OpIMul %uint %3789 %3792
       %3794 = OpIAdd %uint %3788 %3793
       %3795 = OpIMul %uint %3792 %3794
       %3796 = OpIAdd %uint %3789 %3795
       %3797 = OpIMul %uint %3794 %3796
       %3798 = OpIAdd %uint %3792 %3797
       %3799 = OpCompositeInsert %v3uint %3798 %549 0
       %3800 = OpShiftRightLogical %v3uint %3799 %3649
       %3801 = OpCompositeExtract %uint %3800 0
       %3802 = OpCompositeConstruct %v3uint %3801 %3801 %3801
       %3803 = OpBitwiseAnd %v3uint %3802 %388
       %3804 = OpConvertUToF %v3float %3803
       %3805 = OpExtInst %v3float %1 Fma %3804 %392 %282
       %3806 = OpDot %float %3805 %3783
       %3807 = OpConvertFToS %int %3631
       %3808 = OpFSub %v3float %3622 %131
       %3809 = OpCompositeConstruct %v3int %3807 %int_0 %int_0
       %3810 = OpBitcast %v3uint %3809
       %3811 = OpIMul %v3uint %3810 %403
       %3812 = OpIAdd %v3uint %3811 %405
       %3813 = OpCompositeExtract %uint %3812 1
       %3814 = OpCompositeExtract %uint %3812 2
       %3815 = OpIMul %uint %3813 %3814
       %3816 = OpCompositeExtract %uint %3812 0
       %3817 = OpIAdd %uint %3816 %3815
       %3818 = OpIMul %uint %3814 %3817
       %3819 = OpIAdd %uint %3813 %3818
       %3820 = OpIMul %uint %3817 %3819
       %3821 = OpIAdd %uint %3814 %3820
       %3822 = OpIMul %uint %3819 %3821
       %3823 = OpIAdd %uint %3817 %3822
       %3824 = OpCompositeInsert %v3uint %3823 %549 0
       %3825 = OpShiftRightLogical %v3uint %3824 %3649
       %3826 = OpCompositeExtract %uint %3825 0
       %3827 = OpCompositeConstruct %v3uint %3826 %3826 %3826
       %3828 = OpBitwiseAnd %v3uint %3827 %388
       %3829 = OpConvertUToF %v3float %3828
       %3830 = OpExtInst %v3float %1 Fma %3829 %392 %282
       %3831 = OpDot %float %3830 %3808
       %3832 = OpCompositeExtract %float %3622 0
       %3833 = OpCompositeExtract %float %3622 1
       %3834 = OpCompositeExtract %float %3622 2
       %3835 = OpCompositeConstruct %v4float %3832 %3833 %3834 %float_0
       %3836 = OpFMul %v4float %3835 %3835
       %3837 = OpFMul %v4float %3836 %3835
       %3838 = OpVectorTimesScalar %v4float %3835 %float_6
       %3839 = OpFSub %v4float %3838 %383
       %3840 = OpExtInst %v4float %1 Fma %3835 %3839 %384
       %3841 = OpFMul %v4float %3837 %3840
       %3842 = OpCompositeExtract %float %3841 0
       %3843 = OpExtInst %float %1 FMix %3656 %3681 %3842
       %3844 = OpExtInst %float %1 FMix %3706 %3731 %3842
       %3845 = OpCompositeExtract %float %3841 1
       %3846 = OpExtInst %float %1 FMix %3843 %3844 %3845
       %3847 = OpExtInst %float %1 FMix %3756 %3781 %3842
       %3848 = OpExtInst %float %1 FMix %3806 %3831 %3842
       %3849 = OpExtInst %float %1 FMix %3847 %3848 %3845
       %3850 = OpCompositeExtract %float %3841 2
       %3851 = OpExtInst %float %1 FMix %3846 %3849 %3850
       %3617 = OpExtInst %float %1 Fma %3851 %3614 %3616
       %3612 = OpVectorTimesScalar %v3float %3611 %float_2
       %3615 = OpFMul %float %3614 %float_0_5
       %3619 = OpIAdd %uint %3618 %uint_1
               OpBranch %3610
       %3621 = OpLabel
       %3852 = OpExtInst %float %1 Fma %3616 %float_0_5 %float_0_5
       %3853 = OpExtInst %float %1 FMix %float_0 %float_1 %3852
       %3854 = OpExtInst %float %1 FClamp %3853 %float_0 %float_1
       %3855 = OpExtInst %float %1 FMix %1163 %1716 %3854
       %3856 = OpFMul %float %3576 %3855
       %3857 = OpExtInst %float %1 Fma %3565 %3572 %3856
       %3858 = OpExtInst %float %1 Floor %3573
       %3859 = OpFNegate %float %3858
       %3860 = OpExtInst %float %1 Fma %3564 %3572 %3859
       %3861 = OpExtInst %float %1 Fma %3860 %float_2097152 %3857
       %3862 = OpExtInst %float %1 Floor %3861
       %3863 = OpFMul %float %3858 %float_n6_28318548
       %3864 = OpExtInst %float %1 Fma %3573 %float_6_28318548 %3863
       %3865 = OpFMul %float %3862 %float_n6_28318548
       %3866 = OpExtInst %float %1 Fma %3857 %float_6_28318548 %3865
       %3867 = OpExtInst %float %1 Fma %3864 %float_2097152 %3866
       %3868 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_0
       %3869 = OpLoad %float %3868
       %3870 = OpFMul %float %3869 %1727
       %3871 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_1
       %3872 = OpLoad %float %3871
       %3873 = OpFMul %float %3872 %1727
       %3874 = OpFNegate %float %3873
       %3875 = OpExtInst %float %1 Fma %3869 %1727 %3874
       %3876 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_2
       %3877 = OpLoad %float %3876
       %3878 = OpCompositeConstruct %v3float %3877 %3877 %3877
       %3879 = OpFMul %v3float %593 %3878
       %3880 = OpFMul %v3float %3878 %644
       %3881 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_3
       %3882 = OpLoad %float %3881
       %3883 = OpCompositeConstruct %v3float %3882 %3882 %3882
       %3884 = OpFMul %v3float %3879 %3883
       %3885 = OpFMul %v3float %3880 %3883
       %3886 = OpFMul %v3float %3885 %3588
       %3887 = OpCompositeExtract %float %3886 0
       %3888 = OpCompositeExtract %float %3886 1
       %3889 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_65 %int_1
       %3890 = OpLoad %float %3889
       %3891 = OpFMul %float %1163 %3890
       %3892 = OpCompositeExtract %float %3886 2
       %3893 = OpCompositeConstruct %v2float %3891 %3891
       %3894 = OpCompositeConstruct %v2float %3892 %3892
       %3895 = OpFAdd %v2float %3893 %3894
       %3896 = OpCompositeExtract %float %3895 0
       %3897 = OpCompositeConstruct %v3float %3887 %3888 %3896
       %3898 = OpVectorTimesScalar %v3float %3897 %float_4_76837158en07
       %3899 = OpFAdd %v3float %3898 %141
       %3900 = OpExtInst %v3float %1 Fma %3884 %3588 %3899
       %3901 = OpExtInst %v3float %1 Floor %3900
       %3902 = OpFNegate %v3float %3901
       %3903 = OpExtInst %v3float %1 Fma %3884 %3588 %3902
       %3904 = OpVectorTimesScalar %v3float %3903 %float_2097152
       %3905 = OpFAdd %v3float %3904 %3897
       %3906 = OpVectorTimesScalar %v3float %3905 %float_1
               OpBranch %3907
       %3907 = OpLabel
       %3908 = OpPhi %v3float %3906 %3621 %3909 %3910
       %3911 = OpPhi %float %float_1 %3621 %3912 %3910
       %3913 = OpPhi %float %float_0 %3621 %3914 %3910
       %3915 = OpPhi %uint %uint_0 %3621 %3916 %3910
       %3917 = OpULessThan %bool %3915 %uint_10
               OpLoopMerge %3918 %3910 DontUnroll
               OpBranchConditional %3917 %3910 %3918
       %3910 = OpLabel
       %3919 = OpExtInst %v3float %1 Fract %3908
       %3920 = OpExtInst %v3float %1 Floor %3908
       %3921 = OpDot %float %3920 %387
       %3922 = OpFAdd %float %3921 %float_19
       %3923 = OpFAdd %float %3921 %float_47
       %3924 = OpFAdd %float %3921 %float_66
       %3925 = OpFAdd %float %3921 %float_101
       %3926 = OpFAdd %float %3921 %float_120
       %3927 = OpFAdd %float %3921 %float_148
       %3928 = OpFAdd %float %3921 %float_167
       %3929 = OpConvertFToS %int %3921
       %3930 = OpCompositeConstruct %v3int %3929 %int_0 %int_0
       %3931 = OpBitcast %v3uint %3930
       %3932 = OpIMul %v3uint %3931 %403
       %3933 = OpIAdd %v3uint %3932 %405
       %3934 = OpCompositeExtract %uint %3933 1
       %3935 = OpCompositeExtract %uint %3933 2
       %3936 = OpIMul %uint %3934 %3935
       %3937 = OpCompositeExtract %uint %3933 0
       %3938 = OpIAdd %uint %3937 %3936
       %3939 = OpIMul %uint %3935 %3938
       %3940 = OpIAdd %uint %3934 %3939
       %3941 = OpIMul %uint %3938 %3940
       %3942 = OpIAdd %uint %3935 %3941
       %3943 = OpIMul %uint %3940 %3942
       %3944 = OpIAdd %uint %3938 %3943
       %3945 = OpCompositeInsert %v3uint %3944 %549 0
       %3946 = OpBitwiseAnd %v3uint %406 %407
       %3947 = OpShiftRightLogical %v3uint %3945 %3946
       %3948 = OpCompositeExtract %uint %3947 0
       %3949 = OpCompositeConstruct %v3uint %3948 %3948 %3948
       %3950 = OpBitwiseAnd %v3uint %3949 %388
       %3951 = OpConvertUToF %v3float %3950
       %3952 = OpExtInst %v3float %1 Fma %3951 %392 %282
       %3953 = OpDot %float %3952 %3919
       %3954 = OpConvertFToS %int %3922
       %3955 = OpFSub %v3float %3919 %351
       %3956 = OpCompositeConstruct %v3int %3954 %int_0 %int_0
       %3957 = OpBitcast %v3uint %3956
       %3958 = OpIMul %v3uint %3957 %403
       %3959 = OpIAdd %v3uint %3958 %405
       %3960 = OpCompositeExtract %uint %3959 1
       %3961 = OpCompositeExtract %uint %3959 2
       %3962 = OpIMul %uint %3960 %3961
       %3963 = OpCompositeExtract %uint %3959 0
       %3964 = OpIAdd %uint %3963 %3962
       %3965 = OpIMul %uint %3961 %3964
       %3966 = OpIAdd %uint %3960 %3965
       %3967 = OpIMul %uint %3964 %3966
       %3968 = OpIAdd %uint %3961 %3967
       %3969 = OpIMul %uint %3966 %3968
       %3970 = OpIAdd %uint %3964 %3969
       %3971 = OpCompositeInsert %v3uint %3970 %549 0
       %3972 = OpShiftRightLogical %v3uint %3971 %3946
       %3973 = OpCompositeExtract %uint %3972 0
       %3974 = OpCompositeConstruct %v3uint %3973 %3973 %3973
       %3975 = OpBitwiseAnd %v3uint %3974 %388
       %3976 = OpConvertUToF %v3float %3975
       %3977 = OpExtInst %v3float %1 Fma %3976 %392 %282
       %3978 = OpDot %float %3977 %3955
       %3979 = OpConvertFToS %int %3923
       %3980 = OpFSub %v3float %3919 %352
       %3981 = OpCompositeConstruct %v3int %3979 %int_0 %int_0
       %3982 = OpBitcast %v3uint %3981
       %3983 = OpIMul %v3uint %3982 %403
       %3984 = OpIAdd %v3uint %3983 %405
       %3985 = OpCompositeExtract %uint %3984 1
       %3986 = OpCompositeExtract %uint %3984 2
       %3987 = OpIMul %uint %3985 %3986
       %3988 = OpCompositeExtract %uint %3984 0
       %3989 = OpIAdd %uint %3988 %3987
       %3990 = OpIMul %uint %3986 %3989
       %3991 = OpIAdd %uint %3985 %3990
       %3992 = OpIMul %uint %3989 %3991
       %3993 = OpIAdd %uint %3986 %3992
       %3994 = OpIMul %uint %3991 %3993
       %3995 = OpIAdd %uint %3989 %3994
       %3996 = OpCompositeInsert %v3uint %3995 %549 0
       %3997 = OpShiftRightLogical %v3uint %3996 %3946
       %3998 = OpCompositeExtract %uint %3997 0
       %3999 = OpCompositeConstruct %v3uint %3998 %3998 %3998
       %4000 = OpBitwiseAnd %v3uint %3999 %388
       %4001 = OpConvertUToF %v3float %4000
       %4002 = OpExtInst %v3float %1 Fma %4001 %392 %282
       %4003 = OpDot %float %4002 %3980
       %4004 = OpConvertFToS %int %3924
       %4005 = OpFSub %v3float %3919 %138
       %4006 = OpCompositeConstruct %v3int %4004 %int_0 %int_0
       %4007 = OpBitcast %v3uint %4006
       %4008 = OpIMul %v3uint %4007 %403
       %4009 = OpIAdd %v3uint %4008 %405
       %4010 = OpCompositeExtract %uint %4009 1
       %4011 = OpCompositeExtract %uint %4009 2
       %4012 = OpIMul %uint %4010 %4011
       %4013 = OpCompositeExtract %uint %4009 0
       %4014 = OpIAdd %uint %4013 %4012
       %4015 = OpIMul %uint %4011 %4014
       %4016 = OpIAdd %uint %4010 %4015
       %4017 = OpIMul %uint %4014 %4016
       %4018 = OpIAdd %uint %4011 %4017
       %4019 = OpIMul %uint %4016 %4018
       %4020 = OpIAdd %uint %4014 %4019
       %4021 = OpCompositeInsert %v3uint %4020 %549 0
       %4022 = OpShiftRightLogical %v3uint %4021 %3946
       %4023 = OpCompositeExtract %uint %4022 0
       %4024 = OpCompositeConstruct %v3uint %4023 %4023 %4023
       %4025 = OpBitwiseAnd %v3uint %4024 %388
       %4026 = OpConvertUToF %v3float %4025
       %4027 = OpExtInst %v3float %1 Fma %4026 %392 %282
       %4028 = OpDot %float %4027 %4005
       %4029 = OpConvertFToS %int %3925
       %4030 = OpFSub %v3float %3919 %294
       %4031 = OpCompositeConstruct %v3int %4029 %int_0 %int_0
       %4032 = OpBitcast %v3uint %4031
       %4033 = OpIMul %v3uint %4032 %403
       %4034 = OpIAdd %v3uint %4033 %405
       %4035 = OpCompositeExtract %uint %4034 1
       %4036 = OpCompositeExtract %uint %4034 2
       %4037 = OpIMul %uint %4035 %4036
       %4038 = OpCompositeExtract %uint %4034 0
       %4039 = OpIAdd %uint %4038 %4037
       %4040 = OpIMul %uint %4036 %4039
       %4041 = OpIAdd %uint %4035 %4040
       %4042 = OpIMul %uint %4039 %4041
       %4043 = OpIAdd %uint %4036 %4042
       %4044 = OpIMul %uint %4041 %4043
       %4045 = OpIAdd %uint %4039 %4044
       %4046 = OpCompositeInsert %v3uint %4045 %549 0
       %4047 = OpShiftRightLogical %v3uint %4046 %3946
       %4048 = OpCompositeExtract %uint %4047 0
       %4049 = OpCompositeConstruct %v3uint %4048 %4048 %4048
       %4050 = OpBitwiseAnd %v3uint %4049 %388
       %4051 = OpConvertUToF %v3float %4050
       %4052 = OpExtInst %v3float %1 Fma %4051 %392 %282
       %4053 = OpDot %float %4052 %4030
       %4054 = OpConvertFToS %int %3926
       %4055 = OpFSub %v3float %3919 %143
       %4056 = OpCompositeConstruct %v3int %4054 %int_0 %int_0
       %4057 = OpBitcast %v3uint %4056
       %4058 = OpIMul %v3uint %4057 %403
       %4059 = OpIAdd %v3uint %4058 %405
       %4060 = OpCompositeExtract %uint %4059 1
       %4061 = OpCompositeExtract %uint %4059 2
       %4062 = OpIMul %uint %4060 %4061
       %4063 = OpCompositeExtract %uint %4059 0
       %4064 = OpIAdd %uint %4063 %4062
       %4065 = OpIMul %uint %4061 %4064
       %4066 = OpIAdd %uint %4060 %4065
       %4067 = OpIMul %uint %4064 %4066
       %4068 = OpIAdd %uint %4061 %4067
       %4069 = OpIMul %uint %4066 %4068
       %4070 = OpIAdd %uint %4064 %4069
       %4071 = OpCompositeInsert %v3uint %4070 %549 0
       %4072 = OpShiftRightLogical %v3uint %4071 %3946
       %4073 = OpCompositeExtract %uint %4072 0
       %4074 = OpCompositeConstruct %v3uint %4073 %4073 %4073
       %4075 = OpBitwiseAnd %v3uint %4074 %388
       %4076 = OpConvertUToF %v3float %4075
       %4077 = OpExtInst %v3float %1 Fma %4076 %392 %282
       %4078 = OpDot %float %4077 %4055
       %4079 = OpConvertFToS %int %3927
       %4080 = OpFSub %v3float %3919 %139
       %4081 = OpCompositeConstruct %v3int %4079 %int_0 %int_0
       %4082 = OpBitcast %v3uint %4081
       %4083 = OpIMul %v3uint %4082 %403
       %4084 = OpIAdd %v3uint %4083 %405
       %4085 = OpCompositeExtract %uint %4084 1
       %4086 = OpCompositeExtract %uint %4084 2
       %4087 = OpIMul %uint %4085 %4086
       %4088 = OpCompositeExtract %uint %4084 0
       %4089 = OpIAdd %uint %4088 %4087
       %4090 = OpIMul %uint %4086 %4089
       %4091 = OpIAdd %uint %4085 %4090
       %4092 = OpIMul %uint %4089 %4091
       %4093 = OpIAdd %uint %4086 %4092
       %4094 = OpIMul %uint %4091 %4093
       %4095 = OpIAdd %uint %4089 %4094
       %4096 = OpCompositeInsert %v3uint %4095 %549 0
       %4097 = OpShiftRightLogical %v3uint %4096 %3946
       %4098 = OpCompositeExtract %uint %4097 0
       %4099 = OpCompositeConstruct %v3uint %4098 %4098 %4098
       %4100 = OpBitwiseAnd %v3uint %4099 %388
       %4101 = OpConvertUToF %v3float %4100
       %4102 = OpExtInst %v3float %1 Fma %4101 %392 %282
       %4103 = OpDot %float %4102 %4080
       %4104 = OpConvertFToS %int %3928
       %4105 = OpFSub %v3float %3919 %131
       %4106 = OpCompositeConstruct %v3int %4104 %int_0 %int_0
       %4107 = OpBitcast %v3uint %4106
       %4108 = OpIMul %v3uint %4107 %403
       %4109 = OpIAdd %v3uint %4108 %405
       %4110 = OpCompositeExtract %uint %4109 1
       %4111 = OpCompositeExtract %uint %4109 2
       %4112 = OpIMul %uint %4110 %4111
       %4113 = OpCompositeExtract %uint %4109 0
       %4114 = OpIAdd %uint %4113 %4112
       %4115 = OpIMul %uint %4111 %4114
       %4116 = OpIAdd %uint %4110 %4115
       %4117 = OpIMul %uint %4114 %4116
       %4118 = OpIAdd %uint %4111 %4117
       %4119 = OpIMul %uint %4116 %4118
       %4120 = OpIAdd %uint %4114 %4119
       %4121 = OpCompositeInsert %v3uint %4120 %549 0
       %4122 = OpShiftRightLogical %v3uint %4121 %3946
       %4123 = OpCompositeExtract %uint %4122 0
       %4124 = OpCompositeConstruct %v3uint %4123 %4123 %4123
       %4125 = OpBitwiseAnd %v3uint %4124 %388
       %4126 = OpConvertUToF %v3float %4125
       %4127 = OpExtInst %v3float %1 Fma %4126 %392 %282
       %4128 = OpDot %float %4127 %4105
       %4129 = OpCompositeExtract %float %3919 0
       %4130 = OpCompositeExtract %float %3919 1
       %4131 = OpCompositeExtract %float %3919 2
       %4132 = OpCompositeConstruct %v4float %4129 %4130 %4131 %float_0
       %4133 = OpFMul %v4float %4132 %4132
       %4134 = OpFMul %v4float %4133 %4132
       %4135 = OpVectorTimesScalar %v4float %4132 %float_6
       %4136 = OpFSub %v4float %4135 %383
       %4137 = OpExtInst %v4float %1 Fma %4132 %4136 %384
       %4138 = OpFMul %v4float %4134 %4137
       %4139 = OpCompositeExtract %float %4138 0
       %4140 = OpExtInst %float %1 FMix %3953 %3978 %4139
       %4141 = OpExtInst %float %1 FMix %4003 %4028 %4139
       %4142 = OpCompositeExtract %float %4138 1
       %4143 = OpExtInst %float %1 FMix %4140 %4141 %4142
       %4144 = OpExtInst %float %1 FMix %4053 %4078 %4139
       %4145 = OpExtInst %float %1 FMix %4103 %4128 %4139
       %4146 = OpExtInst %float %1 FMix %4144 %4145 %4142
       %4147 = OpCompositeExtract %float %4138 2
       %4148 = OpExtInst %float %1 FMix %4143 %4146 %4147
       %4149 = OpExtInst %float %1 FAbs %4148
       %3914 = OpExtInst %float %1 Fma %4149 %3911 %3913
       %3909 = OpVectorTimesScalar %v3float %3908 %float_2
       %3912 = OpFMul %float %3911 %float_0_5
       %3916 = OpIAdd %uint %3915 %uint_1
               OpBranch %3907
       %3918 = OpLabel
       %4150 = OpExtInst %float %1 FMix %float_0 %float_1 %3913
       %4151 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_65 %int_2
       %4152 = OpLoad %float %4151
       %4153 = OpCompositeConstruct %v3float %4152 %4152 %4152
       %4154 = OpFMul %v3float %593 %4153
       %4155 = OpFMul %v3float %4153 %644
       %4156 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_65 %int_3
       %4157 = OpLoad %float %4156
       %4158 = OpCompositeConstruct %v3float %4157 %4157 %4157
       %4159 = OpFMul %v3float %4154 %4158
       %4160 = OpFMul %v3float %4155 %4158
       %4161 = OpFMul %v3float %4160 %3588
       %4162 = OpCompositeExtract %float %4161 0
       %4163 = OpCompositeExtract %float %4161 1
       %4164 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_66 %int_1
       %4165 = OpLoad %float %4164
       %4166 = OpFMul %float %1163 %4165
       %4167 = OpCompositeExtract %float %4161 2
       %4168 = OpCompositeConstruct %v2float %4166 %4166
       %4169 = OpCompositeConstruct %v2float %4167 %4167
       %4170 = OpFAdd %v2float %4168 %4169
       %4171 = OpCompositeExtract %float %4170 0
       %4172 = OpCompositeConstruct %v3float %4162 %4163 %4171
       %4173 = OpVectorTimesScalar %v3float %4172 %float_4_76837158en07
       %4174 = OpFAdd %v3float %4173 %141
       %4175 = OpExtInst %v3float %1 Fma %4159 %3588 %4174
       %4176 = OpExtInst %v3float %1 Floor %4175
       %4177 = OpFNegate %v3float %4176
       %4178 = OpExtInst %v3float %1 Fma %4159 %3588 %4177
       %4179 = OpVectorTimesScalar %v3float %4178 %float_2097152
       %4180 = OpFAdd %v3float %4179 %4172
       %4181 = OpVectorTimesScalar %v3float %4180 %float_1
               OpBranch %4182
       %4182 = OpLabel
       %4183 = OpPhi %v3float %4181 %3918 %4184 %4185
       %4186 = OpPhi %float %float_1 %3918 %4187 %4185
       %4188 = OpPhi %float %float_0 %3918 %4189 %4185
       %4190 = OpPhi %uint %uint_0 %3918 %4191 %4185
       %4192 = OpULessThan %bool %4190 %uint_10
               OpLoopMerge %4193 %4185 DontUnroll
               OpBranchConditional %4192 %4185 %4193
       %4185 = OpLabel
       %4194 = OpExtInst %v3float %1 Fract %4183
       %4195 = OpExtInst %v3float %1 Floor %4183
       %4196 = OpDot %float %4195 %387
       %4197 = OpFAdd %float %4196 %float_19
       %4198 = OpFAdd %float %4196 %float_47
       %4199 = OpFAdd %float %4196 %float_66
       %4200 = OpFAdd %float %4196 %float_101
       %4201 = OpFAdd %float %4196 %float_120
       %4202 = OpFAdd %float %4196 %float_148
       %4203 = OpFAdd %float %4196 %float_167
       %4204 = OpConvertFToS %int %4196
       %4205 = OpCompositeConstruct %v3int %4204 %int_0 %int_0
       %4206 = OpBitcast %v3uint %4205
       %4207 = OpIMul %v3uint %4206 %403
       %4208 = OpIAdd %v3uint %4207 %405
       %4209 = OpCompositeExtract %uint %4208 1
       %4210 = OpCompositeExtract %uint %4208 2
       %4211 = OpIMul %uint %4209 %4210
       %4212 = OpCompositeExtract %uint %4208 0
       %4213 = OpIAdd %uint %4212 %4211
       %4214 = OpIMul %uint %4210 %4213
       %4215 = OpIAdd %uint %4209 %4214
       %4216 = OpIMul %uint %4213 %4215
       %4217 = OpIAdd %uint %4210 %4216
       %4218 = OpIMul %uint %4215 %4217
       %4219 = OpIAdd %uint %4213 %4218
       %4220 = OpCompositeInsert %v3uint %4219 %549 0
       %4221 = OpBitwiseAnd %v3uint %406 %407
       %4222 = OpShiftRightLogical %v3uint %4220 %4221
       %4223 = OpCompositeExtract %uint %4222 0
       %4224 = OpCompositeConstruct %v3uint %4223 %4223 %4223
       %4225 = OpBitwiseAnd %v3uint %4224 %388
       %4226 = OpConvertUToF %v3float %4225
       %4227 = OpExtInst %v3float %1 Fma %4226 %392 %282
       %4228 = OpDot %float %4227 %4194
       %4229 = OpConvertFToS %int %4197
       %4230 = OpFSub %v3float %4194 %351
       %4231 = OpCompositeConstruct %v3int %4229 %int_0 %int_0
       %4232 = OpBitcast %v3uint %4231
       %4233 = OpIMul %v3uint %4232 %403
       %4234 = OpIAdd %v3uint %4233 %405
       %4235 = OpCompositeExtract %uint %4234 1
       %4236 = OpCompositeExtract %uint %4234 2
       %4237 = OpIMul %uint %4235 %4236
       %4238 = OpCompositeExtract %uint %4234 0
       %4239 = OpIAdd %uint %4238 %4237
       %4240 = OpIMul %uint %4236 %4239
       %4241 = OpIAdd %uint %4235 %4240
       %4242 = OpIMul %uint %4239 %4241
       %4243 = OpIAdd %uint %4236 %4242
       %4244 = OpIMul %uint %4241 %4243
       %4245 = OpIAdd %uint %4239 %4244
       %4246 = OpCompositeInsert %v3uint %4245 %549 0
       %4247 = OpShiftRightLogical %v3uint %4246 %4221
       %4248 = OpCompositeExtract %uint %4247 0
       %4249 = OpCompositeConstruct %v3uint %4248 %4248 %4248
       %4250 = OpBitwiseAnd %v3uint %4249 %388
       %4251 = OpConvertUToF %v3float %4250
       %4252 = OpExtInst %v3float %1 Fma %4251 %392 %282
       %4253 = OpDot %float %4252 %4230
       %4254 = OpConvertFToS %int %4198
       %4255 = OpFSub %v3float %4194 %352
       %4256 = OpCompositeConstruct %v3int %4254 %int_0 %int_0
       %4257 = OpBitcast %v3uint %4256
       %4258 = OpIMul %v3uint %4257 %403
       %4259 = OpIAdd %v3uint %4258 %405
       %4260 = OpCompositeExtract %uint %4259 1
       %4261 = OpCompositeExtract %uint %4259 2
       %4262 = OpIMul %uint %4260 %4261
       %4263 = OpCompositeExtract %uint %4259 0
       %4264 = OpIAdd %uint %4263 %4262
       %4265 = OpIMul %uint %4261 %4264
       %4266 = OpIAdd %uint %4260 %4265
       %4267 = OpIMul %uint %4264 %4266
       %4268 = OpIAdd %uint %4261 %4267
       %4269 = OpIMul %uint %4266 %4268
       %4270 = OpIAdd %uint %4264 %4269
       %4271 = OpCompositeInsert %v3uint %4270 %549 0
       %4272 = OpShiftRightLogical %v3uint %4271 %4221
       %4273 = OpCompositeExtract %uint %4272 0
       %4274 = OpCompositeConstruct %v3uint %4273 %4273 %4273
       %4275 = OpBitwiseAnd %v3uint %4274 %388
       %4276 = OpConvertUToF %v3float %4275
       %4277 = OpExtInst %v3float %1 Fma %4276 %392 %282
       %4278 = OpDot %float %4277 %4255
       %4279 = OpConvertFToS %int %4199
       %4280 = OpFSub %v3float %4194 %138
       %4281 = OpCompositeConstruct %v3int %4279 %int_0 %int_0
       %4282 = OpBitcast %v3uint %4281
       %4283 = OpIMul %v3uint %4282 %403
       %4284 = OpIAdd %v3uint %4283 %405
       %4285 = OpCompositeExtract %uint %4284 1
       %4286 = OpCompositeExtract %uint %4284 2
       %4287 = OpIMul %uint %4285 %4286
       %4288 = OpCompositeExtract %uint %4284 0
       %4289 = OpIAdd %uint %4288 %4287
       %4290 = OpIMul %uint %4286 %4289
       %4291 = OpIAdd %uint %4285 %4290
       %4292 = OpIMul %uint %4289 %4291
       %4293 = OpIAdd %uint %4286 %4292
       %4294 = OpIMul %uint %4291 %4293
       %4295 = OpIAdd %uint %4289 %4294
       %4296 = OpCompositeInsert %v3uint %4295 %549 0
       %4297 = OpShiftRightLogical %v3uint %4296 %4221
       %4298 = OpCompositeExtract %uint %4297 0
       %4299 = OpCompositeConstruct %v3uint %4298 %4298 %4298
       %4300 = OpBitwiseAnd %v3uint %4299 %388
       %4301 = OpConvertUToF %v3float %4300
       %4302 = OpExtInst %v3float %1 Fma %4301 %392 %282
       %4303 = OpDot %float %4302 %4280
       %4304 = OpConvertFToS %int %4200
       %4305 = OpFSub %v3float %4194 %294
       %4306 = OpCompositeConstruct %v3int %4304 %int_0 %int_0
       %4307 = OpBitcast %v3uint %4306
       %4308 = OpIMul %v3uint %4307 %403
       %4309 = OpIAdd %v3uint %4308 %405
       %4310 = OpCompositeExtract %uint %4309 1
       %4311 = OpCompositeExtract %uint %4309 2
       %4312 = OpIMul %uint %4310 %4311
       %4313 = OpCompositeExtract %uint %4309 0
       %4314 = OpIAdd %uint %4313 %4312
       %4315 = OpIMul %uint %4311 %4314
       %4316 = OpIAdd %uint %4310 %4315
       %4317 = OpIMul %uint %4314 %4316
       %4318 = OpIAdd %uint %4311 %4317
       %4319 = OpIMul %uint %4316 %4318
       %4320 = OpIAdd %uint %4314 %4319
       %4321 = OpCompositeInsert %v3uint %4320 %549 0
       %4322 = OpShiftRightLogical %v3uint %4321 %4221
       %4323 = OpCompositeExtract %uint %4322 0
       %4324 = OpCompositeConstruct %v3uint %4323 %4323 %4323
       %4325 = OpBitwiseAnd %v3uint %4324 %388
       %4326 = OpConvertUToF %v3float %4325
       %4327 = OpExtInst %v3float %1 Fma %4326 %392 %282
       %4328 = OpDot %float %4327 %4305
       %4329 = OpConvertFToS %int %4201
       %4330 = OpFSub %v3float %4194 %143
       %4331 = OpCompositeConstruct %v3int %4329 %int_0 %int_0
       %4332 = OpBitcast %v3uint %4331
       %4333 = OpIMul %v3uint %4332 %403
       %4334 = OpIAdd %v3uint %4333 %405
       %4335 = OpCompositeExtract %uint %4334 1
       %4336 = OpCompositeExtract %uint %4334 2
       %4337 = OpIMul %uint %4335 %4336
       %4338 = OpCompositeExtract %uint %4334 0
       %4339 = OpIAdd %uint %4338 %4337
       %4340 = OpIMul %uint %4336 %4339
       %4341 = OpIAdd %uint %4335 %4340
       %4342 = OpIMul %uint %4339 %4341
       %4343 = OpIAdd %uint %4336 %4342
       %4344 = OpIMul %uint %4341 %4343
       %4345 = OpIAdd %uint %4339 %4344
       %4346 = OpCompositeInsert %v3uint %4345 %549 0
       %4347 = OpShiftRightLogical %v3uint %4346 %4221
       %4348 = OpCompositeExtract %uint %4347 0
       %4349 = OpCompositeConstruct %v3uint %4348 %4348 %4348
       %4350 = OpBitwiseAnd %v3uint %4349 %388
       %4351 = OpConvertUToF %v3float %4350
       %4352 = OpExtInst %v3float %1 Fma %4351 %392 %282
       %4353 = OpDot %float %4352 %4330
       %4354 = OpConvertFToS %int %4202
       %4355 = OpFSub %v3float %4194 %139
       %4356 = OpCompositeConstruct %v3int %4354 %int_0 %int_0
       %4357 = OpBitcast %v3uint %4356
       %4358 = OpIMul %v3uint %4357 %403
       %4359 = OpIAdd %v3uint %4358 %405
       %4360 = OpCompositeExtract %uint %4359 1
       %4361 = OpCompositeExtract %uint %4359 2
       %4362 = OpIMul %uint %4360 %4361
       %4363 = OpCompositeExtract %uint %4359 0
       %4364 = OpIAdd %uint %4363 %4362
       %4365 = OpIMul %uint %4361 %4364
       %4366 = OpIAdd %uint %4360 %4365
       %4367 = OpIMul %uint %4364 %4366
       %4368 = OpIAdd %uint %4361 %4367
       %4369 = OpIMul %uint %4366 %4368
       %4370 = OpIAdd %uint %4364 %4369
       %4371 = OpCompositeInsert %v3uint %4370 %549 0
       %4372 = OpShiftRightLogical %v3uint %4371 %4221
       %4373 = OpCompositeExtract %uint %4372 0
       %4374 = OpCompositeConstruct %v3uint %4373 %4373 %4373
       %4375 = OpBitwiseAnd %v3uint %4374 %388
       %4376 = OpConvertUToF %v3float %4375
       %4377 = OpExtInst %v3float %1 Fma %4376 %392 %282
       %4378 = OpDot %float %4377 %4355
       %4379 = OpConvertFToS %int %4203
       %4380 = OpFSub %v3float %4194 %131
       %4381 = OpCompositeConstruct %v3int %4379 %int_0 %int_0
       %4382 = OpBitcast %v3uint %4381
       %4383 = OpIMul %v3uint %4382 %403
       %4384 = OpIAdd %v3uint %4383 %405
       %4385 = OpCompositeExtract %uint %4384 1
       %4386 = OpCompositeExtract %uint %4384 2
       %4387 = OpIMul %uint %4385 %4386
       %4388 = OpCompositeExtract %uint %4384 0
       %4389 = OpIAdd %uint %4388 %4387
       %4390 = OpIMul %uint %4386 %4389
       %4391 = OpIAdd %uint %4385 %4390
       %4392 = OpIMul %uint %4389 %4391
       %4393 = OpIAdd %uint %4386 %4392
       %4394 = OpIMul %uint %4391 %4393
       %4395 = OpIAdd %uint %4389 %4394
       %4396 = OpCompositeInsert %v3uint %4395 %549 0
       %4397 = OpShiftRightLogical %v3uint %4396 %4221
       %4398 = OpCompositeExtract %uint %4397 0
       %4399 = OpCompositeConstruct %v3uint %4398 %4398 %4398
       %4400 = OpBitwiseAnd %v3uint %4399 %388
       %4401 = OpConvertUToF %v3float %4400
       %4402 = OpExtInst %v3float %1 Fma %4401 %392 %282
       %4403 = OpDot %float %4402 %4380
       %4404 = OpCompositeExtract %float %4194 0
       %4405 = OpCompositeExtract %float %4194 1
       %4406 = OpCompositeExtract %float %4194 2
       %4407 = OpCompositeConstruct %v4float %4404 %4405 %4406 %float_0
       %4408 = OpFMul %v4float %4407 %4407
       %4409 = OpFMul %v4float %4408 %4407
       %4410 = OpVectorTimesScalar %v4float %4407 %float_6
       %4411 = OpFSub %v4float %4410 %383
       %4412 = OpExtInst %v4float %1 Fma %4407 %4411 %384
       %4413 = OpFMul %v4float %4409 %4412
       %4414 = OpCompositeExtract %float %4413 0
       %4415 = OpExtInst %float %1 FMix %4228 %4253 %4414
       %4416 = OpExtInst %float %1 FMix %4278 %4303 %4414
       %4417 = OpCompositeExtract %float %4413 1
       %4418 = OpExtInst %float %1 FMix %4415 %4416 %4417
       %4419 = OpExtInst %float %1 FMix %4328 %4353 %4414
       %4420 = OpExtInst %float %1 FMix %4378 %4403 %4414
       %4421 = OpExtInst %float %1 FMix %4419 %4420 %4417
       %4422 = OpCompositeExtract %float %4413 2
       %4423 = OpExtInst %float %1 FMix %4418 %4421 %4422
       %4424 = OpExtInst %float %1 FAbs %4423
       %4189 = OpExtInst %float %1 Fma %4424 %4186 %4188
       %4184 = OpVectorTimesScalar %v3float %4183 %float_2
       %4187 = OpFMul %float %4186 %float_0_5
       %4191 = OpIAdd %uint %4190 %uint_1
               OpBranch %4182
       %4193 = OpLabel
       %4425 = OpExtInst %float %1 FMix %float_0 %float_1 %4188
       %4426 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_66 %int_3
       %4427 = OpLoad %float %4426
       %4428 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_66 %int_2
       %4429 = OpLoad %float %4428
       %4430 = OpExtInst %float %1 Fma %4425 %4427 %4429
       %4431 = OpFMul %float %4150 %4430
       %4432 = OpExtInst %float %1 FMix %3870 %3875 %4431
       %4433 = OpExtInst %float %1 Sin %3867
       %4434 = OpFMul %float %4433 %4432
       %4435 = OpFAdd %v3float %3551 %2563
       %4436 = OpExtInst %v3float %1 NMax %4435 %282
       %4437 = OpExtInst %v3float %1 NMin %4436 %131
       %4438 = OpCompositeExtract %float %4437 0
       %4439 = OpCompositeExtract %float %4437 1
       %4440 = OpCompositeConstruct %v2float %4438 %4439
       %4441 = OpFMul %v2float %1698 %4440
       %4442 = OpFMul %v2float %4440 %1699
       %4443 = OpCompositeExtract %float %4441 0
       %4444 = OpCompositeExtract %float %4442 0
       %4445 = OpCompositeExtract %float %4441 1
       %4446 = OpCompositeExtract %float %4442 1
       %4447 = OpFAdd %float %4443 %4445
       %4448 = OpFAdd %float %4444 %4446
       %4449 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_20 %int_3
       %4450 = OpLoad %float %4449
       %4451 = OpFMul %float %3571 %4450
       %4452 = OpFDiv %float %float_2 %4451
       %4453 = OpFMul %float %4447 %4452
       %4454 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_1
       %4455 = OpLoad %float %4454
       %4456 = OpFMul %float %4452 %4455
       %4457 = OpFMul %float %4456 %3855
       %4458 = OpExtInst %float %1 Fma %4448 %4452 %4457
       %4459 = OpExtInst %float %1 Floor %4453
       %4460 = OpFNegate %float %4459
       %4461 = OpExtInst %float %1 Fma %4447 %4452 %4460
       %4462 = OpExtInst %float %1 Fma %4461 %float_2097152 %4458
       %4463 = OpExtInst %float %1 Floor %4462
       %4464 = OpFMul %float %4459 %float_n6_28318548
       %4465 = OpExtInst %float %1 Fma %4453 %float_6_28318548 %4464
       %4466 = OpFMul %float %4463 %float_n6_28318548
       %4467 = OpExtInst %float %1 Fma %4458 %float_6_28318548 %4466
       %4468 = OpExtInst %float %1 Fma %4465 %float_2097152 %4467
       %4469 = OpFMul %float %4432 %2596
       %4470 = OpExtInst %float %1 Sin %4468
       %4471 = OpFMul %float %4470 %4469
       %4472 = OpCompositeConstruct %v3float %548 %548 %4434
       %4473 = OpCompositeConstruct %v3float %548 %548 %4471
       %4474 = OpFAdd %v3float %4472 %4473
       %4475 = OpFSub %v3float %3551 %1690
       %4476 = OpExtInst %v3float %1 NMax %4475 %282
       %4477 = OpExtInst %v3float %1 NMin %4476 %131
       %4478 = OpCompositeExtract %float %4477 0
       %4479 = OpCompositeExtract %float %4477 1
       %4480 = OpCompositeConstruct %v2float %4478 %4479
       %4481 = OpFMul %v2float %1698 %4480
       %4482 = OpFMul %v2float %4480 %1699
       %4483 = OpCompositeExtract %float %4481 0
       %4484 = OpCompositeExtract %float %4482 0
       %4485 = OpCompositeExtract %float %4481 1
       %4486 = OpCompositeExtract %float %4482 1
       %4487 = OpFAdd %float %4483 %4485
       %4488 = OpFAdd %float %4484 %4486
       %4489 = OpFMul %float %4451 %4450
       %4490 = OpFDiv %float %float_2 %4489
       %4491 = OpFMul %float %4487 %4490
       %4492 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_3
       %4493 = OpLoad %float %4492
       %4494 = OpFMul %float %4490 %4493
       %4495 = OpFMul %float %4494 %3855
       %4496 = OpExtInst %float %1 Fma %4488 %4490 %4495
       %4497 = OpExtInst %float %1 Floor %4491
       %4498 = OpFNegate %float %4497
       %4499 = OpExtInst %float %1 Fma %4487 %4490 %4498
       %4500 = OpExtInst %float %1 Fma %4499 %float_2097152 %4496
       %4501 = OpExtInst %float %1 Floor %4500
       %4502 = OpFMul %float %4497 %float_n6_28318548
       %4503 = OpExtInst %float %1 Fma %4491 %float_6_28318548 %4502
       %4504 = OpFMul %float %4501 %float_n6_28318548
       %4505 = OpExtInst %float %1 Fma %4496 %float_6_28318548 %4504
       %4506 = OpExtInst %float %1 Fma %4503 %float_2097152 %4505
       %4507 = OpFMul %float %4469 %2596
       %4508 = OpExtInst %float %1 Sin %4506
       %4509 = OpFMul %float %4508 %4507
       %4510 = OpCompositeConstruct %v3float %548 %548 %4509
       %4511 = OpFAdd %v3float %4474 %4510
       %4512 = OpFSub %v3float %3551 %2563
       %4513 = OpExtInst %v3float %1 NMax %4512 %282
       %4514 = OpExtInst %v3float %1 NMin %4513 %131
       %4515 = OpCompositeExtract %float %4514 0
       %4516 = OpCompositeExtract %float %4514 1
       %4517 = OpCompositeConstruct %v2float %4515 %4516
       %4518 = OpFMul %v2float %1698 %4517
       %4519 = OpFMul %v2float %4517 %1699
       %4520 = OpCompositeExtract %float %4518 0
       %4521 = OpCompositeExtract %float %4519 0
       %4522 = OpCompositeExtract %float %4518 1
       %4523 = OpCompositeExtract %float %4519 1
       %4524 = OpFAdd %float %4520 %4522
       %4525 = OpFAdd %float %4521 %4523
       %4526 = OpFMul %float %4489 %4450
       %4527 = OpFDiv %float %float_2 %4526
       %4528 = OpFMul %float %4524 %4527
       %4529 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_1
       %4530 = OpLoad %float %4529
       %4531 = OpFMul %float %4527 %4530
       %4532 = OpFMul %float %4531 %3855
       %4533 = OpExtInst %float %1 Fma %4525 %4527 %4532
       %4534 = OpExtInst %float %1 Floor %4528
       %4535 = OpFNegate %float %4534
       %4536 = OpExtInst %float %1 Fma %4524 %4527 %4535
       %4537 = OpExtInst %float %1 Fma %4536 %float_2097152 %4533
       %4538 = OpExtInst %float %1 Floor %4537
       %4539 = OpFMul %float %4534 %float_n6_28318548
       %4540 = OpExtInst %float %1 Fma %4528 %float_6_28318548 %4539
       %4541 = OpFMul %float %4538 %float_n6_28318548
       %4542 = OpExtInst %float %1 Fma %4533 %float_6_28318548 %4541
       %4543 = OpExtInst %float %1 Fma %4540 %float_2097152 %4542
       %4544 = OpFMul %float %4507 %2596
       %4545 = OpExtInst %float %1 Sin %4543
       %4546 = OpFMul %float %4545 %4544
       %4547 = OpCompositeConstruct %v3float %548 %548 %4546
       %4548 = OpFAdd %v3float %4511 %4547
       %4549 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_69 %int_0
       %4550 = OpLoad %float %4549
       %4551 = OpFSub %float %4550 %float_n1
       %4552 = OpExtInst %float %1 FAbs %4551
       %4553 = OpFOrdGreaterThan %bool %4552 %float_9_99999975en06
       %4554 = OpFOrdGreaterThanEqual %bool %4550 %float_n1
       %4555 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_69 %int_1
       %4556 = OpLoad %float %4555
       %4557 = OpSelect %float %4554 %4550 %4556
       %4558 = OpSelect %float %4553 %4557 %4550
       %4559 = OpFSub %float %4558 %float_1
       %4560 = OpExtInst %float %1 FAbs %4559
       %4561 = OpFOrdGreaterThan %bool %4560 %float_9_99999975en06
       %4562 = OpFOrdGreaterThanEqual %bool %4558 %float_1
       %4563 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_69 %int_2
       %4564 = OpLoad %float %4563
       %4565 = OpSelect %float %4562 %4564 %4550
       %4566 = OpSelect %float %4561 %4565 %4550
       %4567 = OpExtInst %float %1 FAbs %4566
       %4568 = OpFOrdGreaterThan %bool %4567 %float_9_99999975en06
       %4569 = OpFOrdGreaterThanEqual %bool %4566 %float_0
       %4570 = OpSelect %float %4569 %float_1 %float_n1
       %4571 = OpSelect %float %4568 %4570 %float_1
       %4572 = OpExtInst %float %1 NMax %4571 %float_n1
       %4573 = OpExtInst %float %1 NMin %4572 %float_1
       %4574 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_70 %int_3
       %4575 = OpLoad %float %4574
       %4576 = OpCompositeConstruct %v3float %4573 %4575 %float_0
       %4577 = OpFAdd %v3float %4576 %1690
       %4578 = OpExtInst %v3float %1 NMax %4577 %282
       %4579 = OpExtInst %v3float %1 NMin %4578 %131
       %4580 = OpCompositeExtract %float %4579 0
       %4581 = OpCompositeExtract %float %4579 1
       %4582 = OpCompositeConstruct %v2float %4580 %4581
       %4583 = OpFMul %v2float %1698 %4582
       %4584 = OpFMul %v2float %4582 %1699
       %4585 = OpCompositeExtract %float %4583 0
       %4586 = OpCompositeExtract %float %4584 0
       %4587 = OpCompositeExtract %float %4583 1
       %4588 = OpCompositeExtract %float %4584 1
       %4589 = OpFAdd %float %4585 %4587
       %4590 = OpFAdd %float %4586 %4588
       %4591 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_28 %int_3
       %4592 = OpLoad %float %4591
       %4593 = OpFMul %float %3568 %4592
       %4594 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_0
       %4595 = OpLoad %float %4594
       %4596 = OpFMul %float %4595 %4593
       %4597 = OpFDiv %float %float_2 %4596
       %4598 = OpFMul %float %4589 %4597
       %4599 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_1
       %4600 = OpLoad %float %4599
       %4601 = OpFMul %float %4597 %4600
       %4602 = OpFMul %float %4601 %3855
       %4603 = OpExtInst %float %1 Fma %4590 %4597 %4602
       %4604 = OpExtInst %float %1 Floor %4598
       %4605 = OpFNegate %float %4604
       %4606 = OpExtInst %float %1 Fma %4589 %4597 %4605
       %4607 = OpExtInst %float %1 Fma %4606 %float_2097152 %4603
       %4608 = OpExtInst %float %1 Floor %4607
       %4609 = OpFMul %float %4604 %float_n6_28318548
       %4610 = OpExtInst %float %1 Fma %4598 %float_6_28318548 %4609
       %4611 = OpFMul %float %4608 %float_n6_28318548
       %4612 = OpExtInst %float %1 Fma %4603 %float_6_28318548 %4611
       %4613 = OpExtInst %float %1 Fma %4610 %float_2097152 %4612
       %4614 = OpFMul %float %4432 %2735
       %4615 = OpExtInst %float %1 Sin %4613
       %4616 = OpFMul %float %4615 %4614
       %4617 = OpFAdd %v3float %4576 %2563
       %4618 = OpExtInst %v3float %1 NMax %4617 %282
       %4619 = OpExtInst %v3float %1 NMin %4618 %131
       %4620 = OpCompositeExtract %float %4619 0
       %4621 = OpCompositeExtract %float %4619 1
       %4622 = OpCompositeConstruct %v2float %4620 %4621
       %4623 = OpFMul %v2float %1698 %4622
       %4624 = OpFMul %v2float %4622 %1699
       %4625 = OpCompositeExtract %float %4623 0
       %4626 = OpCompositeExtract %float %4624 0
       %4627 = OpCompositeExtract %float %4623 1
       %4628 = OpCompositeExtract %float %4624 1
       %4629 = OpFAdd %float %4625 %4627
       %4630 = OpFAdd %float %4626 %4628
       %4631 = OpFMul %float %4596 %4450
       %4632 = OpFDiv %float %float_2 %4631
       %4633 = OpFMul %float %4629 %4632
       %4634 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_2
       %4635 = OpLoad %float %4634
       %4636 = OpFMul %float %4632 %4635
       %4637 = OpFMul %float %4636 %3855
       %4638 = OpExtInst %float %1 Fma %4630 %4632 %4637
       %4639 = OpExtInst %float %1 Floor %4633
       %4640 = OpFNegate %float %4639
       %4641 = OpExtInst %float %1 Fma %4629 %4632 %4640
       %4642 = OpExtInst %float %1 Fma %4641 %float_2097152 %4638
       %4643 = OpExtInst %float %1 Floor %4642
       %4644 = OpFMul %float %4639 %float_n6_28318548
       %4645 = OpExtInst %float %1 Fma %4633 %float_6_28318548 %4644
       %4646 = OpFMul %float %4643 %float_n6_28318548
       %4647 = OpExtInst %float %1 Fma %4638 %float_6_28318548 %4646
       %4648 = OpExtInst %float %1 Fma %4645 %float_2097152 %4647
       %4649 = OpFMul %float %4614 %2596
       %4650 = OpExtInst %float %1 Sin %4648
       %4651 = OpFMul %float %4650 %4649
       %4652 = OpCompositeConstruct %v3float %548 %548 %4616
       %4653 = OpCompositeConstruct %v3float %548 %548 %4651
       %4654 = OpFAdd %v3float %4652 %4653
       %4655 = OpFSub %v3float %4576 %1690
       %4656 = OpExtInst %v3float %1 NMax %4655 %282
       %4657 = OpExtInst %v3float %1 NMin %4656 %131
       %4658 = OpCompositeExtract %float %4657 0
       %4659 = OpCompositeExtract %float %4657 1
       %4660 = OpCompositeConstruct %v2float %4658 %4659
       %4661 = OpFMul %v2float %1698 %4660
       %4662 = OpFMul %v2float %4660 %1699
       %4663 = OpCompositeExtract %float %4661 0
       %4664 = OpCompositeExtract %float %4662 0
       %4665 = OpCompositeExtract %float %4661 1
       %4666 = OpCompositeExtract %float %4662 1
       %4667 = OpFAdd %float %4663 %4665
       %4668 = OpFAdd %float %4664 %4666
       %4669 = OpFMul %float %4631 %4450
       %4670 = OpFDiv %float %float_2 %4669
       %4671 = OpFMul %float %4667 %4670
       %4672 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_3
       %4673 = OpLoad %float %4672
       %4674 = OpFMul %float %4670 %4673
       %4675 = OpFMul %float %4674 %3855
       %4676 = OpExtInst %float %1 Fma %4668 %4670 %4675
       %4677 = OpExtInst %float %1 Floor %4671
       %4678 = OpFNegate %float %4677
       %4679 = OpExtInst %float %1 Fma %4667 %4670 %4678
       %4680 = OpExtInst %float %1 Fma %4679 %float_2097152 %4676
       %4681 = OpExtInst %float %1 Floor %4680
       %4682 = OpFMul %float %4677 %float_n6_28318548
       %4683 = OpExtInst %float %1 Fma %4671 %float_6_28318548 %4682
       %4684 = OpFMul %float %4681 %float_n6_28318548
       %4685 = OpExtInst %float %1 Fma %4676 %float_6_28318548 %4684
       %4686 = OpExtInst %float %1 Fma %4683 %float_2097152 %4685
       %4687 = OpFMul %float %4649 %2596
       %4688 = OpExtInst %float %1 Sin %4686
       %4689 = OpFMul %float %4688 %4687
       %4690 = OpCompositeConstruct %v3float %548 %548 %4689
       %4691 = OpFAdd %v3float %4654 %4690
       %4692 = OpFSub %v3float %4576 %2563
       %4693 = OpExtInst %v3float %1 NMax %4692 %282
       %4694 = OpExtInst %v3float %1 NMin %4693 %131
       %4695 = OpCompositeExtract %float %4694 0
       %4696 = OpCompositeExtract %float %4694 1
       %4697 = OpCompositeConstruct %v2float %4695 %4696
       %4698 = OpFMul %v2float %1698 %4697
       %4699 = OpFMul %v2float %4697 %1699
       %4700 = OpCompositeExtract %float %4698 0
       %4701 = OpCompositeExtract %float %4699 0
       %4702 = OpCompositeExtract %float %4698 1
       %4703 = OpCompositeExtract %float %4699 1
       %4704 = OpFAdd %float %4700 %4702
       %4705 = OpFAdd %float %4701 %4703
       %4706 = OpFMul %float %4669 %4450
       %4707 = OpFDiv %float %float_2 %4706
       %4708 = OpFMul %float %4704 %4707
       %4709 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_0
       %4710 = OpLoad %float %4709
       %4711 = OpFMul %float %4707 %4710
       %4712 = OpFMul %float %4711 %3855
       %4713 = OpExtInst %float %1 Fma %4705 %4707 %4712
       %4714 = OpExtInst %float %1 Floor %4708
       %4715 = OpFNegate %float %4714
       %4716 = OpExtInst %float %1 Fma %4704 %4707 %4715
       %4717 = OpExtInst %float %1 Fma %4716 %float_2097152 %4713
       %4718 = OpExtInst %float %1 Floor %4717
       %4719 = OpFMul %float %4714 %float_n6_28318548
       %4720 = OpExtInst %float %1 Fma %4708 %float_6_28318548 %4719
       %4721 = OpFMul %float %4718 %float_n6_28318548
       %4722 = OpExtInst %float %1 Fma %4713 %float_6_28318548 %4721
       %4723 = OpExtInst %float %1 Fma %4720 %float_2097152 %4722
       %4724 = OpFMul %float %4687 %2596
       %4725 = OpExtInst %float %1 Sin %4723
       %4726 = OpFMul %float %4725 %4724
       %4727 = OpCompositeConstruct %v3float %548 %548 %4726
       %4728 = OpFAdd %v3float %4691 %4727
       %4729 = OpFAdd %v3float %4548 %4728
       %4730 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_1
       %4731 = OpLoad %float %4730
       %4732 = OpFSub %float %4731 %float_n1
       %4733 = OpExtInst %float %1 FAbs %4732
       %4734 = OpFOrdGreaterThan %bool %4733 %float_9_99999975en06
       %4735 = OpFOrdGreaterThanEqual %bool %4731 %float_n1
       %4736 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_2
       %4737 = OpLoad %float %4736
       %4738 = OpSelect %float %4735 %4731 %4737
       %4739 = OpSelect %float %4734 %4738 %4731
       %4740 = OpFSub %float %4739 %float_1
       %4741 = OpExtInst %float %1 FAbs %4740
       %4742 = OpFOrdGreaterThan %bool %4741 %float_9_99999975en06
       %4743 = OpFOrdGreaterThanEqual %bool %4739 %float_1
       %4744 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_3
       %4745 = OpLoad %float %4744
       %4746 = OpSelect %float %4743 %4745 %4731
       %4747 = OpSelect %float %4742 %4746 %4731
       %4748 = OpExtInst %float %1 FAbs %4747
       %4749 = OpFOrdGreaterThan %bool %4748 %float_9_99999975en06
       %4750 = OpFOrdGreaterThanEqual %bool %4747 %float_0
       %4751 = OpSelect %float %4750 %float_1 %float_n1
       %4752 = OpSelect %float %4749 %4751 %float_1
       %4753 = OpExtInst %float %1 NMax %4752 %float_n1
       %4754 = OpExtInst %float %1 NMin %4753 %float_1
       %4755 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_0
       %4756 = OpLoad %float %4755
       %4757 = OpCompositeConstruct %v3float %4754 %4756 %float_0
       %4758 = OpFAdd %v3float %4757 %1690
       %4759 = OpExtInst %v3float %1 NMax %4758 %282
       %4760 = OpExtInst %v3float %1 NMin %4759 %131
       %4761 = OpCompositeExtract %float %4760 0
       %4762 = OpCompositeExtract %float %4760 1
       %4763 = OpCompositeConstruct %v2float %4761 %4762
       %4764 = OpFMul %v2float %1698 %4763
       %4765 = OpFMul %v2float %4763 %1699
       %4766 = OpCompositeExtract %float %4764 0
       %4767 = OpCompositeExtract %float %4765 0
       %4768 = OpCompositeExtract %float %4764 1
       %4769 = OpCompositeExtract %float %4765 1
       %4770 = OpFAdd %float %4766 %4768
       %4771 = OpFAdd %float %4767 %4769
       %4772 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_76 %int_1
       %4773 = OpLoad %float %4772
       %4774 = OpFMul %float %4773 %4593
       %4775 = OpFDiv %float %float_2 %4774
       %4776 = OpFMul %float %4770 %4775
       %4777 = OpFMul %float %4775 %4600
       %4778 = OpFMul %float %4777 %3855
       %4779 = OpExtInst %float %1 Fma %4771 %4775 %4778
       %4780 = OpExtInst %float %1 Floor %4776
       %4781 = OpFNegate %float %4780
       %4782 = OpExtInst %float %1 Fma %4770 %4775 %4781
       %4783 = OpExtInst %float %1 Fma %4782 %float_2097152 %4779
       %4784 = OpExtInst %float %1 Floor %4783
       %4785 = OpFMul %float %4780 %float_n6_28318548
       %4786 = OpExtInst %float %1 Fma %4776 %float_6_28318548 %4785
       %4787 = OpFMul %float %4784 %float_n6_28318548
       %4788 = OpExtInst %float %1 Fma %4779 %float_6_28318548 %4787
       %4789 = OpExtInst %float %1 Fma %4786 %float_2097152 %4788
       %4790 = OpExtInst %float %1 Sin %4789
       %4791 = OpFMul %float %4790 %4614
       %4792 = OpFAdd %v3float %4757 %2563
       %4793 = OpExtInst %v3float %1 NMax %4792 %282
       %4794 = OpExtInst %v3float %1 NMin %4793 %131
       %4795 = OpCompositeExtract %float %4794 0
       %4796 = OpCompositeExtract %float %4794 1
       %4797 = OpCompositeConstruct %v2float %4795 %4796
       %4798 = OpFMul %v2float %1698 %4797
       %4799 = OpFMul %v2float %4797 %1699
       %4800 = OpCompositeExtract %float %4798 0
       %4801 = OpCompositeExtract %float %4799 0
       %4802 = OpCompositeExtract %float %4798 1
       %4803 = OpCompositeExtract %float %4799 1
       %4804 = OpFAdd %float %4800 %4802
       %4805 = OpFAdd %float %4801 %4803
       %4806 = OpFMul %float %4774 %4450
       %4807 = OpFDiv %float %float_2 %4806
       %4808 = OpFMul %float %4804 %4807
       %4809 = OpFMul %float %4807 %4635
       %4810 = OpFMul %float %4809 %3855
       %4811 = OpExtInst %float %1 Fma %4805 %4807 %4810
       %4812 = OpExtInst %float %1 Floor %4808
       %4813 = OpFNegate %float %4812
       %4814 = OpExtInst %float %1 Fma %4804 %4807 %4813
       %4815 = OpExtInst %float %1 Fma %4814 %float_2097152 %4811
       %4816 = OpExtInst %float %1 Floor %4815
       %4817 = OpFMul %float %4812 %float_n6_28318548
       %4818 = OpExtInst %float %1 Fma %4808 %float_6_28318548 %4817
       %4819 = OpFMul %float %4816 %float_n6_28318548
       %4820 = OpExtInst %float %1 Fma %4811 %float_6_28318548 %4819
       %4821 = OpExtInst %float %1 Fma %4818 %float_2097152 %4820
       %4822 = OpExtInst %float %1 Sin %4821
       %4823 = OpFMul %float %4822 %4649
       %4824 = OpCompositeConstruct %v3float %548 %548 %4791
       %4825 = OpCompositeConstruct %v3float %548 %548 %4823
       %4826 = OpFAdd %v3float %4824 %4825
       %4827 = OpFSub %v3float %4757 %1690
       %4828 = OpExtInst %v3float %1 NMax %4827 %282
       %4829 = OpExtInst %v3float %1 NMin %4828 %131
       %4830 = OpCompositeExtract %float %4829 0
       %4831 = OpCompositeExtract %float %4829 1
       %4832 = OpCompositeConstruct %v2float %4830 %4831
       %4833 = OpFMul %v2float %1698 %4832
       %4834 = OpFMul %v2float %4832 %1699
       %4835 = OpCompositeExtract %float %4833 0
       %4836 = OpCompositeExtract %float %4834 0
       %4837 = OpCompositeExtract %float %4833 1
       %4838 = OpCompositeExtract %float %4834 1
       %4839 = OpFAdd %float %4835 %4837
       %4840 = OpFAdd %float %4836 %4838
       %4841 = OpFMul %float %4806 %4450
       %4842 = OpFDiv %float %float_2 %4841
       %4843 = OpFMul %float %4839 %4842
       %4844 = OpFMul %float %4842 %4673
       %4845 = OpFMul %float %4844 %3855
       %4846 = OpExtInst %float %1 Fma %4840 %4842 %4845
       %4847 = OpExtInst %float %1 Floor %4843
       %4848 = OpFNegate %float %4847
       %4849 = OpExtInst %float %1 Fma %4839 %4842 %4848
       %4850 = OpExtInst %float %1 Fma %4849 %float_2097152 %4846
       %4851 = OpExtInst %float %1 Floor %4850
       %4852 = OpFMul %float %4847 %float_n6_28318548
       %4853 = OpExtInst %float %1 Fma %4843 %float_6_28318548 %4852
       %4854 = OpFMul %float %4851 %float_n6_28318548
       %4855 = OpExtInst %float %1 Fma %4846 %float_6_28318548 %4854
       %4856 = OpExtInst %float %1 Fma %4853 %float_2097152 %4855
       %4857 = OpExtInst %float %1 Sin %4856
       %4858 = OpFMul %float %4857 %4687
       %4859 = OpCompositeConstruct %v3float %548 %548 %4858
       %4860 = OpFAdd %v3float %4826 %4859
       %4861 = OpFSub %v3float %4757 %2563
       %4862 = OpExtInst %v3float %1 NMax %4861 %282
       %4863 = OpExtInst %v3float %1 NMin %4862 %131
       %4864 = OpCompositeExtract %float %4863 0
       %4865 = OpCompositeExtract %float %4863 1
       %4866 = OpCompositeConstruct %v2float %4864 %4865
       %4867 = OpFMul %v2float %1698 %4866
       %4868 = OpFMul %v2float %4866 %1699
       %4869 = OpCompositeExtract %float %4867 0
       %4870 = OpCompositeExtract %float %4868 0
       %4871 = OpCompositeExtract %float %4867 1
       %4872 = OpCompositeExtract %float %4868 1
       %4873 = OpFAdd %float %4869 %4871
       %4874 = OpFAdd %float %4870 %4872
       %4875 = OpFMul %float %4841 %4450
       %4876 = OpFDiv %float %float_2 %4875
       %4877 = OpFMul %float %4873 %4876
       %4878 = OpFMul %float %4876 %4710
       %4879 = OpFMul %float %4878 %3855
       %4880 = OpExtInst %float %1 Fma %4874 %4876 %4879
       %4881 = OpExtInst %float %1 Floor %4877
       %4882 = OpFNegate %float %4881
       %4883 = OpExtInst %float %1 Fma %4873 %4876 %4882
       %4884 = OpExtInst %float %1 Fma %4883 %float_2097152 %4880
       %4885 = OpExtInst %float %1 Floor %4884
       %4886 = OpFMul %float %4881 %float_n6_28318548
       %4887 = OpExtInst %float %1 Fma %4877 %float_6_28318548 %4886
       %4888 = OpFMul %float %4885 %float_n6_28318548
       %4889 = OpExtInst %float %1 Fma %4880 %float_6_28318548 %4888
       %4890 = OpExtInst %float %1 Fma %4887 %float_2097152 %4889
       %4891 = OpExtInst %float %1 Sin %4890
       %4892 = OpFMul %float %4891 %4724
       %4893 = OpCompositeConstruct %v3float %548 %548 %4892
       %4894 = OpFAdd %v3float %4860 %4893
       %4895 = OpFAdd %v3float %4729 %4894
       %4896 = OpFMul %float %3568 %float_0_800000012
       %4897 = OpFMul %float %3570 %4896
       %4898 = OpFDiv %float %float_2 %4897
       %4899 = OpFMul %float %3564 %4898
       %4900 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_76 %int_2
       %4901 = OpLoad %float %4900
       %4902 = OpFMul %float %4898 %4901
       %4903 = OpFMul %float %4902 %3855
       %4904 = OpExtInst %float %1 Fma %3565 %4898 %4903
       %4905 = OpExtInst %float %1 Floor %4899
       %4906 = OpFNegate %float %4905
       %4907 = OpExtInst %float %1 Fma %3564 %4898 %4906
       %4908 = OpExtInst %float %1 Fma %4907 %float_2097152 %4904
       %4909 = OpExtInst %float %1 Floor %4908
       %4910 = OpFMul %float %4905 %float_n6_28318548
       %4911 = OpExtInst %float %1 Fma %4899 %float_6_28318548 %4910
       %4912 = OpFMul %float %4909 %float_n6_28318548
       %4913 = OpExtInst %float %1 Fma %4904 %float_6_28318548 %4912
       %4914 = OpExtInst %float %1 Fma %4911 %float_2097152 %4913
       %4915 = OpFMul %float %4432 %float_0_800000012
       %4916 = OpExtInst %float %1 Sin %4914
       %4917 = OpFMul %float %4916 %4915
       %4918 = OpFMul %float %4897 %4450
       %4919 = OpFDiv %float %float_2 %4918
       %4920 = OpFMul %float %4447 %4919
       %4921 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_76 %int_3
       %4922 = OpLoad %float %4921
       %4923 = OpFMul %float %4919 %4922
       %4924 = OpFMul %float %4923 %3855
       %4925 = OpExtInst %float %1 Fma %4448 %4919 %4924
       %4926 = OpExtInst %float %1 Floor %4920
       %4927 = OpFNegate %float %4926
       %4928 = OpExtInst %float %1 Fma %4447 %4919 %4927
       %4929 = OpExtInst %float %1 Fma %4928 %float_2097152 %4925
       %4930 = OpExtInst %float %1 Floor %4929
       %4931 = OpFMul %float %4926 %float_n6_28318548
       %4932 = OpExtInst %float %1 Fma %4920 %float_6_28318548 %4931
       %4933 = OpFMul %float %4930 %float_n6_28318548
       %4934 = OpExtInst %float %1 Fma %4925 %float_6_28318548 %4933
       %4935 = OpExtInst %float %1 Fma %4932 %float_2097152 %4934
       %4936 = OpFMul %float %4915 %2596
       %4937 = OpExtInst %float %1 Sin %4935
       %4938 = OpFMul %float %4937 %4936
       %4939 = OpCompositeConstruct %v3float %548 %548 %4917
       %4940 = OpCompositeConstruct %v3float %548 %548 %4938
       %4941 = OpFAdd %v3float %4939 %4940
       %4942 = OpFMul %float %4918 %4450
       %4943 = OpFDiv %float %float_2 %4942
       %4944 = OpFMul %float %4487 %4943
       %4945 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_77 %int_0
       %4946 = OpLoad %float %4945
       %4947 = OpFMul %float %4943 %4946
       %4948 = OpFMul %float %4947 %3855
       %4949 = OpExtInst %float %1 Fma %4488 %4943 %4948
       %4950 = OpExtInst %float %1 Floor %4944
       %4951 = OpFNegate %float %4950
       %4952 = OpExtInst %float %1 Fma %4487 %4943 %4951
       %4953 = OpExtInst %float %1 Fma %4952 %float_2097152 %4949
       %4954 = OpExtInst %float %1 Floor %4953
       %4955 = OpFMul %float %4950 %float_n6_28318548
       %4956 = OpExtInst %float %1 Fma %4944 %float_6_28318548 %4955
       %4957 = OpFMul %float %4954 %float_n6_28318548
       %4958 = OpExtInst %float %1 Fma %4949 %float_6_28318548 %4957
       %4959 = OpExtInst %float %1 Fma %4956 %float_2097152 %4958
       %4960 = OpFMul %float %4936 %2596
       %4961 = OpExtInst %float %1 Sin %4959
       %4962 = OpFMul %float %4961 %4960
       %4963 = OpCompositeConstruct %v3float %548 %548 %4962
       %4964 = OpFAdd %v3float %4941 %4963
       %4965 = OpFMul %float %4942 %4450
       %4966 = OpFDiv %float %float_2 %4965
       %4967 = OpFMul %float %4524 %4966
       %4968 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_77 %int_1
       %4969 = OpLoad %float %4968
       %4970 = OpFMul %float %4966 %4969
       %4971 = OpFMul %float %4970 %3855
       %4972 = OpExtInst %float %1 Fma %4525 %4966 %4971
       %4973 = OpExtInst %float %1 Floor %4967
       %4974 = OpFNegate %float %4973
       %4975 = OpExtInst %float %1 Fma %4524 %4966 %4974
       %4976 = OpExtInst %float %1 Fma %4975 %float_2097152 %4972
       %4977 = OpExtInst %float %1 Floor %4976
       %4978 = OpFMul %float %4973 %float_n6_28318548
       %4979 = OpExtInst %float %1 Fma %4967 %float_6_28318548 %4978
       %4980 = OpFMul %float %4977 %float_n6_28318548
       %4981 = OpExtInst %float %1 Fma %4972 %float_6_28318548 %4980
       %4982 = OpExtInst %float %1 Fma %4979 %float_2097152 %4981
       %4983 = OpFMul %float %4960 %2596
       %4984 = OpExtInst %float %1 Sin %4982
       %4985 = OpFMul %float %4984 %4983
       %4986 = OpCompositeConstruct %v3float %548 %548 %4985
       %4987 = OpFAdd %v3float %4964 %4986
       %4988 = OpFMul %float %4896 %4592
       %4989 = OpFMul %float %4595 %4988
       %4990 = OpFDiv %float %float_2 %4989
       %4991 = OpFMul %float %4589 %4990
       %4992 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_77 %int_2
       %4993 = OpLoad %float %4992
       %4994 = OpFMul %float %4990 %4993
       %4995 = OpFMul %float %4994 %3855
       %4996 = OpExtInst %float %1 Fma %4590 %4990 %4995
       %4997 = OpExtInst %float %1 Floor %4991
       %4998 = OpFNegate %float %4997
       %4999 = OpExtInst %float %1 Fma %4589 %4990 %4998
       %5000 = OpExtInst %float %1 Fma %4999 %float_2097152 %4996
       %5001 = OpExtInst %float %1 Floor %5000
       %5002 = OpFMul %float %4997 %float_n6_28318548
       %5003 = OpExtInst %float %1 Fma %4991 %float_6_28318548 %5002
       %5004 = OpFMul %float %5001 %float_n6_28318548
       %5005 = OpExtInst %float %1 Fma %4996 %float_6_28318548 %5004
       %5006 = OpExtInst %float %1 Fma %5003 %float_2097152 %5005
       %5007 = OpFMul %float %4915 %2735
       %5008 = OpExtInst %float %1 Sin %5006
       %5009 = OpFMul %float %5008 %5007
       %5010 = OpFMul %float %4989 %4450
       %5011 = OpFDiv %float %float_2 %5010
       %5012 = OpFMul %float %4629 %5011
       %5013 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_77 %int_3
       %5014 = OpLoad %float %5013
       %5015 = OpFMul %float %5011 %5014
       %5016 = OpFMul %float %5015 %3855
       %5017 = OpExtInst %float %1 Fma %4630 %5011 %5016
       %5018 = OpExtInst %float %1 Floor %5012
       %5019 = OpFNegate %float %5018
       %5020 = OpExtInst %float %1 Fma %4629 %5011 %5019
       %5021 = OpExtInst %float %1 Fma %5020 %float_2097152 %5017
       %5022 = OpExtInst %float %1 Floor %5021
       %5023 = OpFMul %float %5018 %float_n6_28318548
       %5024 = OpExtInst %float %1 Fma %5012 %float_6_28318548 %5023
       %5025 = OpFMul %float %5022 %float_n6_28318548
       %5026 = OpExtInst %float %1 Fma %5017 %float_6_28318548 %5025
       %5027 = OpExtInst %float %1 Fma %5024 %float_2097152 %5026
       %5028 = OpFMul %float %5007 %2596
       %5029 = OpExtInst %float %1 Sin %5027
       %5030 = OpFMul %float %5029 %5028
       %5031 = OpCompositeConstruct %v3float %548 %548 %5009
       %5032 = OpCompositeConstruct %v3float %548 %548 %5030
       %5033 = OpFAdd %v3float %5031 %5032
       %5034 = OpFMul %float %5010 %4450
       %5035 = OpFDiv %float %float_2 %5034
       %5036 = OpFMul %float %4667 %5035
       %5037 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_0
       %5038 = OpLoad %float %5037
       %5039 = OpFMul %float %5035 %5038
       %5040 = OpFMul %float %5039 %3855
       %5041 = OpExtInst %float %1 Fma %4668 %5035 %5040
       %5042 = OpExtInst %float %1 Floor %5036
       %5043 = OpFNegate %float %5042
       %5044 = OpExtInst %float %1 Fma %4667 %5035 %5043
       %5045 = OpExtInst %float %1 Fma %5044 %float_2097152 %5041
       %5046 = OpExtInst %float %1 Floor %5045
       %5047 = OpFMul %float %5042 %float_n6_28318548
       %5048 = OpExtInst %float %1 Fma %5036 %float_6_28318548 %5047
       %5049 = OpFMul %float %5046 %float_n6_28318548
       %5050 = OpExtInst %float %1 Fma %5041 %float_6_28318548 %5049
       %5051 = OpExtInst %float %1 Fma %5048 %float_2097152 %5050
       %5052 = OpFMul %float %5028 %2596
       %5053 = OpExtInst %float %1 Sin %5051
       %5054 = OpFMul %float %5053 %5052
       %5055 = OpCompositeConstruct %v3float %548 %548 %5054
       %5056 = OpFAdd %v3float %5033 %5055
       %5057 = OpFMul %float %5034 %4450
       %5058 = OpFDiv %float %float_2 %5057
       %5059 = OpFMul %float %4704 %5058
       %5060 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_1
       %5061 = OpLoad %float %5060
       %5062 = OpFMul %float %5058 %5061
       %5063 = OpFMul %float %5062 %3855
       %5064 = OpExtInst %float %1 Fma %4705 %5058 %5063
       %5065 = OpExtInst %float %1 Floor %5059
       %5066 = OpFNegate %float %5065
       %5067 = OpExtInst %float %1 Fma %4704 %5058 %5066
       %5068 = OpExtInst %float %1 Fma %5067 %float_2097152 %5064
       %5069 = OpExtInst %float %1 Floor %5068
       %5070 = OpFMul %float %5065 %float_n6_28318548
       %5071 = OpExtInst %float %1 Fma %5059 %float_6_28318548 %5070
       %5072 = OpFMul %float %5069 %float_n6_28318548
       %5073 = OpExtInst %float %1 Fma %5064 %float_6_28318548 %5072
       %5074 = OpExtInst %float %1 Fma %5071 %float_2097152 %5073
       %5075 = OpFMul %float %5052 %2596
       %5076 = OpExtInst %float %1 Sin %5074
       %5077 = OpFMul %float %5076 %5075
       %5078 = OpCompositeConstruct %v3float %548 %548 %5077
       %5079 = OpFAdd %v3float %5056 %5078
       %5080 = OpFAdd %v3float %4987 %5079
       %5081 = OpFMul %float %4773 %4988
       %5082 = OpFDiv %float %float_2 %5081
       %5083 = OpFMul %float %4770 %5082
       %5084 = OpFMul %float %5082 %4993
       %5085 = OpFMul %float %5084 %3855
       %5086 = OpExtInst %float %1 Fma %4771 %5082 %5085
       %5087 = OpExtInst %float %1 Floor %5083
       %5088 = OpFNegate %float %5087
       %5089 = OpExtInst %float %1 Fma %4770 %5082 %5088
       %5090 = OpExtInst %float %1 Fma %5089 %float_2097152 %5086
       %5091 = OpExtInst %float %1 Floor %5090
       %5092 = OpFMul %float %5087 %float_n6_28318548
       %5093 = OpExtInst %float %1 Fma %5083 %float_6_28318548 %5092
       %5094 = OpFMul %float %5091 %float_n6_28318548
       %5095 = OpExtInst %float %1 Fma %5086 %float_6_28318548 %5094
       %5096 = OpExtInst %float %1 Fma %5093 %float_2097152 %5095
       %5097 = OpExtInst %float %1 Sin %5096
       %5098 = OpFMul %float %5097 %5007
       %5099 = OpFMul %float %5081 %4450
       %5100 = OpFDiv %float %float_2 %5099
       %5101 = OpFMul %float %4804 %5100
       %5102 = OpFMul %float %5100 %5014
       %5103 = OpFMul %float %5102 %3855
       %5104 = OpExtInst %float %1 Fma %4805 %5100 %5103
       %5105 = OpExtInst %float %1 Floor %5101
       %5106 = OpFNegate %float %5105
       %5107 = OpExtInst %float %1 Fma %4804 %5100 %5106
       %5108 = OpExtInst %float %1 Fma %5107 %float_2097152 %5104
       %5109 = OpExtInst %float %1 Floor %5108
       %5110 = OpFMul %float %5105 %float_n6_28318548
       %5111 = OpExtInst %float %1 Fma %5101 %float_6_28318548 %5110
       %5112 = OpFMul %float %5109 %float_n6_28318548
       %5113 = OpExtInst %float %1 Fma %5104 %float_6_28318548 %5112
       %5114 = OpExtInst %float %1 Fma %5111 %float_2097152 %5113
       %5115 = OpExtInst %float %1 Sin %5114
       %5116 = OpFMul %float %5115 %5028
       %5117 = OpCompositeConstruct %v3float %548 %548 %5098
       %5118 = OpCompositeConstruct %v3float %548 %548 %5116
       %5119 = OpFAdd %v3float %5117 %5118
       %5120 = OpFMul %float %5099 %4450
       %5121 = OpFDiv %float %float_2 %5120
       %5122 = OpFMul %float %4839 %5121
       %5123 = OpFMul %float %5121 %5038
       %5124 = OpFMul %float %5123 %3855
       %5125 = OpExtInst %float %1 Fma %4840 %5121 %5124
       %5126 = OpExtInst %float %1 Floor %5122
       %5127 = OpFNegate %float %5126
       %5128 = OpExtInst %float %1 Fma %4839 %5121 %5127
       %5129 = OpExtInst %float %1 Fma %5128 %float_2097152 %5125
       %5130 = OpExtInst %float %1 Floor %5129
       %5131 = OpFMul %float %5126 %float_n6_28318548
       %5132 = OpExtInst %float %1 Fma %5122 %float_6_28318548 %5131
       %5133 = OpFMul %float %5130 %float_n6_28318548
       %5134 = OpExtInst %float %1 Fma %5125 %float_6_28318548 %5133
       %5135 = OpExtInst %float %1 Fma %5132 %float_2097152 %5134
       %5136 = OpExtInst %float %1 Sin %5135
       %5137 = OpFMul %float %5136 %5052
       %5138 = OpCompositeConstruct %v3float %548 %548 %5137
       %5139 = OpFAdd %v3float %5119 %5138
       %5140 = OpFMul %float %5120 %4450
       %5141 = OpFDiv %float %float_2 %5140
       %5142 = OpFMul %float %4873 %5141
       %5143 = OpFMul %float %5141 %5061
       %5144 = OpFMul %float %5143 %3855
       %5145 = OpExtInst %float %1 Fma %4874 %5141 %5144
       %5146 = OpExtInst %float %1 Floor %5142
       %5147 = OpFNegate %float %5146
       %5148 = OpExtInst %float %1 Fma %4873 %5141 %5147
       %5149 = OpExtInst %float %1 Fma %5148 %float_2097152 %5145
       %5150 = OpExtInst %float %1 Floor %5149
       %5151 = OpFMul %float %5146 %float_n6_28318548
       %5152 = OpExtInst %float %1 Fma %5142 %float_6_28318548 %5151
       %5153 = OpFMul %float %5150 %float_n6_28318548
       %5154 = OpExtInst %float %1 Fma %5145 %float_6_28318548 %5153
       %5155 = OpExtInst %float %1 Fma %5152 %float_2097152 %5154
       %5156 = OpExtInst %float %1 Sin %5155
       %5157 = OpFMul %float %5156 %5075
       %5158 = OpCompositeConstruct %v3float %548 %548 %5157
       %5159 = OpFAdd %v3float %5139 %5158
       %5160 = OpFAdd %v3float %5080 %5159
       %5161 = OpFMul %float %3568 %float_4
       %5162 = OpFMul %float %3570 %5161
       %5163 = OpFDiv %float %float_2 %5162
       %5164 = OpFMul %float %3564 %5163
       %5165 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_2
       %5166 = OpLoad %float %5165
       %5167 = OpFMul %float %5163 %5166
       %5168 = OpFMul %float %5167 %3855
       %5169 = OpExtInst %float %1 Fma %3565 %5163 %5168
       %5170 = OpExtInst %float %1 Floor %5164
       %5171 = OpFNegate %float %5170
       %5172 = OpExtInst %float %1 Fma %3564 %5163 %5171
       %5173 = OpExtInst %float %1 Fma %5172 %float_2097152 %5169
       %5174 = OpExtInst %float %1 Floor %5173
       %5175 = OpFMul %float %5170 %float_n6_28318548
       %5176 = OpExtInst %float %1 Fma %5164 %float_6_28318548 %5175
       %5177 = OpFMul %float %5174 %float_n6_28318548
       %5178 = OpExtInst %float %1 Fma %5169 %float_6_28318548 %5177
       %5179 = OpExtInst %float %1 Fma %5176 %float_2097152 %5178
       %5180 = OpExtInst %float %1 Sin %5179
       %5181 = OpFMul %float %5180 %4915
       %5182 = OpFMul %float %5162 %4450
       %5183 = OpFDiv %float %float_2 %5182
       %5184 = OpFMul %float %4447 %5183
       %5185 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_3
       %5186 = OpLoad %float %5185
       %5187 = OpFMul %float %5183 %5186
       %5188 = OpFMul %float %5187 %3855
       %5189 = OpExtInst %float %1 Fma %4448 %5183 %5188
       %5190 = OpExtInst %float %1 Floor %5184
       %5191 = OpFNegate %float %5190
       %5192 = OpExtInst %float %1 Fma %4447 %5183 %5191
       %5193 = OpExtInst %float %1 Fma %5192 %float_2097152 %5189
       %5194 = OpExtInst %float %1 Floor %5193
       %5195 = OpFMul %float %5190 %float_n6_28318548
       %5196 = OpExtInst %float %1 Fma %5184 %float_6_28318548 %5195
       %5197 = OpFMul %float %5194 %float_n6_28318548
       %5198 = OpExtInst %float %1 Fma %5189 %float_6_28318548 %5197
       %5199 = OpExtInst %float %1 Fma %5196 %float_2097152 %5198
       %5200 = OpExtInst %float %1 Sin %5199
       %5201 = OpFMul %float %5200 %4936
       %5202 = OpCompositeConstruct %v3float %548 %548 %5181
       %5203 = OpCompositeConstruct %v3float %548 %548 %5201
       %5204 = OpFAdd %v3float %5202 %5203
       %5205 = OpFMul %float %5182 %4450
       %5206 = OpFDiv %float %float_2 %5205
       %5207 = OpFMul %float %4487 %5206
       %5208 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_0
       %5209 = OpLoad %float %5208
       %5210 = OpFMul %float %5206 %5209
       %5211 = OpFMul %float %5210 %3855
       %5212 = OpExtInst %float %1 Fma %4488 %5206 %5211
       %5213 = OpExtInst %float %1 Floor %5207
       %5214 = OpFNegate %float %5213
       %5215 = OpExtInst %float %1 Fma %4487 %5206 %5214
       %5216 = OpExtInst %float %1 Fma %5215 %float_2097152 %5212
       %5217 = OpExtInst %float %1 Floor %5216
       %5218 = OpFMul %float %5213 %float_n6_28318548
       %5219 = OpExtInst %float %1 Fma %5207 %float_6_28318548 %5218
       %5220 = OpFMul %float %5217 %float_n6_28318548
       %5221 = OpExtInst %float %1 Fma %5212 %float_6_28318548 %5220
       %5222 = OpExtInst %float %1 Fma %5219 %float_2097152 %5221
       %5223 = OpExtInst %float %1 Sin %5222
       %5224 = OpFMul %float %5223 %4960
       %5225 = OpCompositeConstruct %v3float %548 %548 %5224
       %5226 = OpFAdd %v3float %5204 %5225
       %5227 = OpFMul %float %5205 %4450
       %5228 = OpFDiv %float %float_2 %5227
       %5229 = OpFMul %float %4524 %5228
       %5230 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_1
       %5231 = OpLoad %float %5230
       %5232 = OpFMul %float %5228 %5231
       %5233 = OpFMul %float %5232 %3855
       %5234 = OpExtInst %float %1 Fma %4525 %5228 %5233
       %5235 = OpExtInst %float %1 Floor %5229
       %5236 = OpFNegate %float %5235
       %5237 = OpExtInst %float %1 Fma %4524 %5228 %5236
       %5238 = OpExtInst %float %1 Fma %5237 %float_2097152 %5234
       %5239 = OpExtInst %float %1 Floor %5238
       %5240 = OpFMul %float %5235 %float_n6_28318548
       %5241 = OpExtInst %float %1 Fma %5229 %float_6_28318548 %5240
       %5242 = OpFMul %float %5239 %float_n6_28318548
       %5243 = OpExtInst %float %1 Fma %5234 %float_6_28318548 %5242
       %5244 = OpExtInst %float %1 Fma %5241 %float_2097152 %5243
       %5245 = OpExtInst %float %1 Sin %5244
       %5246 = OpFMul %float %5245 %4983
       %5247 = OpCompositeConstruct %v3float %548 %548 %5246
       %5248 = OpFAdd %v3float %5226 %5247
       %5249 = OpFMul %float %5161 %4592
       %5250 = OpFMul %float %4595 %5249
       %5251 = OpFDiv %float %float_2 %5250
       %5252 = OpFMul %float %4589 %5251
       %5253 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_2
       %5254 = OpLoad %float %5253
       %5255 = OpFMul %float %5251 %5254
       %5256 = OpFMul %float %5255 %3855
       %5257 = OpExtInst %float %1 Fma %4590 %5251 %5256
       %5258 = OpExtInst %float %1 Floor %5252
       %5259 = OpFNegate %float %5258
       %5260 = OpExtInst %float %1 Fma %4589 %5251 %5259
       %5261 = OpExtInst %float %1 Fma %5260 %float_2097152 %5257
       %5262 = OpExtInst %float %1 Floor %5261
       %5263 = OpFMul %float %5258 %float_n6_28318548
       %5264 = OpExtInst %float %1 Fma %5252 %float_6_28318548 %5263
       %5265 = OpFMul %float %5262 %float_n6_28318548
       %5266 = OpExtInst %float %1 Fma %5257 %float_6_28318548 %5265
       %5267 = OpExtInst %float %1 Fma %5264 %float_2097152 %5266
       %5268 = OpExtInst %float %1 Sin %5267
       %5269 = OpFMul %float %5268 %5007
       %5270 = OpFMul %float %5250 %4450
       %5271 = OpFDiv %float %float_2 %5270
       %5272 = OpFMul %float %4629 %5271
       %5273 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_3
       %5274 = OpLoad %float %5273
       %5275 = OpFMul %float %5271 %5274
       %5276 = OpFMul %float %5275 %3855
       %5277 = OpExtInst %float %1 Fma %4630 %5271 %5276
       %5278 = OpExtInst %float %1 Floor %5272
       %5279 = OpFNegate %float %5278
       %5280 = OpExtInst %float %1 Fma %4629 %5271 %5279
       %5281 = OpExtInst %float %1 Fma %5280 %float_2097152 %5277
       %5282 = OpExtInst %float %1 Floor %5281
       %5283 = OpFMul %float %5278 %float_n6_28318548
       %5284 = OpExtInst %float %1 Fma %5272 %float_6_28318548 %5283
       %5285 = OpFMul %float %5282 %float_n6_28318548
       %5286 = OpExtInst %float %1 Fma %5277 %float_6_28318548 %5285
       %5287 = OpExtInst %float %1 Fma %5284 %float_2097152 %5286
       %5288 = OpExtInst %float %1 Sin %5287
       %5289 = OpFMul %float %5288 %5028
       %5290 = OpCompositeConstruct %v3float %548 %548 %5269
       %5291 = OpCompositeConstruct %v3float %548 %548 %5289
       %5292 = OpFAdd %v3float %5290 %5291
       %5293 = OpFMul %float %5270 %4450
       %5294 = OpFDiv %float %float_2 %5293
       %5295 = OpFMul %float %4667 %5294
       %5296 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_80 %int_0
       %5297 = OpLoad %float %5296
       %5298 = OpFMul %float %5294 %5297
       %5299 = OpFMul %float %5298 %3855
       %5300 = OpExtInst %float %1 Fma %4668 %5294 %5299
       %5301 = OpExtInst %float %1 Floor %5295
       %5302 = OpFNegate %float %5301
       %5303 = OpExtInst %float %1 Fma %4667 %5294 %5302
       %5304 = OpExtInst %float %1 Fma %5303 %float_2097152 %5300
       %5305 = OpExtInst %float %1 Floor %5304
       %5306 = OpFMul %float %5301 %float_n6_28318548
       %5307 = OpExtInst %float %1 Fma %5295 %float_6_28318548 %5306
       %5308 = OpFMul %float %5305 %float_n6_28318548
       %5309 = OpExtInst %float %1 Fma %5300 %float_6_28318548 %5308
       %5310 = OpExtInst %float %1 Fma %5307 %float_2097152 %5309
       %5311 = OpExtInst %float %1 Sin %5310
       %5312 = OpFMul %float %5311 %5052
       %5313 = OpCompositeConstruct %v3float %548 %548 %5312
       %5314 = OpFAdd %v3float %5292 %5313
       %5315 = OpFMul %float %5293 %4450
       %5316 = OpFDiv %float %float_2 %5315
       %5317 = OpFMul %float %4704 %5316
       %5318 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_80 %int_1
       %5319 = OpLoad %float %5318
       %5320 = OpFMul %float %5316 %5319
       %5321 = OpFMul %float %5320 %3855
       %5322 = OpExtInst %float %1 Fma %4705 %5316 %5321
       %5323 = OpExtInst %float %1 Floor %5317
       %5324 = OpFNegate %float %5323
       %5325 = OpExtInst %float %1 Fma %4704 %5316 %5324
       %5326 = OpExtInst %float %1 Fma %5325 %float_2097152 %5322
       %5327 = OpExtInst %float %1 Floor %5326
       %5328 = OpFMul %float %5323 %float_n6_28318548
       %5329 = OpExtInst %float %1 Fma %5317 %float_6_28318548 %5328
       %5330 = OpFMul %float %5327 %float_n6_28318548
       %5331 = OpExtInst %float %1 Fma %5322 %float_6_28318548 %5330
       %5332 = OpExtInst %float %1 Fma %5329 %float_2097152 %5331
       %5333 = OpExtInst %float %1 Sin %5332
       %5334 = OpFMul %float %5333 %5075
       %5335 = OpCompositeConstruct %v3float %548 %548 %5334
       %5336 = OpFAdd %v3float %5314 %5335
       %5337 = OpFAdd %v3float %5248 %5336
       %5338 = OpFMul %float %4773 %5249
       %5339 = OpFDiv %float %float_2 %5338
       %5340 = OpFMul %float %4770 %5339
       %5341 = OpFMul %float %5339 %5254
       %5342 = OpFMul %float %5341 %3855
       %5343 = OpExtInst %float %1 Fma %4771 %5339 %5342
       %5344 = OpExtInst %float %1 Floor %5340
       %5345 = OpFNegate %float %5344
       %5346 = OpExtInst %float %1 Fma %4770 %5339 %5345
       %5347 = OpExtInst %float %1 Fma %5346 %float_2097152 %5343
       %5348 = OpExtInst %float %1 Floor %5347
       %5349 = OpFMul %float %5344 %float_n6_28318548
       %5350 = OpExtInst %float %1 Fma %5340 %float_6_28318548 %5349
       %5351 = OpFMul %float %5348 %float_n6_28318548
       %5352 = OpExtInst %float %1 Fma %5343 %float_6_28318548 %5351
       %5353 = OpExtInst %float %1 Fma %5350 %float_2097152 %5352
       %5354 = OpExtInst %float %1 Sin %5353
       %5355 = OpFMul %float %5354 %5007
       %5356 = OpFMul %float %5338 %4450
       %5357 = OpFDiv %float %float_2 %5356
       %5358 = OpFMul %float %4804 %5357
       %5359 = OpFMul %float %5357 %5274
       %5360 = OpFMul %float %5359 %3855
       %5361 = OpExtInst %float %1 Fma %4805 %5357 %5360
       %5362 = OpExtInst %float %1 Floor %5358
       %5363 = OpFNegate %float %5362
       %5364 = OpExtInst %float %1 Fma %4804 %5357 %5363
       %5365 = OpExtInst %float %1 Fma %5364 %float_2097152 %5361
       %5366 = OpExtInst %float %1 Floor %5365
       %5367 = OpFMul %float %5362 %float_n6_28318548
       %5368 = OpExtInst %float %1 Fma %5358 %float_6_28318548 %5367
       %5369 = OpFMul %float %5366 %float_n6_28318548
       %5370 = OpExtInst %float %1 Fma %5361 %float_6_28318548 %5369
       %5371 = OpExtInst %float %1 Fma %5368 %float_2097152 %5370
       %5372 = OpExtInst %float %1 Sin %5371
       %5373 = OpFMul %float %5372 %5028
       %5374 = OpCompositeConstruct %v3float %548 %548 %5355
       %5375 = OpCompositeConstruct %v3float %548 %548 %5373
       %5376 = OpFAdd %v3float %5374 %5375
       %5377 = OpFMul %float %5356 %4450
       %5378 = OpFDiv %float %float_2 %5377
       %5379 = OpFMul %float %4839 %5378
       %5380 = OpFMul %float %5378 %5297
       %5381 = OpFMul %float %5380 %3855
       %5382 = OpExtInst %float %1 Fma %4840 %5378 %5381
       %5383 = OpExtInst %float %1 Floor %5379
       %5384 = OpFNegate %float %5383
       %5385 = OpExtInst %float %1 Fma %4839 %5378 %5384
       %5386 = OpExtInst %float %1 Fma %5385 %float_2097152 %5382
       %5387 = OpExtInst %float %1 Floor %5386
       %5388 = OpFMul %float %5383 %float_n6_28318548
       %5389 = OpExtInst %float %1 Fma %5379 %float_6_28318548 %5388
       %5390 = OpFMul %float %5387 %float_n6_28318548
       %5391 = OpExtInst %float %1 Fma %5382 %float_6_28318548 %5390
       %5392 = OpExtInst %float %1 Fma %5389 %float_2097152 %5391
       %5393 = OpExtInst %float %1 Sin %5392
       %5394 = OpFMul %float %5393 %5052
       %5395 = OpCompositeConstruct %v3float %548 %548 %5394
       %5396 = OpFAdd %v3float %5376 %5395
       %5397 = OpFMul %float %5377 %4450
       %5398 = OpFDiv %float %float_2 %5397
       %5399 = OpFMul %float %4873 %5398
       %5400 = OpFMul %float %5398 %5319
       %5401 = OpFMul %float %5400 %3855
       %5402 = OpExtInst %float %1 Fma %4874 %5398 %5401
       %5403 = OpExtInst %float %1 Floor %5399
       %5404 = OpFNegate %float %5403
       %5405 = OpExtInst %float %1 Fma %4873 %5398 %5404
       %5406 = OpExtInst %float %1 Fma %5405 %float_2097152 %5402
       %5407 = OpExtInst %float %1 Floor %5406
       %5408 = OpFMul %float %5403 %float_n6_28318548
       %5409 = OpExtInst %float %1 Fma %5399 %float_6_28318548 %5408
       %5410 = OpFMul %float %5407 %float_n6_28318548
       %5411 = OpExtInst %float %1 Fma %5402 %float_6_28318548 %5410
       %5412 = OpExtInst %float %1 Fma %5409 %float_2097152 %5411
       %5413 = OpExtInst %float %1 Sin %5412
       %5414 = OpFMul %float %5413 %5075
       %5415 = OpCompositeConstruct %v3float %548 %548 %5414
       %5416 = OpFAdd %v3float %5396 %5415
       %5417 = OpFAdd %v3float %5337 %5416
       %5418 = OpFMul %float %3568 %float_0_75
       %5419 = OpFMul %float %3570 %5418
       %5420 = OpFDiv %float %float_2 %5419
       %5421 = OpFMul %float %3564 %5420
       %5422 = OpFMul %float %5420 %4901
       %5423 = OpFMul %float %5422 %3855
       %5424 = OpExtInst %float %1 Fma %3565 %5420 %5423
       %5425 = OpExtInst %float %1 Floor %5421
       %5426 = OpFNegate %float %5425
       %5427 = OpExtInst %float %1 Fma %3564 %5420 %5426
       %5428 = OpExtInst %float %1 Fma %5427 %float_2097152 %5424
       %5429 = OpExtInst %float %1 Floor %5428
       %5430 = OpFMul %float %5425 %float_n6_28318548
       %5431 = OpExtInst %float %1 Fma %5421 %float_6_28318548 %5430
       %5432 = OpFMul %float %5429 %float_n6_28318548
       %5433 = OpExtInst %float %1 Fma %5424 %float_6_28318548 %5432
       %5434 = OpExtInst %float %1 Fma %5431 %float_2097152 %5433
       %5435 = OpFMul %float %4432 %float_0_5
       %5436 = OpExtInst %float %1 Sin %5434
       %5437 = OpFMul %float %5436 %5435
       %5438 = OpFMul %float %5419 %4450
       %5439 = OpFDiv %float %float_2 %5438
       %5440 = OpFMul %float %4447 %5439
       %5441 = OpFMul %float %5439 %4922
       %5442 = OpFMul %float %5441 %3855
       %5443 = OpExtInst %float %1 Fma %4448 %5439 %5442
       %5444 = OpExtInst %float %1 Floor %5440
       %5445 = OpFNegate %float %5444
       %5446 = OpExtInst %float %1 Fma %4447 %5439 %5445
       %5447 = OpExtInst %float %1 Fma %5446 %float_2097152 %5443
       %5448 = OpExtInst %float %1 Floor %5447
       %5449 = OpFMul %float %5444 %float_n6_28318548
       %5450 = OpExtInst %float %1 Fma %5440 %float_6_28318548 %5449
       %5451 = OpFMul %float %5448 %float_n6_28318548
       %5452 = OpExtInst %float %1 Fma %5443 %float_6_28318548 %5451
       %5453 = OpExtInst %float %1 Fma %5450 %float_2097152 %5452
       %5454 = OpFMul %float %5435 %2596
       %5455 = OpExtInst %float %1 Sin %5453
       %5456 = OpFMul %float %5455 %5454
       %5457 = OpCompositeConstruct %v3float %548 %548 %5437
       %5458 = OpCompositeConstruct %v3float %548 %548 %5456
       %5459 = OpFAdd %v3float %5457 %5458
       %5460 = OpFMul %float %5438 %4450
       %5461 = OpFDiv %float %float_2 %5460
       %5462 = OpFMul %float %4487 %5461
       %5463 = OpFMul %float %5461 %4946
       %5464 = OpFMul %float %5463 %3855
       %5465 = OpExtInst %float %1 Fma %4488 %5461 %5464
       %5466 = OpExtInst %float %1 Floor %5462
       %5467 = OpFNegate %float %5466
       %5468 = OpExtInst %float %1 Fma %4487 %5461 %5467
       %5469 = OpExtInst %float %1 Fma %5468 %float_2097152 %5465
       %5470 = OpExtInst %float %1 Floor %5469
       %5471 = OpFMul %float %5466 %float_n6_28318548
       %5472 = OpExtInst %float %1 Fma %5462 %float_6_28318548 %5471
       %5473 = OpFMul %float %5470 %float_n6_28318548
       %5474 = OpExtInst %float %1 Fma %5465 %float_6_28318548 %5473
       %5475 = OpExtInst %float %1 Fma %5472 %float_2097152 %5474
       %5476 = OpFMul %float %5454 %2596
       %5477 = OpExtInst %float %1 Sin %5475
       %5478 = OpFMul %float %5477 %5476
       %5479 = OpCompositeConstruct %v3float %548 %548 %5478
       %5480 = OpFAdd %v3float %5459 %5479
       %5481 = OpFMul %float %5460 %4450
       %5482 = OpFDiv %float %float_2 %5481
       %5483 = OpFMul %float %4524 %5482
       %5484 = OpFMul %float %5482 %4969
       %5485 = OpFMul %float %5484 %3855
       %5486 = OpExtInst %float %1 Fma %4525 %5482 %5485
       %5487 = OpExtInst %float %1 Floor %5483
       %5488 = OpFNegate %float %5487
       %5489 = OpExtInst %float %1 Fma %4524 %5482 %5488
       %5490 = OpExtInst %float %1 Fma %5489 %float_2097152 %5486
       %5491 = OpExtInst %float %1 Floor %5490
       %5492 = OpFMul %float %5487 %float_n6_28318548
       %5493 = OpExtInst %float %1 Fma %5483 %float_6_28318548 %5492
       %5494 = OpFMul %float %5491 %float_n6_28318548
       %5495 = OpExtInst %float %1 Fma %5486 %float_6_28318548 %5494
       %5496 = OpExtInst %float %1 Fma %5493 %float_2097152 %5495
       %5497 = OpFMul %float %5476 %2596
       %5498 = OpExtInst %float %1 Sin %5496
       %5499 = OpFMul %float %5498 %5497
       %5500 = OpCompositeConstruct %v3float %548 %548 %5499
       %5501 = OpFAdd %v3float %5480 %5500
       %5502 = OpFMul %float %5418 %4592
       %5503 = OpFMul %float %4595 %5502
       %5504 = OpFDiv %float %float_2 %5503
       %5505 = OpFMul %float %4589 %5504
       %5506 = OpFMul %float %5504 %4993
       %5507 = OpFMul %float %5506 %3855
       %5508 = OpExtInst %float %1 Fma %4590 %5504 %5507
       %5509 = OpExtInst %float %1 Floor %5505
       %5510 = OpFNegate %float %5509
       %5511 = OpExtInst %float %1 Fma %4589 %5504 %5510
       %5512 = OpExtInst %float %1 Fma %5511 %float_2097152 %5508
       %5513 = OpExtInst %float %1 Floor %5512
       %5514 = OpFMul %float %5509 %float_n6_28318548
       %5515 = OpExtInst %float %1 Fma %5505 %float_6_28318548 %5514
       %5516 = OpFMul %float %5513 %float_n6_28318548
       %5517 = OpExtInst %float %1 Fma %5508 %float_6_28318548 %5516
       %5518 = OpExtInst %float %1 Fma %5515 %float_2097152 %5517
       %5519 = OpFMul %float %5435 %2735
       %5520 = OpExtInst %float %1 Sin %5518
       %5521 = OpFMul %float %5520 %5519
       %5522 = OpFMul %float %5503 %4450
       %5523 = OpFDiv %float %float_2 %5522
       %5524 = OpFMul %float %4629 %5523
       %5525 = OpFMul %float %5523 %5014
       %5526 = OpFMul %float %5525 %3855
       %5527 = OpExtInst %float %1 Fma %4630 %5523 %5526
       %5528 = OpExtInst %float %1 Floor %5524
       %5529 = OpFNegate %float %5528
       %5530 = OpExtInst %float %1 Fma %4629 %5523 %5529
       %5531 = OpExtInst %float %1 Fma %5530 %float_2097152 %5527
       %5532 = OpExtInst %float %1 Floor %5531
       %5533 = OpFMul %float %5528 %float_n6_28318548
       %5534 = OpExtInst %float %1 Fma %5524 %float_6_28318548 %5533
       %5535 = OpFMul %float %5532 %float_n6_28318548
       %5536 = OpExtInst %float %1 Fma %5527 %float_6_28318548 %5535
       %5537 = OpExtInst %float %1 Fma %5534 %float_2097152 %5536
       %5538 = OpFMul %float %5519 %2596
       %5539 = OpExtInst %float %1 Sin %5537
       %5540 = OpFMul %float %5539 %5538
       %5541 = OpCompositeConstruct %v3float %548 %548 %5521
       %5542 = OpCompositeConstruct %v3float %548 %548 %5540
       %5543 = OpFAdd %v3float %5541 %5542
       %5544 = OpFMul %float %5522 %4450
       %5545 = OpFDiv %float %float_2 %5544
       %5546 = OpFMul %float %4667 %5545
       %5547 = OpFMul %float %5545 %5038
       %5548 = OpFMul %float %5547 %3855
       %5549 = OpExtInst %float %1 Fma %4668 %5545 %5548
       %5550 = OpExtInst %float %1 Floor %5546
       %5551 = OpFNegate %float %5550
       %5552 = OpExtInst %float %1 Fma %4667 %5545 %5551
       %5553 = OpExtInst %float %1 Fma %5552 %float_2097152 %5549
       %5554 = OpExtInst %float %1 Floor %5553
       %5555 = OpFMul %float %5550 %float_n6_28318548
       %5556 = OpExtInst %float %1 Fma %5546 %float_6_28318548 %5555
       %5557 = OpFMul %float %5554 %float_n6_28318548
       %5558 = OpExtInst %float %1 Fma %5549 %float_6_28318548 %5557
       %5559 = OpExtInst %float %1 Fma %5556 %float_2097152 %5558
       %5560 = OpFMul %float %5538 %2596
       %5561 = OpExtInst %float %1 Sin %5559
       %5562 = OpFMul %float %5561 %5560
       %5563 = OpCompositeConstruct %v3float %548 %548 %5562
       %5564 = OpFAdd %v3float %5543 %5563
       %5565 = OpFMul %float %5544 %4450
       %5566 = OpFDiv %float %float_2 %5565
       %5567 = OpFMul %float %4704 %5566
       %5568 = OpFMul %float %5566 %5061
       %5569 = OpFMul %float %5568 %3855
       %5570 = OpExtInst %float %1 Fma %4705 %5566 %5569
       %5571 = OpExtInst %float %1 Floor %5567
       %5572 = OpFNegate %float %5571
       %5573 = OpExtInst %float %1 Fma %4704 %5566 %5572
       %5574 = OpExtInst %float %1 Fma %5573 %float_2097152 %5570
       %5575 = OpExtInst %float %1 Floor %5574
       %5576 = OpFMul %float %5571 %float_n6_28318548
       %5577 = OpExtInst %float %1 Fma %5567 %float_6_28318548 %5576
       %5578 = OpFMul %float %5575 %float_n6_28318548
       %5579 = OpExtInst %float %1 Fma %5570 %float_6_28318548 %5578
       %5580 = OpExtInst %float %1 Fma %5577 %float_2097152 %5579
       %5581 = OpFMul %float %5560 %2596
       %5582 = OpExtInst %float %1 Sin %5580
       %5583 = OpFMul %float %5582 %5581
       %5584 = OpCompositeConstruct %v3float %548 %548 %5583
       %5585 = OpFAdd %v3float %5564 %5584
       %5586 = OpFAdd %v3float %5501 %5585
       %5587 = OpFMul %float %4773 %5502
       %5588 = OpFDiv %float %float_2 %5587
       %5589 = OpFMul %float %4770 %5588
       %5590 = OpFMul %float %5588 %4993
       %5591 = OpFMul %float %5590 %3855
       %5592 = OpExtInst %float %1 Fma %4771 %5588 %5591
       %5593 = OpExtInst %float %1 Floor %5589
       %5594 = OpFNegate %float %5593
       %5595 = OpExtInst %float %1 Fma %4770 %5588 %5594
       %5596 = OpExtInst %float %1 Fma %5595 %float_2097152 %5592
       %5597 = OpExtInst %float %1 Floor %5596
       %5598 = OpFMul %float %5593 %float_n6_28318548
       %5599 = OpExtInst %float %1 Fma %5589 %float_6_28318548 %5598
       %5600 = OpFMul %float %5597 %float_n6_28318548
       %5601 = OpExtInst %float %1 Fma %5592 %float_6_28318548 %5600
       %5602 = OpExtInst %float %1 Fma %5599 %float_2097152 %5601
       %5603 = OpExtInst %float %1 Sin %5602
       %5604 = OpFMul %float %5603 %5519
       %5605 = OpFMul %float %5587 %4450
       %5606 = OpFDiv %float %float_2 %5605
       %5607 = OpFMul %float %4804 %5606
       %5608 = OpFMul %float %5606 %5014
       %5609 = OpFMul %float %5608 %3855
       %5610 = OpExtInst %float %1 Fma %4805 %5606 %5609
       %5611 = OpExtInst %float %1 Floor %5607
       %5612 = OpFNegate %float %5611
       %5613 = OpExtInst %float %1 Fma %4804 %5606 %5612
       %5614 = OpExtInst %float %1 Fma %5613 %float_2097152 %5610
       %5615 = OpExtInst %float %1 Floor %5614
       %5616 = OpFMul %float %5611 %float_n6_28318548
       %5617 = OpExtInst %float %1 Fma %5607 %float_6_28318548 %5616
       %5618 = OpFMul %float %5615 %float_n6_28318548
       %5619 = OpExtInst %float %1 Fma %5610 %float_6_28318548 %5618
       %5620 = OpExtInst %float %1 Fma %5617 %float_2097152 %5619
       %5621 = OpExtInst %float %1 Sin %5620
       %5622 = OpFMul %float %5621 %5538
       %5623 = OpCompositeConstruct %v3float %548 %548 %5604
       %5624 = OpCompositeConstruct %v3float %548 %548 %5622
       %5625 = OpFAdd %v3float %5623 %5624
       %5626 = OpFMul %float %5605 %4450
       %5627 = OpFDiv %float %float_2 %5626
       %5628 = OpFMul %float %4839 %5627
       %5629 = OpFMul %float %5627 %5038
       %5630 = OpFMul %float %5629 %3855
       %5631 = OpExtInst %float %1 Fma %4840 %5627 %5630
       %5632 = OpExtInst %float %1 Floor %5628
       %5633 = OpFNegate %float %5632
       %5634 = OpExtInst %float %1 Fma %4839 %5627 %5633
       %5635 = OpExtInst %float %1 Fma %5634 %float_2097152 %5631
       %5636 = OpExtInst %float %1 Floor %5635
       %5637 = OpFMul %float %5632 %float_n6_28318548
       %5638 = OpExtInst %float %1 Fma %5628 %float_6_28318548 %5637
       %5639 = OpFMul %float %5636 %float_n6_28318548
       %5640 = OpExtInst %float %1 Fma %5631 %float_6_28318548 %5639
       %5641 = OpExtInst %float %1 Fma %5638 %float_2097152 %5640
       %5642 = OpExtInst %float %1 Sin %5641
       %5643 = OpFMul %float %5642 %5560
       %5644 = OpCompositeConstruct %v3float %548 %548 %5643
       %5645 = OpFAdd %v3float %5625 %5644
       %5646 = OpFMul %float %5626 %4450
       %5647 = OpFDiv %float %float_2 %5646
       %5648 = OpFMul %float %4873 %5647
       %5649 = OpFMul %float %5647 %5061
       %5650 = OpFMul %float %5649 %3855
       %5651 = OpExtInst %float %1 Fma %4874 %5647 %5650
       %5652 = OpExtInst %float %1 Floor %5648
       %5653 = OpFNegate %float %5652
       %5654 = OpExtInst %float %1 Fma %4873 %5647 %5653
       %5655 = OpExtInst %float %1 Fma %5654 %float_2097152 %5651
       %5656 = OpExtInst %float %1 Floor %5655
       %5657 = OpFMul %float %5652 %float_n6_28318548
       %5658 = OpExtInst %float %1 Fma %5648 %float_6_28318548 %5657
       %5659 = OpFMul %float %5656 %float_n6_28318548
       %5660 = OpExtInst %float %1 Fma %5651 %float_6_28318548 %5659
       %5661 = OpExtInst %float %1 Fma %5658 %float_2097152 %5660
       %5662 = OpExtInst %float %1 Sin %5661
       %5663 = OpFMul %float %5662 %5581
       %5664 = OpCompositeConstruct %v3float %548 %548 %5663
       %5665 = OpFAdd %v3float %5645 %5664
       %5666 = OpFAdd %v3float %5586 %5665
       %5667 = OpFAdd %v3float %5417 %5666
       %5668 = OpFAdd %v3float %5160 %5667
       %5669 = OpFAdd %v3float %4895 %5668
       %5670 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_80 %int_2
       %5671 = OpLoad %float %5670
       %5672 = OpFSub %float %5671 %float_n1
       %5673 = OpExtInst %float %1 FAbs %5672
       %5674 = OpFOrdGreaterThan %bool %5673 %float_9_99999975en06
       %5675 = OpFOrdGreaterThanEqual %bool %5671 %float_n1
       %5676 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_80 %int_3
       %5677 = OpLoad %float %5676
       %5678 = OpSelect %float %5675 %5671 %5677
       %5679 = OpSelect %float %5674 %5678 %5671
       %5680 = OpFSub %float %5679 %float_1
       %5681 = OpExtInst %float %1 FAbs %5680
       %5682 = OpFOrdGreaterThan %bool %5681 %float_9_99999975en06
       %5683 = OpFOrdGreaterThanEqual %bool %5679 %float_1
       %5684 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_81 %int_0
       %5685 = OpLoad %float %5684
       %5686 = OpSelect %float %5683 %5685 %5671
       %5687 = OpSelect %float %5682 %5686 %5671
       %5688 = OpExtInst %float %1 FAbs %5687
       %5689 = OpFOrdGreaterThan %bool %5688 %float_9_99999975en06
       %5690 = OpFOrdGreaterThanEqual %bool %5687 %float_0
       %5691 = OpSelect %float %5690 %float_1 %float_n1
       %5692 = OpSelect %float %5689 %5691 %float_1
       %5693 = OpExtInst %float %1 NMax %5692 %float_n1
       %5694 = OpExtInst %float %1 NMin %5693 %float_1
       %5695 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_82 %int_1
       %5696 = OpLoad %float %5695
       %5697 = OpCompositeConstruct %v3float %5694 %5696 %float_0
       %5698 = OpFAdd %v3float %5697 %1690
       %5699 = OpExtInst %v3float %1 NMax %5698 %282
       %5700 = OpExtInst %v3float %1 NMin %5699 %131
       %5701 = OpCompositeExtract %float %5700 0
       %5702 = OpCompositeExtract %float %5700 1
       %5703 = OpCompositeConstruct %v2float %5701 %5702
       %5704 = OpFMul %v2float %1698 %5703
       %5705 = OpFMul %v2float %5703 %1699
       %5706 = OpCompositeExtract %float %5704 0
       %5707 = OpCompositeExtract %float %5705 0
       %5708 = OpCompositeExtract %float %5704 1
       %5709 = OpCompositeExtract %float %5705 1
       %5710 = OpFAdd %float %5706 %5708
       %5711 = OpFAdd %float %5707 %5709
       %5712 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_83 %int_2
       %5713 = OpLoad %float %5712
       %5714 = OpFMul %float %5713 %3568
       %5715 = OpFDiv %float %float_2 %5714
       %5716 = OpFMul %float %5710 %5715
       %5717 = OpFMul %float %5715 %3575
       %5718 = OpFAdd %v3float %644 %292
       %5719 = OpFMul %v3float %593 %3588
       %5720 = OpFMul %v3float %5718 %3588
       %5721 = OpFMul %v3float %5719 %3579
       %5722 = OpFMul %v3float %3579 %5720
       %5723 = OpFMul %v3float %5722 %3584
       %5724 = OpCompositeExtract %float %5723 0
       %5725 = OpCompositeExtract %float %5723 1
       %5726 = OpCompositeExtract %float %5723 2
       %5727 = OpCompositeConstruct %v2float %5726 %5726
       %5728 = OpFAdd %v2float %3596 %5727
       %5729 = OpCompositeExtract %float %5728 0
       %5730 = OpCompositeConstruct %v3float %5724 %5725 %5729
       %5731 = OpVectorTimesScalar %v3float %5730 %float_4_76837158en07
       %5732 = OpFAdd %v3float %5731 %141
       %5733 = OpExtInst %v3float %1 Fma %5721 %3584 %5732
       %5734 = OpExtInst %v3float %1 Floor %5733
       %5735 = OpFNegate %v3float %5734
       %5736 = OpExtInst %v3float %1 Fma %5721 %3584 %5735
       %5737 = OpVectorTimesScalar %v3float %5736 %float_2097152
       %5738 = OpFAdd %v3float %5737 %5730
       %5739 = OpVectorTimesScalar %v3float %5738 %float_1
               OpBranch %5740
       %5740 = OpLabel
       %5741 = OpPhi %v3float %5739 %4193 %5742 %5743
       %5744 = OpPhi %float %float_1 %4193 %5745 %5743
       %5746 = OpPhi %float %float_0 %4193 %5747 %5743
       %5748 = OpPhi %uint %uint_0 %4193 %5749 %5743
       %5750 = OpULessThan %bool %5748 %uint_6
               OpLoopMerge %5751 %5743 DontUnroll
               OpBranchConditional %5750 %5743 %5751
       %5743 = OpLabel
       %5752 = OpExtInst %v3float %1 Fract %5741
       %5753 = OpExtInst %v3float %1 Floor %5741
       %5754 = OpDot %float %5753 %387
       %5755 = OpFAdd %float %5754 %float_19
       %5756 = OpFAdd %float %5754 %float_47
       %5757 = OpFAdd %float %5754 %float_66
       %5758 = OpFAdd %float %5754 %float_101
       %5759 = OpFAdd %float %5754 %float_120
       %5760 = OpFAdd %float %5754 %float_148
       %5761 = OpFAdd %float %5754 %float_167
       %5762 = OpConvertFToS %int %5754
       %5763 = OpCompositeConstruct %v3int %5762 %int_0 %int_0
       %5764 = OpBitcast %v3uint %5763
       %5765 = OpIMul %v3uint %5764 %403
       %5766 = OpIAdd %v3uint %5765 %405
       %5767 = OpCompositeExtract %uint %5766 1
       %5768 = OpCompositeExtract %uint %5766 2
       %5769 = OpIMul %uint %5767 %5768
       %5770 = OpCompositeExtract %uint %5766 0
       %5771 = OpIAdd %uint %5770 %5769
       %5772 = OpIMul %uint %5768 %5771
       %5773 = OpIAdd %uint %5767 %5772
       %5774 = OpIMul %uint %5771 %5773
       %5775 = OpIAdd %uint %5768 %5774
       %5776 = OpIMul %uint %5773 %5775
       %5777 = OpIAdd %uint %5771 %5776
       %5778 = OpCompositeInsert %v3uint %5777 %549 0
       %5779 = OpBitwiseAnd %v3uint %406 %407
       %5780 = OpShiftRightLogical %v3uint %5778 %5779
       %5781 = OpCompositeExtract %uint %5780 0
       %5782 = OpCompositeConstruct %v3uint %5781 %5781 %5781
       %5783 = OpBitwiseAnd %v3uint %5782 %388
       %5784 = OpConvertUToF %v3float %5783
       %5785 = OpExtInst %v3float %1 Fma %5784 %392 %282
       %5786 = OpDot %float %5785 %5752
       %5787 = OpConvertFToS %int %5755
       %5788 = OpFSub %v3float %5752 %351
       %5789 = OpCompositeConstruct %v3int %5787 %int_0 %int_0
       %5790 = OpBitcast %v3uint %5789
       %5791 = OpIMul %v3uint %5790 %403
       %5792 = OpIAdd %v3uint %5791 %405
       %5793 = OpCompositeExtract %uint %5792 1
       %5794 = OpCompositeExtract %uint %5792 2
       %5795 = OpIMul %uint %5793 %5794
       %5796 = OpCompositeExtract %uint %5792 0
       %5797 = OpIAdd %uint %5796 %5795
       %5798 = OpIMul %uint %5794 %5797
       %5799 = OpIAdd %uint %5793 %5798
       %5800 = OpIMul %uint %5797 %5799
       %5801 = OpIAdd %uint %5794 %5800
       %5802 = OpIMul %uint %5799 %5801
       %5803 = OpIAdd %uint %5797 %5802
       %5804 = OpCompositeInsert %v3uint %5803 %549 0
       %5805 = OpShiftRightLogical %v3uint %5804 %5779
       %5806 = OpCompositeExtract %uint %5805 0
       %5807 = OpCompositeConstruct %v3uint %5806 %5806 %5806
       %5808 = OpBitwiseAnd %v3uint %5807 %388
       %5809 = OpConvertUToF %v3float %5808
       %5810 = OpExtInst %v3float %1 Fma %5809 %392 %282
       %5811 = OpDot %float %5810 %5788
       %5812 = OpConvertFToS %int %5756
       %5813 = OpFSub %v3float %5752 %352
       %5814 = OpCompositeConstruct %v3int %5812 %int_0 %int_0
       %5815 = OpBitcast %v3uint %5814
       %5816 = OpIMul %v3uint %5815 %403
       %5817 = OpIAdd %v3uint %5816 %405
       %5818 = OpCompositeExtract %uint %5817 1
       %5819 = OpCompositeExtract %uint %5817 2
       %5820 = OpIMul %uint %5818 %5819
       %5821 = OpCompositeExtract %uint %5817 0
       %5822 = OpIAdd %uint %5821 %5820
       %5823 = OpIMul %uint %5819 %5822
       %5824 = OpIAdd %uint %5818 %5823
       %5825 = OpIMul %uint %5822 %5824
       %5826 = OpIAdd %uint %5819 %5825
       %5827 = OpIMul %uint %5824 %5826
       %5828 = OpIAdd %uint %5822 %5827
       %5829 = OpCompositeInsert %v3uint %5828 %549 0
       %5830 = OpShiftRightLogical %v3uint %5829 %5779
       %5831 = OpCompositeExtract %uint %5830 0
       %5832 = OpCompositeConstruct %v3uint %5831 %5831 %5831
       %5833 = OpBitwiseAnd %v3uint %5832 %388
       %5834 = OpConvertUToF %v3float %5833
       %5835 = OpExtInst %v3float %1 Fma %5834 %392 %282
       %5836 = OpDot %float %5835 %5813
       %5837 = OpConvertFToS %int %5757
       %5838 = OpFSub %v3float %5752 %138
       %5839 = OpCompositeConstruct %v3int %5837 %int_0 %int_0
       %5840 = OpBitcast %v3uint %5839
       %5841 = OpIMul %v3uint %5840 %403
       %5842 = OpIAdd %v3uint %5841 %405
       %5843 = OpCompositeExtract %uint %5842 1
       %5844 = OpCompositeExtract %uint %5842 2
       %5845 = OpIMul %uint %5843 %5844
       %5846 = OpCompositeExtract %uint %5842 0
       %5847 = OpIAdd %uint %5846 %5845
       %5848 = OpIMul %uint %5844 %5847
       %5849 = OpIAdd %uint %5843 %5848
       %5850 = OpIMul %uint %5847 %5849
       %5851 = OpIAdd %uint %5844 %5850
       %5852 = OpIMul %uint %5849 %5851
       %5853 = OpIAdd %uint %5847 %5852
       %5854 = OpCompositeInsert %v3uint %5853 %549 0
       %5855 = OpShiftRightLogical %v3uint %5854 %5779
       %5856 = OpCompositeExtract %uint %5855 0
       %5857 = OpCompositeConstruct %v3uint %5856 %5856 %5856
       %5858 = OpBitwiseAnd %v3uint %5857 %388
       %5859 = OpConvertUToF %v3float %5858
       %5860 = OpExtInst %v3float %1 Fma %5859 %392 %282
       %5861 = OpDot %float %5860 %5838
       %5862 = OpConvertFToS %int %5758
       %5863 = OpFSub %v3float %5752 %294
       %5864 = OpCompositeConstruct %v3int %5862 %int_0 %int_0
       %5865 = OpBitcast %v3uint %5864
       %5866 = OpIMul %v3uint %5865 %403
       %5867 = OpIAdd %v3uint %5866 %405
       %5868 = OpCompositeExtract %uint %5867 1
       %5869 = OpCompositeExtract %uint %5867 2
       %5870 = OpIMul %uint %5868 %5869
       %5871 = OpCompositeExtract %uint %5867 0
       %5872 = OpIAdd %uint %5871 %5870
       %5873 = OpIMul %uint %5869 %5872
       %5874 = OpIAdd %uint %5868 %5873
       %5875 = OpIMul %uint %5872 %5874
       %5876 = OpIAdd %uint %5869 %5875
       %5877 = OpIMul %uint %5874 %5876
       %5878 = OpIAdd %uint %5872 %5877
       %5879 = OpCompositeInsert %v3uint %5878 %549 0
       %5880 = OpShiftRightLogical %v3uint %5879 %5779
       %5881 = OpCompositeExtract %uint %5880 0
       %5882 = OpCompositeConstruct %v3uint %5881 %5881 %5881
       %5883 = OpBitwiseAnd %v3uint %5882 %388
       %5884 = OpConvertUToF %v3float %5883
       %5885 = OpExtInst %v3float %1 Fma %5884 %392 %282
       %5886 = OpDot %float %5885 %5863
       %5887 = OpConvertFToS %int %5759
       %5888 = OpFSub %v3float %5752 %143
       %5889 = OpCompositeConstruct %v3int %5887 %int_0 %int_0
       %5890 = OpBitcast %v3uint %5889
       %5891 = OpIMul %v3uint %5890 %403
       %5892 = OpIAdd %v3uint %5891 %405
       %5893 = OpCompositeExtract %uint %5892 1
       %5894 = OpCompositeExtract %uint %5892 2
       %5895 = OpIMul %uint %5893 %5894
       %5896 = OpCompositeExtract %uint %5892 0
       %5897 = OpIAdd %uint %5896 %5895
       %5898 = OpIMul %uint %5894 %5897
       %5899 = OpIAdd %uint %5893 %5898
       %5900 = OpIMul %uint %5897 %5899
       %5901 = OpIAdd %uint %5894 %5900
       %5902 = OpIMul %uint %5899 %5901
       %5903 = OpIAdd %uint %5897 %5902
       %5904 = OpCompositeInsert %v3uint %5903 %549 0
       %5905 = OpShiftRightLogical %v3uint %5904 %5779
       %5906 = OpCompositeExtract %uint %5905 0
       %5907 = OpCompositeConstruct %v3uint %5906 %5906 %5906
       %5908 = OpBitwiseAnd %v3uint %5907 %388
       %5909 = OpConvertUToF %v3float %5908
       %5910 = OpExtInst %v3float %1 Fma %5909 %392 %282
       %5911 = OpDot %float %5910 %5888
       %5912 = OpConvertFToS %int %5760
       %5913 = OpFSub %v3float %5752 %139
       %5914 = OpCompositeConstruct %v3int %5912 %int_0 %int_0
       %5915 = OpBitcast %v3uint %5914
       %5916 = OpIMul %v3uint %5915 %403
       %5917 = OpIAdd %v3uint %5916 %405
       %5918 = OpCompositeExtract %uint %5917 1
       %5919 = OpCompositeExtract %uint %5917 2
       %5920 = OpIMul %uint %5918 %5919
       %5921 = OpCompositeExtract %uint %5917 0
       %5922 = OpIAdd %uint %5921 %5920
       %5923 = OpIMul %uint %5919 %5922
       %5924 = OpIAdd %uint %5918 %5923
       %5925 = OpIMul %uint %5922 %5924
       %5926 = OpIAdd %uint %5919 %5925
       %5927 = OpIMul %uint %5924 %5926
       %5928 = OpIAdd %uint %5922 %5927
       %5929 = OpCompositeInsert %v3uint %5928 %549 0
       %5930 = OpShiftRightLogical %v3uint %5929 %5779
       %5931 = OpCompositeExtract %uint %5930 0
       %5932 = OpCompositeConstruct %v3uint %5931 %5931 %5931
       %5933 = OpBitwiseAnd %v3uint %5932 %388
       %5934 = OpConvertUToF %v3float %5933
       %5935 = OpExtInst %v3float %1 Fma %5934 %392 %282
       %5936 = OpDot %float %5935 %5913
       %5937 = OpConvertFToS %int %5761
       %5938 = OpFSub %v3float %5752 %131
       %5939 = OpCompositeConstruct %v3int %5937 %int_0 %int_0
       %5940 = OpBitcast %v3uint %5939
       %5941 = OpIMul %v3uint %5940 %403
       %5942 = OpIAdd %v3uint %5941 %405
       %5943 = OpCompositeExtract %uint %5942 1
       %5944 = OpCompositeExtract %uint %5942 2
       %5945 = OpIMul %uint %5943 %5944
       %5946 = OpCompositeExtract %uint %5942 0
       %5947 = OpIAdd %uint %5946 %5945
       %5948 = OpIMul %uint %5944 %5947
       %5949 = OpIAdd %uint %5943 %5948
       %5950 = OpIMul %uint %5947 %5949
       %5951 = OpIAdd %uint %5944 %5950
       %5952 = OpIMul %uint %5949 %5951
       %5953 = OpIAdd %uint %5947 %5952
       %5954 = OpCompositeInsert %v3uint %5953 %549 0
       %5955 = OpShiftRightLogical %v3uint %5954 %5779
       %5956 = OpCompositeExtract %uint %5955 0
       %5957 = OpCompositeConstruct %v3uint %5956 %5956 %5956
       %5958 = OpBitwiseAnd %v3uint %5957 %388
       %5959 = OpConvertUToF %v3float %5958
       %5960 = OpExtInst %v3float %1 Fma %5959 %392 %282
       %5961 = OpDot %float %5960 %5938
       %5962 = OpCompositeExtract %float %5752 0
       %5963 = OpCompositeExtract %float %5752 1
       %5964 = OpCompositeExtract %float %5752 2
       %5965 = OpCompositeConstruct %v4float %5962 %5963 %5964 %float_0
       %5966 = OpFMul %v4float %5965 %5965
       %5967 = OpFMul %v4float %5966 %5965
       %5968 = OpVectorTimesScalar %v4float %5965 %float_6
       %5969 = OpFSub %v4float %5968 %383
       %5970 = OpExtInst %v4float %1 Fma %5965 %5969 %384
       %5971 = OpFMul %v4float %5967 %5970
       %5972 = OpCompositeExtract %float %5971 0
       %5973 = OpExtInst %float %1 FMix %5786 %5811 %5972
       %5974 = OpExtInst %float %1 FMix %5836 %5861 %5972
       %5975 = OpCompositeExtract %float %5971 1
       %5976 = OpExtInst %float %1 FMix %5973 %5974 %5975
       %5977 = OpExtInst %float %1 FMix %5886 %5911 %5972
       %5978 = OpExtInst %float %1 FMix %5936 %5961 %5972
       %5979 = OpExtInst %float %1 FMix %5977 %5978 %5975
       %5980 = OpCompositeExtract %float %5971 2
       %5981 = OpExtInst %float %1 FMix %5976 %5979 %5980
       %5747 = OpExtInst %float %1 Fma %5981 %5744 %5746
       %5742 = OpVectorTimesScalar %v3float %5741 %float_2
       %5745 = OpFMul %float %5744 %float_0_5
       %5749 = OpIAdd %uint %5748 %uint_1
               OpBranch %5740
       %5751 = OpLabel
       %5982 = OpExtInst %float %1 Fma %5746 %float_0_5 %float_0_5
       %5983 = OpExtInst %float %1 FMix %float_0 %float_1 %5982
       %5984 = OpExtInst %float %1 FClamp %5983 %float_0 %float_1
       %5985 = OpExtInst %float %1 FMix %1163 %1716 %5984
       %5986 = OpFMul %float %5717 %5985
       %5987 = OpExtInst %float %1 Fma %5711 %5715 %5986
       %5988 = OpExtInst %float %1 Floor %5716
       %5989 = OpFNegate %float %5988
       %5990 = OpExtInst %float %1 Fma %5710 %5715 %5989
       %5991 = OpExtInst %float %1 Fma %5990 %float_2097152 %5987
       %5992 = OpExtInst %float %1 Floor %5991
       %5993 = OpFMul %float %5988 %float_n6_28318548
       %5994 = OpExtInst %float %1 Fma %5716 %float_6_28318548 %5993
       %5995 = OpFMul %float %5992 %float_n6_28318548
       %5996 = OpExtInst %float %1 Fma %5987 %float_6_28318548 %5995
       %5997 = OpExtInst %float %1 Fma %5994 %float_2097152 %5996
       %5998 = OpFMul %v3float %5719 %3878
       %5999 = OpFMul %v3float %3878 %5720
       %6000 = OpFMul %v3float %5999 %3883
       %6001 = OpCompositeExtract %float %6000 0
       %6002 = OpCompositeExtract %float %6000 1
       %6003 = OpCompositeExtract %float %6000 2
       %6004 = OpCompositeConstruct %v2float %6003 %6003
       %6005 = OpFAdd %v2float %3893 %6004
       %6006 = OpCompositeExtract %float %6005 0
       %6007 = OpCompositeConstruct %v3float %6001 %6002 %6006
       %6008 = OpVectorTimesScalar %v3float %6007 %float_4_76837158en07
       %6009 = OpFAdd %v3float %6008 %141
       %6010 = OpExtInst %v3float %1 Fma %5998 %3883 %6009
       %6011 = OpExtInst %v3float %1 Floor %6010
       %6012 = OpFNegate %v3float %6011
       %6013 = OpExtInst %v3float %1 Fma %5998 %3883 %6012
       %6014 = OpVectorTimesScalar %v3float %6013 %float_2097152
       %6015 = OpFAdd %v3float %6014 %6007
       %6016 = OpVectorTimesScalar %v3float %6015 %float_1
               OpBranch %6017
       %6017 = OpLabel
       %6018 = OpPhi %v3float %6016 %5751 %6019 %6020
       %6021 = OpPhi %float %float_1 %5751 %6022 %6020
       %6023 = OpPhi %float %float_0 %5751 %6024 %6020
       %6025 = OpPhi %uint %uint_0 %5751 %6026 %6020
       %6027 = OpULessThan %bool %6025 %uint_10
               OpLoopMerge %6028 %6020 DontUnroll
               OpBranchConditional %6027 %6020 %6028
       %6020 = OpLabel
       %6029 = OpExtInst %v3float %1 Fract %6018
       %6030 = OpExtInst %v3float %1 Floor %6018
       %6031 = OpDot %float %6030 %387
       %6032 = OpFAdd %float %6031 %float_19
       %6033 = OpFAdd %float %6031 %float_47
       %6034 = OpFAdd %float %6031 %float_66
       %6035 = OpFAdd %float %6031 %float_101
       %6036 = OpFAdd %float %6031 %float_120
       %6037 = OpFAdd %float %6031 %float_148
       %6038 = OpFAdd %float %6031 %float_167
       %6039 = OpConvertFToS %int %6031
       %6040 = OpCompositeConstruct %v3int %6039 %int_0 %int_0
       %6041 = OpBitcast %v3uint %6040
       %6042 = OpIMul %v3uint %6041 %403
       %6043 = OpIAdd %v3uint %6042 %405
       %6044 = OpCompositeExtract %uint %6043 1
       %6045 = OpCompositeExtract %uint %6043 2
       %6046 = OpIMul %uint %6044 %6045
       %6047 = OpCompositeExtract %uint %6043 0
       %6048 = OpIAdd %uint %6047 %6046
       %6049 = OpIMul %uint %6045 %6048
       %6050 = OpIAdd %uint %6044 %6049
       %6051 = OpIMul %uint %6048 %6050
       %6052 = OpIAdd %uint %6045 %6051
       %6053 = OpIMul %uint %6050 %6052
       %6054 = OpIAdd %uint %6048 %6053
       %6055 = OpCompositeInsert %v3uint %6054 %549 0
       %6056 = OpBitwiseAnd %v3uint %406 %407
       %6057 = OpShiftRightLogical %v3uint %6055 %6056
       %6058 = OpCompositeExtract %uint %6057 0
       %6059 = OpCompositeConstruct %v3uint %6058 %6058 %6058
       %6060 = OpBitwiseAnd %v3uint %6059 %388
       %6061 = OpConvertUToF %v3float %6060
       %6062 = OpExtInst %v3float %1 Fma %6061 %392 %282
       %6063 = OpDot %float %6062 %6029
       %6064 = OpConvertFToS %int %6032
       %6065 = OpFSub %v3float %6029 %351
       %6066 = OpCompositeConstruct %v3int %6064 %int_0 %int_0
       %6067 = OpBitcast %v3uint %6066
       %6068 = OpIMul %v3uint %6067 %403
       %6069 = OpIAdd %v3uint %6068 %405
       %6070 = OpCompositeExtract %uint %6069 1
       %6071 = OpCompositeExtract %uint %6069 2
       %6072 = OpIMul %uint %6070 %6071
       %6073 = OpCompositeExtract %uint %6069 0
       %6074 = OpIAdd %uint %6073 %6072
       %6075 = OpIMul %uint %6071 %6074
       %6076 = OpIAdd %uint %6070 %6075
       %6077 = OpIMul %uint %6074 %6076
       %6078 = OpIAdd %uint %6071 %6077
       %6079 = OpIMul %uint %6076 %6078
       %6080 = OpIAdd %uint %6074 %6079
       %6081 = OpCompositeInsert %v3uint %6080 %549 0
       %6082 = OpShiftRightLogical %v3uint %6081 %6056
       %6083 = OpCompositeExtract %uint %6082 0
       %6084 = OpCompositeConstruct %v3uint %6083 %6083 %6083
       %6085 = OpBitwiseAnd %v3uint %6084 %388
       %6086 = OpConvertUToF %v3float %6085
       %6087 = OpExtInst %v3float %1 Fma %6086 %392 %282
       %6088 = OpDot %float %6087 %6065
       %6089 = OpConvertFToS %int %6033
       %6090 = OpFSub %v3float %6029 %352
       %6091 = OpCompositeConstruct %v3int %6089 %int_0 %int_0
       %6092 = OpBitcast %v3uint %6091
       %6093 = OpIMul %v3uint %6092 %403
       %6094 = OpIAdd %v3uint %6093 %405
       %6095 = OpCompositeExtract %uint %6094 1
       %6096 = OpCompositeExtract %uint %6094 2
       %6097 = OpIMul %uint %6095 %6096
       %6098 = OpCompositeExtract %uint %6094 0
       %6099 = OpIAdd %uint %6098 %6097
       %6100 = OpIMul %uint %6096 %6099
       %6101 = OpIAdd %uint %6095 %6100
       %6102 = OpIMul %uint %6099 %6101
       %6103 = OpIAdd %uint %6096 %6102
       %6104 = OpIMul %uint %6101 %6103
       %6105 = OpIAdd %uint %6099 %6104
       %6106 = OpCompositeInsert %v3uint %6105 %549 0
       %6107 = OpShiftRightLogical %v3uint %6106 %6056
       %6108 = OpCompositeExtract %uint %6107 0
       %6109 = OpCompositeConstruct %v3uint %6108 %6108 %6108
       %6110 = OpBitwiseAnd %v3uint %6109 %388
       %6111 = OpConvertUToF %v3float %6110
       %6112 = OpExtInst %v3float %1 Fma %6111 %392 %282
       %6113 = OpDot %float %6112 %6090
       %6114 = OpConvertFToS %int %6034
       %6115 = OpFSub %v3float %6029 %138
       %6116 = OpCompositeConstruct %v3int %6114 %int_0 %int_0
       %6117 = OpBitcast %v3uint %6116
       %6118 = OpIMul %v3uint %6117 %403
       %6119 = OpIAdd %v3uint %6118 %405
       %6120 = OpCompositeExtract %uint %6119 1
       %6121 = OpCompositeExtract %uint %6119 2
       %6122 = OpIMul %uint %6120 %6121
       %6123 = OpCompositeExtract %uint %6119 0
       %6124 = OpIAdd %uint %6123 %6122
       %6125 = OpIMul %uint %6121 %6124
       %6126 = OpIAdd %uint %6120 %6125
       %6127 = OpIMul %uint %6124 %6126
       %6128 = OpIAdd %uint %6121 %6127
       %6129 = OpIMul %uint %6126 %6128
       %6130 = OpIAdd %uint %6124 %6129
       %6131 = OpCompositeInsert %v3uint %6130 %549 0
       %6132 = OpShiftRightLogical %v3uint %6131 %6056
       %6133 = OpCompositeExtract %uint %6132 0
       %6134 = OpCompositeConstruct %v3uint %6133 %6133 %6133
       %6135 = OpBitwiseAnd %v3uint %6134 %388
       %6136 = OpConvertUToF %v3float %6135
       %6137 = OpExtInst %v3float %1 Fma %6136 %392 %282
       %6138 = OpDot %float %6137 %6115
       %6139 = OpConvertFToS %int %6035
       %6140 = OpFSub %v3float %6029 %294
       %6141 = OpCompositeConstruct %v3int %6139 %int_0 %int_0
       %6142 = OpBitcast %v3uint %6141
       %6143 = OpIMul %v3uint %6142 %403
       %6144 = OpIAdd %v3uint %6143 %405
       %6145 = OpCompositeExtract %uint %6144 1
       %6146 = OpCompositeExtract %uint %6144 2
       %6147 = OpIMul %uint %6145 %6146
       %6148 = OpCompositeExtract %uint %6144 0
       %6149 = OpIAdd %uint %6148 %6147
       %6150 = OpIMul %uint %6146 %6149
       %6151 = OpIAdd %uint %6145 %6150
       %6152 = OpIMul %uint %6149 %6151
       %6153 = OpIAdd %uint %6146 %6152
       %6154 = OpIMul %uint %6151 %6153
       %6155 = OpIAdd %uint %6149 %6154
       %6156 = OpCompositeInsert %v3uint %6155 %549 0
       %6157 = OpShiftRightLogical %v3uint %6156 %6056
       %6158 = OpCompositeExtract %uint %6157 0
       %6159 = OpCompositeConstruct %v3uint %6158 %6158 %6158
       %6160 = OpBitwiseAnd %v3uint %6159 %388
       %6161 = OpConvertUToF %v3float %6160
       %6162 = OpExtInst %v3float %1 Fma %6161 %392 %282
       %6163 = OpDot %float %6162 %6140
       %6164 = OpConvertFToS %int %6036
       %6165 = OpFSub %v3float %6029 %143
       %6166 = OpCompositeConstruct %v3int %6164 %int_0 %int_0
       %6167 = OpBitcast %v3uint %6166
       %6168 = OpIMul %v3uint %6167 %403
       %6169 = OpIAdd %v3uint %6168 %405
       %6170 = OpCompositeExtract %uint %6169 1
       %6171 = OpCompositeExtract %uint %6169 2
       %6172 = OpIMul %uint %6170 %6171
       %6173 = OpCompositeExtract %uint %6169 0
       %6174 = OpIAdd %uint %6173 %6172
       %6175 = OpIMul %uint %6171 %6174
       %6176 = OpIAdd %uint %6170 %6175
       %6177 = OpIMul %uint %6174 %6176
       %6178 = OpIAdd %uint %6171 %6177
       %6179 = OpIMul %uint %6176 %6178
       %6180 = OpIAdd %uint %6174 %6179
       %6181 = OpCompositeInsert %v3uint %6180 %549 0
       %6182 = OpShiftRightLogical %v3uint %6181 %6056
       %6183 = OpCompositeExtract %uint %6182 0
       %6184 = OpCompositeConstruct %v3uint %6183 %6183 %6183
       %6185 = OpBitwiseAnd %v3uint %6184 %388
       %6186 = OpConvertUToF %v3float %6185
       %6187 = OpExtInst %v3float %1 Fma %6186 %392 %282
       %6188 = OpDot %float %6187 %6165
       %6189 = OpConvertFToS %int %6037
       %6190 = OpFSub %v3float %6029 %139
       %6191 = OpCompositeConstruct %v3int %6189 %int_0 %int_0
       %6192 = OpBitcast %v3uint %6191
       %6193 = OpIMul %v3uint %6192 %403
       %6194 = OpIAdd %v3uint %6193 %405
       %6195 = OpCompositeExtract %uint %6194 1
       %6196 = OpCompositeExtract %uint %6194 2
       %6197 = OpIMul %uint %6195 %6196
       %6198 = OpCompositeExtract %uint %6194 0
       %6199 = OpIAdd %uint %6198 %6197
       %6200 = OpIMul %uint %6196 %6199
       %6201 = OpIAdd %uint %6195 %6200
       %6202 = OpIMul %uint %6199 %6201
       %6203 = OpIAdd %uint %6196 %6202
       %6204 = OpIMul %uint %6201 %6203
       %6205 = OpIAdd %uint %6199 %6204
       %6206 = OpCompositeInsert %v3uint %6205 %549 0
       %6207 = OpShiftRightLogical %v3uint %6206 %6056
       %6208 = OpCompositeExtract %uint %6207 0
       %6209 = OpCompositeConstruct %v3uint %6208 %6208 %6208
       %6210 = OpBitwiseAnd %v3uint %6209 %388
       %6211 = OpConvertUToF %v3float %6210
       %6212 = OpExtInst %v3float %1 Fma %6211 %392 %282
       %6213 = OpDot %float %6212 %6190
       %6214 = OpConvertFToS %int %6038
       %6215 = OpFSub %v3float %6029 %131
       %6216 = OpCompositeConstruct %v3int %6214 %int_0 %int_0
       %6217 = OpBitcast %v3uint %6216
       %6218 = OpIMul %v3uint %6217 %403
       %6219 = OpIAdd %v3uint %6218 %405
       %6220 = OpCompositeExtract %uint %6219 1
       %6221 = OpCompositeExtract %uint %6219 2
       %6222 = OpIMul %uint %6220 %6221
       %6223 = OpCompositeExtract %uint %6219 0
       %6224 = OpIAdd %uint %6223 %6222
       %6225 = OpIMul %uint %6221 %6224
       %6226 = OpIAdd %uint %6220 %6225
       %6227 = OpIMul %uint %6224 %6226
       %6228 = OpIAdd %uint %6221 %6227
       %6229 = OpIMul %uint %6226 %6228
       %6230 = OpIAdd %uint %6224 %6229
       %6231 = OpCompositeInsert %v3uint %6230 %549 0
       %6232 = OpShiftRightLogical %v3uint %6231 %6056
       %6233 = OpCompositeExtract %uint %6232 0
       %6234 = OpCompositeConstruct %v3uint %6233 %6233 %6233
       %6235 = OpBitwiseAnd %v3uint %6234 %388
       %6236 = OpConvertUToF %v3float %6235
       %6237 = OpExtInst %v3float %1 Fma %6236 %392 %282
       %6238 = OpDot %float %6237 %6215
       %6239 = OpCompositeExtract %float %6029 0
       %6240 = OpCompositeExtract %float %6029 1
       %6241 = OpCompositeExtract %float %6029 2
       %6242 = OpCompositeConstruct %v4float %6239 %6240 %6241 %float_0
       %6243 = OpFMul %v4float %6242 %6242
       %6244 = OpFMul %v4float %6243 %6242
       %6245 = OpVectorTimesScalar %v4float %6242 %float_6
       %6246 = OpFSub %v4float %6245 %383
       %6247 = OpExtInst %v4float %1 Fma %6242 %6246 %384
       %6248 = OpFMul %v4float %6244 %6247
       %6249 = OpCompositeExtract %float %6248 0
       %6250 = OpExtInst %float %1 FMix %6063 %6088 %6249
       %6251 = OpExtInst %float %1 FMix %6113 %6138 %6249
       %6252 = OpCompositeExtract %float %6248 1
       %6253 = OpExtInst %float %1 FMix %6250 %6251 %6252
       %6254 = OpExtInst %float %1 FMix %6163 %6188 %6249
       %6255 = OpExtInst %float %1 FMix %6213 %6238 %6249
       %6256 = OpExtInst %float %1 FMix %6254 %6255 %6252
       %6257 = OpCompositeExtract %float %6248 2
       %6258 = OpExtInst %float %1 FMix %6253 %6256 %6257
       %6259 = OpExtInst %float %1 FAbs %6258
       %6024 = OpExtInst %float %1 Fma %6259 %6021 %6023
       %6019 = OpVectorTimesScalar %v3float %6018 %float_2
       %6022 = OpFMul %float %6021 %float_0_5
       %6026 = OpIAdd %uint %6025 %uint_1
               OpBranch %6017
       %6028 = OpLabel
       %6260 = OpExtInst %float %1 FMix %float_0 %float_1 %6023
       %6261 = OpFMul %v3float %5719 %4153
       %6262 = OpFMul %v3float %4153 %5720
       %6263 = OpFMul %v3float %6262 %4158
       %6264 = OpCompositeExtract %float %6263 0
       %6265 = OpCompositeExtract %float %6263 1
       %6266 = OpCompositeExtract %float %6263 2
       %6267 = OpCompositeConstruct %v2float %6266 %6266
       %6268 = OpFAdd %v2float %4168 %6267
       %6269 = OpCompositeExtract %float %6268 0
       %6270 = OpCompositeConstruct %v3float %6264 %6265 %6269
       %6271 = OpVectorTimesScalar %v3float %6270 %float_4_76837158en07
       %6272 = OpFAdd %v3float %6271 %141
       %6273 = OpExtInst %v3float %1 Fma %6261 %4158 %6272
       %6274 = OpExtInst %v3float %1 Floor %6273
       %6275 = OpFNegate %v3float %6274
       %6276 = OpExtInst %v3float %1 Fma %6261 %4158 %6275
       %6277 = OpVectorTimesScalar %v3float %6276 %float_2097152
       %6278 = OpFAdd %v3float %6277 %6270
       %6279 = OpVectorTimesScalar %v3float %6278 %float_1
               OpBranch %6280
       %6280 = OpLabel
       %6281 = OpPhi %v3float %6279 %6028 %6282 %6283
       %6284 = OpPhi %float %float_1 %6028 %6285 %6283
       %6286 = OpPhi %float %float_0 %6028 %6287 %6283
       %6288 = OpPhi %uint %uint_0 %6028 %6289 %6283
       %6290 = OpULessThan %bool %6288 %uint_10
               OpLoopMerge %6291 %6283 DontUnroll
               OpBranchConditional %6290 %6283 %6291
       %6283 = OpLabel
       %6292 = OpExtInst %v3float %1 Fract %6281
       %6293 = OpExtInst %v3float %1 Floor %6281
       %6294 = OpDot %float %6293 %387
       %6295 = OpFAdd %float %6294 %float_19
       %6296 = OpFAdd %float %6294 %float_47
       %6297 = OpFAdd %float %6294 %float_66
       %6298 = OpFAdd %float %6294 %float_101
       %6299 = OpFAdd %float %6294 %float_120
       %6300 = OpFAdd %float %6294 %float_148
       %6301 = OpFAdd %float %6294 %float_167
       %6302 = OpConvertFToS %int %6294
       %6303 = OpCompositeConstruct %v3int %6302 %int_0 %int_0
       %6304 = OpBitcast %v3uint %6303
       %6305 = OpIMul %v3uint %6304 %403
       %6306 = OpIAdd %v3uint %6305 %405
       %6307 = OpCompositeExtract %uint %6306 1
       %6308 = OpCompositeExtract %uint %6306 2
       %6309 = OpIMul %uint %6307 %6308
       %6310 = OpCompositeExtract %uint %6306 0
       %6311 = OpIAdd %uint %6310 %6309
       %6312 = OpIMul %uint %6308 %6311
       %6313 = OpIAdd %uint %6307 %6312
       %6314 = OpIMul %uint %6311 %6313
       %6315 = OpIAdd %uint %6308 %6314
       %6316 = OpIMul %uint %6313 %6315
       %6317 = OpIAdd %uint %6311 %6316
       %6318 = OpCompositeInsert %v3uint %6317 %549 0
       %6319 = OpBitwiseAnd %v3uint %406 %407
       %6320 = OpShiftRightLogical %v3uint %6318 %6319
       %6321 = OpCompositeExtract %uint %6320 0
       %6322 = OpCompositeConstruct %v3uint %6321 %6321 %6321
       %6323 = OpBitwiseAnd %v3uint %6322 %388
       %6324 = OpConvertUToF %v3float %6323
       %6325 = OpExtInst %v3float %1 Fma %6324 %392 %282
       %6326 = OpDot %float %6325 %6292
       %6327 = OpConvertFToS %int %6295
       %6328 = OpFSub %v3float %6292 %351
       %6329 = OpCompositeConstruct %v3int %6327 %int_0 %int_0
       %6330 = OpBitcast %v3uint %6329
       %6331 = OpIMul %v3uint %6330 %403
       %6332 = OpIAdd %v3uint %6331 %405
       %6333 = OpCompositeExtract %uint %6332 1
       %6334 = OpCompositeExtract %uint %6332 2
       %6335 = OpIMul %uint %6333 %6334
       %6336 = OpCompositeExtract %uint %6332 0
       %6337 = OpIAdd %uint %6336 %6335
       %6338 = OpIMul %uint %6334 %6337
       %6339 = OpIAdd %uint %6333 %6338
       %6340 = OpIMul %uint %6337 %6339
       %6341 = OpIAdd %uint %6334 %6340
       %6342 = OpIMul %uint %6339 %6341
       %6343 = OpIAdd %uint %6337 %6342
       %6344 = OpCompositeInsert %v3uint %6343 %549 0
       %6345 = OpShiftRightLogical %v3uint %6344 %6319
       %6346 = OpCompositeExtract %uint %6345 0
       %6347 = OpCompositeConstruct %v3uint %6346 %6346 %6346
       %6348 = OpBitwiseAnd %v3uint %6347 %388
       %6349 = OpConvertUToF %v3float %6348
       %6350 = OpExtInst %v3float %1 Fma %6349 %392 %282
       %6351 = OpDot %float %6350 %6328
       %6352 = OpConvertFToS %int %6296
       %6353 = OpFSub %v3float %6292 %352
       %6354 = OpCompositeConstruct %v3int %6352 %int_0 %int_0
       %6355 = OpBitcast %v3uint %6354
       %6356 = OpIMul %v3uint %6355 %403
       %6357 = OpIAdd %v3uint %6356 %405
       %6358 = OpCompositeExtract %uint %6357 1
       %6359 = OpCompositeExtract %uint %6357 2
       %6360 = OpIMul %uint %6358 %6359
       %6361 = OpCompositeExtract %uint %6357 0
       %6362 = OpIAdd %uint %6361 %6360
       %6363 = OpIMul %uint %6359 %6362
       %6364 = OpIAdd %uint %6358 %6363
       %6365 = OpIMul %uint %6362 %6364
       %6366 = OpIAdd %uint %6359 %6365
       %6367 = OpIMul %uint %6364 %6366
       %6368 = OpIAdd %uint %6362 %6367
       %6369 = OpCompositeInsert %v3uint %6368 %549 0
       %6370 = OpShiftRightLogical %v3uint %6369 %6319
       %6371 = OpCompositeExtract %uint %6370 0
       %6372 = OpCompositeConstruct %v3uint %6371 %6371 %6371
       %6373 = OpBitwiseAnd %v3uint %6372 %388
       %6374 = OpConvertUToF %v3float %6373
       %6375 = OpExtInst %v3float %1 Fma %6374 %392 %282
       %6376 = OpDot %float %6375 %6353
       %6377 = OpConvertFToS %int %6297
       %6378 = OpFSub %v3float %6292 %138
       %6379 = OpCompositeConstruct %v3int %6377 %int_0 %int_0
       %6380 = OpBitcast %v3uint %6379
       %6381 = OpIMul %v3uint %6380 %403
       %6382 = OpIAdd %v3uint %6381 %405
       %6383 = OpCompositeExtract %uint %6382 1
       %6384 = OpCompositeExtract %uint %6382 2
       %6385 = OpIMul %uint %6383 %6384
       %6386 = OpCompositeExtract %uint %6382 0
       %6387 = OpIAdd %uint %6386 %6385
       %6388 = OpIMul %uint %6384 %6387
       %6389 = OpIAdd %uint %6383 %6388
       %6390 = OpIMul %uint %6387 %6389
       %6391 = OpIAdd %uint %6384 %6390
       %6392 = OpIMul %uint %6389 %6391
       %6393 = OpIAdd %uint %6387 %6392
       %6394 = OpCompositeInsert %v3uint %6393 %549 0
       %6395 = OpShiftRightLogical %v3uint %6394 %6319
       %6396 = OpCompositeExtract %uint %6395 0
       %6397 = OpCompositeConstruct %v3uint %6396 %6396 %6396
       %6398 = OpBitwiseAnd %v3uint %6397 %388
       %6399 = OpConvertUToF %v3float %6398
       %6400 = OpExtInst %v3float %1 Fma %6399 %392 %282
       %6401 = OpDot %float %6400 %6378
       %6402 = OpConvertFToS %int %6298
       %6403 = OpFSub %v3float %6292 %294
       %6404 = OpCompositeConstruct %v3int %6402 %int_0 %int_0
       %6405 = OpBitcast %v3uint %6404
       %6406 = OpIMul %v3uint %6405 %403
       %6407 = OpIAdd %v3uint %6406 %405
       %6408 = OpCompositeExtract %uint %6407 1
       %6409 = OpCompositeExtract %uint %6407 2
       %6410 = OpIMul %uint %6408 %6409
       %6411 = OpCompositeExtract %uint %6407 0
       %6412 = OpIAdd %uint %6411 %6410
       %6413 = OpIMul %uint %6409 %6412
       %6414 = OpIAdd %uint %6408 %6413
       %6415 = OpIMul %uint %6412 %6414
       %6416 = OpIAdd %uint %6409 %6415
       %6417 = OpIMul %uint %6414 %6416
       %6418 = OpIAdd %uint %6412 %6417
       %6419 = OpCompositeInsert %v3uint %6418 %549 0
       %6420 = OpShiftRightLogical %v3uint %6419 %6319
       %6421 = OpCompositeExtract %uint %6420 0
       %6422 = OpCompositeConstruct %v3uint %6421 %6421 %6421
       %6423 = OpBitwiseAnd %v3uint %6422 %388
       %6424 = OpConvertUToF %v3float %6423
       %6425 = OpExtInst %v3float %1 Fma %6424 %392 %282
       %6426 = OpDot %float %6425 %6403
       %6427 = OpConvertFToS %int %6299
       %6428 = OpFSub %v3float %6292 %143
       %6429 = OpCompositeConstruct %v3int %6427 %int_0 %int_0
       %6430 = OpBitcast %v3uint %6429
       %6431 = OpIMul %v3uint %6430 %403
       %6432 = OpIAdd %v3uint %6431 %405
       %6433 = OpCompositeExtract %uint %6432 1
       %6434 = OpCompositeExtract %uint %6432 2
       %6435 = OpIMul %uint %6433 %6434
       %6436 = OpCompositeExtract %uint %6432 0
       %6437 = OpIAdd %uint %6436 %6435
       %6438 = OpIMul %uint %6434 %6437
       %6439 = OpIAdd %uint %6433 %6438
       %6440 = OpIMul %uint %6437 %6439
       %6441 = OpIAdd %uint %6434 %6440
       %6442 = OpIMul %uint %6439 %6441
       %6443 = OpIAdd %uint %6437 %6442
       %6444 = OpCompositeInsert %v3uint %6443 %549 0
       %6445 = OpShiftRightLogical %v3uint %6444 %6319
       %6446 = OpCompositeExtract %uint %6445 0
       %6447 = OpCompositeConstruct %v3uint %6446 %6446 %6446
       %6448 = OpBitwiseAnd %v3uint %6447 %388
       %6449 = OpConvertUToF %v3float %6448
       %6450 = OpExtInst %v3float %1 Fma %6449 %392 %282
       %6451 = OpDot %float %6450 %6428
       %6452 = OpConvertFToS %int %6300
       %6453 = OpFSub %v3float %6292 %139
       %6454 = OpCompositeConstruct %v3int %6452 %int_0 %int_0
       %6455 = OpBitcast %v3uint %6454
       %6456 = OpIMul %v3uint %6455 %403
       %6457 = OpIAdd %v3uint %6456 %405
       %6458 = OpCompositeExtract %uint %6457 1
       %6459 = OpCompositeExtract %uint %6457 2
       %6460 = OpIMul %uint %6458 %6459
       %6461 = OpCompositeExtract %uint %6457 0
       %6462 = OpIAdd %uint %6461 %6460
       %6463 = OpIMul %uint %6459 %6462
       %6464 = OpIAdd %uint %6458 %6463
       %6465 = OpIMul %uint %6462 %6464
       %6466 = OpIAdd %uint %6459 %6465
       %6467 = OpIMul %uint %6464 %6466
       %6468 = OpIAdd %uint %6462 %6467
       %6469 = OpCompositeInsert %v3uint %6468 %549 0
       %6470 = OpShiftRightLogical %v3uint %6469 %6319
       %6471 = OpCompositeExtract %uint %6470 0
       %6472 = OpCompositeConstruct %v3uint %6471 %6471 %6471
       %6473 = OpBitwiseAnd %v3uint %6472 %388
       %6474 = OpConvertUToF %v3float %6473
       %6475 = OpExtInst %v3float %1 Fma %6474 %392 %282
       %6476 = OpDot %float %6475 %6453
       %6477 = OpConvertFToS %int %6301
       %6478 = OpFSub %v3float %6292 %131
       %6479 = OpCompositeConstruct %v3int %6477 %int_0 %int_0
       %6480 = OpBitcast %v3uint %6479
       %6481 = OpIMul %v3uint %6480 %403
       %6482 = OpIAdd %v3uint %6481 %405
       %6483 = OpCompositeExtract %uint %6482 1
       %6484 = OpCompositeExtract %uint %6482 2
       %6485 = OpIMul %uint %6483 %6484
       %6486 = OpCompositeExtract %uint %6482 0
       %6487 = OpIAdd %uint %6486 %6485
       %6488 = OpIMul %uint %6484 %6487
       %6489 = OpIAdd %uint %6483 %6488
       %6490 = OpIMul %uint %6487 %6489
       %6491 = OpIAdd %uint %6484 %6490
       %6492 = OpIMul %uint %6489 %6491
       %6493 = OpIAdd %uint %6487 %6492
       %6494 = OpCompositeInsert %v3uint %6493 %549 0
       %6495 = OpShiftRightLogical %v3uint %6494 %6319
       %6496 = OpCompositeExtract %uint %6495 0
       %6497 = OpCompositeConstruct %v3uint %6496 %6496 %6496
       %6498 = OpBitwiseAnd %v3uint %6497 %388
       %6499 = OpConvertUToF %v3float %6498
       %6500 = OpExtInst %v3float %1 Fma %6499 %392 %282
       %6501 = OpDot %float %6500 %6478
       %6502 = OpCompositeExtract %float %6292 0
       %6503 = OpCompositeExtract %float %6292 1
       %6504 = OpCompositeExtract %float %6292 2
       %6505 = OpCompositeConstruct %v4float %6502 %6503 %6504 %float_0
       %6506 = OpFMul %v4float %6505 %6505
       %6507 = OpFMul %v4float %6506 %6505
       %6508 = OpVectorTimesScalar %v4float %6505 %float_6
       %6509 = OpFSub %v4float %6508 %383
       %6510 = OpExtInst %v4float %1 Fma %6505 %6509 %384
       %6511 = OpFMul %v4float %6507 %6510
       %6512 = OpCompositeExtract %float %6511 0
       %6513 = OpExtInst %float %1 FMix %6326 %6351 %6512
       %6514 = OpExtInst %float %1 FMix %6376 %6401 %6512
       %6515 = OpCompositeExtract %float %6511 1
       %6516 = OpExtInst %float %1 FMix %6513 %6514 %6515
       %6517 = OpExtInst %float %1 FMix %6426 %6451 %6512
       %6518 = OpExtInst %float %1 FMix %6476 %6501 %6512
       %6519 = OpExtInst %float %1 FMix %6517 %6518 %6515
       %6520 = OpCompositeExtract %float %6511 2
       %6521 = OpExtInst %float %1 FMix %6516 %6519 %6520
       %6522 = OpExtInst %float %1 FAbs %6521
       %6287 = OpExtInst %float %1 Fma %6522 %6284 %6286
       %6282 = OpVectorTimesScalar %v3float %6281 %float_2
       %6285 = OpFMul %float %6284 %float_0_5
       %6289 = OpIAdd %uint %6288 %uint_1
               OpBranch %6280
       %6291 = OpLabel
       %6523 = OpExtInst %float %1 FMix %float_0 %float_1 %6286
       %6524 = OpExtInst %float %1 Fma %6523 %4427 %4429
       %6525 = OpFMul %float %6260 %6524
       %6526 = OpExtInst %float %1 FMix %3870 %3875 %6525
       %6527 = OpExtInst %float %1 Sin %5997
       %6528 = OpFMul %float %6527 %6526
       %6529 = OpFAdd %v3float %5697 %2563
       %6530 = OpExtInst %v3float %1 NMax %6529 %282
       %6531 = OpExtInst %v3float %1 NMin %6530 %131
       %6532 = OpCompositeExtract %float %6531 0
       %6533 = OpCompositeExtract %float %6531 1
       %6534 = OpCompositeConstruct %v2float %6532 %6533
       %6535 = OpFMul %v2float %1698 %6534
       %6536 = OpFMul %v2float %6534 %1699
       %6537 = OpCompositeExtract %float %6535 0
       %6538 = OpCompositeExtract %float %6536 0
       %6539 = OpCompositeExtract %float %6535 1
       %6540 = OpCompositeExtract %float %6536 1
       %6541 = OpFAdd %float %6537 %6539
       %6542 = OpFAdd %float %6538 %6540
       %6543 = OpFMul %float %5714 %4450
       %6544 = OpFDiv %float %float_2 %6543
       %6545 = OpFMul %float %6541 %6544
       %6546 = OpFMul %float %6544 %4455
       %6547 = OpFMul %float %6546 %5985
       %6548 = OpExtInst %float %1 Fma %6542 %6544 %6547
       %6549 = OpExtInst %float %1 Floor %6545
       %6550 = OpFNegate %float %6549
       %6551 = OpExtInst %float %1 Fma %6541 %6544 %6550
       %6552 = OpExtInst %float %1 Fma %6551 %float_2097152 %6548
       %6553 = OpExtInst %float %1 Floor %6552
       %6554 = OpFMul %float %6549 %float_n6_28318548
       %6555 = OpExtInst %float %1 Fma %6545 %float_6_28318548 %6554
       %6556 = OpFMul %float %6553 %float_n6_28318548
       %6557 = OpExtInst %float %1 Fma %6548 %float_6_28318548 %6556
       %6558 = OpExtInst %float %1 Fma %6555 %float_2097152 %6557
       %6559 = OpFMul %float %6526 %2596
       %6560 = OpExtInst %float %1 Sin %6558
       %6561 = OpFMul %float %6560 %6559
       %6562 = OpCompositeConstruct %v3float %548 %548 %6528
       %6563 = OpCompositeConstruct %v3float %548 %548 %6561
       %6564 = OpFAdd %v3float %6562 %6563
       %6565 = OpFSub %v3float %5697 %1690
       %6566 = OpExtInst %v3float %1 NMax %6565 %282
       %6567 = OpExtInst %v3float %1 NMin %6566 %131
       %6568 = OpCompositeExtract %float %6567 0
       %6569 = OpCompositeExtract %float %6567 1
       %6570 = OpCompositeConstruct %v2float %6568 %6569
       %6571 = OpFMul %v2float %1698 %6570
       %6572 = OpFMul %v2float %6570 %1699
       %6573 = OpCompositeExtract %float %6571 0
       %6574 = OpCompositeExtract %float %6572 0
       %6575 = OpCompositeExtract %float %6571 1
       %6576 = OpCompositeExtract %float %6572 1
       %6577 = OpFAdd %float %6573 %6575
       %6578 = OpFAdd %float %6574 %6576
       %6579 = OpFMul %float %6543 %4450
       %6580 = OpFDiv %float %float_2 %6579
       %6581 = OpFMul %float %6577 %6580
       %6582 = OpFMul %float %6580 %4493
       %6583 = OpFMul %float %6582 %5985
       %6584 = OpExtInst %float %1 Fma %6578 %6580 %6583
       %6585 = OpExtInst %float %1 Floor %6581
       %6586 = OpFNegate %float %6585
       %6587 = OpExtInst %float %1 Fma %6577 %6580 %6586
       %6588 = OpExtInst %float %1 Fma %6587 %float_2097152 %6584
       %6589 = OpExtInst %float %1 Floor %6588
       %6590 = OpFMul %float %6585 %float_n6_28318548
       %6591 = OpExtInst %float %1 Fma %6581 %float_6_28318548 %6590
       %6592 = OpFMul %float %6589 %float_n6_28318548
       %6593 = OpExtInst %float %1 Fma %6584 %float_6_28318548 %6592
       %6594 = OpExtInst %float %1 Fma %6591 %float_2097152 %6593
       %6595 = OpFMul %float %6559 %2596
       %6596 = OpExtInst %float %1 Sin %6594
       %6597 = OpFMul %float %6596 %6595
       %6598 = OpCompositeConstruct %v3float %548 %548 %6597
       %6599 = OpFAdd %v3float %6564 %6598
       %6600 = OpFSub %v3float %5697 %2563
       %6601 = OpExtInst %v3float %1 NMax %6600 %282
       %6602 = OpExtInst %v3float %1 NMin %6601 %131
       %6603 = OpCompositeExtract %float %6602 0
       %6604 = OpCompositeExtract %float %6602 1
       %6605 = OpCompositeConstruct %v2float %6603 %6604
       %6606 = OpFMul %v2float %1698 %6605
       %6607 = OpFMul %v2float %6605 %1699
       %6608 = OpCompositeExtract %float %6606 0
       %6609 = OpCompositeExtract %float %6607 0
       %6610 = OpCompositeExtract %float %6606 1
       %6611 = OpCompositeExtract %float %6607 1
       %6612 = OpFAdd %float %6608 %6610
       %6613 = OpFAdd %float %6609 %6611
       %6614 = OpFMul %float %6579 %4450
       %6615 = OpFDiv %float %float_2 %6614
       %6616 = OpFMul %float %6612 %6615
       %6617 = OpFMul %float %6615 %4530
       %6618 = OpFMul %float %6617 %5985
       %6619 = OpExtInst %float %1 Fma %6613 %6615 %6618
       %6620 = OpExtInst %float %1 Floor %6616
       %6621 = OpFNegate %float %6620
       %6622 = OpExtInst %float %1 Fma %6612 %6615 %6621
       %6623 = OpExtInst %float %1 Fma %6622 %float_2097152 %6619
       %6624 = OpExtInst %float %1 Floor %6623
       %6625 = OpFMul %float %6620 %float_n6_28318548
       %6626 = OpExtInst %float %1 Fma %6616 %float_6_28318548 %6625
       %6627 = OpFMul %float %6624 %float_n6_28318548
       %6628 = OpExtInst %float %1 Fma %6619 %float_6_28318548 %6627
       %6629 = OpExtInst %float %1 Fma %6626 %float_2097152 %6628
       %6630 = OpFMul %float %6595 %2596
       %6631 = OpExtInst %float %1 Sin %6629
       %6632 = OpFMul %float %6631 %6630
       %6633 = OpCompositeConstruct %v3float %548 %548 %6632
       %6634 = OpFAdd %v3float %6599 %6633
       %6635 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_83 %int_3
       %6636 = OpLoad %float %6635
       %6637 = OpFSub %float %6636 %float_n1
       %6638 = OpExtInst %float %1 FAbs %6637
       %6639 = OpFOrdGreaterThan %bool %6638 %float_9_99999975en06
       %6640 = OpFOrdGreaterThanEqual %bool %6636 %float_n1
       %6641 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_84 %int_0
       %6642 = OpLoad %float %6641
       %6643 = OpSelect %float %6640 %6636 %6642
       %6644 = OpSelect %float %6639 %6643 %6636
       %6645 = OpFSub %float %6644 %float_1
       %6646 = OpExtInst %float %1 FAbs %6645
       %6647 = OpFOrdGreaterThan %bool %6646 %float_9_99999975en06
       %6648 = OpFOrdGreaterThanEqual %bool %6644 %float_1
       %6649 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_84 %int_1
       %6650 = OpLoad %float %6649
       %6651 = OpSelect %float %6648 %6650 %6636
       %6652 = OpSelect %float %6647 %6651 %6636
       %6653 = OpExtInst %float %1 FAbs %6652
       %6654 = OpFOrdGreaterThan %bool %6653 %float_9_99999975en06
       %6655 = OpFOrdGreaterThanEqual %bool %6652 %float_0
       %6656 = OpSelect %float %6655 %float_1 %float_n1
       %6657 = OpSelect %float %6654 %6656 %float_1
       %6658 = OpExtInst %float %1 NMax %6657 %float_n1
       %6659 = OpExtInst %float %1 NMin %6658 %float_1
       %6660 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_85 %int_2
       %6661 = OpLoad %float %6660
       %6662 = OpCompositeConstruct %v3float %6659 %6661 %float_0
       %6663 = OpFAdd %v3float %6662 %1690
       %6664 = OpExtInst %v3float %1 NMax %6663 %282
       %6665 = OpExtInst %v3float %1 NMin %6664 %131
       %6666 = OpCompositeExtract %float %6665 0
       %6667 = OpCompositeExtract %float %6665 1
       %6668 = OpCompositeConstruct %v2float %6666 %6667
       %6669 = OpFMul %v2float %1698 %6668
       %6670 = OpFMul %v2float %6668 %1699
       %6671 = OpCompositeExtract %float %6669 0
       %6672 = OpCompositeExtract %float %6670 0
       %6673 = OpCompositeExtract %float %6669 1
       %6674 = OpCompositeExtract %float %6670 1
       %6675 = OpFAdd %float %6671 %6673
       %6676 = OpFAdd %float %6672 %6674
       %6677 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_86 %int_3
       %6678 = OpLoad %float %6677
       %6679 = OpFMul %float %6678 %4593
       %6680 = OpFDiv %float %float_2 %6679
       %6681 = OpFMul %float %6675 %6680
       %6682 = OpFMul %float %6680 %4600
       %6683 = OpFMul %float %6682 %5985
       %6684 = OpExtInst %float %1 Fma %6676 %6680 %6683
       %6685 = OpExtInst %float %1 Floor %6681
       %6686 = OpFNegate %float %6685
       %6687 = OpExtInst %float %1 Fma %6675 %6680 %6686
       %6688 = OpExtInst %float %1 Fma %6687 %float_2097152 %6684
       %6689 = OpExtInst %float %1 Floor %6688
       %6690 = OpFMul %float %6685 %float_n6_28318548
       %6691 = OpExtInst %float %1 Fma %6681 %float_6_28318548 %6690
       %6692 = OpFMul %float %6689 %float_n6_28318548
       %6693 = OpExtInst %float %1 Fma %6684 %float_6_28318548 %6692
       %6694 = OpExtInst %float %1 Fma %6691 %float_2097152 %6693
       %6695 = OpFMul %float %6526 %2735
       %6696 = OpExtInst %float %1 Sin %6694
       %6697 = OpFMul %float %6696 %6695
       %6698 = OpFAdd %v3float %6662 %2563
       %6699 = OpExtInst %v3float %1 NMax %6698 %282
       %6700 = OpExtInst %v3float %1 NMin %6699 %131
       %6701 = OpCompositeExtract %float %6700 0
       %6702 = OpCompositeExtract %float %6700 1
       %6703 = OpCompositeConstruct %v2float %6701 %6702
       %6704 = OpFMul %v2float %1698 %6703
       %6705 = OpFMul %v2float %6703 %1699
       %6706 = OpCompositeExtract %float %6704 0
       %6707 = OpCompositeExtract %float %6705 0
       %6708 = OpCompositeExtract %float %6704 1
       %6709 = OpCompositeExtract %float %6705 1
       %6710 = OpFAdd %float %6706 %6708
       %6711 = OpFAdd %float %6707 %6709
       %6712 = OpFMul %float %6679 %4450
       %6713 = OpFDiv %float %float_2 %6712
       %6714 = OpFMul %float %6710 %6713
       %6715 = OpFMul %float %6713 %4635
       %6716 = OpFMul %float %6715 %5985
       %6717 = OpExtInst %float %1 Fma %6711 %6713 %6716
       %6718 = OpExtInst %float %1 Floor %6714
       %6719 = OpFNegate %float %6718
       %6720 = OpExtInst %float %1 Fma %6710 %6713 %6719
       %6721 = OpExtInst %float %1 Fma %6720 %float_2097152 %6717
       %6722 = OpExtInst %float %1 Floor %6721
       %6723 = OpFMul %float %6718 %float_n6_28318548
       %6724 = OpExtInst %float %1 Fma %6714 %float_6_28318548 %6723
       %6725 = OpFMul %float %6722 %float_n6_28318548
       %6726 = OpExtInst %float %1 Fma %6717 %float_6_28318548 %6725
       %6727 = OpExtInst %float %1 Fma %6724 %float_2097152 %6726
       %6728 = OpFMul %float %6695 %2596
       %6729 = OpExtInst %float %1 Sin %6727
       %6730 = OpFMul %float %6729 %6728
       %6731 = OpCompositeConstruct %v3float %548 %548 %6697
       %6732 = OpCompositeConstruct %v3float %548 %548 %6730
       %6733 = OpFAdd %v3float %6731 %6732
       %6734 = OpFSub %v3float %6662 %1690
       %6735 = OpExtInst %v3float %1 NMax %6734 %282
       %6736 = OpExtInst %v3float %1 NMin %6735 %131
       %6737 = OpCompositeExtract %float %6736 0
       %6738 = OpCompositeExtract %float %6736 1
       %6739 = OpCompositeConstruct %v2float %6737 %6738
       %6740 = OpFMul %v2float %1698 %6739
       %6741 = OpFMul %v2float %6739 %1699
       %6742 = OpCompositeExtract %float %6740 0
       %6743 = OpCompositeExtract %float %6741 0
       %6744 = OpCompositeExtract %float %6740 1
       %6745 = OpCompositeExtract %float %6741 1
       %6746 = OpFAdd %float %6742 %6744
       %6747 = OpFAdd %float %6743 %6745
       %6748 = OpFMul %float %6712 %4450
       %6749 = OpFDiv %float %float_2 %6748
       %6750 = OpFMul %float %6746 %6749
       %6751 = OpFMul %float %6749 %4673
       %6752 = OpFMul %float %6751 %5985
       %6753 = OpExtInst %float %1 Fma %6747 %6749 %6752
       %6754 = OpExtInst %float %1 Floor %6750
       %6755 = OpFNegate %float %6754
       %6756 = OpExtInst %float %1 Fma %6746 %6749 %6755
       %6757 = OpExtInst %float %1 Fma %6756 %float_2097152 %6753
       %6758 = OpExtInst %float %1 Floor %6757
       %6759 = OpFMul %float %6754 %float_n6_28318548
       %6760 = OpExtInst %float %1 Fma %6750 %float_6_28318548 %6759
       %6761 = OpFMul %float %6758 %float_n6_28318548
       %6762 = OpExtInst %float %1 Fma %6753 %float_6_28318548 %6761
       %6763 = OpExtInst %float %1 Fma %6760 %float_2097152 %6762
       %6764 = OpFMul %float %6728 %2596
       %6765 = OpExtInst %float %1 Sin %6763
       %6766 = OpFMul %float %6765 %6764
       %6767 = OpCompositeConstruct %v3float %548 %548 %6766
       %6768 = OpFAdd %v3float %6733 %6767
       %6769 = OpFSub %v3float %6662 %2563
       %6770 = OpExtInst %v3float %1 NMax %6769 %282
       %6771 = OpExtInst %v3float %1 NMin %6770 %131
       %6772 = OpCompositeExtract %float %6771 0
       %6773 = OpCompositeExtract %float %6771 1
       %6774 = OpCompositeConstruct %v2float %6772 %6773
       %6775 = OpFMul %v2float %1698 %6774
       %6776 = OpFMul %v2float %6774 %1699
       %6777 = OpCompositeExtract %float %6775 0
       %6778 = OpCompositeExtract %float %6776 0
       %6779 = OpCompositeExtract %float %6775 1
       %6780 = OpCompositeExtract %float %6776 1
       %6781 = OpFAdd %float %6777 %6779
       %6782 = OpFAdd %float %6778 %6780
       %6783 = OpFMul %float %6748 %4450
       %6784 = OpFDiv %float %float_2 %6783
       %6785 = OpFMul %float %6781 %6784
       %6786 = OpFMul %float %6784 %4710
       %6787 = OpFMul %float %6786 %5985
       %6788 = OpExtInst %float %1 Fma %6782 %6784 %6787
       %6789 = OpExtInst %float %1 Floor %6785
       %6790 = OpFNegate %float %6789
       %6791 = OpExtInst %float %1 Fma %6781 %6784 %6790
       %6792 = OpExtInst %float %1 Fma %6791 %float_2097152 %6788
       %6793 = OpExtInst %float %1 Floor %6792
       %6794 = OpFMul %float %6789 %float_n6_28318548
       %6795 = OpExtInst %float %1 Fma %6785 %float_6_28318548 %6794
       %6796 = OpFMul %float %6793 %float_n6_28318548
       %6797 = OpExtInst %float %1 Fma %6788 %float_6_28318548 %6796
       %6798 = OpExtInst %float %1 Fma %6795 %float_2097152 %6797
       %6799 = OpFMul %float %6764 %2596
       %6800 = OpExtInst %float %1 Sin %6798
       %6801 = OpFMul %float %6800 %6799
       %6802 = OpCompositeConstruct %v3float %548 %548 %6801
       %6803 = OpFAdd %v3float %6768 %6802
       %6804 = OpFAdd %v3float %6634 %6803
       %6805 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_0
       %6806 = OpLoad %float %6805
       %6807 = OpFSub %float %6806 %float_n1
       %6808 = OpExtInst %float %1 FAbs %6807
       %6809 = OpFOrdGreaterThan %bool %6808 %float_9_99999975en06
       %6810 = OpFOrdGreaterThanEqual %bool %6806 %float_n1
       %6811 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_1
       %6812 = OpLoad %float %6811
       %6813 = OpSelect %float %6810 %6806 %6812
       %6814 = OpSelect %float %6809 %6813 %6806
       %6815 = OpFSub %float %6814 %float_1
       %6816 = OpExtInst %float %1 FAbs %6815
       %6817 = OpFOrdGreaterThan %bool %6816 %float_9_99999975en06
       %6818 = OpFOrdGreaterThanEqual %bool %6814 %float_1
       %6819 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_2
       %6820 = OpLoad %float %6819
       %6821 = OpSelect %float %6818 %6820 %6806
       %6822 = OpSelect %float %6817 %6821 %6806
       %6823 = OpExtInst %float %1 FAbs %6822
       %6824 = OpFOrdGreaterThan %bool %6823 %float_9_99999975en06
       %6825 = OpFOrdGreaterThanEqual %bool %6822 %float_0
       %6826 = OpSelect %float %6825 %float_1 %float_n1
       %6827 = OpSelect %float %6824 %6826 %float_1
       %6828 = OpExtInst %float %1 NMax %6827 %float_n1
       %6829 = OpExtInst %float %1 NMin %6828 %float_1
       %6830 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_88 %int_3
       %6831 = OpLoad %float %6830
       %6832 = OpCompositeConstruct %v3float %6829 %6831 %float_0
       %6833 = OpFAdd %v3float %6832 %1690
       %6834 = OpExtInst %v3float %1 NMax %6833 %282
       %6835 = OpExtInst %v3float %1 NMin %6834 %131
       %6836 = OpCompositeExtract %float %6835 0
       %6837 = OpCompositeExtract %float %6835 1
       %6838 = OpCompositeConstruct %v2float %6836 %6837
       %6839 = OpFMul %v2float %1698 %6838
       %6840 = OpFMul %v2float %6838 %1699
       %6841 = OpCompositeExtract %float %6839 0
       %6842 = OpCompositeExtract %float %6840 0
       %6843 = OpCompositeExtract %float %6839 1
       %6844 = OpCompositeExtract %float %6840 1
       %6845 = OpFAdd %float %6841 %6843
       %6846 = OpFAdd %float %6842 %6844
       %6847 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_0
       %6848 = OpLoad %float %6847
       %6849 = OpFMul %float %6848 %4593
       %6850 = OpFDiv %float %float_2 %6849
       %6851 = OpFMul %float %6845 %6850
       %6852 = OpFMul %float %6850 %4600
       %6853 = OpFMul %float %6852 %5985
       %6854 = OpExtInst %float %1 Fma %6846 %6850 %6853
       %6855 = OpExtInst %float %1 Floor %6851
       %6856 = OpFNegate %float %6855
       %6857 = OpExtInst %float %1 Fma %6845 %6850 %6856
       %6858 = OpExtInst %float %1 Fma %6857 %float_2097152 %6854
       %6859 = OpExtInst %float %1 Floor %6858
       %6860 = OpFMul %float %6855 %float_n6_28318548
       %6861 = OpExtInst %float %1 Fma %6851 %float_6_28318548 %6860
       %6862 = OpFMul %float %6859 %float_n6_28318548
       %6863 = OpExtInst %float %1 Fma %6854 %float_6_28318548 %6862
       %6864 = OpExtInst %float %1 Fma %6861 %float_2097152 %6863
       %6865 = OpExtInst %float %1 Sin %6864
       %6866 = OpFMul %float %6865 %6695
       %6867 = OpFAdd %v3float %6832 %2563
       %6868 = OpExtInst %v3float %1 NMax %6867 %282
       %6869 = OpExtInst %v3float %1 NMin %6868 %131
       %6870 = OpCompositeExtract %float %6869 0
       %6871 = OpCompositeExtract %float %6869 1
       %6872 = OpCompositeConstruct %v2float %6870 %6871
       %6873 = OpFMul %v2float %1698 %6872
       %6874 = OpFMul %v2float %6872 %1699
       %6875 = OpCompositeExtract %float %6873 0
       %6876 = OpCompositeExtract %float %6874 0
       %6877 = OpCompositeExtract %float %6873 1
       %6878 = OpCompositeExtract %float %6874 1
       %6879 = OpFAdd %float %6875 %6877
       %6880 = OpFAdd %float %6876 %6878
       %6881 = OpFMul %float %6849 %4450
       %6882 = OpFDiv %float %float_2 %6881
       %6883 = OpFMul %float %6879 %6882
       %6884 = OpFMul %float %6882 %4635
       %6885 = OpFMul %float %6884 %5985
       %6886 = OpExtInst %float %1 Fma %6880 %6882 %6885
       %6887 = OpExtInst %float %1 Floor %6883
       %6888 = OpFNegate %float %6887
       %6889 = OpExtInst %float %1 Fma %6879 %6882 %6888
       %6890 = OpExtInst %float %1 Fma %6889 %float_2097152 %6886
       %6891 = OpExtInst %float %1 Floor %6890
       %6892 = OpFMul %float %6887 %float_n6_28318548
       %6893 = OpExtInst %float %1 Fma %6883 %float_6_28318548 %6892
       %6894 = OpFMul %float %6891 %float_n6_28318548
       %6895 = OpExtInst %float %1 Fma %6886 %float_6_28318548 %6894
       %6896 = OpExtInst %float %1 Fma %6893 %float_2097152 %6895
       %6897 = OpExtInst %float %1 Sin %6896
       %6898 = OpFMul %float %6897 %6728
       %6899 = OpCompositeConstruct %v3float %548 %548 %6866
       %6900 = OpCompositeConstruct %v3float %548 %548 %6898
       %6901 = OpFAdd %v3float %6899 %6900
       %6902 = OpFSub %v3float %6832 %1690
       %6903 = OpExtInst %v3float %1 NMax %6902 %282
       %6904 = OpExtInst %v3float %1 NMin %6903 %131
       %6905 = OpCompositeExtract %float %6904 0
       %6906 = OpCompositeExtract %float %6904 1
       %6907 = OpCompositeConstruct %v2float %6905 %6906
       %6908 = OpFMul %v2float %1698 %6907
       %6909 = OpFMul %v2float %6907 %1699
       %6910 = OpCompositeExtract %float %6908 0
       %6911 = OpCompositeExtract %float %6909 0
       %6912 = OpCompositeExtract %float %6908 1
       %6913 = OpCompositeExtract %float %6909 1
       %6914 = OpFAdd %float %6910 %6912
       %6915 = OpFAdd %float %6911 %6913
       %6916 = OpFMul %float %6881 %4450
       %6917 = OpFDiv %float %float_2 %6916
       %6918 = OpFMul %float %6914 %6917
       %6919 = OpFMul %float %6917 %4673
       %6920 = OpFMul %float %6919 %5985
       %6921 = OpExtInst %float %1 Fma %6915 %6917 %6920
       %6922 = OpExtInst %float %1 Floor %6918
       %6923 = OpFNegate %float %6922
       %6924 = OpExtInst %float %1 Fma %6914 %6917 %6923
       %6925 = OpExtInst %float %1 Fma %6924 %float_2097152 %6921
       %6926 = OpExtInst %float %1 Floor %6925
       %6927 = OpFMul %float %6922 %float_n6_28318548
       %6928 = OpExtInst %float %1 Fma %6918 %float_6_28318548 %6927
       %6929 = OpFMul %float %6926 %float_n6_28318548
       %6930 = OpExtInst %float %1 Fma %6921 %float_6_28318548 %6929
       %6931 = OpExtInst %float %1 Fma %6928 %float_2097152 %6930
       %6932 = OpExtInst %float %1 Sin %6931
       %6933 = OpFMul %float %6932 %6764
       %6934 = OpCompositeConstruct %v3float %548 %548 %6933
       %6935 = OpFAdd %v3float %6901 %6934
       %6936 = OpFSub %v3float %6832 %2563
       %6937 = OpExtInst %v3float %1 NMax %6936 %282
       %6938 = OpExtInst %v3float %1 NMin %6937 %131
       %6939 = OpCompositeExtract %float %6938 0
       %6940 = OpCompositeExtract %float %6938 1
       %6941 = OpCompositeConstruct %v2float %6939 %6940
       %6942 = OpFMul %v2float %1698 %6941
       %6943 = OpFMul %v2float %6941 %1699
       %6944 = OpCompositeExtract %float %6942 0
       %6945 = OpCompositeExtract %float %6943 0
       %6946 = OpCompositeExtract %float %6942 1
       %6947 = OpCompositeExtract %float %6943 1
       %6948 = OpFAdd %float %6944 %6946
       %6949 = OpFAdd %float %6945 %6947
       %6950 = OpFMul %float %6916 %4450
       %6951 = OpFDiv %float %float_2 %6950
       %6952 = OpFMul %float %6948 %6951
       %6953 = OpFMul %float %6951 %4710
       %6954 = OpFMul %float %6953 %5985
       %6955 = OpExtInst %float %1 Fma %6949 %6951 %6954
       %6956 = OpExtInst %float %1 Floor %6952
       %6957 = OpFNegate %float %6956
       %6958 = OpExtInst %float %1 Fma %6948 %6951 %6957
       %6959 = OpExtInst %float %1 Fma %6958 %float_2097152 %6955
       %6960 = OpExtInst %float %1 Floor %6959
       %6961 = OpFMul %float %6956 %float_n6_28318548
       %6962 = OpExtInst %float %1 Fma %6952 %float_6_28318548 %6961
       %6963 = OpFMul %float %6960 %float_n6_28318548
       %6964 = OpExtInst %float %1 Fma %6955 %float_6_28318548 %6963
       %6965 = OpExtInst %float %1 Fma %6962 %float_2097152 %6964
       %6966 = OpExtInst %float %1 Sin %6965
       %6967 = OpFMul %float %6966 %6799
       %6968 = OpCompositeConstruct %v3float %548 %548 %6967
       %6969 = OpFAdd %v3float %6935 %6968
       %6970 = OpFAdd %v3float %6804 %6969
       %6971 = OpFMul %float %3568 %float_8
       %6972 = OpFMul %float %5713 %6971
       %6973 = OpFDiv %float %float_2 %6972
       %6974 = OpFMul %float %5710 %6973
       %6975 = OpFMul %float %6973 %4901
       %6976 = OpFMul %float %6975 %5985
       %6977 = OpExtInst %float %1 Fma %5711 %6973 %6976
       %6978 = OpExtInst %float %1 Floor %6974
       %6979 = OpFNegate %float %6978
       %6980 = OpExtInst %float %1 Fma %5710 %6973 %6979
       %6981 = OpExtInst %float %1 Fma %6980 %float_2097152 %6977
       %6982 = OpExtInst %float %1 Floor %6981
       %6983 = OpFMul %float %6978 %float_n6_28318548
       %6984 = OpExtInst %float %1 Fma %6974 %float_6_28318548 %6983
       %6985 = OpFMul %float %6982 %float_n6_28318548
       %6986 = OpExtInst %float %1 Fma %6977 %float_6_28318548 %6985
       %6987 = OpExtInst %float %1 Fma %6984 %float_2097152 %6986
       %6988 = OpFMul %float %6526 %float_8
       %6989 = OpExtInst %float %1 Sin %6987
       %6990 = OpFMul %float %6989 %6988
       %6991 = OpFMul %float %6972 %4450
       %6992 = OpFDiv %float %float_2 %6991
       %6993 = OpFMul %float %6541 %6992
       %6994 = OpFMul %float %6992 %4922
       %6995 = OpFMul %float %6994 %5985
       %6996 = OpExtInst %float %1 Fma %6542 %6992 %6995
       %6997 = OpExtInst %float %1 Floor %6993
       %6998 = OpFNegate %float %6997
       %6999 = OpExtInst %float %1 Fma %6541 %6992 %6998
       %7000 = OpExtInst %float %1 Fma %6999 %float_2097152 %6996
       %7001 = OpExtInst %float %1 Floor %7000
       %7002 = OpFMul %float %6997 %float_n6_28318548
       %7003 = OpExtInst %float %1 Fma %6993 %float_6_28318548 %7002
       %7004 = OpFMul %float %7001 %float_n6_28318548
       %7005 = OpExtInst %float %1 Fma %6996 %float_6_28318548 %7004
       %7006 = OpExtInst %float %1 Fma %7003 %float_2097152 %7005
       %7007 = OpFMul %float %6988 %2596
       %7008 = OpExtInst %float %1 Sin %7006
       %7009 = OpFMul %float %7008 %7007
       %7010 = OpCompositeConstruct %v3float %548 %548 %6990
       %7011 = OpCompositeConstruct %v3float %548 %548 %7009
       %7012 = OpFAdd %v3float %7010 %7011
       %7013 = OpFMul %float %6991 %4450
       %7014 = OpFDiv %float %float_2 %7013
       %7015 = OpFMul %float %6577 %7014
       %7016 = OpFMul %float %7014 %4946
       %7017 = OpFMul %float %7016 %5985
       %7018 = OpExtInst %float %1 Fma %6578 %7014 %7017
       %7019 = OpExtInst %float %1 Floor %7015
       %7020 = OpFNegate %float %7019
       %7021 = OpExtInst %float %1 Fma %6577 %7014 %7020
       %7022 = OpExtInst %float %1 Fma %7021 %float_2097152 %7018
       %7023 = OpExtInst %float %1 Floor %7022
       %7024 = OpFMul %float %7019 %float_n6_28318548
       %7025 = OpExtInst %float %1 Fma %7015 %float_6_28318548 %7024
       %7026 = OpFMul %float %7023 %float_n6_28318548
       %7027 = OpExtInst %float %1 Fma %7018 %float_6_28318548 %7026
       %7028 = OpExtInst %float %1 Fma %7025 %float_2097152 %7027
       %7029 = OpFMul %float %7007 %2596
       %7030 = OpExtInst %float %1 Sin %7028
       %7031 = OpFMul %float %7030 %7029
       %7032 = OpCompositeConstruct %v3float %548 %548 %7031
       %7033 = OpFAdd %v3float %7012 %7032
       %7034 = OpFMul %float %7013 %4450
       %7035 = OpFDiv %float %float_2 %7034
       %7036 = OpFMul %float %6612 %7035
       %7037 = OpFMul %float %7035 %4969
       %7038 = OpFMul %float %7037 %5985
       %7039 = OpExtInst %float %1 Fma %6613 %7035 %7038
       %7040 = OpExtInst %float %1 Floor %7036
       %7041 = OpFNegate %float %7040
       %7042 = OpExtInst %float %1 Fma %6612 %7035 %7041
       %7043 = OpExtInst %float %1 Fma %7042 %float_2097152 %7039
       %7044 = OpExtInst %float %1 Floor %7043
       %7045 = OpFMul %float %7040 %float_n6_28318548
       %7046 = OpExtInst %float %1 Fma %7036 %float_6_28318548 %7045
       %7047 = OpFMul %float %7044 %float_n6_28318548
       %7048 = OpExtInst %float %1 Fma %7039 %float_6_28318548 %7047
       %7049 = OpExtInst %float %1 Fma %7046 %float_2097152 %7048
       %7050 = OpFMul %float %7029 %2596
       %7051 = OpExtInst %float %1 Sin %7049
       %7052 = OpFMul %float %7051 %7050
       %7053 = OpCompositeConstruct %v3float %548 %548 %7052
       %7054 = OpFAdd %v3float %7033 %7053
       %7055 = OpFMul %float %6971 %4592
       %7056 = OpFMul %float %6678 %7055
       %7057 = OpFDiv %float %float_2 %7056
       %7058 = OpFMul %float %6675 %7057
       %7059 = OpFMul %float %7057 %4993
       %7060 = OpFMul %float %7059 %5985
       %7061 = OpExtInst %float %1 Fma %6676 %7057 %7060
       %7062 = OpExtInst %float %1 Floor %7058
       %7063 = OpFNegate %float %7062
       %7064 = OpExtInst %float %1 Fma %6675 %7057 %7063
       %7065 = OpExtInst %float %1 Fma %7064 %float_2097152 %7061
       %7066 = OpExtInst %float %1 Floor %7065
       %7067 = OpFMul %float %7062 %float_n6_28318548
       %7068 = OpExtInst %float %1 Fma %7058 %float_6_28318548 %7067
       %7069 = OpFMul %float %7066 %float_n6_28318548
       %7070 = OpExtInst %float %1 Fma %7061 %float_6_28318548 %7069
       %7071 = OpExtInst %float %1 Fma %7068 %float_2097152 %7070
       %7072 = OpFMul %float %6988 %2735
       %7073 = OpExtInst %float %1 Sin %7071
       %7074 = OpFMul %float %7073 %7072
       %7075 = OpFMul %float %7056 %4450
       %7076 = OpFDiv %float %float_2 %7075
       %7077 = OpFMul %float %6710 %7076
       %7078 = OpFMul %float %7076 %5014
       %7079 = OpFMul %float %7078 %5985
       %7080 = OpExtInst %float %1 Fma %6711 %7076 %7079
       %7081 = OpExtInst %float %1 Floor %7077
       %7082 = OpFNegate %float %7081
       %7083 = OpExtInst %float %1 Fma %6710 %7076 %7082
       %7084 = OpExtInst %float %1 Fma %7083 %float_2097152 %7080
       %7085 = OpExtInst %float %1 Floor %7084
       %7086 = OpFMul %float %7081 %float_n6_28318548
       %7087 = OpExtInst %float %1 Fma %7077 %float_6_28318548 %7086
       %7088 = OpFMul %float %7085 %float_n6_28318548
       %7089 = OpExtInst %float %1 Fma %7080 %float_6_28318548 %7088
       %7090 = OpExtInst %float %1 Fma %7087 %float_2097152 %7089
       %7091 = OpFMul %float %7072 %2596
       %7092 = OpExtInst %float %1 Sin %7090
       %7093 = OpFMul %float %7092 %7091
       %7094 = OpCompositeConstruct %v3float %548 %548 %7074
       %7095 = OpCompositeConstruct %v3float %548 %548 %7093
       %7096 = OpFAdd %v3float %7094 %7095
       %7097 = OpFMul %float %7075 %4450
       %7098 = OpFDiv %float %float_2 %7097
       %7099 = OpFMul %float %6746 %7098
       %7100 = OpFMul %float %7098 %5038
       %7101 = OpFMul %float %7100 %5985
       %7102 = OpExtInst %float %1 Fma %6747 %7098 %7101
       %7103 = OpExtInst %float %1 Floor %7099
       %7104 = OpFNegate %float %7103
       %7105 = OpExtInst %float %1 Fma %6746 %7098 %7104
       %7106 = OpExtInst %float %1 Fma %7105 %float_2097152 %7102
       %7107 = OpExtInst %float %1 Floor %7106
       %7108 = OpFMul %float %7103 %float_n6_28318548
       %7109 = OpExtInst %float %1 Fma %7099 %float_6_28318548 %7108
       %7110 = OpFMul %float %7107 %float_n6_28318548
       %7111 = OpExtInst %float %1 Fma %7102 %float_6_28318548 %7110
       %7112 = OpExtInst %float %1 Fma %7109 %float_2097152 %7111
       %7113 = OpFMul %float %7091 %2596
       %7114 = OpExtInst %float %1 Sin %7112
       %7115 = OpFMul %float %7114 %7113
       %7116 = OpCompositeConstruct %v3float %548 %548 %7115
       %7117 = OpFAdd %v3float %7096 %7116
       %7118 = OpFMul %float %7097 %4450
       %7119 = OpFDiv %float %float_2 %7118
       %7120 = OpFMul %float %6781 %7119
       %7121 = OpFMul %float %7119 %5061
       %7122 = OpFMul %float %7121 %5985
       %7123 = OpExtInst %float %1 Fma %6782 %7119 %7122
       %7124 = OpExtInst %float %1 Floor %7120
       %7125 = OpFNegate %float %7124
       %7126 = OpExtInst %float %1 Fma %6781 %7119 %7125
       %7127 = OpExtInst %float %1 Fma %7126 %float_2097152 %7123
       %7128 = OpExtInst %float %1 Floor %7127
       %7129 = OpFMul %float %7124 %float_n6_28318548
       %7130 = OpExtInst %float %1 Fma %7120 %float_6_28318548 %7129
       %7131 = OpFMul %float %7128 %float_n6_28318548
       %7132 = OpExtInst %float %1 Fma %7123 %float_6_28318548 %7131
       %7133 = OpExtInst %float %1 Fma %7130 %float_2097152 %7132
       %7134 = OpFMul %float %7113 %2596
       %7135 = OpExtInst %float %1 Sin %7133
       %7136 = OpFMul %float %7135 %7134
       %7137 = OpCompositeConstruct %v3float %548 %548 %7136
       %7138 = OpFAdd %v3float %7117 %7137
       %7139 = OpFAdd %v3float %7054 %7138
       %7140 = OpFMul %float %6848 %7055
       %7141 = OpFDiv %float %float_2 %7140
       %7142 = OpFMul %float %6845 %7141
       %7143 = OpFMul %float %7141 %4993
       %7144 = OpFMul %float %7143 %5985
       %7145 = OpExtInst %float %1 Fma %6846 %7141 %7144
       %7146 = OpExtInst %float %1 Floor %7142
       %7147 = OpFNegate %float %7146
       %7148 = OpExtInst %float %1 Fma %6845 %7141 %7147
       %7149 = OpExtInst %float %1 Fma %7148 %float_2097152 %7145
       %7150 = OpExtInst %float %1 Floor %7149
       %7151 = OpFMul %float %7146 %float_n6_28318548
       %7152 = OpExtInst %float %1 Fma %7142 %float_6_28318548 %7151
       %7153 = OpFMul %float %7150 %float_n6_28318548
       %7154 = OpExtInst %float %1 Fma %7145 %float_6_28318548 %7153
       %7155 = OpExtInst %float %1 Fma %7152 %float_2097152 %7154
       %7156 = OpExtInst %float %1 Sin %7155
       %7157 = OpFMul %float %7156 %7072
       %7158 = OpFMul %float %7140 %4450
       %7159 = OpFDiv %float %float_2 %7158
       %7160 = OpFMul %float %6879 %7159
       %7161 = OpFMul %float %7159 %5014
       %7162 = OpFMul %float %7161 %5985
       %7163 = OpExtInst %float %1 Fma %6880 %7159 %7162
       %7164 = OpExtInst %float %1 Floor %7160
       %7165 = OpFNegate %float %7164
       %7166 = OpExtInst %float %1 Fma %6879 %7159 %7165
       %7167 = OpExtInst %float %1 Fma %7166 %float_2097152 %7163
       %7168 = OpExtInst %float %1 Floor %7167
       %7169 = OpFMul %float %7164 %float_n6_28318548
       %7170 = OpExtInst %float %1 Fma %7160 %float_6_28318548 %7169
       %7171 = OpFMul %float %7168 %float_n6_28318548
       %7172 = OpExtInst %float %1 Fma %7163 %float_6_28318548 %7171
       %7173 = OpExtInst %float %1 Fma %7170 %float_2097152 %7172
       %7174 = OpExtInst %float %1 Sin %7173
       %7175 = OpFMul %float %7174 %7091
       %7176 = OpCompositeConstruct %v3float %548 %548 %7157
       %7177 = OpCompositeConstruct %v3float %548 %548 %7175
       %7178 = OpFAdd %v3float %7176 %7177
       %7179 = OpFMul %float %7158 %4450
       %7180 = OpFDiv %float %float_2 %7179
       %7181 = OpFMul %float %6914 %7180
       %7182 = OpFMul %float %7180 %5038
       %7183 = OpFMul %float %7182 %5985
       %7184 = OpExtInst %float %1 Fma %6915 %7180 %7183
       %7185 = OpExtInst %float %1 Floor %7181
       %7186 = OpFNegate %float %7185
       %7187 = OpExtInst %float %1 Fma %6914 %7180 %7186
       %7188 = OpExtInst %float %1 Fma %7187 %float_2097152 %7184
       %7189 = OpExtInst %float %1 Floor %7188
       %7190 = OpFMul %float %7185 %float_n6_28318548
       %7191 = OpExtInst %float %1 Fma %7181 %float_6_28318548 %7190
       %7192 = OpFMul %float %7189 %float_n6_28318548
       %7193 = OpExtInst %float %1 Fma %7184 %float_6_28318548 %7192
       %7194 = OpExtInst %float %1 Fma %7191 %float_2097152 %7193
       %7195 = OpExtInst %float %1 Sin %7194
       %7196 = OpFMul %float %7195 %7113
       %7197 = OpCompositeConstruct %v3float %548 %548 %7196
       %7198 = OpFAdd %v3float %7178 %7197
       %7199 = OpFMul %float %7179 %4450
       %7200 = OpFDiv %float %float_2 %7199
       %7201 = OpFMul %float %6948 %7200
       %7202 = OpFMul %float %7200 %5061
       %7203 = OpFMul %float %7202 %5985
       %7204 = OpExtInst %float %1 Fma %6949 %7200 %7203
       %7205 = OpExtInst %float %1 Floor %7201
       %7206 = OpFNegate %float %7205
       %7207 = OpExtInst %float %1 Fma %6948 %7200 %7206
       %7208 = OpExtInst %float %1 Fma %7207 %float_2097152 %7204
       %7209 = OpExtInst %float %1 Floor %7208
       %7210 = OpFMul %float %7205 %float_n6_28318548
       %7211 = OpExtInst %float %1 Fma %7201 %float_6_28318548 %7210
       %7212 = OpFMul %float %7209 %float_n6_28318548
       %7213 = OpExtInst %float %1 Fma %7204 %float_6_28318548 %7212
       %7214 = OpExtInst %float %1 Fma %7211 %float_2097152 %7213
       %7215 = OpExtInst %float %1 Sin %7214
       %7216 = OpFMul %float %7215 %7134
       %7217 = OpCompositeConstruct %v3float %548 %548 %7216
       %7218 = OpFAdd %v3float %7198 %7217
       %7219 = OpFAdd %v3float %7139 %7218
       %7220 = OpFMul %float %5713 %5161
       %7221 = OpFDiv %float %float_2 %7220
       %7222 = OpFMul %float %5710 %7221
       %7223 = OpFMul %float %7221 %5166
       %7224 = OpFMul %float %7223 %5985
       %7225 = OpExtInst %float %1 Fma %5711 %7221 %7224
       %7226 = OpExtInst %float %1 Floor %7222
       %7227 = OpFNegate %float %7226
       %7228 = OpExtInst %float %1 Fma %5710 %7221 %7227
       %7229 = OpExtInst %float %1 Fma %7228 %float_2097152 %7225
       %7230 = OpExtInst %float %1 Floor %7229
       %7231 = OpFMul %float %7226 %float_n6_28318548
       %7232 = OpExtInst %float %1 Fma %7222 %float_6_28318548 %7231
       %7233 = OpFMul %float %7230 %float_n6_28318548
       %7234 = OpExtInst %float %1 Fma %7225 %float_6_28318548 %7233
       %7235 = OpExtInst %float %1 Fma %7232 %float_2097152 %7234
       %7236 = OpFMul %float %6526 %float_4
       %7237 = OpExtInst %float %1 Sin %7235
       %7238 = OpFMul %float %7237 %7236
       %7239 = OpFMul %float %7220 %4450
       %7240 = OpFDiv %float %float_2 %7239
       %7241 = OpFMul %float %6541 %7240
       %7242 = OpFMul %float %7240 %5186
       %7243 = OpFMul %float %7242 %5985
       %7244 = OpExtInst %float %1 Fma %6542 %7240 %7243
       %7245 = OpExtInst %float %1 Floor %7241
       %7246 = OpFNegate %float %7245
       %7247 = OpExtInst %float %1 Fma %6541 %7240 %7246
       %7248 = OpExtInst %float %1 Fma %7247 %float_2097152 %7244
       %7249 = OpExtInst %float %1 Floor %7248
       %7250 = OpFMul %float %7245 %float_n6_28318548
       %7251 = OpExtInst %float %1 Fma %7241 %float_6_28318548 %7250
       %7252 = OpFMul %float %7249 %float_n6_28318548
       %7253 = OpExtInst %float %1 Fma %7244 %float_6_28318548 %7252
       %7254 = OpExtInst %float %1 Fma %7251 %float_2097152 %7253
       %7255 = OpFMul %float %7236 %2596
       %7256 = OpExtInst %float %1 Sin %7254
       %7257 = OpFMul %float %7256 %7255
       %7258 = OpCompositeConstruct %v3float %548 %548 %7238
       %7259 = OpCompositeConstruct %v3float %548 %548 %7257
       %7260 = OpFAdd %v3float %7258 %7259
       %7261 = OpFMul %float %7239 %4450
       %7262 = OpFDiv %float %float_2 %7261
       %7263 = OpFMul %float %6577 %7262
       %7264 = OpFMul %float %7262 %5209
       %7265 = OpFMul %float %7264 %5985
       %7266 = OpExtInst %float %1 Fma %6578 %7262 %7265
       %7267 = OpExtInst %float %1 Floor %7263
       %7268 = OpFNegate %float %7267
       %7269 = OpExtInst %float %1 Fma %6577 %7262 %7268
       %7270 = OpExtInst %float %1 Fma %7269 %float_2097152 %7266
       %7271 = OpExtInst %float %1 Floor %7270
       %7272 = OpFMul %float %7267 %float_n6_28318548
       %7273 = OpExtInst %float %1 Fma %7263 %float_6_28318548 %7272
       %7274 = OpFMul %float %7271 %float_n6_28318548
       %7275 = OpExtInst %float %1 Fma %7266 %float_6_28318548 %7274
       %7276 = OpExtInst %float %1 Fma %7273 %float_2097152 %7275
       %7277 = OpFMul %float %7255 %2596
       %7278 = OpExtInst %float %1 Sin %7276
       %7279 = OpFMul %float %7278 %7277
       %7280 = OpCompositeConstruct %v3float %548 %548 %7279
       %7281 = OpFAdd %v3float %7260 %7280
       %7282 = OpFMul %float %7261 %4450
       %7283 = OpFDiv %float %float_2 %7282
       %7284 = OpFMul %float %6612 %7283
       %7285 = OpFMul %float %7283 %5231
       %7286 = OpFMul %float %7285 %5985
       %7287 = OpExtInst %float %1 Fma %6613 %7283 %7286
       %7288 = OpExtInst %float %1 Floor %7284
       %7289 = OpFNegate %float %7288
       %7290 = OpExtInst %float %1 Fma %6612 %7283 %7289
       %7291 = OpExtInst %float %1 Fma %7290 %float_2097152 %7287
       %7292 = OpExtInst %float %1 Floor %7291
       %7293 = OpFMul %float %7288 %float_n6_28318548
       %7294 = OpExtInst %float %1 Fma %7284 %float_6_28318548 %7293
       %7295 = OpFMul %float %7292 %float_n6_28318548
       %7296 = OpExtInst %float %1 Fma %7287 %float_6_28318548 %7295
       %7297 = OpExtInst %float %1 Fma %7294 %float_2097152 %7296
       %7298 = OpFMul %float %7277 %2596
       %7299 = OpExtInst %float %1 Sin %7297
       %7300 = OpFMul %float %7299 %7298
       %7301 = OpCompositeConstruct %v3float %548 %548 %7300
       %7302 = OpFAdd %v3float %7281 %7301
       %7303 = OpFMul %float %6678 %5249
       %7304 = OpFDiv %float %float_2 %7303
       %7305 = OpFMul %float %6675 %7304
       %7306 = OpFMul %float %7304 %5254
       %7307 = OpFMul %float %7306 %5985
       %7308 = OpExtInst %float %1 Fma %6676 %7304 %7307
       %7309 = OpExtInst %float %1 Floor %7305
       %7310 = OpFNegate %float %7309
       %7311 = OpExtInst %float %1 Fma %6675 %7304 %7310
       %7312 = OpExtInst %float %1 Fma %7311 %float_2097152 %7308
       %7313 = OpExtInst %float %1 Floor %7312
       %7314 = OpFMul %float %7309 %float_n6_28318548
       %7315 = OpExtInst %float %1 Fma %7305 %float_6_28318548 %7314
       %7316 = OpFMul %float %7313 %float_n6_28318548
       %7317 = OpExtInst %float %1 Fma %7308 %float_6_28318548 %7316
       %7318 = OpExtInst %float %1 Fma %7315 %float_2097152 %7317
       %7319 = OpFMul %float %7236 %2735
       %7320 = OpExtInst %float %1 Sin %7318
       %7321 = OpFMul %float %7320 %7319
       %7322 = OpFMul %float %7303 %4450
       %7323 = OpFDiv %float %float_2 %7322
       %7324 = OpFMul %float %6710 %7323
       %7325 = OpFMul %float %7323 %5274
       %7326 = OpFMul %float %7325 %5985
       %7327 = OpExtInst %float %1 Fma %6711 %7323 %7326
       %7328 = OpExtInst %float %1 Floor %7324
       %7329 = OpFNegate %float %7328
       %7330 = OpExtInst %float %1 Fma %6710 %7323 %7329
       %7331 = OpExtInst %float %1 Fma %7330 %float_2097152 %7327
       %7332 = OpExtInst %float %1 Floor %7331
       %7333 = OpFMul %float %7328 %float_n6_28318548
       %7334 = OpExtInst %float %1 Fma %7324 %float_6_28318548 %7333
       %7335 = OpFMul %float %7332 %float_n6_28318548
       %7336 = OpExtInst %float %1 Fma %7327 %float_6_28318548 %7335
       %7337 = OpExtInst %float %1 Fma %7334 %float_2097152 %7336
       %7338 = OpFMul %float %7319 %2596
       %7339 = OpExtInst %float %1 Sin %7337
       %7340 = OpFMul %float %7339 %7338
       %7341 = OpCompositeConstruct %v3float %548 %548 %7321
       %7342 = OpCompositeConstruct %v3float %548 %548 %7340
       %7343 = OpFAdd %v3float %7341 %7342
       %7344 = OpFMul %float %7322 %4450
       %7345 = OpFDiv %float %float_2 %7344
       %7346 = OpFMul %float %6746 %7345
       %7347 = OpFMul %float %7345 %5297
       %7348 = OpFMul %float %7347 %5985
       %7349 = OpExtInst %float %1 Fma %6747 %7345 %7348
       %7350 = OpExtInst %float %1 Floor %7346
       %7351 = OpFNegate %float %7350
       %7352 = OpExtInst %float %1 Fma %6746 %7345 %7351
       %7353 = OpExtInst %float %1 Fma %7352 %float_2097152 %7349
       %7354 = OpExtInst %float %1 Floor %7353
       %7355 = OpFMul %float %7350 %float_n6_28318548
       %7356 = OpExtInst %float %1 Fma %7346 %float_6_28318548 %7355
       %7357 = OpFMul %float %7354 %float_n6_28318548
       %7358 = OpExtInst %float %1 Fma %7349 %float_6_28318548 %7357
       %7359 = OpExtInst %float %1 Fma %7356 %float_2097152 %7358
       %7360 = OpFMul %float %7338 %2596
       %7361 = OpExtInst %float %1 Sin %7359
       %7362 = OpFMul %float %7361 %7360
       %7363 = OpCompositeConstruct %v3float %548 %548 %7362
       %7364 = OpFAdd %v3float %7343 %7363
       %7365 = OpFMul %float %7344 %4450
       %7366 = OpFDiv %float %float_2 %7365
       %7367 = OpFMul %float %6781 %7366
       %7368 = OpFMul %float %7366 %5319
       %7369 = OpFMul %float %7368 %5985
       %7370 = OpExtInst %float %1 Fma %6782 %7366 %7369
       %7371 = OpExtInst %float %1 Floor %7367
       %7372 = OpFNegate %float %7371
       %7373 = OpExtInst %float %1 Fma %6781 %7366 %7372
       %7374 = OpExtInst %float %1 Fma %7373 %float_2097152 %7370
       %7375 = OpExtInst %float %1 Floor %7374
       %7376 = OpFMul %float %7371 %float_n6_28318548
       %7377 = OpExtInst %float %1 Fma %7367 %float_6_28318548 %7376
       %7378 = OpFMul %float %7375 %float_n6_28318548
       %7379 = OpExtInst %float %1 Fma %7370 %float_6_28318548 %7378
       %7380 = OpExtInst %float %1 Fma %7377 %float_2097152 %7379
       %7381 = OpFMul %float %7360 %2596
       %7382 = OpExtInst %float %1 Sin %7380
       %7383 = OpFMul %float %7382 %7381
       %7384 = OpCompositeConstruct %v3float %548 %548 %7383
       %7385 = OpFAdd %v3float %7364 %7384
       %7386 = OpFAdd %v3float %7302 %7385
       %7387 = OpFMul %float %6848 %5249
       %7388 = OpFDiv %float %float_2 %7387
       %7389 = OpFMul %float %6845 %7388
       %7390 = OpFMul %float %7388 %5254
       %7391 = OpFMul %float %7390 %5985
       %7392 = OpExtInst %float %1 Fma %6846 %7388 %7391
       %7393 = OpExtInst %float %1 Floor %7389
       %7394 = OpFNegate %float %7393
       %7395 = OpExtInst %float %1 Fma %6845 %7388 %7394
       %7396 = OpExtInst %float %1 Fma %7395 %float_2097152 %7392
       %7397 = OpExtInst %float %1 Floor %7396
       %7398 = OpFMul %float %7393 %float_n6_28318548
       %7399 = OpExtInst %float %1 Fma %7389 %float_6_28318548 %7398
       %7400 = OpFMul %float %7397 %float_n6_28318548
       %7401 = OpExtInst %float %1 Fma %7392 %float_6_28318548 %7400
       %7402 = OpExtInst %float %1 Fma %7399 %float_2097152 %7401
       %7403 = OpExtInst %float %1 Sin %7402
       %7404 = OpFMul %float %7403 %7319
       %7405 = OpFMul %float %7387 %4450
       %7406 = OpFDiv %float %float_2 %7405
       %7407 = OpFMul %float %6879 %7406
       %7408 = OpFMul %float %7406 %5274
       %7409 = OpFMul %float %7408 %5985
       %7410 = OpExtInst %float %1 Fma %6880 %7406 %7409
       %7411 = OpExtInst %float %1 Floor %7407
       %7412 = OpFNegate %float %7411
       %7413 = OpExtInst %float %1 Fma %6879 %7406 %7412
       %7414 = OpExtInst %float %1 Fma %7413 %float_2097152 %7410
       %7415 = OpExtInst %float %1 Floor %7414
       %7416 = OpFMul %float %7411 %float_n6_28318548
       %7417 = OpExtInst %float %1 Fma %7407 %float_6_28318548 %7416
       %7418 = OpFMul %float %7415 %float_n6_28318548
       %7419 = OpExtInst %float %1 Fma %7410 %float_6_28318548 %7418
       %7420 = OpExtInst %float %1 Fma %7417 %float_2097152 %7419
       %7421 = OpExtInst %float %1 Sin %7420
       %7422 = OpFMul %float %7421 %7338
       %7423 = OpCompositeConstruct %v3float %548 %548 %7404
       %7424 = OpCompositeConstruct %v3float %548 %548 %7422
       %7425 = OpFAdd %v3float %7423 %7424
       %7426 = OpFMul %float %7405 %4450
       %7427 = OpFDiv %float %float_2 %7426
       %7428 = OpFMul %float %6914 %7427
       %7429 = OpFMul %float %7427 %5297
       %7430 = OpFMul %float %7429 %5985
       %7431 = OpExtInst %float %1 Fma %6915 %7427 %7430
       %7432 = OpExtInst %float %1 Floor %7428
       %7433 = OpFNegate %float %7432
       %7434 = OpExtInst %float %1 Fma %6914 %7427 %7433
       %7435 = OpExtInst %float %1 Fma %7434 %float_2097152 %7431
       %7436 = OpExtInst %float %1 Floor %7435
       %7437 = OpFMul %float %7432 %float_n6_28318548
       %7438 = OpExtInst %float %1 Fma %7428 %float_6_28318548 %7437
       %7439 = OpFMul %float %7436 %float_n6_28318548
       %7440 = OpExtInst %float %1 Fma %7431 %float_6_28318548 %7439
       %7441 = OpExtInst %float %1 Fma %7438 %float_2097152 %7440
       %7442 = OpExtInst %float %1 Sin %7441
       %7443 = OpFMul %float %7442 %7360
       %7444 = OpCompositeConstruct %v3float %548 %548 %7443
       %7445 = OpFAdd %v3float %7425 %7444
       %7446 = OpFMul %float %7426 %4450
       %7447 = OpFDiv %float %float_2 %7446
       %7448 = OpFMul %float %6948 %7447
       %7449 = OpFMul %float %7447 %5319
       %7450 = OpFMul %float %7449 %5985
       %7451 = OpExtInst %float %1 Fma %6949 %7447 %7450
       %7452 = OpExtInst %float %1 Floor %7448
       %7453 = OpFNegate %float %7452
       %7454 = OpExtInst %float %1 Fma %6948 %7447 %7453
       %7455 = OpExtInst %float %1 Fma %7454 %float_2097152 %7451
       %7456 = OpExtInst %float %1 Floor %7455
       %7457 = OpFMul %float %7452 %float_n6_28318548
       %7458 = OpExtInst %float %1 Fma %7448 %float_6_28318548 %7457
       %7459 = OpFMul %float %7456 %float_n6_28318548
       %7460 = OpExtInst %float %1 Fma %7451 %float_6_28318548 %7459
       %7461 = OpExtInst %float %1 Fma %7458 %float_2097152 %7460
       %7462 = OpExtInst %float %1 Sin %7461
       %7463 = OpFMul %float %7462 %7381
       %7464 = OpCompositeConstruct %v3float %548 %548 %7463
       %7465 = OpFAdd %v3float %7445 %7464
       %7466 = OpFAdd %v3float %7386 %7465
       %7467 = OpFMul %float %5713 %5418
       %7468 = OpFDiv %float %float_2 %7467
       %7469 = OpFMul %float %5710 %7468
       %7470 = OpFMul %float %7468 %4901
       %7471 = OpFMul %float %7470 %5985
       %7472 = OpExtInst %float %1 Fma %5711 %7468 %7471
       %7473 = OpExtInst %float %1 Floor %7469
       %7474 = OpFNegate %float %7473
       %7475 = OpExtInst %float %1 Fma %5710 %7468 %7474
       %7476 = OpExtInst %float %1 Fma %7475 %float_2097152 %7472
       %7477 = OpExtInst %float %1 Floor %7476
       %7478 = OpFMul %float %7473 %float_n6_28318548
       %7479 = OpExtInst %float %1 Fma %7469 %float_6_28318548 %7478
       %7480 = OpFMul %float %7477 %float_n6_28318548
       %7481 = OpExtInst %float %1 Fma %7472 %float_6_28318548 %7480
       %7482 = OpExtInst %float %1 Fma %7479 %float_2097152 %7481
       %7483 = OpFMul %float %6526 %float_0_5
       %7484 = OpExtInst %float %1 Sin %7482
       %7485 = OpFMul %float %7484 %7483
       %7486 = OpFMul %float %7467 %4450
       %7487 = OpFDiv %float %float_2 %7486
       %7488 = OpFMul %float %6541 %7487
       %7489 = OpFMul %float %7487 %4922
       %7490 = OpFMul %float %7489 %5985
       %7491 = OpExtInst %float %1 Fma %6542 %7487 %7490
       %7492 = OpExtInst %float %1 Floor %7488
       %7493 = OpFNegate %float %7492
       %7494 = OpExtInst %float %1 Fma %6541 %7487 %7493
       %7495 = OpExtInst %float %1 Fma %7494 %float_2097152 %7491
       %7496 = OpExtInst %float %1 Floor %7495
       %7497 = OpFMul %float %7492 %float_n6_28318548
       %7498 = OpExtInst %float %1 Fma %7488 %float_6_28318548 %7497
       %7499 = OpFMul %float %7496 %float_n6_28318548
       %7500 = OpExtInst %float %1 Fma %7491 %float_6_28318548 %7499
       %7501 = OpExtInst %float %1 Fma %7498 %float_2097152 %7500
       %7502 = OpFMul %float %7483 %2596
       %7503 = OpExtInst %float %1 Sin %7501
       %7504 = OpFMul %float %7503 %7502
       %7505 = OpCompositeConstruct %v3float %548 %548 %7485
       %7506 = OpCompositeConstruct %v3float %548 %548 %7504
       %7507 = OpFAdd %v3float %7505 %7506
       %7508 = OpFMul %float %7486 %4450
       %7509 = OpFDiv %float %float_2 %7508
       %7510 = OpFMul %float %6577 %7509
       %7511 = OpFMul %float %7509 %4946
       %7512 = OpFMul %float %7511 %5985
       %7513 = OpExtInst %float %1 Fma %6578 %7509 %7512
       %7514 = OpExtInst %float %1 Floor %7510
       %7515 = OpFNegate %float %7514
       %7516 = OpExtInst %float %1 Fma %6577 %7509 %7515
       %7517 = OpExtInst %float %1 Fma %7516 %float_2097152 %7513
       %7518 = OpExtInst %float %1 Floor %7517
       %7519 = OpFMul %float %7514 %float_n6_28318548
       %7520 = OpExtInst %float %1 Fma %7510 %float_6_28318548 %7519
       %7521 = OpFMul %float %7518 %float_n6_28318548
       %7522 = OpExtInst %float %1 Fma %7513 %float_6_28318548 %7521
       %7523 = OpExtInst %float %1 Fma %7520 %float_2097152 %7522
       %7524 = OpFMul %float %7502 %2596
       %7525 = OpExtInst %float %1 Sin %7523
       %7526 = OpFMul %float %7525 %7524
       %7527 = OpCompositeConstruct %v3float %548 %548 %7526
       %7528 = OpFAdd %v3float %7507 %7527
       %7529 = OpFMul %float %7508 %4450
       %7530 = OpFDiv %float %float_2 %7529
       %7531 = OpFMul %float %6612 %7530
       %7532 = OpFMul %float %7530 %4969
       %7533 = OpFMul %float %7532 %5985
       %7534 = OpExtInst %float %1 Fma %6613 %7530 %7533
       %7535 = OpExtInst %float %1 Floor %7531
       %7536 = OpFNegate %float %7535
       %7537 = OpExtInst %float %1 Fma %6612 %7530 %7536
       %7538 = OpExtInst %float %1 Fma %7537 %float_2097152 %7534
       %7539 = OpExtInst %float %1 Floor %7538
       %7540 = OpFMul %float %7535 %float_n6_28318548
       %7541 = OpExtInst %float %1 Fma %7531 %float_6_28318548 %7540
       %7542 = OpFMul %float %7539 %float_n6_28318548
       %7543 = OpExtInst %float %1 Fma %7534 %float_6_28318548 %7542
       %7544 = OpExtInst %float %1 Fma %7541 %float_2097152 %7543
       %7545 = OpFMul %float %7524 %2596
       %7546 = OpExtInst %float %1 Sin %7544
       %7547 = OpFMul %float %7546 %7545
       %7548 = OpCompositeConstruct %v3float %548 %548 %7547
       %7549 = OpFAdd %v3float %7528 %7548
       %7550 = OpFMul %float %6678 %5502
       %7551 = OpFDiv %float %float_2 %7550
       %7552 = OpFMul %float %6675 %7551
       %7553 = OpFMul %float %7551 %4993
       %7554 = OpFMul %float %7553 %5985
       %7555 = OpExtInst %float %1 Fma %6676 %7551 %7554
       %7556 = OpExtInst %float %1 Floor %7552
       %7557 = OpFNegate %float %7556
       %7558 = OpExtInst %float %1 Fma %6675 %7551 %7557
       %7559 = OpExtInst %float %1 Fma %7558 %float_2097152 %7555
       %7560 = OpExtInst %float %1 Floor %7559
       %7561 = OpFMul %float %7556 %float_n6_28318548
       %7562 = OpExtInst %float %1 Fma %7552 %float_6_28318548 %7561
       %7563 = OpFMul %float %7560 %float_n6_28318548
       %7564 = OpExtInst %float %1 Fma %7555 %float_6_28318548 %7563
       %7565 = OpExtInst %float %1 Fma %7562 %float_2097152 %7564
       %7566 = OpFMul %float %7483 %2735
       %7567 = OpExtInst %float %1 Sin %7565
       %7568 = OpFMul %float %7567 %7566
       %7569 = OpFMul %float %7550 %4450
       %7570 = OpFDiv %float %float_2 %7569
       %7571 = OpFMul %float %6710 %7570
       %7572 = OpFMul %float %7570 %5014
       %7573 = OpFMul %float %7572 %5985
       %7574 = OpExtInst %float %1 Fma %6711 %7570 %7573
       %7575 = OpExtInst %float %1 Floor %7571
       %7576 = OpFNegate %float %7575
       %7577 = OpExtInst %float %1 Fma %6710 %7570 %7576
       %7578 = OpExtInst %float %1 Fma %7577 %float_2097152 %7574
       %7579 = OpExtInst %float %1 Floor %7578
       %7580 = OpFMul %float %7575 %float_n6_28318548
       %7581 = OpExtInst %float %1 Fma %7571 %float_6_28318548 %7580
       %7582 = OpFMul %float %7579 %float_n6_28318548
       %7583 = OpExtInst %float %1 Fma %7574 %float_6_28318548 %7582
       %7584 = OpExtInst %float %1 Fma %7581 %float_2097152 %7583
       %7585 = OpFMul %float %7566 %2596
       %7586 = OpExtInst %float %1 Sin %7584
       %7587 = OpFMul %float %7586 %7585
       %7588 = OpCompositeConstruct %v3float %548 %548 %7568
       %7589 = OpCompositeConstruct %v3float %548 %548 %7587
       %7590 = OpFAdd %v3float %7588 %7589
       %7591 = OpFMul %float %7569 %4450
       %7592 = OpFDiv %float %float_2 %7591
       %7593 = OpFMul %float %6746 %7592
       %7594 = OpFMul %float %7592 %5038
       %7595 = OpFMul %float %7594 %5985
       %7596 = OpExtInst %float %1 Fma %6747 %7592 %7595
       %7597 = OpExtInst %float %1 Floor %7593
       %7598 = OpFNegate %float %7597
       %7599 = OpExtInst %float %1 Fma %6746 %7592 %7598
       %7600 = OpExtInst %float %1 Fma %7599 %float_2097152 %7596
       %7601 = OpExtInst %float %1 Floor %7600
       %7602 = OpFMul %float %7597 %float_n6_28318548
       %7603 = OpExtInst %float %1 Fma %7593 %float_6_28318548 %7602
       %7604 = OpFMul %float %7601 %float_n6_28318548
       %7605 = OpExtInst %float %1 Fma %7596 %float_6_28318548 %7604
       %7606 = OpExtInst %float %1 Fma %7603 %float_2097152 %7605
       %7607 = OpFMul %float %7585 %2596
       %7608 = OpExtInst %float %1 Sin %7606
       %7609 = OpFMul %float %7608 %7607
       %7610 = OpCompositeConstruct %v3float %548 %548 %7609
       %7611 = OpFAdd %v3float %7590 %7610
       %7612 = OpFMul %float %7591 %4450
       %7613 = OpFDiv %float %float_2 %7612
       %7614 = OpFMul %float %6781 %7613
       %7615 = OpFMul %float %7613 %5061
       %7616 = OpFMul %float %7615 %5985
       %7617 = OpExtInst %float %1 Fma %6782 %7613 %7616
       %7618 = OpExtInst %float %1 Floor %7614
       %7619 = OpFNegate %float %7618
       %7620 = OpExtInst %float %1 Fma %6781 %7613 %7619
       %7621 = OpExtInst %float %1 Fma %7620 %float_2097152 %7617
       %7622 = OpExtInst %float %1 Floor %7621
       %7623 = OpFMul %float %7618 %float_n6_28318548
       %7624 = OpExtInst %float %1 Fma %7614 %float_6_28318548 %7623
       %7625 = OpFMul %float %7622 %float_n6_28318548
       %7626 = OpExtInst %float %1 Fma %7617 %float_6_28318548 %7625
       %7627 = OpExtInst %float %1 Fma %7624 %float_2097152 %7626
       %7628 = OpFMul %float %7607 %2596
       %7629 = OpExtInst %float %1 Sin %7627
       %7630 = OpFMul %float %7629 %7628
       %7631 = OpCompositeConstruct %v3float %548 %548 %7630
       %7632 = OpFAdd %v3float %7611 %7631
       %7633 = OpFAdd %v3float %7549 %7632
       %7634 = OpFMul %float %6848 %5502
       %7635 = OpFDiv %float %float_2 %7634
       %7636 = OpFMul %float %6845 %7635
       %7637 = OpFMul %float %7635 %4993
       %7638 = OpFMul %float %7637 %5985
       %7639 = OpExtInst %float %1 Fma %6846 %7635 %7638
       %7640 = OpExtInst %float %1 Floor %7636
       %7641 = OpFNegate %float %7640
       %7642 = OpExtInst %float %1 Fma %6845 %7635 %7641
       %7643 = OpExtInst %float %1 Fma %7642 %float_2097152 %7639
       %7644 = OpExtInst %float %1 Floor %7643
       %7645 = OpFMul %float %7640 %float_n6_28318548
       %7646 = OpExtInst %float %1 Fma %7636 %float_6_28318548 %7645
       %7647 = OpFMul %float %7644 %float_n6_28318548
       %7648 = OpExtInst %float %1 Fma %7639 %float_6_28318548 %7647
       %7649 = OpExtInst %float %1 Fma %7646 %float_2097152 %7648
       %7650 = OpExtInst %float %1 Sin %7649
       %7651 = OpFMul %float %7650 %7566
       %7652 = OpFMul %float %7634 %4450
       %7653 = OpFDiv %float %float_2 %7652
       %7654 = OpFMul %float %6879 %7653
       %7655 = OpFMul %float %7653 %5014
       %7656 = OpFMul %float %7655 %5985
       %7657 = OpExtInst %float %1 Fma %6880 %7653 %7656
       %7658 = OpExtInst %float %1 Floor %7654
       %7659 = OpFNegate %float %7658
       %7660 = OpExtInst %float %1 Fma %6879 %7653 %7659
       %7661 = OpExtInst %float %1 Fma %7660 %float_2097152 %7657
       %7662 = OpExtInst %float %1 Floor %7661
       %7663 = OpFMul %float %7658 %float_n6_28318548
       %7664 = OpExtInst %float %1 Fma %7654 %float_6_28318548 %7663
       %7665 = OpFMul %float %7662 %float_n6_28318548
       %7666 = OpExtInst %float %1 Fma %7657 %float_6_28318548 %7665
       %7667 = OpExtInst %float %1 Fma %7664 %float_2097152 %7666
       %7668 = OpExtInst %float %1 Sin %7667
       %7669 = OpFMul %float %7668 %7585
       %7670 = OpCompositeConstruct %v3float %548 %548 %7651
       %7671 = OpCompositeConstruct %v3float %548 %548 %7669
       %7672 = OpFAdd %v3float %7670 %7671
       %7673 = OpFMul %float %7652 %4450
       %7674 = OpFDiv %float %float_2 %7673
       %7675 = OpFMul %float %6914 %7674
       %7676 = OpFMul %float %7674 %5038
       %7677 = OpFMul %float %7676 %5985
       %7678 = OpExtInst %float %1 Fma %6915 %7674 %7677
       %7679 = OpExtInst %float %1 Floor %7675
       %7680 = OpFNegate %float %7679
       %7681 = OpExtInst %float %1 Fma %6914 %7674 %7680
       %7682 = OpExtInst %float %1 Fma %7681 %float_2097152 %7678
       %7683 = OpExtInst %float %1 Floor %7682
       %7684 = OpFMul %float %7679 %float_n6_28318548
       %7685 = OpExtInst %float %1 Fma %7675 %float_6_28318548 %7684
       %7686 = OpFMul %float %7683 %float_n6_28318548
       %7687 = OpExtInst %float %1 Fma %7678 %float_6_28318548 %7686
       %7688 = OpExtInst %float %1 Fma %7685 %float_2097152 %7687
       %7689 = OpExtInst %float %1 Sin %7688
       %7690 = OpFMul %float %7689 %7607
       %7691 = OpCompositeConstruct %v3float %548 %548 %7690
       %7692 = OpFAdd %v3float %7672 %7691
       %7693 = OpFMul %float %7673 %4450
       %7694 = OpFDiv %float %float_2 %7693
       %7695 = OpFMul %float %6948 %7694
       %7696 = OpFMul %float %7694 %5061
       %7697 = OpFMul %float %7696 %5985
       %7698 = OpExtInst %float %1 Fma %6949 %7694 %7697
       %7699 = OpExtInst %float %1 Floor %7695
       %7700 = OpFNegate %float %7699
       %7701 = OpExtInst %float %1 Fma %6948 %7694 %7700
       %7702 = OpExtInst %float %1 Fma %7701 %float_2097152 %7698
       %7703 = OpExtInst %float %1 Floor %7702
       %7704 = OpFMul %float %7699 %float_n6_28318548
       %7705 = OpExtInst %float %1 Fma %7695 %float_6_28318548 %7704
       %7706 = OpFMul %float %7703 %float_n6_28318548
       %7707 = OpExtInst %float %1 Fma %7698 %float_6_28318548 %7706
       %7708 = OpExtInst %float %1 Fma %7705 %float_2097152 %7707
       %7709 = OpExtInst %float %1 Sin %7708
       %7710 = OpFMul %float %7709 %7628
       %7711 = OpCompositeConstruct %v3float %548 %548 %7710
       %7712 = OpFAdd %v3float %7692 %7711
       %7713 = OpFAdd %v3float %7633 %7712
       %7714 = OpFAdd %v3float %7466 %7713
       %7715 = OpFAdd %v3float %7219 %7714
       %7716 = OpFAdd %v3float %6970 %7715
       %7717 = OpFAdd %v3float %5669 %7716
       %7718 = OpExtInst %v3float %1 Fma %3520 %3523 %7717
       %7719 = OpCompositeExtract %float %7718 2
       %7720 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_1
       %7721 = OpLoad %float %7720
       %7722 = OpFNegate %float %7721
       %7723 = OpExtInst %float %1 Fma %7719 %1727 %7722
       %7724 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_0
       %7725 = OpLoad %float %7724
       %7726 = OpFMul %float %7723 %7725
       %7727 = OpExtInst %float %1 FClamp %7726 %float_0 %float_1
       %7728 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_1
       %7729 = OpLoad %float %7728
       %7730 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_2
       %7731 = OpLoad %float %7730
       %7732 = OpFNegate %float %7731
       %7733 = OpExtInst %float %1 Fma %7727 %7729 %7732
       %7734 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_92 %int_1
       %7735 = OpLoad %float %7734
       %7736 = OpFMul %float %7733 %7735
       %7737 = OpExtInst %float %1 FClamp %7736 %float_0 %float_1
       %7738 = OpCompositeConstruct %v3float %7719 %7719 %7719
       %7739 = OpExtInst %v3float %1 Fma %7738 %623 %643
       %7740 = OpDPdx %v3float %593
       %7741 = OpVectorTimesScalar %v3float %7740 %float_2097152
       %7742 = OpDPdx %v3float %7739
       %7743 = OpFAdd %v3float %7741 %7742
       %7744 = OpDPdy %v3float %593
       %7745 = OpVectorTimesScalar %v3float %7744 %float_2097152
       %7746 = OpDPdy %v3float %7739
       %7747 = OpFAdd %v3float %7745 %7746
       %7748 = OpExtInst %v3float %1 Cross %7743 %7747
       %7749 = OpExtInst %v3float %1 Normalize %7748
       %7750 = OpDPdx %v3float %593
       %7751 = OpVectorTimesScalar %v3float %7750 %float_2097152
       %7752 = OpDPdx %v3float %643
       %7753 = OpFAdd %v3float %7751 %7752
       %7754 = OpDPdy %v3float %593
       %7755 = OpVectorTimesScalar %v3float %7754 %float_2097152
       %7756 = OpDPdy %v3float %643
       %7757 = OpFAdd %v3float %7755 %7756
       %7758 = OpExtInst %v3float %1 Cross %7753 %7757
       %7759 = OpExtInst %v3float %1 Normalize %7758
       %7760 = OpFSub %v3float %7749 %7759
       %7761 = OpFAdd %v3float %7760 %623
       %7762 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_92 %int_3
       %7763 = OpLoad %float %7762
       %7764 = OpCompositeConstruct %v3float %7763 %7763 %7763
       %7765 = OpExtInst %v3float %1 FMix %7761 %294 %7764
       %7766 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_0
       %7767 = OpLoad %float %7766
       %7768 = OpCompositeConstruct %v3float %7767 %7767 %7767
       %7769 = OpExtInst %v3float %1 Fma %7765 %7768 %644
       %7770 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_1
       %7771 = OpLoad %float %7770
       %7772 = OpCompositeConstruct %v3float %7771 %7771 %7771
       %7773 = OpFMul %v3float %593 %7772
       %7774 = OpFMul %v3float %7769 %7772
       %7775 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_3
       %7776 = OpLoad %float %7775
       %7777 = OpFMul %float %1163 %7776
       %7778 = OpCompositeConstruct %v2float %7777 %7777
       %7779 = OpFAdd %v2float %7778 %279
       %7780 = OpCompositeExtract %float %7773 0
       %7781 = OpCompositeExtract %float %7774 0
       %7782 = OpCompositeExtract %float %7773 1
       %7783 = OpCompositeExtract %float %7774 1
       %7784 = OpCompositeExtract %float %7779 0
       %7785 = OpCompositeConstruct %v3float %7780 %7782 %float_0
       %7786 = OpCompositeConstruct %v3float %7781 %7783 %7784
       %7787 = OpVectorTimesScalar %v3float %7786 %float_4_76837158en07
       %7788 = OpFAdd %v3float %7787 %141
       %7789 = OpFAdd %v3float %7785 %7788
       %7790 = OpExtInst %v3float %1 Floor %7789
       %7791 = OpFSub %v3float %7785 %7790
       %7792 = OpVectorTimesScalar %v3float %7791 %float_2097152
       %7793 = OpFAdd %v3float %7792 %7786
       %7794 = OpVectorTimesScalar %v3float %7793 %float_1
               OpBranch %7795
       %7795 = OpLabel
       %7796 = OpPhi %v3float %7794 %6291 %7797 %7798
       %7799 = OpPhi %float %float_1 %6291 %7800 %7798
       %7801 = OpPhi %float %float_0 %6291 %7802 %7798
       %7803 = OpPhi %uint %uint_0 %6291 %7804 %7798
       %7805 = OpULessThan %bool %7803 %uint_10
               OpLoopMerge %7806 %7798 DontUnroll
               OpBranchConditional %7805 %7798 %7806
       %7798 = OpLabel
       %7807 = OpExtInst %v3float %1 Fract %7796
       %7808 = OpExtInst %v3float %1 Floor %7796
       %7809 = OpDot %float %7808 %387
       %7810 = OpFAdd %float %7809 %float_19
       %7811 = OpFAdd %float %7809 %float_47
       %7812 = OpFAdd %float %7809 %float_66
       %7813 = OpFAdd %float %7809 %float_101
       %7814 = OpFAdd %float %7809 %float_120
       %7815 = OpFAdd %float %7809 %float_148
       %7816 = OpFAdd %float %7809 %float_167
       %7817 = OpConvertFToS %int %7809
       %7818 = OpCompositeConstruct %v3int %7817 %int_0 %int_0
       %7819 = OpBitcast %v3uint %7818
       %7820 = OpIMul %v3uint %7819 %403
       %7821 = OpIAdd %v3uint %7820 %405
       %7822 = OpCompositeExtract %uint %7821 1
       %7823 = OpCompositeExtract %uint %7821 2
       %7824 = OpIMul %uint %7822 %7823
       %7825 = OpCompositeExtract %uint %7821 0
       %7826 = OpIAdd %uint %7825 %7824
       %7827 = OpIMul %uint %7823 %7826
       %7828 = OpIAdd %uint %7822 %7827
       %7829 = OpIMul %uint %7826 %7828
       %7830 = OpIAdd %uint %7823 %7829
       %7831 = OpIMul %uint %7828 %7830
       %7832 = OpIAdd %uint %7826 %7831
       %7833 = OpCompositeInsert %v3uint %7832 %549 0
       %7834 = OpBitwiseAnd %v3uint %406 %407
       %7835 = OpShiftRightLogical %v3uint %7833 %7834
       %7836 = OpCompositeExtract %uint %7835 0
       %7837 = OpCompositeConstruct %v3uint %7836 %7836 %7836
       %7838 = OpBitwiseAnd %v3uint %7837 %388
       %7839 = OpConvertUToF %v3float %7838
       %7840 = OpExtInst %v3float %1 Fma %7839 %392 %282
       %7841 = OpDot %float %7840 %7807
       %7842 = OpConvertFToS %int %7810
       %7843 = OpFSub %v3float %7807 %351
       %7844 = OpCompositeConstruct %v3int %7842 %int_0 %int_0
       %7845 = OpBitcast %v3uint %7844
       %7846 = OpIMul %v3uint %7845 %403
       %7847 = OpIAdd %v3uint %7846 %405
       %7848 = OpCompositeExtract %uint %7847 1
       %7849 = OpCompositeExtract %uint %7847 2
       %7850 = OpIMul %uint %7848 %7849
       %7851 = OpCompositeExtract %uint %7847 0
       %7852 = OpIAdd %uint %7851 %7850
       %7853 = OpIMul %uint %7849 %7852
       %7854 = OpIAdd %uint %7848 %7853
       %7855 = OpIMul %uint %7852 %7854
       %7856 = OpIAdd %uint %7849 %7855
       %7857 = OpIMul %uint %7854 %7856
       %7858 = OpIAdd %uint %7852 %7857
       %7859 = OpCompositeInsert %v3uint %7858 %549 0
       %7860 = OpShiftRightLogical %v3uint %7859 %7834
       %7861 = OpCompositeExtract %uint %7860 0
       %7862 = OpCompositeConstruct %v3uint %7861 %7861 %7861
       %7863 = OpBitwiseAnd %v3uint %7862 %388
       %7864 = OpConvertUToF %v3float %7863
       %7865 = OpExtInst %v3float %1 Fma %7864 %392 %282
       %7866 = OpDot %float %7865 %7843
       %7867 = OpConvertFToS %int %7811
       %7868 = OpFSub %v3float %7807 %352
       %7869 = OpCompositeConstruct %v3int %7867 %int_0 %int_0
       %7870 = OpBitcast %v3uint %7869
       %7871 = OpIMul %v3uint %7870 %403
       %7872 = OpIAdd %v3uint %7871 %405
       %7873 = OpCompositeExtract %uint %7872 1
       %7874 = OpCompositeExtract %uint %7872 2
       %7875 = OpIMul %uint %7873 %7874
       %7876 = OpCompositeExtract %uint %7872 0
       %7877 = OpIAdd %uint %7876 %7875
       %7878 = OpIMul %uint %7874 %7877
       %7879 = OpIAdd %uint %7873 %7878
       %7880 = OpIMul %uint %7877 %7879
       %7881 = OpIAdd %uint %7874 %7880
       %7882 = OpIMul %uint %7879 %7881
       %7883 = OpIAdd %uint %7877 %7882
       %7884 = OpCompositeInsert %v3uint %7883 %549 0
       %7885 = OpShiftRightLogical %v3uint %7884 %7834
       %7886 = OpCompositeExtract %uint %7885 0
       %7887 = OpCompositeConstruct %v3uint %7886 %7886 %7886
       %7888 = OpBitwiseAnd %v3uint %7887 %388
       %7889 = OpConvertUToF %v3float %7888
       %7890 = OpExtInst %v3float %1 Fma %7889 %392 %282
       %7891 = OpDot %float %7890 %7868
       %7892 = OpConvertFToS %int %7812
       %7893 = OpFSub %v3float %7807 %138
       %7894 = OpCompositeConstruct %v3int %7892 %int_0 %int_0
       %7895 = OpBitcast %v3uint %7894
       %7896 = OpIMul %v3uint %7895 %403
       %7897 = OpIAdd %v3uint %7896 %405
       %7898 = OpCompositeExtract %uint %7897 1
       %7899 = OpCompositeExtract %uint %7897 2
       %7900 = OpIMul %uint %7898 %7899
       %7901 = OpCompositeExtract %uint %7897 0
       %7902 = OpIAdd %uint %7901 %7900
       %7903 = OpIMul %uint %7899 %7902
       %7904 = OpIAdd %uint %7898 %7903
       %7905 = OpIMul %uint %7902 %7904
       %7906 = OpIAdd %uint %7899 %7905
       %7907 = OpIMul %uint %7904 %7906
       %7908 = OpIAdd %uint %7902 %7907
       %7909 = OpCompositeInsert %v3uint %7908 %549 0
       %7910 = OpShiftRightLogical %v3uint %7909 %7834
       %7911 = OpCompositeExtract %uint %7910 0
       %7912 = OpCompositeConstruct %v3uint %7911 %7911 %7911
       %7913 = OpBitwiseAnd %v3uint %7912 %388
       %7914 = OpConvertUToF %v3float %7913
       %7915 = OpExtInst %v3float %1 Fma %7914 %392 %282
       %7916 = OpDot %float %7915 %7893
       %7917 = OpConvertFToS %int %7813
       %7918 = OpFSub %v3float %7807 %294
       %7919 = OpCompositeConstruct %v3int %7917 %int_0 %int_0
       %7920 = OpBitcast %v3uint %7919
       %7921 = OpIMul %v3uint %7920 %403
       %7922 = OpIAdd %v3uint %7921 %405
       %7923 = OpCompositeExtract %uint %7922 1
       %7924 = OpCompositeExtract %uint %7922 2
       %7925 = OpIMul %uint %7923 %7924
       %7926 = OpCompositeExtract %uint %7922 0
       %7927 = OpIAdd %uint %7926 %7925
       %7928 = OpIMul %uint %7924 %7927
       %7929 = OpIAdd %uint %7923 %7928
       %7930 = OpIMul %uint %7927 %7929
       %7931 = OpIAdd %uint %7924 %7930
       %7932 = OpIMul %uint %7929 %7931
       %7933 = OpIAdd %uint %7927 %7932
       %7934 = OpCompositeInsert %v3uint %7933 %549 0
       %7935 = OpShiftRightLogical %v3uint %7934 %7834
       %7936 = OpCompositeExtract %uint %7935 0
       %7937 = OpCompositeConstruct %v3uint %7936 %7936 %7936
       %7938 = OpBitwiseAnd %v3uint %7937 %388
       %7939 = OpConvertUToF %v3float %7938
       %7940 = OpExtInst %v3float %1 Fma %7939 %392 %282
       %7941 = OpDot %float %7940 %7918
       %7942 = OpConvertFToS %int %7814
       %7943 = OpFSub %v3float %7807 %143
       %7944 = OpCompositeConstruct %v3int %7942 %int_0 %int_0
       %7945 = OpBitcast %v3uint %7944
       %7946 = OpIMul %v3uint %7945 %403
       %7947 = OpIAdd %v3uint %7946 %405
       %7948 = OpCompositeExtract %uint %7947 1
       %7949 = OpCompositeExtract %uint %7947 2
       %7950 = OpIMul %uint %7948 %7949
       %7951 = OpCompositeExtract %uint %7947 0
       %7952 = OpIAdd %uint %7951 %7950
       %7953 = OpIMul %uint %7949 %7952
       %7954 = OpIAdd %uint %7948 %7953
       %7955 = OpIMul %uint %7952 %7954
       %7956 = OpIAdd %uint %7949 %7955
       %7957 = OpIMul %uint %7954 %7956
       %7958 = OpIAdd %uint %7952 %7957
       %7959 = OpCompositeInsert %v3uint %7958 %549 0
       %7960 = OpShiftRightLogical %v3uint %7959 %7834
       %7961 = OpCompositeExtract %uint %7960 0
       %7962 = OpCompositeConstruct %v3uint %7961 %7961 %7961
       %7963 = OpBitwiseAnd %v3uint %7962 %388
       %7964 = OpConvertUToF %v3float %7963
       %7965 = OpExtInst %v3float %1 Fma %7964 %392 %282
       %7966 = OpDot %float %7965 %7943
       %7967 = OpConvertFToS %int %7815
       %7968 = OpFSub %v3float %7807 %139
       %7969 = OpCompositeConstruct %v3int %7967 %int_0 %int_0
       %7970 = OpBitcast %v3uint %7969
       %7971 = OpIMul %v3uint %7970 %403
       %7972 = OpIAdd %v3uint %7971 %405
       %7973 = OpCompositeExtract %uint %7972 1
       %7974 = OpCompositeExtract %uint %7972 2
       %7975 = OpIMul %uint %7973 %7974
       %7976 = OpCompositeExtract %uint %7972 0
       %7977 = OpIAdd %uint %7976 %7975
       %7978 = OpIMul %uint %7974 %7977
       %7979 = OpIAdd %uint %7973 %7978
       %7980 = OpIMul %uint %7977 %7979
       %7981 = OpIAdd %uint %7974 %7980
       %7982 = OpIMul %uint %7979 %7981
       %7983 = OpIAdd %uint %7977 %7982
       %7984 = OpCompositeInsert %v3uint %7983 %549 0
       %7985 = OpShiftRightLogical %v3uint %7984 %7834
       %7986 = OpCompositeExtract %uint %7985 0
       %7987 = OpCompositeConstruct %v3uint %7986 %7986 %7986
       %7988 = OpBitwiseAnd %v3uint %7987 %388
       %7989 = OpConvertUToF %v3float %7988
       %7990 = OpExtInst %v3float %1 Fma %7989 %392 %282
       %7991 = OpDot %float %7990 %7968
       %7992 = OpConvertFToS %int %7816
       %7993 = OpFSub %v3float %7807 %131
       %7994 = OpCompositeConstruct %v3int %7992 %int_0 %int_0
       %7995 = OpBitcast %v3uint %7994
       %7996 = OpIMul %v3uint %7995 %403
       %7997 = OpIAdd %v3uint %7996 %405
       %7998 = OpCompositeExtract %uint %7997 1
       %7999 = OpCompositeExtract %uint %7997 2
       %8000 = OpIMul %uint %7998 %7999
       %8001 = OpCompositeExtract %uint %7997 0
       %8002 = OpIAdd %uint %8001 %8000
       %8003 = OpIMul %uint %7999 %8002
       %8004 = OpIAdd %uint %7998 %8003
       %8005 = OpIMul %uint %8002 %8004
       %8006 = OpIAdd %uint %7999 %8005
       %8007 = OpIMul %uint %8004 %8006
       %8008 = OpIAdd %uint %8002 %8007
       %8009 = OpCompositeInsert %v3uint %8008 %549 0
       %8010 = OpShiftRightLogical %v3uint %8009 %7834
       %8011 = OpCompositeExtract %uint %8010 0
       %8012 = OpCompositeConstruct %v3uint %8011 %8011 %8011
       %8013 = OpBitwiseAnd %v3uint %8012 %388
       %8014 = OpConvertUToF %v3float %8013
       %8015 = OpExtInst %v3float %1 Fma %8014 %392 %282
       %8016 = OpDot %float %8015 %7993
       %8017 = OpCompositeExtract %float %7807 0
       %8018 = OpCompositeExtract %float %7807 1
       %8019 = OpCompositeExtract %float %7807 2
       %8020 = OpCompositeConstruct %v4float %8017 %8018 %8019 %float_0
       %8021 = OpFMul %v4float %8020 %8020
       %8022 = OpFMul %v4float %8021 %8020
       %8023 = OpVectorTimesScalar %v4float %8020 %float_6
       %8024 = OpFSub %v4float %8023 %383
       %8025 = OpExtInst %v4float %1 Fma %8020 %8024 %384
       %8026 = OpFMul %v4float %8022 %8025
       %8027 = OpCompositeExtract %float %8026 0
       %8028 = OpExtInst %float %1 FMix %7841 %7866 %8027
       %8029 = OpExtInst %float %1 FMix %7891 %7916 %8027
       %8030 = OpCompositeExtract %float %8026 1
       %8031 = OpExtInst %float %1 FMix %8028 %8029 %8030
       %8032 = OpExtInst %float %1 FMix %7941 %7966 %8027
       %8033 = OpExtInst %float %1 FMix %7991 %8016 %8027
       %8034 = OpExtInst %float %1 FMix %8032 %8033 %8030
       %8035 = OpCompositeExtract %float %8026 2
       %8036 = OpExtInst %float %1 FMix %8031 %8034 %8035
       %8037 = OpExtInst %float %1 FAbs %8036
       %7802 = OpExtInst %float %1 Fma %8037 %7799 %7801
       %7797 = OpVectorTimesScalar %v3float %7796 %float_2
       %7800 = OpFMul %float %7799 %float_0_5
       %7804 = OpIAdd %uint %7803 %uint_1
               OpBranch %7795
       %7806 = OpLabel
       %8038 = OpExtInst %float %1 FMix %float_0 %float_1 %7801
       %8039 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_0
       %8040 = OpLoad %float %8039
       %8041 = OpFNegate %float %7737
       %8042 = OpExtInst %float %1 Fma %8041 %8040 %8038
       %8043 = OpExtInst %float %1 Fma %7737 %8040 %float_1
       %8044 = OpExtInst %float %1 Fma %8041 %8040 %8043
       %8045 = OpFDiv %float %8042 %8044
       %8046 = OpExtInst %float %1 Fma %8045 %float_n1 %float_1
       %8047 = OpExtInst %float %1 FClamp %8046 %float_0 %float_1
       %8048 = OpFOrdLessThanEqual %bool %8047 %float_0
       %8049 = OpExtInst %float %1 Pow %8047 %float_2
       %8050 = OpSelect %float %8048 %float_0 %8049
       %8051 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_2
       %8052 = OpLoad %float %8051
       %8053 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_1
       %8054 = OpLoad %float %8053
       %8055 = OpExtInst %float %1 FMix %8052 %8054 %8050
       %8056 = OpExtInst %float %1 FClamp %8055 %float_0 %float_1
       %8057 = OpFMul %float %7737 %8056
       %8058 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_3
       %8059 = OpLoad %float %8058
       %8060 = OpCompositeConstruct %v3float %8059 %8059 %8059
       %8061 = OpFMul %v3float %593 %8060
       %8062 = OpFMul %v3float %644 %8060
       %8063 = OpVectorTimesScalar %v3float %8062 %float_4_76837158en07
       %8064 = OpFAdd %v3float %8063 %141
       %8065 = OpExtInst %v3float %1 Fma %593 %8060 %8064
       %8066 = OpExtInst %v3float %1 Floor %8065
       %8067 = OpFNegate %v3float %8066
       %8068 = OpExtInst %v3float %1 Fma %593 %8060 %8067
       %8069 = OpVectorTimesScalar %v3float %8068 %float_2097152
       %8070 = OpExtInst %v3float %1 Fma %644 %8060 %8069
       %8071 = OpVectorTimesScalar %v3float %8070 %float_1
               OpBranch %8072
       %8072 = OpLabel
       %8073 = OpPhi %v3float %540 %7806 %8074 %8075
       %8076 = OpPhi %v3float %8071 %7806 %8077 %8075
       %8078 = OpPhi %float %float_1 %7806 %8079 %8075
       %8080 = OpPhi %float %float_0 %7806 %8081 %8075
       %8082 = OpPhi %uint %uint_0 %7806 %8083 %8075
       %8084 = OpULessThan %bool %8082 %uint_1
               OpLoopMerge %8085 %8075 DontUnroll
               OpBranchConditional %8084 %8086 %8085
       %8086 = OpLabel
       %8087 = OpExtInst %v3float %1 Fract %8076
       %8088 = OpExtInst %v3float %1 Floor %8076
       %8089 = OpCompositeInsert %v3float %float_0 %8073 0
               OpBranch %8090
       %8090 = OpLabel
       %8091 = OpPhi %v4float %353 %8086 %8092 %8093
       %8074 = OpPhi %v3float %8089 %8086 %8094 %8093
       %8095 = OpCompositeExtract %float %8074 0
       %8096 = OpFOrdLessThanEqual %bool %8095 %float_1
               OpLoopMerge %8097 %8093 None
               OpBranchConditional %8096 %8098 %8097
       %8098 = OpLabel
       %8099 = OpCompositeInsert %v3float %float_0 %8074 1
               OpBranch %8100
       %8100 = OpLabel
       %8101 = OpPhi %v3float %8099 %8098 %8102 %8103
       %8092 = OpPhi %v4float %8091 %8098 %8104 %8103
       %8105 = OpCompositeExtract %float %8101 1
       %8106 = OpFOrdLessThanEqual %bool %8105 %float_1
               OpLoopMerge %8107 %8103 None
               OpBranchConditional %8106 %8108 %8107
       %8108 = OpLabel
       %8109 = OpCompositeInsert %v3float %float_0 %8101 2
               OpBranch %8110
       %8110 = OpLabel
       %8104 = OpPhi %v4float %8092 %8108 %8111 %8112
       %8113 = OpPhi %v3float %8109 %8108 %8114 %8112
       %8115 = OpCompositeExtract %float %8113 2
       %8116 = OpFOrdLessThanEqual %bool %8115 %float_1
               OpLoopMerge %8117 %8112 None
               OpBranchConditional %8116 %8112 %8117
       %8112 = OpLabel
       %8118 = OpFAdd %v3float %8088 %8113
       %8119 = OpVectorShuffle %v3float %537 %8118 3 4 5
       %8120 = OpConvertFToS %v3int %8119
       %8121 = OpBitcast %v3uint %8120
       %8122 = OpIMul %v3uint %8121 %403
       %8123 = OpIAdd %v3uint %8122 %405
       %8124 = OpCompositeExtract %uint %8123 1
       %8125 = OpCompositeExtract %uint %8123 2
       %8126 = OpIMul %uint %8124 %8125
       %8127 = OpCompositeExtract %uint %8123 0
       %8128 = OpIAdd %uint %8127 %8126
       %8129 = OpIMul %uint %8125 %8128
       %8130 = OpIAdd %uint %8124 %8129
       %8131 = OpIMul %uint %8128 %8130
       %8132 = OpIAdd %uint %8125 %8131
       %8133 = OpIMul %uint %8130 %8132
       %8134 = OpIAdd %uint %8128 %8133
       %8135 = OpCompositeInsert %v3uint %8134 %8123 0
       %8136 = OpIMul %uint %8132 %8134
       %8137 = OpIAdd %uint %8130 %8136
       %8138 = OpCompositeInsert %v3uint %8137 %8135 1
       %8139 = OpIMul %uint %8134 %8137
       %8140 = OpIAdd %uint %8132 %8139
       %8141 = OpCompositeInsert %v3uint %8140 %8138 2
       %8142 = OpBitwiseAnd %v3uint %406 %407
       %8143 = OpShiftRightLogical %v3uint %8141 %8142
       %8144 = OpConvertUToF %v3float %8143
       %8145 = OpExtInst %v3float %1 Fma %8144 %521 %510
       %8146 = OpExtInst %v3float %1 Normalize %8145
       %8147 = OpVectorTimesScalar %v3float %8146 %float_0_2588
       %8148 = OpFAdd %v3float %8113 %8147
       %8149 = OpFSub %v3float %8087 %8148
       %8150 = OpCompositeExtract %float %8104 3
       %8151 = OpDot %float %8149 %8149
       %8152 = OpExtInst %float %1 NMin %8150 %8151
       %8111 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %8152
       %8153 = OpFAdd %float %8115 %float_1
       %8114 = OpCompositeInsert %v3float %8153 %8113 2
               OpBranch %8110
       %8117 = OpLabel
               OpBranch %8103
       %8103 = OpLabel
       %8154 = OpCompositeExtract %float %8113 1
       %8155 = OpFAdd %float %8154 %float_1
       %8102 = OpCompositeInsert %v3float %8155 %8113 1
               OpBranch %8100
       %8107 = OpLabel
               OpBranch %8093
       %8093 = OpLabel
       %8156 = OpCompositeExtract %float %8101 0
       %8157 = OpFAdd %float %8156 %float_1
       %8094 = OpCompositeInsert %v3float %8157 %8101 0
               OpBranch %8090
       %8097 = OpLabel
       %8158 = OpCompositeExtract %float %8091 3
       %8159 = OpExtInst %float %1 Sqrt %8158
       %8160 = OpExtInst %float %1 Fma %8159 %float_2 %float_n1
       %8161 = OpExtInst %float %1 FAbs %8160
       %8081 = OpExtInst %float %1 Fma %8161 %8078 %8080
       %8077 = OpVectorTimesScalar %v3float %8076 %float_2
       %8079 = OpFMul %float %8078 %float_0_5
               OpBranch %8075
       %8075 = OpLabel
       %8083 = OpIAdd %uint %8082 %uint_1
               OpBranch %8072
       %8085 = OpLabel
       %8162 = OpExtInst %float %1 FMix %float_n1 %float_1 %8080
       %8163 = OpExtInst %float %1 FClamp %8162 %float_0 %float_1
       %8164 = OpFMul %v3float %8062 %281
       %8165 = OpVectorTimesScalar %v3float %8164 %float_4_76837158en07
       %8166 = OpFAdd %v3float %8165 %141
       %8167 = OpExtInst %v3float %1 Fma %8061 %281 %8166
       %8168 = OpExtInst %v3float %1 Floor %8167
       %8169 = OpFNegate %v3float %8168
       %8170 = OpExtInst %v3float %1 Fma %8061 %281 %8169
       %8171 = OpVectorTimesScalar %v3float %8170 %float_2097152
       %8172 = OpExtInst %v3float %1 Fma %8062 %281 %8171
       %8173 = OpVectorTimesScalar %v3float %8172 %float_1
               OpBranch %8174
       %8174 = OpLabel
       %8175 = OpPhi %v3float %540 %8085 %8176 %8177
       %8178 = OpPhi %v3float %8173 %8085 %8179 %8177
       %8180 = OpPhi %float %float_1 %8085 %8181 %8177
       %8182 = OpPhi %float %float_0 %8085 %8183 %8177
       %8184 = OpPhi %uint %uint_0 %8085 %8185 %8177
       %8186 = OpULessThan %bool %8184 %uint_1
               OpLoopMerge %8187 %8177 DontUnroll
               OpBranchConditional %8186 %8188 %8187
       %8188 = OpLabel
       %8189 = OpExtInst %v3float %1 Fract %8178
       %8190 = OpExtInst %v3float %1 Floor %8178
       %8191 = OpCompositeInsert %v3float %float_0 %8175 0
               OpBranch %8192
       %8192 = OpLabel
       %8193 = OpPhi %v4float %353 %8188 %8194 %8195
       %8176 = OpPhi %v3float %8191 %8188 %8196 %8195
       %8197 = OpCompositeExtract %float %8176 0
       %8198 = OpFOrdLessThanEqual %bool %8197 %float_1
               OpLoopMerge %8199 %8195 None
               OpBranchConditional %8198 %8200 %8199
       %8200 = OpLabel
       %8201 = OpCompositeInsert %v3float %float_0 %8176 1
               OpBranch %8202
       %8202 = OpLabel
       %8203 = OpPhi %v3float %8201 %8200 %8204 %8205
       %8194 = OpPhi %v4float %8193 %8200 %8206 %8205
       %8207 = OpCompositeExtract %float %8203 1
       %8208 = OpFOrdLessThanEqual %bool %8207 %float_1
               OpLoopMerge %8209 %8205 None
               OpBranchConditional %8208 %8210 %8209
       %8210 = OpLabel
       %8211 = OpCompositeInsert %v3float %float_0 %8203 2
               OpBranch %8212
       %8212 = OpLabel
       %8206 = OpPhi %v4float %8194 %8210 %8213 %8214
       %8215 = OpPhi %v3float %8211 %8210 %8216 %8214
       %8217 = OpCompositeExtract %float %8215 2
       %8218 = OpFOrdLessThanEqual %bool %8217 %float_1
               OpLoopMerge %8219 %8214 None
               OpBranchConditional %8218 %8214 %8219
       %8214 = OpLabel
       %8220 = OpFAdd %v3float %8190 %8215
       %8221 = OpVectorShuffle %v3float %537 %8220 3 4 5
       %8222 = OpConvertFToS %v3int %8221
       %8223 = OpBitcast %v3uint %8222
       %8224 = OpIMul %v3uint %8223 %403
       %8225 = OpIAdd %v3uint %8224 %405
       %8226 = OpCompositeExtract %uint %8225 1
       %8227 = OpCompositeExtract %uint %8225 2
       %8228 = OpIMul %uint %8226 %8227
       %8229 = OpCompositeExtract %uint %8225 0
       %8230 = OpIAdd %uint %8229 %8228
       %8231 = OpIMul %uint %8227 %8230
       %8232 = OpIAdd %uint %8226 %8231
       %8233 = OpIMul %uint %8230 %8232
       %8234 = OpIAdd %uint %8227 %8233
       %8235 = OpIMul %uint %8232 %8234
       %8236 = OpIAdd %uint %8230 %8235
       %8237 = OpCompositeInsert %v3uint %8236 %8225 0
       %8238 = OpIMul %uint %8234 %8236
       %8239 = OpIAdd %uint %8232 %8238
       %8240 = OpCompositeInsert %v3uint %8239 %8237 1
       %8241 = OpIMul %uint %8236 %8239
       %8242 = OpIAdd %uint %8234 %8241
       %8243 = OpCompositeInsert %v3uint %8242 %8240 2
       %8244 = OpBitwiseAnd %v3uint %406 %407
       %8245 = OpShiftRightLogical %v3uint %8243 %8244
       %8246 = OpConvertUToF %v3float %8245
       %8247 = OpExtInst %v3float %1 Fma %8246 %521 %510
       %8248 = OpExtInst %v3float %1 Normalize %8247
       %8249 = OpVectorTimesScalar %v3float %8248 %float_0_2588
       %8250 = OpFAdd %v3float %8215 %8249
       %8251 = OpFSub %v3float %8189 %8250
       %8252 = OpCompositeExtract %float %8206 3
       %8253 = OpDot %float %8251 %8251
       %8254 = OpExtInst %float %1 NMin %8252 %8253
       %8213 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %8254
       %8255 = OpFAdd %float %8217 %float_1
       %8216 = OpCompositeInsert %v3float %8255 %8215 2
               OpBranch %8212
       %8219 = OpLabel
               OpBranch %8205
       %8205 = OpLabel
       %8256 = OpCompositeExtract %float %8215 1
       %8257 = OpFAdd %float %8256 %float_1
       %8204 = OpCompositeInsert %v3float %8257 %8215 1
               OpBranch %8202
       %8209 = OpLabel
               OpBranch %8195
       %8195 = OpLabel
       %8258 = OpCompositeExtract %float %8203 0
       %8259 = OpFAdd %float %8258 %float_1
       %8196 = OpCompositeInsert %v3float %8259 %8203 0
               OpBranch %8192
       %8199 = OpLabel
       %8260 = OpCompositeExtract %float %8193 3
       %8261 = OpExtInst %float %1 Sqrt %8260
       %8262 = OpExtInst %float %1 Fma %8261 %float_2 %float_n1
       %8263 = OpExtInst %float %1 FAbs %8262
       %8183 = OpExtInst %float %1 Fma %8263 %8180 %8182
       %8179 = OpVectorTimesScalar %v3float %8178 %float_2
       %8181 = OpFMul %float %8180 %float_0_5
               OpBranch %8177
       %8177 = OpLabel
       %8185 = OpIAdd %uint %8184 %uint_1
               OpBranch %8174
       %8187 = OpLabel
       %8264 = OpExtInst %float %1 FMix %float_n1 %float_1 %8182
       %8265 = OpExtInst %float %1 FClamp %8264 %float_0 %float_1
       %8266 = OpFAdd %float %8163 %8265
       %8267 = OpFNegate %float %8266
       %8268 = OpExtInst %float %1 Fma %7737 %8056 %8267
       %8269 = OpExtInst %float %1 Fma %1657 %1659 %8268
       %8270 = OpFMul %float %776 %8269
       %8271 = OpExtInst %float %1 FClamp %8270 %float_0 %float_1
       %8272 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_1
       %8273 = OpLoad %float %8272
       %8274 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_0
       %8275 = OpLoad %float %8274
       %8276 = OpExtInst %float %1 FMix %8273 %8275 %8271
       %8277 = OpCompositeExtract %float %3520 2
       %8278 = OpCompositeConstruct %v3float %8277 %8277 %8277
       %8279 = OpExtInst %v3float %1 Fma %8278 %623 %643
       %8280 = OpDPdx %v3float %593
       %8281 = OpVectorTimesScalar %v3float %8280 %float_2097152
       %8282 = OpDPdx %v3float %8279
       %8283 = OpFAdd %v3float %8281 %8282
       %8284 = OpDPdy %v3float %593
       %8285 = OpVectorTimesScalar %v3float %8284 %float_2097152
       %8286 = OpDPdy %v3float %8279
       %8287 = OpFAdd %v3float %8285 %8286
       %8288 = OpExtInst %v3float %1 Cross %8283 %8287
       %8289 = OpExtInst %v3float %1 Normalize %8288
       %8290 = OpFSub %v3float %8289 %7759
       %8291 = OpFAdd %v3float %8290 %623
       %8292 = OpDot %float %7765 %660
       %8293 = OpExtInst %float %1 NMax %float_0 %8292
       %8294 = OpFSub %float %float_1 %8293
       %8295 = OpExtInst %float %1 FAbs %8294
       %8296 = OpExtInst %float %1 NMax %8295 %float_9_99999975en05
       %8297 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_2
       %8298 = OpLoad %float %8297
       %8299 = OpFOrdLessThanEqual %bool %8296 %float_0
       %8300 = OpExtInst %float %1 Pow %8296 %8298
       %8301 = OpSelect %float %8299 %float_0 %8300
       %8302 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_0
       %8303 = OpLoad %float %8302
       %8304 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_3
       %8305 = OpLoad %float %8304
       %8306 = OpExtInst %float %1 Fma %8301 %8303 %8305
       %8307 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_2
       %8308 = OpLoad %float %8307
       %8309 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_1
       %8310 = OpLoad %float %8309
       %8311 = OpExtInst %float %1 FMix %8308 %8310 %8306
       %8312 = OpCompositeConstruct %v3float %8311 %8311 %8311
       %8313 = OpExtInst %v3float %1 FMix %7765 %294 %8312
       %8314 = OpCompositeConstruct %v3float %775 %775 %775
       %8315 = OpExtInst %v3float %1 FMix %8291 %8313 %8314
       %8316 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_3
       %8317 = OpLoad %float %8316
       %8318 = OpExtInst %float %1 FMix %8317 %float_0 %775
       %8319 = OpCompositeConstruct %v3float %8318 %8318 %8318
       %8320 = OpExtInst %v3float %1 FMix %8315 %294 %8319
       %8321 = OpExtInst %float %1 Fma %1446 %1655 %1446
       %8322 = OpExtInst %float %1 Fma %8057 %8266 %8057
       %8323 = OpFAdd %float %8321 %8322
       %8324 = OpFMul %float %776 %8323
       %8325 = OpCompositeConstruct %v3float %8324 %8324 %8324
       %8326 = OpExtInst %v3float %1 Fma %8325 %623 %643
       %8327 = OpDPdx %v3float %593
       %8328 = OpVectorTimesScalar %v3float %8327 %float_2097152
       %8329 = OpDPdx %v3float %8326
       %8330 = OpFAdd %v3float %8328 %8329
       %8331 = OpDPdy %v3float %593
       %8332 = OpVectorTimesScalar %v3float %8331 %float_2097152
       %8333 = OpDPdy %v3float %8326
       %8334 = OpFAdd %v3float %8332 %8333
       %8335 = OpExtInst %v3float %1 Cross %8330 %8334
       %8336 = OpExtInst %v3float %1 Normalize %8335
       %8337 = OpFSub %v3float %8336 %7759
       %8338 = OpFAdd %v3float %8337 %623
       %8339 = OpCompositeConstruct %v3float %1446 %1446 %1446
       %8340 = OpExtInst %v3float %1 FMix %8320 %8338 %8339
       %8341 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_97 %int_0
       %8342 = OpLoad %float %8341
       %8343 = OpExtInst %float %1 FMix %8342 %float_1 %8271
       %8344 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_1
       %8345 = OpLoad %float %8344
       %8346 = OpExtInst %float %1 Pow %8296 %8345
       %8347 = OpSelect %float %8299 %float_0 %8346
       %8348 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_3
       %8349 = OpLoad %float %8348
       %8350 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_2
       %8351 = OpLoad %float %8350
       %8352 = OpExtInst %float %1 Fma %8347 %8349 %8351
       %8353 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_0
       %8354 = OpLoad %float %8353
       %8355 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_103 %int_3
       %8356 = OpLoad %float %8355
       %8357 = OpExtInst %float %1 FMix %8354 %8356 %8352
       %8358 = OpExtInst %float %1 FMix %8357 %float_1 %8271
       %8359 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_1
       %8360 = OpLoad %float %8359
       %8361 = OpExtInst %float %1 FMix %float_0 %8360 %8271
       %8362 = OpCompositeConstruct %v3float %8361 %8361 %8361
       %8363 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_107
       %8364 = OpLoad %v4float %8363
       %8365 = OpVectorShuffle %v3float %8364 %8364 0 1 2
       %8366 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_106
       %8367 = OpLoad %v4float %8366
       %8368 = OpVectorShuffle %v3float %8367 %8367 0 1 2
       %8369 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_2
       %8370 = OpLoad %float %8369
       %8371 = OpCompositeConstruct %v3float %8370 %8370 %8370
       %8372 = OpFAdd %v3float %8365 %8368
       %8373 = OpFDiv %v3float %8365 %8372
       %8374 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_107 %int_3
       %8375 = OpLoad %float %8374
       %8376 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_108 %int_0
       %8377 = OpLoad %float %8376
       %8378 = OpFSub %float %698 %float_0_333299994
       %8379 = OpFOrdLessThan %bool %8378 %float_0
               OpSelectionMerge %8380 None
               OpBranchConditional %8379 %8381 %8380
       %8381 = OpLabel
               OpKill
       %8380 = OpLabel
       %8382 = OpAccessChain %_ptr_Uniform_uint %View %uint_20
       %8383 = OpLoad %uint %8382
       %8384 = OpConvertUToF %float %8383
       %8385 = OpVectorTimesScalar %v2float %466 %8384
       %8386 = OpFAdd %v2float %624 %8385
       %8387 = OpDot %float %8386 %467
       %8388 = OpExtInst %float %1 Fract %8387
       %8389 = OpFMul %float %float_52_9829178 %8388
       %8390 = OpExtInst %float %1 Fract %8389
       %8391 = OpIMul %uint %581 %uint_41
       %8392 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %8391
       %8393 = OpLoad %v4float %8392
       %8394 = OpCompositeExtract %float %8393 0
       %8395 = OpBitcast %uint %8394
       %8396 = OpBitwiseAnd %uint %8395 %uint_512
       %8397 = OpINotEqual %bool %8396 %uint_0
       %8398 = OpSelect %uint %8397 %uint_32 %uint_0
       %8399 = OpBitwiseOr %uint %uint_1 %8398
       %8400 = OpLoad %v4float %8392
       %8401 = OpCompositeExtract %float %8400 0
       %8402 = OpBitcast %uint %8401
       %8403 = OpBitwiseAnd %uint %8402 %uint_256
       %8404 = OpINotEqual %bool %8403 %uint_0
       %8405 = OpSelect %uint %8404 %uint_64 %uint_0
       %8406 = OpBitwiseOr %uint %8399 %8405
       %8407 = OpBitwiseAnd %uint %8406 %uint_4294967288
       %8408 = OpBitwiseOr %uint %8407 %uint_4
       %8409 = OpVectorShuffle %v3float %8362 %459 0 1 2
       %8410 = OpExtInst %v3float %1 FClamp %8409 %106 %131
       %8411 = OpVectorShuffle %v3float %611 %611 3 3 3
       %8412 = OpVectorShuffle %v3float %611 %611 0 1 2
       %8413 = OpExtInst %v3float %1 Fma %8410 %8411 %8412
       %8414 = OpExtInst %float %1 FClamp %8358 %float_0 %float_1
       %8415 = OpCompositeExtract %float %613 3
       %8416 = OpCompositeExtract %float %613 0
       %8417 = OpExtInst %float %1 Fma %8414 %8415 %8416
       %8418 = OpCompositeInsert %v4float %8417 %542 1
       %8419 = OpCompositeExtract %float %615 1
       %8420 = OpCompositeExtract %float %615 0
       %8421 = OpExtInst %float %1 Fma %8276 %8419 %8420
       %8422 = OpAccessChain %_ptr_Uniform_float %View %uint_41
       %8423 = OpLoad %float %8422
       %8424 = OpExtInst %float %1 NMax %8423 %8421
       %8425 = OpExtInst %float %1 FClamp %8424 %float_0 %float_1
       %8426 = OpCompositeInsert %v4float %8425 %8418 2
       %8427 = OpExtInst %float %1 FClamp %8343 %float_0 %float_1
       %8428 = OpCompositeInsert %v4float %8427 %8426 3
       %8429 = OpVectorShuffle %v3float %8373 %459 0 1 2
       %8430 = OpExtInst %v3float %1 FClamp %8429 %106 %131
       %8431 = OpVectorShuffle %v4float %459 %8430 4 5 6 3
       %8432 = OpVectorShuffle %v3float %8372 %459 0 1 2
       %8433 = OpExtInst %v3float %1 FClamp %8432 %106 %167
       %8434 = OpCompositeInsert %v4float %float_0 %8431 3
       %8435 = OpVectorShuffle %v3float %8371 %459 0 1 2
       %8436 = OpExtInst %v3float %1 FClamp %8435 %106 %167
       %8437 = OpVectorShuffle %v3float %8413 %459 0 1 2
       %8438 = OpExtInst %v3float %1 Normalize %8340
       %8439 = OpDot %float %8438 %8438
       %8440 = OpBitcast %uint %8439
       %8441 = OpBitwiseAnd %uint %8440 %uint_2139095040
       %8442 = OpINotEqual %bool %8441 %uint_2139095040
       %8443 = OpLogicalNot %bool %8442
               OpSelectionMerge %8444 DontFlatten
               OpBranchConditional %8443 %8445 %8444
       %8445 = OpLabel
       %8446 = OpExtInst %v3float %1 Normalize %623
               OpBranch %8444
       %8444 = OpLabel
       %8447 = OpPhi %v3float %8340 %8380 %8446 %8445
       %8448 = OpPhi %v3float %8438 %8380 %8446 %8445
       %8449 = OpFSub %float %float_1 %8427
       %8450 = OpLoad %v4float %8392
       %8451 = OpCompositeExtract %float %8450 0
       %8452 = OpBitcast %uint %8451
       %8453 = OpBitwiseAnd %uint %8452 %uint_2
       %8454 = OpINotEqual %bool %8453 %uint_0
       %8455 = OpAccessChain %_ptr_Uniform_float %View %uint_40
       %8456 = OpLoad %float %8455
       %8457 = OpFOrdGreaterThan %bool %8456 %float_0
       %8458 = OpLogicalAnd %bool %8454 %8457
               OpSelectionMerge %8459 None
               OpBranchConditional %8458 %8460 %8459
       %8460 = OpLabel
       %8461 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_5
       %8462 = OpLoad %float %8461
               OpBranch %8459
       %8459 = OpLabel
       %8463 = OpPhi %float %float_1 %8444 %8462 %8460
       %8464 = OpLoad %v4float %8392
       %8465 = OpCompositeExtract %float %8464 0
       %8466 = OpBitcast %uint %8465
       %8467 = OpBitwiseAnd %uint %8466 %uint_4
       %8468 = OpINotEqual %bool %8467 %uint_0
               OpSelectionMerge %8469 DontFlatten
               OpBranchConditional %8468 %8470 %8469
       %8470 = OpLabel
       %8471 = OpVectorTimesScalar %v3float %593 %float_2097152
       %8472 = OpFAdd %v3float %8471 %643
       %8473 = OpAccessChain %_ptr_Uniform_v3float %View %uint_35
       %8474 = OpLoad %v3float %8473
       %8475 = OpAccessChain %_ptr_Uniform_v3float %View %uint_36
       %8476 = OpLoad %v3float %8475
       %8477 = OpExtInst %v3float %1 Fma %8472 %8474 %8476
       %8478 = OpExtInst %v3float %1 FClamp %8477 %106 %306
       %8479 = OpAccessChain %_ptr_Uniform_v3float %View %uint_37
       %8480 = OpLoad %v3float %8479
       %8481 = OpFMul %v3float %8478 %8480
       %8482 = OpCompositeExtract %float %8481 0
       %8483 = OpCompositeExtract %float %8481 1
       %8484 = OpCompositeExtract %float %8481 2
       %8485 = OpConvertFToS %int %8482
       %8486 = OpConvertFToS %int %8483
       %8487 = OpConvertFToS %int %8484
       %8488 = OpCompositeConstruct %v4int %8485 %8486 %8487 %int_0
       %8489 = OpVectorShuffle %v3int %8488 %8488 0 1 2
       %8490 = OpLoad %type_3d_image %View_VolumetricLightmapIndirectionTexture
       %8491 = OpImageFetch %v4uint %8490 %8489 Lod %int_0
       %8492 = OpConvertUToF %v4float %8491
       %8493 = OpAccessChain %_ptr_Uniform_float %View %uint_38
       %8494 = OpLoad %float %8493
       %8495 = OpFAdd %float %8494 %float_1
       %8496 = OpVectorShuffle %v3float %8492 %8492 0 1 2
       %8497 = OpVectorTimesScalar %v3float %8496 %8495
       %8498 = OpCompositeExtract %float %8492 3
       %8499 = OpCompositeConstruct %v3float %8498 %8498 %8498
       %8500 = OpFDiv %v3float %8481 %8499
       %8501 = OpExtInst %v3float %1 Fract %8500
       %8502 = OpVectorTimesScalar %v3float %8501 %8494
       %8503 = OpFAdd %v3float %8497 %8502
       %8504 = OpFAdd %v3float %8503 %141
       %8505 = OpAccessChain %_ptr_Uniform_v3float %View %uint_39
       %8506 = OpLoad %v3float %8505
       %8507 = OpFMul %v3float %8504 %8506
       %8508 = OpLoad %type_3d_image_0 %View_DirectionalLightShadowingBrickTexture
       %8509 = OpLoad %type_sampler %View_SharedBilinearClampedSampler
       %8510 = OpSampledImage %type_sampled_image_0 %8508 %8509
       %8511 = OpImageSampleExplicitLod %v4float %8510 %8507 Lod %float_0
       %8512 = OpCompositeExtract %float %8511 0
               OpBranch %8469
       %8469 = OpLabel
       %8513 = OpPhi %float %8463 %8459 %8512 %8470
       %8514 = OpCompositeConstruct %v4float %8513 %float_1 %float_1 %float_1
       %8515 = OpFOrdEqual %v4bool %8514 %102
       %8516 = OpAll %bool %8515
       %8517 = OpFOrdEqual %v4bool %8514 %121
       %8518 = OpAll %bool %8517
       %8519 = OpLogicalNot %bool %8516
       %8520 = OpLogicalNot %bool %8518
       %8521 = OpLogicalAnd %bool %8519 %8520
               OpSelectionMerge %8522 None
               OpBranchConditional %8521 %8523 %8524
       %8524 = OpLabel
               OpSelectionMerge %8525 None
               OpBranchConditional %8516 %8526 %8527
       %8527 = OpLabel
               OpSelectionMerge %8528 None
               OpBranchConditional %8518 %8529 %8528
       %8529 = OpLabel
       %8530 = OpBitwiseOr %uint %8408 %uint_0
       %8531 = OpBitwiseOr %uint %8530 %uint_0
               OpBranch %8528
       %8528 = OpLabel
       %8532 = OpPhi %uint %8408 %8527 %8531 %8529
               OpBranch %8525
       %8526 = OpLabel
       %8533 = OpBitwiseOr %uint %8408 %uint_0
       %8534 = OpBitwiseOr %uint %8533 %uint_16
               OpBranch %8525
       %8525 = OpLabel
       %8535 = OpPhi %uint %8532 %8528 %8534 %8526
               OpBranch %8522
       %8523 = OpLabel
       %8536 = OpBitwiseOr %uint %8408 %uint_8
               OpBranch %8522
       %8522 = OpLabel
       %8537 = OpPhi %uint %8535 %8525 %8536 %8523
       %8538 = OpFMul %float %float_0_0799999982 %8417
       %8539 = OpCompositeConstruct %v3float %8538 %8538 %8538
       %8540 = OpAccessChain %_ptr_Uniform_float %View %uint_15 %int_3
       %8541 = OpLoad %float %8540
       %8542 = OpVectorTimesScalar %v3float %8437 %8541
       %8543 = OpFAdd %v3float %8542 %8412
       %8544 = OpAccessChain %_ptr_Uniform_float %View %uint_16 %int_3
       %8545 = OpLoad %float %8544
       %8546 = OpVectorTimesScalar %v3float %8539 %8545
       %8547 = OpVectorShuffle %v3float %613 %613 0 1 2
       %8548 = OpFAdd %v3float %8546 %8547
       %8549 = OpAccessChain %_ptr_Uniform_float %View %uint_25
       %8550 = OpLoad %float %8549
       %8551 = OpFOrdNotEqual %bool %8550 %float_0
               OpSelectionMerge %8552 None
               OpBranchConditional %8551 %8553 %8552
       %8553 = OpLabel
       %8554 = OpVectorTimesScalar %v3float %8548 %float_0_449999988
       %8555 = OpFAdd %v3float %8543 %8554
               OpBranch %8552
       %8552 = OpLabel
       %8556 = OpPhi %v3float %8543 %8522 %8555 %8553
       %8557 = OpCompositeConstruct %v3bool %8551 %8551 %8551
       %8558 = OpSelect %v3float %8557 %106 %8548
               OpSelectionMerge %8559 None
               OpBranchConditional %8457 %8560 %8559
       %8560 = OpLabel
       %8561 = OpVectorTimesScalar %v3float %593 %float_2097152
       %8562 = OpFAdd %v3float %8561 %643
       %8563 = OpAccessChain %_ptr_Uniform_v3float %IndirectLightingCache %uint_1
       %8564 = OpLoad %v3float %8563
       %8565 = OpAccessChain %_ptr_Uniform_v3float %IndirectLightingCache %int_0
       %8566 = OpLoad %v3float %8565
       %8567 = OpExtInst %v3float %1 Fma %8562 %8564 %8566
       %8568 = OpAccessChain %_ptr_Uniform_v3float %IndirectLightingCache %uint_2
       %8569 = OpLoad %v3float %8568
       %8570 = OpAccessChain %_ptr_Uniform_v3float %IndirectLightingCache %uint_3
       %8571 = OpLoad %v3float %8570
       %8572 = OpExtInst %v3float %1 FClamp %8567 %8569 %8571
       %8573 = OpLoad %type_3d_image_0 %IndirectLightingCache_IndirectLightingCacheTexture0
       %8574 = OpLoad %type_sampler %IndirectLightingCache_IndirectLightingCacheTextureSampler0
       %8575 = OpSampledImage %type_sampled_image_0 %8573 %8574
       %8576 = OpImageSampleImplicitLod %v4float %8575 %8572 None
       %8577 = OpLoad %type_3d_image_0 %IndirectLightingCache_IndirectLightingCacheTexture1
       %8578 = OpLoad %type_sampler %View_SharedBilinearClampedSampler
       %8579 = OpSampledImage %type_sampled_image_0 %8577 %8578
       %8580 = OpImageSampleImplicitLod %v4float %8579 %8572 None
       %8581 = OpLoad %type_3d_image_0 %IndirectLightingCache_IndirectLightingCacheTexture2
       %8582 = OpSampledImage %type_sampled_image_0 %8581 %8578
       %8583 = OpImageSampleImplicitLod %v4float %8582 %8572 None
       %8584 = OpCompositeExtract %float %8576 0
       %8585 = OpCompositeExtract %float %8580 0
       %8586 = OpCompositeExtract %float %8583 0
       %8587 = OpCompositeExtract %float %8576 3
       %8588 = OpCompositeConstruct %v4float %8584 %8585 %8586 %8587
       %8589 = OpCompositeExtract %float %8576 1
       %8590 = OpCompositeExtract %float %8580 1
       %8591 = OpCompositeExtract %float %8583 1
       %8592 = OpCompositeExtract %float %8580 3
       %8593 = OpCompositeConstruct %v4float %8589 %8590 %8591 %8592
       %8594 = OpCompositeExtract %float %8576 2
       %8595 = OpCompositeExtract %float %8580 2
       %8596 = OpCompositeExtract %float %8583 2
       %8597 = OpCompositeExtract %float %8583 3
       %8598 = OpCompositeConstruct %v4float %8594 %8595 %8596 %8597
       %8599 = OpCompositeExtract %float %8448 1
       %8600 = OpFMul %float %float_n0_488602996 %8599
       %8601 = OpCompositeInsert %v4float %8600 %550 1
       %8602 = OpCompositeExtract %float %8448 2
       %8603 = OpFMul %float %float_0_488602996 %8602
       %8604 = OpCompositeInsert %v4float %8603 %8601 2
       %8605 = OpCompositeExtract %float %8448 0
       %8606 = OpFMul %float %float_n0_488602996 %8605
       %8607 = OpCompositeInsert %v4float %8606 %8604 3
       %8608 = OpCompositeInsert %v4float %float_0_886227548 %8607 0
       %8609 = OpVectorShuffle %v3float %8608 %8608 1 2 3
       %8610 = OpVectorTimesScalar %v3float %8609 %float_2_09439516
       %8611 = OpVectorShuffle %v4float %8608 %8610 0 4 5 6
       %8612 = OpDot %float %8588 %8611
       %8613 = OpCompositeInsert %v3float %8612 %551 0
       %8614 = OpDot %float %8593 %8611
       %8615 = OpCompositeInsert %v3float %8614 %8613 1
       %8616 = OpDot %float %8598 %8611
       %8617 = OpCompositeInsert %v3float %8616 %8615 2
       %8618 = OpExtInst %v3float %1 NMax %106 %8617
       %8619 = OpFMul %v3float %8618 %498
               OpBranch %8559
       %8559 = OpLabel
       %8620 = OpPhi %v3float %106 %8552 %8619 %8560
       %8621 = OpAccessChain %_ptr_Uniform_v3float %View %uint_24
       %8622 = OpLoad %v3float %8621
       %8623 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_17
       %8624 = OpLoad %uint %8623
       %8625 = OpUGreaterThan %bool %8624 %uint_0
               OpSelectionMerge %8626 None
               OpBranchConditional %8625 %8627 %8626
       %8627 = OpLabel
       %8628 = OpAccessChain %_ptr_Uniform_float %View %uint_26
       %8629 = OpLoad %float %8628
       %8630 = OpFOrdNotEqual %bool %8629 %float_0
               OpSelectionMerge %8631 DontFlatten
               OpBranchConditional %8630 %8632 %8631
       %8632 = OpLabel
               OpSelectionMerge %8633 None
               OpBranchConditional %8457 %8634 %8633
       %8634 = OpLabel
       %8635 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_4
       %8636 = OpLoad %v4float %8635
       %8637 = OpVectorShuffle %v3float %8636 %8636 0 1 2
       %8638 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_4 %int_3
       %8639 = OpLoad %float %8638
               OpBranch %8633
       %8633 = OpLabel
       %8640 = OpPhi %v3float %8448 %8632 %8637 %8634
       %8641 = OpPhi %float %float_1 %8632 %8639 %8634
       %8642 = OpFSub %float %float_1 %8641
       %8643 = OpFSub %float %8641 %float_1
       %8644 = OpExtInst %float %1 Fma %8643 %8642 %float_1
       %8645 = OpCompositeConstruct %v3float %8644 %8644 %8644
       %8646 = OpExtInst %v3float %1 FMix %8640 %8448 %8645
       %8647 = OpDot %float %8640 %8448
       %8648 = OpExtInst %float %1 FClamp %8647 %float_0 %float_1
       %8649 = OpExtInst %float %1 FMix %8648 %float_1 %8644
               OpBranch %8631
       %8631 = OpLabel
       %8650 = OpPhi %float %float_1 %8627 %8649 %8633
       %8651 = OpPhi %float %float_1 %8627 %8641 %8633
       %8652 = OpPhi %v3float %8448 %8627 %8646 %8633
       %8653 = OpCompositeExtract %float %8652 0
       %8654 = OpCompositeExtract %float %8652 1
       %8655 = OpCompositeExtract %float %8652 2
       %8656 = OpCompositeConstruct %v4float %8653 %8654 %8655 %float_1
       %8657 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_0
       %8658 = OpLoad %v4float %8657
       %8659 = OpDot %float %8658 %8656
       %8660 = OpCompositeInsert %v3float %8659 %551 0
       %8661 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_1
       %8662 = OpLoad %v4float %8661
       %8663 = OpDot %float %8662 %8656
       %8664 = OpCompositeInsert %v3float %8663 %8660 1
       %8665 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_2
       %8666 = OpLoad %v4float %8665
       %8667 = OpDot %float %8666 %8656
       %8668 = OpCompositeInsert %v3float %8667 %8664 2
       %8669 = OpVectorShuffle %v4float %8656 %8656 0 1 2 2
       %8670 = OpVectorShuffle %v4float %8656 %8656 1 2 2 0
       %8671 = OpFMul %v4float %8669 %8670
       %8672 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_3
       %8673 = OpLoad %v4float %8672
       %8674 = OpDot %float %8673 %8671
       %8675 = OpCompositeInsert %v3float %8674 %551 0
       %8676 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_4
       %8677 = OpLoad %v4float %8676
       %8678 = OpDot %float %8677 %8671
       %8679 = OpCompositeInsert %v3float %8678 %8675 1
       %8680 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_5
       %8681 = OpLoad %v4float %8680
       %8682 = OpDot %float %8681 %8671
       %8683 = OpCompositeInsert %v3float %8682 %8679 2
       %8684 = OpFMul %float %8654 %8654
       %8685 = OpFNegate %float %8684
       %8686 = OpExtInst %float %1 Fma %8653 %8653 %8685
       %8687 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_6
       %8688 = OpLoad %v4float %8687
       %8689 = OpVectorShuffle %v3float %8688 %8688 0 1 2
       %8690 = OpVectorTimesScalar %v3float %8689 %8686
       %8691 = OpFAdd %v3float %8668 %8683
       %8692 = OpFAdd %v3float %8691 %8690
       %8693 = OpExtInst %v3float %1 NMax %106 %8692
       %8694 = OpVectorShuffle %v3float %621 %621 0 1 2
       %8695 = OpFMul %v3float %8693 %8694
       %8696 = OpFMul %float %8651 %8650
       %8697 = OpVectorTimesScalar %v3float %8695 %8696
               OpBranch %8626
       %8626 = OpLabel
       %8698 = OpPhi %v3float %106 %8559 %8697 %8631
       %8699 = OpExtInst %v3float %1 Fma %8620 %8622 %8698
       %8700 = OpFMul %v3float %8699 %8556
       %8701 = OpVectorTimesScalar %v3float %8437 %float_2_04040003
       %8702 = OpFSub %v3float %8701 %178
       %8703 = OpVectorTimesScalar %v3float %8437 %float_n4_79510021
       %8704 = OpFAdd %v3float %8703 %181
       %8705 = OpVectorTimesScalar %v3float %8437 %float_2_75519991
       %8706 = OpFAdd %v3float %8705 %184
       %8707 = OpVectorTimesScalar %v3float %8702 %float_1
       %8708 = OpFAdd %v3float %8707 %8704
       %8709 = OpVectorTimesScalar %v3float %8708 %float_1
       %8710 = OpFAdd %v3float %8709 %8706
       %8711 = OpVectorTimesScalar %v3float %8710 %float_1
       %8712 = OpExtInst %v3float %1 NMax %131 %8711
       %8713 = OpFMul %v3float %8700 %8712
       %8714 = OpVectorTimesScalar %v3float %8556 %8427
       %8715 = OpVectorTimesScalar %v3float %8713 %8427
       %8716 = OpAccessChain %_ptr_Uniform_v4float %View %uint_11
       %8717 = OpLoad %v4float %8716
       %8718 = OpVectorShuffle %v2float %8717 %8717 2 3
       %8719 = OpFMul %v2float %626 %8718
       %8720 = OpConvertFToU %v2uint %8719
       %8721 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_3
       %8722 = OpLoad %uint %8721
       %8723 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_4
       %8724 = OpLoad %v3float %8723
       %8725 = OpAccessChain %_ptr_Uniform_v3int %OpaqueBasePass %uint_2
       %8726 = OpLoad %v3int %8725
       %8727 = OpCompositeExtract %float %8724 0
       %8728 = OpCompositeExtract %float %8724 1
       %8729 = OpExtInst %float %1 Fma %585 %8727 %8728
       %8730 = OpExtInst %float %1 Log2 %8729
       %8731 = OpCompositeExtract %float %8724 2
       %8732 = OpFMul %float %8730 %8731
       %8733 = OpExtInst %float %1 NMax %float_0 %8732
       %8734 = OpConvertFToU %uint %8733
       %8735 = OpCompositeExtract %int %8726 2
       %8736 = OpISub %int %8735 %int_1
       %8737 = OpBitcast %uint %8736
       %8738 = OpExtInst %uint %1 UMin %8734 %8737
       %8739 = OpCompositeConstruct %v2uint %8722 %8722
       %8740 = OpBitwiseAnd %v2uint %8739 %308
       %8741 = OpShiftRightLogical %v2uint %8720 %8740
       %8742 = OpCompositeExtract %uint %8741 0
       %8743 = OpCompositeExtract %uint %8741 1
       %8744 = OpCompositeExtract %int %8726 1
       %8745 = OpBitcast %uint %8744
       %8746 = OpIMul %uint %8738 %8745
       %8747 = OpIAdd %uint %8746 %8743
       %8748 = OpCompositeExtract %int %8726 0
       %8749 = OpBitcast %uint %8748
       %8750 = OpIMul %uint %8747 %8749
       %8751 = OpIAdd %uint %8750 %8742
       %8752 = OpAccessChain %_ptr_Uniform_uint %SingleLayerWater %uint_3
       %8753 = OpLoad %uint %8752
       %8754 = OpINotEqual %bool %8753 %uint_0
       %8755 = OpAccessChain %_ptr_Uniform_uint %SingleLayerWater %uint_4
       %8756 = OpLoad %uint %8755
       %8757 = OpINotEqual %bool %8756 %uint_0
       %8758 = OpLogicalAnd %bool %true %8757
       %8759 = OpExtInst %v2float %1 Trunc %128
       %8760 = OpConvertFToS %v2int %8759
       %8761 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_19
       %8762 = OpLoad %int %8761
       %8763 = OpINotEqual %bool %8762 %int_0
               OpSelectionMerge %8764 DontFlatten
               OpBranchConditional %8763 %8765 %8764
       %8765 = OpLabel
       %8766 = OpCompositeExtract %int %8760 0
       %8767 = OpCompositeExtract %int %8760 1
       %8768 = OpCompositeConstruct %v3int %8766 %8767 %int_0
       %8769 = OpVectorShuffle %v2int %8768 %8768 0 1
       %8770 = OpLoad %type_2d_image %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture
       %8771 = OpImageFetch %v4float %8770 %8769 Lod %int_0
               OpBranch %8764
       %8764 = OpLabel
       %8772 = OpPhi %v4float %121 %8626 %8771 %8765
       %8773 = OpFMul %v4float %8772 %8772
       %8774 = OpLoad %v4float %8392
       %8775 = OpCompositeExtract %float %8774 0
       %8776 = OpBitcast %uint %8775
       %8777 = OpBitwiseAnd %uint %8776 %uint_2048
       %8778 = OpINotEqual %bool %8777 %uint_0
       %8779 = OpSelect %uint %8778 %uint_1 %uint_0
       %8780 = OpBitwiseAnd %uint %8776 %uint_4096
       %8781 = OpINotEqual %bool %8780 %uint_0
       %8782 = OpSelect %uint %8781 %uint_1 %uint_0
       %8783 = OpBitwiseAnd %uint %8776 %uint_8192
       %8784 = OpINotEqual %bool %8783 %uint_0
       %8785 = OpSelect %uint %8784 %uint_1 %uint_0
       %8786 = OpShiftLeftLogical %uint %8782 %uint_1
       %8787 = OpBitwiseOr %uint %8779 %8786
       %8788 = OpShiftLeftLogical %uint %8785 %uint_2
       %8789 = OpBitwiseOr %uint %8787 %8788
       %8790 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_1
       %8791 = OpLoad %uint %8790
       %8792 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_8
       %8793 = OpLoad %uint %8792
       %8794 = OpAccessChain %_ptr_Uniform_v2float %OpaqueBasePass %uint_9
       %8795 = OpLoad %v2float %8794
       %8796 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_7
       %8797 = OpLoad %v3float %8796
       %8798 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_5
       %8799 = OpLoad %v3float %8798
       %8800 = OpAccessChain %_ptr_Uniform_float %OpaqueBasePass %uint_6
       %8801 = OpLoad %float %8800
       %8802 = OpINotEqual %bool %8791 %uint_0
               OpSelectionMerge %8803 DontFlatten
               OpBranchConditional %8802 %8804 %8803
       %8804 = OpLabel
       %8805 = OpBitwiseAnd %uint %8793 %uint_2
       %8806 = OpShiftRightLogical %uint %8805 %uint_1
       %8807 = OpConvertUToF %float %8806
       %8808 = OpBitwiseAnd %uint %8793 %uint_4
       %8809 = OpShiftRightLogical %uint %8808 %uint_2
       %8810 = OpConvertUToF %float %8809
       %8811 = OpBitwiseAnd %uint %8793 %uint_8
       %8812 = OpShiftRightLogical %uint %8811 %uint_3
       %8813 = OpConvertUToF %float %8812
       %8814 = OpCompositeConstruct %v4float %548 %8807 %8810 %8813
       %8815 = OpShiftRightLogical %uint %8793 %uint_8
       %8816 = OpBitwiseAnd %uint %8815 %uint_7
       %8817 = OpCompositeInsert %v4float %float_1 %8814 0
       %8818 = OpCompositeInsert %v4float %float_1 %8514 0
       %8819 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_10
       %8820 = OpLoad %uint %8819
       %8821 = OpUGreaterThan %bool %8820 %uint_0
               OpSelectionMerge %8822 None
               OpBranchConditional %8821 %8823 %8822
       %8823 = OpLabel
       %8824 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_12
       %8825 = OpLoad %v4float %8824
       %8826 = OpCompositeConstruct %v4float %646 %646 %646 %646
       %8827 = OpFOrdGreaterThanEqual %v4bool %8826 %8825
       %8828 = OpSelect %v4float %8827 %121 %102
       %8829 = OpCompositeExtract %float %8828 0
       %8830 = OpCompositeExtract %float %8828 1
       %8831 = OpFAdd %float %8829 %8830
       %8832 = OpCompositeExtract %float %8828 2
       %8833 = OpFAdd %float %8831 %8832
       %8834 = OpCompositeExtract %float %8828 3
       %8835 = OpFAdd %float %8833 %8834
       %8836 = OpConvertFToU %uint %8835
       %8837 = OpULessThan %bool %8836 %8820
               OpSelectionMerge %8838 None
               OpBranchConditional %8837 %8839 %8838
       %8839 = OpLabel
       %8840 = OpCompositeExtract %float %642 0
       %8841 = OpCompositeExtract %float %642 1
       %8842 = OpCompositeExtract %float %642 2
       %8843 = OpCompositeConstruct %v4float %8840 %8841 %8842 %float_1
       %8844 = OpAccessChain %_ptr_Uniform_mat4v4float %OpaqueBasePass %uint_13 %8836
       %8845 = OpLoad %mat4v4float %8844
       %8846 = OpMatrixTimesVector %v4float %8845 %8843
       %8847 = OpVectorShuffle %v2float %8846 %8846 0 1
       %8848 = OpCompositeExtract %float %8846 3
       %8849 = OpCompositeConstruct %v2float %8848 %8848
       %8850 = OpFDiv %v2float %8847 %8849
       %8851 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_14 %8836
       %8852 = OpLoad %v4float %8851
       %8853 = OpVectorShuffle %v2float %8852 %8852 0 1
       %8854 = OpFOrdGreaterThanEqual %v2bool %8850 %8853
       %8855 = OpVectorShuffle %v2float %8852 %8852 2 3
       %8856 = OpFOrdLessThanEqual %v2bool %8850 %8855
       %8857 = OpCompositeExtract %bool %8854 0
       %8858 = OpCompositeExtract %bool %8856 0
       %8859 = OpLogicalAnd %bool %8857 %8858
       %8860 = OpCompositeExtract %bool %8854 1
       %8861 = OpCompositeExtract %bool %8856 1
       %8862 = OpLogicalAnd %bool %8860 %8861
       %8863 = OpCompositeConstruct %v2bool %8859 %8862
       %8864 = OpAll %bool %8863
               OpSelectionMerge %8865 None
               OpBranchConditional %8864 %8866 %8865
       %8866 = OpLabel
       %8867 = OpLoad %type_2d_image %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas
       %8868 = OpLoad %type_sampler %OpaqueBasePass_Shared_Forward_ShadowmapSampler
       %8869 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_15
       %8870 = OpLoad %v4float %8869
       %8871 = OpCompositeExtract %float %8846 2
       %8872 = OpFSub %float %float_1 %8871
       %8873 = OpVectorShuffle %v2float %8870 %8870 0 1
       %8874 = OpExtInst %v2float %1 Fma %8850 %8873 %526
       %8875 = OpExtInst %v2float %1 Fract %8874
       %8876 = OpExtInst %v2float %1 Floor %8874
       %8877 = OpFAdd %v2float %8876 %315
       %8878 = OpVectorShuffle %v2float %8870 %8870 2 3
       %8879 = OpFMul %v2float %8877 %8878
       %8880 = OpSampledImage %type_sampled_image %8867 %8868
       %8881 = OpImageGather %v4float %8880 %8879 %int_0 None
       %8882 = OpExtInst %float %1 Fma %8872 %float_4000 %float_n1
       %8883 = OpVectorTimesScalar %v4float %8881 %float_4000
       %8884 = OpCompositeConstruct %v4float %8882 %8882 %8882 %8882
       %8885 = OpFSub %v4float %8883 %8884
       %8886 = OpExtInst %v4float %1 FClamp %8885 %102 %121
       %8887 = OpVectorShuffle %v2float %8886 %8886 3 0
       %8888 = OpVectorShuffle %v2float %8886 %8886 2 1
       %8889 = OpVectorShuffle %v2float %8875 %8875 0 0
       %8890 = OpExtInst %v2float %1 FMix %8887 %8888 %8889
       %8891 = OpCompositeExtract %float %8890 0
       %8892 = OpCompositeExtract %float %8890 1
       %8893 = OpCompositeExtract %float %8875 1
       %8894 = OpExtInst %float %1 FMix %8891 %8892 %8893
               OpBranch %8865
       %8865 = OpLabel
       %8895 = OpPhi %float %float_1 %8839 %8894 %8866
               OpBranch %8838
       %8838 = OpLabel
       %8896 = OpPhi %float %float_1 %8823 %8895 %8865
               OpBranch %8822
       %8822 = OpLabel
       %8897 = OpPhi %float %float_1 %8804 %8896 %8838
       %8898 = OpLogicalNot %bool %8754
       %8899 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_11
       %8900 = OpLoad %int %8899
       %8901 = OpINotEqual %bool %8900 %int_n1
       %8902 = OpLogicalAnd %bool %8898 %8901
               OpSelectionMerge %8903 DontFlatten
               OpBranchConditional %8902 %8904 %8903
       %8904 = OpLabel
               OpSelectionMerge %8905 None
               OpSwitch %uint_0 %8906
       %8906 = OpLabel
       %8907 = OpExtInst %float %1 NMax %float_0 %float_0
       %8908 = OpBitcast %uint %8900
       %8909 = OpIMul %uint %8908 %uint_336
       %8910 = OpIAdd %uint %8909 %uint_96
       %8911 = OpShiftRightLogical %uint %8910 %uint_2
       %8912 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8911
       %8913 = OpLoad %uint %8912
       %8914 = OpIAdd %uint %8911 %uint_1
       %8915 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8914
       %8916 = OpLoad %uint %8915
       %8917 = OpIAdd %uint %8911 %uint_2
       %8918 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8917
       %8919 = OpLoad %uint %8918
       %8920 = OpIAdd %uint %8911 %uint_3
       %8921 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8920
       %8922 = OpLoad %uint %8921
       %8923 = OpCompositeConstruct %v4uint %8913 %8916 %8919 %8922
       %8924 = OpBitcast %v4float %8923
       %8925 = OpCompositeInsert %mat4v4float %8924 %541 2
       %8926 = OpIAdd %uint %8909 %uint_128
       %8927 = OpShiftRightLogical %uint %8926 %uint_2
       %8928 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8927
       %8929 = OpLoad %uint %8928
       %8930 = OpIAdd %uint %8927 %uint_1
       %8931 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8930
       %8932 = OpLoad %uint %8931
       %8933 = OpIAdd %uint %8927 %uint_2
       %8934 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8933
       %8935 = OpLoad %uint %8934
       %8936 = OpIAdd %uint %8927 %uint_3
       %8937 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8936
       %8938 = OpLoad %uint %8937
       %8939 = OpCompositeConstruct %v4uint %8929 %8932 %8935 %8938
       %8940 = OpBitcast %v4float %8939
       %8941 = OpCompositeInsert %mat4v4float %8940 %541 0
       %8942 = OpIAdd %uint %8909 %uint_144
       %8943 = OpShiftRightLogical %uint %8942 %uint_2
       %8944 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8943
       %8945 = OpLoad %uint %8944
       %8946 = OpIAdd %uint %8943 %uint_1
       %8947 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8946
       %8948 = OpLoad %uint %8947
       %8949 = OpIAdd %uint %8943 %uint_2
       %8950 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8949
       %8951 = OpLoad %uint %8950
       %8952 = OpIAdd %uint %8943 %uint_3
       %8953 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8952
       %8954 = OpLoad %uint %8953
       %8955 = OpCompositeConstruct %v4uint %8945 %8948 %8951 %8954
       %8956 = OpBitcast %v4float %8955
       %8957 = OpCompositeInsert %mat4v4float %8956 %8941 1
       %8958 = OpIAdd %uint %8909 %uint_160
       %8959 = OpShiftRightLogical %uint %8958 %uint_2
       %8960 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8959
       %8961 = OpLoad %uint %8960
       %8962 = OpIAdd %uint %8959 %uint_1
       %8963 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8962
       %8964 = OpLoad %uint %8963
       %8965 = OpIAdd %uint %8959 %uint_2
       %8966 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8965
       %8967 = OpLoad %uint %8966
       %8968 = OpIAdd %uint %8959 %uint_3
       %8969 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8968
       %8970 = OpLoad %uint %8969
       %8971 = OpCompositeConstruct %v4uint %8961 %8964 %8967 %8970
       %8972 = OpBitcast %v4float %8971
       %8973 = OpCompositeInsert %mat4v4float %8972 %8957 2
       %8974 = OpIAdd %uint %8909 %uint_176
       %8975 = OpShiftRightLogical %uint %8974 %uint_2
       %8976 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8975
       %8977 = OpLoad %uint %8976
       %8978 = OpIAdd %uint %8975 %uint_1
       %8979 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8978
       %8980 = OpLoad %uint %8979
       %8981 = OpIAdd %uint %8975 %uint_2
       %8982 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8981
       %8983 = OpLoad %uint %8982
       %8984 = OpIAdd %uint %8975 %uint_3
       %8985 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8984
       %8986 = OpLoad %uint %8985
       %8987 = OpCompositeConstruct %v4uint %8977 %8980 %8983 %8986
       %8988 = OpBitcast %v4float %8987
       %8989 = OpCompositeInsert %mat4v4float %8988 %8973 3
       %8990 = OpIAdd %uint %8909 %uint_256
       %8991 = OpShiftRightLogical %uint %8990 %uint_2
       %8992 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8991
       %8993 = OpLoad %uint %8992
       %8994 = OpIAdd %uint %8991 %uint_1
       %8995 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8994
       %8996 = OpLoad %uint %8995
       %8997 = OpIAdd %uint %8991 %uint_2
       %8998 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8997
       %8999 = OpLoad %uint %8998
       %9000 = OpCompositeConstruct %v3uint %8993 %8996 %8999
       %9001 = OpBitcast %v3float %9000
       %9002 = OpIAdd %uint %8909 %uint_268
       %9003 = OpShiftRightLogical %uint %9002 %uint_2
       %9004 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9003
       %9005 = OpLoad %uint %9004
       %9006 = OpIAdd %uint %8909 %uint_272
       %9007 = OpShiftRightLogical %uint %9006 %uint_2
       %9008 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9007
       %9009 = OpLoad %uint %9008
       %9010 = OpIAdd %uint %9007 %uint_1
       %9011 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9010
       %9012 = OpLoad %uint %9011
       %9013 = OpIAdd %uint %9007 %uint_2
       %9014 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9013
       %9015 = OpLoad %uint %9014
       %9016 = OpCompositeConstruct %v3uint %9009 %9012 %9015
       %9017 = OpBitcast %v3float %9016
       %9018 = OpIAdd %uint %8909 %uint_288
       %9019 = OpShiftRightLogical %uint %9018 %uint_2
       %9020 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9019
       %9021 = OpLoad %uint %9020
       %9022 = OpIAdd %uint %9019 %uint_1
       %9023 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9022
       %9024 = OpLoad %uint %9023
       %9025 = OpIAdd %uint %9019 %uint_2
       %9026 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9025
       %9027 = OpLoad %uint %9026
       %9028 = OpCompositeConstruct %v3uint %9021 %9024 %9027
       %9029 = OpBitcast %v3float %9028
       %9030 = OpIAdd %uint %8909 %uint_300
       %9031 = OpShiftRightLogical %uint %9030 %uint_2
       %9032 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9031
       %9033 = OpLoad %uint %9032
       %9034 = OpBitcast %float %9033
       %9035 = OpIAdd %uint %8909 %uint_312
       %9036 = OpShiftRightLogical %uint %9035 %uint_2
       %9037 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9036
       %9038 = OpLoad %uint %9037
       %9039 = OpBitcast %int %9038
       %9040 = OpIAdd %uint %8909 %uint_316
       %9041 = OpShiftRightLogical %uint %9040 %uint_2
       %9042 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9041
       %9043 = OpLoad %uint %9042
       %9044 = OpBitcast %int %9043
       %9045 = OpFNegate %v3float %9001
       %9046 = OpFNegate %v3float %9029
       %9047 = OpIEqual %bool %9005 %uint_0
               OpSelectionMerge %9048 None
               OpBranchConditional %9047 %9049 %9050
       %9050 = OpLabel
       %9051 = OpFAdd %v3float %593 %9001
       %9052 = OpFAdd %v3float %643 %9017
       %9053 = OpVectorTimesScalar %v3float %9051 %float_2097152
       %9054 = OpFAdd %v3float %9053 %9052
       %9055 = OpINotEqual %bool %9005 %uint_2
               OpSelectionMerge %9056 None
               OpBranchConditional %9055 %9057 %9056
       %9057 = OpLabel
               OpSelectionMerge %9058 None
               OpSwitch %uint_0 %9059
       %9059 = OpLabel
       %9060 = OpCompositeExtract %float %9054 0
       %9061 = OpExtInst %float %1 FAbs %9060
       %9062 = OpCompositeExtract %float %9054 1
       %9063 = OpExtInst %float %1 FAbs %9062
       %9064 = OpFOrdGreaterThanEqual %bool %9061 %9063
       %9065 = OpCompositeExtract %float %9054 2
       %9066 = OpExtInst %float %1 FAbs %9065
       %9067 = OpFOrdGreaterThanEqual %bool %9061 %9066
       %9068 = OpLogicalAnd %bool %9064 %9067
               OpSelectionMerge %9069 None
               OpBranchConditional %9068 %9070 %9071
       %9071 = OpLabel
       %9072 = OpFOrdGreaterThan %bool %9063 %9066
               OpSelectionMerge %9073 None
               OpBranchConditional %9072 %9074 %9075
       %9075 = OpLabel
       %9076 = OpFOrdGreaterThan %bool %9065 %float_0
       %9077 = OpSelect %uint %9076 %uint_4 %uint_5
               OpBranch %9058
       %9074 = OpLabel
       %9078 = OpFOrdGreaterThan %bool %9062 %float_0
       %9079 = OpSelect %uint %9078 %uint_2 %uint_3
               OpBranch %9058
       %9073 = OpLabel
               OpUnreachable
       %9070 = OpLabel
       %9080 = OpFOrdGreaterThan %bool %9060 %float_0
       %9081 = OpSelect %uint %9080 %uint_0 %uint_1
               OpBranch %9058
       %9069 = OpLabel
               OpUnreachable
       %9058 = OpLabel
       %9082 = OpPhi %uint %9077 %9075 %9079 %9074 %9081 %9070
       %9083 = OpIAdd %uint %8908 %9082
       %9084 = OpBitcast %int %9083
       %9085 = OpBitcast %uint %9084
       %9086 = OpIMul %uint %9085 %uint_336
       %9087 = OpIAdd %uint %9086 %uint_96
       %9088 = OpShiftRightLogical %uint %9087 %uint_2
       %9089 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9088
       %9090 = OpLoad %uint %9089
       %9091 = OpIAdd %uint %9088 %uint_1
       %9092 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9091
       %9093 = OpLoad %uint %9092
       %9094 = OpIAdd %uint %9088 %uint_2
       %9095 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9094
       %9096 = OpLoad %uint %9095
       %9097 = OpIAdd %uint %9088 %uint_3
       %9098 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9097
       %9099 = OpLoad %uint %9098
       %9100 = OpCompositeConstruct %v4uint %9090 %9093 %9096 %9099
       %9101 = OpBitcast %v4float %9100
       %9102 = OpCompositeInsert %mat4v4float %9101 %541 2
       %9103 = OpIAdd %uint %9086 %uint_128
       %9104 = OpShiftRightLogical %uint %9103 %uint_2
       %9105 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9104
       %9106 = OpLoad %uint %9105
       %9107 = OpIAdd %uint %9104 %uint_1
       %9108 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9107
       %9109 = OpLoad %uint %9108
       %9110 = OpIAdd %uint %9104 %uint_2
       %9111 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9110
       %9112 = OpLoad %uint %9111
       %9113 = OpIAdd %uint %9104 %uint_3
       %9114 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9113
       %9115 = OpLoad %uint %9114
       %9116 = OpCompositeConstruct %v4uint %9106 %9109 %9112 %9115
       %9117 = OpBitcast %v4float %9116
       %9118 = OpCompositeInsert %mat4v4float %9117 %541 0
       %9119 = OpIAdd %uint %9086 %uint_144
       %9120 = OpShiftRightLogical %uint %9119 %uint_2
       %9121 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9120
       %9122 = OpLoad %uint %9121
       %9123 = OpIAdd %uint %9120 %uint_1
       %9124 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9123
       %9125 = OpLoad %uint %9124
       %9126 = OpIAdd %uint %9120 %uint_2
       %9127 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9126
       %9128 = OpLoad %uint %9127
       %9129 = OpIAdd %uint %9120 %uint_3
       %9130 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9129
       %9131 = OpLoad %uint %9130
       %9132 = OpCompositeConstruct %v4uint %9122 %9125 %9128 %9131
       %9133 = OpBitcast %v4float %9132
       %9134 = OpCompositeInsert %mat4v4float %9133 %9118 1
       %9135 = OpIAdd %uint %9086 %uint_160
       %9136 = OpShiftRightLogical %uint %9135 %uint_2
       %9137 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9136
       %9138 = OpLoad %uint %9137
       %9139 = OpIAdd %uint %9136 %uint_1
       %9140 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9139
       %9141 = OpLoad %uint %9140
       %9142 = OpIAdd %uint %9136 %uint_2
       %9143 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9142
       %9144 = OpLoad %uint %9143
       %9145 = OpIAdd %uint %9136 %uint_3
       %9146 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9145
       %9147 = OpLoad %uint %9146
       %9148 = OpCompositeConstruct %v4uint %9138 %9141 %9144 %9147
       %9149 = OpBitcast %v4float %9148
       %9150 = OpCompositeInsert %mat4v4float %9149 %9134 2
       %9151 = OpIAdd %uint %9086 %uint_176
       %9152 = OpShiftRightLogical %uint %9151 %uint_2
       %9153 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9152
       %9154 = OpLoad %uint %9153
       %9155 = OpIAdd %uint %9152 %uint_1
       %9156 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9155
       %9157 = OpLoad %uint %9156
       %9158 = OpIAdd %uint %9152 %uint_2
       %9159 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9158
       %9160 = OpLoad %uint %9159
       %9161 = OpIAdd %uint %9152 %uint_3
       %9162 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9161
       %9163 = OpLoad %uint %9162
       %9164 = OpCompositeConstruct %v4uint %9154 %9157 %9160 %9163
       %9165 = OpBitcast %v4float %9164
       %9166 = OpCompositeInsert %mat4v4float %9165 %9150 3
               OpBranch %9056
       %9056 = OpLabel
       %9167 = OpPhi %mat4v4float %8925 %9050 %9102 %9058
       %9168 = OpPhi %int %8900 %9050 %9084 %9058
       %9169 = OpPhi %mat4v4float %8989 %9050 %9166 %9058
       %9170 = OpCompositeExtract %float %9054 0
       %9171 = OpCompositeExtract %float %9054 1
       %9172 = OpCompositeExtract %float %9054 2
       %9173 = OpCompositeConstruct %v4float %9170 %9171 %9172 %float_1
       %9174 = OpMatrixTimesVector %v4float %9169 %9173
       %9175 = OpCompositeExtract %float %9174 3
       %9176 = OpCompositeConstruct %v3float %9175 %9175 %9175
       %9177 = OpVectorShuffle %v3float %9174 %9174 0 1 2
       %9178 = OpFDiv %v3float %9177 %9176
       %9179 = OpVectorShuffle %v2float %9178 %459 0 1
               OpSelectionMerge %9180 None
               OpSwitch %uint_0 %9181
       %9181 = OpLabel
       %9182 = OpBitcast %uint %9168
       %9183 = OpVectorTimesScalar %v2float %9179 %float_128
       %9184 = OpConvertFToU %v2uint %9183
               OpSelectionMerge %9185 None
               OpSwitch %uint_0 %9186
       %9186 = OpLabel
       %9187 = OpBitcast %int %9182
       %9188 = OpBitcast %uint %9187
       %9189 = OpULessThan %bool %9188 %uint_8192
               OpSelectionMerge %9190 None
               OpBranchConditional %9189 %9191 %9190
       %9191 = OpLabel
               OpBranch %9185
       %9190 = OpLabel
       %9192 = OpISub %uint %9182 %uint_8192
       %9193 = OpIMul %uint %9192 %uint_21845
       %9194 = OpIAdd %uint %uint_8192 %9193
       %9195 = OpCompositeExtract %uint %9184 0
       %9196 = OpCompositeExtract %uint %9184 1
       %9197 = OpShiftLeftLogical %uint %9196 %uint_7
       %9198 = OpIAdd %uint %9195 %9197
       %9199 = OpIAdd %uint %9194 %9198
               OpBranch %9185
       %9185 = OpLabel
       %9200 = OpPhi %uint %9182 %9191 %9199 %9190
       %9201 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9200
       %9202 = OpLoad %uint %9201
       %9203 = OpBitwiseAnd %uint %9202 %uint_1023
       %9204 = OpShiftRightLogical %uint %9202 %uint_10
       %9205 = OpBitwiseAnd %uint %9204 %uint_1023
       %9206 = OpCompositeConstruct %v2uint %9203 %9205
       %9207 = OpShiftRightLogical %uint %9202 %uint_20
       %9208 = OpBitwiseAnd %uint %9207 %uint_63
       %9209 = OpBitwiseAnd %uint %9202 %uint_134217728
       %9210 = OpINotEqual %bool %9209 %uint_0
       %9211 = OpSelect %uint %9189 %uint_7 %9208
       %9212 = OpBitwiseAnd %uint %9211 %uint_31
       %9213 = OpShiftRightLogical %uint %uint_16384 %9212
       %9214 = OpConvertUToF %float %9213
       %9215 = OpVectorTimesScalar %v2float %9179 %9214
       %9216 = OpConvertFToU %v2uint %9215
       %9217 = OpIMul %v2uint %9206 %341
       %9218 = OpBitwiseAnd %v2uint %9216 %342
       %9219 = OpIAdd %v2uint %9217 %9218
               OpSelectionMerge %9220 None
               OpBranchConditional %9210 %9221 %9220
       %9221 = OpLabel
       %9222 = OpCompositeExtract %uint %9219 0
       %9223 = OpCompositeExtract %uint %9219 1
       %9224 = OpCompositeConstruct %v4uint %9222 %9223 %uint_0 %uint_0
       %9225 = OpBitcast %v4int %9224
       %9226 = OpVectorShuffle %v3int %9225 %9225 0 1 2
       %9227 = OpCompositeExtract %int %9225 3
       %9228 = OpLoad %type_2d_image_array_0 %VirtualShadowMap_PhysicalPagePool
       %9229 = OpImageFetch %v4uint %9228 %9226 Lod %9227
       %9230 = OpCompositeExtract %uint %9229 0
       %9231 = OpBitcast %float %9230
               OpBranch %9180
       %9220 = OpLabel
               OpBranch %9180
       %9180 = OpLabel
       %9232 = OpPhi %float %9231 %9221 %float_0 %9220
       %9233 = OpPhi %bool %true %9221 %false %9220
               OpSelectionMerge %9234 None
               OpBranchConditional %9233 %9235 %9234
       %9235 = OpLabel
       %9236 = OpFNegate %float %8907
       %9237 = OpCompositeExtract %float %9167 2 2
       %9238 = OpFMul %float %9236 %9237
       %9239 = OpFDiv %float %9238 %9175
       %9240 = OpFSub %float %9232 %9239
       %9241 = OpCompositeExtract %float %9178 2
       %9242 = OpFOrdGreaterThan %bool %9240 %9241
       %9243 = OpSelect %float %9242 %float_0 %float_1
               OpBranch %8905
       %9234 = OpLabel
               OpBranch %9048
       %9049 = OpLabel
       %9244 = OpFSub %v3float %593 %9045
       %9245 = OpFSub %v3float %643 %9046
       %9246 = OpVectorTimesScalar %v3float %9244 %float_2097152
       %9247 = OpFAdd %v3float %9246 %9245
       %9248 = OpExtInst %float %1 Length %9247
       %9249 = OpExtInst %float %1 Log2 %9248
       %9250 = OpFAdd %float %9249 %9034
       %9251 = OpExtInst %float %1 Floor %9250
       %9252 = OpConvertFToS %int %9251
       %9253 = OpISub %int %9252 %9039
       %9254 = OpExtInst %int %1 SMax %int_0 %9253
       %9255 = OpSLessThan %bool %9254 %9044
               OpSelectionMerge %9256 None
               OpBranchConditional %9255 %9257 %9256
       %9257 = OpLabel
       %9258 = OpIAdd %int %8900 %9254
       %9259 = OpBitcast %uint %9258
       %9260 = OpIMul %uint %9259 %uint_336
       %9261 = OpIAdd %uint %9260 %uint_96
       %9262 = OpShiftRightLogical %uint %9261 %uint_2
       %9263 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9262
       %9264 = OpLoad %uint %9263
       %9265 = OpIAdd %uint %9262 %uint_1
       %9266 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9265
       %9267 = OpLoad %uint %9266
       %9268 = OpIAdd %uint %9262 %uint_2
       %9269 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9268
       %9270 = OpLoad %uint %9269
       %9271 = OpIAdd %uint %9262 %uint_3
       %9272 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9271
       %9273 = OpLoad %uint %9272
       %9274 = OpCompositeConstruct %v4uint %9264 %9267 %9270 %9273
       %9275 = OpBitcast %v4float %9274
       %9276 = OpIAdd %uint %9260 %uint_112
       %9277 = OpShiftRightLogical %uint %9276 %uint_2
       %9278 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9277
       %9279 = OpIAdd %uint %9277 %uint_1
       %9280 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9279
       %9281 = OpIAdd %uint %9277 %uint_2
       %9282 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9281
       %9283 = OpIAdd %uint %9277 %uint_3
       %9284 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9283
       %9285 = OpIAdd %uint %9260 %uint_128
       %9286 = OpShiftRightLogical %uint %9285 %uint_2
       %9287 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9286
       %9288 = OpLoad %uint %9287
       %9289 = OpIAdd %uint %9286 %uint_1
       %9290 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9289
       %9291 = OpLoad %uint %9290
       %9292 = OpIAdd %uint %9286 %uint_2
       %9293 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9292
       %9294 = OpLoad %uint %9293
       %9295 = OpIAdd %uint %9286 %uint_3
       %9296 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9295
       %9297 = OpLoad %uint %9296
       %9298 = OpCompositeConstruct %v4uint %9288 %9291 %9294 %9297
       %9299 = OpBitcast %v4float %9298
       %9300 = OpCompositeInsert %mat4v4float %9299 %541 0
       %9301 = OpIAdd %uint %9260 %uint_144
       %9302 = OpShiftRightLogical %uint %9301 %uint_2
       %9303 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9302
       %9304 = OpLoad %uint %9303
       %9305 = OpIAdd %uint %9302 %uint_1
       %9306 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9305
       %9307 = OpLoad %uint %9306
       %9308 = OpIAdd %uint %9302 %uint_2
       %9309 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9308
       %9310 = OpLoad %uint %9309
       %9311 = OpIAdd %uint %9302 %uint_3
       %9312 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9311
       %9313 = OpLoad %uint %9312
       %9314 = OpCompositeConstruct %v4uint %9304 %9307 %9310 %9313
       %9315 = OpBitcast %v4float %9314
       %9316 = OpCompositeInsert %mat4v4float %9315 %9300 1
       %9317 = OpIAdd %uint %9260 %uint_160
       %9318 = OpShiftRightLogical %uint %9317 %uint_2
       %9319 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9318
       %9320 = OpLoad %uint %9319
       %9321 = OpIAdd %uint %9318 %uint_1
       %9322 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9321
       %9323 = OpLoad %uint %9322
       %9324 = OpIAdd %uint %9318 %uint_2
       %9325 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9324
       %9326 = OpLoad %uint %9325
       %9327 = OpIAdd %uint %9318 %uint_3
       %9328 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9327
       %9329 = OpLoad %uint %9328
       %9330 = OpCompositeConstruct %v4uint %9320 %9323 %9326 %9329
       %9331 = OpBitcast %v4float %9330
       %9332 = OpCompositeInsert %mat4v4float %9331 %9316 2
       %9333 = OpIAdd %uint %9260 %uint_176
       %9334 = OpShiftRightLogical %uint %9333 %uint_2
       %9335 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9334
       %9336 = OpLoad %uint %9335
       %9337 = OpIAdd %uint %9334 %uint_1
       %9338 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9337
       %9339 = OpLoad %uint %9338
       %9340 = OpIAdd %uint %9334 %uint_2
       %9341 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9340
       %9342 = OpLoad %uint %9341
       %9343 = OpIAdd %uint %9334 %uint_3
       %9344 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9343
       %9345 = OpLoad %uint %9344
       %9346 = OpCompositeConstruct %v4uint %9336 %9339 %9342 %9345
       %9347 = OpBitcast %v4float %9346
       %9348 = OpCompositeInsert %mat4v4float %9347 %9332 3
       %9349 = OpIAdd %uint %9260 %uint_256
       %9350 = OpShiftRightLogical %uint %9349 %uint_2
       %9351 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9350
       %9352 = OpLoad %uint %9351
       %9353 = OpIAdd %uint %9350 %uint_1
       %9354 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9353
       %9355 = OpLoad %uint %9354
       %9356 = OpIAdd %uint %9350 %uint_2
       %9357 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9356
       %9358 = OpLoad %uint %9357
       %9359 = OpCompositeConstruct %v3uint %9352 %9355 %9358
       %9360 = OpBitcast %v3float %9359
       %9361 = OpIAdd %uint %9260 %uint_272
       %9362 = OpShiftRightLogical %uint %9361 %uint_2
       %9363 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9362
       %9364 = OpLoad %uint %9363
       %9365 = OpIAdd %uint %9362 %uint_1
       %9366 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9365
       %9367 = OpLoad %uint %9366
       %9368 = OpIAdd %uint %9362 %uint_2
       %9369 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9368
       %9370 = OpLoad %uint %9369
       %9371 = OpCompositeConstruct %v3uint %9364 %9367 %9370
       %9372 = OpBitcast %v3float %9371
       %9373 = OpFAdd %v3float %593 %9360
       %9374 = OpFAdd %v3float %643 %9372
       %9375 = OpVectorTimesScalar %v3float %9373 %float_2097152
       %9376 = OpFAdd %v3float %9375 %9374
       %9377 = OpCompositeExtract %float %9376 0
       %9378 = OpCompositeExtract %float %9376 1
       %9379 = OpCompositeExtract %float %9376 2
       %9380 = OpCompositeConstruct %v4float %9377 %9378 %9379 %float_1
       %9381 = OpMatrixTimesVector %v4float %9348 %9380
       %9382 = OpVectorShuffle %v2float %9381 %9381 0 1
       %9383 = OpVectorTimesScalar %v2float %9382 %float_128
       %9384 = OpConvertFToU %v2uint %9383
               OpSelectionMerge %9385 None
               OpSwitch %uint_0 %9386
       %9386 = OpLabel
       %9387 = OpBitcast %int %9259
       %9388 = OpBitcast %uint %9387
       %9389 = OpULessThan %bool %9388 %uint_8192
               OpSelectionMerge %9390 None
               OpBranchConditional %9389 %9391 %9390
       %9391 = OpLabel
               OpBranch %9385
       %9390 = OpLabel
       %9392 = OpISub %uint %9259 %uint_8192
       %9393 = OpIMul %uint %9392 %uint_21845
       %9394 = OpIAdd %uint %uint_8192 %9393
       %9395 = OpCompositeExtract %uint %9384 0
       %9396 = OpCompositeExtract %uint %9384 1
       %9397 = OpShiftLeftLogical %uint %9396 %uint_7
       %9398 = OpIAdd %uint %9395 %9397
       %9399 = OpIAdd %uint %9394 %9398
               OpBranch %9385
       %9385 = OpLabel
       %9400 = OpPhi %uint %9259 %9391 %9399 %9390
       %9401 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9400
       %9402 = OpLoad %uint %9401
       %9403 = OpBitwiseAnd %uint %9402 %uint_1023
       %9404 = OpShiftRightLogical %uint %9402 %uint_10
       %9405 = OpBitwiseAnd %uint %9404 %uint_1023
       %9406 = OpCompositeConstruct %v2uint %9403 %9405
       %9407 = OpShiftRightLogical %uint %9402 %uint_20
       %9408 = OpBitwiseAnd %uint %9407 %uint_63
       %9409 = OpBitwiseAnd %uint %9402 %uint_134217728
       %9410 = OpINotEqual %bool %9409 %uint_0
       %9411 = OpIEqual %bool %9408 %uint_0
       %9412 = OpLogicalAnd %bool %9410 %9411
               OpSelectionMerge %9413 None
               OpBranchConditional %9410 %9414 %9413
       %9414 = OpLabel
       %9415 = OpIAdd %uint %9259 %9408
       %9416 = OpBitcast %int %9415
       %9417 = OpVectorTimesScalar %v2float %9382 %float_16384
       %9418 = OpConvertFToU %v2uint %9417
       %9419 = OpUGreaterThan %bool %9408 %uint_0
               OpSelectionMerge %9420 None
               OpBranchConditional %9419 %9421 %9420
       %9421 = OpLabel
       %9422 = OpIAdd %uint %9260 %uint_304
       %9423 = OpShiftRightLogical %uint %9422 %uint_2
       %9424 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9423
       %9425 = OpLoad %uint %9424
       %9426 = OpIAdd %uint %9423 %uint_1
       %9427 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9426
       %9428 = OpLoad %uint %9427
       %9429 = OpCompositeConstruct %v2uint %9425 %9428
       %9430 = OpBitcast %v2int %9429
       %9431 = OpBitcast %uint %9416
       %9432 = OpIMul %uint %9431 %uint_336
       %9433 = OpIAdd %uint %9432 %uint_304
       %9434 = OpShiftRightLogical %uint %9433 %uint_2
       %9435 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9434
       %9436 = OpLoad %uint %9435
       %9437 = OpIAdd %uint %9434 %uint_1
       %9438 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9437
       %9439 = OpLoad %uint %9438
       %9440 = OpCompositeConstruct %v2uint %9436 %9439
       %9441 = OpBitcast %v2int %9440
       %9442 = OpIMul %v2int %371 %9430
       %9443 = OpIMul %v2int %371 %9441
       %9444 = OpBitcast %v2uint %9442
       %9445 = OpISub %v2uint %9384 %9444
       %9446 = OpBitcast %int %9408
       %9447 = OpCompositeConstruct %v2int %9446 %9446
       %9448 = OpBitwiseAnd %v2int %9447 %372
       %9449 = OpShiftLeftLogical %v2int %9443 %9448
       %9450 = OpBitcast %v2uint %9449
       %9451 = OpIAdd %v2uint %9445 %9450
       %9452 = OpCompositeConstruct %v2uint %9408 %9408
       %9453 = OpBitwiseAnd %v2uint %9452 %308
       %9454 = OpShiftRightLogical %v2uint %9451 %9453
       %9455 = OpIMul %v2uint %9454 %341
       %9456 = OpIAdd %v2uint %9455 %342
       %9457 = OpLoad %uint %9278
       %9458 = OpLoad %uint %9280
       %9459 = OpLoad %uint %9282
       %9460 = OpLoad %uint %9284
       %9461 = OpCompositeConstruct %v4uint %9457 %9458 %9459 %9460
       %9462 = OpBitcast %v4float %9461
       %9463 = OpLoad %uint %9424
       %9464 = OpLoad %uint %9427
       %9465 = OpCompositeConstruct %v2uint %9463 %9464
       %9466 = OpBitcast %v2int %9465
       %9467 = OpIAdd %int %9258 %9446
       %9468 = OpBitcast %uint %9467
       %9469 = OpIMul %uint %9468 %uint_336
       %9470 = OpIAdd %uint %9469 %uint_112
       %9471 = OpShiftRightLogical %uint %9470 %uint_2
       %9472 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9471
       %9473 = OpLoad %uint %9472
       %9474 = OpIAdd %uint %9471 %uint_1
       %9475 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9474
       %9476 = OpLoad %uint %9475
       %9477 = OpIAdd %uint %9471 %uint_2
       %9478 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9477
       %9479 = OpLoad %uint %9478
       %9480 = OpIAdd %uint %9471 %uint_3
       %9481 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9480
       %9482 = OpLoad %uint %9481
       %9483 = OpCompositeConstruct %v4uint %9473 %9476 %9479 %9482
       %9484 = OpBitcast %v4float %9483
       %9485 = OpIAdd %uint %9469 %uint_304
       %9486 = OpShiftRightLogical %uint %9485 %uint_2
       %9487 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9486
       %9488 = OpLoad %uint %9487
       %9489 = OpIAdd %uint %9486 %uint_1
       %9490 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9489
       %9491 = OpLoad %uint %9490
       %9492 = OpCompositeConstruct %v2uint %9488 %9491
       %9493 = OpBitcast %v2int %9492
       %9494 = OpConvertSToF %v2float %9466
       %9495 = OpConvertSToF %v2float %9493
       %9496 = OpSGreaterThanEqual %bool %9446 %int_0
       %9497 = OpBitcast %uint %9446
       %9498 = OpBitwiseAnd %uint %9497 %uint_31
       %9499 = OpShiftLeftLogical %uint %uint_1 %9498
       %9500 = OpConvertUToF %float %9499
       %9501 = OpFDiv %float %float_1 %9500
       %9502 = OpSNegate %int %9446
       %9503 = OpBitcast %uint %9502
       %9504 = OpBitwiseAnd %uint %9503 %uint_31
       %9505 = OpShiftLeftLogical %uint %uint_1 %9504
       %9506 = OpConvertUToF %float %9505
       %9507 = OpSelect %float %9496 %9501 %9506
       %9508 = OpVectorTimesScalar %v2float %9494 %9507
       %9509 = OpFSub %v2float %9495 %9508
       %9510 = OpVectorTimesScalar %v2float %9509 %float_0_25
       %9511 = OpCompositeExtract %float %9462 2
       %9512 = OpCompositeExtract %float %9484 2
       %9513 = OpFNegate %float %9507
       %9514 = OpExtInst %float %1 Fma %9513 %9511 %9512
       %9515 = OpVectorTimesScalar %v2float %9382 %9507
       %9516 = OpVectorShuffle %v2float %9510 %460 0 1
       %9517 = OpFAdd %v2float %9515 %9516
       %9518 = OpVectorTimesScalar %v2float %9517 %float_16384
       %9519 = OpConvertFToU %v2uint %9518
       %9520 = OpExtInst %v2uint %1 UClamp %9519 %9455 %9456
               OpSelectionMerge %9521 None
               OpSwitch %uint_0 %9522
       %9522 = OpLabel
       %9523 = OpBitcast %int %9431
       %9524 = OpBitcast %uint %9523
       %9525 = OpULessThan %bool %9524 %uint_8192
               OpSelectionMerge %9526 None
               OpBranchConditional %9525 %9527 %9526
       %9527 = OpLabel
               OpBranch %9521
       %9526 = OpLabel
       %9528 = OpISub %uint %9431 %uint_8192
       %9529 = OpIMul %uint %9528 %uint_21845
       %9530 = OpIAdd %uint %uint_8192 %9529
       %9531 = OpCompositeExtract %uint %9454 0
       %9532 = OpCompositeExtract %uint %9454 1
       %9533 = OpShiftLeftLogical %uint %9532 %uint_7
       %9534 = OpIAdd %uint %9531 %9533
       %9535 = OpIAdd %uint %9530 %9534
               OpBranch %9521
       %9521 = OpLabel
       %9536 = OpPhi %uint %9431 %9527 %9535 %9526
       %9537 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9536
       %9538 = OpLoad %uint %9537
       %9539 = OpBitwiseAnd %uint %9538 %uint_1023
       %9540 = OpShiftRightLogical %uint %9538 %uint_10
       %9541 = OpBitwiseAnd %uint %9540 %uint_1023
       %9542 = OpCompositeConstruct %v2uint %9539 %9541
       %9543 = OpShiftRightLogical %uint %9538 %uint_20
       %9544 = OpBitwiseAnd %uint %9543 %uint_63
       %9545 = OpBitwiseAnd %uint %9538 %uint_134217728
       %9546 = OpINotEqual %bool %9545 %uint_0
       %9547 = OpIEqual %bool %9544 %uint_0
       %9548 = OpLogicalAnd %bool %9546 %9547
               OpBranch %9420
       %9420 = OpLabel
       %9549 = OpPhi %float %float_1 %9414 %9507 %9521
       %9550 = OpPhi %float %float_0 %9414 %9514 %9521
       %9551 = OpPhi %v2uint %9418 %9414 %9520 %9521
       %9552 = OpPhi %v2uint %9406 %9414 %9542 %9521
       %9553 = OpPhi %bool %9412 %9414 %9548 %9521
               OpSelectionMerge %9554 None
               OpBranchConditional %9553 %9555 %9554
       %9555 = OpLabel
       %9556 = OpIMul %v2uint %9552 %341
       %9557 = OpBitwiseAnd %v2uint %9551 %342
       %9558 = OpIAdd %v2uint %9556 %9557
       %9559 = OpCompositeExtract %uint %9558 0
       %9560 = OpCompositeExtract %uint %9558 1
       %9561 = OpCompositeConstruct %v4uint %9559 %9560 %uint_0 %uint_0
       %9562 = OpBitcast %v4int %9561
       %9563 = OpVectorShuffle %v3int %9562 %9562 0 1 2
       %9564 = OpCompositeExtract %int %9562 3
       %9565 = OpLoad %type_2d_image_array_0 %VirtualShadowMap_PhysicalPagePool
       %9566 = OpImageFetch %v4uint %9565 %9563 Lod %9564
       %9567 = OpCompositeExtract %uint %9566 0
       %9568 = OpBitcast %float %9567
       %9569 = OpFSub %float %9568 %9550
       %9570 = OpFDiv %float %9569 %9549
               OpBranch %9554
       %9554 = OpLabel
       %9571 = OpPhi %float %float_0 %9420 %9570 %9555
       %9572 = OpSelect %bool %9553 %true %false
               OpBranch %9413
       %9413 = OpLabel
       %9573 = OpPhi %float %float_0 %9385 %9571 %9554
       %9574 = OpPhi %bool %false %9385 %9572 %9554
               OpSelectionMerge %9575 None
               OpBranchConditional %9574 %9576 %9575
       %9576 = OpLabel
       %9577 = OpCompositeExtract %float %9275 2
       %9578 = OpExtInst %float %1 Fma %8907 %9577 %9573
       %9579 = OpCompositeExtract %float %9381 2
       %9580 = OpFOrdGreaterThan %bool %9578 %9579
       %9581 = OpSelect %float %9580 %float_0 %float_1
               OpBranch %8905
       %9575 = OpLabel
               OpBranch %9256
       %9256 = OpLabel
               OpBranch %9048
       %9048 = OpLabel
               OpBranch %8905
       %8905 = OpLabel
       %9582 = OpPhi %float %9243 %9235 %9581 %9576 %float_1 %9048
       %9583 = OpFMul %float %8897 %9582
               OpBranch %8903
       %8903 = OpLabel
       %9584 = OpPhi %float %8897 %8822 %9583 %8905
       %9585 = OpDot %float %8817 %121
       %9586 = OpDot %float %8818 %8817
       %9587 = OpExtInst %float %1 FMix %float_1 %9586 %9585
       %9588 = OpCompositeExtract %float %8795 0
       %9589 = OpCompositeExtract %float %8795 1
       %9590 = OpExtInst %float %1 Fma %646 %9588 %9589
       %9591 = OpExtInst %float %1 FClamp %9590 %float_0 %float_1
       %9592 = OpFMul %float %9591 %9591
       %9593 = OpExtInst %float %1 FMix %9584 %9587 %9592
       %9594 = OpExtInst %float %1 NMin %9593 %float_1
       %9595 = OpFAdd %float %9593 %9594
       %9596 = OpFOrdGreaterThan %bool %9595 %float_0
               OpSelectionMerge %9597 DontFlatten
               OpBranchConditional %9596 %9598 %9597
       %9598 = OpLabel
       %9599 = OpExtInst %float %1 NMax %8425 %8423
       %9600 = OpDot %float %8799 %8799
       %9601 = OpFAdd %float %9600 %float_1
       %9602 = OpFDiv %float %float_1 %9601
       %9603 = OpExtInst %float %1 InverseSqrt %9600
       %9604 = OpVectorTimesScalar %v3float %8799 %9603
       %9605 = OpDot %float %8448 %9604
       %9606 = OpFOrdGreaterThan %bool %8801 %float_0
               OpSelectionMerge %9607 None
               OpBranchConditional %9606 %9608 %9607
       %9608 = OpLabel
       %9609 = OpFMul %float %8801 %8801
       %9610 = OpFMul %float %9609 %9602
       %9611 = OpExtInst %float %1 FClamp %9610 %float_0 %float_1
       %9612 = OpExtInst %float %1 Sqrt %9611
       %9613 = OpFOrdLessThan %bool %9605 %9612
               OpSelectionMerge %9614 None
               OpBranchConditional %9613 %9615 %9614
       %9615 = OpLabel
       %9616 = OpFNegate %float %9612
       %9617 = OpExtInst %float %1 NMax %9605 %9616
       %9618 = OpFAdd %float %9612 %9617
       %9619 = OpFMul %float %9618 %9618
       %9620 = OpFMul %float %float_4 %9612
       %9621 = OpFDiv %float %9619 %9620
               OpBranch %9614
       %9614 = OpLabel
       %9622 = OpPhi %float %9605 %9608 %9621 %9615
               OpBranch %9607
       %9607 = OpLabel
       %9623 = OpPhi %float %9605 %9598 %9622 %9614
       %9624 = OpExtInst %float %1 FClamp %9623 %float_0 %float_1
       %9625 = OpExtInst %float %1 NMax %9599 %8423
       %9626 = OpFMul %float %8801 %9603
       %9627 = OpFNegate %float %9625
       %9628 = OpExtInst %float %1 Fma %9627 %9625 %float_1
       %9629 = OpFMul %float %9626 %9628
       %9630 = OpExtInst %float %1 FClamp %9629 %float_0 %float_1
       %9631 = OpExtInst %float %1 NMax %461 %8801
       %9632 = OpFNegate %float %9631
       %9633 = OpExtInst %float %1 Fma %9632 %float_0_0500000007 %float_1
       %9634 = OpExtInst %float %1 FClamp %9633 %float_0 %float_1
       %9635 = OpBitcast %uint %9634
       %9636 = OpShiftLeftLogical %uint %9635 %uint_1
       %9637 = OpBitwiseOr %uint %uint_0 %9636
       %9638 = OpDot %float %8448 %660
       %9639 = OpDot %float %660 %9604
       %9640 = OpExtInst %float %1 Fma %float_2 %9639 %float_2
       %9641 = OpExtInst %float %1 InverseSqrt %9640
       %9642 = OpFAdd %float %9605 %9638
       %9643 = OpFMul %float %9642 %9641
       %9644 = OpExtInst %float %1 FClamp %9643 %float_0 %float_1
       %9645 = OpExtInst %float %1 Fma %9641 %9639 %9641
       %9646 = OpExtInst %float %1 FClamp %9645 %float_0 %float_1
       %9647 = OpFOrdGreaterThan %bool %9630 %float_0
               OpSelectionMerge %9648 None
               OpBranchConditional %9647 %9649 %9648
       %9649 = OpLabel
       %9650 = OpFNegate %float %9630
       %9651 = OpExtInst %float %1 Fma %9650 %9630 %float_1
       %9652 = OpExtInst %float %1 Sqrt %9651
       %9653 = OpFMul %float %float_2 %9605
       %9654 = OpFNegate %float %9639
       %9655 = OpExtInst %float %1 Fma %9653 %9638 %9654
       %9656 = OpFOrdGreaterThanEqual %bool %9655 %9652
               OpSelectionMerge %9657 None
               OpBranchConditional %9656 %9658 %9659
       %9659 = OpLabel
       %9660 = OpFNegate %float %9655
       %9661 = OpExtInst %float %1 Fma %9660 %9655 %float_1
       %9662 = OpExtInst %float %1 InverseSqrt %9661
       %9663 = OpFMul %float %9630 %9662
       %9664 = OpExtInst %float %1 Fma %9660 %9605 %9638
       %9665 = OpFMul %float %9663 %9664
       %9666 = OpFMul %float %float_2 %9638
       %9667 = OpExtInst %float %1 Fma %9666 %9638 %float_n1
       %9668 = OpExtInst %float %1 Fma %9660 %9639 %9667
       %9669 = OpFMul %float %9663 %9668
       %9670 = OpFNegate %float %9605
       %9671 = OpExtInst %float %1 Fma %9670 %9605 %float_1
       %9672 = OpFNegate %float %9638
       %9673 = OpExtInst %float %1 Fma %9672 %9638 %9671
       %9674 = OpExtInst %float %1 Fma %9654 %9639 %9673
       %9675 = OpFMul %float %9653 %9638
       %9676 = OpExtInst %float %1 Fma %9675 %9639 %9674
       %9677 = OpExtInst %float %1 FClamp %9676 %float_0 %float_1
       %9678 = OpExtInst %float %1 Sqrt %9677
       %9679 = OpFMul %float %9663 %9678
       %9680 = OpFMul %float %9679 %float_2
       %9681 = OpFMul %float %9680 %9638
       %9682 = OpExtInst %float %1 Fma %9605 %9652 %9638
       %9683 = OpExtInst %float %1 Fma %9663 %9664 %9682
       %9684 = OpExtInst %float %1 Fma %9639 %9652 %float_1
       %9685 = OpExtInst %float %1 Fma %9663 %9668 %9684
       %9686 = OpFMul %float %9679 %9685
       %9687 = OpFMul %float %9683 %9685
       %9688 = OpFMul %float %9681 %9683
       %9689 = OpFMul %float %float_0_25 %9681
       %9690 = OpFMul %float %9689 %9683
       %9691 = OpExtInst %float %1 Fma %float_n0_5 %9686 %9690
       %9692 = OpFMul %float %9687 %9691
       %9693 = OpFMul %float %9686 %float_n2
       %9694 = OpExtInst %float %1 Fma %9681 %9683 %9693
       %9695 = OpFMul %float %9688 %9694
       %9696 = OpExtInst %float %1 Fma %9686 %9686 %9695
       %9697 = OpFMul %float %9685 %9685
       %9698 = OpExtInst %float %1 Fma %9639 %9652 %9685
       %9699 = OpExtInst %float %1 Fma %float_n0_5 %9698 %float_n0_5
       %9700 = OpFMul %float %9687 %9699
       %9701 = OpExtInst %float %1 Fma %9682 %9697 %9700
       %9702 = OpExtInst %float %1 Fma %9683 %9701 %9696
       %9703 = OpFMul %float %float_2 %9692
       %9704 = OpFMul %float %9692 %9692
       %9705 = OpExtInst %float %1 Fma %9702 %9702 %9704
       %9706 = OpFDiv %float %9703 %9705
       %9707 = OpFMul %float %9706 %9702
       %9708 = OpFNegate %float %9706
       %9709 = OpExtInst %float %1 Fma %9708 %9692 %float_1
       %9710 = OpFMul %float %9707 %9679
       %9711 = OpExtInst %float %1 Fma %9709 %9665 %9710
       %9712 = OpFMul %float %9707 %9681
       %9713 = OpExtInst %float %1 Fma %9709 %9669 %9712
       %9714 = OpExtInst %float %1 Fma %9605 %9652 %9711
       %9715 = OpExtInst %float %1 Fma %9639 %9652 %9713
       %9716 = OpExtInst %float %1 Fma %float_2 %9715 %float_2
       %9717 = OpExtInst %float %1 InverseSqrt %9716
       %9718 = OpFAdd %float %9714 %9638
       %9719 = OpFMul %float %9718 %9717
       %9720 = OpExtInst %float %1 FClamp %9719 %float_0 %float_1
       %9721 = OpExtInst %float %1 Fma %9717 %9715 %9717
       %9722 = OpExtInst %float %1 FClamp %9721 %float_0 %float_1
               OpBranch %9657
       %9658 = OpLabel
       %9723 = OpExtInst %float %1 FAbs %9638
               OpBranch %9657
       %9657 = OpLabel
       %9724 = OpPhi %float %9720 %9659 %float_1 %9658
       %9725 = OpPhi %float %9722 %9659 %9723 %9658
               OpBranch %9648
       %9648 = OpLabel
       %9726 = OpPhi %float %9644 %9607 %9724 %9657
       %9727 = OpPhi %float %9646 %9607 %9725 %9657
       %9728 = OpExtInst %float %1 FAbs %9638
       %9729 = OpFAdd %float %9728 %float_9_99999975en06
       %9730 = OpExtInst %float %1 FClamp %9729 %float_0 %float_1
       %9731 = OpFMul %float %9599 %9599
       %9732 = OpFMul %float %9731 %9731
       %9733 = OpShiftRightLogical %uint %9637 %uint_1
       %9734 = OpBitcast %float %9733
       %9735 = OpExtInst %float %1 FClamp %9638 %float_0 %float_1
       %9736 = OpExtInst %float %1 FClamp %9624 %float_0 %float_1
       %9737 = OpExtInst %float %1 FClamp %9646 %float_0 %float_1
       %9738 = OpExtInst %float %1 FClamp %9644 %float_0 %float_1
       %9739 = OpBitcast %int %9732
       %9740 = OpISub %int %int_2129859010 %9739
       %9741 = OpBitcast %float %9740
       %9742 = OpExtInst %float %1 Fma %float_2 %9741 %float_n1
       %9743 = OpExtInst %float %1 Log2 %9742
       %9744 = OpFMul %float %float_0_055555556 %9743
       %9745 = OpExtInst %float %1 FClamp %9744 %float_0 %float_1
       %9746 = OpFSub %float %float_1 %9737
       %9747 = OpFMul %float %9746 %9746
       %9748 = OpFMul %float %9747 %9747
       %9749 = OpExtInst %float %1 Fma %9748 %9746 %9737
       %9750 = OpFSub %float %float_1 %9735
       %9751 = OpFMul %float %9750 %9750
       %9752 = OpFMul %float %9751 %9751
       %9753 = OpFMul %float %9752 %9750
       %9754 = OpExtInst %float %1 Fma %float_n0_75 %9753 %float_1
       %9755 = OpFSub %float %float_1 %9736
       %9756 = OpFMul %float %9755 %9755
       %9757 = OpFMul %float %9756 %9756
       %9758 = OpFMul %float %9757 %9755
       %9759 = OpExtInst %float %1 Fma %float_n0_75 %9758 %float_1
       %9760 = OpFMul %float %9754 %9759
       %9761 = OpExtInst %float %1 Fma %float_2_20000005 %9745 %float_n0_5
       %9762 = OpExtInst %float %1 FClamp %9761 %float_0 %float_1
       %9763 = OpExtInst %float %1 FMix %9749 %9760 %9762
       %9764 = OpExtInst %float %1 Fma %float_34_5 %9745 %float_n59
       %9765 = OpExtInst %float %1 Fma %9764 %9745 %float_24_5
       %9766 = OpFMul %float %9765 %9737
       %9767 = OpExtInst %float %1 Fma %float_73_1999969 %9745 %float_n21_2000008
       %9768 = OpExtInst %float %1 NMax %9767 %float_8_89999962
       %9769 = OpFNegate %float %9768
       %9770 = OpBitcast %int %9738
       %9771 = OpShiftRightArithmetic %int %9770 %int_1
       %9772 = OpIAdd %int %int_532487669 %9771
       %9773 = OpBitcast %float %9772
       %9774 = OpFMul %float %9769 %9773
       %9775 = OpExtInst %float %1 Exp2 %9774
       %9776 = OpFMul %float %9766 %9775
       %9777 = OpExtInst %float %1 Fma %9776 %9734 %9763
       %9778 = OpFMul %float %float_0_318309873 %9777
       %9779 = OpVectorTimesScalar %v3float %8714 %9778
       %9780 = OpVectorTimesScalar %v3float %131 %9624
       %9781 = OpFMul %v3float %9779 %9780
       %9782 = OpBitwiseAnd %uint %9637 %uint_1
       %9783 = OpIEqual %bool %9782 %uint_1
               OpSelectionMerge %9784 None
               OpBranchConditional %9783 %9785 %9786
       %9786 = OpLabel
               OpSelectionMerge %9787 None
               OpBranchConditional %9647 %9788 %9787
       %9788 = OpLabel
       %9789 = OpFMul %float %float_0_25 %9630
       %9790 = OpShiftRightArithmetic %int %9739 %int_1
       %9791 = OpIAdd %int %int_532487669 %9790
       %9792 = OpBitcast %float %9791
       %9793 = OpExtInst %float %1 Fma %float_3 %9792 %9630
       %9794 = OpFMul %float %9789 %9793
       %9795 = OpFAdd %float %9727 %float_0_00100000005
       %9796 = OpFDiv %float %9794 %9795
       %9797 = OpExtInst %float %1 Fma %9731 %9731 %9796
       %9798 = OpFDiv %float %9732 %9797
               OpBranch %9787
       %9787 = OpLabel
       %9799 = OpPhi %float %float_1 %9786 %9798 %9788
       %9800 = OpFNegate %float %9726
       %9801 = OpExtInst %float %1 Fma %9726 %9732 %9800
       %9802 = OpExtInst %float %1 Fma %9801 %9726 %float_1
       %9803 = OpFMul %float %float_3_14159274 %9802
       %9804 = OpFMul %float %9803 %9802
       %9805 = OpFDiv %float %9732 %9804
       %9806 = OpFMul %float %9805 %9799
       %9807 = OpExtInst %float %1 Sqrt %9732
       %9808 = OpFSub %float %float_1 %9807
       %9809 = OpExtInst %float %1 Fma %9730 %9808 %9807
       %9810 = OpExtInst %float %1 Fma %9624 %9808 %9807
       %9811 = OpFMul %float %9730 %9810
       %9812 = OpExtInst %float %1 Fma %9624 %9809 %9811
       %9813 = OpFDiv %float %float_0_5 %9812
       %9814 = OpFSub %float %float_1 %9727
       %9815 = OpFMul %float %9814 %9814
       %9816 = OpFMul %float %9815 %9815
       %9817 = OpFMul %float %9816 %9814
       %9818 = OpCompositeExtract %float %8558 1
       %9819 = OpFMul %float %float_50 %9818
       %9820 = OpExtInst %float %1 FClamp %9819 %float_0 %float_1
       %9821 = OpFMul %float %9820 %9817
       %9822 = OpCompositeConstruct %v3float %9821 %9821 %9821
       %9823 = OpFNegate %float %9816
       %9824 = OpExtInst %float %1 Fma %9823 %9814 %float_1
       %9825 = OpVectorTimesScalar %v3float %8558 %9824
       %9826 = OpFAdd %v3float %9822 %9825
       %9827 = OpFMul %float %9806 %9813
       %9828 = OpVectorTimesScalar %v3float %9826 %9827
       %9829 = OpFMul %v3float %9780 %9828
               OpBranch %9784
       %9785 = OpLabel
               OpBranch %9784
       %9784 = OpLabel
       %9830 = OpPhi %v3float %9829 %9787 %106 %9785
       %9831 = OpCompositeExtract %float %8558 1
       %9832 = OpFMul %float %float_50 %9831
       %9833 = OpExtInst %float %1 FClamp %9832 %float_0 %float_1
       %9834 = OpCompositeConstruct %v3float %9833 %9833 %9833
       %9835 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
       %9836 = OpLoad %type_sampler %View_ShadingEnergySampler
       %9837 = OpCompositeConstruct %v2float %9730 %9599
       %9838 = OpSampledImage %type_sampled_image %9835 %9836
       %9839 = OpImageSampleExplicitLod %v4float %9838 %9837 Lod %float_0
       %9840 = OpAccessChain %_ptr_Uniform_uint %View %uint_42
       %9841 = OpLoad %uint %9840
       %9842 = OpINotEqual %bool %9841 %uint_0
       %9843 = OpCompositeConstruct %v3bool %9842 %9842 %9842
       %9844 = OpCompositeExtract %float %9839 0
       %9845 = OpFSub %float %float_1 %9844
       %9846 = OpFDiv %float %9845 %9844
       %9847 = OpVectorTimesScalar %v3float %8558 %9846
       %9848 = OpFAdd %v3float %131 %9847
       %9849 = OpSelect %v3float %9843 %9848 %131
       %9850 = OpVectorTimesScalar %v3float %8558 %9844
       %9851 = OpFSub %v3float %9834 %8558
       %9852 = OpCompositeExtract %float %9839 1
       %9853 = OpVectorTimesScalar %v3float %9851 %9852
       %9854 = OpFAdd %v3float %9850 %9853
       %9855 = OpFMul %v3float %9849 %9854
       %9856 = OpAccessChain %_ptr_Uniform_uint %View %uint_43
       %9857 = OpLoad %uint %9856
       %9858 = OpINotEqual %bool %9857 %uint_0
       %9859 = OpDot %float %9855 %175
       %9860 = OpFSub %float %float_1 %9859
       %9861 = OpSelect %float %9858 %9860 %float_1
       %9862 = OpVectorTimesScalar %v3float %9781 %9861
       %9863 = OpFMul %v3float %9830 %9849
       %9864 = OpVectorTimesScalar %v3float %9863 %float_1
       %9865 = OpVectorTimesScalar %v3float %8797 %9593
       %9866 = OpFMul %v3float %9864 %9865
       %9867 = OpExtInst %v3float %1 Fma %9862 %9865 %106
               OpBranch %9597
       %9597 = OpLabel
       %9868 = OpPhi %v3float %460 %8903 %9867 %9784
       %9869 = OpPhi %v3float %460 %8903 %9866 %9784
       %9870 = OpCompositeExtract %float %9868 0
       %9871 = OpCompositeExtract %float %9868 1
       %9872 = OpCompositeExtract %float %9868 2
       %9873 = OpCompositeConstruct %v4float %9870 %9871 %9872 %float_0
       %9874 = OpCompositeExtract %float %9869 0
       %9875 = OpCompositeExtract %float %9869 1
       %9876 = OpCompositeExtract %float %9869 2
       %9877 = OpCompositeConstruct %v4float %9874 %9875 %9876 %float_0
       %9878 = OpBitwiseAnd %uint %8816 %8789
       %9879 = OpINotEqual %bool %9878 %uint_0
               OpSelectionMerge %9880 Flatten
               OpBranchConditional %9879 %9881 %9880
       %9881 = OpLabel
       %9882 = OpVectorShuffle %v4float %9873 %9873 4 5 6 3
       %9883 = OpVectorShuffle %v4float %9877 %9877 4 5 6 3
               OpSelectionMerge %9884 None
               OpBranchConditional %8758 %9885 %9886
       %9886 = OpLabel
               OpBranch %9884
       %9885 = OpLabel
       %9887 = OpVectorShuffle %v3float %9873 %459 0 1 2
       %9888 = OpVectorShuffle %v3float %9877 %459 0 1 2
       %9889 = OpFAdd %v3float %9887 %9888
               OpBranch %9884
       %9884 = OpLabel
       %9890 = OpPhi %v3float %106 %9886 %9889 %9885
       %9891 = OpCompositeConstruct %v4bool %8758 %8758 %8758 %8758
       %9892 = OpSelect %v4float %9891 %102 %9882
       %9893 = OpSelect %v4float %9891 %102 %9883
               OpBranch %9880
       %9880 = OpLabel
       %9894 = OpPhi %v3float %106 %9597 %9890 %9884
       %9895 = OpPhi %v4float %102 %9597 %9892 %9884
       %9896 = OpPhi %v4float %102 %9597 %9893 %9884
               OpBranch %8803
       %8803 = OpLabel
       %9897 = OpPhi %v4float %8514 %8764 %8818 %9880
       %9898 = OpPhi %v3float %106 %8764 %9894 %9880
       %9899 = OpPhi %float %float_1 %8764 %9593 %9880
       %9900 = OpPhi %v4float %102 %8764 %9895 %9880
       %9901 = OpPhi %v4float %102 %8764 %9896 %9880
       %9902 = OpIMul %uint %8751 %uint_2
       %9903 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid %int_0 %9902
       %9904 = OpLoad %uint %9903
       %9905 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %int_0
       %9906 = OpLoad %uint %9905
       %9907 = OpExtInst %uint %1 UMin %9904 %9906
       %9908 = OpIAdd %uint %9902 %uint_1
       %9909 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid %int_0 %9908
       %9910 = OpLoad %uint %9909
       %9911 = OpExtInst %uint %1 UMin %9907 %9906
               OpBranch %9912
       %9912 = OpLabel
       %9913 = OpPhi %v4float %9900 %8803 %9914 %9915
       %9916 = OpPhi %v4float %9901 %8803 %9917 %9915
       %9918 = OpPhi %uint %uint_0 %8803 %9919 %9915
       %9920 = OpULessThan %bool %9918 %9911
               OpLoopMerge %9921 %9915 DontUnroll
               OpBranchConditional %9920 %9922 %9921
       %9922 = OpLabel
       %9923 = OpIAdd %uint %9910 %9918
       %9924 = OpLoad %type_buffer_image %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit
       %9925 = OpImageFetch %v4uint %9924 %9923 None
       %9926 = OpCompositeExtract %uint %9925 0
       %9927 = OpIMul %uint %9926 %uint_6
       %9928 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9927
       %9929 = OpLoad %v4float %9928
       %9930 = OpIAdd %uint %9927 %uint_1
       %9931 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9930
       %9932 = OpLoad %v4float %9931
       %9933 = OpIAdd %uint %9927 %uint_2
       %9934 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9933
       %9935 = OpLoad %v4float %9934
       %9936 = OpIAdd %uint %9927 %uint_3
       %9937 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9936
       %9938 = OpLoad %v4float %9937
       %9939 = OpIAdd %uint %9927 %uint_4
       %9940 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9939
       %9941 = OpLoad %v4float %9940
       %9942 = OpCompositeExtract %float %9935 3
       %9943 = OpBitcast %uint %9942
       %9944 = OpShiftRightLogical %uint %9943 %uint_16
       %9945 = OpBitwiseAnd %uint %9944 %uint_3
       %9946 = OpVectorShuffle %v3float %9929 %9929 0 1 2
       %9947 = OpCompositeExtract %float %9929 3
       %9948 = OpCompositeExtract %float %9932 1
       %9949 = OpBitcast %uint %9948
       %9950 = OpShiftRightLogical %uint %9949 %uint_0
       %9951 = OpBitwiseAnd %uint %9950 %uint_1023
       %9952 = OpConvertUToF %float %9951
       %9953 = OpShiftRightLogical %uint %9949 %uint_10
       %9954 = OpBitwiseAnd %uint %9953 %uint_1023
       %9955 = OpConvertUToF %float %9954
       %9956 = OpShiftRightLogical %uint %9949 %uint_20
       %9957 = OpBitwiseAnd %uint %9956 %uint_1023
       %9958 = OpConvertUToF %float %9957
       %9959 = OpCompositeConstruct %v3float %9952 %9955 %9958
       %9960 = OpCompositeExtract %float %9932 0
       %9961 = OpVectorTimesScalar %v3float %9959 %9960
       %9962 = OpCompositeExtract %float %9932 3
       %9963 = OpVectorShuffle %v3float %9935 %9935 0 1 2
       %9964 = OpCompositeExtract %float %9938 2
       %9965 = OpBitcast %uint %9964
       %9966 = OpBitwiseAnd %uint %9965 %uint_65535
       %9967 = OpExtInst %v2float %1 UnpackHalf2x16 %9966
       %9968 = OpCompositeExtract %float %9967 0
       %9969 = OpCompositeExtract %float %9938 3
       %9970 = OpBitcast %uint %9969
       %9971 = OpExtInst %v2float %1 UnpackHalf2x16 %9970
       %9972 = OpCompositeExtract %float %9971 0
       %9973 = OpVectorShuffle %v3float %9941 %9941 0 1 2
       %9974 = OpShiftRightLogical %uint %9965 %uint_16
       %9975 = OpExtInst %v2float %1 UnpackHalf2x16 %9974
       %9976 = OpCompositeExtract %float %9975 0
       %9977 = OpFOrdEqual %bool %9962 %float_0
       %9978 = OpCompositeExtract %float %9941 3
       %9979 = OpBitcast %uint %9978
       %9980 = OpBitwiseAnd %uint %9979 %uint_65535
       %9981 = OpExtInst %v2float %1 UnpackHalf2x16 %9980
       %9982 = OpCompositeExtract %float %9981 0
       %9983 = OpIEqual %bool %9945 %uint_2
       %9984 = OpBitwiseAnd %uint %9943 %uint_255
       %9985 = OpINotEqual %bool %9984 %uint_0
       %9986 = OpSelect %uint %9985 %uint_1 %uint_0
       %9987 = OpBitwiseAnd %uint %9943 %uint_1
       %9988 = OpConvertUToF %float %9987
       %9989 = OpBitwiseAnd %uint %9943 %uint_2
       %9990 = OpShiftRightLogical %uint %9989 %uint_1
       %9991 = OpConvertUToF %float %9990
       %9992 = OpBitwiseAnd %uint %9943 %uint_4
       %9993 = OpShiftRightLogical %uint %9992 %uint_2
       %9994 = OpConvertUToF %float %9993
       %9995 = OpBitwiseAnd %uint %9943 %uint_8
       %9996 = OpShiftRightLogical %uint %9995 %uint_3
       %9997 = OpConvertUToF %float %9996
       %9998 = OpCompositeConstruct %v4float %9988 %9991 %9994 %9997
       %9999 = OpShiftRightLogical %uint %9943 %uint_4
      %10000 = OpBitwiseAnd %uint %9999 %uint_1
      %10001 = OpConvertUToF %float %10000
      %10002 = OpBitwiseAnd %uint %9999 %uint_2
      %10003 = OpShiftRightLogical %uint %10002 %uint_1
      %10004 = OpConvertUToF %float %10003
      %10005 = OpBitwiseAnd %uint %9999 %uint_4
      %10006 = OpShiftRightLogical %uint %10005 %uint_2
      %10007 = OpConvertUToF %float %10006
      %10008 = OpBitwiseAnd %uint %9999 %uint_8
      %10009 = OpShiftRightLogical %uint %10008 %uint_3
      %10010 = OpConvertUToF %float %10009
      %10011 = OpCompositeConstruct %v4float %10001 %10004 %10007 %10010
      %10012 = OpShiftRightLogical %uint %9943 %uint_8
      %10013 = OpBitwiseAnd %uint %10012 %uint_7
      %10014 = OpDot %float %10011 %8773
      %10015 = OpFSub %v3float %9946 %642
      %10016 = OpDot %float %10015 %10015
      %10017 = OpExtInst %float %1 InverseSqrt %10016
      %10018 = OpVectorTimesScalar %v3float %10015 %10017
               OpSelectionMerge %10019 None
               OpBranchConditional %9977 %10020 %10021
      %10021 = OpLabel
      %10022 = OpVectorTimesScalar %v3float %10015 %9947
      %10023 = OpDot %float %10022 %10022
      %10024 = OpExtInst %float %1 FClamp %10023 %float_0 %float_1
      %10025 = OpFSub %float %float_1 %10024
      %10026 = OpExtInst %float %1 Pow %10025 %9962
               OpBranch %10019
      %10020 = OpLabel
      %10027 = OpFMul %float %9947 %9947
      %10028 = OpFMul %float %10016 %10027
      %10029 = OpFNegate %float %10028
      %10030 = OpExtInst %float %1 Fma %10029 %10028 %float_1
      %10031 = OpExtInst %float %1 FClamp %10030 %float_0 %float_1
      %10032 = OpFMul %float %10031 %10031
               OpBranch %10019
      %10019 = OpLabel
      %10033 = OpPhi %float %10026 %10021 %10032 %10020
               OpSelectionMerge %10034 None
               OpBranchConditional %9983 %10035 %10034
      %10035 = OpLabel
      %10036 = OpDot %float %10018 %9963
      %10037 = OpCompositeExtract %float %9938 0
      %10038 = OpFSub %float %10036 %10037
      %10039 = OpCompositeExtract %float %9938 1
      %10040 = OpFMul %float %10038 %10039
      %10041 = OpExtInst %float %1 FClamp %10040 %float_0 %float_1
      %10042 = OpFMul %float %10041 %10041
      %10043 = OpFMul %float %10033 %10042
               OpBranch %10034
      %10034 = OpLabel
      %10044 = OpPhi %float %10033 %10019 %10043 %10035
      %10045 = OpVectorTimesScalar %v3float %9961 %10044
      %10046 = OpFOrdGreaterThan %bool %10044 %float_0
               OpSelectionMerge %10047 DontFlatten
               OpBranchConditional %10046 %10048 %10047
      %10048 = OpLabel
      %10049 = OpINotEqual %bool %9986 %uint_0
               OpSelectionMerge %10050 DontFlatten
               OpBranchConditional %10049 %10051 %10050
      %10051 = OpLabel
      %10052 = OpDot %float %9998 %121
      %10053 = OpDot %float %9897 %9998
      %10054 = OpExtInst %float %1 FMix %float_1 %10053 %10052
      %10055 = OpFMul %float %10014 %10054
               OpBranch %10050
      %10050 = OpLabel
      %10056 = OpPhi %float %float_1 %10048 %10055 %10051
      %10057 = OpFAdd %float %10056 %10056
      %10058 = OpFOrdGreaterThan %bool %10057 %float_0
               OpSelectionMerge %10059 DontFlatten
               OpBranchConditional %10058 %10060 %10059
      %10060 = OpLabel
      %10061 = OpFMul %float %float_0_5 %9972
      %10062 = OpVectorTimesScalar %v3float %9973 %10061
      %10063 = OpFSub %v3float %10015 %10062
      %10064 = OpFAdd %v3float %10015 %10062
      %10065 = OpExtInst %float %1 NMax %8425 %8423
      %10066 = OpFOrdGreaterThan %bool %9972 %float_0
               OpSelectionMerge %10067 DontFlatten
               OpBranchConditional %10066 %10068 %10069
      %10069 = OpLabel
      %10070 = OpDot %float %10063 %10063
      %10071 = OpFAdd %float %10070 %float_1
      %10072 = OpFDiv %float %float_1 %10071
      %10073 = OpExtInst %float %1 InverseSqrt %10070
      %10074 = OpVectorTimesScalar %v3float %10063 %10073
      %10075 = OpDot %float %8448 %10074
               OpBranch %10067
      %10068 = OpLabel
      %10076 = OpDot %float %10063 %10063
      %10077 = OpDot %float %10064 %10064
      %10078 = OpExtInst %float %1 InverseSqrt %10076
      %10079 = OpExtInst %float %1 InverseSqrt %10077
      %10080 = OpFMul %float %10078 %10079
      %10081 = OpDot %float %10063 %10064
      %10082 = OpFMul %float %10081 %10080
      %10083 = OpExtInst %float %1 Fma %10082 %float_0_5 %float_0_5
      %10084 = OpExtInst %float %1 Fma %10078 %10079 %10083
      %10085 = OpFDiv %float %10080 %10084
      %10086 = OpDot %float %8448 %10063
      %10087 = OpDot %float %8448 %10064
      %10088 = OpFMul %float %10087 %10079
      %10089 = OpExtInst %float %1 Fma %10086 %10078 %10088
      %10090 = OpFMul %float %float_0_5 %10089
               OpBranch %10067
      %10067 = OpLabel
      %10091 = OpPhi %float %float_1 %10069 %10082 %10068
      %10092 = OpPhi %float %10075 %10069 %10090 %10068
      %10093 = OpPhi %float %10072 %10069 %10085 %10068
      %10094 = OpFOrdGreaterThan %bool %9968 %float_0
               OpSelectionMerge %10095 None
               OpBranchConditional %10094 %10096 %10095
      %10096 = OpLabel
      %10097 = OpFMul %float %9968 %9968
      %10098 = OpFMul %float %10097 %10093
      %10099 = OpExtInst %float %1 FClamp %10098 %float_0 %float_1
      %10100 = OpExtInst %float %1 Sqrt %10099
      %10101 = OpFOrdLessThan %bool %10092 %10100
               OpSelectionMerge %10102 None
               OpBranchConditional %10101 %10103 %10102
      %10103 = OpLabel
      %10104 = OpFNegate %float %10100
      %10105 = OpExtInst %float %1 NMax %10092 %10104
      %10106 = OpFAdd %float %10100 %10105
      %10107 = OpFMul %float %10106 %10106
      %10108 = OpFMul %float %float_4 %10100
      %10109 = OpFDiv %float %10107 %10108
               OpBranch %10102
      %10102 = OpLabel
      %10110 = OpPhi %float %10092 %10096 %10109 %10103
               OpBranch %10095
      %10095 = OpLabel
      %10111 = OpPhi %float %10092 %10067 %10110 %10102
      %10112 = OpExtInst %float %1 FClamp %10111 %float_0 %float_1
      %10113 = OpSelect %float %9977 %10093 %float_1
               OpSelectionMerge %10114 None
               OpBranchConditional %10066 %10115 %10114
      %10115 = OpLabel
      %10116 = OpFNegate %v3float %660
      %10117 = OpExtInst %v3float %1 Reflect %10116 %8448
      %10118 = OpFSub %v3float %10064 %10063
      %10119 = OpDot %float %10117 %10118
      %10120 = OpVectorTimesScalar %v3float %10117 %10119
      %10121 = OpFSub %v3float %10120 %10118
      %10122 = OpDot %float %10063 %10121
      %10123 = OpFMul %float %10119 %10119
      %10124 = OpFNegate %float %10123
      %10125 = OpExtInst %float %1 Fma %9972 %9972 %10124
      %10126 = OpFDiv %float %10122 %10125
      %10127 = OpExtInst %float %1 FClamp %10126 %float_0 %float_1
      %10128 = OpVectorTimesScalar %v3float %10118 %10127
      %10129 = OpFAdd %v3float %10063 %10128
               OpBranch %10114
      %10114 = OpLabel
      %10130 = OpPhi %v3float %10063 %10095 %10129 %10115
      %10131 = OpDot %float %10130 %10130
      %10132 = OpExtInst %float %1 InverseSqrt %10131
      %10133 = OpVectorTimesScalar %v3float %10130 %10132
      %10134 = OpExtInst %float %1 NMax %10065 %8423
      %10135 = OpFMul %float %9968 %10132
      %10136 = OpFNegate %float %10134
      %10137 = OpExtInst %float %1 Fma %10136 %10134 %float_1
      %10138 = OpFMul %float %10135 %10137
      %10139 = OpExtInst %float %1 FClamp %10138 %float_0 %float_1
      %10140 = OpFMul %float %9976 %10132
      %10141 = OpExtInst %float %1 FClamp %10140 %float_0 %float_1
      %10142 = OpExtInst %float %1 NMax %9972 %9968
      %10143 = OpFNegate %float %10142
      %10144 = OpExtInst %float %1 Fma %10143 %float_0_0500000007 %float_1
      %10145 = OpExtInst %float %1 FClamp %10144 %float_0 %float_1
      %10146 = OpBitcast %uint %10145
      %10147 = OpShiftLeftLogical %uint %10146 %uint_1
      %10148 = OpBitwiseOr %uint %uint_0 %10147
      %10149 = OpDot %float %8448 %10133
      %10150 = OpDot %float %8448 %660
      %10151 = OpDot %float %660 %10133
      %10152 = OpExtInst %float %1 Fma %float_2 %10151 %float_2
      %10153 = OpExtInst %float %1 InverseSqrt %10152
      %10154 = OpFAdd %float %10149 %10150
      %10155 = OpFMul %float %10154 %10153
      %10156 = OpExtInst %float %1 FClamp %10155 %float_0 %float_1
      %10157 = OpExtInst %float %1 Fma %10153 %10151 %10153
      %10158 = OpExtInst %float %1 FClamp %10157 %float_0 %float_1
      %10159 = OpFOrdGreaterThan %bool %10139 %float_0
               OpSelectionMerge %10160 None
               OpBranchConditional %10159 %10161 %10160
      %10161 = OpLabel
      %10162 = OpFNegate %float %10139
      %10163 = OpExtInst %float %1 Fma %10162 %10139 %float_1
      %10164 = OpExtInst %float %1 Sqrt %10163
      %10165 = OpFMul %float %float_2 %10149
      %10166 = OpFNegate %float %10151
      %10167 = OpExtInst %float %1 Fma %10165 %10150 %10166
      %10168 = OpFOrdGreaterThanEqual %bool %10167 %10164
               OpSelectionMerge %10169 None
               OpBranchConditional %10168 %10170 %10171
      %10171 = OpLabel
      %10172 = OpFNegate %float %10167
      %10173 = OpExtInst %float %1 Fma %10172 %10167 %float_1
      %10174 = OpExtInst %float %1 InverseSqrt %10173
      %10175 = OpFMul %float %10139 %10174
      %10176 = OpExtInst %float %1 Fma %10172 %10149 %10150
      %10177 = OpFMul %float %10175 %10176
      %10178 = OpFMul %float %float_2 %10150
      %10179 = OpExtInst %float %1 Fma %10178 %10150 %float_n1
      %10180 = OpExtInst %float %1 Fma %10172 %10151 %10179
      %10181 = OpFMul %float %10175 %10180
      %10182 = OpFNegate %float %10149
      %10183 = OpExtInst %float %1 Fma %10182 %10149 %float_1
      %10184 = OpFNegate %float %10150
      %10185 = OpExtInst %float %1 Fma %10184 %10150 %10183
      %10186 = OpExtInst %float %1 Fma %10166 %10151 %10185
      %10187 = OpFMul %float %10165 %10150
      %10188 = OpExtInst %float %1 Fma %10187 %10151 %10186
      %10189 = OpExtInst %float %1 FClamp %10188 %float_0 %float_1
      %10190 = OpExtInst %float %1 Sqrt %10189
      %10191 = OpFMul %float %10175 %10190
      %10192 = OpFMul %float %10191 %float_2
      %10193 = OpFMul %float %10192 %10150
      %10194 = OpExtInst %float %1 Fma %10149 %10164 %10150
      %10195 = OpExtInst %float %1 Fma %10175 %10176 %10194
      %10196 = OpExtInst %float %1 Fma %10151 %10164 %float_1
      %10197 = OpExtInst %float %1 Fma %10175 %10180 %10196
      %10198 = OpFMul %float %10191 %10197
      %10199 = OpFMul %float %10195 %10197
      %10200 = OpFMul %float %10193 %10195
      %10201 = OpFMul %float %float_0_25 %10193
      %10202 = OpFMul %float %10201 %10195
      %10203 = OpExtInst %float %1 Fma %float_n0_5 %10198 %10202
      %10204 = OpFMul %float %10199 %10203
      %10205 = OpFMul %float %10198 %float_n2
      %10206 = OpExtInst %float %1 Fma %10193 %10195 %10205
      %10207 = OpFMul %float %10200 %10206
      %10208 = OpExtInst %float %1 Fma %10198 %10198 %10207
      %10209 = OpFMul %float %10197 %10197
      %10210 = OpExtInst %float %1 Fma %10151 %10164 %10197
      %10211 = OpExtInst %float %1 Fma %float_n0_5 %10210 %float_n0_5
      %10212 = OpFMul %float %10199 %10211
      %10213 = OpExtInst %float %1 Fma %10194 %10209 %10212
      %10214 = OpExtInst %float %1 Fma %10195 %10213 %10208
      %10215 = OpFMul %float %float_2 %10204
      %10216 = OpFMul %float %10204 %10204
      %10217 = OpExtInst %float %1 Fma %10214 %10214 %10216
      %10218 = OpFDiv %float %10215 %10217
      %10219 = OpFMul %float %10218 %10214
      %10220 = OpFNegate %float %10218
      %10221 = OpExtInst %float %1 Fma %10220 %10204 %float_1
      %10222 = OpFMul %float %10219 %10191
      %10223 = OpExtInst %float %1 Fma %10221 %10177 %10222
      %10224 = OpFMul %float %10219 %10193
      %10225 = OpExtInst %float %1 Fma %10221 %10181 %10224
      %10226 = OpExtInst %float %1 Fma %10149 %10164 %10223
      %10227 = OpExtInst %float %1 Fma %10151 %10164 %10225
      %10228 = OpExtInst %float %1 Fma %float_2 %10227 %float_2
      %10229 = OpExtInst %float %1 InverseSqrt %10228
      %10230 = OpFAdd %float %10226 %10150
      %10231 = OpFMul %float %10230 %10229
      %10232 = OpExtInst %float %1 FClamp %10231 %float_0 %float_1
      %10233 = OpExtInst %float %1 Fma %10229 %10227 %10229
      %10234 = OpExtInst %float %1 FClamp %10233 %float_0 %float_1
               OpBranch %10169
      %10170 = OpLabel
      %10235 = OpExtInst %float %1 FAbs %10150
               OpBranch %10169
      %10169 = OpLabel
      %10236 = OpPhi %float %10232 %10171 %float_1 %10170
      %10237 = OpPhi %float %10234 %10171 %10235 %10170
               OpBranch %10160
      %10160 = OpLabel
      %10238 = OpPhi %float %10156 %10114 %10236 %10169
      %10239 = OpPhi %float %10158 %10114 %10237 %10169
      %10240 = OpExtInst %float %1 FAbs %10150
      %10241 = OpFAdd %float %10240 %float_9_99999975en06
      %10242 = OpExtInst %float %1 FClamp %10241 %float_0 %float_1
      %10243 = OpFMul %float %10065 %10065
      %10244 = OpFMul %float %10243 %10243
      %10245 = OpShiftRightLogical %uint %10148 %uint_1
      %10246 = OpBitcast %float %10245
      %10247 = OpExtInst %float %1 FClamp %10150 %float_0 %float_1
      %10248 = OpExtInst %float %1 FClamp %10112 %float_0 %float_1
      %10249 = OpExtInst %float %1 FClamp %10158 %float_0 %float_1
      %10250 = OpExtInst %float %1 FClamp %10156 %float_0 %float_1
      %10251 = OpBitcast %int %10244
      %10252 = OpISub %int %int_2129859010 %10251
      %10253 = OpBitcast %float %10252
      %10254 = OpExtInst %float %1 Fma %float_2 %10253 %float_n1
      %10255 = OpExtInst %float %1 Log2 %10254
      %10256 = OpFMul %float %float_0_055555556 %10255
      %10257 = OpExtInst %float %1 FClamp %10256 %float_0 %float_1
      %10258 = OpFSub %float %float_1 %10249
      %10259 = OpFMul %float %10258 %10258
      %10260 = OpFMul %float %10259 %10259
      %10261 = OpExtInst %float %1 Fma %10260 %10258 %10249
      %10262 = OpFSub %float %float_1 %10247
      %10263 = OpFMul %float %10262 %10262
      %10264 = OpFMul %float %10263 %10263
      %10265 = OpFMul %float %10264 %10262
      %10266 = OpExtInst %float %1 Fma %float_n0_75 %10265 %float_1
      %10267 = OpFSub %float %float_1 %10248
      %10268 = OpFMul %float %10267 %10267
      %10269 = OpFMul %float %10268 %10268
      %10270 = OpFMul %float %10269 %10267
      %10271 = OpExtInst %float %1 Fma %float_n0_75 %10270 %float_1
      %10272 = OpFMul %float %10266 %10271
      %10273 = OpExtInst %float %1 Fma %float_2_20000005 %10257 %float_n0_5
      %10274 = OpExtInst %float %1 FClamp %10273 %float_0 %float_1
      %10275 = OpExtInst %float %1 FMix %10261 %10272 %10274
      %10276 = OpExtInst %float %1 Fma %float_34_5 %10257 %float_n59
      %10277 = OpExtInst %float %1 Fma %10276 %10257 %float_24_5
      %10278 = OpFMul %float %10277 %10249
      %10279 = OpExtInst %float %1 Fma %float_73_1999969 %10257 %float_n21_2000008
      %10280 = OpExtInst %float %1 NMax %10279 %float_8_89999962
      %10281 = OpFNegate %float %10280
      %10282 = OpBitcast %int %10250
      %10283 = OpShiftRightArithmetic %int %10282 %int_1
      %10284 = OpIAdd %int %int_532487669 %10283
      %10285 = OpBitcast %float %10284
      %10286 = OpFMul %float %10281 %10285
      %10287 = OpExtInst %float %1 Exp2 %10286
      %10288 = OpFMul %float %10278 %10287
      %10289 = OpExtInst %float %1 Fma %10288 %10246 %10275
      %10290 = OpFMul %float %float_0_318309873 %10289
      %10291 = OpVectorTimesScalar %v3float %8714 %10290
      %10292 = OpFMul %float %10113 %10112
      %10293 = OpVectorTimesScalar %v3float %131 %10292
      %10294 = OpFMul %v3float %10291 %10293
      %10295 = OpBitwiseAnd %uint %10148 %uint_1
      %10296 = OpIEqual %bool %10295 %uint_1
               OpSelectionMerge %10297 None
               OpBranchConditional %10296 %10298 %10299
      %10299 = OpLabel
      %10300 = OpFOrdGreaterThan %bool %10141 %float_0
               OpSelectionMerge %10301 None
               OpBranchConditional %10300 %10302 %10301
      %10302 = OpLabel
      %10303 = OpFMul %float %10141 %10141
      %10304 = OpExtInst %float %1 Fma %10239 %float_3_5999999 %float_0_400000006
      %10305 = OpFDiv %float %10303 %10304
      %10306 = OpExtInst %float %1 Fma %10243 %10243 %10305
      %10307 = OpExtInst %float %1 FClamp %10306 %float_0 %float_1
               OpBranch %10301
      %10301 = OpLabel
      %10308 = OpPhi %float %10244 %10299 %10307 %10302
               OpSelectionMerge %10309 None
               OpBranchConditional %10159 %10310 %10309
      %10310 = OpLabel
      %10311 = OpFMul %float %float_0_25 %10139
      %10312 = OpBitcast %int %10308
      %10313 = OpShiftRightArithmetic %int %10312 %int_1
      %10314 = OpIAdd %int %int_532487669 %10313
      %10315 = OpBitcast %float %10314
      %10316 = OpExtInst %float %1 Fma %float_3 %10315 %10139
      %10317 = OpFMul %float %10311 %10316
      %10318 = OpFAdd %float %10239 %float_0_00100000005
      %10319 = OpFDiv %float %10317 %10318
      %10320 = OpFAdd %float %10308 %10319
      %10321 = OpFDiv %float %10308 %10320
               OpBranch %10309
      %10309 = OpLabel
      %10322 = OpPhi %float %float_1 %10301 %10321 %10310
      %10323 = OpPhi %float %10308 %10301 %10320 %10310
      %10324 = OpFOrdLessThan %bool %10091 %float_1
               OpSelectionMerge %10325 None
               OpBranchConditional %10324 %10326 %10325
      %10326 = OpLabel
      %10327 = OpFSub %float %float_1_00010002 %10091
      %10328 = OpFAdd %float %float_1 %10091
      %10329 = OpFDiv %float %10327 %10328
      %10330 = OpExtInst %float %1 Sqrt %10329
      %10331 = OpFMul %float %float_0_25 %10330
      %10332 = OpBitcast %int %10323
      %10333 = OpShiftRightArithmetic %int %10332 %int_1
      %10334 = OpIAdd %int %int_532487669 %10333
      %10335 = OpBitcast %float %10334
      %10336 = OpExtInst %float %1 Fma %float_3 %10335 %10330
      %10337 = OpFMul %float %10331 %10336
      %10338 = OpFAdd %float %10239 %float_0_00100000005
      %10339 = OpFDiv %float %10337 %10338
      %10340 = OpFAdd %float %10323 %10339
      %10341 = OpFDiv %float %10323 %10340
      %10342 = OpExtInst %float %1 Sqrt %10341
      %10343 = OpFMul %float %10322 %10342
               OpBranch %10325
      %10325 = OpLabel
      %10344 = OpPhi %float %10322 %10309 %10343 %10326
      %10345 = OpFNegate %float %10238
      %10346 = OpExtInst %float %1 Fma %10238 %10308 %10345
      %10347 = OpExtInst %float %1 Fma %10346 %10238 %float_1
      %10348 = OpFMul %float %float_3_14159274 %10347
      %10349 = OpFMul %float %10348 %10347
      %10350 = OpFDiv %float %10308 %10349
      %10351 = OpFMul %float %10350 %10344
      %10352 = OpExtInst %float %1 Sqrt %10308
      %10353 = OpFSub %float %float_1 %10352
      %10354 = OpExtInst %float %1 Fma %10242 %10353 %10352
      %10355 = OpExtInst %float %1 Fma %10112 %10353 %10352
      %10356 = OpFMul %float %10242 %10355
      %10357 = OpExtInst %float %1 Fma %10112 %10354 %10356
      %10358 = OpFDiv %float %float_0_5 %10357
      %10359 = OpFSub %float %float_1 %10239
      %10360 = OpFMul %float %10359 %10359
      %10361 = OpFMul %float %10360 %10360
      %10362 = OpFMul %float %10361 %10359
      %10363 = OpCompositeExtract %float %8558 1
      %10364 = OpFMul %float %float_50 %10363
      %10365 = OpExtInst %float %1 FClamp %10364 %float_0 %float_1
      %10366 = OpFMul %float %10365 %10362
      %10367 = OpCompositeConstruct %v3float %10366 %10366 %10366
      %10368 = OpFNegate %float %10361
      %10369 = OpExtInst %float %1 Fma %10368 %10359 %float_1
      %10370 = OpVectorTimesScalar %v3float %8558 %10369
      %10371 = OpFAdd %v3float %10367 %10370
      %10372 = OpFMul %float %10351 %10358
      %10373 = OpVectorTimesScalar %v3float %10371 %10372
      %10374 = OpFMul %v3float %10293 %10373
               OpBranch %10297
      %10298 = OpLabel
               OpBranch %10297
      %10297 = OpLabel
      %10375 = OpPhi %v3float %10374 %10325 %106 %10298
      %10376 = OpCompositeExtract %float %8558 1
      %10377 = OpFMul %float %float_50 %10376
      %10378 = OpExtInst %float %1 FClamp %10377 %float_0 %float_1
      %10379 = OpCompositeConstruct %v3float %10378 %10378 %10378
      %10380 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
      %10381 = OpLoad %type_sampler %View_ShadingEnergySampler
      %10382 = OpCompositeConstruct %v2float %10242 %10065
      %10383 = OpSampledImage %type_sampled_image %10380 %10381
      %10384 = OpImageSampleExplicitLod %v4float %10383 %10382 Lod %float_0
      %10385 = OpAccessChain %_ptr_Uniform_uint %View %uint_42
      %10386 = OpLoad %uint %10385
      %10387 = OpINotEqual %bool %10386 %uint_0
      %10388 = OpCompositeConstruct %v3bool %10387 %10387 %10387
      %10389 = OpCompositeExtract %float %10384 0
      %10390 = OpFSub %float %float_1 %10389
      %10391 = OpFDiv %float %10390 %10389
      %10392 = OpVectorTimesScalar %v3float %8558 %10391
      %10393 = OpFAdd %v3float %131 %10392
      %10394 = OpSelect %v3float %10388 %10393 %131
      %10395 = OpVectorTimesScalar %v3float %8558 %10389
      %10396 = OpFSub %v3float %10379 %8558
      %10397 = OpCompositeExtract %float %10384 1
      %10398 = OpVectorTimesScalar %v3float %10396 %10397
      %10399 = OpFAdd %v3float %10395 %10398
      %10400 = OpFMul %v3float %10394 %10399
      %10401 = OpAccessChain %_ptr_Uniform_uint %View %uint_43
      %10402 = OpLoad %uint %10401
      %10403 = OpINotEqual %bool %10402 %uint_0
      %10404 = OpDot %float %10400 %175
      %10405 = OpFSub %float %float_1 %10404
      %10406 = OpSelect %float %10403 %10405 %float_1
      %10407 = OpVectorTimesScalar %v3float %10294 %10406
      %10408 = OpFMul %v3float %10375 %10394
      %10409 = OpVectorTimesScalar %v3float %10408 %9982
      %10410 = OpVectorTimesScalar %v3float %10045 %10056
      %10411 = OpFMul %v3float %10409 %10410
      %10412 = OpExtInst %v3float %1 Fma %10407 %10410 %106
               OpBranch %10059
      %10059 = OpLabel
      %10413 = OpPhi %v3float %460 %10050 %10412 %10297
      %10414 = OpPhi %v3float %460 %10050 %10411 %10297
               OpBranch %10047
      %10047 = OpLabel
      %10415 = OpPhi %v3float %460 %10034 %10413 %10059
      %10416 = OpPhi %v3float %460 %10034 %10414 %10059
      %10417 = OpCompositeExtract %float %10415 0
      %10418 = OpCompositeExtract %float %10415 1
      %10419 = OpCompositeExtract %float %10415 2
      %10420 = OpCompositeConstruct %v4float %10417 %10418 %10419 %float_0
      %10421 = OpCompositeExtract %float %10416 0
      %10422 = OpCompositeExtract %float %10416 1
      %10423 = OpCompositeExtract %float %10416 2
      %10424 = OpCompositeConstruct %v4float %10421 %10422 %10423 %float_0
      %10425 = OpBitwiseAnd %uint %10013 %8789
      %10426 = OpINotEqual %bool %10425 %uint_0
               OpSelectionMerge %10427 Flatten
               OpBranchConditional %10426 %10428 %10427
      %10428 = OpLabel
      %10429 = OpFAdd %v4float %9913 %10420
      %10430 = OpFAdd %v4float %9916 %10424
               OpBranch %10427
      %10427 = OpLabel
       %9914 = OpPhi %v4float %9913 %10047 %10429 %10428
       %9917 = OpPhi %v4float %9916 %10047 %10430 %10428
               OpBranch %9915
       %9915 = OpLabel
       %9919 = OpIAdd %uint %9918 %uint_1
               OpBranch %9912
       %9921 = OpLabel
      %10431 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_16
      %10432 = OpLoad %uint %10431
      %10433 = OpIEqual %bool %10432 %uint_0
      %10434 = OpCompositeConstruct %v4bool %10433 %10433 %10433 %10433
      %10435 = OpSelect %v4float %10434 %102 %9913
      %10436 = OpSelect %v4float %10434 %102 %9916
      %10437 = OpVectorShuffle %v3float %10435 %10435 0 1 2
      %10438 = OpVectorShuffle %v3float %10436 %10436 0 1 2
      %10439 = OpFAdd %v3float %10437 %10438
      %10440 = OpAccessChain %_ptr_Uniform_float %View %uint_18
      %10441 = OpLoad %float %10440
      %10442 = OpFOrdGreaterThan %bool %10441 %float_0
               OpSelectionMerge %10443 DontFlatten
               OpBranchConditional %10442 %10444 %10443
      %10444 = OpLabel
      %10445 = OpIAdd %uint %8391 %uint_1
      %10446 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10445
      %10447 = OpLoad %v4float %10446
      %10448 = OpVectorShuffle %v3float %10447 %10447 0 1 2
      %10449 = OpIAdd %uint %8391 %uint_18
      %10450 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10449
      %10451 = OpLoad %v4float %10450
      %10452 = OpIAdd %uint %8391 %uint_17
      %10453 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10452
      %10454 = OpLoad %v4float %10453
      %10455 = OpCompositeExtract %float %10454 3
      %10456 = OpVectorShuffle %v3float %10451 %10451 0 1 2
      %10457 = OpIAdd %uint %8391 %uint_24
      %10458 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10457
      %10459 = OpLoad %v4float %10458
      %10460 = OpCompositeExtract %float %10459 3
      %10461 = OpIAdd %uint %8391 %uint_25
      %10462 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10461
      %10463 = OpLoad %v4float %10462
      %10464 = OpCompositeExtract %float %10463 3
      %10465 = OpIAdd %uint %8391 %uint_31
      %10466 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10465
      %10467 = OpLoad %v4float %10466
      %10468 = OpCompositeExtract %float %10467 0
      %10469 = OpCompositeConstruct %v3float %10455 %10460 %10464
      %10470 = OpFSub %v3float %593 %10448
      %10471 = OpFSub %v3float %643 %10456
      %10472 = OpVectorTimesScalar %v3float %10470 %float_2097152
      %10473 = OpFAdd %v3float %10472 %10471
      %10474 = OpExtInst %v3float %1 FAbs %10473
      %10475 = OpFAdd %v3float %10469 %131
      %10476 = OpFOrdGreaterThan %v3bool %10474 %10475
      %10477 = OpAny %bool %10476
               OpSelectionMerge %10478 None
               OpBranchConditional %10477 %10479 %10480
      %10480 = OpLabel
      %10481 = OpFOrdGreaterThan %bool %10468 %float_0
               OpSelectionMerge %10482 None
               OpBranchConditional %10481 %10483 %10482
      %10483 = OpLabel
      %10484 = OpFSub %v3float %642 %582
      %10485 = OpExtInst %v3float %1 FAbs %10484
      %10486 = OpCompositeExtract %float %10485 0
      %10487 = OpCompositeExtract %float %10485 1
      %10488 = OpCompositeExtract %float %10485 2
      %10489 = OpExtInst %float %1 NMax %10487 %10488
      %10490 = OpExtInst %float %1 NMax %10486 %10489
      %10491 = OpFSub %float %10490 %10468
      %10492 = OpExtInst %float %1 FAbs %10491
      %10493 = OpFMul %float %10492 %float_20
      %10494 = OpExtInst %float %1 FClamp %10493 %float_0 %float_1
      %10495 = OpFSub %float %float_1 %10494
      %10496 = OpVectorTimesScalar %v3float %143 %10495
               OpBranch %10482
      %10482 = OpLabel
      %10497 = OpPhi %v3float %106 %10480 %10496 %10483
               OpBranch %10478
      %10479 = OpLabel
      %10498 = OpFMul %v3float %593 %137
      %10499 = OpFMul %v3float %643 %137
      %10500 = OpCompositeExtract %float %10498 0
      %10501 = OpCompositeExtract %float %10499 0
      %10502 = OpCompositeExtract %float %10498 1
      %10503 = OpCompositeExtract %float %10499 1
      %10504 = OpFAdd %float %10500 %10502
      %10505 = OpFAdd %float %10501 %10503
      %10506 = OpCompositeExtract %float %10498 2
      %10507 = OpCompositeExtract %float %10499 2
      %10508 = OpFAdd %float %10504 %10506
      %10509 = OpFAdd %float %10505 %10507
      %10510 = OpFMul %float %10508 %float_4194_3042
      %10511 = OpExtInst %float %1 Fract %10510
      %10512 = OpExtInst %float %1 Fma %10509 %float_0_00200000009 %10511
      %10513 = OpExtInst %float %1 Fract %10512
      %10514 = OpCompositeConstruct %v3float %10513 %10513 %10513
      %10515 = OpFOrdGreaterThan %v3bool %10514 %141
      %10516 = OpSelect %v3float %10515 %131 %106
      %10517 = OpExtInst %v3float %1 FMix %138 %139 %10516
               OpBranch %10478
      %10478 = OpLabel
      %10518 = OpPhi %v3float %106 %10482 %10517 %10479
      %10519 = OpPhi %v3float %10497 %10482 %10517 %10479
               OpBranch %10443
      %10443 = OpLabel
      %10520 = OpPhi %v3float %106 %9921 %10518 %10478
      %10521 = OpPhi %v3float %106 %9921 %10519 %10478
      %10522 = OpFAdd %v3float %10439 %8715
      %10523 = OpFAdd %v3float %10522 %10521
      %10524 = OpVectorShuffle %v3float %617 %617 0 1 2
      %10525 = OpVectorTimesScalar %v3float %10524 %float_3_14159274
      %10526 = OpVectorTimesScalar %v3float %8699 %float_3_14159274
      %10527 = OpDot %float %8448 %660
      %10528 = OpExtInst %float %1 NMax %float_0 %10527
      %10529 = OpLoad %type_2d_image %OpaqueBasePass_PreIntegratedGFTexture
      %10530 = OpLoad %type_sampler %View_SharedBilinearClampedSampler
      %10531 = OpCompositeConstruct %v2float %10528 %8425
      %10532 = OpSampledImage %type_sampled_image %10529 %10530
      %10533 = OpImageSampleExplicitLod %v4float %10532 %10531 Lod %float_0
      %10534 = OpCompositeExtract %float %10533 0
      %10535 = OpVectorTimesScalar %v3float %8558 %10534
      %10536 = OpCompositeExtract %float %8558 1
      %10537 = OpFMul %float %float_50 %10536
      %10538 = OpExtInst %float %1 FClamp %10537 %float_0 %float_1
      %10539 = OpCompositeExtract %float %10533 1
      %10540 = OpFMul %float %10538 %10539
      %10541 = OpCompositeConstruct %v3float %10540 %10540 %10540
      %10542 = OpFAdd %v3float %10535 %10541
      %10543 = OpLoad %type_2d_image %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture
      %10544 = OpAccessChain %_ptr_Uniform_v2float %SingleLayerWater %uint_2
      %10545 = OpLoad %v2float %10544
      %10546 = OpLoad %type_2d_image %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture
      %10547 = OpAccessChain %_ptr_Uniform_v4float %SingleLayerWater %uint_0
      %10548 = OpLoad %v4float %10547
      %10549 = OpVectorShuffle %v2float %10548 %10548 0 1
      %10550 = OpVectorShuffle %v2float %10548 %10548 2 3
      %10551 = OpAccessChain %_ptr_Uniform_v4float %SingleLayerWater %uint_1
      %10552 = OpLoad %v4float %10551
      %10553 = OpFOrdGreaterThan %bool %8449 %float_0
               OpSelectionMerge %10554 None
               OpBranchConditional %10553 %10555 %10554
      %10555 = OpLabel
      %10556 = OpExtInst %float %1 NMin %8538 %float_0_99000001
      %10557 = OpExtInst %float %1 Sqrt %10556
      %10558 = OpFSub %float %float_1 %10557
      %10559 = OpFDiv %float %float_2 %10558
      %10560 = OpFSub %float %10559 %float_1
      %10561 = OpExtInst %v2float %1 FClamp %651 %10549 %10550
      %10562 = OpSampledImage %type_sampled_image %10543 %10530
      %10563 = OpImageSampleExplicitLod %v4float %10562 %10561 Lod %float_0
      %10564 = OpCompositeExtract %float %10563 0
      %10565 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_0
      %10566 = OpLoad %float %10565
      %10567 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_1
      %10568 = OpLoad %float %10567
      %10569 = OpExtInst %float %1 Fma %10564 %10566 %10568
      %10570 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_2
      %10571 = OpLoad %float %10570
      %10572 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_3
      %10573 = OpLoad %float %10572
      %10574 = OpFNegate %float %10573
      %10575 = OpExtInst %float %1 Fma %10564 %10571 %10574
      %10576 = OpFDiv %float %float_1 %10575
      %10577 = OpFAdd %float %10569 %10576
      %10578 = OpCompositeExtract %v4float %587 0
      %10579 = OpVectorShuffle %v3float %10578 %10578 0 1 2
      %10580 = OpCompositeExtract %v4float %587 1
      %10581 = OpVectorShuffle %v3float %10580 %10580 0 1 2
      %10582 = OpCompositeExtract %v4float %587 2
      %10583 = OpVectorShuffle %v3float %10582 %10582 0 1 2
      %10584 = OpCompositeConstruct %mat3v3float %10579 %10581 %10583
      %10585 = OpMatrixTimesVector %v3float %10584 %8448
      %10586 = OpExtInst %v3float %1 Normalize %10585
      %10587 = OpVectorShuffle %v2float %10586 %10586 0 1
      %10588 = OpFSub %float %8375 %float_1
      %10589 = OpVectorTimesScalar %v2float %10587 %10588
      %10590 = OpVectorShuffle %v2float %605 %605 0 1
      %10591 = OpFMul %v2float %10589 %10590
      %10592 = OpVectorShuffle %v2float %607 %607 2 3
      %10593 = OpFMul %v2float %10591 %10592
      %10594 = OpCompositeExtract %float %10552 0
      %10595 = OpCompositeExtract %float %10552 1
      %10596 = OpFMul %float %10595 %10594
      %10597 = OpCompositeConstruct %v2float %10594 %10596
      %10598 = OpVectorShuffle %v2float %10552 %10552 2 3
      %10599 = OpFMul %v2float %10598 %312
      %10600 = OpFMul %v2float %10599 %10597
      %10601 = OpFMul %v2float %10593 %10600
      %10602 = OpFNegate %float %8377
      %10603 = OpFMul %float %8377 %float_n0_5
      %10604 = OpExtInst %float %1 FAbs %10603
      %10605 = OpExtInst %float %1 FClamp %10604 %float_0 %float_50
      %10606 = OpExtInst %float %1 NMax %float_1 %10605
      %10607 = OpFDiv %float %float_1 %10606
      %10608 = OpFSub %float %10577 %646
      %10609 = OpExtInst %float %1 Fma %10608 %10607 %10602
      %10610 = OpExtInst %float %1 FClamp %10609 %float_0 %float_1
      %10611 = OpVectorTimesScalar %v2float %10601 %10610
      %10612 = OpVectorTimesScalar %v2float %10611 %float_4
      %10613 = OpFMul %float %10608 %float_0_0333333351
      %10614 = OpExtInst %float %1 FClamp %10613 %float_0 %float_1
      %10615 = OpVectorTimesScalar %v2float %10612 %10614
      %10616 = OpFAdd %v2float %10561 %10615
      %10617 = OpExtInst %v2float %1 FClamp %10616 %10549 %10550
      %10618 = OpSampledImage %type_sampled_image %10543 %10530
      %10619 = OpImageGather %v4float %10618 %10617 %int_0 None
      %10620 = OpCompositeExtract %float %10619 0
      %10621 = OpExtInst %float %1 Fma %10620 %10566 %10568
      %10622 = OpExtInst %float %1 Fma %10620 %10571 %10574
      %10623 = OpFDiv %float %float_1 %10622
      %10624 = OpFAdd %float %10621 %10623
      %10625 = OpCompositeExtract %float %10619 1
      %10626 = OpExtInst %float %1 Fma %10625 %10566 %10568
      %10627 = OpExtInst %float %1 Fma %10625 %10571 %10574
      %10628 = OpFDiv %float %float_1 %10627
      %10629 = OpFAdd %float %10626 %10628
      %10630 = OpCompositeExtract %float %10619 2
      %10631 = OpExtInst %float %1 Fma %10630 %10566 %10568
      %10632 = OpExtInst %float %1 Fma %10630 %10571 %10574
      %10633 = OpFDiv %float %float_1 %10632
      %10634 = OpFAdd %float %10631 %10633
      %10635 = OpCompositeExtract %float %10619 3
      %10636 = OpExtInst %float %1 Fma %10635 %10566 %10568
      %10637 = OpExtInst %float %1 Fma %10635 %10571 %10574
      %10638 = OpFDiv %float %float_1 %10637
      %10639 = OpFAdd %float %10636 %10638
      %10640 = OpCompositeConstruct %v4float %10624 %10629 %10634 %10639
      %10641 = OpCompositeConstruct %v4float %646 %646 %646 %646
      %10642 = OpFOrdLessThan %v4bool %10640 %10641
      %10643 = OpAny %bool %10642
               OpSelectionMerge %10644 None
               OpBranchConditional %10643 %10645 %10646
      %10646 = OpLabel
      %10647 = OpFMul %v2float %10617 %10545
      %10648 = OpVectorTimesScalar %v2float %10647 %float_1
      %10649 = OpFSub %v2float %10648 %153
      %10650 = OpExtInst %v2float %1 Fract %10649
      %10651 = OpVectorShuffle %v4float %10619 %10619 3 2 0 1
      %10652 = OpCompositeExtract %float %10650 0
      %10653 = OpFSub %float %float_1 %10652
      %10654 = OpCompositeExtract %float %10650 1
      %10655 = OpFSub %float %float_1 %10654
      %10656 = OpFMul %float %10653 %10655
      %10657 = OpCompositeInsert %v4float %10656 %539 0
      %10658 = OpFMul %float %10652 %10655
      %10659 = OpCompositeInsert %v4float %10658 %10657 1
      %10660 = OpFMul %float %10653 %10654
      %10661 = OpCompositeInsert %v4float %10660 %10659 2
      %10662 = OpFMul %float %10652 %10654
      %10663 = OpCompositeInsert %v4float %10662 %10661 3
      %10664 = OpDot %float %10651 %10663
      %10665 = OpExtInst %float %1 Fma %10664 %10566 %10568
      %10666 = OpExtInst %float %1 Fma %10664 %10571 %10574
      %10667 = OpFDiv %float %float_1 %10666
      %10668 = OpFAdd %float %10665 %10667
               OpBranch %10644
      %10645 = OpLabel
               OpBranch %10644
      %10644 = OpLabel
      %10669 = OpPhi %float %10668 %10646 %10577 %10645
      %10670 = OpPhi %float %10664 %10646 %10564 %10645
      %10671 = OpCompositeConstruct %v2bool %10643 %10643
      %10672 = OpSelect %v2float %10671 %10561 %10617
      %10673 = OpExtInst %float %1 NMax %float_9_99999996en13 %10670
      %10674 = OpFSub %float %10669 %646
      %10675 = OpExtInst %float %1 NMax %float_0 %10674
      %10676 = OpVectorShuffle %v3float %8434 %8434 0 1 2
      %10677 = OpVectorShuffle %v3float %8433 %459 0 1 2
      %10678 = OpFMul %v3float %10676 %10677
      %10679 = OpVectorShuffle %v3float %8436 %459 0 1 2
      %10680 = OpFMul %float %10675 %float_0_0199999996
      %10681 = OpExtInst %float %1 FClamp %10680 %float_0 %float_1
      %10682 = OpCompositeConstruct %v3float %10681 %10681 %10681
      %10683 = OpExtInst %v3float %1 FMix %131 %10679 %10682
      %10684 = OpExtInst %v3float %1 NMax %10677 %193
      %10685 = OpFDiv %float %float_1 %10560
               OpSelectionMerge %10686 None
               OpSwitch %uint_0 %10687
      %10687 = OpLabel
      %10688 = OpDot %float %660 %8448
      %10689 = OpFMul %float %10685 %10685
      %10690 = OpFNegate %float %10688
      %10691 = OpExtInst %float %1 Fma %10690 %10688 %float_1
      %10692 = OpFNegate %float %10689
      %10693 = OpExtInst %float %1 Fma %10692 %10691 %float_1
      %10694 = OpFOrdLessThan %bool %10693 %float_0
               OpSelectionMerge %10695 None
               OpBranchConditional %10694 %10696 %10695
      %10696 = OpLabel
      %10697 = OpFNegate %v3float %660
      %10698 = OpExtInst %v3float %1 Reflect %10697 %8448
               OpBranch %10686
      %10695 = OpLabel
      %10699 = OpFOrdGreaterThanEqual %bool %10688 %float_0
      %10700 = OpSelect %float %10699 %float_1 %float_n1
      %10701 = OpFNegate %float %10700
      %10702 = OpExtInst %float %1 Sqrt %10693
      %10703 = OpFMul %float %10701 %10702
      %10704 = OpExtInst %float %1 Fma %10685 %10688 %10703
      %10705 = OpVectorTimesScalar %v3float %8448 %10704
      %10706 = OpVectorTimesScalar %v3float %660 %10685
      %10707 = OpFSub %v3float %10705 %10706
               OpBranch %10686
      %10686 = OpLabel
      %10708 = OpPhi %v3float %10698 %10696 %10707 %10695
      %10709 = OpPhi %bool %false %10696 %true %10695
               OpSelectionMerge %10710 None
               OpBranchConditional %10709 %10711 %10710
      %10711 = OpLabel
      %10712 = OpFNegate %v3float %619
      %10713 = OpDot %float %10712 %10708
      %10714 = OpExtInst %float %1 Fma %float_1_54999995 %float_0 %float_n0
      %10715 = OpExtInst %float %1 Fma %10714 %10713 %float_1
      %10716 = OpFNegate %float %10714
      %10717 = OpExtInst %float %1 Fma %10716 %10714 %float_1
      %10718 = OpFMul %float %float_12_566371 %10715
      %10719 = OpFMul %float %10718 %10715
      %10720 = OpFDiv %float %10717 %10719
               OpBranch %10710
      %10710 = OpLabel
      %10721 = OpPhi %float %float_0 %10686 %10720 %10711
      %10722 = OpCompositeConstruct %v4float %634 %635 %10673 %float_1
      %10723 = OpMatrixTimesVector %v4float %591 %10722
      %10724 = OpVectorShuffle %v3float %10723 %10723 0 1 2
      %10725 = OpCompositeExtract %float %10723 3
      %10726 = OpCompositeConstruct %v3float %10725 %10725 %10725
      %10727 = OpFDiv %v3float %10724 %10726
      %10728 = OpFSub %v3float %10727 %601
      %10729 = OpFSub %v3float %593 %593
      %10730 = OpFSub %v3float %643 %10728
      %10731 = OpVectorTimesScalar %v3float %10729 %float_2097152
      %10732 = OpFAdd %v3float %10731 %10730
      %10733 = OpCompositeExtract %float %10732 2
      %10734 = OpExtInst %float %1 NMax %float_0 %10733
      %10735 = OpFNegate %float %10734
      %10736 = OpVectorTimesScalar %v3float %10677 %10735
      %10737 = OpExtInst %v3float %1 Exp %10736
      %10738 = OpSampledImage %type_sampled_image %10546 %10530
      %10739 = OpImageSampleExplicitLod %v4float %10738 %10672 Lod %float_0
      %10740 = OpVectorShuffle %v3float %10739 %10739 0 1 2
      %10741 = OpVectorTimesScalar %v3float %10737 %609
      %10742 = OpFMul %v3float %10741 %10740
      %10743 = OpVectorTimesScalar %v3float %10525 %10721
      %10744 = OpVectorTimesScalar %v3float %10526 %float_0_0795774683
      %10745 = OpSelect %float %8758 %float_0 %float_1
      %10746 = OpSelect %float %8758 %float_1 %float_0
      %10747 = OpVectorTimesScalar %v3float %10677 %10675
      %10748 = OpFNegate %v3float %10747
      %10749 = OpExtInst %v3float %1 Exp %10748
      %10750 = OpVectorTimesScalar %v3float %10743 %9899
      %10751 = OpVectorTimesScalar %v3float %10750 %10745
      %10752 = OpFAdd %v3float %10744 %10751
      %10753 = OpFSub %v3float %131 %10749
      %10754 = OpFMul %v3float %10678 %10753
      %10755 = OpFDiv %v3float %10754 %10684
      %10756 = OpExtInst %v3float %1 FClamp %10755 %106 %131
      %10757 = OpFMul %v3float %10752 %10756
      %10758 = OpVectorTimesScalar %v3float %10750 %10746
      %10759 = OpFMul %v3float %10758 %10756
      %10760 = OpFSub %v3float %131 %10542
      %10761 = OpVectorShuffle %v3float %131 %10760 3 4 5
      %10762 = OpFMul %v3float %10759 %10761
      %10763 = OpVectorTimesScalar %v3float %10762 %8449
      %10764 = OpFAdd %v3float %9898 %10763
      %10765 = OpVectorShuffle %v3float %537 %131 3 4 5
      %10766 = OpFMul %v3float %10749 %10765
      %10767 = OpFMul %v3float %10742 %10683
      %10768 = OpFMul %v3float %10766 %10767
      %10769 = OpExtInst %v3float %1 Fma %10757 %10761 %10768
      %10770 = OpVectorTimesScalar %v3float %10769 %8449
               OpBranch %10554
      %10554 = OpLabel
      %10771 = OpPhi %v3float %9898 %10443 %10764 %10710
      %10772 = OpPhi %v3float %106 %10443 %10770 %10710
      %10773 = OpFAdd %v3float %10523 %10772
      %10774 = OpExtInst %v3float %1 Normalize %8447
      %10775 = OpConvertFToU %v2uint %624
      %10776 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %10777 = OpExtInst %v3float %1 FClamp %8437 %106 %131
      %10778 = OpExtInst %v3float %1 Fma %10777 %8411 %8412
      %10779 = OpCompositeInsert %v4float %float_0 %8428 0
      %10780 = OpExtInst %float %1 FClamp %8417 %float_0 %float_1
      %10781 = OpExtInst %float %1 Fma %10780 %8415 %8416
      %10782 = OpCompositeInsert %v4float %10781 %10779 1
      %10783 = OpExtInst %float %1 Fma %8425 %8419 %8420
      %10784 = OpExtInst %float %1 NMax %8423 %10783
      %10785 = OpExtInst %float %1 FClamp %10784 %float_0 %float_1
      %10786 = OpCompositeInsert %v4float %10785 %10782 2
      %10787 = OpExtInst %float %1 FClamp %8427 %float_0 %float_1
      %10788 = OpCompositeInsert %v4float %10787 %10786 3
      %10789 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
      %10790 = OpLoad %type_sampler %View_ShadingEnergySampler
      %10791 = OpAccessChain %_ptr_Uniform_uint %View %uint_42
      %10792 = OpLoad %uint %10791
      %10793 = OpINotEqual %bool %10792 %uint_0
      %10794 = OpCompositeConstruct %v3bool %10793 %10793 %10793
      %10795 = OpAny %bool %554
               OpSelectionMerge %10796 None
               OpBranchConditional %10795 %10797 %10796
      %10797 = OpLabel
               OpSelectionMerge %10798 None
               OpSwitch %uint_4 %10798 0 %10799 3 %10800 5 %10801 4 %10802
      %10802 = OpLabel
      %10803 = OpExtInst %v3float %1 Fma %106 %131 %106
      %10804 = OpExtInst %float %1 Fma %float_1 %10785 %461
               OpSelectionMerge %10805 None
               OpSwitch %uint_0 %10806
      %10806 = OpLabel
               OpSelectionMerge %10807 None
               OpSwitch %uint_4 %10807 0 %10808 3 %10809 5 %10810 4 %10811
      %10811 = OpLabel
      %10812 = OpVectorShuffle %v3float %10778 %459 0 1 2
               OpBranch %10807
      %10810 = OpLabel
      %10813 = OpVectorShuffle %v3float %10778 %459 0 1 2
               OpBranch %10807
      %10809 = OpLabel
      %10814 = OpVectorShuffle %v3float %10778 %459 0 1 2
               OpBranch %10807
      %10808 = OpLabel
      %10815 = OpVectorShuffle %v3float %10778 %459 0 1 2
      %10816 = OpVectorShuffle %v3float %10788 %10788 0 1 2
      %10817 = OpExtInst %float %1 NMax %10781 %10785
      %10818 = OpExtInst %float %1 NMax %float_0 %10817
      %10819 = OpFSub %float %10818 %float_0_0799999982
      %10820 = OpFMul %float %10819 %float_3_125
      %10821 = OpExtInst %float %1 FClamp %10820 %float_0 %float_1
      %10822 = OpCompositeConstruct %v3float %10821 %10821 %10821
      %10823 = OpExtInst %v3float %1 FMix %10815 %10816 %10822
               OpBranch %10807
      %10807 = OpLabel
      %10824 = OpPhi %v3float %457 %10806 %10812 %10811 %10813 %10810 %10814 %10809 %10823 %10808
      %10825 = OpPhi %bool %false %10806 %true %10811 %true %10810 %true %10809 %true %10808
               OpSelectionMerge %10826 None
               OpBranchConditional %10825 %10805 %10826
      %10826 = OpLabel
               OpBranch %10805
      %10805 = OpLabel
      %10827 = OpPhi %v3float %10824 %10807 %106 %10826
      %10828 = OpVectorTimesScalar %v3float %10827 %float_1
      %10829 = OpBitwiseAnd %uint %8537 %uint_4294967288
      %10830 = OpBitwiseOr %uint %10829 %uint_4
               OpBranch %10798
      %10801 = OpLabel
      %10831 = OpBitwiseOr %uint %8537 %uint_0
      %10832 = OpBitwiseAnd %uint %10831 %uint_4294967288
      %10833 = OpBitwiseOr %uint %10832 %uint_6
               OpBranch %10798
      %10800 = OpLabel
      %10834 = OpExtInst %v3float %1 Fma %106 %131 %106
               OpSelectionMerge %10835 None
               OpSwitch %uint_0 %10836
      %10836 = OpLabel
               OpSelectionMerge %10837 None
               OpSwitch %uint_4 %10837 0 %10838 3 %10839 5 %10840 4 %10841
      %10841 = OpLabel
      %10842 = OpVectorShuffle %v3float %10778 %459 0 1 2
               OpBranch %10837
      %10840 = OpLabel
      %10843 = OpVectorShuffle %v3float %10778 %459 0 1 2
               OpBranch %10837
      %10839 = OpLabel
      %10844 = OpVectorShuffle %v3float %10778 %459 0 1 2
               OpBranch %10837
      %10838 = OpLabel
      %10845 = OpVectorShuffle %v3float %10778 %459 0 1 2
      %10846 = OpVectorShuffle %v3float %10788 %10788 0 1 2
      %10847 = OpExtInst %float %1 NMax %10781 %10785
      %10848 = OpExtInst %float %1 NMax %float_0 %10847
      %10849 = OpFSub %float %10848 %float_0_0799999982
      %10850 = OpFMul %float %10849 %float_3_125
      %10851 = OpExtInst %float %1 FClamp %10850 %float_0 %float_1
      %10852 = OpCompositeConstruct %v3float %10851 %10851 %10851
      %10853 = OpExtInst %v3float %1 FMix %10845 %10846 %10852
               OpBranch %10837
      %10837 = OpLabel
      %10854 = OpPhi %v3float %457 %10836 %10842 %10841 %10843 %10840 %10844 %10839 %10853 %10838
      %10855 = OpPhi %bool %false %10836 %true %10841 %true %10840 %true %10839 %true %10838
               OpSelectionMerge %10856 None
               OpBranchConditional %10855 %10835 %10856
      %10856 = OpLabel
               OpBranch %10835
      %10835 = OpLabel
      %10857 = OpPhi %v3float %10854 %10837 %106 %10856
      %10858 = OpVectorTimesScalar %v3float %10857 %float_1
      %10859 = OpBitwiseAnd %uint %8537 %uint_4294967288
      %10860 = OpBitwiseOr %uint %10859 %uint_5
               OpBranch %10798
      %10799 = OpLabel
      %10861 = OpExtInst %v3float %1 Fma %106 %131 %106
      %10862 = OpAll %bool %554
      %10863 = OpLogicalAnd %bool %true %10862
      %10864 = OpLogicalAnd %bool %10863 %true
               OpSelectionMerge %10865 None
               OpSwitch %uint_0 %10866
      %10866 = OpLabel
               OpSelectionMerge %10867 None
               OpSwitch %uint_4 %10867 0 %10868 3 %10869 5 %10870 4 %10871
      %10871 = OpLabel
      %10872 = OpVectorShuffle %v3float %10778 %459 0 1 2
               OpBranch %10867
      %10870 = OpLabel
      %10873 = OpVectorShuffle %v3float %10778 %459 0 1 2
               OpBranch %10867
      %10869 = OpLabel
      %10874 = OpVectorShuffle %v3float %10778 %459 0 1 2
               OpBranch %10867
      %10868 = OpLabel
      %10875 = OpVectorShuffle %v3float %10778 %459 0 1 2
      %10876 = OpVectorShuffle %v3float %10788 %10788 0 1 2
      %10877 = OpExtInst %float %1 NMax %10781 %10785
      %10878 = OpExtInst %float %1 NMax %float_0 %10877
      %10879 = OpFSub %float %10878 %float_0_0799999982
      %10880 = OpFMul %float %10879 %float_3_125
      %10881 = OpExtInst %float %1 FClamp %10880 %float_0 %float_1
      %10882 = OpCompositeConstruct %v3float %10881 %10881 %10881
      %10883 = OpExtInst %v3float %1 FMix %10875 %10876 %10882
               OpBranch %10867
      %10867 = OpLabel
      %10884 = OpPhi %v3float %457 %10866 %10872 %10871 %10873 %10870 %10874 %10869 %10883 %10868
      %10885 = OpPhi %bool %false %10866 %true %10871 %true %10870 %true %10869 %true %10868
               OpSelectionMerge %10886 None
               OpBranchConditional %10885 %10865 %10886
      %10886 = OpLabel
               OpBranch %10865
      %10865 = OpLabel
      %10887 = OpPhi %v3float %10884 %10867 %106 %10886
      %10888 = OpVectorTimesScalar %v3float %10887 %float_1
               OpSelectionMerge %10889 None
               OpBranchConditional %false %10890 %10889
      %10890 = OpLabel
               OpSelectionMerge %10891 None
               OpBranchConditional %false %10892 %10891
      %10892 = OpLabel
      %10893 = OpExtInst %float %1 NMax %float_0_0399999991 %float_0_0399999991
      %10894 = OpExtInst %float %1 NMax %float_0_0399999991 %10893
      %10895 = OpFSub %float %10894 %float_0_0799999982
      %10896 = OpFMul %float %10895 %float_3_125
      %10897 = OpExtInst %float %1 FClamp %10896 %float_0 %float_1
      %10898 = OpExtInst %float %1 FMix %float_0 %float_0_0399999991 %10897
      %10899 = OpCompositeConstruct %v3float %10898 %10898 %10898
               OpBranch %10891
      %10891 = OpLabel
      %10900 = OpPhi %v3float %10888 %10890 %10899 %10892
      %10901 = OpPhi %float %461 %10890 %float_0 %10892
               OpBranch %10889
      %10889 = OpLabel
      %10902 = OpPhi %v3float %10888 %10865 %10900 %10891
      %10903 = OpPhi %float %461 %10865 %10901 %10891
      %10904 = OpBitwiseOr %uint %8537 %uint_0
      %10905 = OpBitwiseOr %uint %10904 %uint_0
               OpBranch %10798
      %10798 = OpLabel
      %10906 = OpPhi %v3float %106 %10797 %10803 %10805 %106 %10801 %10834 %10835 %10861 %10889
      %10907 = OpPhi %uint %458 %10797 %uint_2 %10805 %uint_1 %10801 %uint_1 %10835 %uint_1 %10889
      %10908 = OpPhi %bool %true %10797 %false %10805 %false %10801 %false %10835 %10864 %10889
      %10909 = OpPhi %bool %true %10797 %false %10805 %false %10801 %false %10835 %true %10889
      %10910 = OpPhi %v3float %460 %10797 %10828 %10805 %460 %10801 %10858 %10835 %10902 %10889
      %10911 = OpPhi %float %461 %10797 %10804 %10805 %float_1 %10801 %float_1 %10835 %10903 %10889
      %10912 = OpPhi %float %float_0 %10797 %float_1 %10805 %float_1 %10801 %float_1 %10835 %float_1 %10889
      %10913 = OpPhi %uint %8537 %10797 %10830 %10805 %10833 %10801 %10860 %10835 %10905 %10889
      %10914 = OpCompositeConstruct %_arr_v3float_uint_4 %10774 %460 %460 %460
               OpStore %578 %10914
      %10915 = OpAccessChain %_ptr_Function_v3float %578 %uint_0
      %10916 = OpLoad %v3float %10915
      %10917 = OpVectorTimesScalar %v3float %10916 %float_1
               OpBranch %10796
      %10796 = OpLabel
      %10918 = OpPhi %uint %uint_8192 %10554 %uint_8194 %10798
      %10919 = OpPhi %v3float %106 %10554 %10906 %10798
      %10920 = OpPhi %uint %458 %10554 %10907 %10798
      %10921 = OpPhi %uint %8537 %10554 %10913 %10798
      %10922 = OpPhi %bool %true %10554 %10908 %10798
      %10923 = OpPhi %bool %true %10554 %10909 %10798
      %10924 = OpPhi %v3float %460 %10554 %10910 %10798
      %10925 = OpPhi %float %461 %10554 %10911 %10798
      %10926 = OpPhi %v3float %460 %10554 %10917 %10798
      %10927 = OpPhi %float %float_0 %10554 %10912 %10798
      %10928 = OpSelect %uint %10795 %uint_1 %uint_0
      %10929 = OpFOrdGreaterThan %bool %10927 %float_0
      %10930 = OpCompositeConstruct %v3bool %10929 %10929 %10929
      %10931 = OpExtInst %v3float %1 Normalize %10926
      %10932 = OpSelect %v3float %10930 %10931 %106
      %10933 = OpFDiv %float %10925 %10927
      %10934 = OpSelect %float %10929 %10933 %float_0
      %10935 = OpCompositeConstruct %v3float %10927 %10927 %10927
      %10936 = OpFDiv %v3float %10924 %10935
      %10937 = OpSelect %v3float %10930 %10936 %106
               OpSelectionMerge %10938 None
               OpBranchConditional %10923 %10939 %10938
      %10939 = OpLabel
      %10940 = OpIEqual %bool %10928 %uint_1
      %10941 = OpLogicalAnd %bool %10922 %10940
      %10942 = OpSelect %uint %10941 %uint_2 %uint_3
      %10943 = OpSelect %uint %10941 %uint_1 %10942
      %10944 = OpBitwiseAnd %uint %10921 %uint_4294967288
      %10945 = OpBitwiseAnd %uint %10943 %uint_7
      %10946 = OpBitwiseOr %uint %10944 %10945
               OpSelectionMerge %10947 None
               OpBranchConditional %10941 %10948 %10947
      %10948 = OpLabel
      %10949 = OpShiftRightLogical %uint %10918 %uint_6
      %10950 = OpBitwiseAnd %uint %10949 %uint_1
      %10951 = OpINotEqual %bool %10950 %uint_0
               OpSelectionMerge %10952 None
               OpBranchConditional %10951 %10953 %10952
      %10953 = OpLabel
               OpBranch %10952
      %10952 = OpLabel
      %10954 = OpPhi %uint %uint_0 %10948 %uint_1 %10953
      %10955 = OpShiftRightLogical %uint %10918 %uint_9
      %10956 = OpBitwiseAnd %uint %10955 %uint_1
      %10957 = OpINotEqual %bool %10956 %uint_0
      %10958 = OpLogicalAnd %bool %10957 %true
               OpSelectionMerge %10959 None
               OpBranchConditional %10958 %10960 %10959
      %10960 = OpLabel
      %10961 = OpBitwiseOr %uint %10954 %uint_4
               OpBranch %10959
      %10959 = OpLabel
      %10962 = OpPhi %uint %10954 %10952 %10961 %10960
      %10963 = OpShiftRightLogical %uint %10918 %uint_10
      %10964 = OpBitwiseAnd %uint %10963 %uint_1
      %10965 = OpINotEqual %bool %10964 %uint_0
               OpSelectionMerge %10966 None
               OpBranchConditional %10965 %10967 %10966
      %10967 = OpLabel
      %10968 = OpBitwiseOr %uint %10962 %uint_8
               OpBranch %10966
      %10966 = OpLabel
      %10969 = OpPhi %uint %10962 %10959 %10968 %10967
      %10970 = OpShiftRightLogical %uint %10918 %uint_2
      %10971 = OpBitwiseAnd %uint %10970 %uint_7
      %10972 = OpIEqual %bool %10971 %uint_4
               OpSelectionMerge %10973 None
               OpBranchConditional %10972 %10974 %10973
      %10974 = OpLabel
      %10975 = OpBitwiseOr %uint %10969 %uint_16
               OpBranch %10973
      %10973 = OpLabel
      %10976 = OpPhi %uint %10969 %10966 %10975 %10974
      %10977 = OpIEqual %bool %10971 %uint_1
               OpSelectionMerge %10978 None
               OpBranchConditional %10977 %10979 %10978
      %10979 = OpLabel
      %10980 = OpBitwiseOr %uint %10976 %uint_32
               OpBranch %10978
      %10978 = OpLabel
      %10981 = OpPhi %uint %10976 %10973 %10980 %10979
      %10982 = OpIEqual %bool %10971 %uint_3
               OpSelectionMerge %10983 None
               OpBranchConditional %10982 %10984 %10983
      %10984 = OpLabel
      %10985 = OpBitwiseOr %uint %10981 %uint_64
               OpBranch %10983
      %10983 = OpLabel
      %10986 = OpPhi %uint %10981 %10978 %10985 %10984
      %10987 = OpBitwiseAnd %uint %10986 %uint_2
      %10988 = OpIEqual %bool %10987 %uint_2
      %10989 = OpIEqual %bool %10987 %uint_3
      %10990 = OpLogicalOr %bool %10988 %10989
               OpSelectionMerge %10991 None
               OpBranchConditional %10990 %10992 %10993
      %10993 = OpLabel
      %10994 = OpBitwiseAnd %uint %10986 %uint_4
      %10995 = OpIEqual %bool %10994 %uint_4
               OpSelectionMerge %10996 None
               OpBranchConditional %10995 %10997 %10998
      %10998 = OpLabel
      %10999 = OpBitwiseAnd %uint %10986 %uint_40
      %11000 = OpIEqual %bool %10999 %uint_40
               OpSelectionMerge %11001 None
               OpBranchConditional %11000 %11002 %11003
      %11003 = OpLabel
      %11004 = OpBitwiseAnd %uint %10986 %uint_32
      %11005 = OpIEqual %bool %11004 %uint_32
               OpSelectionMerge %11006 None
               OpBranchConditional %11005 %11007 %11008
      %11008 = OpLabel
      %11009 = OpBitwiseAnd %uint %10986 %uint_72
      %11010 = OpIEqual %bool %11009 %uint_64
      %11011 = OpSelect %uint %11010 %uint_4 %uint_0
      %11012 = OpSelect %uint %11010 %uint_0 %458
               OpBranch %11006
      %11007 = OpLabel
               OpBranch %11006
      %11006 = OpLabel
      %11013 = OpPhi %uint %11011 %11008 %uint_3 %11007
      %11014 = OpPhi %uint %11012 %11008 %uint_0 %11007
               OpBranch %11001
      %11002 = OpLabel
               OpBranch %11001
      %11001 = OpLabel
      %11015 = OpPhi %uint %11013 %11006 %uint_5 %11002
      %11016 = OpPhi %uint %11014 %11006 %uint_0 %11002
               OpBranch %10996
      %10997 = OpLabel
               OpBranch %10996
      %10996 = OpLabel
      %11017 = OpPhi %uint %11015 %11001 %uint_2 %10997
      %11018 = OpPhi %uint %11016 %11001 %458 %10997
               OpBranch %10991
      %10992 = OpLabel
               OpBranch %10991
      %10991 = OpLabel
      %11019 = OpPhi %uint %11017 %10996 %uint_1 %10992
      %11020 = OpPhi %uint %11018 %10996 %458 %10992
               OpBranch %10947
      %10947 = OpLabel
      %11021 = OpPhi %uint %uint_0 %10939 %11019 %10991
      %11022 = OpPhi %uint %458 %10939 %11020 %10991
               OpBranch %10938
      %10938 = OpLabel
      %11023 = OpPhi %uint %uint_0 %10796 %11021 %10947
      %11024 = OpPhi %uint %458 %10796 %11022 %10947
      %11025 = OpPhi %uint %10921 %10796 %10946 %10947
               OpSelectionMerge %11026 DontFlatten
               OpBranchConditional %10795 %11027 %11026
      %11027 = OpLabel
      %11028 = OpCompositeConstruct %_arr_v3float_uint_4 %10774 %460 %460 %460
               OpStore %579 %11028
      %11029 = OpShiftRightLogical %uint %10918 %uint_14
      %11030 = OpBitwiseAnd %uint %11029 %uint_3
      %11031 = OpAccessChain %_ptr_Function_v3float %579 %11030
      %11032 = OpLoad %v3float %11031
      %11033 = OpDot %float %11032 %660
      %11034 = OpShiftRightLogical %uint %10918 %uint_11
      %11035 = OpBitwiseAnd %uint %11034 %uint_7
               OpSelectionMerge %11036 None
               OpSwitch %11035 %11036 0 %11037 3 %11038 5 %11039
      %11039 = OpLabel
      %11040 = OpVectorShuffle %v3float %10778 %459 0 1 2
      %11041 = OpVectorTimesScalar %v3float %11040 %float_1
               OpBranch %11036
      %11038 = OpLabel
      %11042 = OpVectorShuffle %v3float %10778 %459 0 1 2
      %11043 = OpDot %float %660 %11032
      %11044 = OpVectorTimesScalar %v3float %11032 %11043
      %11045 = OpFSub %v3float %660 %11044
      %11046 = OpExtInst %v3float %1 Normalize %11045
      %11047 = OpExtInst %float %1 NMin %float_0 %float_1
      %11048 = OpDot %float %660 %11046
      %11049 = OpDot %float %11032 %11046
      %11050 = OpExtInst %float %1 FClamp %11049 %float_n1 %float_1
      %11051 = OpExtInst %float %1 FClamp %11033 %float_n1 %float_1
      %11052 = OpExtInst %float %1 FAbs %11051
      %11053 = OpExtInst %float %1 Fma %float_n0_156582996 %11052 %float_1_57079637
      %11054 = OpFSub %float %float_1 %11052
      %11055 = OpExtInst %float %1 Sqrt %11054
      %11056 = OpFMul %float %11053 %11055
      %11057 = OpFOrdGreaterThanEqual %bool %11051 %float_0
      %11058 = OpFNegate %float %11053
      %11059 = OpExtInst %float %1 Fma %11058 %11055 %float_3_14159274
      %11060 = OpSelect %float %11057 %11056 %11059
      %11061 = OpFSub %float %float_1_57079637 %11060
      %11062 = OpExtInst %float %1 FAbs %11050
      %11063 = OpExtInst %float %1 Fma %float_n0_156582996 %11062 %float_1_57079637
      %11064 = OpFSub %float %float_1 %11062
      %11065 = OpExtInst %float %1 Sqrt %11064
      %11066 = OpFMul %float %11063 %11065
      %11067 = OpFOrdGreaterThanEqual %bool %11050 %float_0
      %11068 = OpFNegate %float %11063
      %11069 = OpExtInst %float %1 Fma %11068 %11065 %float_3_14159274
      %11070 = OpSelect %float %11067 %11066 %11069
      %11071 = OpFSub %float %float_1_57079637 %11070
      %11072 = OpFSub %float %11061 %11071
      %11073 = OpExtInst %float %1 FAbs %11072
      %11074 = OpFMul %float %float_0_5 %11073
      %11075 = OpExtInst %float %1 Cos %11074
      %11076 = OpVectorTimesScalar %v3float %11032 %11050
      %11077 = OpFSub %v3float %11046 %11076
      %11078 = OpVectorTimesScalar %v3float %11032 %11051
      %11079 = OpFSub %v3float %660 %11078
      %11080 = OpDot %float %11077 %11079
      %11081 = OpDot %float %11077 %11077
      %11082 = OpDot %float %11079 %11079
      %11083 = OpExtInst %float %1 Fma %11081 %11082 %float_9_99999975en05
      %11084 = OpExtInst %float %1 InverseSqrt %11083
      %11085 = OpFMul %float %11080 %11084
      %11086 = OpExtInst %float %1 Fma %float_0_5 %11085 %float_0_5
      %11087 = OpExtInst %float %1 FClamp %11086 %float_0 %float_1
      %11088 = OpExtInst %float %1 Sqrt %11087
      %11089 = OpFDiv %float %float_1_19000006 %11075
      %11090 = OpExtInst %float %1 Fma %float_0_360000014 %11075 %11089
      %11091 = OpExtInst %float %1 Fma %float_0_00392156886 %float_0_00392156886 %float_0_200000003
      %11092 = OpExtInst %float %1 Fma %float_1_53787023en05 %float_0_5 %float_0_200000003
      %11093 = OpExtInst %float %1 Fma %float_1_53787023en05 %float_2 %float_0_200000003
      %11094 = OpFMul %float %float_0_997551024 %11088
      %11095 = OpFNegate %float %11051
      %11096 = OpExtInst %float %1 Fma %11095 %11051 %float_1
      %11097 = OpExtInst %float %1 Sqrt %11096
      %11098 = OpFMul %float %float_n0_0699428469 %11051
      %11099 = OpExtInst %float %1 Fma %11094 %11097 %11098
      %11100 = OpFMul %float %float_1_41421354 %11088
      %11101 = OpFMul %float %11091 %11100
      %11102 = OpFAdd %float %11050 %11051
      %11103 = OpExtInst %float %1 Fma %float_0_139885694 %11099 %11102
      %11104 = OpFMul %float %11103 %11103
      %11105 = OpFMul %float %float_n0_5 %11104
      %11106 = OpFMul %float %11101 %11101
      %11107 = OpFDiv %float %11105 %11106
      %11108 = OpExtInst %float %1 Exp %11107
      %11109 = OpFMul %float %float_2_50662827 %11101
      %11110 = OpFDiv %float %11108 %11109
      %11111 = OpFMul %float %float_0_25 %11088
      %11112 = OpExtInst %float %1 Fma %float_0_5 %11048 %float_0_5
      %11113 = OpExtInst %float %1 FClamp %11112 %float_0 %float_1
      %11114 = OpExtInst %float %1 Sqrt %11113
      %11115 = OpFSub %float %float_1 %11114
      %11116 = OpFMul %float %11115 %11115
      %11117 = OpFMul %float %11116 %11116
      %11118 = OpFMul %float %11117 %11115
      %11119 = OpExtInst %float %1 Fma %float_0_953479409 %11118 %float_0_0465205647
      %11120 = OpFMul %float %11110 %11111
      %11121 = OpFMul %float %11120 %11119
      %11122 = OpFMul %float %10781 %float_2
      %11123 = OpFMul %float %11121 %11122
      %11124 = OpFNegate %float %11048
      %11125 = OpExtInst %float %1 FClamp %11124 %float_0 %float_1
      %11126 = OpExtInst %float %1 FMix %float_1 %11047 %11125
      %11127 = OpFMul %float %11123 %11126
      %11128 = OpCompositeConstruct %v3float %11127 %11127 %11127
      %11129 = OpFSub %float %11102 %float_0_0350000001
      %11130 = OpFMul %float %11129 %11129
      %11131 = OpFMul %float %float_n0_5 %11130
      %11132 = OpFMul %float %11092 %11092
      %11133 = OpFDiv %float %11131 %11132
      %11134 = OpExtInst %float %1 Exp %11133
      %11135 = OpFMul %float %float_2_50662827 %11092
      %11136 = OpFDiv %float %11134 %11135
      %11137 = OpFDiv %float %float_1 %11090
      %11138 = OpExtInst %float %1 Fma %float_n0_800000012 %11085 %float_0_600000024
      %11139 = OpExtInst %float %1 Fma %11137 %11138 %float_1
      %11140 = OpFMul %float %11088 %11139
      %11141 = OpFNegate %float %11140
      %11142 = OpExtInst %float %1 Fma %11141 %11140 %float_1
      %11143 = OpExtInst %float %1 FClamp %11142 %float_0 %float_1
      %11144 = OpExtInst %float %1 Sqrt %11143
      %11145 = OpFNegate %float %11075
      %11146 = OpExtInst %float %1 Fma %11145 %11144 %float_1
      %11147 = OpFMul %float %11146 %11146
      %11148 = OpFMul %float %11147 %11147
      %11149 = OpFMul %float %11148 %11146
      %11150 = OpExtInst %float %1 Fma %float_0_953479409 %11149 %float_0_0465205647
      %11151 = OpFSub %float %float_1 %11150
      %11152 = OpFMul %float %11151 %11151
      %11153 = OpExtInst %v3float %1 FAbs %11042
      %11154 = OpFMul %float %11140 %11137
      %11155 = OpFNegate %float %11154
      %11156 = OpExtInst %float %1 Fma %11155 %11154 %float_1
      %11157 = OpExtInst %float %1 Sqrt %11156
      %11158 = OpFMul %float %float_0_5 %11157
      %11159 = OpFDiv %float %11158 %11075
      %11160 = OpCompositeConstruct %v3float %11159 %11159 %11159
      %11161 = OpExtInst %v3float %1 Pow %11153 %11160
      %11162 = OpExtInst %float %1 Fma %float_n3_6500001 %11085 %float_n3_98000002
      %11163 = OpExtInst %float %1 Exp %11162
      %11164 = OpFMul %float %11136 %11163
      %11165 = OpFMul %float %11164 %11152
      %11166 = OpVectorTimesScalar %v3float %11161 %11165
      %11167 = OpVectorTimesScalar %v3float %11166 %11047
      %11168 = OpFAdd %v3float %11128 %11167
      %11169 = OpFSub %float %11102 %float_0_140000001
      %11170 = OpFMul %float %11169 %11169
      %11171 = OpFMul %float %float_n0_5 %11170
      %11172 = OpFMul %float %11093 %11093
      %11173 = OpFDiv %float %11171 %11172
      %11174 = OpExtInst %float %1 Exp %11173
      %11175 = OpFMul %float %float_2_50662827 %11093
      %11176 = OpFDiv %float %11174 %11175
      %11177 = OpExtInst %float %1 Fma %11145 %float_0_5 %float_1
      %11178 = OpFMul %float %11177 %11177
      %11179 = OpFMul %float %11178 %11178
      %11180 = OpFMul %float %11179 %11177
      %11181 = OpExtInst %float %1 Fma %float_0_953479409 %11180 %float_0_0465205647
      %11182 = OpFSub %float %float_1 %11181
      %11183 = OpFMul %float %11182 %11182
      %11184 = OpFMul %float %11183 %11181
      %11185 = OpFDiv %float %float_0_800000012 %11075
      %11186 = OpCompositeConstruct %v3float %11185 %11185 %11185
      %11187 = OpExtInst %v3float %1 Pow %11153 %11186
      %11188 = OpExtInst %float %1 Fma %float_17 %11085 %float_n16_7800007
      %11189 = OpExtInst %float %1 Exp %11188
      %11190 = OpFMul %float %11176 %11189
      %11191 = OpFMul %float %11190 %11184
      %11192 = OpVectorTimesScalar %v3float %11187 %11191
      %11193 = OpFAdd %v3float %11168 %11192
      %11194 = OpVectorTimesScalar %v3float %11193 %float_1
      %11195 = OpVectorShuffle %v3float %537 %131 3 4 5
      %11196 = OpExtInst %v3float %1 Fma %460 %11195 %11194
      %11197 = OpFNegate %v3float %11196
      %11198 = OpExtInst %v3float %1 NMin %11197 %106
      %11199 = OpFNegate %v3float %11198
      %11200 = OpVectorTimesScalar %v3float %11199 %float_6_28318548
      %11201 = OpExtInst %v3float %1 NMin %131 %11200
               OpBranch %11036
      %11037 = OpLabel
      %11202 = OpVectorShuffle %v3float %10778 %459 0 1 2
      %11203 = OpVectorShuffle %v3float %10788 %10788 0 1 2
      %11204 = OpCompositeConstruct %v2float %11033 %float_0_00100000005
      %11205 = OpSampledImage %type_sampled_image %10789 %10790
      %11206 = OpImageSampleExplicitLod %v4float %11205 %11204 Lod %float_0
      %11207 = OpCompositeExtract %float %11206 0
      %11208 = OpFSub %float %float_1 %11207
      %11209 = OpFDiv %float %11208 %11207
      %11210 = OpVectorTimesScalar %v3float %11203 %11209
      %11211 = OpFAdd %v3float %131 %11210
      %11212 = OpSelect %v3float %10794 %11211 %131
      %11213 = OpVectorTimesScalar %v3float %11203 %11207
      %11214 = OpFNegate %v3float %11203
      %11215 = OpCompositeExtract %float %11206 1
      %11216 = OpVectorTimesScalar %v3float %11214 %11215
      %11217 = OpFAdd %v3float %11213 %11216
      %11218 = OpFMul %v3float %11212 %11217
      %11219 = OpAccessChain %_ptr_Uniform_uint %View %uint_43
      %11220 = OpLoad %uint %11219
      %11221 = OpINotEqual %bool %11220 %uint_0
      %11222 = OpDot %float %11218 %175
      %11223 = OpFSub %float %float_1 %11222
      %11224 = OpSelect %float %11221 %11223 %float_1
      %11225 = OpVectorTimesScalar %v3float %11202 %11224
      %11226 = OpShiftRightLogical %uint %10918 %uint_2
      %11227 = OpBitwiseAnd %uint %11226 %uint_7
      %11228 = OpIEqual %bool %11227 %uint_4
               OpSelectionMerge %11229 DontFlatten
               OpBranchConditional %11228 %11230 %11229
      %11230 = OpLabel
      %11231 = OpExtInst %float %1 NMax %461 %461
      %11232 = OpExtInst %float %1 NMax %461 %11231
      %11233 = OpFSub %float %11232 %float_0_0399999991
      %11234 = OpExtInst %float %1 NMax %float_0 %11233
      %11235 = OpFMul %float %11234 %float_3
      %11236 = OpExtInst %float %1 FClamp %11235 %float_0 %float_1
      %11237 = OpFMul %float %11236 %11236
      %11238 = OpCompositeExtract %float %10778 0
      %11239 = OpExtInst %float %1 FClamp %11033 %float_0 %float_1
      %11240 = OpExtInst %float %1 FAbs %11239
      %11241 = OpExtInst %float %1 Fma %float_n0_156582996 %11240 %float_1_57079637
      %11242 = OpFSub %float %float_1 %11240
      %11243 = OpExtInst %float %1 Sqrt %11242
      %11244 = OpFMul %float %11241 %11243
      %11245 = OpFMul %float %11244 %float_0_636619747
      %11246 = OpExtInst %float %1 FClamp %11245 %float_0 %float_1
      %11247 = OpCompositeConstruct %v3float %float_0 %11238 %11246
      %11248 = OpExtInst %v3float %1 Fma %497 %11247 %496
      %11249 = OpLoad %type_3d_image_0 %View_SimpleVolumeEnvTexture
      %11250 = OpLoad %type_sampler %View_SimpleVolumeEnvTextureSampler
      %11251 = OpSampledImage %type_sampled_image_0 %11249 %11250
      %11252 = OpImageSampleExplicitLod %v4float %11251 %11248 Lod %float_0
      %11253 = OpCompositeExtract %float %11252 0
      %11254 = OpExtInst %float %1 Fma %float_10 %float_0_00158730161 %float_1
      %11255 = OpExtInst %float %1 FClamp %11254 %float_0 %float_1
      %11256 = OpFMul %float %11253 %11255
      %11257 = OpCompositeExtract %float %10778 1
      %11258 = OpCompositeConstruct %v3float %float_0 %11257 %11246
      %11259 = OpExtInst %v3float %1 Fma %497 %11258 %496
      %11260 = OpSampledImage %type_sampled_image_0 %11249 %11250
      %11261 = OpImageSampleExplicitLod %v4float %11260 %11259 Lod %float_0
      %11262 = OpCompositeExtract %float %11261 0
      %11263 = OpFMul %float %11262 %11255
      %11264 = OpCompositeExtract %float %10778 2
      %11265 = OpCompositeConstruct %v3float %float_0 %11264 %11246
      %11266 = OpExtInst %v3float %1 Fma %497 %11265 %496
      %11267 = OpSampledImage %type_sampled_image_0 %11249 %11250
      %11268 = OpImageSampleExplicitLod %v4float %11267 %11266 Lod %float_0
      %11269 = OpCompositeExtract %float %11268 0
      %11270 = OpFMul %float %11269 %11255
      %11271 = OpCompositeConstruct %v3float %11256 %11263 %11270
      %11272 = OpCompositeExtract %float %11225 0
      %11273 = OpCompositeExtract %float %11225 1
      %11274 = OpCompositeExtract %float %11225 2
      %11275 = OpExtInst %float %1 NMax %11273 %11274
      %11276 = OpExtInst %float %1 NMax %11272 %11275
      %11277 = OpExtInst %float %1 NMax %11263 %11270
      %11278 = OpExtInst %float %1 NMax %11256 %11277
      %11279 = OpFOrdLessThan %bool %11276 %11278
               OpSelectionMerge %11280 None
               OpBranchConditional %11279 %11281 %11280
      %11281 = OpLabel
      %11282 = OpFDiv %float %11276 %11278
      %11283 = OpVectorTimesScalar %v3float %11271 %11282
               OpBranch %11280
      %11280 = OpLabel
      %11284 = OpPhi %v3float %11271 %11230 %11283 %11281
      %11285 = OpVectorTimesScalar %v3float %11284 %11224
      %11286 = OpCompositeConstruct %v3float %11237 %11237 %11237
      %11287 = OpExtInst %v3float %1 FMix %11225 %11285 %11286
               OpBranch %11229
      %11229 = OpLabel
      %11288 = OpPhi %v3float %11225 %11037 %11287 %11280
      %11289 = OpIEqual %bool %11227 %uint_1
               OpSelectionMerge %11290 DontFlatten
               OpBranchConditional %11289 %11291 %11290
      %11291 = OpLabel
      %11292 = OpExtInst %v3float %1 NMax %356 %553
      %11293 = OpFDiv %v3float %131 %11292
      %11294 = OpExtInst %v3float %1 NMax %345 %11293
      %11295 = OpExtInst %float %1 FAbs %float_1
      %11296 = OpExtInst %float %1 NMax %float_9_99999975en05 %11295
      %11297 = OpFDiv %float %float_1 %11296
      %11298 = OpFNegate %v3float %11294
      %11299 = OpVectorTimesScalar %v3float %11298 %11297
      %11300 = OpExtInst %v3float %1 Exp %11299
      %11301 = OpFMul %v3float %498 %11300
      %11302 = OpVectorTimesScalar %v3float %11301 %11224
               OpBranch %11290
      %11290 = OpLabel
      %11303 = OpPhi %v3float %460 %11229 %11302 %11291
      %11304 = OpShiftRightLogical %uint %10918 %uint_9
      %11305 = OpBitwiseAnd %uint %11304 %uint_1
      %11306 = OpINotEqual %bool %11305 %uint_0
               OpSelectionMerge %11307 DontFlatten
               OpBranchConditional %11306 %11308 %11307
      %11308 = OpLabel
      %11309 = OpVectorTimesScalar %v3float %11202 %float_1
      %11310 = OpVectorTimesScalar %v3float %11288 %float_1
               OpBranch %11036
      %11307 = OpLabel
               OpBranch %11036
      %11036 = OpLabel
      %11311 = OpPhi %v3float %460 %11027 %11041 %11039 %11201 %11038 %11310 %11308 %11288 %11307
      %11312 = OpPhi %v3float %460 %11027 %11032 %11039 %11046 %11038 %11032 %11308 %11032 %11307
      %11313 = OpPhi %v3float %460 %11027 %460 %11039 %460 %11038 %11303 %11308 %11303 %11307
      %11314 = OpPhi %v3float %460 %11027 %11040 %11039 %460 %11038 %11309 %11308 %11202 %11307
      %11315 = OpFOrdGreaterThan %v3bool %11313 %106
      %11316 = OpAny %bool %11315
               OpSelectionMerge %11317 None
               OpBranchConditional %8457 %11318 %11317
      %11318 = OpLabel
      %11319 = OpVectorTimesScalar %v3float %593 %float_2097152
      %11320 = OpFAdd %v3float %11319 %643
      %11321 = OpAccessChain %_ptr_Uniform_v3float %IndirectLightingCache %uint_1
      %11322 = OpLoad %v3float %11321
      %11323 = OpAccessChain %_ptr_Uniform_v3float %IndirectLightingCache %int_0
      %11324 = OpLoad %v3float %11323
      %11325 = OpExtInst %v3float %1 Fma %11320 %11322 %11324
      %11326 = OpAccessChain %_ptr_Uniform_v3float %IndirectLightingCache %uint_2
      %11327 = OpLoad %v3float %11326
      %11328 = OpAccessChain %_ptr_Uniform_v3float %IndirectLightingCache %uint_3
      %11329 = OpLoad %v3float %11328
      %11330 = OpExtInst %v3float %1 FClamp %11325 %11327 %11329
      %11331 = OpLoad %type_3d_image_0 %IndirectLightingCache_IndirectLightingCacheTexture0
      %11332 = OpLoad %type_sampler %IndirectLightingCache_IndirectLightingCacheTextureSampler0
      %11333 = OpSampledImage %type_sampled_image_0 %11331 %11332
      %11334 = OpImageSampleImplicitLod %v4float %11333 %11330 None
      %11335 = OpLoad %type_3d_image_0 %IndirectLightingCache_IndirectLightingCacheTexture1
      %11336 = OpSampledImage %type_sampled_image_0 %11335 %10530
      %11337 = OpImageSampleImplicitLod %v4float %11336 %11330 None
      %11338 = OpLoad %type_3d_image_0 %IndirectLightingCache_IndirectLightingCacheTexture2
      %11339 = OpSampledImage %type_sampled_image_0 %11338 %10530
      %11340 = OpImageSampleImplicitLod %v4float %11339 %11330 None
      %11341 = OpCompositeExtract %float %11334 0
      %11342 = OpCompositeExtract %float %11337 0
      %11343 = OpCompositeExtract %float %11340 0
      %11344 = OpCompositeExtract %float %11334 3
      %11345 = OpCompositeConstruct %v4float %11341 %11342 %11343 %11344
      %11346 = OpCompositeExtract %float %11334 1
      %11347 = OpCompositeExtract %float %11337 1
      %11348 = OpCompositeExtract %float %11340 1
      %11349 = OpCompositeExtract %float %11337 3
      %11350 = OpCompositeConstruct %v4float %11346 %11347 %11348 %11349
      %11351 = OpCompositeExtract %float %11334 2
      %11352 = OpCompositeExtract %float %11337 2
      %11353 = OpCompositeExtract %float %11340 2
      %11354 = OpCompositeExtract %float %11340 3
      %11355 = OpCompositeConstruct %v4float %11351 %11352 %11353 %11354
      %11356 = OpCompositeExtract %float %11312 1
      %11357 = OpFMul %float %float_n0_488602996 %11356
      %11358 = OpCompositeInsert %v4float %11357 %550 1
      %11359 = OpCompositeExtract %float %11312 2
      %11360 = OpFMul %float %float_0_488602996 %11359
      %11361 = OpCompositeInsert %v4float %11360 %11358 2
      %11362 = OpCompositeExtract %float %11312 0
      %11363 = OpFMul %float %float_n0_488602996 %11362
      %11364 = OpCompositeInsert %v4float %11363 %11361 3
      %11365 = OpCompositeInsert %v4float %float_0_886227548 %11364 0
      %11366 = OpVectorShuffle %v3float %11365 %11365 1 2 3
      %11367 = OpVectorTimesScalar %v3float %11366 %float_2_09439516
      %11368 = OpVectorShuffle %v4float %11365 %11367 0 4 5 6
      %11369 = OpDot %float %11345 %11368
      %11370 = OpCompositeInsert %v3float %11369 %106 0
      %11371 = OpDot %float %11350 %11368
      %11372 = OpCompositeInsert %v3float %11371 %11370 1
      %11373 = OpDot %float %11355 %11368
      %11374 = OpCompositeInsert %v3float %11373 %11372 2
      %11375 = OpExtInst %v3float %1 NMax %106 %11374
      %11376 = OpFMul %v3float %11375 %498
               OpSelectionMerge %11377 None
               OpBranchConditional %11316 %11378 %11377
      %11378 = OpLabel
      %11379 = OpFNegate %v3float %11312
      %11380 = OpCompositeExtract %float %11379 1
      %11381 = OpFMul %float %float_n0_488602996 %11380
      %11382 = OpCompositeInsert %v4float %11381 %550 1
      %11383 = OpCompositeExtract %float %11379 2
      %11384 = OpFMul %float %float_0_488602996 %11383
      %11385 = OpCompositeInsert %v4float %11384 %11382 2
      %11386 = OpCompositeExtract %float %11379 0
      %11387 = OpFMul %float %float_n0_488602996 %11386
      %11388 = OpCompositeInsert %v4float %11387 %11385 3
      %11389 = OpCompositeInsert %v4float %float_0_886227548 %11388 0
      %11390 = OpVectorShuffle %v3float %11389 %11389 1 2 3
      %11391 = OpVectorTimesScalar %v3float %11390 %float_2_09439516
      %11392 = OpVectorShuffle %v4float %11389 %11391 0 4 5 6
      %11393 = OpDot %float %11345 %11392
      %11394 = OpCompositeInsert %v3float %11393 %551 0
      %11395 = OpDot %float %11350 %11392
      %11396 = OpCompositeInsert %v3float %11395 %11394 1
      %11397 = OpDot %float %11355 %11392
      %11398 = OpCompositeInsert %v3float %11397 %11396 2
      %11399 = OpExtInst %v3float %1 NMax %106 %11398
      %11400 = OpFMul %v3float %11399 %498
               OpBranch %11377
      %11377 = OpLabel
      %11401 = OpPhi %v3float %106 %11318 %11400 %11378
               OpBranch %11317
      %11317 = OpLabel
      %11402 = OpPhi %v3float %106 %11036 %11401 %11377
      %11403 = OpPhi %v3float %106 %11036 %11376 %11377
               OpSelectionMerge %11404 None
               OpBranchConditional %8625 %11405 %11404
      %11405 = OpLabel
      %11406 = OpAccessChain %_ptr_Uniform_float %View %uint_26
      %11407 = OpLoad %float %11406
      %11408 = OpFOrdNotEqual %bool %11407 %float_0
               OpSelectionMerge %11409 DontFlatten
               OpBranchConditional %11408 %11410 %11409
      %11410 = OpLabel
               OpSelectionMerge %11411 None
               OpBranchConditional %8457 %11412 %11411
      %11412 = OpLabel
      %11413 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_4
      %11414 = OpLoad %v4float %11413
      %11415 = OpVectorShuffle %v3float %11414 %11414 0 1 2
      %11416 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_4 %int_3
      %11417 = OpLoad %float %11416
               OpBranch %11411
      %11411 = OpLabel
      %11418 = OpPhi %v3float %11312 %11410 %11415 %11412
      %11419 = OpPhi %float %float_1 %11410 %11417 %11412
      %11420 = OpFSub %float %float_1 %11419
      %11421 = OpFSub %float %11419 %float_1
      %11422 = OpExtInst %float %1 Fma %11421 %11420 %float_1
      %11423 = OpCompositeConstruct %v3float %11422 %11422 %11422
      %11424 = OpExtInst %v3float %1 FMix %11418 %11312 %11423
      %11425 = OpDot %float %11418 %11312
      %11426 = OpExtInst %float %1 FClamp %11425 %float_0 %float_1
      %11427 = OpExtInst %float %1 FMix %11426 %float_1 %11422
               OpBranch %11409
      %11409 = OpLabel
      %11428 = OpPhi %float %float_1 %11405 %11427 %11411
      %11429 = OpPhi %float %float_1 %11405 %11419 %11411
      %11430 = OpPhi %v3float %11312 %11405 %11424 %11411
      %11431 = OpCompositeExtract %float %11430 0
      %11432 = OpCompositeExtract %float %11430 1
      %11433 = OpCompositeExtract %float %11430 2
      %11434 = OpCompositeConstruct %v4float %11431 %11432 %11433 %float_1
      %11435 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_0
      %11436 = OpLoad %v4float %11435
      %11437 = OpDot %float %11436 %11434
      %11438 = OpCompositeInsert %v3float %11437 %540 0
      %11439 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_1
      %11440 = OpLoad %v4float %11439
      %11441 = OpDot %float %11440 %11434
      %11442 = OpCompositeInsert %v3float %11441 %11438 1
      %11443 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_2
      %11444 = OpLoad %v4float %11443
      %11445 = OpDot %float %11444 %11434
      %11446 = OpCompositeInsert %v3float %11445 %11442 2
      %11447 = OpVectorShuffle %v4float %11434 %11434 0 1 2 2
      %11448 = OpVectorShuffle %v4float %11434 %11434 1 2 2 0
      %11449 = OpFMul %v4float %11447 %11448
      %11450 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_3
      %11451 = OpLoad %v4float %11450
      %11452 = OpDot %float %11451 %11449
      %11453 = OpCompositeInsert %v3float %11452 %540 0
      %11454 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_4
      %11455 = OpLoad %v4float %11454
      %11456 = OpDot %float %11455 %11449
      %11457 = OpCompositeInsert %v3float %11456 %11453 1
      %11458 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_5
      %11459 = OpLoad %v4float %11458
      %11460 = OpDot %float %11459 %11449
      %11461 = OpCompositeInsert %v3float %11460 %11457 2
      %11462 = OpFMul %float %11432 %11432
      %11463 = OpFNegate %float %11462
      %11464 = OpExtInst %float %1 Fma %11431 %11431 %11463
      %11465 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_6
      %11466 = OpLoad %v4float %11465
      %11467 = OpVectorShuffle %v3float %11466 %11466 0 1 2
      %11468 = OpVectorTimesScalar %v3float %11467 %11464
      %11469 = OpFAdd %v3float %11446 %11461
      %11470 = OpFAdd %v3float %11469 %11468
      %11471 = OpExtInst %v3float %1 NMax %106 %11470
      %11472 = OpVectorShuffle %v3float %621 %621 0 1 2
      %11473 = OpFMul %v3float %11471 %11472
      %11474 = OpFMul %float %11429 %11428
      %11475 = OpVectorTimesScalar %v3float %11473 %11474
               OpSelectionMerge %11476 None
               OpBranchConditional %11316 %11477 %11476
      %11477 = OpLabel
      %11478 = OpFNegate %v3float %11312
      %11479 = OpCompositeExtract %float %11478 0
      %11480 = OpCompositeExtract %float %11478 1
      %11481 = OpCompositeExtract %float %11478 2
      %11482 = OpCompositeConstruct %v4float %11479 %11480 %11481 %float_1
      %11483 = OpLoad %v4float %11435
      %11484 = OpDot %float %11483 %11482
      %11485 = OpCompositeInsert %v3float %11484 %551 0
      %11486 = OpLoad %v4float %11439
      %11487 = OpDot %float %11486 %11482
      %11488 = OpCompositeInsert %v3float %11487 %11485 1
      %11489 = OpLoad %v4float %11443
      %11490 = OpDot %float %11489 %11482
      %11491 = OpCompositeInsert %v3float %11490 %11488 2
      %11492 = OpVectorShuffle %v4float %11482 %11482 0 1 2 2
      %11493 = OpVectorShuffle %v4float %11482 %11482 1 2 2 0
      %11494 = OpFMul %v4float %11492 %11493
      %11495 = OpLoad %v4float %11450
      %11496 = OpDot %float %11495 %11494
      %11497 = OpCompositeInsert %v3float %11496 %551 0
      %11498 = OpLoad %v4float %11454
      %11499 = OpDot %float %11498 %11494
      %11500 = OpCompositeInsert %v3float %11499 %11497 1
      %11501 = OpLoad %v4float %11458
      %11502 = OpDot %float %11501 %11494
      %11503 = OpCompositeInsert %v3float %11502 %11500 2
      %11504 = OpFMul %float %11480 %11480
      %11505 = OpFNegate %float %11504
      %11506 = OpExtInst %float %1 Fma %11479 %11479 %11505
      %11507 = OpLoad %v4float %11465
      %11508 = OpVectorShuffle %v3float %11507 %11507 0 1 2
      %11509 = OpVectorTimesScalar %v3float %11508 %11506
      %11510 = OpFAdd %v3float %11491 %11503
      %11511 = OpFAdd %v3float %11510 %11509
      %11512 = OpExtInst %v3float %1 NMax %106 %11511
      %11513 = OpFMul %v3float %11512 %11472
      %11514 = OpVectorTimesScalar %v3float %11513 %11429
               OpBranch %11476
      %11476 = OpLabel
      %11515 = OpPhi %v3float %106 %11409 %11514 %11477
               OpBranch %11404
      %11404 = OpLabel
      %11516 = OpPhi %v3float %106 %11317 %11475 %11476
      %11517 = OpPhi %v3float %106 %11317 %11515 %11476
      %11518 = OpExtInst %v3float %1 Fma %11402 %8622 %11517
      %11519 = OpExtInst %v3float %1 Fma %11403 %8622 %11516
      %11520 = OpDot %float %11519 %175
      %11521 = OpVectorTimesScalar %v3float %11314 %float_2_04040003
      %11522 = OpFSub %v3float %11521 %178
      %11523 = OpVectorTimesScalar %v3float %11314 %float_n4_79510021
      %11524 = OpFAdd %v3float %11523 %181
      %11525 = OpVectorTimesScalar %v3float %11314 %float_2_75519991
      %11526 = OpFAdd %v3float %11525 %184
      %11527 = OpVectorTimesScalar %v3float %11522 %float_1
      %11528 = OpFAdd %v3float %11527 %11524
      %11529 = OpVectorTimesScalar %v3float %11528 %float_1
      %11530 = OpFAdd %v3float %11529 %11526
      %11531 = OpVectorTimesScalar %v3float %11530 %float_1
      %11532 = OpExtInst %v3float %1 NMax %131 %11531
      %11533 = OpExtInst %v3float %1 NMax %131 %519
      %11534 = OpCompositeExtract %float %11533 1
      %11535 = OpCompositeInsert %v2float %11534 %552 0
      %11536 = OpCompositeInsert %v2float %11520 %11535 1
      %11537 = OpFMul %v3float %11518 %11313
      %11538 = OpExtInst %v3float %1 Fma %11519 %11311 %11537
      %11539 = OpExtInst %v3float %1 Fma %11538 %11532 %10919
               OpBranch %11026
      %11026 = OpLabel
      %11540 = OpPhi %v3float %10919 %10938 %11539 %11404
      %11541 = OpPhi %float %float_0 %10938 %float_1 %11404
      %11542 = OpPhi %v2float %128 %10938 %11536 %11404
      %11543 = OpExtInst %float %1 NMax %float_1 %11541
      %11544 = OpFDiv %float %float_1 %11543
      %11545 = OpVectorTimesScalar %v2float %11542 %11544
      %11546 = OpCompositeExtract %float %11545 0
      %11547 = OpCompositeExtract %float %11545 1
      %11548 = OpBitwiseAnd %uint %11025 %uint_4294902015
      %11549 = OpFMul %float %11547 %11546
      %11550 = OpAccessChain %_ptr_Uniform_float %View %uint_13
      %11551 = OpLoad %float %11550
      %11552 = OpExtInst %float %1 Fma %11549 %11551 %float_0_00390625
      %11553 = OpExtInst %float %1 Log2 %11552
      %11554 = OpExtInst %float %1 Fma %11553 %float_0_0625 %float_0_5
      %11555 = OpFMul %float %11554 %float_255
      %11556 = OpExtInst %float %1 NMin %float_255 %11555
      %11557 = OpConvertFToU %uint %11556
      %11558 = OpBitwiseAnd %uint %11557 %uint_255
      %11559 = OpShiftLeftLogical %uint %11558 %uint_8
      %11560 = OpBitwiseOr %uint %11548 %11559
      %11561 = OpBitwiseAnd %uint %11560 %uint_7
      %11562 = OpIEqual %bool %11561 %uint_1
      %11563 = OpLogicalOr %bool %11562 %false
      %11564 = OpIEqual %bool %11561 %uint_4
      %11565 = OpIEqual %bool %11561 %uint_2
      %11566 = OpLogicalOr %bool %11565 %false
      %11567 = OpIEqual %bool %11561 %uint_5
      %11568 = OpIEqual %bool %11561 %uint_6
      %11569 = OpLogicalOr %bool %11567 %11568
      %11570 = OpLogicalNot %bool %11563
      %11571 = OpLogicalNot %bool %11566
      %11572 = OpLogicalAnd %bool %11570 %11571
      %11573 = OpLogicalNot %bool %11569
      %11574 = OpLogicalAnd %bool %11572 %11573
      %11575 = OpLogicalNot %bool %11564
      %11576 = OpLogicalAnd %bool %11574 %11575
               OpSelectionMerge %11577 None
               OpBranchConditional %11576 %11578 %11577
      %11578 = OpLabel
      %11579 = OpBitwiseAnd %uint %10928 %uint_15
      %11580 = OpShiftLeftLogical %uint %11579 %uint_16
      %11581 = OpBitwiseOr %uint %uint_0 %11580
      %11582 = OpBitwiseAnd %uint %11581 %uint_4287627263
      %11583 = OpBitwiseOr %uint %11582 %uint_1048576
      %11584 = OpBitwiseAnd %uint %11583 %uint_4169138175
      %11585 = OpBitwiseOr %uint %11584 %uint_0
      %11586 = OpBitwiseAnd %uint %11560 %uint_134217728
      %11587 = OpBitwiseOr %uint %11585 %11586
      %11588 = OpBitwiseAnd %uint %11587 %uint_4294901760
      %11589 = OpBitwiseAnd %uint %11560 %uint_65535
      %11590 = OpShiftLeftLogical %uint %11589 %uint_0
      %11591 = OpBitwiseOr %uint %11588 %11590
      %11592 = OpExtInst %v3float %1 FAbs %10774
      %11593 = OpDot %float %131 %11592
      %11594 = OpCompositeConstruct %v2float %11593 %11593
      %11595 = OpVectorShuffle %v2float %10774 %10774 0 1
      %11596 = OpFDiv %v2float %11595 %11594
      %11597 = OpVectorShuffle %v3float %10774 %11596 3 4 2
      %11598 = OpCompositeExtract %float %10774 2
      %11599 = OpFOrdLessThanEqual %bool %11598 %float_0
               OpSelectionMerge %11600 None
               OpBranchConditional %11599 %11601 %11600
      %11601 = OpLabel
      %11602 = OpVectorShuffle %v2float %11596 %460 1 0
      %11603 = OpExtInst %v2float %1 FAbs %11602
      %11604 = OpFSub %v2float %315 %11603
      %11605 = OpVectorShuffle %v2float %11596 %460 0 1
      %11606 = OpFOrdGreaterThanEqual %v2bool %11605 %128
      %11607 = OpCompositeExtract %bool %11606 0
      %11608 = OpSelect %float %11607 %float_1 %float_n1
      %11609 = OpCompositeExtract %bool %11606 1
      %11610 = OpSelect %float %11609 %float_1 %float_n1
      %11611 = OpCompositeConstruct %v2float %11608 %11610
      %11612 = OpFMul %v2float %11604 %11611
      %11613 = OpVectorShuffle %v3float %10774 %11612 3 4 2
               OpBranch %11600
      %11600 = OpLabel
      %11614 = OpPhi %v3float %11597 %11578 %11613 %11601
      %11615 = OpCompositeExtract %float %11614 0
      %11616 = OpCompositeExtract %float %11614 1
      %11617 = OpCompositeConstruct %v2float %11615 %float_0
      %11618 = OpExtInst %uint %1 PackHalf2x16 %11617
      %11619 = OpCompositeConstruct %v2float %11616 %float_0
      %11620 = OpExtInst %uint %1 PackHalf2x16 %11619
      %11621 = OpShiftLeftLogical %uint %11620 %uint_16
      %11622 = OpBitwiseOr %uint %11618 %11621
               OpBranch %11577
      %11577 = OpLabel
      %11623 = OpPhi %uint %uint_0 %11026 %11622 %11600
      %11624 = OpPhi %uint %uint_0 %11026 %11591 %11600
      %11625 = OpSelect %uint %11576 %uint_2 %uint_0
               OpSelectionMerge %11626 DontFlatten
               OpBranchConditional %10795 %11627 %11626
      %11627 = OpLabel
      %11628 = OpBitwiseAnd %uint %10918 %uint_4294967263
      %11629 = OpBitwiseOr %uint %11628 %uint_32
      %11630 = OpAny %bool %555
      %11631 = OpBitwiseAnd %uint %11629 %uint_4294901759
      %11632 = OpSelect %uint %11630 %uint_1 %uint_0
      %11633 = OpBitwiseAnd %uint %11632 %uint_1
      %11634 = OpShiftLeftLogical %uint %11633 %uint_16
      %11635 = OpBitwiseOr %uint %11631 %11634
      %11636 = OpLogicalAnd %bool %11563 %true
               OpSelectionMerge %11637 None
               OpBranchConditional %11636 %11638 %11639
      %11639 = OpLabel
      %11640 = OpLogicalAnd %bool %11566 %true
               OpSelectionMerge %11641 None
               OpBranchConditional %11640 %11642 %11643
      %11643 = OpLabel
               OpSelectionMerge %11644 None
               OpBranchConditional %11568 %11645 %11646
      %11646 = OpLabel
               OpSelectionMerge %11647 None
               OpBranchConditional %11567 %11648 %11649
      %11649 = OpLabel
               OpSelectionMerge %11650 None
               OpBranchConditional %11564 %11651 %11652
      %11652 = OpLabel
      %11653 = OpBitwiseAnd %uint %11635 %uint_4194303
      %11654 = OpExtInst %uint %1 PackHalf2x16 %279
      %11655 = OpShiftRightLogical %uint %11654 %uint_5
      %11656 = OpBitwiseAnd %uint %11655 %uint_1023
      %11657 = OpBitwiseAnd %uint %11656 %uint_1023
      %11658 = OpShiftLeftLogical %uint %11657 %uint_22
      %11659 = OpBitwiseOr %uint %11653 %11658
      %11660 = OpULessThan %bool %11625 %uint_3
               OpSelectionMerge %11661 None
               OpBranchConditional %11660 %11662 %11663
      %11663 = OpLabel
      %11664 = OpISub %uint %11625 %uint_3
      %11665 = OpCompositeExtract %uint %10775 0
      %11666 = OpCompositeExtract %uint %10775 1
      %11667 = OpCompositeConstruct %v3uint %11665 %11666 %11664
               OpImageWrite %10776 %11667 %11659 None
               OpBranch %11661
      %11662 = OpLabel
      %11668 = OpIEqual %bool %11625 %uint_0
      %11669 = OpSelect %uint %11668 %11659 %11624
      %11670 = OpIEqual %bool %11625 %uint_1
      %11671 = OpSelect %uint %11670 %11659 %11623
      %11672 = OpIEqual %bool %11625 %uint_2
      %11673 = OpSelect %uint %11672 %11659 %uint_0
               OpBranch %11661
      %11661 = OpLabel
      %11674 = OpPhi %uint %uint_0 %11663 %11673 %11662
      %11675 = OpPhi %uint %11623 %11663 %11671 %11662
      %11676 = OpPhi %uint %11624 %11663 %11669 %11662
      %11677 = OpIAdd %uint %11625 %uint_1
               OpBranch %11650
      %11651 = OpLabel
      %11678 = OpVectorShuffle %v3float %10778 %459 0 1 2
      %11679 = OpFSub %float %8390 %float_0_5
      %11680 = OpFMul %float %11679 %float_0_00787401572
      %11681 = OpFMul %float %11679 %float_0_0158730168
      %11682 = OpCompositeConstruct %v3float %11680 %11680 %11681
      %11683 = OpExtInst %v3float %1 FClamp %11678 %106 %131
      %11684 = OpCompositeExtract %float %11683 0
               OpSelectionMerge %11685 None
               OpSwitch %uint_0 %11686
      %11686 = OpLabel
      %11687 = OpFOrdLessThan %bool %11684 %float_0_00313066994
               OpSelectionMerge %11688 None
               OpBranchConditional %11687 %11689 %11688
      %11689 = OpLabel
      %11690 = OpFMul %float %11684 %float_12_9200001
               OpBranch %11685
      %11688 = OpLabel
      %11691 = OpExtInst %float %1 Pow %11684 %float_0_416666657
      %11692 = OpExtInst %float %1 Fma %11691 %float_1_05499995 %float_n0_0549999997
               OpBranch %11685
      %11685 = OpLabel
      %11693 = OpPhi %float %11690 %11689 %11692 %11688
      %11694 = OpCompositeExtract %float %11683 1
               OpSelectionMerge %11695 None
               OpSwitch %uint_0 %11696
      %11696 = OpLabel
      %11697 = OpFOrdLessThan %bool %11694 %float_0_00313066994
               OpSelectionMerge %11698 None
               OpBranchConditional %11697 %11699 %11698
      %11699 = OpLabel
      %11700 = OpFMul %float %11694 %float_12_9200001
               OpBranch %11695
      %11698 = OpLabel
      %11701 = OpExtInst %float %1 Pow %11694 %float_0_416666657
      %11702 = OpExtInst %float %1 Fma %11701 %float_1_05499995 %float_n0_0549999997
               OpBranch %11695
      %11695 = OpLabel
      %11703 = OpPhi %float %11700 %11699 %11702 %11698
      %11704 = OpCompositeExtract %float %11683 2
               OpSelectionMerge %11705 None
               OpSwitch %uint_0 %11706
      %11706 = OpLabel
      %11707 = OpFOrdLessThan %bool %11704 %float_0_00313066994
               OpSelectionMerge %11708 None
               OpBranchConditional %11707 %11709 %11708
      %11709 = OpLabel
      %11710 = OpFMul %float %11704 %float_12_9200001
               OpBranch %11705
      %11708 = OpLabel
      %11711 = OpExtInst %float %1 Pow %11704 %float_0_416666657
      %11712 = OpExtInst %float %1 Fma %11711 %float_1_05499995 %float_n0_0549999997
               OpBranch %11705
      %11705 = OpLabel
      %11713 = OpPhi %float %11710 %11709 %11712 %11708
      %11714 = OpCompositeConstruct %v3float %11693 %11703 %11713
      %11715 = OpBitcast %v3uint %11714
      %11716 = OpBitwiseAnd %v3uint %11715 %349
      %11717 = OpExtInst %v3uint %1 UMin %11716 %500
      %11718 = OpConvertUToF %v3float %11717
      %11719 = OpExtInst %v3float %1 Fma %11682 %11718 %11714
      %11720 = OpExtInst %v3float %1 FClamp %11719 %106 %131
      %11721 = OpCompositeExtract %float %11720 0
      %11722 = OpFMul %float %11721 %float_127
      %11723 = OpConvertFToU %uint %11722
      %11724 = OpShiftLeftLogical %uint %11723 %uint_0
      %11725 = OpCompositeExtract %float %11720 1
      %11726 = OpFMul %float %11725 %float_127
      %11727 = OpConvertFToU %uint %11726
      %11728 = OpShiftLeftLogical %uint %11727 %uint_7
      %11729 = OpCompositeExtract %float %11720 2
      %11730 = OpFMul %float %11729 %float_63
      %11731 = OpConvertFToU %uint %11730
      %11732 = OpShiftLeftLogical %uint %11731 %uint_14
      %11733 = OpBitwiseOr %uint %11724 %11728
      %11734 = OpBitwiseOr %uint %11733 %11732
      %11735 = OpBitwiseAnd %uint %11734 %uint_4095
      %11736 = OpShiftRightLogical %uint %11734 %uint_12
      %11737 = OpBitwiseAnd %uint %11736 %uint_255
      %11738 = OpExtInst %float %1 FClamp %10785 %float_0 %float_1
      %11739 = OpFMul %float %11738 %float_255
      %11740 = OpConvertFToU %uint %11739
      %11741 = OpCompositeConstruct %v3float %10787 %float_0 %10781
      %11742 = OpExtInst %v3float %1 FClamp %11741 %106 %131
      %11743 = OpBitcast %v3uint %11742
      %11744 = OpBitwiseAnd %v3uint %11743 %349
      %11745 = OpExtInst %v3uint %1 UMin %11744 %500
      %11746 = OpConvertUToF %v3float %11745
      %11747 = OpExtInst %v3float %1 Fma %11682 %11746 %11742
      %11748 = OpExtInst %v3float %1 FClamp %11747 %106 %131
      %11749 = OpCompositeExtract %float %11748 0
      %11750 = OpFMul %float %11749 %float_127
      %11751 = OpConvertFToU %uint %11750
      %11752 = OpShiftLeftLogical %uint %11751 %uint_0
      %11753 = OpCompositeExtract %float %11748 1
      %11754 = OpFMul %float %11753 %float_127
      %11755 = OpConvertFToU %uint %11754
      %11756 = OpShiftLeftLogical %uint %11755 %uint_7
      %11757 = OpCompositeExtract %float %11748 2
      %11758 = OpFMul %float %11757 %float_63
      %11759 = OpConvertFToU %uint %11758
      %11760 = OpShiftLeftLogical %uint %11759 %uint_14
      %11761 = OpBitwiseOr %uint %11752 %11756
      %11762 = OpBitwiseOr %uint %11761 %11760
      %11763 = OpBitwiseAnd %uint %11560 %uint_65535
      %11764 = OpShiftLeftLogical %uint %11763 %uint_0
      %11765 = OpBitwiseOr %uint %uint_0 %11764
      %11766 = OpShiftLeftLogical %uint %11737 %uint_8
      %11767 = OpBitwiseOr %uint %11766 %11740
      %11768 = OpBitwiseAnd %uint %11765 %uint_65535
      %11769 = OpShiftLeftLogical %uint %11767 %uint_16
      %11770 = OpBitwiseOr %uint %11768 %11769
      %11771 = OpULessThan %bool %11625 %uint_3
               OpSelectionMerge %11772 None
               OpBranchConditional %11771 %11773 %11774
      %11774 = OpLabel
      %11775 = OpISub %uint %11625 %uint_3
      %11776 = OpCompositeExtract %uint %10775 0
      %11777 = OpCompositeExtract %uint %10775 1
      %11778 = OpCompositeConstruct %v3uint %11776 %11777 %11775
               OpImageWrite %10776 %11778 %11770 None
               OpBranch %11772
      %11773 = OpLabel
      %11779 = OpIEqual %bool %11625 %uint_0
      %11780 = OpSelect %uint %11779 %11770 %11624
      %11781 = OpIEqual %bool %11625 %uint_1
      %11782 = OpSelect %uint %11781 %11770 %11623
      %11783 = OpIEqual %bool %11625 %uint_2
      %11784 = OpSelect %uint %11783 %11770 %uint_0
               OpBranch %11772
      %11772 = OpLabel
      %11785 = OpPhi %uint %uint_0 %11774 %11784 %11773
      %11786 = OpPhi %uint %11623 %11774 %11782 %11773
      %11787 = OpPhi %uint %11624 %11774 %11780 %11773
      %11788 = OpIAdd %uint %11625 %uint_1
      %11789 = OpShiftLeftLogical %uint %11735 %uint_20
      %11790 = OpBitwiseOr %uint %11789 %11762
      %11791 = OpULessThan %bool %11788 %uint_3
               OpSelectionMerge %11792 None
               OpBranchConditional %11791 %11793 %11794
      %11794 = OpLabel
      %11795 = OpIAdd %uint %11625 %uint_4294967294
      %11796 = OpCompositeExtract %uint %10775 0
      %11797 = OpCompositeExtract %uint %10775 1
      %11798 = OpCompositeConstruct %v3uint %11796 %11797 %11795
               OpImageWrite %10776 %11798 %11790 None
               OpBranch %11792
      %11793 = OpLabel
      %11799 = OpIEqual %bool %11788 %uint_0
      %11800 = OpSelect %uint %11799 %11790 %11787
      %11801 = OpIEqual %bool %11788 %uint_1
      %11802 = OpSelect %uint %11801 %11790 %11786
      %11803 = OpIEqual %bool %11788 %uint_2
      %11804 = OpSelect %uint %11803 %11790 %11785
               OpBranch %11792
      %11792 = OpLabel
      %11805 = OpPhi %uint %11785 %11794 %11804 %11793
      %11806 = OpPhi %uint %11786 %11794 %11802 %11793
      %11807 = OpPhi %uint %11787 %11794 %11800 %11793
      %11808 = OpIAdd %uint %11625 %uint_2
               OpBranch %11650
      %11650 = OpLabel
      %11809 = OpPhi %uint %11659 %11661 %uint_0 %11792
      %11810 = OpPhi %uint %11674 %11661 %11805 %11792
      %11811 = OpPhi %uint %11675 %11661 %11806 %11792
      %11812 = OpPhi %uint %11676 %11661 %11807 %11792
      %11813 = OpPhi %uint %11677 %11661 %11808 %11792
               OpBranch %11647
      %11648 = OpLabel
      %11814 = OpBitwiseAnd %uint %11560 %uint_65535
      %11815 = OpShiftLeftLogical %uint %11814 %uint_0
      %11816 = OpBitwiseOr %uint %uint_0 %11815
      %11817 = OpBitwiseAnd %uint %11816 %uint_65535
      %11818 = OpULessThan %bool %11625 %uint_3
               OpSelectionMerge %11819 None
               OpBranchConditional %11818 %11820 %11821
      %11821 = OpLabel
      %11822 = OpISub %uint %11625 %uint_3
      %11823 = OpCompositeExtract %uint %10775 0
      %11824 = OpCompositeExtract %uint %10775 1
      %11825 = OpCompositeConstruct %v3uint %11823 %11824 %11822
               OpImageWrite %10776 %11825 %11817 None
               OpBranch %11819
      %11820 = OpLabel
      %11826 = OpIEqual %bool %11625 %uint_0
      %11827 = OpSelect %uint %11826 %11817 %11624
      %11828 = OpIEqual %bool %11625 %uint_1
      %11829 = OpSelect %uint %11828 %11817 %11623
      %11830 = OpIEqual %bool %11625 %uint_2
      %11831 = OpSelect %uint %11830 %11817 %uint_0
               OpBranch %11819
      %11819 = OpLabel
      %11832 = OpPhi %uint %uint_0 %11821 %11831 %11820
      %11833 = OpPhi %uint %11623 %11821 %11829 %11820
      %11834 = OpPhi %uint %11624 %11821 %11827 %11820
      %11835 = OpIAdd %uint %11625 %uint_1
               OpBranch %11647
      %11647 = OpLabel
      %11836 = OpPhi %uint %11809 %11650 %11635 %11819
      %11837 = OpPhi %uint %11810 %11650 %11832 %11819
      %11838 = OpPhi %uint %11811 %11650 %11833 %11819
      %11839 = OpPhi %uint %11812 %11650 %11834 %11819
      %11840 = OpPhi %uint %11813 %11650 %11835 %11819
               OpBranch %11644
      %11645 = OpLabel
      %11841 = OpBitwiseAnd %uint %11560 %uint_65535
      %11842 = OpShiftLeftLogical %uint %11841 %uint_0
      %11843 = OpBitwiseOr %uint %uint_0 %11842
      %11844 = OpBitwiseAnd %uint %11843 %uint_65535
      %11845 = OpExtInst %float %1 FClamp %10781 %float_0 %float_1
      %11846 = OpFMul %float %11845 %float_255
      %11847 = OpConvertFToU %uint %11846
      %11848 = OpShiftLeftLogical %uint %11847 %uint_16
      %11849 = OpBitwiseOr %uint %uint_0 %11848
      %11850 = OpBitwiseOr %uint %11849 %uint_0
      %11851 = OpBitwiseOr %uint %11844 %11850
      %11852 = OpULessThan %bool %11625 %uint_3
               OpSelectionMerge %11853 None
               OpBranchConditional %11852 %11854 %11855
      %11855 = OpLabel
      %11856 = OpISub %uint %11625 %uint_3
      %11857 = OpCompositeExtract %uint %10775 0
      %11858 = OpCompositeExtract %uint %10775 1
      %11859 = OpCompositeConstruct %v3uint %11857 %11858 %11856
               OpImageWrite %10776 %11859 %11851 None
               OpBranch %11853
      %11854 = OpLabel
      %11860 = OpIEqual %bool %11625 %uint_0
      %11861 = OpSelect %uint %11860 %11851 %11624
      %11862 = OpIEqual %bool %11625 %uint_1
      %11863 = OpSelect %uint %11862 %11851 %11623
      %11864 = OpIEqual %bool %11625 %uint_2
      %11865 = OpSelect %uint %11864 %11851 %uint_0
               OpBranch %11853
      %11853 = OpLabel
      %11866 = OpPhi %uint %uint_0 %11855 %11865 %11854
      %11867 = OpPhi %uint %11623 %11855 %11863 %11854
      %11868 = OpPhi %uint %11624 %11855 %11861 %11854
      %11869 = OpIAdd %uint %11625 %uint_1
               OpBranch %11644
      %11644 = OpLabel
      %11870 = OpPhi %uint %11836 %11647 %11635 %11853
      %11871 = OpPhi %uint %11837 %11647 %11866 %11853
      %11872 = OpPhi %uint %11838 %11647 %11867 %11853
      %11873 = OpPhi %uint %11839 %11647 %11868 %11853
      %11874 = OpPhi %uint %11840 %11647 %11869 %11853
               OpBranch %11641
      %11642 = OpLabel
      %11875 = OpBitwiseAnd %uint %11635 %uint_4294967293
      %11876 = OpBitwiseOr %uint %11875 %uint_2
      %11877 = OpBitwiseAnd %uint %11560 %uint_65535
      %11878 = OpShiftLeftLogical %uint %11877 %uint_0
      %11879 = OpBitwiseOr %uint %uint_0 %11878
      %11880 = OpBitwiseAnd %uint %11879 %uint_65535
      %11881 = OpBitwiseAnd %uint %11023 %uint_7
      %11882 = OpShiftLeftLogical %uint %11881 %uint_16
      %11883 = OpBitwiseOr %uint %11880 %11882
      %11884 = OpIEqual %bool %11023 %uint_0
               OpSelectionMerge %11885 DontFlatten
               OpBranchConditional %11884 %11886 %11887
      %11887 = OpLabel
      %11888 = OpIEqual %bool %11023 %uint_1
               OpSelectionMerge %11889 None
               OpBranchConditional %11888 %11890 %11891
      %11891 = OpLabel
      %11892 = OpIEqual %bool %11023 %uint_2
               OpSelectionMerge %11893 None
               OpBranchConditional %11892 %11894 %11895
      %11895 = OpLabel
      %11896 = OpIEqual %bool %11023 %uint_3
      %11897 = OpIEqual %bool %11023 %uint_5
      %11898 = OpLogicalOr %bool %11896 %11897
               OpSelectionMerge %11899 None
               OpBranchConditional %11898 %11900 %11901
      %11901 = OpLabel
      %11902 = OpIEqual %bool %11023 %uint_4
               OpSelectionMerge %11903 None
               OpBranchConditional %11902 %11904 %11903
      %11904 = OpLabel
      %11905 = OpVectorShuffle %v3float %10778 %459 0 1 2
      %11906 = OpFSub %float %8390 %float_0_5
      %11907 = OpFMul %float %11906 %float_0_00787401572
      %11908 = OpFMul %float %11906 %float_0_0158730168
      %11909 = OpCompositeConstruct %v3float %11907 %11907 %11908
      %11910 = OpExtInst %v3float %1 FClamp %11905 %106 %131
      %11911 = OpCompositeExtract %float %11910 0
               OpSelectionMerge %11912 None
               OpSwitch %uint_0 %11913
      %11913 = OpLabel
      %11914 = OpFOrdLessThan %bool %11911 %float_0_00313066994
               OpSelectionMerge %11915 None
               OpBranchConditional %11914 %11916 %11915
      %11916 = OpLabel
      %11917 = OpFMul %float %11911 %float_12_9200001
               OpBranch %11912
      %11915 = OpLabel
      %11918 = OpExtInst %float %1 Pow %11911 %float_0_416666657
      %11919 = OpExtInst %float %1 Fma %11918 %float_1_05499995 %float_n0_0549999997
               OpBranch %11912
      %11912 = OpLabel
      %11920 = OpPhi %float %11917 %11916 %11919 %11915
      %11921 = OpCompositeExtract %float %11910 1
               OpSelectionMerge %11922 None
               OpSwitch %uint_0 %11923
      %11923 = OpLabel
      %11924 = OpFOrdLessThan %bool %11921 %float_0_00313066994
               OpSelectionMerge %11925 None
               OpBranchConditional %11924 %11926 %11925
      %11926 = OpLabel
      %11927 = OpFMul %float %11921 %float_12_9200001
               OpBranch %11922
      %11925 = OpLabel
      %11928 = OpExtInst %float %1 Pow %11921 %float_0_416666657
      %11929 = OpExtInst %float %1 Fma %11928 %float_1_05499995 %float_n0_0549999997
               OpBranch %11922
      %11922 = OpLabel
      %11930 = OpPhi %float %11927 %11926 %11929 %11925
      %11931 = OpCompositeExtract %float %11910 2
               OpSelectionMerge %11932 None
               OpSwitch %uint_0 %11933
      %11933 = OpLabel
      %11934 = OpFOrdLessThan %bool %11931 %float_0_00313066994
               OpSelectionMerge %11935 None
               OpBranchConditional %11934 %11936 %11935
      %11936 = OpLabel
      %11937 = OpFMul %float %11931 %float_12_9200001
               OpBranch %11932
      %11935 = OpLabel
      %11938 = OpExtInst %float %1 Pow %11931 %float_0_416666657
      %11939 = OpExtInst %float %1 Fma %11938 %float_1_05499995 %float_n0_0549999997
               OpBranch %11932
      %11932 = OpLabel
      %11940 = OpPhi %float %11937 %11936 %11939 %11935
      %11941 = OpCompositeConstruct %v3float %11920 %11930 %11940
      %11942 = OpBitcast %v3uint %11941
      %11943 = OpBitwiseAnd %v3uint %11942 %349
      %11944 = OpExtInst %v3uint %1 UMin %11943 %500
      %11945 = OpConvertUToF %v3float %11944
      %11946 = OpExtInst %v3float %1 Fma %11909 %11945 %11941
      %11947 = OpExtInst %v3float %1 FClamp %11946 %106 %131
      %11948 = OpCompositeExtract %float %11947 0
      %11949 = OpFMul %float %11948 %float_127
      %11950 = OpConvertFToU %uint %11949
      %11951 = OpShiftLeftLogical %uint %11950 %uint_0
      %11952 = OpCompositeExtract %float %11947 1
      %11953 = OpFMul %float %11952 %float_127
      %11954 = OpConvertFToU %uint %11953
      %11955 = OpShiftLeftLogical %uint %11954 %uint_7
      %11956 = OpCompositeExtract %float %11947 2
      %11957 = OpFMul %float %11956 %float_63
      %11958 = OpConvertFToU %uint %11957
      %11959 = OpShiftLeftLogical %uint %11958 %uint_14
      %11960 = OpBitwiseOr %uint %11951 %11955
      %11961 = OpBitwiseOr %uint %11960 %11959
      %11962 = OpVectorShuffle %v3float %10788 %10788 0 1 2
      %11963 = OpExtInst %v3float %1 FClamp %11962 %106 %131
      %11964 = OpCompositeExtract %float %11963 0
               OpSelectionMerge %11965 None
               OpSwitch %uint_0 %11966
      %11966 = OpLabel
      %11967 = OpFOrdLessThan %bool %11964 %float_0_00313066994
               OpSelectionMerge %11968 None
               OpBranchConditional %11967 %11969 %11968
      %11969 = OpLabel
      %11970 = OpFMul %float %11964 %float_12_9200001
               OpBranch %11965
      %11968 = OpLabel
      %11971 = OpExtInst %float %1 Pow %11964 %float_0_416666657
      %11972 = OpExtInst %float %1 Fma %11971 %float_1_05499995 %float_n0_0549999997
               OpBranch %11965
      %11965 = OpLabel
      %11973 = OpPhi %float %11970 %11969 %11972 %11968
      %11974 = OpCompositeExtract %float %11963 1
               OpSelectionMerge %11975 None
               OpSwitch %uint_0 %11976
      %11976 = OpLabel
      %11977 = OpFOrdLessThan %bool %11974 %float_0_00313066994
               OpSelectionMerge %11978 None
               OpBranchConditional %11977 %11979 %11978
      %11979 = OpLabel
      %11980 = OpFMul %float %11974 %float_12_9200001
               OpBranch %11975
      %11978 = OpLabel
      %11981 = OpExtInst %float %1 Pow %11974 %float_0_416666657
      %11982 = OpExtInst %float %1 Fma %11981 %float_1_05499995 %float_n0_0549999997
               OpBranch %11975
      %11975 = OpLabel
      %11983 = OpPhi %float %11980 %11979 %11982 %11978
      %11984 = OpCompositeExtract %float %11963 2
               OpSelectionMerge %11985 None
               OpSwitch %uint_0 %11986
      %11986 = OpLabel
      %11987 = OpFOrdLessThan %bool %11984 %float_0_00313066994
               OpSelectionMerge %11988 None
               OpBranchConditional %11987 %11989 %11988
      %11989 = OpLabel
      %11990 = OpFMul %float %11984 %float_12_9200001
               OpBranch %11985
      %11988 = OpLabel
      %11991 = OpExtInst %float %1 Pow %11984 %float_0_416666657
      %11992 = OpExtInst %float %1 Fma %11991 %float_1_05499995 %float_n0_0549999997
               OpBranch %11985
      %11985 = OpLabel
      %11993 = OpPhi %float %11990 %11989 %11992 %11988
      %11994 = OpCompositeConstruct %v3float %11973 %11983 %11993
      %11995 = OpBitcast %v3uint %11994
      %11996 = OpBitwiseAnd %v3uint %11995 %349
      %11997 = OpExtInst %v3uint %1 UMin %11996 %500
      %11998 = OpConvertUToF %v3float %11997
      %11999 = OpExtInst %v3float %1 Fma %11909 %11998 %11994
      %12000 = OpExtInst %v3float %1 FClamp %11999 %106 %131
      %12001 = OpCompositeExtract %float %12000 0
      %12002 = OpFMul %float %12001 %float_127
      %12003 = OpConvertFToU %uint %12002
      %12004 = OpShiftLeftLogical %uint %12003 %uint_0
      %12005 = OpCompositeExtract %float %12000 1
      %12006 = OpFMul %float %12005 %float_127
      %12007 = OpConvertFToU %uint %12006
      %12008 = OpShiftLeftLogical %uint %12007 %uint_7
      %12009 = OpCompositeExtract %float %12000 2
      %12010 = OpFMul %float %12009 %float_63
      %12011 = OpConvertFToU %uint %12010
      %12012 = OpShiftLeftLogical %uint %12011 %uint_14
      %12013 = OpBitwiseOr %uint %12004 %12008
      %12014 = OpBitwiseOr %uint %12013 %12012
      %12015 = OpBitwiseOr %uint %11883 %uint_0
      %12016 = OpULessThan %bool %11625 %uint_3
               OpSelectionMerge %12017 None
               OpBranchConditional %12016 %12018 %12019
      %12019 = OpLabel
      %12020 = OpISub %uint %11625 %uint_3
      %12021 = OpCompositeExtract %uint %10775 0
      %12022 = OpCompositeExtract %uint %10775 1
      %12023 = OpCompositeConstruct %v3uint %12021 %12022 %12020
               OpImageWrite %10776 %12023 %12015 None
               OpBranch %12017
      %12018 = OpLabel
      %12024 = OpIEqual %bool %11625 %uint_0
      %12025 = OpSelect %uint %12024 %12015 %11624
      %12026 = OpIEqual %bool %11625 %uint_1
      %12027 = OpSelect %uint %12026 %12015 %11623
      %12028 = OpIEqual %bool %11625 %uint_2
      %12029 = OpSelect %uint %12028 %12015 %uint_0
               OpBranch %12017
      %12017 = OpLabel
      %12030 = OpPhi %uint %uint_0 %12019 %12029 %12018
      %12031 = OpPhi %uint %11623 %12019 %12027 %12018
      %12032 = OpPhi %uint %11624 %12019 %12025 %12018
      %12033 = OpIAdd %uint %11625 %uint_1
      %12034 = OpBitwiseOr %uint %11961 %uint_0
      %12035 = OpULessThan %bool %12033 %uint_3
               OpSelectionMerge %12036 None
               OpBranchConditional %12035 %12037 %12038
      %12038 = OpLabel
      %12039 = OpIAdd %uint %11625 %uint_4294967294
      %12040 = OpCompositeExtract %uint %10775 0
      %12041 = OpCompositeExtract %uint %10775 1
      %12042 = OpCompositeConstruct %v3uint %12040 %12041 %12039
               OpImageWrite %10776 %12042 %12034 None
               OpBranch %12036
      %12037 = OpLabel
      %12043 = OpIEqual %bool %12033 %uint_0
      %12044 = OpSelect %uint %12043 %12034 %12032
      %12045 = OpIEqual %bool %12033 %uint_1
      %12046 = OpSelect %uint %12045 %12034 %12031
      %12047 = OpIEqual %bool %12033 %uint_2
      %12048 = OpSelect %uint %12047 %12034 %12030
               OpBranch %12036
      %12036 = OpLabel
      %12049 = OpPhi %uint %12030 %12038 %12048 %12037
      %12050 = OpPhi %uint %12031 %12038 %12046 %12037
      %12051 = OpPhi %uint %12032 %12038 %12044 %12037
      %12052 = OpIAdd %uint %11625 %uint_2
      %12053 = OpBitwiseOr %uint %12014 %uint_0
      %12054 = OpULessThan %bool %12052 %uint_3
               OpSelectionMerge %12055 None
               OpBranchConditional %12054 %12056 %12057
      %12057 = OpLabel
      %12058 = OpIAdd %uint %11625 %uint_4294967295
      %12059 = OpCompositeExtract %uint %10775 0
      %12060 = OpCompositeExtract %uint %10775 1
      %12061 = OpCompositeConstruct %v3uint %12059 %12060 %12058
               OpImageWrite %10776 %12061 %12053 None
               OpBranch %12055
      %12056 = OpLabel
      %12062 = OpIEqual %bool %12052 %uint_0
      %12063 = OpSelect %uint %12062 %12053 %12051
      %12064 = OpIEqual %bool %12052 %uint_1
      %12065 = OpSelect %uint %12064 %12053 %12050
      %12066 = OpIEqual %bool %12052 %uint_2
      %12067 = OpSelect %uint %12066 %12053 %12049
               OpBranch %12055
      %12055 = OpLabel
      %12068 = OpPhi %uint %12049 %12057 %12067 %12056
      %12069 = OpPhi %uint %12050 %12057 %12065 %12056
      %12070 = OpPhi %uint %12051 %12057 %12063 %12056
      %12071 = OpIAdd %uint %11625 %uint_3
               OpBranch %11903
      %11903 = OpLabel
      %12072 = OpPhi %uint %uint_0 %11901 %12068 %12055
      %12073 = OpPhi %uint %11623 %11901 %12069 %12055
      %12074 = OpPhi %uint %11624 %11901 %12070 %12055
      %12075 = OpPhi %uint %11625 %11901 %12071 %12055
      %12076 = OpSelect %uint %11902 %uint_0 %11876
               OpBranch %11899
      %11900 = OpLabel
      %12077 = OpExtInst %float %1 FAbs %461
      %12078 = OpFSub %float %float_1 %12077
      %12079 = OpVectorShuffle %v3float %10778 %459 0 1 2
      %12080 = OpFSub %float %8390 %float_0_5
      %12081 = OpFMul %float %12080 %float_0_00787401572
      %12082 = OpFMul %float %12080 %float_0_0158730168
      %12083 = OpCompositeConstruct %v3float %12081 %12081 %12082
      %12084 = OpExtInst %v3float %1 FClamp %12079 %106 %131
      %12085 = OpCompositeExtract %float %12084 0
               OpSelectionMerge %12086 None
               OpSwitch %uint_0 %12087
      %12087 = OpLabel
      %12088 = OpFOrdLessThan %bool %12085 %float_0_00313066994
               OpSelectionMerge %12089 None
               OpBranchConditional %12088 %12090 %12089
      %12090 = OpLabel
      %12091 = OpFMul %float %12085 %float_12_9200001
               OpBranch %12086
      %12089 = OpLabel
      %12092 = OpExtInst %float %1 Pow %12085 %float_0_416666657
      %12093 = OpExtInst %float %1 Fma %12092 %float_1_05499995 %float_n0_0549999997
               OpBranch %12086
      %12086 = OpLabel
      %12094 = OpPhi %float %12091 %12090 %12093 %12089
      %12095 = OpCompositeExtract %float %12084 1
               OpSelectionMerge %12096 None
               OpSwitch %uint_0 %12097
      %12097 = OpLabel
      %12098 = OpFOrdLessThan %bool %12095 %float_0_00313066994
               OpSelectionMerge %12099 None
               OpBranchConditional %12098 %12100 %12099
      %12100 = OpLabel
      %12101 = OpFMul %float %12095 %float_12_9200001
               OpBranch %12096
      %12099 = OpLabel
      %12102 = OpExtInst %float %1 Pow %12095 %float_0_416666657
      %12103 = OpExtInst %float %1 Fma %12102 %float_1_05499995 %float_n0_0549999997
               OpBranch %12096
      %12096 = OpLabel
      %12104 = OpPhi %float %12101 %12100 %12103 %12099
      %12105 = OpCompositeExtract %float %12084 2
               OpSelectionMerge %12106 None
               OpSwitch %uint_0 %12107
      %12107 = OpLabel
      %12108 = OpFOrdLessThan %bool %12105 %float_0_00313066994
               OpSelectionMerge %12109 None
               OpBranchConditional %12108 %12110 %12109
      %12110 = OpLabel
      %12111 = OpFMul %float %12105 %float_12_9200001
               OpBranch %12106
      %12109 = OpLabel
      %12112 = OpExtInst %float %1 Pow %12105 %float_0_416666657
      %12113 = OpExtInst %float %1 Fma %12112 %float_1_05499995 %float_n0_0549999997
               OpBranch %12106
      %12106 = OpLabel
      %12114 = OpPhi %float %12111 %12110 %12113 %12109
      %12115 = OpCompositeConstruct %v3float %12094 %12104 %12114
      %12116 = OpBitcast %v3uint %12115
      %12117 = OpBitwiseAnd %v3uint %12116 %349
      %12118 = OpExtInst %v3uint %1 UMin %12117 %500
      %12119 = OpConvertUToF %v3float %12118
      %12120 = OpExtInst %v3float %1 Fma %12083 %12119 %12115
      %12121 = OpExtInst %v3float %1 FClamp %12120 %106 %131
      %12122 = OpCompositeExtract %float %12121 0
      %12123 = OpFMul %float %12122 %float_127
      %12124 = OpConvertFToU %uint %12123
      %12125 = OpShiftLeftLogical %uint %12124 %uint_0
      %12126 = OpCompositeExtract %float %12121 1
      %12127 = OpFMul %float %12126 %float_127
      %12128 = OpConvertFToU %uint %12127
      %12129 = OpShiftLeftLogical %uint %12128 %uint_7
      %12130 = OpCompositeExtract %float %12121 2
      %12131 = OpFMul %float %12130 %float_63
      %12132 = OpConvertFToU %uint %12131
      %12133 = OpShiftLeftLogical %uint %12132 %uint_14
      %12134 = OpBitwiseOr %uint %12125 %12129
      %12135 = OpBitwiseOr %uint %12134 %12133
      %12136 = OpVectorShuffle %v3float %10788 %10788 0 1 2
      %12137 = OpExtInst %v3float %1 FClamp %12136 %106 %131
      %12138 = OpCompositeExtract %float %12137 0
               OpSelectionMerge %12139 None
               OpSwitch %uint_0 %12140
      %12140 = OpLabel
      %12141 = OpFOrdLessThan %bool %12138 %float_0_00313066994
               OpSelectionMerge %12142 None
               OpBranchConditional %12141 %12143 %12142
      %12143 = OpLabel
      %12144 = OpFMul %float %12138 %float_12_9200001
               OpBranch %12139
      %12142 = OpLabel
      %12145 = OpExtInst %float %1 Pow %12138 %float_0_416666657
      %12146 = OpExtInst %float %1 Fma %12145 %float_1_05499995 %float_n0_0549999997
               OpBranch %12139
      %12139 = OpLabel
      %12147 = OpPhi %float %12144 %12143 %12146 %12142
      %12148 = OpCompositeExtract %float %12137 1
               OpSelectionMerge %12149 None
               OpSwitch %uint_0 %12150
      %12150 = OpLabel
      %12151 = OpFOrdLessThan %bool %12148 %float_0_00313066994
               OpSelectionMerge %12152 None
               OpBranchConditional %12151 %12153 %12152
      %12153 = OpLabel
      %12154 = OpFMul %float %12148 %float_12_9200001
               OpBranch %12149
      %12152 = OpLabel
      %12155 = OpExtInst %float %1 Pow %12148 %float_0_416666657
      %12156 = OpExtInst %float %1 Fma %12155 %float_1_05499995 %float_n0_0549999997
               OpBranch %12149
      %12149 = OpLabel
      %12157 = OpPhi %float %12154 %12153 %12156 %12152
      %12158 = OpCompositeExtract %float %12137 2
               OpSelectionMerge %12159 None
               OpSwitch %uint_0 %12160
      %12160 = OpLabel
      %12161 = OpFOrdLessThan %bool %12158 %float_0_00313066994
               OpSelectionMerge %12162 None
               OpBranchConditional %12161 %12163 %12162
      %12163 = OpLabel
      %12164 = OpFMul %float %12158 %float_12_9200001
               OpBranch %12159
      %12162 = OpLabel
      %12165 = OpExtInst %float %1 Pow %12158 %float_0_416666657
      %12166 = OpExtInst %float %1 Fma %12165 %float_1_05499995 %float_n0_0549999997
               OpBranch %12159
      %12159 = OpLabel
      %12167 = OpPhi %float %12164 %12163 %12166 %12162
      %12168 = OpCompositeConstruct %v3float %12147 %12157 %12167
      %12169 = OpBitcast %v3uint %12168
      %12170 = OpBitwiseAnd %v3uint %12169 %349
      %12171 = OpExtInst %v3uint %1 UMin %12170 %500
      %12172 = OpConvertUToF %v3float %12171
      %12173 = OpExtInst %v3float %1 Fma %12083 %12172 %12168
      %12174 = OpExtInst %v3float %1 FClamp %12173 %106 %131
      %12175 = OpCompositeExtract %float %12174 0
      %12176 = OpFMul %float %12175 %float_127
      %12177 = OpConvertFToU %uint %12176
      %12178 = OpShiftLeftLogical %uint %12177 %uint_0
      %12179 = OpCompositeExtract %float %12174 1
      %12180 = OpFMul %float %12179 %float_127
      %12181 = OpConvertFToU %uint %12180
      %12182 = OpShiftLeftLogical %uint %12181 %uint_7
      %12183 = OpCompositeExtract %float %12174 2
      %12184 = OpFMul %float %12183 %float_63
      %12185 = OpConvertFToU %uint %12184
      %12186 = OpShiftLeftLogical %uint %12185 %uint_14
      %12187 = OpBitwiseOr %uint %12178 %12182
      %12188 = OpBitwiseOr %uint %12187 %12186
      %12189 = OpExtInst %float %1 FClamp %12078 %float_0 %float_1
      %12190 = OpExtInst %float %1 FClamp %12189 %float_0 %float_1
      %12191 = OpFMul %float %12190 %float_127
      %12192 = OpConvertFToU %uint %12191
      %12193 = OpExtInst %uint %1 PackHalf2x16 %556
      %12194 = OpShiftLeftLogical %uint %12193 %uint_15
      %12195 = OpBitwiseAnd %uint %12194 %uint_1072693248
      %12196 = OpShiftLeftLogical %uint %12193 %uint_5
      %12197 = OpBitwiseAnd %uint %12196 %uint_1047552
      %12198 = OpShiftRightLogical %uint %12193 %uint_5
      %12199 = OpBitwiseAnd %uint %12198 %uint_1023
      %12200 = OpBitwiseOr %uint %12195 %12197
      %12201 = OpBitwiseOr %uint %12200 %12199
      %12202 = OpBitwiseAnd %uint %12201 %uint_4095
      %12203 = OpShiftRightLogical %uint %12201 %uint_12
      %12204 = OpBitwiseAnd %uint %12203 %uint_4095
      %12205 = OpShiftRightLogical %uint %12201 %uint_24
      %12206 = OpBitwiseAnd %uint %12205 %uint_63
      %12207 = OpBitwiseAnd %uint %12192 %uint_127
      %12208 = OpShiftLeftLogical %uint %12207 %uint_19
      %12209 = OpBitwiseOr %uint %11883 %12208
      %12210 = OpShiftLeftLogical %uint %12206 %uint_26
      %12211 = OpBitwiseOr %uint %12209 %12210
      %12212 = OpULessThan %bool %11625 %uint_3
               OpSelectionMerge %12213 None
               OpBranchConditional %12212 %12214 %12215
      %12215 = OpLabel
      %12216 = OpISub %uint %11625 %uint_3
      %12217 = OpCompositeExtract %uint %10775 0
      %12218 = OpCompositeExtract %uint %10775 1
      %12219 = OpCompositeConstruct %v3uint %12217 %12218 %12216
               OpImageWrite %10776 %12219 %12211 None
               OpBranch %12213
      %12214 = OpLabel
      %12220 = OpIEqual %bool %11625 %uint_0
      %12221 = OpSelect %uint %12220 %12211 %11624
      %12222 = OpIEqual %bool %11625 %uint_1
      %12223 = OpSelect %uint %12222 %12211 %11623
      %12224 = OpIEqual %bool %11625 %uint_2
      %12225 = OpSelect %uint %12224 %12211 %uint_0
               OpBranch %12213
      %12213 = OpLabel
      %12226 = OpPhi %uint %uint_0 %12215 %12225 %12214
      %12227 = OpPhi %uint %11623 %12215 %12223 %12214
      %12228 = OpPhi %uint %11624 %12215 %12221 %12214
      %12229 = OpIAdd %uint %11625 %uint_1
      %12230 = OpShiftLeftLogical %uint %12202 %uint_20
      %12231 = OpBitwiseOr %uint %12135 %12230
      %12232 = OpULessThan %bool %12229 %uint_3
               OpSelectionMerge %12233 None
               OpBranchConditional %12232 %12234 %12235
      %12235 = OpLabel
      %12236 = OpIAdd %uint %11625 %uint_4294967294
      %12237 = OpCompositeExtract %uint %10775 0
      %12238 = OpCompositeExtract %uint %10775 1
      %12239 = OpCompositeConstruct %v3uint %12237 %12238 %12236
               OpImageWrite %10776 %12239 %12231 None
               OpBranch %12233
      %12234 = OpLabel
      %12240 = OpIEqual %bool %12229 %uint_0
      %12241 = OpSelect %uint %12240 %12231 %12228
      %12242 = OpIEqual %bool %12229 %uint_1
      %12243 = OpSelect %uint %12242 %12231 %12227
      %12244 = OpIEqual %bool %12229 %uint_2
      %12245 = OpSelect %uint %12244 %12231 %12226
               OpBranch %12233
      %12233 = OpLabel
      %12246 = OpPhi %uint %12226 %12235 %12245 %12234
      %12247 = OpPhi %uint %12227 %12235 %12243 %12234
      %12248 = OpPhi %uint %12228 %12235 %12241 %12234
      %12249 = OpIAdd %uint %11625 %uint_2
      %12250 = OpShiftLeftLogical %uint %12204 %uint_20
      %12251 = OpBitwiseOr %uint %12188 %12250
      %12252 = OpULessThan %bool %12249 %uint_3
               OpSelectionMerge %12253 None
               OpBranchConditional %12252 %12254 %12255
      %12255 = OpLabel
      %12256 = OpIAdd %uint %11625 %uint_4294967295
      %12257 = OpCompositeExtract %uint %10775 0
      %12258 = OpCompositeExtract %uint %10775 1
      %12259 = OpCompositeConstruct %v3uint %12257 %12258 %12256
               OpImageWrite %10776 %12259 %12251 None
               OpBranch %12253
      %12254 = OpLabel
      %12260 = OpIEqual %bool %12249 %uint_0
      %12261 = OpSelect %uint %12260 %12251 %12248
      %12262 = OpIEqual %bool %12249 %uint_1
      %12263 = OpSelect %uint %12262 %12251 %12247
      %12264 = OpIEqual %bool %12249 %uint_2
      %12265 = OpSelect %uint %12264 %12251 %12246
               OpBranch %12253
      %12253 = OpLabel
      %12266 = OpPhi %uint %12246 %12255 %12265 %12254
      %12267 = OpPhi %uint %12247 %12255 %12263 %12254
      %12268 = OpPhi %uint %12248 %12255 %12261 %12254
      %12269 = OpIAdd %uint %11625 %uint_3
               OpBranch %11899
      %11899 = OpLabel
      %12270 = OpPhi %uint %12076 %11903 %uint_0 %12253
      %12271 = OpPhi %uint %12072 %11903 %12266 %12253
      %12272 = OpPhi %uint %12073 %11903 %12267 %12253
      %12273 = OpPhi %uint %12074 %11903 %12268 %12253
      %12274 = OpPhi %uint %12075 %11903 %12269 %12253
               OpBranch %11893
      %11894 = OpLabel
      %12275 = OpVectorShuffle %v3float %10778 %459 0 1 2
      %12276 = OpFSub %float %8390 %float_0_5
      %12277 = OpFMul %float %12276 %float_0_00787401572
      %12278 = OpFMul %float %12276 %float_0_0158730168
      %12279 = OpCompositeConstruct %v3float %12277 %12277 %12278
      %12280 = OpExtInst %v3float %1 FClamp %12275 %106 %131
      %12281 = OpCompositeExtract %float %12280 0
               OpSelectionMerge %12282 None
               OpSwitch %uint_0 %12283
      %12283 = OpLabel
      %12284 = OpFOrdLessThan %bool %12281 %float_0_00313066994
               OpSelectionMerge %12285 None
               OpBranchConditional %12284 %12286 %12285
      %12286 = OpLabel
      %12287 = OpFMul %float %12281 %float_12_9200001
               OpBranch %12282
      %12285 = OpLabel
      %12288 = OpExtInst %float %1 Pow %12281 %float_0_416666657
      %12289 = OpExtInst %float %1 Fma %12288 %float_1_05499995 %float_n0_0549999997
               OpBranch %12282
      %12282 = OpLabel
      %12290 = OpPhi %float %12287 %12286 %12289 %12285
      %12291 = OpCompositeExtract %float %12280 1
               OpSelectionMerge %12292 None
               OpSwitch %uint_0 %12293
      %12293 = OpLabel
      %12294 = OpFOrdLessThan %bool %12291 %float_0_00313066994
               OpSelectionMerge %12295 None
               OpBranchConditional %12294 %12296 %12295
      %12296 = OpLabel
      %12297 = OpFMul %float %12291 %float_12_9200001
               OpBranch %12292
      %12295 = OpLabel
      %12298 = OpExtInst %float %1 Pow %12291 %float_0_416666657
      %12299 = OpExtInst %float %1 Fma %12298 %float_1_05499995 %float_n0_0549999997
               OpBranch %12292
      %12292 = OpLabel
      %12300 = OpPhi %float %12297 %12296 %12299 %12295
      %12301 = OpCompositeExtract %float %12280 2
               OpSelectionMerge %12302 None
               OpSwitch %uint_0 %12303
      %12303 = OpLabel
      %12304 = OpFOrdLessThan %bool %12301 %float_0_00313066994
               OpSelectionMerge %12305 None
               OpBranchConditional %12304 %12306 %12305
      %12306 = OpLabel
      %12307 = OpFMul %float %12301 %float_12_9200001
               OpBranch %12302
      %12305 = OpLabel
      %12308 = OpExtInst %float %1 Pow %12301 %float_0_416666657
      %12309 = OpExtInst %float %1 Fma %12308 %float_1_05499995 %float_n0_0549999997
               OpBranch %12302
      %12302 = OpLabel
      %12310 = OpPhi %float %12307 %12306 %12309 %12305
      %12311 = OpCompositeConstruct %v3float %12290 %12300 %12310
      %12312 = OpBitcast %v3uint %12311
      %12313 = OpBitwiseAnd %v3uint %12312 %349
      %12314 = OpExtInst %v3uint %1 UMin %12313 %500
      %12315 = OpConvertUToF %v3float %12314
      %12316 = OpExtInst %v3float %1 Fma %12279 %12315 %12311
      %12317 = OpExtInst %v3float %1 FClamp %12316 %106 %131
      %12318 = OpCompositeExtract %float %12317 0
      %12319 = OpFMul %float %12318 %float_127
      %12320 = OpConvertFToU %uint %12319
      %12321 = OpShiftLeftLogical %uint %12320 %uint_0
      %12322 = OpCompositeExtract %float %12317 1
      %12323 = OpFMul %float %12322 %float_127
      %12324 = OpConvertFToU %uint %12323
      %12325 = OpShiftLeftLogical %uint %12324 %uint_7
      %12326 = OpCompositeExtract %float %12317 2
      %12327 = OpFMul %float %12326 %float_63
      %12328 = OpConvertFToU %uint %12327
      %12329 = OpShiftLeftLogical %uint %12328 %uint_14
      %12330 = OpBitwiseOr %uint %12321 %12325
      %12331 = OpBitwiseOr %uint %12330 %12329
      %12332 = OpVectorShuffle %v3float %10788 %10788 0 1 2
      %12333 = OpExtInst %v3float %1 FClamp %12332 %106 %131
      %12334 = OpCompositeExtract %float %12333 0
               OpSelectionMerge %12335 None
               OpSwitch %uint_0 %12336
      %12336 = OpLabel
      %12337 = OpFOrdLessThan %bool %12334 %float_0_00313066994
               OpSelectionMerge %12338 None
               OpBranchConditional %12337 %12339 %12338
      %12339 = OpLabel
      %12340 = OpFMul %float %12334 %float_12_9200001
               OpBranch %12335
      %12338 = OpLabel
      %12341 = OpExtInst %float %1 Pow %12334 %float_0_416666657
      %12342 = OpExtInst %float %1 Fma %12341 %float_1_05499995 %float_n0_0549999997
               OpBranch %12335
      %12335 = OpLabel
      %12343 = OpPhi %float %12340 %12339 %12342 %12338
      %12344 = OpCompositeExtract %float %12333 1
               OpSelectionMerge %12345 None
               OpSwitch %uint_0 %12346
      %12346 = OpLabel
      %12347 = OpFOrdLessThan %bool %12344 %float_0_00313066994
               OpSelectionMerge %12348 None
               OpBranchConditional %12347 %12349 %12348
      %12349 = OpLabel
      %12350 = OpFMul %float %12344 %float_12_9200001
               OpBranch %12345
      %12348 = OpLabel
      %12351 = OpExtInst %float %1 Pow %12344 %float_0_416666657
      %12352 = OpExtInst %float %1 Fma %12351 %float_1_05499995 %float_n0_0549999997
               OpBranch %12345
      %12345 = OpLabel
      %12353 = OpPhi %float %12350 %12349 %12352 %12348
      %12354 = OpCompositeExtract %float %12333 2
               OpSelectionMerge %12355 None
               OpSwitch %uint_0 %12356
      %12356 = OpLabel
      %12357 = OpFOrdLessThan %bool %12354 %float_0_00313066994
               OpSelectionMerge %12358 None
               OpBranchConditional %12357 %12359 %12358
      %12359 = OpLabel
      %12360 = OpFMul %float %12354 %float_12_9200001
               OpBranch %12355
      %12358 = OpLabel
      %12361 = OpExtInst %float %1 Pow %12354 %float_0_416666657
      %12362 = OpExtInst %float %1 Fma %12361 %float_1_05499995 %float_n0_0549999997
               OpBranch %12355
      %12355 = OpLabel
      %12363 = OpPhi %float %12360 %12359 %12362 %12358
      %12364 = OpCompositeConstruct %v3float %12343 %12353 %12363
      %12365 = OpBitcast %v3uint %12364
      %12366 = OpBitwiseAnd %v3uint %12365 %349
      %12367 = OpExtInst %v3uint %1 UMin %12366 %500
      %12368 = OpConvertUToF %v3float %12367
      %12369 = OpExtInst %v3float %1 Fma %12279 %12368 %12364
      %12370 = OpExtInst %v3float %1 FClamp %12369 %106 %131
      %12371 = OpCompositeExtract %float %12370 0
      %12372 = OpFMul %float %12371 %float_127
      %12373 = OpConvertFToU %uint %12372
      %12374 = OpShiftLeftLogical %uint %12373 %uint_0
      %12375 = OpCompositeExtract %float %12370 1
      %12376 = OpFMul %float %12375 %float_127
      %12377 = OpConvertFToU %uint %12376
      %12378 = OpShiftLeftLogical %uint %12377 %uint_7
      %12379 = OpCompositeExtract %float %12370 2
      %12380 = OpFMul %float %12379 %float_63
      %12381 = OpConvertFToU %uint %12380
      %12382 = OpShiftLeftLogical %uint %12381 %uint_14
      %12383 = OpBitwiseOr %uint %12374 %12378
      %12384 = OpBitwiseOr %uint %12383 %12382
               OpSelectionMerge %12385 None
               OpSwitch %uint_0 %12386
      %12386 = OpLabel
               OpSelectionMerge %12387 None
               OpBranchConditional %true %12388 %12387
      %12388 = OpLabel
               OpBranch %12385
      %12387 = OpLabel
      %12389 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12385
      %12385 = OpLabel
      %12390 = OpPhi %float %float_0 %12388 %12389 %12387
               OpSelectionMerge %12391 None
               OpSwitch %uint_0 %12392
      %12392 = OpLabel
               OpSelectionMerge %12393 None
               OpBranchConditional %true %12394 %12393
      %12394 = OpLabel
               OpBranch %12391
      %12393 = OpLabel
      %12395 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12391
      %12391 = OpLabel
      %12396 = OpPhi %float %float_0 %12394 %12395 %12393
               OpSelectionMerge %12397 None
               OpSwitch %uint_0 %12398
      %12398 = OpLabel
               OpSelectionMerge %12399 None
               OpBranchConditional %true %12400 %12399
      %12400 = OpLabel
               OpBranch %12397
      %12399 = OpLabel
      %12401 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12397
      %12397 = OpLabel
      %12402 = OpPhi %float %float_0 %12400 %12401 %12399
      %12403 = OpCompositeConstruct %v3float %12390 %12396 %12402
      %12404 = OpBitcast %v3uint %12403
      %12405 = OpBitwiseAnd %v3uint %12404 %349
      %12406 = OpExtInst %v3uint %1 UMin %12405 %500
      %12407 = OpConvertUToF %v3float %12406
      %12408 = OpExtInst %v3float %1 Fma %12279 %12407 %12403
      %12409 = OpExtInst %v3float %1 FClamp %12408 %106 %131
      %12410 = OpCompositeExtract %float %12409 0
      %12411 = OpFMul %float %12410 %float_127
      %12412 = OpConvertFToU %uint %12411
      %12413 = OpShiftLeftLogical %uint %12412 %uint_0
      %12414 = OpCompositeExtract %float %12409 1
      %12415 = OpFMul %float %12414 %float_127
      %12416 = OpConvertFToU %uint %12415
      %12417 = OpShiftLeftLogical %uint %12416 %uint_7
      %12418 = OpCompositeExtract %float %12409 2
      %12419 = OpFMul %float %12418 %float_63
      %12420 = OpConvertFToU %uint %12419
      %12421 = OpShiftLeftLogical %uint %12420 %uint_14
      %12422 = OpBitwiseOr %uint %12413 %12417
      %12423 = OpBitwiseOr %uint %12422 %12421
      %12424 = OpBitwiseOr %uint %11883 %uint_0
      %12425 = OpULessThan %bool %11625 %uint_3
               OpSelectionMerge %12426 None
               OpBranchConditional %12425 %12427 %12428
      %12428 = OpLabel
      %12429 = OpISub %uint %11625 %uint_3
      %12430 = OpCompositeExtract %uint %10775 0
      %12431 = OpCompositeExtract %uint %10775 1
      %12432 = OpCompositeConstruct %v3uint %12430 %12431 %12429
               OpImageWrite %10776 %12432 %12424 None
               OpBranch %12426
      %12427 = OpLabel
      %12433 = OpIEqual %bool %11625 %uint_0
      %12434 = OpSelect %uint %12433 %12424 %11624
      %12435 = OpIEqual %bool %11625 %uint_1
      %12436 = OpSelect %uint %12435 %12424 %11623
      %12437 = OpIEqual %bool %11625 %uint_2
      %12438 = OpSelect %uint %12437 %12424 %uint_0
               OpBranch %12426
      %12426 = OpLabel
      %12439 = OpPhi %uint %uint_0 %12428 %12438 %12427
      %12440 = OpPhi %uint %11623 %12428 %12436 %12427
      %12441 = OpPhi %uint %11624 %12428 %12434 %12427
      %12442 = OpIAdd %uint %11625 %uint_1
      %12443 = OpBitwiseAnd %uint %12423 %uint_1047552
      %12444 = OpShiftLeftLogical %uint %12443 %uint_10
      %12445 = OpBitwiseOr %uint %12331 %12444
      %12446 = OpULessThan %bool %12442 %uint_3
               OpSelectionMerge %12447 None
               OpBranchConditional %12446 %12448 %12449
      %12449 = OpLabel
      %12450 = OpIAdd %uint %11625 %uint_4294967294
      %12451 = OpCompositeExtract %uint %10775 0
      %12452 = OpCompositeExtract %uint %10775 1
      %12453 = OpCompositeConstruct %v3uint %12451 %12452 %12450
               OpImageWrite %10776 %12453 %12445 None
               OpBranch %12447
      %12448 = OpLabel
      %12454 = OpIEqual %bool %12442 %uint_0
      %12455 = OpSelect %uint %12454 %12445 %12441
      %12456 = OpIEqual %bool %12442 %uint_1
      %12457 = OpSelect %uint %12456 %12445 %12440
      %12458 = OpIEqual %bool %12442 %uint_2
      %12459 = OpSelect %uint %12458 %12445 %12439
               OpBranch %12447
      %12447 = OpLabel
      %12460 = OpPhi %uint %12439 %12449 %12459 %12448
      %12461 = OpPhi %uint %12440 %12449 %12457 %12448
      %12462 = OpPhi %uint %12441 %12449 %12455 %12448
      %12463 = OpIAdd %uint %11625 %uint_2
      %12464 = OpBitwiseAnd %uint %12423 %uint_1023
      %12465 = OpShiftLeftLogical %uint %12464 %uint_20
      %12466 = OpBitwiseOr %uint %12384 %12465
      %12467 = OpULessThan %bool %12463 %uint_3
               OpSelectionMerge %12468 None
               OpBranchConditional %12467 %12469 %12470
      %12470 = OpLabel
      %12471 = OpIAdd %uint %11625 %uint_4294967295
      %12472 = OpCompositeExtract %uint %10775 0
      %12473 = OpCompositeExtract %uint %10775 1
      %12474 = OpCompositeConstruct %v3uint %12472 %12473 %12471
               OpImageWrite %10776 %12474 %12466 None
               OpBranch %12468
      %12469 = OpLabel
      %12475 = OpIEqual %bool %12463 %uint_0
      %12476 = OpSelect %uint %12475 %12466 %12462
      %12477 = OpIEqual %bool %12463 %uint_1
      %12478 = OpSelect %uint %12477 %12466 %12461
      %12479 = OpIEqual %bool %12463 %uint_2
      %12480 = OpSelect %uint %12479 %12466 %12460
               OpBranch %12468
      %12468 = OpLabel
      %12481 = OpPhi %uint %12460 %12470 %12480 %12469
      %12482 = OpPhi %uint %12461 %12470 %12478 %12469
      %12483 = OpPhi %uint %12462 %12470 %12476 %12469
      %12484 = OpIAdd %uint %11625 %uint_3
               OpBranch %11893
      %11893 = OpLabel
      %12485 = OpPhi %uint %12270 %11899 %uint_0 %12468
      %12486 = OpPhi %uint %12271 %11899 %12481 %12468
      %12487 = OpPhi %uint %12272 %11899 %12482 %12468
      %12488 = OpPhi %uint %12273 %11899 %12483 %12468
      %12489 = OpPhi %uint %12274 %11899 %12484 %12468
               OpBranch %11889
      %11890 = OpLabel
      %12490 = OpVectorShuffle %v3float %10778 %459 0 1 2
      %12491 = OpFSub %float %8390 %float_0_5
      %12492 = OpFMul %float %12491 %float_0_00787401572
      %12493 = OpFMul %float %12491 %float_0_0158730168
      %12494 = OpCompositeConstruct %v3float %12492 %12492 %12493
      %12495 = OpExtInst %v3float %1 FClamp %12490 %106 %131
      %12496 = OpCompositeExtract %float %12495 0
               OpSelectionMerge %12497 None
               OpSwitch %uint_0 %12498
      %12498 = OpLabel
      %12499 = OpFOrdLessThan %bool %12496 %float_0_00313066994
               OpSelectionMerge %12500 None
               OpBranchConditional %12499 %12501 %12500
      %12501 = OpLabel
      %12502 = OpFMul %float %12496 %float_12_9200001
               OpBranch %12497
      %12500 = OpLabel
      %12503 = OpExtInst %float %1 Pow %12496 %float_0_416666657
      %12504 = OpExtInst %float %1 Fma %12503 %float_1_05499995 %float_n0_0549999997
               OpBranch %12497
      %12497 = OpLabel
      %12505 = OpPhi %float %12502 %12501 %12504 %12500
      %12506 = OpCompositeExtract %float %12495 1
               OpSelectionMerge %12507 None
               OpSwitch %uint_0 %12508
      %12508 = OpLabel
      %12509 = OpFOrdLessThan %bool %12506 %float_0_00313066994
               OpSelectionMerge %12510 None
               OpBranchConditional %12509 %12511 %12510
      %12511 = OpLabel
      %12512 = OpFMul %float %12506 %float_12_9200001
               OpBranch %12507
      %12510 = OpLabel
      %12513 = OpExtInst %float %1 Pow %12506 %float_0_416666657
      %12514 = OpExtInst %float %1 Fma %12513 %float_1_05499995 %float_n0_0549999997
               OpBranch %12507
      %12507 = OpLabel
      %12515 = OpPhi %float %12512 %12511 %12514 %12510
      %12516 = OpCompositeExtract %float %12495 2
               OpSelectionMerge %12517 None
               OpSwitch %uint_0 %12518
      %12518 = OpLabel
      %12519 = OpFOrdLessThan %bool %12516 %float_0_00313066994
               OpSelectionMerge %12520 None
               OpBranchConditional %12519 %12521 %12520
      %12521 = OpLabel
      %12522 = OpFMul %float %12516 %float_12_9200001
               OpBranch %12517
      %12520 = OpLabel
      %12523 = OpExtInst %float %1 Pow %12516 %float_0_416666657
      %12524 = OpExtInst %float %1 Fma %12523 %float_1_05499995 %float_n0_0549999997
               OpBranch %12517
      %12517 = OpLabel
      %12525 = OpPhi %float %12522 %12521 %12524 %12520
      %12526 = OpCompositeConstruct %v3float %12505 %12515 %12525
      %12527 = OpBitcast %v3uint %12526
      %12528 = OpBitwiseAnd %v3uint %12527 %349
      %12529 = OpExtInst %v3uint %1 UMin %12528 %500
      %12530 = OpConvertUToF %v3float %12529
      %12531 = OpExtInst %v3float %1 Fma %12494 %12530 %12526
      %12532 = OpExtInst %v3float %1 FClamp %12531 %106 %131
      %12533 = OpCompositeExtract %float %12532 0
      %12534 = OpFMul %float %12533 %float_127
      %12535 = OpConvertFToU %uint %12534
      %12536 = OpShiftLeftLogical %uint %12535 %uint_0
      %12537 = OpCompositeExtract %float %12532 1
      %12538 = OpFMul %float %12537 %float_127
      %12539 = OpConvertFToU %uint %12538
      %12540 = OpShiftLeftLogical %uint %12539 %uint_7
      %12541 = OpCompositeExtract %float %12532 2
      %12542 = OpFMul %float %12541 %float_63
      %12543 = OpConvertFToU %uint %12542
      %12544 = OpShiftLeftLogical %uint %12543 %uint_14
      %12545 = OpBitwiseOr %uint %12536 %12540
      %12546 = OpBitwiseOr %uint %12545 %12544
      %12547 = OpExtInst %float %1 FClamp %10781 %float_0 %float_1
      %12548 = OpFMul %float %12547 %float_255
      %12549 = OpConvertFToU %uint %12548
      %12550 = OpShiftLeftLogical %uint %12549 %uint_8
      %12551 = OpExtInst %float %1 FClamp %10785 %float_0 %float_1
      %12552 = OpFMul %float %12551 %float_255
      %12553 = OpConvertFToU %uint %12552
      %12554 = OpShiftLeftLogical %uint %12553 %uint_16
      %12555 = OpBitwiseOr %uint %uint_0 %12550
      %12556 = OpBitwiseOr %uint %12555 %12554
      %12557 = OpBitwiseOr %uint %12556 %uint_0
      %12558 = OpBitwiseOr %uint %11883 %uint_0
      %12559 = OpULessThan %bool %11625 %uint_3
               OpSelectionMerge %12560 None
               OpBranchConditional %12559 %12561 %12562
      %12562 = OpLabel
      %12563 = OpISub %uint %11625 %uint_3
      %12564 = OpCompositeExtract %uint %10775 0
      %12565 = OpCompositeExtract %uint %10775 1
      %12566 = OpCompositeConstruct %v3uint %12564 %12565 %12563
               OpImageWrite %10776 %12566 %12558 None
               OpBranch %12560
      %12561 = OpLabel
      %12567 = OpIEqual %bool %11625 %uint_0
      %12568 = OpSelect %uint %12567 %12558 %11624
      %12569 = OpIEqual %bool %11625 %uint_1
      %12570 = OpSelect %uint %12569 %12558 %11623
      %12571 = OpIEqual %bool %11625 %uint_2
      %12572 = OpSelect %uint %12571 %12558 %uint_0
               OpBranch %12560
      %12560 = OpLabel
      %12573 = OpPhi %uint %uint_0 %12562 %12572 %12561
      %12574 = OpPhi %uint %11623 %12562 %12570 %12561
      %12575 = OpPhi %uint %11624 %12562 %12568 %12561
      %12576 = OpIAdd %uint %11625 %uint_1
      %12577 = OpBitwiseOr %uint %12546 %uint_0
      %12578 = OpULessThan %bool %12576 %uint_3
               OpSelectionMerge %12579 None
               OpBranchConditional %12578 %12580 %12581
      %12581 = OpLabel
      %12582 = OpIAdd %uint %11625 %uint_4294967294
      %12583 = OpCompositeExtract %uint %10775 0
      %12584 = OpCompositeExtract %uint %10775 1
      %12585 = OpCompositeConstruct %v3uint %12583 %12584 %12582
               OpImageWrite %10776 %12585 %12577 None
               OpBranch %12579
      %12580 = OpLabel
      %12586 = OpIEqual %bool %12576 %uint_0
      %12587 = OpSelect %uint %12586 %12577 %12575
      %12588 = OpIEqual %bool %12576 %uint_1
      %12589 = OpSelect %uint %12588 %12577 %12574
      %12590 = OpIEqual %bool %12576 %uint_2
      %12591 = OpSelect %uint %12590 %12577 %12573
               OpBranch %12579
      %12579 = OpLabel
      %12592 = OpPhi %uint %12573 %12581 %12591 %12580
      %12593 = OpPhi %uint %12574 %12581 %12589 %12580
      %12594 = OpPhi %uint %12575 %12581 %12587 %12580
      %12595 = OpIAdd %uint %11625 %uint_2
      %12596 = OpBitwiseOr %uint %12557 %uint_0
      %12597 = OpULessThan %bool %12595 %uint_3
               OpSelectionMerge %12598 None
               OpBranchConditional %12597 %12599 %12600
      %12600 = OpLabel
      %12601 = OpIAdd %uint %11625 %uint_4294967295
      %12602 = OpCompositeExtract %uint %10775 0
      %12603 = OpCompositeExtract %uint %10775 1
      %12604 = OpCompositeConstruct %v3uint %12602 %12603 %12601
               OpImageWrite %10776 %12604 %12596 None
               OpBranch %12598
      %12599 = OpLabel
      %12605 = OpIEqual %bool %12595 %uint_0
      %12606 = OpSelect %uint %12605 %12596 %12594
      %12607 = OpIEqual %bool %12595 %uint_1
      %12608 = OpSelect %uint %12607 %12596 %12593
      %12609 = OpIEqual %bool %12595 %uint_2
      %12610 = OpSelect %uint %12609 %12596 %12592
               OpBranch %12598
      %12598 = OpLabel
      %12611 = OpPhi %uint %12592 %12600 %12610 %12599
      %12612 = OpPhi %uint %12593 %12600 %12608 %12599
      %12613 = OpPhi %uint %12594 %12600 %12606 %12599
      %12614 = OpIAdd %uint %11625 %uint_3
               OpBranch %11889
      %11889 = OpLabel
      %12615 = OpPhi %uint %12485 %11893 %uint_0 %12598
      %12616 = OpPhi %uint %12486 %11893 %12611 %12598
      %12617 = OpPhi %uint %12487 %11893 %12612 %12598
      %12618 = OpPhi %uint %12488 %11893 %12613 %12598
      %12619 = OpPhi %uint %12489 %11893 %12614 %12598
               OpBranch %11885
      %11886 = OpLabel
      %12620 = OpBitwiseAnd %uint %11876 %uint_2047
      %12621 = OpShiftLeftLogical %uint %12620 %uint_19
      %12622 = OpBitwiseOr %uint %11883 %12621
      %12623 = OpULessThan %bool %11625 %uint_3
               OpSelectionMerge %12624 None
               OpBranchConditional %12623 %12625 %12626
      %12626 = OpLabel
      %12627 = OpISub %uint %11625 %uint_3
      %12628 = OpCompositeExtract %uint %10775 0
      %12629 = OpCompositeExtract %uint %10775 1
      %12630 = OpCompositeConstruct %v3uint %12628 %12629 %12627
               OpImageWrite %10776 %12630 %12622 None
               OpBranch %12624
      %12625 = OpLabel
      %12631 = OpIEqual %bool %11625 %uint_0
      %12632 = OpSelect %uint %12631 %12622 %11624
      %12633 = OpIEqual %bool %11625 %uint_1
      %12634 = OpSelect %uint %12633 %12622 %11623
      %12635 = OpIEqual %bool %11625 %uint_2
      %12636 = OpSelect %uint %12635 %12622 %uint_0
               OpBranch %12624
      %12624 = OpLabel
      %12637 = OpPhi %uint %uint_0 %12626 %12636 %12625
      %12638 = OpPhi %uint %11623 %12626 %12634 %12625
      %12639 = OpPhi %uint %11624 %12626 %12632 %12625
      %12640 = OpIAdd %uint %11625 %uint_1
               OpBranch %11885
      %11885 = OpLabel
      %12641 = OpPhi %uint %12615 %11889 %11876 %12624
      %12642 = OpPhi %uint %12616 %11889 %12637 %12624
      %12643 = OpPhi %uint %12617 %11889 %12638 %12624
      %12644 = OpPhi %uint %12618 %11889 %12639 %12624
      %12645 = OpPhi %uint %12619 %11889 %12640 %12624
               OpBranch %11641
      %11641 = OpLabel
      %12646 = OpPhi %uint %11870 %11644 %12641 %11885
      %12647 = OpPhi %uint %11871 %11644 %12642 %11885
      %12648 = OpPhi %uint %11872 %11644 %12643 %11885
      %12649 = OpPhi %uint %11873 %11644 %12644 %11885
      %12650 = OpPhi %uint %11874 %11644 %12645 %11885
               OpBranch %11637
      %11638 = OpLabel
      %12651 = OpVectorShuffle %v3float %10778 %459 0 1 2
      %12652 = OpFSub %float %8390 %float_0_5
      %12653 = OpFMul %float %12652 %float_0_00787401572
      %12654 = OpFMul %float %12652 %float_0_0158730168
      %12655 = OpCompositeConstruct %v3float %12653 %12653 %12654
      %12656 = OpExtInst %v3float %1 FClamp %12651 %106 %131
      %12657 = OpCompositeExtract %float %12656 0
               OpSelectionMerge %12658 None
               OpSwitch %uint_0 %12659
      %12659 = OpLabel
      %12660 = OpFOrdLessThan %bool %12657 %float_0_00313066994
               OpSelectionMerge %12661 None
               OpBranchConditional %12660 %12662 %12661
      %12662 = OpLabel
      %12663 = OpFMul %float %12657 %float_12_9200001
               OpBranch %12658
      %12661 = OpLabel
      %12664 = OpExtInst %float %1 Pow %12657 %float_0_416666657
      %12665 = OpExtInst %float %1 Fma %12664 %float_1_05499995 %float_n0_0549999997
               OpBranch %12658
      %12658 = OpLabel
      %12666 = OpPhi %float %12663 %12662 %12665 %12661
      %12667 = OpCompositeExtract %float %12656 1
               OpSelectionMerge %12668 None
               OpSwitch %uint_0 %12669
      %12669 = OpLabel
      %12670 = OpFOrdLessThan %bool %12667 %float_0_00313066994
               OpSelectionMerge %12671 None
               OpBranchConditional %12670 %12672 %12671
      %12672 = OpLabel
      %12673 = OpFMul %float %12667 %float_12_9200001
               OpBranch %12668
      %12671 = OpLabel
      %12674 = OpExtInst %float %1 Pow %12667 %float_0_416666657
      %12675 = OpExtInst %float %1 Fma %12674 %float_1_05499995 %float_n0_0549999997
               OpBranch %12668
      %12668 = OpLabel
      %12676 = OpPhi %float %12673 %12672 %12675 %12671
      %12677 = OpCompositeExtract %float %12656 2
               OpSelectionMerge %12678 None
               OpSwitch %uint_0 %12679
      %12679 = OpLabel
      %12680 = OpFOrdLessThan %bool %12677 %float_0_00313066994
               OpSelectionMerge %12681 None
               OpBranchConditional %12680 %12682 %12681
      %12682 = OpLabel
      %12683 = OpFMul %float %12677 %float_12_9200001
               OpBranch %12678
      %12681 = OpLabel
      %12684 = OpExtInst %float %1 Pow %12677 %float_0_416666657
      %12685 = OpExtInst %float %1 Fma %12684 %float_1_05499995 %float_n0_0549999997
               OpBranch %12678
      %12678 = OpLabel
      %12686 = OpPhi %float %12683 %12682 %12685 %12681
      %12687 = OpCompositeConstruct %v3float %12666 %12676 %12686
      %12688 = OpBitcast %v3uint %12687
      %12689 = OpBitwiseAnd %v3uint %12688 %349
      %12690 = OpExtInst %v3uint %1 UMin %12689 %500
      %12691 = OpConvertUToF %v3float %12690
      %12692 = OpExtInst %v3float %1 Fma %12655 %12691 %12687
      %12693 = OpExtInst %v3float %1 FClamp %12692 %106 %131
      %12694 = OpCompositeExtract %float %12693 0
      %12695 = OpFMul %float %12694 %float_127
      %12696 = OpConvertFToU %uint %12695
      %12697 = OpShiftLeftLogical %uint %12696 %uint_0
      %12698 = OpCompositeExtract %float %12693 1
      %12699 = OpFMul %float %12698 %float_127
      %12700 = OpConvertFToU %uint %12699
      %12701 = OpShiftLeftLogical %uint %12700 %uint_7
      %12702 = OpCompositeExtract %float %12693 2
      %12703 = OpFMul %float %12702 %float_63
      %12704 = OpConvertFToU %uint %12703
      %12705 = OpShiftLeftLogical %uint %12704 %uint_14
      %12706 = OpBitwiseOr %uint %12697 %12701
      %12707 = OpBitwiseOr %uint %12706 %12705
      %12708 = OpBitwiseAnd %uint %12707 %uint_4095
      %12709 = OpShiftRightLogical %uint %12707 %uint_12
      %12710 = OpBitwiseAnd %uint %12709 %uint_255
      %12711 = OpVectorShuffle %v3float %10788 %10788 0 1 2
      %12712 = OpExtInst %v3float %1 FClamp %12711 %106 %131
      %12713 = OpCompositeExtract %float %12712 0
               OpSelectionMerge %12714 None
               OpSwitch %uint_0 %12715
      %12715 = OpLabel
      %12716 = OpFOrdLessThan %bool %12713 %float_0_00313066994
               OpSelectionMerge %12717 None
               OpBranchConditional %12716 %12718 %12717
      %12718 = OpLabel
      %12719 = OpFMul %float %12713 %float_12_9200001
               OpBranch %12714
      %12717 = OpLabel
      %12720 = OpExtInst %float %1 Pow %12713 %float_0_416666657
      %12721 = OpExtInst %float %1 Fma %12720 %float_1_05499995 %float_n0_0549999997
               OpBranch %12714
      %12714 = OpLabel
      %12722 = OpPhi %float %12719 %12718 %12721 %12717
      %12723 = OpCompositeExtract %float %12712 1
               OpSelectionMerge %12724 None
               OpSwitch %uint_0 %12725
      %12725 = OpLabel
      %12726 = OpFOrdLessThan %bool %12723 %float_0_00313066994
               OpSelectionMerge %12727 None
               OpBranchConditional %12726 %12728 %12727
      %12728 = OpLabel
      %12729 = OpFMul %float %12723 %float_12_9200001
               OpBranch %12724
      %12727 = OpLabel
      %12730 = OpExtInst %float %1 Pow %12723 %float_0_416666657
      %12731 = OpExtInst %float %1 Fma %12730 %float_1_05499995 %float_n0_0549999997
               OpBranch %12724
      %12724 = OpLabel
      %12732 = OpPhi %float %12729 %12728 %12731 %12727
      %12733 = OpCompositeExtract %float %12712 2
               OpSelectionMerge %12734 None
               OpSwitch %uint_0 %12735
      %12735 = OpLabel
      %12736 = OpFOrdLessThan %bool %12733 %float_0_00313066994
               OpSelectionMerge %12737 None
               OpBranchConditional %12736 %12738 %12737
      %12738 = OpLabel
      %12739 = OpFMul %float %12733 %float_12_9200001
               OpBranch %12734
      %12737 = OpLabel
      %12740 = OpExtInst %float %1 Pow %12733 %float_0_416666657
      %12741 = OpExtInst %float %1 Fma %12740 %float_1_05499995 %float_n0_0549999997
               OpBranch %12734
      %12734 = OpLabel
      %12742 = OpPhi %float %12739 %12738 %12741 %12737
      %12743 = OpCompositeConstruct %v3float %12722 %12732 %12742
      %12744 = OpBitcast %v3uint %12743
      %12745 = OpBitwiseAnd %v3uint %12744 %349
      %12746 = OpExtInst %v3uint %1 UMin %12745 %500
      %12747 = OpConvertUToF %v3float %12746
      %12748 = OpExtInst %v3float %1 Fma %12655 %12747 %12743
      %12749 = OpExtInst %v3float %1 FClamp %12748 %106 %131
      %12750 = OpCompositeExtract %float %12749 0
      %12751 = OpFMul %float %12750 %float_127
      %12752 = OpConvertFToU %uint %12751
      %12753 = OpShiftLeftLogical %uint %12752 %uint_0
      %12754 = OpCompositeExtract %float %12749 1
      %12755 = OpFMul %float %12754 %float_127
      %12756 = OpConvertFToU %uint %12755
      %12757 = OpShiftLeftLogical %uint %12756 %uint_7
      %12758 = OpCompositeExtract %float %12749 2
      %12759 = OpFMul %float %12758 %float_63
      %12760 = OpConvertFToU %uint %12759
      %12761 = OpShiftLeftLogical %uint %12760 %uint_14
      %12762 = OpBitwiseOr %uint %12753 %12757
      %12763 = OpBitwiseOr %uint %12762 %12761
      %12764 = OpBitwiseAnd %uint %11560 %uint_65535
      %12765 = OpShiftLeftLogical %uint %12764 %uint_0
      %12766 = OpBitwiseOr %uint %uint_0 %12765
      %12767 = OpShiftLeftLogical %uint %12710 %uint_8
      %12768 = OpBitwiseOr %uint %12767 %uint_0
      %12769 = OpBitwiseAnd %uint %12766 %uint_65535
      %12770 = OpShiftLeftLogical %uint %12768 %uint_16
      %12771 = OpBitwiseOr %uint %12769 %12770
      %12772 = OpULessThan %bool %11625 %uint_3
               OpSelectionMerge %12773 None
               OpBranchConditional %12772 %12774 %12775
      %12775 = OpLabel
      %12776 = OpISub %uint %11625 %uint_3
      %12777 = OpCompositeExtract %uint %10775 0
      %12778 = OpCompositeExtract %uint %10775 1
      %12779 = OpCompositeConstruct %v3uint %12777 %12778 %12776
               OpImageWrite %10776 %12779 %12771 None
               OpBranch %12773
      %12774 = OpLabel
      %12780 = OpIEqual %bool %11625 %uint_0
      %12781 = OpSelect %uint %12780 %12771 %11624
      %12782 = OpIEqual %bool %11625 %uint_1
      %12783 = OpSelect %uint %12782 %12771 %11623
      %12784 = OpIEqual %bool %11625 %uint_2
      %12785 = OpSelect %uint %12784 %12771 %uint_0
               OpBranch %12773
      %12773 = OpLabel
      %12786 = OpPhi %uint %uint_0 %12775 %12785 %12774
      %12787 = OpPhi %uint %11623 %12775 %12783 %12774
      %12788 = OpPhi %uint %11624 %12775 %12781 %12774
      %12789 = OpIAdd %uint %11625 %uint_1
      %12790 = OpShiftLeftLogical %uint %12708 %uint_20
      %12791 = OpBitwiseOr %uint %12763 %12790
      %12792 = OpULessThan %bool %12789 %uint_3
               OpSelectionMerge %12793 None
               OpBranchConditional %12792 %12794 %12795
      %12795 = OpLabel
      %12796 = OpIAdd %uint %11625 %uint_4294967294
      %12797 = OpCompositeExtract %uint %10775 0
      %12798 = OpCompositeExtract %uint %10775 1
      %12799 = OpCompositeConstruct %v3uint %12797 %12798 %12796
               OpImageWrite %10776 %12799 %12791 None
               OpBranch %12793
      %12794 = OpLabel
      %12800 = OpIEqual %bool %12789 %uint_0
      %12801 = OpSelect %uint %12800 %12791 %12788
      %12802 = OpIEqual %bool %12789 %uint_1
      %12803 = OpSelect %uint %12802 %12791 %12787
      %12804 = OpIEqual %bool %12789 %uint_2
      %12805 = OpSelect %uint %12804 %12791 %12786
               OpBranch %12793
      %12793 = OpLabel
      %12806 = OpPhi %uint %12786 %12795 %12805 %12794
      %12807 = OpPhi %uint %12787 %12795 %12803 %12794
      %12808 = OpPhi %uint %12788 %12795 %12801 %12794
      %12809 = OpIAdd %uint %11625 %uint_2
               OpBranch %11637
      %11637 = OpLabel
      %12810 = OpPhi %uint %12646 %11641 %uint_0 %12793
      %12811 = OpPhi %uint %12647 %11641 %12806 %12793
      %12812 = OpPhi %uint %12648 %11641 %12807 %12793
      %12813 = OpPhi %uint %12649 %11641 %12808 %12793
      %12814 = OpPhi %uint %12650 %11641 %12809 %12793
      %12815 = OpLogicalNot %bool %11636
      %12816 = OpLogicalAnd %bool %12815 %11575
      %12817 = OpIEqual %bool %11023 %uint_0
      %12818 = OpLogicalAnd %bool %12816 %12817
               OpSelectionMerge %12819 None
               OpBranchConditional %12818 %12820 %12819
      %12820 = OpLabel
      %12821 = OpShiftRightLogical %uint %12810 %uint_11
      %12822 = OpBitwiseAnd %uint %12821 %uint_7
               OpSelectionMerge %12823 None
               OpSwitch %12822 %12823 0 %12824 3 %12825 5 %12826
      %12826 = OpLabel
               OpSelectionMerge %12827 None
               OpBranchConditional %true %12828 %12827
      %12828 = OpLabel
      %12829 = OpExtInst %v2float %1 FAbs %559
      %12830 = OpFSub %v2float %315 %12829
      %12831 = OpVectorShuffle %v3float %459 %12830 4 5 2
               OpBranch %12827
      %12827 = OpLabel
      %12832 = OpPhi %v3float %553 %12826 %12831 %12828
      %12833 = OpVectorShuffle %v2float %12832 %12832 0 1
               OpSelectionMerge %12834 None
               OpBranchConditional %true %12835 %12834
      %12835 = OpLabel
      %12836 = OpExtInst %v2float %1 FAbs %559
      %12837 = OpFSub %v2float %315 %12836
      %12838 = OpVectorShuffle %v3float %459 %12837 4 5 2
               OpBranch %12834
      %12834 = OpLabel
      %12839 = OpPhi %v3float %553 %12827 %12838 %12835
      %12840 = OpVectorShuffle %v2float %12839 %12839 0 1
      %12841 = OpVectorShuffle %v3float %10778 %459 0 1 2
      %12842 = OpExtInst %v3float %1 FClamp %12841 %106 %131
      %12843 = OpCompositeExtract %float %12842 0
               OpSelectionMerge %12844 None
               OpSwitch %uint_0 %12845
      %12845 = OpLabel
      %12846 = OpFOrdLessThan %bool %12843 %float_0_00313066994
               OpSelectionMerge %12847 None
               OpBranchConditional %12846 %12848 %12847
      %12848 = OpLabel
      %12849 = OpFMul %float %12843 %float_12_9200001
               OpBranch %12844
      %12847 = OpLabel
      %12850 = OpExtInst %float %1 Pow %12843 %float_0_416666657
      %12851 = OpExtInst %float %1 Fma %12850 %float_1_05499995 %float_n0_0549999997
               OpBranch %12844
      %12844 = OpLabel
      %12852 = OpPhi %float %12849 %12848 %12851 %12847
      %12853 = OpCompositeExtract %float %12842 1
               OpSelectionMerge %12854 None
               OpSwitch %uint_0 %12855
      %12855 = OpLabel
      %12856 = OpFOrdLessThan %bool %12853 %float_0_00313066994
               OpSelectionMerge %12857 None
               OpBranchConditional %12856 %12858 %12857
      %12858 = OpLabel
      %12859 = OpFMul %float %12853 %float_12_9200001
               OpBranch %12854
      %12857 = OpLabel
      %12860 = OpExtInst %float %1 Pow %12853 %float_0_416666657
      %12861 = OpExtInst %float %1 Fma %12860 %float_1_05499995 %float_n0_0549999997
               OpBranch %12854
      %12854 = OpLabel
      %12862 = OpPhi %float %12859 %12858 %12861 %12857
      %12863 = OpCompositeExtract %float %12842 2
               OpSelectionMerge %12864 None
               OpSwitch %uint_0 %12865
      %12865 = OpLabel
      %12866 = OpFOrdLessThan %bool %12863 %float_0_00313066994
               OpSelectionMerge %12867 None
               OpBranchConditional %12866 %12868 %12867
      %12868 = OpLabel
      %12869 = OpFMul %float %12863 %float_12_9200001
               OpBranch %12864
      %12867 = OpLabel
      %12870 = OpExtInst %float %1 Pow %12863 %float_0_416666657
      %12871 = OpExtInst %float %1 Fma %12870 %float_1_05499995 %float_n0_0549999997
               OpBranch %12864
      %12864 = OpLabel
      %12872 = OpPhi %float %12869 %12868 %12871 %12867
      %12873 = OpExtInst %float %1 FClamp %12852 %float_0 %float_1
      %12874 = OpFMul %float %12873 %float_255
      %12875 = OpConvertFToU %uint %12874
      %12876 = OpShiftLeftLogical %uint %12875 %uint_0
      %12877 = OpExtInst %float %1 FClamp %12862 %float_0 %float_1
      %12878 = OpFMul %float %12877 %float_255
      %12879 = OpConvertFToU %uint %12878
      %12880 = OpShiftLeftLogical %uint %12879 %uint_8
      %12881 = OpExtInst %float %1 FClamp %12872 %float_0 %float_1
      %12882 = OpFMul %float %12881 %float_255
      %12883 = OpConvertFToU %uint %12882
      %12884 = OpShiftLeftLogical %uint %12883 %uint_16
      %12885 = OpBitwiseOr %uint %12876 %12880
      %12886 = OpBitwiseOr %uint %12885 %12884
      %12887 = OpBitwiseOr %uint %12886 %uint_0
      %12888 = OpULessThan %bool %12814 %uint_3
               OpSelectionMerge %12889 None
               OpBranchConditional %12888 %12890 %12891
      %12891 = OpLabel
      %12892 = OpISub %uint %12814 %uint_3
      %12893 = OpCompositeExtract %uint %10775 0
      %12894 = OpCompositeExtract %uint %10775 1
      %12895 = OpCompositeConstruct %v3uint %12893 %12894 %12892
               OpImageWrite %10776 %12895 %12887 None
               OpBranch %12889
      %12890 = OpLabel
      %12896 = OpIEqual %bool %12814 %uint_0
      %12897 = OpSelect %uint %12896 %12887 %12813
      %12898 = OpIEqual %bool %12814 %uint_1
      %12899 = OpSelect %uint %12898 %12887 %12812
      %12900 = OpIEqual %bool %12814 %uint_2
      %12901 = OpSelect %uint %12900 %12887 %12811
               OpBranch %12889
      %12889 = OpLabel
      %12902 = OpPhi %uint %12811 %12891 %12901 %12890
      %12903 = OpPhi %uint %12812 %12891 %12899 %12890
      %12904 = OpPhi %uint %12813 %12891 %12897 %12890
      %12905 = OpIAdd %uint %12814 %uint_1
      %12906 = OpVectorTimesScalar %v2float %12833 %float_0_5
      %12907 = OpFAdd %v2float %12906 %153
      %12908 = OpVectorTimesScalar %v2float %12840 %float_0_5
      %12909 = OpFAdd %v2float %12908 %153
      %12910 = OpCompositeExtract %float %12907 0
      %12911 = OpCompositeExtract %float %12907 1
      %12912 = OpCompositeExtract %float %12909 0
      %12913 = OpCompositeExtract %float %12909 1
      %12914 = OpExtInst %float %1 FClamp %12910 %float_0 %float_1
      %12915 = OpFMul %float %12914 %float_255
      %12916 = OpConvertFToU %uint %12915
      %12917 = OpShiftLeftLogical %uint %12916 %uint_0
      %12918 = OpExtInst %float %1 FClamp %12911 %float_0 %float_1
      %12919 = OpFMul %float %12918 %float_255
      %12920 = OpConvertFToU %uint %12919
      %12921 = OpShiftLeftLogical %uint %12920 %uint_8
      %12922 = OpExtInst %float %1 FClamp %12912 %float_0 %float_1
      %12923 = OpFMul %float %12922 %float_255
      %12924 = OpConvertFToU %uint %12923
      %12925 = OpShiftLeftLogical %uint %12924 %uint_16
      %12926 = OpExtInst %float %1 FClamp %12913 %float_0 %float_1
      %12927 = OpFMul %float %12926 %float_255
      %12928 = OpConvertFToU %uint %12927
      %12929 = OpShiftLeftLogical %uint %12928 %uint_24
      %12930 = OpBitwiseOr %uint %12917 %12921
      %12931 = OpBitwiseOr %uint %12930 %12925
      %12932 = OpBitwiseOr %uint %12931 %12929
      %12933 = OpULessThan %bool %12905 %uint_3
               OpSelectionMerge %12934 None
               OpBranchConditional %12933 %12935 %12936
      %12936 = OpLabel
      %12937 = OpIAdd %uint %12814 %uint_4294967294
      %12938 = OpCompositeExtract %uint %10775 0
      %12939 = OpCompositeExtract %uint %10775 1
      %12940 = OpCompositeConstruct %v3uint %12938 %12939 %12937
               OpImageWrite %10776 %12940 %12932 None
               OpBranch %12934
      %12935 = OpLabel
      %12941 = OpIEqual %bool %12905 %uint_0
      %12942 = OpSelect %uint %12941 %12932 %12904
      %12943 = OpIEqual %bool %12905 %uint_1
      %12944 = OpSelect %uint %12943 %12932 %12903
      %12945 = OpIEqual %bool %12905 %uint_2
      %12946 = OpSelect %uint %12945 %12932 %12902
               OpBranch %12934
      %12934 = OpLabel
      %12947 = OpPhi %uint %12902 %12936 %12946 %12935
      %12948 = OpPhi %uint %12903 %12936 %12944 %12935
      %12949 = OpPhi %uint %12904 %12936 %12942 %12935
      %12950 = OpShiftRightLogical %uint %12810 %uint_2
      %12951 = OpBitwiseAnd %uint %12950 %uint_7
      %12952 = OpIEqual %bool %12951 %uint_3
               OpSelectionMerge %12953 None
               OpBranchConditional %12952 %12954 %12953
      %12954 = OpLabel
      %12955 = OpBitwiseAnd %uint %11024 %uint_4294967292
      %12956 = OpBitwiseOr %uint %12955 %uint_3
      %12957 = OpExtInst %float %1 Fma %10785 %float_255 %float_0_5
      %12958 = OpConvertFToU %uint %12957
      %12959 = OpBitwiseAnd %uint %12956 %uint_3
      %12960 = OpShiftLeftLogical %uint %12958 %uint_24
      %12961 = OpBitwiseOr %uint %12959 %12960
      %12962 = OpBitwiseOr %uint %12961 %uint_16711680
      %12963 = OpCompositeExtract %float %10778 0
      %12964 = OpCompositeExtract %float %10778 1
      %12965 = OpCompositeExtract %float %10778 2
      %12966 = OpCompositeConstruct %v4float %12963 %12964 %12965 %float_0
      %12967 = OpVectorShuffle %v3float %12966 %12966 0 1 2
      %12968 = OpExtInst %v3float %1 FClamp %12967 %106 %131
      %12969 = OpCompositeExtract %float %12968 0
               OpSelectionMerge %12970 None
               OpSwitch %uint_0 %12971
      %12971 = OpLabel
      %12972 = OpFOrdLessThan %bool %12969 %float_0_00313066994
               OpSelectionMerge %12973 None
               OpBranchConditional %12972 %12974 %12973
      %12974 = OpLabel
      %12975 = OpFMul %float %12969 %float_12_9200001
               OpBranch %12970
      %12973 = OpLabel
      %12976 = OpExtInst %float %1 Pow %12969 %float_0_416666657
      %12977 = OpExtInst %float %1 Fma %12976 %float_1_05499995 %float_n0_0549999997
               OpBranch %12970
      %12970 = OpLabel
      %12978 = OpPhi %float %12975 %12974 %12977 %12973
      %12979 = OpCompositeExtract %float %12968 1
               OpSelectionMerge %12980 None
               OpSwitch %uint_0 %12981
      %12981 = OpLabel
      %12982 = OpFOrdLessThan %bool %12979 %float_0_00313066994
               OpSelectionMerge %12983 None
               OpBranchConditional %12982 %12984 %12983
      %12984 = OpLabel
      %12985 = OpFMul %float %12979 %float_12_9200001
               OpBranch %12980
      %12983 = OpLabel
      %12986 = OpExtInst %float %1 Pow %12979 %float_0_416666657
      %12987 = OpExtInst %float %1 Fma %12986 %float_1_05499995 %float_n0_0549999997
               OpBranch %12980
      %12980 = OpLabel
      %12988 = OpPhi %float %12985 %12984 %12987 %12983
      %12989 = OpCompositeExtract %float %12968 2
               OpSelectionMerge %12990 None
               OpSwitch %uint_0 %12991
      %12991 = OpLabel
      %12992 = OpFOrdLessThan %bool %12989 %float_0_00313066994
               OpSelectionMerge %12993 None
               OpBranchConditional %12992 %12994 %12993
      %12994 = OpLabel
      %12995 = OpFMul %float %12989 %float_12_9200001
               OpBranch %12990
      %12993 = OpLabel
      %12996 = OpExtInst %float %1 Pow %12989 %float_0_416666657
      %12997 = OpExtInst %float %1 Fma %12996 %float_1_05499995 %float_n0_0549999997
               OpBranch %12990
      %12990 = OpLabel
      %12998 = OpPhi %float %12995 %12994 %12997 %12993
      %12999 = OpExtInst %float %1 FClamp %12978 %float_0 %float_1
      %13000 = OpFMul %float %12999 %float_255
      %13001 = OpConvertFToU %uint %13000
      %13002 = OpShiftLeftLogical %uint %13001 %uint_0
      %13003 = OpExtInst %float %1 FClamp %12988 %float_0 %float_1
      %13004 = OpFMul %float %13003 %float_255
      %13005 = OpConvertFToU %uint %13004
      %13006 = OpShiftLeftLogical %uint %13005 %uint_8
      %13007 = OpExtInst %float %1 FClamp %12998 %float_0 %float_1
      %13008 = OpFMul %float %13007 %float_255
      %13009 = OpConvertFToU %uint %13008
      %13010 = OpShiftLeftLogical %uint %13009 %uint_16
      %13011 = OpBitwiseOr %uint %13002 %13006
      %13012 = OpBitwiseOr %uint %13011 %13010
      %13013 = OpBitwiseOr %uint %13012 %uint_0
               OpBranch %12953
      %12953 = OpLabel
      %13014 = OpPhi %uint %458 %12934 %13013 %12990
      %13015 = OpPhi %uint %11024 %12934 %12962 %12990
               OpBranch %12823
      %12825 = OpLabel
      %13016 = OpCompositeExtract %float %10778 0
      %13017 = OpCompositeExtract %float %10778 1
      %13018 = OpCompositeExtract %float %10778 2
      %13019 = OpCompositeConstruct %v4float %13016 %13017 %13018 %float_0
      %13020 = OpVectorShuffle %v3float %13019 %13019 0 1 2
      %13021 = OpExtInst %v3float %1 FClamp %13020 %106 %131
      %13022 = OpCompositeExtract %float %13021 0
               OpSelectionMerge %13023 None
               OpSwitch %uint_0 %13024
      %13024 = OpLabel
      %13025 = OpFOrdLessThan %bool %13022 %float_0_00313066994
               OpSelectionMerge %13026 None
               OpBranchConditional %13025 %13027 %13026
      %13027 = OpLabel
      %13028 = OpFMul %float %13022 %float_12_9200001
               OpBranch %13023
      %13026 = OpLabel
      %13029 = OpExtInst %float %1 Pow %13022 %float_0_416666657
      %13030 = OpExtInst %float %1 Fma %13029 %float_1_05499995 %float_n0_0549999997
               OpBranch %13023
      %13023 = OpLabel
      %13031 = OpPhi %float %13028 %13027 %13030 %13026
      %13032 = OpCompositeExtract %float %13021 1
               OpSelectionMerge %13033 None
               OpSwitch %uint_0 %13034
      %13034 = OpLabel
      %13035 = OpFOrdLessThan %bool %13032 %float_0_00313066994
               OpSelectionMerge %13036 None
               OpBranchConditional %13035 %13037 %13036
      %13037 = OpLabel
      %13038 = OpFMul %float %13032 %float_12_9200001
               OpBranch %13033
      %13036 = OpLabel
      %13039 = OpExtInst %float %1 Pow %13032 %float_0_416666657
      %13040 = OpExtInst %float %1 Fma %13039 %float_1_05499995 %float_n0_0549999997
               OpBranch %13033
      %13033 = OpLabel
      %13041 = OpPhi %float %13038 %13037 %13040 %13036
      %13042 = OpCompositeExtract %float %13021 2
               OpSelectionMerge %13043 None
               OpSwitch %uint_0 %13044
      %13044 = OpLabel
      %13045 = OpFOrdLessThan %bool %13042 %float_0_00313066994
               OpSelectionMerge %13046 None
               OpBranchConditional %13045 %13047 %13046
      %13047 = OpLabel
      %13048 = OpFMul %float %13042 %float_12_9200001
               OpBranch %13043
      %13046 = OpLabel
      %13049 = OpExtInst %float %1 Pow %13042 %float_0_416666657
      %13050 = OpExtInst %float %1 Fma %13049 %float_1_05499995 %float_n0_0549999997
               OpBranch %13043
      %13043 = OpLabel
      %13051 = OpPhi %float %13048 %13047 %13050 %13046
      %13052 = OpExtInst %float %1 FClamp %13031 %float_0 %float_1
      %13053 = OpFMul %float %13052 %float_255
      %13054 = OpConvertFToU %uint %13053
      %13055 = OpShiftLeftLogical %uint %13054 %uint_0
      %13056 = OpExtInst %float %1 FClamp %13041 %float_0 %float_1
      %13057 = OpFMul %float %13056 %float_255
      %13058 = OpConvertFToU %uint %13057
      %13059 = OpShiftLeftLogical %uint %13058 %uint_8
      %13060 = OpExtInst %float %1 FClamp %13051 %float_0 %float_1
      %13061 = OpFMul %float %13060 %float_255
      %13062 = OpConvertFToU %uint %13061
      %13063 = OpShiftLeftLogical %uint %13062 %uint_16
      %13064 = OpBitwiseOr %uint %13055 %13059
      %13065 = OpBitwiseOr %uint %13064 %13063
      %13066 = OpBitwiseOr %uint %13065 %uint_0
      %13067 = OpULessThan %bool %12814 %uint_3
               OpSelectionMerge %13068 None
               OpBranchConditional %13067 %13069 %13070
      %13070 = OpLabel
      %13071 = OpISub %uint %12814 %uint_3
      %13072 = OpCompositeExtract %uint %10775 0
      %13073 = OpCompositeExtract %uint %10775 1
      %13074 = OpCompositeConstruct %v3uint %13072 %13073 %13071
               OpImageWrite %10776 %13074 %13066 None
               OpBranch %13068
      %13069 = OpLabel
      %13075 = OpIEqual %bool %12814 %uint_0
      %13076 = OpSelect %uint %13075 %13066 %12813
      %13077 = OpIEqual %bool %12814 %uint_1
      %13078 = OpSelect %uint %13077 %13066 %12812
      %13079 = OpIEqual %bool %12814 %uint_2
      %13080 = OpSelect %uint %13079 %13066 %12811
               OpBranch %13068
      %13068 = OpLabel
      %13081 = OpPhi %uint %12811 %13070 %13080 %13069
      %13082 = OpPhi %uint %12812 %13070 %13078 %13069
      %13083 = OpPhi %uint %12813 %13070 %13076 %13069
      %13084 = OpIAdd %uint %12814 %uint_1
      %13085 = OpExtInst %float %1 FClamp %10781 %float_0 %float_1
      %13086 = OpFMul %float %13085 %float_255
      %13087 = OpConvertFToU %uint %13086
      %13088 = OpShiftLeftLogical %uint %13087 %uint_8
      %13089 = OpExtInst %float %1 FClamp %10785 %float_0 %float_1
      %13090 = OpFMul %float %13089 %float_255
      %13091 = OpConvertFToU %uint %13090
      %13092 = OpShiftLeftLogical %uint %13091 %uint_16
      %13093 = OpExtInst %float %1 FClamp %10787 %float_0 %float_1
      %13094 = OpFMul %float %13093 %float_255
      %13095 = OpConvertFToU %uint %13094
      %13096 = OpShiftLeftLogical %uint %13095 %uint_24
      %13097 = OpBitwiseOr %uint %uint_0 %13088
      %13098 = OpBitwiseOr %uint %13097 %13092
      %13099 = OpBitwiseOr %uint %13098 %13096
      %13100 = OpULessThan %bool %13084 %uint_3
               OpSelectionMerge %13101 None
               OpBranchConditional %13100 %13102 %13103
      %13103 = OpLabel
      %13104 = OpIAdd %uint %12814 %uint_4294967294
      %13105 = OpCompositeExtract %uint %10775 0
      %13106 = OpCompositeExtract %uint %10775 1
      %13107 = OpCompositeConstruct %v3uint %13105 %13106 %13104
               OpImageWrite %10776 %13107 %13099 None
               OpBranch %13101
      %13102 = OpLabel
      %13108 = OpIEqual %bool %13084 %uint_0
      %13109 = OpSelect %uint %13108 %13099 %13083
      %13110 = OpIEqual %bool %13084 %uint_1
      %13111 = OpSelect %uint %13110 %13099 %13082
      %13112 = OpIEqual %bool %13084 %uint_2
      %13113 = OpSelect %uint %13112 %13099 %13081
               OpBranch %13101
      %13101 = OpLabel
      %13114 = OpPhi %uint %13081 %13103 %13113 %13102
      %13115 = OpPhi %uint %13082 %13103 %13111 %13102
      %13116 = OpPhi %uint %13083 %13103 %13109 %13102
               OpBranch %12823
      %12824 = OpLabel
      %13117 = OpVectorShuffle %v3float %10778 %459 0 1 2
      %13118 = OpFSub %float %8390 %float_0_5
      %13119 = OpFMul %float %13118 %float_0_00787401572
      %13120 = OpFMul %float %13118 %float_0_0158730168
      %13121 = OpCompositeConstruct %v3float %13119 %13119 %13120
      %13122 = OpExtInst %v3float %1 FClamp %13117 %106 %131
      %13123 = OpCompositeExtract %float %13122 0
               OpSelectionMerge %13124 None
               OpSwitch %uint_0 %13125
      %13125 = OpLabel
      %13126 = OpFOrdLessThan %bool %13123 %float_0_00313066994
               OpSelectionMerge %13127 None
               OpBranchConditional %13126 %13128 %13127
      %13128 = OpLabel
      %13129 = OpFMul %float %13123 %float_12_9200001
               OpBranch %13124
      %13127 = OpLabel
      %13130 = OpExtInst %float %1 Pow %13123 %float_0_416666657
      %13131 = OpExtInst %float %1 Fma %13130 %float_1_05499995 %float_n0_0549999997
               OpBranch %13124
      %13124 = OpLabel
      %13132 = OpPhi %float %13129 %13128 %13131 %13127
      %13133 = OpCompositeExtract %float %13122 1
               OpSelectionMerge %13134 None
               OpSwitch %uint_0 %13135
      %13135 = OpLabel
      %13136 = OpFOrdLessThan %bool %13133 %float_0_00313066994
               OpSelectionMerge %13137 None
               OpBranchConditional %13136 %13138 %13137
      %13138 = OpLabel
      %13139 = OpFMul %float %13133 %float_12_9200001
               OpBranch %13134
      %13137 = OpLabel
      %13140 = OpExtInst %float %1 Pow %13133 %float_0_416666657
      %13141 = OpExtInst %float %1 Fma %13140 %float_1_05499995 %float_n0_0549999997
               OpBranch %13134
      %13134 = OpLabel
      %13142 = OpPhi %float %13139 %13138 %13141 %13137
      %13143 = OpCompositeExtract %float %13122 2
               OpSelectionMerge %13144 None
               OpSwitch %uint_0 %13145
      %13145 = OpLabel
      %13146 = OpFOrdLessThan %bool %13143 %float_0_00313066994
               OpSelectionMerge %13147 None
               OpBranchConditional %13146 %13148 %13147
      %13148 = OpLabel
      %13149 = OpFMul %float %13143 %float_12_9200001
               OpBranch %13144
      %13147 = OpLabel
      %13150 = OpExtInst %float %1 Pow %13143 %float_0_416666657
      %13151 = OpExtInst %float %1 Fma %13150 %float_1_05499995 %float_n0_0549999997
               OpBranch %13144
      %13144 = OpLabel
      %13152 = OpPhi %float %13149 %13148 %13151 %13147
      %13153 = OpCompositeConstruct %v3float %13132 %13142 %13152
      %13154 = OpBitcast %v3uint %13153
      %13155 = OpBitwiseAnd %v3uint %13154 %349
      %13156 = OpExtInst %v3uint %1 UMin %13155 %500
      %13157 = OpConvertUToF %v3float %13156
      %13158 = OpExtInst %v3float %1 Fma %13121 %13157 %13153
      %13159 = OpExtInst %v3float %1 FClamp %13158 %106 %131
      %13160 = OpCompositeExtract %float %13159 0
      %13161 = OpFMul %float %13160 %float_127
      %13162 = OpConvertFToU %uint %13161
      %13163 = OpShiftLeftLogical %uint %13162 %uint_0
      %13164 = OpCompositeExtract %float %13159 1
      %13165 = OpFMul %float %13164 %float_127
      %13166 = OpConvertFToU %uint %13165
      %13167 = OpShiftLeftLogical %uint %13166 %uint_7
      %13168 = OpCompositeExtract %float %13159 2
      %13169 = OpFMul %float %13168 %float_63
      %13170 = OpConvertFToU %uint %13169
      %13171 = OpShiftLeftLogical %uint %13170 %uint_14
      %13172 = OpBitwiseOr %uint %13163 %13167
      %13173 = OpBitwiseOr %uint %13172 %13171
      %13174 = OpVectorShuffle %v3float %10788 %10788 0 1 2
      %13175 = OpExtInst %v3float %1 FClamp %13174 %106 %131
      %13176 = OpCompositeExtract %float %13175 0
               OpSelectionMerge %13177 None
               OpSwitch %uint_0 %13178
      %13178 = OpLabel
      %13179 = OpFOrdLessThan %bool %13176 %float_0_00313066994
               OpSelectionMerge %13180 None
               OpBranchConditional %13179 %13181 %13180
      %13181 = OpLabel
      %13182 = OpFMul %float %13176 %float_12_9200001
               OpBranch %13177
      %13180 = OpLabel
      %13183 = OpExtInst %float %1 Pow %13176 %float_0_416666657
      %13184 = OpExtInst %float %1 Fma %13183 %float_1_05499995 %float_n0_0549999997
               OpBranch %13177
      %13177 = OpLabel
      %13185 = OpPhi %float %13182 %13181 %13184 %13180
      %13186 = OpCompositeExtract %float %13175 1
               OpSelectionMerge %13187 None
               OpSwitch %uint_0 %13188
      %13188 = OpLabel
      %13189 = OpFOrdLessThan %bool %13186 %float_0_00313066994
               OpSelectionMerge %13190 None
               OpBranchConditional %13189 %13191 %13190
      %13191 = OpLabel
      %13192 = OpFMul %float %13186 %float_12_9200001
               OpBranch %13187
      %13190 = OpLabel
      %13193 = OpExtInst %float %1 Pow %13186 %float_0_416666657
      %13194 = OpExtInst %float %1 Fma %13193 %float_1_05499995 %float_n0_0549999997
               OpBranch %13187
      %13187 = OpLabel
      %13195 = OpPhi %float %13192 %13191 %13194 %13190
      %13196 = OpCompositeExtract %float %13175 2
               OpSelectionMerge %13197 None
               OpSwitch %uint_0 %13198
      %13198 = OpLabel
      %13199 = OpFOrdLessThan %bool %13196 %float_0_00313066994
               OpSelectionMerge %13200 None
               OpBranchConditional %13199 %13201 %13200
      %13201 = OpLabel
      %13202 = OpFMul %float %13196 %float_12_9200001
               OpBranch %13197
      %13200 = OpLabel
      %13203 = OpExtInst %float %1 Pow %13196 %float_0_416666657
      %13204 = OpExtInst %float %1 Fma %13203 %float_1_05499995 %float_n0_0549999997
               OpBranch %13197
      %13197 = OpLabel
      %13205 = OpPhi %float %13202 %13201 %13204 %13200
      %13206 = OpCompositeConstruct %v3float %13185 %13195 %13205
      %13207 = OpBitcast %v3uint %13206
      %13208 = OpBitwiseAnd %v3uint %13207 %349
      %13209 = OpExtInst %v3uint %1 UMin %13208 %500
      %13210 = OpConvertUToF %v3float %13209
      %13211 = OpExtInst %v3float %1 Fma %13121 %13210 %13206
      %13212 = OpExtInst %v3float %1 FClamp %13211 %106 %131
      %13213 = OpCompositeExtract %float %13212 0
      %13214 = OpFMul %float %13213 %float_127
      %13215 = OpConvertFToU %uint %13214
      %13216 = OpShiftLeftLogical %uint %13215 %uint_0
      %13217 = OpCompositeExtract %float %13212 1
      %13218 = OpFMul %float %13217 %float_127
      %13219 = OpConvertFToU %uint %13218
      %13220 = OpShiftLeftLogical %uint %13219 %uint_7
      %13221 = OpCompositeExtract %float %13212 2
      %13222 = OpFMul %float %13221 %float_63
      %13223 = OpConvertFToU %uint %13222
      %13224 = OpShiftLeftLogical %uint %13223 %uint_14
      %13225 = OpBitwiseOr %uint %13216 %13220
      %13226 = OpBitwiseOr %uint %13225 %13224
      %13227 = OpShiftLeftLogical %uint %13173 %uint_12
      %13228 = OpBitwiseAnd %uint %13227 %uint_4294963200
      %13229 = OpBitwiseAnd %uint %13226 %uint_4095
      %13230 = OpBitwiseOr %uint %13228 %13229
      %13231 = OpShiftRightLogical %uint %13226 %uint_12
      %13232 = OpBitwiseAnd %uint %13231 %uint_255
      %13233 = OpULessThan %bool %12814 %uint_3
               OpSelectionMerge %13234 None
               OpBranchConditional %13233 %13235 %13236
      %13236 = OpLabel
      %13237 = OpISub %uint %12814 %uint_3
      %13238 = OpCompositeExtract %uint %10775 0
      %13239 = OpCompositeExtract %uint %10775 1
      %13240 = OpCompositeConstruct %v3uint %13238 %13239 %13237
               OpImageWrite %10776 %13240 %13230 None
               OpBranch %13234
      %13235 = OpLabel
      %13241 = OpIEqual %bool %12814 %uint_0
      %13242 = OpSelect %uint %13241 %13230 %12813
      %13243 = OpIEqual %bool %12814 %uint_1
      %13244 = OpSelect %uint %13243 %13230 %12812
      %13245 = OpIEqual %bool %12814 %uint_2
      %13246 = OpSelect %uint %13245 %13230 %12811
               OpBranch %13234
      %13234 = OpLabel
      %13247 = OpPhi %uint %12811 %13236 %13246 %13235
      %13248 = OpPhi %uint %12812 %13236 %13244 %13235
      %13249 = OpPhi %uint %12813 %13236 %13242 %13235
      %13250 = OpIAdd %uint %12814 %uint_1
      %13251 = OpFAdd %float %10787 %float_1
      %13252 = OpFMul %float %13251 %float_0_5
      %13253 = OpExtInst %float %1 FClamp %13252 %float_0 %float_1
      %13254 = OpFMul %float %13253 %float_255
      %13255 = OpConvertFToU %uint %13254
      %13256 = OpShiftLeftLogical %uint %13255 %uint_16
      %13257 = OpBitwiseOr %uint %uint_0 %13256
      %13258 = OpBitwiseOr %uint %13257 %uint_2130706432
      %13259 = OpBitwiseOr %uint %13232 %13258
      %13260 = OpULessThan %bool %13250 %uint_3
               OpSelectionMerge %13261 None
               OpBranchConditional %13260 %13262 %13263
      %13263 = OpLabel
      %13264 = OpIAdd %uint %12814 %uint_4294967294
      %13265 = OpCompositeExtract %uint %10775 0
      %13266 = OpCompositeExtract %uint %10775 1
      %13267 = OpCompositeConstruct %v3uint %13265 %13266 %13264
               OpImageWrite %10776 %13267 %13259 None
               OpBranch %13261
      %13262 = OpLabel
      %13268 = OpIEqual %bool %13250 %uint_0
      %13269 = OpSelect %uint %13268 %13259 %13249
      %13270 = OpIEqual %bool %13250 %uint_1
      %13271 = OpSelect %uint %13270 %13259 %13248
      %13272 = OpIEqual %bool %13250 %uint_2
      %13273 = OpSelect %uint %13272 %13259 %13247
               OpBranch %13261
      %13261 = OpLabel
      %13274 = OpPhi %uint %13247 %13263 %13273 %13262
      %13275 = OpPhi %uint %13248 %13263 %13271 %13262
      %13276 = OpPhi %uint %13249 %13263 %13269 %13262
      %13277 = OpIAdd %uint %12814 %uint_2
      %13278 = OpShiftRightLogical %uint %12810 %uint_7
      %13279 = OpBitwiseAnd %uint %13278 %uint_1
      %13280 = OpINotEqual %bool %13279 %uint_0
      %13281 = OpShiftRightLogical %uint %12810 %uint_6
      %13282 = OpBitwiseAnd %uint %13281 %uint_1
      %13283 = OpINotEqual %bool %13282 %uint_0
      %13284 = OpLogicalOr %bool %13280 %13283
               OpSelectionMerge %13285 None
               OpBranchConditional %13284 %13286 %13285
      %13286 = OpLabel
      %13287 = OpExtInst %float %1 NMax %float_0 %float_0
      %13288 = OpExtInst %float %1 NMax %float_0 %13287
      %13289 = OpFOrdGreaterThan %bool %13288 %float_0
      %13290 = OpCompositeConstruct %v3bool %13289 %13289 %13289
      %13291 = OpSelect %v3float %13290 %106 %131
      %13292 = OpDot %float %13291 %337
      %13293 = OpDot %float %13291 %338
      %13294 = OpCompositeConstruct %v3float %548 %13292 %13293
      %13295 = OpExtInst %v3float %1 Fma %13294 %324 %325
      %13296 = OpCompositeExtract %float %13295 1
      %13297 = OpCompositeExtract %float %13295 2
      %13298 = OpExtInst %float %1 FClamp %13296 %float_0 %float_1
      %13299 = OpFMul %float %13298 %float_255
      %13300 = OpConvertFToU %uint %13299
      %13301 = OpShiftLeftLogical %uint %13300 %uint_0
      %13302 = OpExtInst %float %1 FClamp %13297 %float_0 %float_1
      %13303 = OpFMul %float %13302 %float_255
      %13304 = OpConvertFToU %uint %13303
      %13305 = OpShiftLeftLogical %uint %13304 %uint_8
      %13306 = OpBitwiseOr %uint %13301 %13305
      %13307 = OpBitwiseOr %uint %13306 %uint_0
      %13308 = OpBitwiseOr %uint %13307 %uint_0
      %13309 = OpBitwiseOr %uint %uint_0 %13308
      %13310 = OpULessThan %bool %13277 %uint_3
               OpSelectionMerge %13311 None
               OpBranchConditional %13310 %13312 %13313
      %13313 = OpLabel
      %13314 = OpIAdd %uint %12814 %uint_4294967295
      %13315 = OpCompositeExtract %uint %10775 0
      %13316 = OpCompositeExtract %uint %10775 1
      %13317 = OpCompositeConstruct %v3uint %13315 %13316 %13314
               OpImageWrite %10776 %13317 %13309 None
               OpBranch %13311
      %13312 = OpLabel
      %13318 = OpIEqual %bool %13277 %uint_0
      %13319 = OpSelect %uint %13318 %13309 %13276
      %13320 = OpIEqual %bool %13277 %uint_1
      %13321 = OpSelect %uint %13320 %13309 %13275
      %13322 = OpIEqual %bool %13277 %uint_2
      %13323 = OpSelect %uint %13322 %13309 %13274
               OpBranch %13311
      %13311 = OpLabel
      %13324 = OpPhi %uint %13274 %13313 %13323 %13312
      %13325 = OpPhi %uint %13275 %13313 %13321 %13312
      %13326 = OpPhi %uint %13276 %13313 %13319 %13312
      %13327 = OpIAdd %uint %12814 %uint_3
               OpBranch %13285
      %13285 = OpLabel
      %13328 = OpPhi %uint %13274 %13261 %13324 %13311
      %13329 = OpPhi %uint %13275 %13261 %13325 %13311
      %13330 = OpPhi %uint %13276 %13261 %13326 %13311
      %13331 = OpPhi %uint %13277 %13261 %13327 %13311
      %13332 = OpShiftRightLogical %uint %12810 %uint_2
      %13333 = OpBitwiseAnd %uint %13332 %uint_7
      %13334 = OpINotEqual %bool %13333 %uint_0
               OpSelectionMerge %13335 None
               OpBranchConditional %13334 %13336 %13335
      %13336 = OpLabel
      %13337 = OpINotEqual %bool %13333 %uint_4
               OpSelectionMerge %13338 None
               OpBranchConditional %13337 %13339 %13338
      %13339 = OpLabel
      %13340 = OpBitwiseAnd %uint %11024 %uint_4294967292
      %13341 = OpBitwiseAnd %uint %13333 %uint_3
      %13342 = OpBitwiseOr %uint %13340 %13341
      %13343 = OpIEqual %bool %13333 %uint_1
               OpSelectionMerge %13344 None
               OpBranchConditional %13343 %13345 %13346
      %13346 = OpLabel
      %13347 = OpIEqual %bool %13333 %uint_3
               OpSelectionMerge %13348 None
               OpBranchConditional %13347 %13349 %13350
      %13350 = OpLabel
      %13351 = OpBitwiseAnd %uint %13342 %uint_3
      %13352 = OpExtInst %uint %1 PackHalf2x16 %556
      %13353 = OpShiftRightLogical %uint %13352 %uint_5
      %13354 = OpBitwiseAnd %uint %13353 %uint_1023
      %13355 = OpShiftLeftLogical %uint %13354 %uint_22
      %13356 = OpShiftLeftLogical %uint %13354 %uint_12
      %13357 = OpBitwiseOr %uint %13355 %13356
      %13358 = OpShiftLeftLogical %uint %13354 %uint_2
      %13359 = OpBitwiseOr %uint %13357 %13358
      %13360 = OpBitwiseOr %uint %13351 %13359
               OpBranch %13348
      %13349 = OpLabel
      %13361 = OpExtInst %float %1 Fma %461 %float_255 %float_0_5
      %13362 = OpConvertFToU %uint %13361
      %13363 = OpBitwiseAnd %uint %13342 %uint_3
      %13364 = OpShiftLeftLogical %uint %13362 %uint_24
      %13365 = OpBitwiseOr %uint %13363 %13364
      %13366 = OpBitwiseOr %uint %13365 %uint_0
               OpBranch %13348
      %13348 = OpLabel
      %13367 = OpPhi %uint %13360 %13350 %13366 %13349
               OpBranch %13344
      %13345 = OpLabel
      %13368 = OpExtInst %float %1 FAbs %461
      %13369 = OpFSub %float %float_1 %13368
      %13370 = OpBitwiseAnd %uint %13342 %uint_3
      %13371 = OpExtInst %float %1 FClamp %13369 %float_0 %float_1
      %13372 = OpFMul %float %13371 %float_255
      %13373 = OpConvertFToU %uint %13372
      %13374 = OpShiftLeftLogical %uint %13373 %uint_2
      %13375 = OpBitwiseOr %uint %13370 %13374
               OpBranch %13344
      %13344 = OpLabel
      %13376 = OpPhi %uint %13367 %13348 %13375 %13345
      %13377 = OpCompositeExtract %float %10778 0
      %13378 = OpCompositeExtract %float %10778 1
      %13379 = OpCompositeExtract %float %10778 2
      %13380 = OpCompositeConstruct %v4float %13377 %13378 %13379 %float_0
      %13381 = OpVectorShuffle %v3float %13380 %13380 0 1 2
      %13382 = OpExtInst %v3float %1 FClamp %13381 %106 %131
      %13383 = OpCompositeExtract %float %13382 0
               OpSelectionMerge %13384 None
               OpSwitch %uint_0 %13385
      %13385 = OpLabel
      %13386 = OpFOrdLessThan %bool %13383 %float_0_00313066994
               OpSelectionMerge %13387 None
               OpBranchConditional %13386 %13388 %13387
      %13388 = OpLabel
      %13389 = OpFMul %float %13383 %float_12_9200001
               OpBranch %13384
      %13387 = OpLabel
      %13390 = OpExtInst %float %1 Pow %13383 %float_0_416666657
      %13391 = OpExtInst %float %1 Fma %13390 %float_1_05499995 %float_n0_0549999997
               OpBranch %13384
      %13384 = OpLabel
      %13392 = OpPhi %float %13389 %13388 %13391 %13387
      %13393 = OpCompositeExtract %float %13382 1
               OpSelectionMerge %13394 None
               OpSwitch %uint_0 %13395
      %13395 = OpLabel
      %13396 = OpFOrdLessThan %bool %13393 %float_0_00313066994
               OpSelectionMerge %13397 None
               OpBranchConditional %13396 %13398 %13397
      %13398 = OpLabel
      %13399 = OpFMul %float %13393 %float_12_9200001
               OpBranch %13394
      %13397 = OpLabel
      %13400 = OpExtInst %float %1 Pow %13393 %float_0_416666657
      %13401 = OpExtInst %float %1 Fma %13400 %float_1_05499995 %float_n0_0549999997
               OpBranch %13394
      %13394 = OpLabel
      %13402 = OpPhi %float %13399 %13398 %13401 %13397
      %13403 = OpCompositeExtract %float %13382 2
               OpSelectionMerge %13404 None
               OpSwitch %uint_0 %13405
      %13405 = OpLabel
      %13406 = OpFOrdLessThan %bool %13403 %float_0_00313066994
               OpSelectionMerge %13407 None
               OpBranchConditional %13406 %13408 %13407
      %13408 = OpLabel
      %13409 = OpFMul %float %13403 %float_12_9200001
               OpBranch %13404
      %13407 = OpLabel
      %13410 = OpExtInst %float %1 Pow %13403 %float_0_416666657
      %13411 = OpExtInst %float %1 Fma %13410 %float_1_05499995 %float_n0_0549999997
               OpBranch %13404
      %13404 = OpLabel
      %13412 = OpPhi %float %13409 %13408 %13411 %13407
      %13413 = OpExtInst %float %1 FClamp %13392 %float_0 %float_1
      %13414 = OpFMul %float %13413 %float_255
      %13415 = OpConvertFToU %uint %13414
      %13416 = OpShiftLeftLogical %uint %13415 %uint_0
      %13417 = OpExtInst %float %1 FClamp %13402 %float_0 %float_1
      %13418 = OpFMul %float %13417 %float_255
      %13419 = OpConvertFToU %uint %13418
      %13420 = OpShiftLeftLogical %uint %13419 %uint_8
      %13421 = OpExtInst %float %1 FClamp %13412 %float_0 %float_1
      %13422 = OpFMul %float %13421 %float_255
      %13423 = OpConvertFToU %uint %13422
      %13424 = OpShiftLeftLogical %uint %13423 %uint_16
      %13425 = OpBitwiseOr %uint %13416 %13420
      %13426 = OpBitwiseOr %uint %13425 %13424
      %13427 = OpBitwiseOr %uint %13426 %uint_0
               OpBranch %13338
      %13338 = OpLabel
      %13428 = OpPhi %uint %458 %13336 %13427 %13404
      %13429 = OpPhi %uint %11024 %13336 %13376 %13404
      %13430 = OpIEqual %bool %13333 %uint_3
      %13431 = OpIAdd %uint %13331 %uint_1
               OpSelectionMerge %13432 None
               OpBranchConditional %13430 %13433 %13434
      %13434 = OpLabel
      %13435 = OpShiftRightLogical %uint %12810 %uint_10
      %13436 = OpBitwiseAnd %uint %13435 %uint_1
      %13437 = OpINotEqual %bool %13436 %uint_0
      %13438 = OpIEqual %bool %13333 %uint_2
      %13439 = OpLogicalAnd %bool %13437 %13438
               OpSelectionMerge %13440 None
               OpBranchConditional %13439 %13441 %13440
      %13441 = OpLabel
      %13442 = OpExtInst %v3float %1 NMax %553 %106
      %13443 = OpVectorShuffle %v4float %459 %13442 4 5 6 3
               OpBranch %13440
      %13440 = OpLabel
      %13444 = OpPhi %v4float %459 %13434 %13443 %13441
      %13445 = OpCompositeExtract %float %13444 0
      %13446 = OpCompositeConstruct %v2float %13445 %float_0
      %13447 = OpExtInst %uint %1 PackHalf2x16 %13446
      %13448 = OpShiftLeftLogical %uint %13447 %uint_17
      %13449 = OpBitwiseAnd %uint %13448 %uint_4292870144
      %13450 = OpCompositeExtract %float %13444 1
      %13451 = OpCompositeConstruct %v2float %13450 %float_0
      %13452 = OpExtInst %uint %1 PackHalf2x16 %13451
      %13453 = OpShiftLeftLogical %uint %13452 %uint_6
      %13454 = OpBitwiseAnd %uint %13453 %uint_2096128
      %13455 = OpCompositeExtract %float %13444 2
      %13456 = OpCompositeConstruct %v2float %13455 %float_0
      %13457 = OpExtInst %uint %1 PackHalf2x16 %13456
      %13458 = OpShiftRightLogical %uint %13457 %uint_5
      %13459 = OpBitwiseAnd %uint %13458 %uint_1023
      %13460 = OpBitwiseOr %uint %13449 %13454
      %13461 = OpBitwiseOr %uint %13460 %13459
      %13462 = OpULessThan %bool %13331 %uint_3
               OpSelectionMerge %13463 None
               OpBranchConditional %13462 %13464 %13465
      %13465 = OpLabel
      %13466 = OpISub %uint %13331 %uint_3
      %13467 = OpCompositeExtract %uint %10775 0
      %13468 = OpCompositeExtract %uint %10775 1
      %13469 = OpCompositeConstruct %v3uint %13467 %13468 %13466
               OpImageWrite %10776 %13469 %13461 None
               OpBranch %13463
      %13464 = OpLabel
      %13470 = OpIEqual %bool %13331 %uint_0
      %13471 = OpSelect %uint %13470 %13461 %13330
      %13472 = OpIEqual %bool %13331 %uint_1
      %13473 = OpSelect %uint %13472 %13461 %13329
      %13474 = OpIEqual %bool %13331 %uint_2
      %13475 = OpSelect %uint %13474 %13461 %13328
               OpBranch %13463
      %13463 = OpLabel
      %13476 = OpPhi %uint %13328 %13465 %13475 %13464
      %13477 = OpPhi %uint %13329 %13465 %13473 %13464
      %13478 = OpPhi %uint %13330 %13465 %13471 %13464
               OpBranch %13432
      %13433 = OpLabel
      %13479 = OpExtInst %uint %1 PackHalf2x16 %556
      %13480 = OpShiftRightLogical %uint %13479 %uint_5
      %13481 = OpBitwiseAnd %uint %13480 %uint_1023
      %13482 = OpShiftLeftLogical %uint %13481 %uint_16
      %13483 = OpBitwiseOr %uint %uint_0 %13482
      %13484 = OpULessThan %bool %13331 %uint_3
               OpSelectionMerge %13485 None
               OpBranchConditional %13484 %13486 %13487
      %13487 = OpLabel
      %13488 = OpISub %uint %13331 %uint_3
      %13489 = OpCompositeExtract %uint %10775 0
      %13490 = OpCompositeExtract %uint %10775 1
      %13491 = OpCompositeConstruct %v3uint %13489 %13490 %13488
               OpImageWrite %10776 %13491 %13483 None
               OpBranch %13485
      %13486 = OpLabel
      %13492 = OpIEqual %bool %13331 %uint_0
      %13493 = OpSelect %uint %13492 %13483 %13330
      %13494 = OpIEqual %bool %13331 %uint_1
      %13495 = OpSelect %uint %13494 %13483 %13329
      %13496 = OpIEqual %bool %13331 %uint_2
      %13497 = OpSelect %uint %13496 %13483 %13328
               OpBranch %13485
      %13485 = OpLabel
      %13498 = OpPhi %uint %13328 %13487 %13497 %13486
      %13499 = OpPhi %uint %13329 %13487 %13495 %13486
      %13500 = OpPhi %uint %13330 %13487 %13493 %13486
               OpBranch %13432
      %13432 = OpLabel
      %13501 = OpPhi %uint %13476 %13463 %13498 %13485
      %13502 = OpPhi %uint %13477 %13463 %13499 %13485
      %13503 = OpPhi %uint %13478 %13463 %13500 %13485
               OpBranch %13335
      %13335 = OpLabel
      %13504 = OpPhi %uint %458 %13285 %13428 %13432
      %13505 = OpPhi %uint %11024 %13285 %13429 %13432
      %13506 = OpPhi %uint %13328 %13285 %13501 %13432
      %13507 = OpPhi %uint %13329 %13285 %13502 %13432
      %13508 = OpPhi %uint %13330 %13285 %13503 %13432
      %13509 = OpPhi %uint %13331 %13285 %13431 %13432
      %13510 = OpShiftRightLogical %uint %12810 %uint_9
      %13511 = OpBitwiseAnd %uint %13510 %uint_1
      %13512 = OpINotEqual %bool %13511 %uint_0
               OpSelectionMerge %13513 None
               OpBranchConditional %13512 %13514 %13513
      %13514 = OpLabel
               OpSelectionMerge %13515 None
               OpSwitch %uint_0 %13516
      %13516 = OpLabel
               OpSelectionMerge %13517 None
               OpBranchConditional %true %13518 %13517
      %13518 = OpLabel
               OpBranch %13515
      %13517 = OpLabel
      %13519 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13515
      %13515 = OpLabel
      %13520 = OpPhi %float %float_0 %13518 %13519 %13517
               OpSelectionMerge %13521 None
               OpSwitch %uint_0 %13522
      %13522 = OpLabel
               OpSelectionMerge %13523 None
               OpBranchConditional %true %13524 %13523
      %13524 = OpLabel
               OpBranch %13521
      %13523 = OpLabel
      %13525 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13521
      %13521 = OpLabel
      %13526 = OpPhi %float %float_0 %13524 %13525 %13523
               OpSelectionMerge %13527 None
               OpSwitch %uint_0 %13528
      %13528 = OpLabel
               OpSelectionMerge %13529 None
               OpBranchConditional %true %13530 %13529
      %13530 = OpLabel
               OpBranch %13527
      %13529 = OpLabel
      %13531 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13527
      %13527 = OpLabel
      %13532 = OpPhi %float %float_0 %13530 %13531 %13529
      %13533 = OpCompositeConstruct %v3float %13520 %13526 %13532
      %13534 = OpBitcast %v3uint %13533
      %13535 = OpBitwiseAnd %v3uint %13534 %349
      %13536 = OpExtInst %v3uint %1 UMin %13535 %500
      %13537 = OpConvertUToF %v3float %13536
      %13538 = OpExtInst %v3float %1 Fma %13121 %13537 %13533
      %13539 = OpExtInst %v3float %1 FClamp %13538 %106 %131
      %13540 = OpCompositeExtract %float %13539 0
      %13541 = OpFMul %float %13540 %float_127
      %13542 = OpConvertFToU %uint %13541
      %13543 = OpShiftLeftLogical %uint %13542 %uint_0
      %13544 = OpCompositeExtract %float %13539 1
      %13545 = OpFMul %float %13544 %float_127
      %13546 = OpConvertFToU %uint %13545
      %13547 = OpShiftLeftLogical %uint %13546 %uint_7
      %13548 = OpCompositeExtract %float %13539 2
      %13549 = OpFMul %float %13548 %float_63
      %13550 = OpConvertFToU %uint %13549
      %13551 = OpShiftLeftLogical %uint %13550 %uint_14
      %13552 = OpBitwiseOr %uint %13543 %13547
      %13553 = OpBitwiseOr %uint %13552 %13551
      %13554 = OpExtInst %float %1 Fma %13120 %float_0 %float_0
      %13555 = OpExtInst %float %1 FClamp %13554 %float_0 %float_1
      %13556 = OpFMul %float %13555 %float_63
      %13557 = OpConvertFToU %uint %13556
      %13558 = OpShiftLeftLogical %uint %13557 %uint_20
      %13559 = OpBitwiseOr %uint %13553 %13558
      %13560 = OpShiftLeftLogical %uint %13557 %uint_26
      %13561 = OpBitwiseOr %uint %13559 %13560
      %13562 = OpULessThan %bool %13509 %uint_3
               OpSelectionMerge %13563 None
               OpBranchConditional %13562 %13564 %13565
      %13565 = OpLabel
      %13566 = OpISub %uint %13509 %uint_3
      %13567 = OpCompositeExtract %uint %10775 0
      %13568 = OpCompositeExtract %uint %10775 1
      %13569 = OpCompositeConstruct %v3uint %13567 %13568 %13566
               OpImageWrite %10776 %13569 %13561 None
               OpBranch %13563
      %13564 = OpLabel
      %13570 = OpIEqual %bool %13509 %uint_0
      %13571 = OpSelect %uint %13570 %13561 %13508
      %13572 = OpIEqual %bool %13509 %uint_1
      %13573 = OpSelect %uint %13572 %13561 %13507
      %13574 = OpIEqual %bool %13509 %uint_2
      %13575 = OpSelect %uint %13574 %13561 %13506
               OpBranch %13563
      %13563 = OpLabel
      %13576 = OpPhi %uint %13506 %13565 %13575 %13564
      %13577 = OpPhi %uint %13507 %13565 %13573 %13564
      %13578 = OpPhi %uint %13508 %13565 %13571 %13564
      %13579 = OpIAdd %uint %13509 %uint_1
               OpBranch %13513
      %13513 = OpLabel
      %13580 = OpPhi %uint %13506 %13335 %13576 %13563
      %13581 = OpPhi %uint %13507 %13335 %13577 %13563
      %13582 = OpPhi %uint %13508 %13335 %13578 %13563
      %13583 = OpPhi %uint %13509 %13335 %13579 %13563
      %13584 = OpShiftRightLogical %uint %12810 %uint_16
      %13585 = OpBitwiseAnd %uint %13584 %uint_1
      %13586 = OpINotEqual %bool %13585 %uint_0
               OpSelectionMerge %13587 None
               OpBranchConditional %13586 %13588 %13587
      %13588 = OpLabel
               OpSelectionMerge %13589 None
               OpSwitch %uint_0 %13590
      %13590 = OpLabel
      %13591 = OpExtInst %float %1 Fma %float_1 %float_1_05499995 %float_n0_0549999997
               OpBranch %13589
      %13589 = OpLabel
               OpBranch %13592
      %13592 = OpLabel
               OpBranch %13593
      %13593 = OpLabel
      %13594 = OpExtInst %float %1 FClamp %13591 %float_0 %float_1
      %13595 = OpFMul %float %13594 %float_255
      %13596 = OpConvertFToU %uint %13595
      %13597 = OpShiftLeftLogical %uint %13596 %uint_0
      %13598 = OpShiftLeftLogical %uint %13596 %uint_8
      %13599 = OpShiftLeftLogical %uint %13596 %uint_16
      %13600 = OpBitwiseOr %uint %13597 %13598
      %13601 = OpBitwiseOr %uint %13600 %13599
      %13602 = OpBitwiseOr %uint %13601 %uint_0
      %13603 = OpULessThan %bool %13583 %uint_3
               OpSelectionMerge %13604 None
               OpBranchConditional %13603 %13605 %13606
      %13606 = OpLabel
      %13607 = OpISub %uint %13583 %uint_3
      %13608 = OpCompositeExtract %uint %10775 0
      %13609 = OpCompositeExtract %uint %10775 1
      %13610 = OpCompositeConstruct %v3uint %13608 %13609 %13607
               OpImageWrite %10776 %13610 %13602 None
               OpBranch %13604
      %13605 = OpLabel
      %13611 = OpIEqual %bool %13583 %uint_0
      %13612 = OpSelect %uint %13611 %13602 %13582
      %13613 = OpIEqual %bool %13583 %uint_1
      %13614 = OpSelect %uint %13613 %13602 %13581
      %13615 = OpIEqual %bool %13583 %uint_2
      %13616 = OpSelect %uint %13615 %13602 %13580
               OpBranch %13604
      %13604 = OpLabel
      %13617 = OpPhi %uint %13580 %13606 %13616 %13605
      %13618 = OpPhi %uint %13581 %13606 %13614 %13605
      %13619 = OpPhi %uint %13582 %13606 %13612 %13605
               OpBranch %13587
      %13587 = OpLabel
      %13620 = OpPhi %uint %13580 %13513 %13617 %13604
      %13621 = OpPhi %uint %13581 %13513 %13618 %13604
      %13622 = OpPhi %uint %13582 %13513 %13619 %13604
               OpBranch %12823
      %12823 = OpLabel
      %13623 = OpPhi %uint %458 %12820 %13014 %12953 %458 %13101 %13504 %13587
      %13624 = OpPhi %uint %11024 %12820 %13015 %12953 %11024 %13101 %13505 %13587
      %13625 = OpPhi %uint %12811 %12820 %12947 %12953 %13114 %13101 %13620 %13587
      %13626 = OpPhi %uint %12812 %12820 %12948 %12953 %13115 %13101 %13621 %13587
      %13627 = OpPhi %uint %12813 %12820 %12949 %12953 %13116 %13101 %13622 %13587
               OpBranch %12819
      %12819 = OpLabel
      %13628 = OpPhi %uint %458 %11637 %13623 %12823
      %13629 = OpPhi %uint %11024 %11637 %13624 %12823
      %13630 = OpPhi %uint %12811 %11637 %13625 %12823
      %13631 = OpPhi %uint %12812 %11637 %13626 %12823
      %13632 = OpPhi %uint %12813 %11637 %13627 %12823
               OpBranch %11626
      %11626 = OpLabel
      %13633 = OpPhi %uint %458 %11577 %13628 %12819
      %13634 = OpPhi %uint %11024 %11577 %13629 %12819
      %13635 = OpPhi %uint %uint_0 %11577 %13630 %12819
      %13636 = OpPhi %uint %11623 %11577 %13631 %12819
      %13637 = OpPhi %uint %11624 %11577 %13632 %12819
      %13638 = OpExtInst %v3float %1 FAbs %10932
      %13639 = OpDot %float %131 %13638
      %13640 = OpCompositeConstruct %v2float %13639 %13639
      %13641 = OpVectorShuffle %v2float %10932 %10932 0 1
      %13642 = OpFDiv %v2float %13641 %13640
      %13643 = OpVectorShuffle %v3float %10932 %13642 3 4 2
      %13644 = OpCompositeExtract %float %10932 2
      %13645 = OpFOrdLessThanEqual %bool %13644 %float_0
               OpSelectionMerge %13646 None
               OpBranchConditional %13645 %13647 %13646
      %13647 = OpLabel
      %13648 = OpVectorShuffle %v2float %13642 %460 1 0
      %13649 = OpExtInst %v2float %1 FAbs %13648
      %13650 = OpFSub %v2float %315 %13649
      %13651 = OpVectorShuffle %v2float %13642 %460 0 1
      %13652 = OpFOrdGreaterThanEqual %v2bool %13651 %128
      %13653 = OpCompositeExtract %bool %13652 0
      %13654 = OpSelect %float %13653 %float_1 %float_n1
      %13655 = OpCompositeExtract %bool %13652 1
      %13656 = OpSelect %float %13655 %float_1 %float_n1
      %13657 = OpCompositeConstruct %v2float %13654 %13656
      %13658 = OpFMul %v2float %13650 %13657
      %13659 = OpVectorShuffle %v3float %10932 %13658 3 4 2
               OpBranch %13646
      %13646 = OpLabel
      %13660 = OpPhi %v3float %13643 %11626 %13659 %13647
      %13661 = OpVectorShuffle %v2float %13660 %13660 0 1
      %13662 = OpVectorTimesScalar %v2float %13661 %float_1023
      %13663 = OpFAdd %v2float %13662 %328
      %13664 = OpExtInst %v2float %1 FClamp %13663 %128 %329
      %13665 = OpConvertFToU %v2uint %13664
      %13666 = OpCompositeExtract %uint %13665 0
      %13667 = OpCompositeExtract %uint %13665 1
      %13668 = OpShiftLeftLogical %uint %13667 %uint_11
      %13669 = OpBitwiseOr %uint %13666 %13668
      %13670 = OpShiftLeftLogical %uint %13669 %uint_10
      %13671 = OpExtInst %float %1 FClamp %10934 %float_0 %float_1
      %13672 = OpFMul %float %13671 %float_255
      %13673 = OpConvertFToU %uint %13672
      %13674 = OpShiftLeftLogical %uint %13673 %uint_2
      %13675 = OpBitwiseOr %uint %13670 %13674
      %13676 = OpBitwiseOr %uint %13675 %10920
      %13677 = OpBitwiseAnd %uint %13634 %uint_3
      %13678 = OpINotEqual %bool %13677 %uint_0
               OpSelectionMerge %13679 DontFlatten
               OpBranchConditional %13678 %13680 %13679
      %13680 = OpLabel
      %13681 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %13682 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_18
      %13683 = OpLoad %int %13682
      %13684 = OpBitcast %uint %13683
      %13685 = OpCompositeExtract %uint %10775 0
      %13686 = OpCompositeExtract %uint %10775 1
      %13687 = OpCompositeConstruct %v3uint %13685 %13686 %13684
               OpImageWrite %13681 %13687 %13634 None
      %13688 = OpIEqual %bool %13677 %uint_2
      %13689 = OpIEqual %bool %13677 %uint_3
      %13690 = OpLogicalOr %bool %13688 %13689
               OpSelectionMerge %13691 None
               OpBranchConditional %13690 %13692 %13691
      %13692 = OpLabel
      %13693 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %13694 = OpIAdd %uint %13684 %uint_1
      %13695 = OpCompositeConstruct %v3uint %13685 %13686 %13694
               OpImageWrite %13693 %13695 %13633 None
               OpBranch %13691
      %13691 = OpLabel
               OpBranch %13679
      %13679 = OpLabel
      %13696 = OpAccessChain %_ptr_Uniform_float %View %uint_21
      %13697 = OpLoad %float %13696
      %13698 = OpCompositeConstruct %v3float %13697 %13697 %13697
      %13699 = OpExtInst %v3float %1 FMix %10773 %10937 %13698
      %13700 = OpFAdd %v3float %11540 %10520
      %13701 = OpFAdd %v3float %13699 %13700
      %13702 = OpVectorTimesScalar %v3float %13701 %float_1
      %13703 = OpCompositeExtract %float %13702 0
      %13704 = OpCompositeExtract %float %13702 1
      %13705 = OpCompositeExtract %float %13702 2
      %13706 = OpCompositeConstruct %v4float %13703 %13704 %13705 %float_0
      %13707 = OpAccessChain %_ptr_Uniform_float %View %uint_34
      %13708 = OpLoad %float %13707
      %13709 = OpFOrdEqual %bool %13708 %float_0
               OpSelectionMerge %13710 None
               OpBranchConditional %13709 %13711 %13710
      %13711 = OpLabel
      %13712 = OpCompositeInsert %v4float %461 %13706 3
               OpBranch %13710
      %13710 = OpLabel
      %13713 = OpPhi %v4float %13706 %13679 %13712 %13711
      %13714 = OpCompositeInsert %v4float %8513 %102 0
      %13715 = OpCompositeInsert %v4float %float_1 %13714 1
      %13716 = OpCompositeInsert %v4float %float_1 %13715 2
      %13717 = OpCompositeInsert %v4float %float_1 %13716 3
      %13718 = OpVectorTimesScalar %v3float %10771 %11551
      %13719 = OpCompositeExtract %float %13718 0
      %13720 = OpCompositeExtract %float %13718 1
      %13721 = OpCompositeExtract %float %13718 2
      %13722 = OpCompositeConstruct %v4float %13719 %13720 %13721 %float_1
      %13723 = OpVectorTimesScalar %v4float %13713 %11551
      %13724 = OpVectorShuffle %v3float %13723 %13723 0 1 2
      %13725 = OpExtInst %v3float %1 NMin %13724 %484
      %13726 = OpVectorShuffle %v4float %13723 %13725 4 5 6 3
               OpStore %out_var_SV_Target0 %13726
               OpStore %out_var_SV_Target1 %13717
               OpStore %out_var_SV_Target2 %13722
               OpStore %out_var_SV_Target3 %13637
               OpStore %out_var_SV_Target4 %13636
               OpStore %out_var_SV_Target5 %13635
               OpStore %out_var_SV_Target6 %13676
               OpReturn
               OpFunctionEnd
