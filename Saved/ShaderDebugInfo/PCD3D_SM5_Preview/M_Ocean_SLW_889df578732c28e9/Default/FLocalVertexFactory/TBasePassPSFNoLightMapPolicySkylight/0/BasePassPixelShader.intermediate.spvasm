; SPIR-V
; Version: 1.3
; Generator: Google spiregg; 0
; Bound: 13492
; Schema: 0
               OpCapability Shader
               OpCapability SampledBuffer
               OpCapability StorageImageReadWithoutFormat
               OpExtension "SPV_GOOGLE_hlsl_functionality1"
               OpExtension "SPV_GOOGLE_user_type"
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %MainPS "MainPS" %in_var_TEXCOORD10_centroid %in_var_TEXCOORD11_centroid %in_var_PRIMITIVE_ID %in_var_TEXCOORD9 %gl_FragCoord %gl_FrontFacing %out_var_SV_Target0 %out_var_SV_Target1 %out_var_SV_Target2 %out_var_SV_Target3 %out_var_SV_Target4 %out_var_SV_Target5 %out_var_SV_Target6
               OpExecutionMode %MainPS OriginUpperLeft
               OpExecutionMode %MainPS EarlyFragmentTests

               ; Debug Information
               OpSource HLSL 620
               OpName %type_View "type.View"  ; id %16
               OpMemberName %type_View 0 "View_TranslatedWorldToView"
               OpMemberName %type_View 1 "View_ViewToClip"
               OpMemberName %type_View 2 "View_SVPositionToTranslatedWorld"
               OpMemberName %type_View 3 "View_ViewTilePosition"
               OpMemberName %type_View 4 "View_ViewForward"
               OpMemberName %type_View 5 "View_InvDeviceZToWorldZTransform"
               OpMemberName %type_View 6 "View_ScreenPositionScaleBias"
               OpMemberName %type_View 7 "View_RelativeWorldCameraOrigin"
               OpMemberName %type_View 8 "View_RelativePreViewTranslation"
               OpMemberName %type_View 9 "View_ViewRectMin"
               OpMemberName %type_View 10 "View_ViewSizeAndInvSize"
               OpMemberName %type_View 11 "View_LightProbeSizeRatioAndInvSizeRatio"
               OpMemberName %type_View 12 "View_BufferSizeAndInvSize"
               OpMemberName %type_View 13 "View_PreExposure"
               OpMemberName %type_View 14 "View_OneOverPreExposure"
               OpMemberName %type_View 15 "View_DiffuseOverrideParameter"
               OpMemberName %type_View 16 "View_SpecularOverrideParameter"
               OpMemberName %type_View 17 "View_RoughnessOverrideParameter"
               OpMemberName %type_View 18 "View_OutOfBoundsMask"
               OpMemberName %type_View 19 "View_GameTime"
               OpMemberName %type_View 20 "View_StateFrameIndexMod8"
               OpMemberName %type_View 21 "View_UnlitViewmodeMask"
               OpMemberName %type_View 22 "View_DirectionalLightColor"
               OpMemberName %type_View 23 "View_DirectionalLightDirection"
               OpMemberName %type_View 24 "View_RenderingReflectionCaptureMask"
               OpMemberName %type_View 25 "View_SkyLightColor"
               OpMemberName %type_View 26 "View_GlobalVolumeTranslatedCenterAndExtent"
               OpMemberName %type_View 27 "View_GlobalVolumeTranslatedWorldToUVAddAndMul"
               OpMemberName %type_View 28 "View_GlobalDistanceFieldClipmapSizeInPages"
               OpMemberName %type_View 29 "View_GlobalDistanceFieldInvPageAtlasSize"
               OpMemberName %type_View 30 "View_GlobalVolumeTexelSize"
               OpMemberName %type_View 31 "View_NumGlobalSDFClipmaps"
               OpMemberName %type_View 32 "View_bCheckerboardSubsurfaceProfileRendering"
               OpMemberName %type_View 33 "View_VolumetricLightmapWorldToUVScale"
               OpMemberName %type_View 34 "View_VolumetricLightmapWorldToUVAdd"
               OpMemberName %type_View 35 "View_VolumetricLightmapIndirectionTextureSize"
               OpMemberName %type_View 36 "View_VolumetricLightmapBrickSize"
               OpMemberName %type_View 37 "View_VolumetricLightmapBrickTexelSize"
               OpMemberName %type_View 38 "View_MinRoughness"
               OpMemberName %type_View 39 "View_bShadingEnergyConservation"
               OpMemberName %type_View 40 "View_bShadingEnergyPreservation"
               OpName %View "View"  ; id %17
               OpName %type_3d_image "type.3d.image"  ; id %18
               OpName %View_VolumetricLightmapIndirectionTexture "View_VolumetricLightmapIndirectionTexture"  ; id %19
               OpName %type_3d_image_0 "type.3d.image"  ; id %20
               OpName %View_DirectionalLightShadowingBrickTexture "View_DirectionalLightShadowingBrickTexture"  ; id %21
               OpName %View_GlobalDistanceFieldPageAtlasTexture "View_GlobalDistanceFieldPageAtlasTexture"  ; id %22
               OpName %View_GlobalDistanceFieldPageTableTexture "View_GlobalDistanceFieldPageTableTexture"  ; id %23
               OpName %type_2d_image "type.2d.image"  ; id %24
               OpName %type_sampler "type.sampler"  ; id %25
               OpName %View_PerlinNoise3DTexture "View_PerlinNoise3DTexture"  ; id %26
               OpName %View_PerlinNoise3DTextureSampler "View_PerlinNoise3DTextureSampler"  ; id %27
               OpName %View_SharedBilinearClampedSampler "View_SharedBilinearClampedSampler"  ; id %28
               OpName %View_SharedTrilinearWrappedSampler "View_SharedTrilinearWrappedSampler"  ; id %29
               OpName %type_StructuredBuffer_v4float "type.StructuredBuffer.v4float"  ; id %30
               OpName %View_SkyIrradianceEnvironmentMap "View_SkyIrradianceEnvironmentMap"  ; id %31
               OpName %View_ShadingEnergyGGXSpecTexture "View_ShadingEnergyGGXSpecTexture"  ; id %32
               OpName %View_ShadingEnergySampler "View_ShadingEnergySampler"  ; id %33
               OpName %View_SimpleVolumeEnvTexture "View_SimpleVolumeEnvTexture"  ; id %34
               OpName %View_SimpleVolumeEnvTextureSampler "View_SimpleVolumeEnvTextureSampler"  ; id %35
               OpName %type_SingleLayerWater "type.SingleLayerWater"  ; id %36
               OpMemberName %type_SingleLayerWater 0 "SingleLayerWater_SceneWithoutSingleLayerWaterMinMaxUV"
               OpMemberName %type_SingleLayerWater 1 "SingleLayerWater_DistortionParams"
               OpMemberName %type_SingleLayerWater 2 "SingleLayerWater_SceneWithoutSingleLayerWaterTextureSize"
               OpMemberName %type_SingleLayerWater 3 "SingleLayerWater_bMainDirectionalLightVSMFiltering"
               OpMemberName %type_SingleLayerWater 4 "SingleLayerWater_bSeparateMainDirLightLuminance"
               OpName %SingleLayerWater "SingleLayerWater"  ; id %37
               OpName %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture "SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture"  ; id %38
               OpName %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture "SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture"  ; id %39
               OpName %Scene_GPUScene_GPUScenePrimitiveSceneData "Scene_GPUScene_GPUScenePrimitiveSceneData"  ; id %40
               OpName %type_OpaqueBasePass "type.OpaqueBasePass"  ; id %41
               OpMemberName %type_OpaqueBasePass 0 "OpaqueBasePass_Shared_Forward_NumLocalLights"
               OpMemberName %type_OpaqueBasePass 1 "OpaqueBasePass_Shared_Forward_HasDirectionalLight"
               OpMemberName %type_OpaqueBasePass 2 "OpaqueBasePass_Shared_Forward_CulledGridSize"
               OpMemberName %type_OpaqueBasePass 3 "OpaqueBasePass_Shared_Forward_LightGridPixelSizeShift"
               OpMemberName %type_OpaqueBasePass 4 "OpaqueBasePass_Shared_Forward_LightGridZParams"
               OpMemberName %type_OpaqueBasePass 5 "OpaqueBasePass_Shared_Forward_DirectionalLightDirection"
               OpMemberName %type_OpaqueBasePass 6 "OpaqueBasePass_Shared_Forward_DirectionalLightSourceRadius"
               OpMemberName %type_OpaqueBasePass 7 "OpaqueBasePass_Shared_Forward_DirectionalLightColor"
               OpMemberName %type_OpaqueBasePass 8 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowMapChannelMask"
               OpMemberName %type_OpaqueBasePass 9 "OpaqueBasePass_Shared_Forward_DirectionalLightDistanceFadeMAD"
               OpMemberName %type_OpaqueBasePass 10 "OpaqueBasePass_Shared_Forward_NumDirectionalLightCascades"
               OpMemberName %type_OpaqueBasePass 11 "OpaqueBasePass_Shared_Forward_DirectionalLightVSM"
               OpMemberName %type_OpaqueBasePass 12 "OpaqueBasePass_Shared_Forward_CascadeEndDepths"
               OpMemberName %type_OpaqueBasePass 13 "OpaqueBasePass_Shared_Forward_DirectionalLightTranslatedWorldToShadowMatrix"
               OpMemberName %type_OpaqueBasePass 14 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapMinMax"
               OpMemberName %type_OpaqueBasePass 15 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlasBufferSize"
               OpMemberName %type_OpaqueBasePass 16 "OpaqueBasePass_Shared_Forward_DirectLightingShowFlag"
               OpMemberName %type_OpaqueBasePass 17 "OpaqueBasePass_Shared_UseBasePassSkylight"
               OpMemberName %type_OpaqueBasePass 18 "OpaqueBasePass_Strata_FirstSliceStoringStrataSSSDataWithoutMRT"
               OpMemberName %type_OpaqueBasePass 19 "OpaqueBasePass_UseForwardScreenSpaceShadowMask"
               OpName %OpaqueBasePass "OpaqueBasePass"  ; id %42
               OpName %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas"  ; id %43
               OpName %OpaqueBasePass_Shared_Forward_ShadowmapSampler "OpaqueBasePass_Shared_Forward_ShadowmapSampler"  ; id %44
               OpName %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer "OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer"  ; id %45
               OpName %type_StructuredBuffer_uint "type.StructuredBuffer.uint"  ; id %46
               OpName %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid "OpaqueBasePass_Shared_Forward_NumCulledLightsGrid"  ; id %47
               OpName %type_buffer_image "type.buffer.image"  ; id %48
               OpName %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit "OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit"  ; id %49
               OpName %type_2d_image_array "type.2d.image.array"  ; id %50
               OpName %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs "OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs"  ; id %51
               OpName %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture "OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture"  ; id %52
               OpName %OpaqueBasePass_PreIntegratedGFTexture "OpaqueBasePass_PreIntegratedGFTexture"  ; id %53
               OpName %type_ByteAddressBuffer "type.ByteAddressBuffer"  ; id %54
               OpName %VirtualShadowMap_ProjectionData "VirtualShadowMap_ProjectionData"  ; id %55
               OpName %VirtualShadowMap_PageTable "VirtualShadowMap_PageTable"  ; id %56
               OpName %type_2d_image_array_0 "type.2d.image.array"  ; id %57
               OpName %VirtualShadowMap_PhysicalPagePool "VirtualShadowMap_PhysicalPagePool"  ; id %58
               OpName %type_MaterialCollection0 "type.MaterialCollection0"  ; id %59
               OpMemberName %type_MaterialCollection0 0 "MaterialCollection0_Vectors"
               OpName %MaterialCollection0 "MaterialCollection0"  ; id %60
               OpName %type_Material "type.Material"  ; id %61
               OpMemberName %type_Material 0 "Material_PreshaderBuffer"
               OpName %Material "Material"  ; id %62
               OpName %in_var_TEXCOORD10_centroid "in.var.TEXCOORD10_centroid"  ; id %3
               OpName %in_var_TEXCOORD11_centroid "in.var.TEXCOORD11_centroid"  ; id %4
               OpName %in_var_PRIMITIVE_ID "in.var.PRIMITIVE_ID"  ; id %5
               OpName %in_var_TEXCOORD9 "in.var.TEXCOORD9"  ; id %6
               OpName %out_var_SV_Target0 "out.var.SV_Target0"  ; id %9
               OpName %out_var_SV_Target1 "out.var.SV_Target1"  ; id %10
               OpName %out_var_SV_Target2 "out.var.SV_Target2"  ; id %11
               OpName %out_var_SV_Target3 "out.var.SV_Target3"  ; id %12
               OpName %out_var_SV_Target4 "out.var.SV_Target4"  ; id %13
               OpName %out_var_SV_Target5 "out.var.SV_Target5"  ; id %14
               OpName %out_var_SV_Target6 "out.var.SV_Target6"  ; id %15
               OpName %MainPS "MainPS"  ; id %2
               OpName %type_sampled_image "type.sampled.image"  ; id %63
               OpName %type_sampled_image_0 "type.sampled.image"  ; id %64

               ; Annotations
               OpDecorateString %in_var_TEXCOORD10_centroid UserSemantic "TEXCOORD10_centroid"
               OpDecorateString %in_var_TEXCOORD11_centroid UserSemantic "TEXCOORD11_centroid"
               OpDecorateString %in_var_PRIMITIVE_ID UserSemantic "PRIMITIVE_ID"
               OpDecorate %in_var_PRIMITIVE_ID Flat
               OpDecorateString %in_var_TEXCOORD9 UserSemantic "TEXCOORD9"
               OpDecorate %gl_FragCoord BuiltIn FragCoord
               OpDecorateString %gl_FragCoord UserSemantic "SV_Position"
               OpDecorate %gl_FrontFacing BuiltIn FrontFacing
               OpDecorateString %gl_FrontFacing UserSemantic "SV_IsFrontFace"
               OpDecorate %gl_FrontFacing Flat
               OpDecorateString %out_var_SV_Target0 UserSemantic "SV_Target0"
               OpDecorateString %out_var_SV_Target1 UserSemantic "SV_Target1"
               OpDecorateString %out_var_SV_Target2 UserSemantic "SV_Target2"
               OpDecorateString %out_var_SV_Target3 UserSemantic "SV_Target3"
               OpDecorateString %out_var_SV_Target4 UserSemantic "SV_Target4"
               OpDecorateString %out_var_SV_Target5 UserSemantic "SV_Target5"
               OpDecorateString %out_var_SV_Target6 UserSemantic "SV_Target6"
               OpDecorate %in_var_TEXCOORD10_centroid Location 0
               OpDecorate %in_var_TEXCOORD11_centroid Location 1
               OpDecorate %in_var_PRIMITIVE_ID Location 2
               OpDecorate %in_var_TEXCOORD9 Location 3
               OpDecorate %out_var_SV_Target0 Location 0
               OpDecorate %out_var_SV_Target1 Location 1
               OpDecorate %out_var_SV_Target2 Location 2
               OpDecorate %out_var_SV_Target3 Location 3
               OpDecorate %out_var_SV_Target4 Location 4
               OpDecorate %out_var_SV_Target5 Location 5
               OpDecorate %out_var_SV_Target6 Location 6
               OpDecorate %View DescriptorSet 0
               OpDecorate %View Binding 0
               OpDecorate %View_VolumetricLightmapIndirectionTexture DescriptorSet 0
               OpDecorate %View_VolumetricLightmapIndirectionTexture Binding 1
               OpDecorate %View_DirectionalLightShadowingBrickTexture DescriptorSet 0
               OpDecorate %View_DirectionalLightShadowingBrickTexture Binding 2
               OpDecorate %View_GlobalDistanceFieldPageAtlasTexture DescriptorSet 0
               OpDecorate %View_GlobalDistanceFieldPageAtlasTexture Binding 3
               OpDecorate %View_GlobalDistanceFieldPageTableTexture DescriptorSet 0
               OpDecorate %View_GlobalDistanceFieldPageTableTexture Binding 4
               OpDecorate %View_PerlinNoise3DTexture DescriptorSet 0
               OpDecorate %View_PerlinNoise3DTexture Binding 7
               OpDecorate %View_PerlinNoise3DTextureSampler DescriptorSet 0
               OpDecorate %View_PerlinNoise3DTextureSampler Binding 8
               OpDecorate %View_SharedBilinearClampedSampler DescriptorSet 0
               OpDecorate %View_SharedBilinearClampedSampler Binding 10
               OpDecorate %View_SharedTrilinearWrappedSampler DescriptorSet 0
               OpDecorate %View_SharedTrilinearWrappedSampler Binding 11
               OpDecorate %View_SkyIrradianceEnvironmentMap DescriptorSet 0
               OpDecorate %View_SkyIrradianceEnvironmentMap Binding 15
               OpDecorate %View_ShadingEnergyGGXSpecTexture DescriptorSet 0
               OpDecorate %View_ShadingEnergyGGXSpecTexture Binding 24
               OpDecorate %View_ShadingEnergySampler DescriptorSet 0
               OpDecorate %View_ShadingEnergySampler Binding 27
               OpDecorate %View_SimpleVolumeEnvTexture DescriptorSet 0
               OpDecorate %View_SimpleVolumeEnvTexture Binding 30
               OpDecorate %View_SimpleVolumeEnvTextureSampler DescriptorSet 0
               OpDecorate %View_SimpleVolumeEnvTextureSampler Binding 31
               OpDecorate %SingleLayerWater DescriptorSet 0
               OpDecorate %SingleLayerWater Binding 35
               OpDecorate %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture DescriptorSet 0
               OpDecorate %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture Binding 36
               OpDecorate %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture DescriptorSet 0
               OpDecorate %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture Binding 37
               OpDecorate %Scene_GPUScene_GPUScenePrimitiveSceneData DescriptorSet 0
               OpDecorate %Scene_GPUScene_GPUScenePrimitiveSceneData Binding 39
               OpDecorate %OpaqueBasePass DescriptorSet 0
               OpDecorate %OpaqueBasePass Binding 40
               OpDecorate %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas Binding 41
               OpDecorate %OpaqueBasePass_Shared_Forward_ShadowmapSampler DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_ShadowmapSampler Binding 42
               OpDecorate %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer Binding 43
               OpDecorate %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid Binding 44
               OpDecorate %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit Binding 45
               OpDecorate %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs DescriptorSet 0
               OpDecorate %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs Binding 46
               OpDecorate %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture DescriptorSet 0
               OpDecorate %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture Binding 47
               OpDecorate %OpaqueBasePass_PreIntegratedGFTexture DescriptorSet 0
               OpDecorate %OpaqueBasePass_PreIntegratedGFTexture Binding 48
               OpDecorate %VirtualShadowMap_ProjectionData DescriptorSet 0
               OpDecorate %VirtualShadowMap_ProjectionData Binding 49
               OpDecorate %VirtualShadowMap_PageTable DescriptorSet 0
               OpDecorate %VirtualShadowMap_PageTable Binding 50
               OpDecorate %VirtualShadowMap_PhysicalPagePool DescriptorSet 0
               OpDecorate %VirtualShadowMap_PhysicalPagePool Binding 51
               OpDecorate %MaterialCollection0 DescriptorSet 0
               OpDecorate %MaterialCollection0 Binding 52
               OpDecorate %Material DescriptorSet 0
               OpDecorate %Material Binding 53
               OpDecorate %_arr_v4float_uint_6 ArrayStride 16
               OpMemberDecorate %type_View 0 Offset 192
               OpMemberDecorate %type_View 0 MatrixStride 16
               OpMemberDecorate %type_View 0 ColMajor
               OpMemberDecorate %type_View 1 Offset 448
               OpMemberDecorate %type_View 1 MatrixStride 16
               OpMemberDecorate %type_View 1 ColMajor
               OpMemberDecorate %type_View 2 Offset 704
               OpMemberDecorate %type_View 2 MatrixStride 16
               OpMemberDecorate %type_View 2 ColMajor
               OpMemberDecorate %type_View 3 Offset 960
               OpMemberDecorate %type_View 4 Offset 992
               OpMemberDecorate %type_View 5 Offset 1072
               OpMemberDecorate %type_View 6 Offset 1088
               OpMemberDecorate %type_View 7 Offset 1104
               OpMemberDecorate %type_View 8 Offset 1152
               OpMemberDecorate %type_View 9 Offset 1984
               OpMemberDecorate %type_View 10 Offset 2000
               OpMemberDecorate %type_View 11 Offset 2032
               OpMemberDecorate %type_View 12 Offset 2048
               OpMemberDecorate %type_View 13 Offset 2120
               OpMemberDecorate %type_View 14 Offset 2124
               OpMemberDecorate %type_View 15 Offset 2128
               OpMemberDecorate %type_View 16 Offset 2144
               OpMemberDecorate %type_View 17 Offset 2176
               OpMemberDecorate %type_View 18 Offset 2192
               OpMemberDecorate %type_View 19 Offset 2228
               OpMemberDecorate %type_View 20 Offset 2260
               OpMemberDecorate %type_View 21 Offset 2280
               OpMemberDecorate %type_View 22 Offset 2288
               OpMemberDecorate %type_View 23 Offset 2304
               OpMemberDecorate %type_View 24 Offset 2876
               OpMemberDecorate %type_View 25 Offset 2928
               OpMemberDecorate %type_View 26 Offset 3120
               OpMemberDecorate %type_View 27 Offset 3216
               OpMemberDecorate %type_View 28 Offset 3512
               OpMemberDecorate %type_View 29 Offset 3520
               OpMemberDecorate %type_View 30 Offset 3552
               OpMemberDecorate %type_View 31 Offset 3560
               OpMemberDecorate %type_View 32 Offset 3592
               OpMemberDecorate %type_View 33 Offset 3696
               OpMemberDecorate %type_View 34 Offset 3712
               OpMemberDecorate %type_View 35 Offset 3728
               OpMemberDecorate %type_View 36 Offset 3740
               OpMemberDecorate %type_View 37 Offset 3744
               OpMemberDecorate %type_View 38 Offset 3896
               OpMemberDecorate %type_View 39 Offset 5160
               OpMemberDecorate %type_View 40 Offset 5164
               OpDecorate %type_View Block
               OpDecorateString %View UserTypeGOOGLE "cbuffer"
               OpDecorateString %View_VolumetricLightmapIndirectionTexture UserTypeGOOGLE "texture3d:<uint4>"
               OpDecorateString %View_DirectionalLightShadowingBrickTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_GlobalDistanceFieldPageAtlasTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_GlobalDistanceFieldPageTableTexture UserTypeGOOGLE "texture3d:<uint>"
               OpDecorateString %View_PerlinNoise3DTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorate %_runtimearr_v4float ArrayStride 16
               OpMemberDecorate %type_StructuredBuffer_v4float 0 Offset 0
               OpMemberDecorate %type_StructuredBuffer_v4float 0 NonWritable
               OpDecorate %type_StructuredBuffer_v4float BufferBlock
               OpDecorateString %View_SkyIrradianceEnvironmentMap UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorateString %View_ShadingEnergyGGXSpecTexture UserTypeGOOGLE "texture2d:<float2>"
               OpDecorateString %View_SimpleVolumeEnvTexture UserTypeGOOGLE "texture3d:<float>"
               OpMemberDecorate %type_SingleLayerWater 0 Offset 64
               OpMemberDecorate %type_SingleLayerWater 1 Offset 80
               OpMemberDecorate %type_SingleLayerWater 2 Offset 96
               OpMemberDecorate %type_SingleLayerWater 3 Offset 112
               OpMemberDecorate %type_SingleLayerWater 4 Offset 116
               OpDecorate %type_SingleLayerWater Block
               OpDecorateString %SingleLayerWater UserTypeGOOGLE "cbuffer"
               OpDecorateString %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %Scene_GPUScene_GPUScenePrimitiveSceneData UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorate %_arr_mat4v4float_uint_4 ArrayStride 64
               OpDecorate %_arr_v4float_uint_4 ArrayStride 16
               OpMemberDecorate %type_OpaqueBasePass 0 Offset 0
               OpMemberDecorate %type_OpaqueBasePass 1 Offset 8
               OpMemberDecorate %type_OpaqueBasePass 2 Offset 16
               OpMemberDecorate %type_OpaqueBasePass 3 Offset 32
               OpMemberDecorate %type_OpaqueBasePass 4 Offset 48
               OpMemberDecorate %type_OpaqueBasePass 5 Offset 64
               OpMemberDecorate %type_OpaqueBasePass 6 Offset 76
               OpMemberDecorate %type_OpaqueBasePass 7 Offset 80
               OpMemberDecorate %type_OpaqueBasePass 8 Offset 96
               OpMemberDecorate %type_OpaqueBasePass 9 Offset 104
               OpMemberDecorate %type_OpaqueBasePass 10 Offset 112
               OpMemberDecorate %type_OpaqueBasePass 11 Offset 116
               OpMemberDecorate %type_OpaqueBasePass 12 Offset 128
               OpMemberDecorate %type_OpaqueBasePass 13 Offset 144
               OpMemberDecorate %type_OpaqueBasePass 13 MatrixStride 16
               OpMemberDecorate %type_OpaqueBasePass 13 ColMajor
               OpMemberDecorate %type_OpaqueBasePass 14 Offset 400
               OpMemberDecorate %type_OpaqueBasePass 15 Offset 464
               OpMemberDecorate %type_OpaqueBasePass 16 Offset 592
               OpMemberDecorate %type_OpaqueBasePass 17 Offset 2240
               OpMemberDecorate %type_OpaqueBasePass 18 Offset 2276
               OpMemberDecorate %type_OpaqueBasePass 19 Offset 2304
               OpDecorate %type_OpaqueBasePass Block
               OpDecorateString %OpaqueBasePass UserTypeGOOGLE "cbuffer"
               OpDecorateString %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %type_StructuredBuffer_uint 0 Offset 0
               OpMemberDecorate %type_StructuredBuffer_uint 0 NonWritable
               OpDecorate %type_StructuredBuffer_uint BufferBlock
               OpDecorateString %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid UserTypeGOOGLE "structuredbuffer:<uint>"
               OpDecorateString %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit UserTypeGOOGLE "buffer:<uint>"
               OpDecorateString %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs UserTypeGOOGLE "rwtexture2darray:<uint>"
               OpDecorateString %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %OpaqueBasePass_PreIntegratedGFTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpMemberDecorate %type_ByteAddressBuffer 0 Offset 0
               OpMemberDecorate %type_ByteAddressBuffer 0 NonWritable
               OpDecorate %type_ByteAddressBuffer BufferBlock
               OpDecorateString %VirtualShadowMap_ProjectionData UserTypeGOOGLE "byteaddressbuffer"
               OpDecorateString %VirtualShadowMap_PageTable UserTypeGOOGLE "structuredbuffer:<uint>"
               OpDecorateString %VirtualShadowMap_PhysicalPagePool UserTypeGOOGLE "texture2darray:<uint>"
               OpDecorate %_arr_v4float_uint_5 ArrayStride 16
               OpMemberDecorate %type_MaterialCollection0 0 Offset 0
               OpDecorate %type_MaterialCollection0 Block
               OpDecorateString %MaterialCollection0 UserTypeGOOGLE "cbuffer"
               OpDecorate %_arr_v4float_uint_109 ArrayStride 16
               OpMemberDecorate %type_Material 0 Offset 0
               OpDecorate %type_Material Block
               OpDecorateString %Material UserTypeGOOGLE "cbuffer"

               ; Types, variables and constants
      %float = OpTypeFloat 32
%float_3_14159274 = OpConstant %float 3.14159274
%float_64512 = OpConstant %float 64512
    %v3float = OpTypeVector %float 3
    %v4float = OpTypeVector %float 4
%mat4v4float = OpTypeMatrix %v4float 4
    %v2float = OpTypeVector %float 2
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
        %int = OpTypeInt 32 1
     %uint_2 = OpConstant %uint 2
     %uint_8 = OpConstant %uint 8
     %uint_6 = OpConstant %uint 6
      %v2int = OpTypeVector %int 2
    %uint_32 = OpConstant %uint 32
      %v4int = OpTypeVector %int 4
    %float_1 = OpConstant %float 1
       %bool = OpTypeBool
     %uint_3 = OpConstant %uint 3
      %int_0 = OpConstant %int 0
      %int_2 = OpConstant %int 2
      %int_1 = OpConstant %int 1
     %uint_0 = OpConstant %uint 0
    %float_0 = OpConstant %float 0
         %96 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
      %false = OpConstantFalse %bool
      %int_6 = OpConstant %int 6
     %int_96 = OpConstant %int 96
        %100 = OpConstantComposite %v3float %float_0 %float_0 %float_0
      %int_4 = OpConstant %int 4
   %uint_512 = OpConstant %uint 512
   %uint_256 = OpConstant %uint 256
     %uint_4 = OpConstant %uint 4
      %int_3 = OpConstant %int 3
    %uint_14 = OpConstant %uint 14
    %uint_31 = OpConstant %uint 31
     %uint_1 = OpConstant %uint 1
     %int_11 = OpConstant %int 11
     %int_24 = OpConstant %int 24
     %int_17 = OpConstant %int 17
      %int_7 = OpConstant %int 7
     %int_20 = OpConstant %int 20
     %int_10 = OpConstant %int 10
        %115 = OpConstantComposite %v4float %float_1 %float_1 %float_1 %float_1
       %true = OpConstantTrue %bool
     %int_16 = OpConstant %int 16
     %int_21 = OpConstant %int 21
     %int_75 = OpConstant %int 75
     %int_76 = OpConstant %int 76
     %int_15 = OpConstant %int 15
        %122 = OpConstantComposite %v2float %float_0 %float_0
     %int_47 = OpConstant %int 47
     %int_65 = OpConstant %int 65
        %125 = OpConstantComposite %v3float %float_1 %float_1 %float_1
     %int_81 = OpConstant %int 81
     %int_14 = OpConstant %int 14
     %int_27 = OpConstant %int 27
     %int_29 = OpConstant %int 29
%float_0_577000022 = OpConstant %float 0.577000022
        %131 = OpConstantComposite %v3float %float_0_577000022 %float_0_577000022 %float_0_577000022
        %132 = OpConstantComposite %v3float %float_1 %float_1 %float_0
        %133 = OpConstantComposite %v3float %float_0 %float_1 %float_1
  %float_0_5 = OpConstant %float 0.5
        %135 = OpConstantComposite %v3float %float_0_5 %float_0_5 %float_0_5
%float_0_0500000007 = OpConstant %float 0.0500000007
        %137 = OpConstantComposite %v3float %float_1 %float_0 %float_1
     %int_84 = OpConstant %int 84
     %int_18 = OpConstant %int 18
     %int_51 = OpConstant %int 51
%float_0_00392156886 = OpConstant %float 0.00392156886
      %int_8 = OpConstant %int 8
     %int_73 = OpConstant %int 73
      %int_5 = OpConstant %int 5
     %int_25 = OpConstant %int 25
     %int_48 = OpConstant %int 48
        %147 = OpConstantComposite %v2float %float_0_5 %float_0_5
    %float_2 = OpConstant %float 2
   %float_n2 = OpConstant %float -2
        %150 = OpConstantComposite %v2float %float_2 %float_n2
   %float_47 = OpConstant %float 47
   %float_17 = OpConstant %float 17
%float_0_0671105608 = OpConstant %float 0.0671105608
%float_0_00583714992 = OpConstant %float 0.00583714992
%float_52_9829178 = OpConstant %float 52.9829178
     %int_28 = OpConstant %int 28
     %uint_5 = OpConstant %uint 5
%uint_4294967288 = OpConstant %uint 4294967288
     %uint_7 = OpConstant %uint 7
    %uint_11 = OpConstant %uint 11
        %161 = OpConstantComposite %v3float %float_64512 %float_64512 %float_64512
%uint_2139095040 = OpConstant %uint 2139095040
   %uint_128 = OpConstant %uint 128
    %int_108 = OpConstant %int 108
%float_0_449999988 = OpConstant %float 0.449999988
%float_0_300000012 = OpConstant %float 0.300000012
%float_0_589999974 = OpConstant %float 0.589999974
%float_0_109999999 = OpConstant %float 0.109999999
        %169 = OpConstantComposite %v3float %float_0_300000012 %float_0_589999974 %float_0_109999999
%float_2_04040003 = OpConstant %float 2.04040003
%float_0_332399994 = OpConstant %float 0.332399994
        %172 = OpConstantComposite %v3float %float_0_332399994 %float_0_332399994 %float_0_332399994
%float_n4_79510021 = OpConstant %float -4.79510021
%float_0_641700029 = OpConstant %float 0.641700029
        %175 = OpConstantComposite %v3float %float_0_641700029 %float_0_641700029 %float_0_641700029
%float_2_75519991 = OpConstant %float 2.75519991
%float_0_690299988 = OpConstant %float 0.690299988
        %178 = OpConstantComposite %v3float %float_0_690299988 %float_0_690299988 %float_0_690299988
     %int_n1 = OpConstant %int -1
     %v2uint = OpTypeVector %uint 2
     %int_37 = OpConstant %int 37
%float_2097152 = OpConstant %float 2097152
   %float_50 = OpConstant %float 50
%float_9_99999996en13 = OpConstant %float 9.99999996e-13
%float_0_0199999996 = OpConstant %float 0.0199999996
%float_9_99999975en06 = OpConstant %float 9.99999975e-06
        %187 = OpConstantComposite %v3float %float_9_99999975en06 %float_9_99999975en06 %float_9_99999975en06
     %int_85 = OpConstant %int 85
     %int_59 = OpConstant %int 59
%float_0_0399999991 = OpConstant %float 0.0399999991
    %uint_16 = OpConstant %uint 16
    %uint_64 = OpConstant %uint 64
    %uint_40 = OpConstant %uint 40
     %uint_9 = OpConstant %uint 9
    %uint_10 = OpConstant %uint 10
  %uint_4095 = OpConstant %uint 4095
    %uint_12 = OpConstant %uint 12
   %uint_255 = OpConstant %uint 255
    %uint_20 = OpConstant %uint 20
    %uint_19 = OpConstant %uint 19
    %uint_24 = OpConstant %uint 24
%uint_1047552 = OpConstant %uint 1047552
  %uint_1023 = OpConstant %uint 1023
    %uint_63 = OpConstant %uint 63
   %uint_127 = OpConstant %uint 127
    %uint_26 = OpConstant %uint 26
    %uint_22 = OpConstant %uint 22
%uint_4294963200 = OpConstant %uint 4294963200
  %float_100 = OpConstant %float 100
  %float_128 = OpConstant %float 128
%float_0_00390625 = OpConstant %float 0.00390625
   %float_16 = OpConstant %float 16
     %int_23 = OpConstant %int 23
     %int_22 = OpConstant %int 22
     %int_30 = OpConstant %int 30
     %int_31 = OpConstant %int 31
     %int_33 = OpConstant %int 33
     %int_35 = OpConstant %int 35
     %int_26 = OpConstant %int 26
     %int_39 = OpConstant %int 39
     %int_40 = OpConstant %int 40
     %int_42 = OpConstant %int 42
     %int_43 = OpConstant %int 43
     %int_32 = OpConstant %int 32
     %int_44 = OpConstant %int 44
     %int_45 = OpConstant %int 45
     %int_34 = OpConstant %int 34
     %int_46 = OpConstant %int 46
     %int_50 = OpConstant %int 50
     %int_52 = OpConstant %int 52
     %int_38 = OpConstant %int 38
     %int_54 = OpConstant %int 54
     %int_56 = OpConstant %int 56
     %int_57 = OpConstant %int 57
     %int_58 = OpConstant %int 58
     %int_61 = OpConstant %int 61
     %int_62 = OpConstant %int 62
     %int_63 = OpConstant %int 63
     %int_64 = OpConstant %int 64
     %int_66 = OpConstant %int 66
     %int_67 = OpConstant %int 67
     %int_68 = OpConstant %int 68
     %int_53 = OpConstant %int 53
     %int_69 = OpConstant %int 69
     %int_70 = OpConstant %int 70
     %int_72 = OpConstant %int 72
     %int_77 = OpConstant %int 77
     %int_78 = OpConstant %int 78
     %int_79 = OpConstant %int 79
     %int_80 = OpConstant %int 80
     %int_86 = OpConstant %int 86
     %int_87 = OpConstant %int 87
     %int_88 = OpConstant %int 88
     %int_90 = OpConstant %int 90
     %int_91 = OpConstant %int 91
     %int_92 = OpConstant %int 92
     %int_93 = OpConstant %int 93
     %int_94 = OpConstant %int 94
     %int_95 = OpConstant %int 95
     %int_97 = OpConstant %int 97
     %int_82 = OpConstant %int 82
     %int_83 = OpConstant %int 83
    %int_103 = OpConstant %int 103
    %int_104 = OpConstant %int 104
    %int_106 = OpConstant %int 106
    %int_107 = OpConstant %int 107
    %int_105 = OpConstant %int 105
%mat3v3float = OpTypeMatrix %v3float 3
%_arr_v3float_uint_4 = OpTypeArray %v3float %uint_4
    %uint_15 = OpConstant %uint 15
%float_100000 = OpConstant %float 100000
   %float_n1 = OpConstant %float -1
        %273 = OpConstantComposite %v2float %float_1 %float_0
%float_1_20000005 = OpConstant %float 1.20000005
        %275 = OpConstantComposite %v3float %float_1_20000005 %float_1_20000005 %float_1_20000005
        %276 = OpConstantComposite %v3float %float_n1 %float_n1 %float_n1
%float_0_100000001 = OpConstant %float 0.100000001
        %278 = OpConstantComposite %v3float %float_0_100000001 %float_0_100000001 %float_0_100000001
%float_6_28318548 = OpConstant %float 6.28318548
%float_0_00100000005 = OpConstant %float 0.00100000005
%float_0_00200000009 = OpConstant %float 0.00200000009
%float_0_800000012 = OpConstant %float 0.800000012
    %float_4 = OpConstant %float 4
 %float_0_75 = OpConstant %float 0.75
%float_10000 = OpConstant %float 10000
        %286 = OpConstantComposite %v3float %float_10000 %float_10000 %float_10000
    %float_8 = OpConstant %float 8
        %288 = OpConstantComposite %v3float %float_0 %float_0 %float_1
%float_9_99999975en05 = OpConstant %float 9.99999975e-05
    %uint_41 = OpConstant %uint 41
    %uint_18 = OpConstant %uint 18
 %uint_65535 = OpConstant %uint 65535
    %uint_17 = OpConstant %uint 17
    %uint_25 = OpConstant %uint 25
%uint_16777215 = OpConstant %uint 16777215
 %uint_32768 = OpConstant %uint 32768
  %float_127 = OpConstant %float 127
    %float_3 = OpConstant %float 3
%float_0_99000001 = OpConstant %float 0.99000001
        %300 = OpConstantComposite %v3float %float_0_99000001 %float_0_99000001 %float_0_99000001
%float_0_0799999982 = OpConstant %float 0.0799999982
        %302 = OpConstantComposite %v2uint %uint_31 %uint_31
 %float_4000 = OpConstant %float 4000
%float_0_000230000005 = OpConstant %float 0.000230000005
%float_n0_000230000005 = OpConstant %float -0.000230000005
        %306 = OpConstantComposite %v2float %float_0_000230000005 %float_n0_000230000005
%float_1_54999995 = OpConstant %float 1.54999995
  %float_255 = OpConstant %float 255
        %309 = OpConstantComposite %v2float %float_1 %float_1
 %float_1023 = OpConstant %float 1023
 %float_2047 = OpConstant %float 2047
  %uint_2047 = OpConstant %uint 2047
   %float_63 = OpConstant %float 63
%uint_1072693248 = OpConstant %uint 1072693248
%uint_4292870144 = OpConstant %uint 4292870144
%uint_2096128 = OpConstant %uint 2096128
 %float_0_25 = OpConstant %float 0.25
        %318 = OpConstantComposite %v3float %float_0_25 %float_0_25 %float_0_25
        %319 = OpConstantComposite %v3float %float_0 %float_0_5 %float_0_5
%uint_4294967292 = OpConstant %uint 4294967292
 %float_1024 = OpConstant %float 1024
        %322 = OpConstantComposite %v2float %float_1024 %float_1024
        %323 = OpConstantComposite %v2float %float_2047 %float_2047
%float_4_76837158en07 = OpConstant %float 4.76837158e-07
%float_0_333299994 = OpConstant %float 0.333299994
  %uint_2048 = OpConstant %uint 2048
  %uint_4096 = OpConstant %uint 4096
  %uint_8192 = OpConstant %uint 8192
%float_0_400000006 = OpConstant %float 0.400000006
        %330 = OpConstantComposite %v3float %float_2 %float_0 %float_n2
        %331 = OpConstantComposite %v3float %float_n1 %float_2 %float_n1
        %332 = OpConstantComposite %v3float %float_0 %float_0 %float_0_00100000005
%float_0_899999976 = OpConstant %float 0.899999976
        %334 = OpConstantComposite %v2uint %uint_128 %uint_128
        %335 = OpConstantComposite %v2uint %uint_127 %uint_127
%uint_4294967295 = OpConstant %uint 4294967295
%float_9_99999997en07 = OpConstant %float 9.99999997e-07
        %338 = OpConstantComposite %v3float %float_9_99999997en07 %float_9_99999997en07 %float_9_99999997en07
%float_0_200000003 = OpConstant %float 0.200000003
%uint_2147483647 = OpConstant %uint 2147483647
     %v3uint = OpTypeVector %uint 3
        %342 = OpConstantComposite %v3uint %uint_2147483647 %uint_2147483647 %uint_2147483647
%float_0_600000024 = OpConstant %float 0.600000024
        %344 = OpConstantComposite %v3float %float_1 %float_0 %float_0
        %345 = OpConstantComposite %v3float %float_0 %float_1 %float_0
        %346 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_100
        %347 = OpConstantComposite %v3uint %uint_8 %uint_8 %uint_8
    %float_7 = OpConstant %float 7
        %349 = OpConstantComposite %v3float %float_9_99999996en13 %float_9_99999996en13 %float_9_99999996en13
   %uint_336 = OpConstant %uint 336
    %uint_96 = OpConstant %uint 96
   %uint_112 = OpConstant %uint 112
   %uint_144 = OpConstant %uint 144
   %uint_160 = OpConstant %uint 160
   %uint_176 = OpConstant %uint 176
   %uint_268 = OpConstant %uint 268
   %uint_272 = OpConstant %uint 272
   %uint_288 = OpConstant %uint 288
   %uint_300 = OpConstant %uint 300
   %uint_304 = OpConstant %uint 304
   %uint_312 = OpConstant %uint 312
   %uint_316 = OpConstant %uint 316
 %uint_16384 = OpConstant %uint 16384
        %364 = OpConstantComposite %v2int %int_32 %int_32
        %365 = OpConstantComposite %v2int %int_31 %int_31
%float_0_0350000001 = OpConstant %float 0.0350000001
   %float_20 = OpConstant %float 20
%float_1_57079637 = OpConstant %float 1.57079637
   %float_10 = OpConstant %float 10
%float_1_19000006 = OpConstant %float 1.19000006
%float_0_360000014 = OpConstant %float 0.360000014
%float_n3_6500001 = OpConstant %float -3.6500001
%int_532487669 = OpConstant %int 532487669
    %float_6 = OpConstant %float 6
   %float_15 = OpConstant %float 15
        %376 = OpConstantComposite %v4float %float_15 %float_15 %float_15 %float_15
        %377 = OpConstantComposite %v4float %float_10 %float_10 %float_10 %float_10
   %float_19 = OpConstant %float 19
  %float_101 = OpConstant %float 101
        %380 = OpConstantComposite %v3float %float_19 %float_47 %float_101
        %381 = OpConstantComposite %v3uint %uint_32768 %uint_16384 %uint_8192
%float_6_10351562en05 = OpConstant %float 6.10351562e-05
%float_0_000122070312 = OpConstant %float 0.000122070312
%float_0_000244140625 = OpConstant %float 0.000244140625
        %385 = OpConstantComposite %v3float %float_6_10351562en05 %float_0_000122070312 %float_0_000244140625
%float_0_2588 = OpConstant %float 0.2588
 %uint_21845 = OpConstant %uint 21845
%uint_134217728 = OpConstant %uint 134217728
 %float_n0_5 = OpConstant %float -0.5
%uint_4294967294 = OpConstant %uint 4294967294
%float_0_00313066994 = OpConstant %float 0.00313066994
%float_12_9200001 = OpConstant %float 12.9200001
%float_0_416666657 = OpConstant %float 0.416666657
%float_1_05499995 = OpConstant %float 1.05499995
%uint_1664525 = OpConstant %uint 1664525
        %396 = OpConstantComposite %v3uint %uint_1664525 %uint_1664525 %uint_1664525
%uint_1013904223 = OpConstant %uint 1013904223
        %398 = OpConstantComposite %v3uint %uint_1013904223 %uint_1013904223 %uint_1013904223
        %399 = OpConstantComposite %v3uint %uint_16 %uint_16 %uint_16
        %400 = OpConstantComposite %v3uint %uint_31 %uint_31 %uint_31
%float_0_055555556 = OpConstant %float 0.055555556
%float_2_20000005 = OpConstant %float 2.20000005
 %float_34_5 = OpConstant %float 34.5
 %float_24_5 = OpConstant %float 24.5
%float_73_1999969 = OpConstant %float 73.1999969
%float_8_89999962 = OpConstant %float 8.89999962
%float_3_5999999 = OpConstant %float 3.5999999
%float_1_00010002 = OpConstant %float 1.00010002
%int_2129859010 = OpConstant %int 2129859010
%float_0_140000001 = OpConstant %float 0.140000001
%_arr_v4float_uint_6 = OpTypeArray %v4float %uint_6
  %type_View = OpTypeStruct %mat4v4float %mat4v4float %mat4v4float %v3float %v3float %v4float %v4float %v3float %v3float %v4float %v4float %v4float %v4float %float %float %v4float %v4float %v2float %float %float %uint %float %v4float %v3float %float %v4float %_arr_v4float_uint_6 %_arr_v4float_uint_6 %int %v3float %float %uint %float %v3float %v3float %v3float %float %v3float %float %uint %uint
%_ptr_Uniform_type_View = OpTypePointer Uniform %type_View
%type_3d_image = OpTypeImage %uint 3D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_3d_image = OpTypePointer UniformConstant %type_3d_image
%type_3d_image_0 = OpTypeImage %float 3D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_3d_image_0 = OpTypePointer UniformConstant %type_3d_image_0
%type_2d_image = OpTypeImage %float 2D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_2d_image = OpTypePointer UniformConstant %type_2d_image
%type_sampler = OpTypeSampler
%_ptr_UniformConstant_type_sampler = OpTypePointer UniformConstant %type_sampler
%_runtimearr_v4float = OpTypeRuntimeArray %v4float
%type_StructuredBuffer_v4float = OpTypeStruct %_runtimearr_v4float
%_ptr_Uniform_type_StructuredBuffer_v4float = OpTypePointer Uniform %type_StructuredBuffer_v4float
      %v3int = OpTypeVector %int 3
%type_SingleLayerWater = OpTypeStruct %v4float %v4float %v2float %uint %uint
%_ptr_Uniform_type_SingleLayerWater = OpTypePointer Uniform %type_SingleLayerWater
%_arr_mat4v4float_uint_4 = OpTypeArray %mat4v4float %uint_4
%_arr_v4float_uint_4 = OpTypeArray %v4float %uint_4
%type_OpaqueBasePass = OpTypeStruct %uint %uint %v3int %uint %v3float %v3float %float %v3float %uint %v2float %uint %int %v4float %_arr_mat4v4float_uint_4 %_arr_v4float_uint_4 %v4float %uint %uint %int %int
%_ptr_Uniform_type_OpaqueBasePass = OpTypePointer Uniform %type_OpaqueBasePass
%_runtimearr_uint = OpTypeRuntimeArray %uint
%type_StructuredBuffer_uint = OpTypeStruct %_runtimearr_uint
%_ptr_Uniform_type_StructuredBuffer_uint = OpTypePointer Uniform %type_StructuredBuffer_uint
%type_buffer_image = OpTypeImage %uint Buffer 2 0 0 1 R32ui
%_ptr_UniformConstant_type_buffer_image = OpTypePointer UniformConstant %type_buffer_image
%type_2d_image_array = OpTypeImage %uint 2D 2 1 0 2 R32ui
%_ptr_UniformConstant_type_2d_image_array = OpTypePointer UniformConstant %type_2d_image_array
%type_ByteAddressBuffer = OpTypeStruct %_runtimearr_uint
%_ptr_Uniform_type_ByteAddressBuffer = OpTypePointer Uniform %type_ByteAddressBuffer
%type_2d_image_array_0 = OpTypeImage %uint 2D 2 1 0 1 Unknown
%_ptr_UniformConstant_type_2d_image_array_0 = OpTypePointer UniformConstant %type_2d_image_array_0
%_arr_v4float_uint_5 = OpTypeArray %v4float %uint_5
%type_MaterialCollection0 = OpTypeStruct %_arr_v4float_uint_5
%_ptr_Uniform_type_MaterialCollection0 = OpTypePointer Uniform %type_MaterialCollection0
   %uint_109 = OpConstant %uint 109
%_arr_v4float_uint_109 = OpTypeArray %v4float %uint_109
%type_Material = OpTypeStruct %_arr_v4float_uint_109
%_ptr_Uniform_type_Material = OpTypePointer Uniform %type_Material
%_ptr_Input_v4float = OpTypePointer Input %v4float
%_ptr_Input_uint = OpTypePointer Input %uint
%_ptr_Input_v3float = OpTypePointer Input %v3float
%_ptr_Input_bool = OpTypePointer Input %bool
%_ptr_Output_v4float = OpTypePointer Output %v4float
%_ptr_Output_uint = OpTypePointer Output %uint
       %void = OpTypeVoid
        %435 = OpTypeFunction %void
%_ptr_Function_v3float = OpTypePointer Function %v3float
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %v4bool = OpTypeVector %bool 4
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
%_ptr_Uniform_float = OpTypePointer Uniform %float
     %v3bool = OpTypeVector %bool 3
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
%_ptr_Uniform_int = OpTypePointer Uniform %int
%_ptr_Uniform_v3float = OpTypePointer Uniform %v3float
%type_sampled_image = OpTypeSampledImage %type_2d_image
%_ptr_Uniform_mat4v4float = OpTypePointer Uniform %mat4v4float
     %v2bool = OpTypeVector %bool 2
%type_sampled_image_0 = OpTypeSampledImage %type_3d_image_0
%_ptr_Uniform_v3int = OpTypePointer Uniform %v3int
%_ptr_Function__arr_v3float_uint_4 = OpTypePointer Function %_arr_v3float_uint_4
       %View = OpVariable %_ptr_Uniform_type_View Uniform
%View_VolumetricLightmapIndirectionTexture = OpVariable %_ptr_UniformConstant_type_3d_image UniformConstant
%View_DirectionalLightShadowingBrickTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_GlobalDistanceFieldPageAtlasTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_GlobalDistanceFieldPageTableTexture = OpVariable %_ptr_UniformConstant_type_3d_image UniformConstant
%View_PerlinNoise3DTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_PerlinNoise3DTextureSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SharedBilinearClampedSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SharedTrilinearWrappedSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SkyIrradianceEnvironmentMap = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%View_ShadingEnergyGGXSpecTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%View_ShadingEnergySampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SimpleVolumeEnvTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_SimpleVolumeEnvTextureSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%SingleLayerWater = OpVariable %_ptr_Uniform_type_SingleLayerWater Uniform
%SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%Scene_GPUScene_GPUScenePrimitiveSceneData = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%OpaqueBasePass = OpVariable %_ptr_Uniform_type_OpaqueBasePass Uniform
%OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%OpaqueBasePass_Shared_Forward_ShadowmapSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%OpaqueBasePass_Shared_Forward_NumCulledLightsGrid = OpVariable %_ptr_Uniform_type_StructuredBuffer_uint Uniform
%OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit = OpVariable %_ptr_UniformConstant_type_buffer_image UniformConstant
%OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs = OpVariable %_ptr_UniformConstant_type_2d_image_array UniformConstant
%OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%OpaqueBasePass_PreIntegratedGFTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%VirtualShadowMap_ProjectionData = OpVariable %_ptr_Uniform_type_ByteAddressBuffer Uniform
%VirtualShadowMap_PageTable = OpVariable %_ptr_Uniform_type_StructuredBuffer_uint Uniform
%VirtualShadowMap_PhysicalPagePool = OpVariable %_ptr_UniformConstant_type_2d_image_array_0 UniformConstant
%MaterialCollection0 = OpVariable %_ptr_Uniform_type_MaterialCollection0 Uniform
   %Material = OpVariable %_ptr_Uniform_type_Material Uniform
%in_var_TEXCOORD10_centroid = OpVariable %_ptr_Input_v4float Input
%in_var_TEXCOORD11_centroid = OpVariable %_ptr_Input_v4float Input
%in_var_PRIMITIVE_ID = OpVariable %_ptr_Input_uint Input
%in_var_TEXCOORD9 = OpVariable %_ptr_Input_v3float Input
%gl_FragCoord = OpVariable %_ptr_Input_v4float Input
%gl_FrontFacing = OpVariable %_ptr_Input_bool Input
%out_var_SV_Target0 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target1 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target2 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target3 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target4 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target5 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target6 = OpVariable %_ptr_Output_uint Output
        %449 = OpUndef %v3float
        %450 = OpConstantNull %uint
        %451 = OpConstantNull %v4float
        %452 = OpConstantNull %v3float
        %453 = OpConstantNull %float
%float_0_03125 = OpConstant %float 0.03125
        %455 = OpConstantComposite %v3float %float_0_03125 %float_0_03125 %float_0_03125
%float_32_6650009 = OpConstant %float 32.6650009
%float_11_8149996 = OpConstant %float 11.8149996
        %458 = OpConstantComposite %v2float %float_32_6650009 %float_11_8149996
        %459 = OpConstantComposite %v2float %float_0_0671105608 %float_0_00583714992
%float_0_00787401572 = OpConstant %float 0.00787401572
%float_16384 = OpConstant %float 16384
%float_0_318309873 = OpConstant %float 0.318309873
   %float_n0 = OpConstant %float -0
%float_n0_156582996 = OpConstant %float -0.156582996
%float_n0_0699428469 = OpConstant %float -0.0699428469
%float_0_997551024 = OpConstant %float 0.997551024
%float_1_41421354 = OpConstant %float 1.41421354
%float_2_50662827 = OpConstant %float 2.50662827
%float_0_0465205647 = OpConstant %float 0.0465205647
%float_0_953479409 = OpConstant %float 0.953479409
%float_12_566371 = OpConstant %float 12.566371
%float_0_0795774683 = OpConstant %float 0.0795774683
%float_32256 = OpConstant %float 32256
        %474 = OpConstantComposite %v3float %float_32256 %float_32256 %float_32256
%uint_4294967293 = OpConstant %uint 4294967293
%uint_4294902015 = OpConstant %uint 4294902015
%float_0_0454545468 = OpConstant %float 0.0454545468
%float_0_0625 = OpConstant %float 0.0625
%float_0_909090936 = OpConstant %float 0.909090936
%float_0_875 = OpConstant %float 0.875
%uint_4287627263 = OpConstant %uint 4287627263
%uint_4169138175 = OpConstant %uint 4169138175
%uint_4294901760 = OpConstant %uint 4294901760
%uint_4294967263 = OpConstant %uint 4294967263
%uint_4294901759 = OpConstant %uint 4294901759
        %486 = OpConstantComposite %v3float %float_0_0454545468 %float_0_0454545468 %float_0_0625
        %487 = OpConstantComposite %v3float %float_0_909090936 %float_0_909090936 %float_0_875
        %488 = OpConstantComposite %v3float %float_0_318309873 %float_0_318309873 %float_0_318309873
%uint_4194303 = OpConstant %uint 4194303
        %490 = OpConstantComposite %v3uint %uint_1 %uint_1 %uint_1
%uint_16711680 = OpConstant %uint 16711680
    %uint_72 = OpConstant %uint 72
        %493 = OpConstantComposite %v3float %float_n1 %float_n1 %float_n0
%float_9_53674316en07 = OpConstant %float 9.53674316e-07
%float_n2_097152e_11 = OpConstant %float -2.097152e+11
%float_0_000100000005 = OpConstant %float 0.000100000005
        %497 = OpConstantComposite %v3float %float_0_000100000005 %float_0_000100000005 %float_0_000100000005
%float_0_000200000009 = OpConstant %float 0.000200000009
        %499 = OpConstantComposite %v3float %float_0_000200000009 %float_0_000200000009 %float_0_000200000009
        %500 = OpConstantComposite %v3float %float_n0_5 %float_n0_5 %float_n0_5
%float_4194_3042 = OpConstant %float 4194.3042
%float_0_0333333351 = OpConstant %float 0.0333333351
%float_3_125 = OpConstant %float 3.125
%float_0_636619747 = OpConstant %float 0.636619747
%float_0_00158730161 = OpConstant %float 0.00158730161
%uint_1048576 = OpConstant %uint 1048576
%float_0_0158730168 = OpConstant %float 0.0158730168
%float_0_999600053 = OpConstant %float 0.999600053
        %509 = OpConstantComposite %v3float %float_0_999600053 %float_0_999600053 %float_0_999600053
%float_1_52590219en05 = OpConstant %float 1.52590219e-05
        %511 = OpConstantComposite %v3float %float_1_52590219en05 %float_1_52590219en05 %float_1_52590219en05
%float_0_0666666701 = OpConstant %float 0.0666666701
        %513 = OpConstantComposite %v3float %float_0_0666666701 %float_0_0666666701 %float_0_0666666701
        %514 = OpConstantComposite %v3float %float_0_0625 %float_0_0625 %float_0_0625
        %515 = OpConstantComposite %v3float %float_0_00787401572 %float_0_00787401572 %float_0_00787401572
        %516 = OpConstantComposite %v2float %float_n0_5 %float_n0_5
%float_n6_28318548 = OpConstant %float -6.28318548
%float_0_139885694 = OpConstant %float 0.139885694
%float_n0_800000012 = OpConstant %float -0.800000012
%float_n3_98000002 = OpConstant %float -3.98000002
%float_n16_7800007 = OpConstant %float -16.7800007
%float_n0_75 = OpConstant %float -0.75
  %float_n59 = OpConstant %float -59
%float_n21_2000008 = OpConstant %float -21.2000008
%float_n0_0549999997 = OpConstant %float -0.0549999997
 %float_n127 = OpConstant %float -127
        %527 = OpUndef %v3float
        %528 = OpUndef %v3uint
        %529 = OpUndef %v3float
        %530 = OpUndef %mat4v4float
        %531 = OpUndef %v4float
        %532 = OpConstantComposite %v4float %float_0 %453 %453 %453
   %float_66 = OpConstant %float 66
  %float_120 = OpConstant %float 120
  %float_148 = OpConstant %float 148
  %float_167 = OpConstant %float 167
        %537 = OpUndef %float
        %538 = OpUndef %v3uint
        %539 = OpUndef %v3float
        %540 = OpUndef %v2float
        %541 = OpConstantComposite %v3float %453 %453 %453
        %542 = OpConstantComposite %v3bool %true %true %true
        %543 = OpConstantComposite %v3bool %false %false %false
        %544 = OpConstantComposite %v2float %453 %float_0
  %uint_8194 = OpConstant %uint 8194
%float_1_53787023en05 = OpConstant %float 1.53787023e-05
        %547 = OpConstantComposite %v2float %453 %453
%uint_2130706432 = OpConstant %uint 2130706432
    %uint_23 = OpConstant %uint 23
    %uint_30 = OpConstant %uint 30
    %uint_27 = OpConstant %uint 27
    %uint_28 = OpConstant %uint 28
    %uint_29 = OpConstant %uint 29
    %uint_38 = OpConstant %uint 38
    %uint_33 = OpConstant %uint 33
    %uint_34 = OpConstant %uint 34
    %uint_35 = OpConstant %uint 35
    %uint_36 = OpConstant %uint 36
    %uint_37 = OpConstant %uint 37
    %uint_13 = OpConstant %uint 13
    %uint_39 = OpConstant %uint 39
    %uint_21 = OpConstant %uint 21

               ; Function MainPS
     %MainPS = OpFunction %void None %435
        %563 = OpLabel
        %564 = OpVariable %_ptr_Function__arr_v3float_uint_4 Function
        %565 = OpVariable %_ptr_Function__arr_v3float_uint_4 Function
        %566 = OpLoad %v4float %in_var_TEXCOORD11_centroid
        %567 = OpLoad %uint %in_var_PRIMITIVE_ID
        %568 = OpLoad %v3float %in_var_TEXCOORD9
        %569 = OpLoad %v4float %gl_FragCoord
        %570 = OpCompositeExtract %float %569 3
        %571 = OpFDiv %float %float_1 %570
        %572 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_0
        %573 = OpLoad %mat4v4float %572
        %574 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_1
        %575 = OpLoad %mat4v4float %574
        %576 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_2
        %577 = OpLoad %mat4v4float %576
        %578 = OpAccessChain %_ptr_Uniform_v3float %View %uint_3
        %579 = OpLoad %v3float %578
        %580 = OpAccessChain %_ptr_Uniform_v3float %View %uint_4
        %581 = OpLoad %v3float %580
        %582 = OpAccessChain %_ptr_Uniform_v4float %View %uint_6
        %583 = OpLoad %v4float %582
        %584 = OpAccessChain %_ptr_Uniform_v3float %View %uint_7
        %585 = OpLoad %v3float %584
        %586 = OpAccessChain %_ptr_Uniform_v3float %View %uint_8
        %587 = OpLoad %v3float %586
        %588 = OpAccessChain %_ptr_Uniform_v4float %View %uint_9
        %589 = OpLoad %v4float %588
        %590 = OpAccessChain %_ptr_Uniform_v4float %View %uint_10
        %591 = OpLoad %v4float %590
        %592 = OpAccessChain %_ptr_Uniform_v4float %View %uint_12
        %593 = OpLoad %v4float %592
        %594 = OpAccessChain %_ptr_Uniform_float %View %uint_14
        %595 = OpLoad %float %594
        %596 = OpAccessChain %_ptr_Uniform_v4float %View %uint_15
        %597 = OpLoad %v4float %596
        %598 = OpAccessChain %_ptr_Uniform_v4float %View %uint_16
        %599 = OpLoad %v4float %598
        %600 = OpAccessChain %_ptr_Uniform_v2float %View %uint_17
        %601 = OpLoad %v2float %600
        %602 = OpAccessChain %_ptr_Uniform_v4float %View %uint_22
        %603 = OpLoad %v4float %602
        %604 = OpAccessChain %_ptr_Uniform_v3float %View %uint_23
        %605 = OpLoad %v3float %604
        %606 = OpAccessChain %_ptr_Uniform_v4float %View %uint_25
        %607 = OpLoad %v4float %606
        %608 = OpFNegate %v3float %579
        %609 = OpVectorShuffle %v3float %566 %566 0 1 2
        %610 = OpVectorShuffle %v2float %569 %569 0 1
        %611 = OpVectorShuffle %v2float %589 %589 0 1
        %612 = OpFSub %v2float %610 %611
        %613 = OpVectorShuffle %v2float %591 %591 2 3
        %614 = OpExtInst %v2float %1 Fma %612 %613 %516
        %615 = OpFMul %v2float %614 %150
        %616 = OpCompositeExtract %float %615 0
        %617 = OpCompositeExtract %float %615 1
        %618 = OpCompositeConstruct %v4float %616 %617 %537 %float_1
        %619 = OpVectorTimesScalar %v4float %618 %571
        %620 = OpCompositeExtract %float %569 0
        %621 = OpCompositeExtract %float %569 1
        %622 = OpCompositeExtract %float %569 2
        %623 = OpCompositeConstruct %v4float %620 %621 %622 %float_1
        %624 = OpMatrixTimesVector %v4float %577 %623
        %625 = OpVectorShuffle %v3float %624 %624 0 1 2
        %626 = OpCompositeExtract %float %624 3
        %627 = OpCompositeConstruct %v3float %626 %626 %626
        %628 = OpFDiv %v3float %625 %627
        %629 = OpFSub %v3float %628 %587
        %630 = OpFSub %v3float %568 %587
        %631 = OpVectorShuffle %v2float %619 %619 0 1
        %632 = OpCompositeExtract %float %619 3
        %633 = OpCompositeConstruct %v2float %632 %632
        %634 = OpFDiv %v2float %631 %633
        %635 = OpVectorShuffle %v2float %583 %583 0 1
        %636 = OpVectorShuffle %v2float %583 %583 3 2
        %637 = OpExtInst %v2float %1 Fma %634 %635 %636
        %638 = OpCompositeExtract %float %575 3 3
        %639 = OpFOrdGreaterThanEqual %bool %638 %float_1
               OpSelectionMerge %640 None
               OpBranchConditional %639 %641 %642
        %642 = OpLabel
        %643 = OpFNegate %v3float %628
        %644 = OpExtInst %v3float %1 Normalize %643
               OpBranch %640
        %641 = OpLabel
        %645 = OpFNegate %v3float %581
               OpBranch %640
        %640 = OpLabel
        %646 = OpPhi %v3float %644 %642 %645 %641
        %647 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_4
        %648 = OpLoad %v4float %647
        %649 = OpCompositeExtract %float %648 0
        %650 = OpCompositeExtract %float %648 1
        %651 = OpCompositeExtract %float %648 2
        %652 = OpCompositeConstruct %v3float %649 %650 %651
        %653 = OpFMul %v3float %579 %493
        %654 = OpFNegate %v3float %629
        %655 = OpExtInst %v3float %1 Fma %654 %132 %652
        %656 = OpCompositeExtract %float %653 0
        %657 = OpCompositeExtract %float %655 0
        %658 = OpFMul %float %657 %float_4_76837158en07
        %659 = OpExtInst %float %1 Fma %657 %float_9_53674316en07 %656
        %660 = OpCompositeExtract %float %653 1
        %661 = OpCompositeExtract %float %655 1
        %662 = OpFMul %float %661 %float_4_76837158en07
        %663 = OpExtInst %float %1 Fma %661 %float_9_53674316en07 %660
        %664 = OpFMul %float %660 %663
        %665 = OpFMul %float %661 %662
        %666 = OpCompositeExtract %float %653 2
        %667 = OpCompositeExtract %float %655 2
        %668 = OpFMul %float %667 %float_4_76837158en07
        %669 = OpExtInst %float %1 Fma %667 %float_9_53674316en07 %666
        %670 = OpExtInst %float %1 Fma %656 %659 %664
        %671 = OpExtInst %float %1 Fma %657 %658 %665
        %672 = OpExtInst %float %1 Fma %666 %669 %670
        %673 = OpExtInst %float %1 Fma %667 %668 %671
        %674 = OpExtInst %float %1 Fma %673 %float_4_76837158en07 %672
        %675 = OpExtInst %float %1 Sqrt %674
        %676 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_1
        %677 = OpLoad %v4float %676
        %678 = OpCompositeExtract %float %677 0
        %679 = OpExtInst %float %1 NMax %float_9_99999975en06 %678
        %680 = OpFDiv %float %float_1 %679
        %681 = OpFMul %float %675 %680
        %682 = OpExtInst %float %1 Fma %681 %float_n2_097152e_11 %float_100000
        %683 = OpExtInst %float %1 FClamp %682 %float_0 %float_1
        %684 = OpExtInst %float %1 FMix %float_1 %float_0 %683
        %685 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_0
        %686 = OpLoad %float %685
        %687 = OpCompositeConstruct %v3float %686 %686 %686
        %688 = OpFMul %v3float %629 %687
        %689 = OpVectorTimesScalar %v3float %688 %float_4_76837158en07
        %690 = OpFAdd %v3float %689 %135
        %691 = OpExtInst %v3float %1 Fma %579 %687 %690
        %692 = OpExtInst %v3float %1 Floor %691
        %693 = OpFNegate %v3float %692
        %694 = OpExtInst %v3float %1 Fma %579 %687 %693
        %695 = OpVectorTimesScalar %v3float %694 %float_2097152
        %696 = OpExtInst %v3float %1 Fma %629 %687 %695
        %697 = OpVectorTimesScalar %v3float %696 %float_1
               OpBranch %698
        %698 = OpLabel
        %699 = OpPhi %v3float %697 %640 %700 %701
        %702 = OpPhi %float %float_1 %640 %703 %701
        %704 = OpPhi %float %float_0 %640 %705 %701
        %706 = OpPhi %uint %uint_0 %640 %707 %701
        %708 = OpULessThan %bool %706 %uint_6
               OpLoopMerge %709 %701 DontUnroll
               OpBranchConditional %708 %701 %709
        %701 = OpLabel
        %710 = OpFMul %v3float %699 %513
        %711 = OpExtInst %v3float %1 Fract %710
        %712 = OpVectorTimesScalar %v3float %711 %float_15
        %713 = OpExtInst %v3float %1 Fract %712
        %714 = OpFSub %v3float %712 %713
        %715 = OpCompositeExtract %float %713 0
        %716 = OpCompositeExtract %float %713 1
        %717 = OpCompositeExtract %float %713 2
        %718 = OpCompositeConstruct %v4float %715 %716 %717 %float_0
        %719 = OpFMul %v4float %718 %718
        %720 = OpFMul %v4float %719 %718
        %721 = OpVectorTimesScalar %v4float %718 %float_6
        %722 = OpFSub %v4float %721 %376
        %723 = OpExtInst %v4float %1 Fma %718 %722 %377
        %724 = OpFMul %v4float %720 %723
        %725 = OpVectorShuffle %v3float %724 %724 0 1 2
        %726 = OpFAdd %v3float %714 %725
        %727 = OpLoad %type_3d_image_0 %View_PerlinNoise3DTexture
        %728 = OpLoad %type_sampler %View_PerlinNoise3DTextureSampler
        %729 = OpExtInst %v3float %1 Fma %726 %514 %455
        %730 = OpSampledImage %type_sampled_image_0 %727 %728
        %731 = OpImageSampleExplicitLod %v4float %730 %729 Lod %float_0
        %732 = OpVectorShuffle %v3float %731 %731 0 1 2
        %733 = OpVectorTimesScalar %v3float %732 %float_255
        %734 = OpExtInst %v3float %1 Fma %733 %515 %276
        %735 = OpCompositeExtract %float %731 3
        %736 = OpExtInst %float %1 Fma %735 %float_255 %float_n127
        %737 = OpDot %float %712 %734
        %738 = OpFSub %float %737 %736
        %739 = OpExtInst %float %1 FAbs %738
        %705 = OpExtInst %float %1 Fma %739 %702 %704
        %700 = OpVectorTimesScalar %v3float %699 %float_2
        %703 = OpFMul %float %702 %float_0_5
        %707 = OpIAdd %uint %706 %uint_1
               OpBranch %698
        %709 = OpLabel
        %740 = OpExtInst %float %1 FMix %float_n1 %float_1 %704
        %741 = OpExtInst %float %1 FClamp %740 %float_0 %float_1
        %742 = OpExtInst %v3float %1 Fma %579 %132 %653
        %743 = OpFMul %v3float %629 %493
        %744 = OpExtInst %v3float %1 Fma %585 %132 %743
        %745 = OpVectorTimesScalar %v3float %742 %float_2097152
        %746 = OpFAdd %v3float %745 %744
        %747 = OpExtInst %float %1 Length %746
        %748 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_0
        %749 = OpLoad %v4float %748
        %750 = OpCompositeExtract %float %749 0
        %751 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_1
        %752 = OpLoad %float %751
        %753 = OpFMul %float %750 %752
        %754 = OpExtInst %float %1 NMax %float_9_99999975en06 %753
        %755 = OpFDiv %float %float_1 %754
        %756 = OpFNegate %float %747
        %757 = OpExtInst %float %1 Fma %756 %755 %float_1
        %758 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_3 %int_1
        %759 = OpLoad %float %758
        %760 = OpFMul %float %757 %759
        %761 = OpExtInst %float %1 FClamp %760 %float_0 %float_1
        %762 = OpExtInst %float %1 FMix %741 %float_1 %761
        %763 = OpFAdd %v3float %579 %608
        %764 = OpVectorTimesScalar %v3float %763 %float_2097152
        %765 = OpFAdd %v3float %764 %628
               OpBranch %766
        %766 = OpLabel
        %767 = OpPhi %v3uint %528 %709 %768 %769
        %770 = OpPhi %uint %uint_0 %709 %771 %769
        %772 = OpPhi %float %float_0 %709 %773 %769
        %774 = OpAccessChain %_ptr_Uniform_uint %View %uint_31
        %775 = OpLoad %uint %774
        %776 = OpULessThan %bool %770 %775
               OpLoopMerge %777 %769 None
               OpBranchConditional %776 %778 %777
        %778 = OpLabel
        %779 = OpAccessChain %_ptr_Uniform_v4float %View %uint_26 %770
        %780 = OpLoad %v4float %779
        %781 = OpVectorShuffle %v3float %780 %780 0 1 2
        %782 = OpVectorShuffle %v3float %780 %780 3 3 3
        %783 = OpFSub %v3float %765 %781
        %784 = OpFAdd %v3float %783 %782
        %785 = OpExtInst %v3float %1 NMax %784 %100
        %786 = OpFAdd %v3float %781 %782
        %787 = OpFSub %v3float %786 %765
        %788 = OpExtInst %v3float %1 NMax %787 %100
        %789 = OpExtInst %v3float %1 NMin %785 %788
        %790 = OpCompositeExtract %float %789 0
        %791 = OpCompositeExtract %float %789 1
        %792 = OpCompositeExtract %float %789 2
        %793 = OpExtInst %float %1 NMin %791 %792
        %794 = OpExtInst %float %1 NMin %790 %793
        %795 = OpAccessChain %_ptr_Uniform_float %View %uint_26 %770 %int_3
        %796 = OpLoad %float %795
        %797 = OpAccessChain %_ptr_Uniform_float %View %uint_30
        %798 = OpLoad %float %797
        %799 = OpFMul %float %796 %798
        %773 = OpFMul %float %float_8 %799
        %800 = OpFOrdGreaterThan %bool %794 %799
               OpSelectionMerge %801 None
               OpBranchConditional %800 %802 %801
        %802 = OpLabel
        %803 = OpAccessChain %_ptr_Uniform_v4float %View %uint_27 %770
        %804 = OpLoad %v4float %803
        %805 = OpVectorShuffle %v3float %804 %804 3 3 3
        %806 = OpVectorShuffle %v3float %804 %804 0 1 2
        %807 = OpExtInst %v3float %1 Fma %765 %805 %806
        %808 = OpExtInst %v3float %1 Fract %807
        %809 = OpExtInst %v3float %1 Fract %808
        %810 = OpExtInst %v3float %1 FClamp %809 %100 %125
        %811 = OpAccessChain %_ptr_Uniform_int %View %uint_28
        %812 = OpLoad %int %811
        %813 = OpConvertSToF %float %812
        %814 = OpVectorTimesScalar %v3float %810 %813
        %815 = OpBitcast %uint %812
        %816 = OpIMul %uint %770 %815
        %817 = OpBitcast %int %816
        %818 = OpCompositeConstruct %v3int %int_0 %int_0 %817
        %819 = OpConvertSToF %v3float %818
        %820 = OpFAdd %v3float %814 %819
        %821 = OpCompositeExtract %float %820 0
        %822 = OpCompositeExtract %float %820 1
        %823 = OpCompositeExtract %float %820 2
        %824 = OpConvertFToS %int %821
        %825 = OpConvertFToS %int %822
        %826 = OpConvertFToS %int %823
        %827 = OpCompositeConstruct %v4int %824 %825 %826 %int_0
        %828 = OpVectorShuffle %v3int %827 %827 0 1 2
        %829 = OpLoad %type_3d_image %View_GlobalDistanceFieldPageTableTexture
        %830 = OpImageFetch %v4uint %829 %828 Lod %int_0
        %831 = OpCompositeExtract %uint %830 0
        %832 = OpBitwiseAnd %uint %831 %uint_16777215
        %833 = OpULessThan %bool %831 %uint_4294967295
               OpSelectionMerge %834 None
               OpBranchConditional %833 %835 %834
        %835 = OpLabel
        %836 = OpBitwiseAnd %uint %832 %uint_127
        %837 = OpCompositeInsert %v3uint %836 %767 0
        %838 = OpShiftRightLogical %uint %832 %uint_7
        %839 = OpBitwiseAnd %uint %838 %uint_127
        %840 = OpCompositeInsert %v3uint %839 %837 1
        %841 = OpShiftRightLogical %uint %832 %uint_14
        %842 = OpCompositeInsert %v3uint %841 %840 2
        %843 = OpVectorTimesScalar %v3float %809 %813
        %844 = OpExtInst %v3float %1 Fract %843
        %845 = OpIMul %v3uint %842 %347
        %846 = OpConvertUToF %v3float %845
        %847 = OpVectorTimesScalar %v3float %844 %float_7
        %848 = OpFAdd %v3float %846 %847
        %849 = OpFAdd %v3float %848 %135
        %850 = OpAccessChain %_ptr_Uniform_v3float %View %uint_29
        %851 = OpLoad %v3float %850
        %852 = OpFMul %v3float %849 %851
        %853 = OpLoad %type_3d_image_0 %View_GlobalDistanceFieldPageAtlasTexture
        %854 = OpLoad %type_sampler %View_SharedTrilinearWrappedSampler
        %855 = OpSampledImage %type_sampled_image_0 %853 %854
        %856 = OpImageSampleExplicitLod %v4float %855 %852 Lod %float_0
        %857 = OpCompositeExtract %float %856 0
        %858 = OpFOrdLessThan %bool %857 %float_1
               OpSelectionMerge %859 None
               OpBranchConditional %858 %860 %859
        %860 = OpLabel
        %861 = OpExtInst %float %1 Fma %857 %float_2 %float_n1
        %862 = OpFMul %float %861 %773
               OpBranch %777
        %859 = OpLabel
               OpBranch %834
        %834 = OpLabel
        %863 = OpPhi %v3uint %767 %802 %842 %859
               OpBranch %801
        %801 = OpLabel
        %768 = OpPhi %v3uint %767 %778 %863 %834
               OpBranch %769
        %769 = OpLabel
        %771 = OpIAdd %uint %770 %uint_1
               OpBranch %766
        %777 = OpLabel
        %864 = OpPhi %float %772 %766 %862 %860
        %865 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_3 %int_3
        %866 = OpLoad %float %865
        %867 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_4 %int_0
        %868 = OpLoad %float %867
        %869 = OpFNegate %float %868
        %870 = OpExtInst %float %1 Fma %864 %866 %869
        %871 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_4 %int_3
        %872 = OpLoad %float %871
        %873 = OpFMul %float %870 %872
        %874 = OpExtInst %float %1 Fma %873 %float_n1 %float_1
        %875 = OpExtInst %float %1 FClamp %874 %float_0 %float_1
               OpBranch %876
        %876 = OpLabel
        %877 = OpPhi %v3uint %528 %777 %878 %879
        %880 = OpPhi %uint %uint_0 %777 %881 %879
        %882 = OpULessThan %bool %880 %775
               OpLoopMerge %883 %879 None
               OpBranchConditional %882 %884 %883
        %884 = OpLabel
        %885 = OpAccessChain %_ptr_Uniform_v4float %View %uint_26 %880
        %886 = OpAccessChain %_ptr_Uniform_float %View %uint_26 %880 %int_3
        %887 = OpLoad %float %886
        %888 = OpAccessChain %_ptr_Uniform_float %View %uint_30
        %889 = OpLoad %float %888
        %890 = OpFMul %float %887 %889
        %891 = OpLoad %v4float %885
        %892 = OpVectorShuffle %v3float %891 %891 0 1 2
        %893 = OpVectorShuffle %v3float %891 %891 3 3 3
        %894 = OpFSub %v3float %765 %892
        %895 = OpFAdd %v3float %894 %893
        %896 = OpExtInst %v3float %1 NMax %895 %100
        %897 = OpFAdd %v3float %892 %893
        %898 = OpFSub %v3float %897 %765
        %899 = OpExtInst %v3float %1 NMax %898 %100
        %900 = OpExtInst %v3float %1 NMin %896 %899
        %901 = OpCompositeExtract %float %900 0
        %902 = OpCompositeExtract %float %900 1
        %903 = OpCompositeExtract %float %900 2
        %904 = OpExtInst %float %1 NMin %902 %903
        %905 = OpExtInst %float %1 NMin %901 %904
        %906 = OpFOrdGreaterThanEqual %bool %905 %890
               OpSelectionMerge %907 None
               OpBranchConditional %906 %908 %907
        %908 = OpLabel
        %909 = OpAccessChain %_ptr_Uniform_v4float %View %uint_27 %880
        %910 = OpLoad %v4float %909
        %911 = OpVectorShuffle %v3float %910 %910 3 3 3
        %912 = OpVectorShuffle %v3float %910 %910 0 1 2
        %913 = OpExtInst %v3float %1 Fma %765 %911 %912
        %914 = OpExtInst %v3float %1 Fract %913
        %915 = OpExtInst %v3float %1 Fract %914
        %916 = OpExtInst %v3float %1 FClamp %915 %100 %125
        %917 = OpAccessChain %_ptr_Uniform_int %View %uint_28
        %918 = OpLoad %int %917
        %919 = OpConvertSToF %float %918
        %920 = OpVectorTimesScalar %v3float %916 %919
        %921 = OpBitcast %uint %918
        %922 = OpIMul %uint %880 %921
        %923 = OpBitcast %int %922
        %924 = OpCompositeConstruct %v3int %int_0 %int_0 %923
        %925 = OpConvertSToF %v3float %924
        %926 = OpFAdd %v3float %920 %925
        %927 = OpCompositeExtract %float %926 0
        %928 = OpCompositeExtract %float %926 1
        %929 = OpCompositeExtract %float %926 2
        %930 = OpConvertFToS %int %927
        %931 = OpConvertFToS %int %928
        %932 = OpConvertFToS %int %929
        %933 = OpCompositeConstruct %v4int %930 %931 %932 %int_0
        %934 = OpVectorShuffle %v3int %933 %933 0 1 2
        %935 = OpLoad %type_3d_image %View_GlobalDistanceFieldPageTableTexture
        %936 = OpImageFetch %v4uint %935 %934 Lod %int_0
        %937 = OpCompositeExtract %uint %936 0
        %938 = OpBitwiseAnd %uint %937 %uint_16777215
        %939 = OpULessThan %bool %937 %uint_4294967295
               OpSelectionMerge %940 None
               OpBranchConditional %939 %941 %940
        %941 = OpLabel
        %942 = OpBitwiseAnd %uint %938 %uint_127
        %943 = OpCompositeInsert %v3uint %942 %877 0
        %944 = OpShiftRightLogical %uint %938 %uint_7
        %945 = OpBitwiseAnd %uint %944 %uint_127
        %946 = OpCompositeInsert %v3uint %945 %943 1
        %947 = OpShiftRightLogical %uint %938 %uint_14
        %948 = OpCompositeInsert %v3uint %947 %946 2
        %949 = OpVectorTimesScalar %v3float %915 %919
        %950 = OpExtInst %v3float %1 Fract %949
        %951 = OpIMul %v3uint %948 %347
        %952 = OpConvertUToF %v3float %951
        %953 = OpVectorTimesScalar %v3float %950 %float_7
        %954 = OpFAdd %v3float %952 %953
        %955 = OpFAdd %v3float %954 %135
        %956 = OpAccessChain %_ptr_Uniform_v3float %View %uint_29
        %957 = OpLoad %v3float %956
        %958 = OpFMul %v3float %955 %957
        %959 = OpLoad %type_3d_image_0 %View_GlobalDistanceFieldPageAtlasTexture
        %960 = OpLoad %type_sampler %View_SharedTrilinearWrappedSampler
        %961 = OpSampledImage %type_sampled_image_0 %959 %960
        %962 = OpImageSampleExplicitLod %v4float %961 %958 Lod %float_0
        %963 = OpCompositeExtract %float %962 0
        %964 = OpFOrdLessThan %bool %963 %float_0_899999976
               OpSelectionMerge %965 None
               OpBranchConditional %964 %966 %965
        %966 = OpLabel
        %967 = OpFMul %float %float_0_5 %889
        %968 = OpCompositeConstruct %v3float %967 %float_0 %float_0
        %969 = OpFAdd %v3float %915 %968
        %970 = OpExtInst %v3float %1 Fract %969
        %971 = OpExtInst %v3float %1 FClamp %970 %100 %125
        %972 = OpVectorTimesScalar %v3float %971 %919
        %973 = OpFAdd %v3float %972 %925
        %974 = OpCompositeExtract %float %973 0
        %975 = OpCompositeExtract %float %973 1
        %976 = OpCompositeExtract %float %973 2
        %977 = OpConvertFToS %int %974
        %978 = OpConvertFToS %int %975
        %979 = OpConvertFToS %int %976
        %980 = OpCompositeConstruct %v4int %977 %978 %979 %int_0
        %981 = OpVectorShuffle %v3int %980 %980 0 1 2
        %982 = OpImageFetch %v4uint %935 %981 Lod %int_0
        %983 = OpCompositeExtract %uint %982 0
        %984 = OpBitwiseAnd %uint %983 %uint_16777215
        %985 = OpULessThan %bool %983 %uint_4294967295
               OpSelectionMerge %986 None
               OpBranchConditional %985 %987 %986
        %987 = OpLabel
        %988 = OpBitwiseAnd %uint %984 %uint_127
        %989 = OpCompositeInsert %v3uint %988 %528 0
        %990 = OpShiftRightLogical %uint %984 %uint_7
        %991 = OpBitwiseAnd %uint %990 %uint_127
        %992 = OpCompositeInsert %v3uint %991 %989 1
        %993 = OpShiftRightLogical %uint %984 %uint_14
        %994 = OpCompositeInsert %v3uint %993 %992 2
        %995 = OpVectorTimesScalar %v3float %970 %919
        %996 = OpExtInst %v3float %1 Fract %995
        %997 = OpIMul %v3uint %994 %347
        %998 = OpConvertUToF %v3float %997
        %999 = OpVectorTimesScalar %v3float %996 %float_7
       %1000 = OpFAdd %v3float %998 %999
       %1001 = OpFAdd %v3float %1000 %135
       %1002 = OpFMul %v3float %1001 %957
       %1003 = OpSampledImage %type_sampled_image_0 %959 %960
       %1004 = OpImageSampleExplicitLod %v4float %1003 %1002 Lod %float_0
       %1005 = OpCompositeExtract %float %1004 0
               OpBranch %986
        %986 = OpLabel
       %1006 = OpPhi %float %float_1 %966 %1005 %987
       %1007 = OpFMul %float %889 %float_n0_5
       %1008 = OpCompositeConstruct %v3float %1007 %float_0 %float_0
       %1009 = OpFAdd %v3float %915 %1008
       %1010 = OpExtInst %v3float %1 Fract %1009
       %1011 = OpExtInst %v3float %1 FClamp %1010 %100 %125
       %1012 = OpVectorTimesScalar %v3float %1011 %919
       %1013 = OpFAdd %v3float %1012 %925
       %1014 = OpCompositeExtract %float %1013 0
       %1015 = OpCompositeExtract %float %1013 1
       %1016 = OpCompositeExtract %float %1013 2
       %1017 = OpConvertFToS %int %1014
       %1018 = OpConvertFToS %int %1015
       %1019 = OpConvertFToS %int %1016
       %1020 = OpCompositeConstruct %v4int %1017 %1018 %1019 %int_0
       %1021 = OpVectorShuffle %v3int %1020 %1020 0 1 2
       %1022 = OpImageFetch %v4uint %935 %1021 Lod %int_0
       %1023 = OpCompositeExtract %uint %1022 0
       %1024 = OpBitwiseAnd %uint %1023 %uint_16777215
       %1025 = OpULessThan %bool %1023 %uint_4294967295
               OpSelectionMerge %1026 None
               OpBranchConditional %1025 %1027 %1026
       %1027 = OpLabel
       %1028 = OpBitwiseAnd %uint %1024 %uint_127
       %1029 = OpCompositeInsert %v3uint %1028 %528 0
       %1030 = OpShiftRightLogical %uint %1024 %uint_7
       %1031 = OpBitwiseAnd %uint %1030 %uint_127
       %1032 = OpCompositeInsert %v3uint %1031 %1029 1
       %1033 = OpShiftRightLogical %uint %1024 %uint_14
       %1034 = OpCompositeInsert %v3uint %1033 %1032 2
       %1035 = OpVectorTimesScalar %v3float %1010 %919
       %1036 = OpExtInst %v3float %1 Fract %1035
       %1037 = OpIMul %v3uint %1034 %347
       %1038 = OpConvertUToF %v3float %1037
       %1039 = OpVectorTimesScalar %v3float %1036 %float_7
       %1040 = OpFAdd %v3float %1038 %1039
       %1041 = OpFAdd %v3float %1040 %135
       %1042 = OpFMul %v3float %1041 %957
       %1043 = OpSampledImage %type_sampled_image_0 %959 %960
       %1044 = OpImageSampleExplicitLod %v4float %1043 %1042 Lod %float_0
       %1045 = OpCompositeExtract %float %1044 0
               OpBranch %1026
       %1026 = OpLabel
       %1046 = OpPhi %float %float_1 %986 %1045 %1027
       %1047 = OpCompositeConstruct %v3float %float_0 %967 %float_0
       %1048 = OpFAdd %v3float %915 %1047
       %1049 = OpExtInst %v3float %1 Fract %1048
       %1050 = OpExtInst %v3float %1 FClamp %1049 %100 %125
       %1051 = OpVectorTimesScalar %v3float %1050 %919
       %1052 = OpFAdd %v3float %1051 %925
       %1053 = OpCompositeExtract %float %1052 0
       %1054 = OpCompositeExtract %float %1052 1
       %1055 = OpCompositeExtract %float %1052 2
       %1056 = OpConvertFToS %int %1053
       %1057 = OpConvertFToS %int %1054
       %1058 = OpConvertFToS %int %1055
       %1059 = OpCompositeConstruct %v4int %1056 %1057 %1058 %int_0
       %1060 = OpVectorShuffle %v3int %1059 %1059 0 1 2
       %1061 = OpImageFetch %v4uint %935 %1060 Lod %int_0
       %1062 = OpCompositeExtract %uint %1061 0
       %1063 = OpBitwiseAnd %uint %1062 %uint_16777215
       %1064 = OpULessThan %bool %1062 %uint_4294967295
               OpSelectionMerge %1065 None
               OpBranchConditional %1064 %1066 %1065
       %1066 = OpLabel
       %1067 = OpBitwiseAnd %uint %1063 %uint_127
       %1068 = OpCompositeInsert %v3uint %1067 %528 0
       %1069 = OpShiftRightLogical %uint %1063 %uint_7
       %1070 = OpBitwiseAnd %uint %1069 %uint_127
       %1071 = OpCompositeInsert %v3uint %1070 %1068 1
       %1072 = OpShiftRightLogical %uint %1063 %uint_14
       %1073 = OpCompositeInsert %v3uint %1072 %1071 2
       %1074 = OpVectorTimesScalar %v3float %1049 %919
       %1075 = OpExtInst %v3float %1 Fract %1074
       %1076 = OpIMul %v3uint %1073 %347
       %1077 = OpConvertUToF %v3float %1076
       %1078 = OpVectorTimesScalar %v3float %1075 %float_7
       %1079 = OpFAdd %v3float %1077 %1078
       %1080 = OpFAdd %v3float %1079 %135
       %1081 = OpFMul %v3float %1080 %957
       %1082 = OpSampledImage %type_sampled_image_0 %959 %960
       %1083 = OpImageSampleExplicitLod %v4float %1082 %1081 Lod %float_0
       %1084 = OpCompositeExtract %float %1083 0
               OpBranch %1065
       %1065 = OpLabel
       %1085 = OpPhi %float %float_1 %1026 %1084 %1066
       %1086 = OpCompositeConstruct %v3float %float_0 %1007 %float_0
       %1087 = OpFAdd %v3float %915 %1086
       %1088 = OpExtInst %v3float %1 Fract %1087
       %1089 = OpExtInst %v3float %1 FClamp %1088 %100 %125
       %1090 = OpVectorTimesScalar %v3float %1089 %919
       %1091 = OpFAdd %v3float %1090 %925
       %1092 = OpCompositeExtract %float %1091 0
       %1093 = OpCompositeExtract %float %1091 1
       %1094 = OpCompositeExtract %float %1091 2
       %1095 = OpConvertFToS %int %1092
       %1096 = OpConvertFToS %int %1093
       %1097 = OpConvertFToS %int %1094
       %1098 = OpCompositeConstruct %v4int %1095 %1096 %1097 %int_0
       %1099 = OpVectorShuffle %v3int %1098 %1098 0 1 2
       %1100 = OpImageFetch %v4uint %935 %1099 Lod %int_0
       %1101 = OpCompositeExtract %uint %1100 0
       %1102 = OpBitwiseAnd %uint %1101 %uint_16777215
       %1103 = OpULessThan %bool %1101 %uint_4294967295
               OpSelectionMerge %1104 None
               OpBranchConditional %1103 %1105 %1104
       %1105 = OpLabel
       %1106 = OpBitwiseAnd %uint %1102 %uint_127
       %1107 = OpCompositeInsert %v3uint %1106 %528 0
       %1108 = OpShiftRightLogical %uint %1102 %uint_7
       %1109 = OpBitwiseAnd %uint %1108 %uint_127
       %1110 = OpCompositeInsert %v3uint %1109 %1107 1
       %1111 = OpShiftRightLogical %uint %1102 %uint_14
       %1112 = OpCompositeInsert %v3uint %1111 %1110 2
       %1113 = OpVectorTimesScalar %v3float %1088 %919
       %1114 = OpExtInst %v3float %1 Fract %1113
       %1115 = OpIMul %v3uint %1112 %347
       %1116 = OpConvertUToF %v3float %1115
       %1117 = OpVectorTimesScalar %v3float %1114 %float_7
       %1118 = OpFAdd %v3float %1116 %1117
       %1119 = OpFAdd %v3float %1118 %135
       %1120 = OpFMul %v3float %1119 %957
       %1121 = OpSampledImage %type_sampled_image_0 %959 %960
       %1122 = OpImageSampleExplicitLod %v4float %1121 %1120 Lod %float_0
       %1123 = OpCompositeExtract %float %1122 0
               OpBranch %1104
       %1104 = OpLabel
       %1124 = OpPhi %float %float_1 %1065 %1123 %1105
       %1125 = OpFSub %float %1006 %1046
       %1126 = OpFSub %float %1085 %1124
       %1127 = OpCompositeConstruct %v3float %1125 %1126 %537
       %1128 = OpFMul %float %890 %float_16
       %1129 = OpFMul %float %float_128 %889
       %1130 = OpVectorTimesScalar %v3float %1127 %1128
       %1131 = OpFMul %float %887 %1129
       %1132 = OpCompositeConstruct %v3float %1131 %1131 %1131
       %1133 = OpFDiv %v3float %1130 %1132
               OpBranch %883
        %965 = OpLabel
               OpBranch %940
        %940 = OpLabel
       %1134 = OpPhi %v3uint %877 %908 %948 %965
               OpBranch %907
        %907 = OpLabel
        %878 = OpPhi %v3uint %877 %884 %1134 %940
               OpBranch %879
        %879 = OpLabel
        %881 = OpIAdd %uint %880 %uint_1
               OpBranch %876
        %883 = OpLabel
       %1135 = OpPhi %v3float %332 %876 %1133 %1104
       %1136 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_5 %int_1
       %1137 = OpLoad %float %1136
       %1138 = OpCompositeConstruct %v3float %1137 %1137 %1137
       %1139 = OpExtInst %v3float %1 Fma %1135 %1138 %630
       %1140 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_5 %int_2
       %1141 = OpLoad %float %1140
       %1142 = OpCompositeConstruct %v3float %1141 %1141 %1141
       %1143 = OpFMul %v3float %579 %1142
       %1144 = OpFMul %v3float %1139 %1142
       %1145 = OpAccessChain %_ptr_Uniform_float %View %uint_19
       %1146 = OpLoad %float %1145
       %1147 = OpCompositeExtract %float %749 2
       %1148 = OpCompositeExtract %float %749 3
       %1149 = OpExtInst %float %1 FMix %1146 %1147 %1148
       %1150 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_6 %int_0
       %1151 = OpLoad %float %1150
       %1152 = OpFMul %float %1149 %1151
       %1153 = OpCompositeConstruct %v2float %1152 %1152
       %1154 = OpFAdd %v2float %1153 %273
       %1155 = OpCompositeExtract %float %1143 0
       %1156 = OpCompositeExtract %float %1144 0
       %1157 = OpCompositeExtract %float %1143 1
       %1158 = OpCompositeExtract %float %1144 1
       %1159 = OpCompositeExtract %float %1154 0
       %1160 = OpCompositeConstruct %v3float %1155 %1157 %float_0
       %1161 = OpCompositeConstruct %v3float %1156 %1158 %1159
       %1162 = OpVectorTimesScalar %v3float %1161 %float_4_76837158en07
       %1163 = OpFAdd %v3float %1162 %135
       %1164 = OpFAdd %v3float %1160 %1163
       %1165 = OpExtInst %v3float %1 Floor %1164
       %1166 = OpFSub %v3float %1160 %1165
       %1167 = OpVectorTimesScalar %v3float %1166 %float_2097152
       %1168 = OpFAdd %v3float %1167 %1161
       %1169 = OpVectorTimesScalar %v3float %1168 %float_1
               OpBranch %1170
       %1170 = OpLabel
       %1171 = OpPhi %v3float %1169 %883 %1172 %1173
       %1174 = OpPhi %float %float_1 %883 %1175 %1173
       %1176 = OpPhi %float %float_0 %883 %1177 %1173
       %1178 = OpPhi %uint %uint_0 %883 %1179 %1173
       %1180 = OpULessThan %bool %1178 %uint_10
               OpLoopMerge %1181 %1173 DontUnroll
               OpBranchConditional %1180 %1173 %1181
       %1173 = OpLabel
       %1182 = OpExtInst %v3float %1 Fract %1171
       %1183 = OpExtInst %v3float %1 Floor %1171
       %1184 = OpDot %float %1183 %380
       %1185 = OpFAdd %float %1184 %float_19
       %1186 = OpFAdd %float %1184 %float_47
       %1187 = OpFAdd %float %1184 %float_66
       %1188 = OpFAdd %float %1184 %float_101
       %1189 = OpFAdd %float %1184 %float_120
       %1190 = OpFAdd %float %1184 %float_148
       %1191 = OpFAdd %float %1184 %float_167
       %1192 = OpConvertFToS %int %1184
       %1193 = OpCompositeConstruct %v3int %1192 %int_0 %int_0
       %1194 = OpBitcast %v3uint %1193
       %1195 = OpIMul %v3uint %1194 %396
       %1196 = OpIAdd %v3uint %1195 %398
       %1197 = OpCompositeExtract %uint %1196 1
       %1198 = OpCompositeExtract %uint %1196 2
       %1199 = OpIMul %uint %1197 %1198
       %1200 = OpCompositeExtract %uint %1196 0
       %1201 = OpIAdd %uint %1200 %1199
       %1202 = OpIMul %uint %1198 %1201
       %1203 = OpIAdd %uint %1197 %1202
       %1204 = OpIMul %uint %1201 %1203
       %1205 = OpIAdd %uint %1198 %1204
       %1206 = OpIMul %uint %1203 %1205
       %1207 = OpIAdd %uint %1201 %1206
       %1208 = OpCompositeInsert %v3uint %1207 %538 0
       %1209 = OpBitwiseAnd %v3uint %399 %400
       %1210 = OpShiftRightLogical %v3uint %1208 %1209
       %1211 = OpCompositeExtract %uint %1210 0
       %1212 = OpCompositeConstruct %v3uint %1211 %1211 %1211
       %1213 = OpBitwiseAnd %v3uint %1212 %381
       %1214 = OpConvertUToF %v3float %1213
       %1215 = OpExtInst %v3float %1 Fma %1214 %385 %276
       %1216 = OpDot %float %1215 %1182
       %1217 = OpConvertFToS %int %1185
       %1218 = OpFSub %v3float %1182 %344
       %1219 = OpCompositeConstruct %v3int %1217 %int_0 %int_0
       %1220 = OpBitcast %v3uint %1219
       %1221 = OpIMul %v3uint %1220 %396
       %1222 = OpIAdd %v3uint %1221 %398
       %1223 = OpCompositeExtract %uint %1222 1
       %1224 = OpCompositeExtract %uint %1222 2
       %1225 = OpIMul %uint %1223 %1224
       %1226 = OpCompositeExtract %uint %1222 0
       %1227 = OpIAdd %uint %1226 %1225
       %1228 = OpIMul %uint %1224 %1227
       %1229 = OpIAdd %uint %1223 %1228
       %1230 = OpIMul %uint %1227 %1229
       %1231 = OpIAdd %uint %1224 %1230
       %1232 = OpIMul %uint %1229 %1231
       %1233 = OpIAdd %uint %1227 %1232
       %1234 = OpCompositeInsert %v3uint %1233 %538 0
       %1235 = OpShiftRightLogical %v3uint %1234 %1209
       %1236 = OpCompositeExtract %uint %1235 0
       %1237 = OpCompositeConstruct %v3uint %1236 %1236 %1236
       %1238 = OpBitwiseAnd %v3uint %1237 %381
       %1239 = OpConvertUToF %v3float %1238
       %1240 = OpExtInst %v3float %1 Fma %1239 %385 %276
       %1241 = OpDot %float %1240 %1218
       %1242 = OpConvertFToS %int %1186
       %1243 = OpFSub %v3float %1182 %345
       %1244 = OpCompositeConstruct %v3int %1242 %int_0 %int_0
       %1245 = OpBitcast %v3uint %1244
       %1246 = OpIMul %v3uint %1245 %396
       %1247 = OpIAdd %v3uint %1246 %398
       %1248 = OpCompositeExtract %uint %1247 1
       %1249 = OpCompositeExtract %uint %1247 2
       %1250 = OpIMul %uint %1248 %1249
       %1251 = OpCompositeExtract %uint %1247 0
       %1252 = OpIAdd %uint %1251 %1250
       %1253 = OpIMul %uint %1249 %1252
       %1254 = OpIAdd %uint %1248 %1253
       %1255 = OpIMul %uint %1252 %1254
       %1256 = OpIAdd %uint %1249 %1255
       %1257 = OpIMul %uint %1254 %1256
       %1258 = OpIAdd %uint %1252 %1257
       %1259 = OpCompositeInsert %v3uint %1258 %538 0
       %1260 = OpShiftRightLogical %v3uint %1259 %1209
       %1261 = OpCompositeExtract %uint %1260 0
       %1262 = OpCompositeConstruct %v3uint %1261 %1261 %1261
       %1263 = OpBitwiseAnd %v3uint %1262 %381
       %1264 = OpConvertUToF %v3float %1263
       %1265 = OpExtInst %v3float %1 Fma %1264 %385 %276
       %1266 = OpDot %float %1265 %1243
       %1267 = OpConvertFToS %int %1187
       %1268 = OpFSub %v3float %1182 %132
       %1269 = OpCompositeConstruct %v3int %1267 %int_0 %int_0
       %1270 = OpBitcast %v3uint %1269
       %1271 = OpIMul %v3uint %1270 %396
       %1272 = OpIAdd %v3uint %1271 %398
       %1273 = OpCompositeExtract %uint %1272 1
       %1274 = OpCompositeExtract %uint %1272 2
       %1275 = OpIMul %uint %1273 %1274
       %1276 = OpCompositeExtract %uint %1272 0
       %1277 = OpIAdd %uint %1276 %1275
       %1278 = OpIMul %uint %1274 %1277
       %1279 = OpIAdd %uint %1273 %1278
       %1280 = OpIMul %uint %1277 %1279
       %1281 = OpIAdd %uint %1274 %1280
       %1282 = OpIMul %uint %1279 %1281
       %1283 = OpIAdd %uint %1277 %1282
       %1284 = OpCompositeInsert %v3uint %1283 %538 0
       %1285 = OpShiftRightLogical %v3uint %1284 %1209
       %1286 = OpCompositeExtract %uint %1285 0
       %1287 = OpCompositeConstruct %v3uint %1286 %1286 %1286
       %1288 = OpBitwiseAnd %v3uint %1287 %381
       %1289 = OpConvertUToF %v3float %1288
       %1290 = OpExtInst %v3float %1 Fma %1289 %385 %276
       %1291 = OpDot %float %1290 %1268
       %1292 = OpConvertFToS %int %1188
       %1293 = OpFSub %v3float %1182 %288
       %1294 = OpCompositeConstruct %v3int %1292 %int_0 %int_0
       %1295 = OpBitcast %v3uint %1294
       %1296 = OpIMul %v3uint %1295 %396
       %1297 = OpIAdd %v3uint %1296 %398
       %1298 = OpCompositeExtract %uint %1297 1
       %1299 = OpCompositeExtract %uint %1297 2
       %1300 = OpIMul %uint %1298 %1299
       %1301 = OpCompositeExtract %uint %1297 0
       %1302 = OpIAdd %uint %1301 %1300
       %1303 = OpIMul %uint %1299 %1302
       %1304 = OpIAdd %uint %1298 %1303
       %1305 = OpIMul %uint %1302 %1304
       %1306 = OpIAdd %uint %1299 %1305
       %1307 = OpIMul %uint %1304 %1306
       %1308 = OpIAdd %uint %1302 %1307
       %1309 = OpCompositeInsert %v3uint %1308 %538 0
       %1310 = OpShiftRightLogical %v3uint %1309 %1209
       %1311 = OpCompositeExtract %uint %1310 0
       %1312 = OpCompositeConstruct %v3uint %1311 %1311 %1311
       %1313 = OpBitwiseAnd %v3uint %1312 %381
       %1314 = OpConvertUToF %v3float %1313
       %1315 = OpExtInst %v3float %1 Fma %1314 %385 %276
       %1316 = OpDot %float %1315 %1293
       %1317 = OpConvertFToS %int %1189
       %1318 = OpFSub %v3float %1182 %137
       %1319 = OpCompositeConstruct %v3int %1317 %int_0 %int_0
       %1320 = OpBitcast %v3uint %1319
       %1321 = OpIMul %v3uint %1320 %396
       %1322 = OpIAdd %v3uint %1321 %398
       %1323 = OpCompositeExtract %uint %1322 1
       %1324 = OpCompositeExtract %uint %1322 2
       %1325 = OpIMul %uint %1323 %1324
       %1326 = OpCompositeExtract %uint %1322 0
       %1327 = OpIAdd %uint %1326 %1325
       %1328 = OpIMul %uint %1324 %1327
       %1329 = OpIAdd %uint %1323 %1328
       %1330 = OpIMul %uint %1327 %1329
       %1331 = OpIAdd %uint %1324 %1330
       %1332 = OpIMul %uint %1329 %1331
       %1333 = OpIAdd %uint %1327 %1332
       %1334 = OpCompositeInsert %v3uint %1333 %538 0
       %1335 = OpShiftRightLogical %v3uint %1334 %1209
       %1336 = OpCompositeExtract %uint %1335 0
       %1337 = OpCompositeConstruct %v3uint %1336 %1336 %1336
       %1338 = OpBitwiseAnd %v3uint %1337 %381
       %1339 = OpConvertUToF %v3float %1338
       %1340 = OpExtInst %v3float %1 Fma %1339 %385 %276
       %1341 = OpDot %float %1340 %1318
       %1342 = OpConvertFToS %int %1190
       %1343 = OpFSub %v3float %1182 %133
       %1344 = OpCompositeConstruct %v3int %1342 %int_0 %int_0
       %1345 = OpBitcast %v3uint %1344
       %1346 = OpIMul %v3uint %1345 %396
       %1347 = OpIAdd %v3uint %1346 %398
       %1348 = OpCompositeExtract %uint %1347 1
       %1349 = OpCompositeExtract %uint %1347 2
       %1350 = OpIMul %uint %1348 %1349
       %1351 = OpCompositeExtract %uint %1347 0
       %1352 = OpIAdd %uint %1351 %1350
       %1353 = OpIMul %uint %1349 %1352
       %1354 = OpIAdd %uint %1348 %1353
       %1355 = OpIMul %uint %1352 %1354
       %1356 = OpIAdd %uint %1349 %1355
       %1357 = OpIMul %uint %1354 %1356
       %1358 = OpIAdd %uint %1352 %1357
       %1359 = OpCompositeInsert %v3uint %1358 %538 0
       %1360 = OpShiftRightLogical %v3uint %1359 %1209
       %1361 = OpCompositeExtract %uint %1360 0
       %1362 = OpCompositeConstruct %v3uint %1361 %1361 %1361
       %1363 = OpBitwiseAnd %v3uint %1362 %381
       %1364 = OpConvertUToF %v3float %1363
       %1365 = OpExtInst %v3float %1 Fma %1364 %385 %276
       %1366 = OpDot %float %1365 %1343
       %1367 = OpConvertFToS %int %1191
       %1368 = OpFSub %v3float %1182 %125
       %1369 = OpCompositeConstruct %v3int %1367 %int_0 %int_0
       %1370 = OpBitcast %v3uint %1369
       %1371 = OpIMul %v3uint %1370 %396
       %1372 = OpIAdd %v3uint %1371 %398
       %1373 = OpCompositeExtract %uint %1372 1
       %1374 = OpCompositeExtract %uint %1372 2
       %1375 = OpIMul %uint %1373 %1374
       %1376 = OpCompositeExtract %uint %1372 0
       %1377 = OpIAdd %uint %1376 %1375
       %1378 = OpIMul %uint %1374 %1377
       %1379 = OpIAdd %uint %1373 %1378
       %1380 = OpIMul %uint %1377 %1379
       %1381 = OpIAdd %uint %1374 %1380
       %1382 = OpIMul %uint %1379 %1381
       %1383 = OpIAdd %uint %1377 %1382
       %1384 = OpCompositeInsert %v3uint %1383 %538 0
       %1385 = OpShiftRightLogical %v3uint %1384 %1209
       %1386 = OpCompositeExtract %uint %1385 0
       %1387 = OpCompositeConstruct %v3uint %1386 %1386 %1386
       %1388 = OpBitwiseAnd %v3uint %1387 %381
       %1389 = OpConvertUToF %v3float %1388
       %1390 = OpExtInst %v3float %1 Fma %1389 %385 %276
       %1391 = OpDot %float %1390 %1368
       %1392 = OpCompositeExtract %float %1182 0
       %1393 = OpCompositeExtract %float %1182 1
       %1394 = OpCompositeExtract %float %1182 2
       %1395 = OpCompositeConstruct %v4float %1392 %1393 %1394 %float_0
       %1396 = OpFMul %v4float %1395 %1395
       %1397 = OpFMul %v4float %1396 %1395
       %1398 = OpVectorTimesScalar %v4float %1395 %float_6
       %1399 = OpFSub %v4float %1398 %376
       %1400 = OpExtInst %v4float %1 Fma %1395 %1399 %377
       %1401 = OpFMul %v4float %1397 %1400
       %1402 = OpCompositeExtract %float %1401 0
       %1403 = OpExtInst %float %1 FMix %1216 %1241 %1402
       %1404 = OpExtInst %float %1 FMix %1266 %1291 %1402
       %1405 = OpCompositeExtract %float %1401 1
       %1406 = OpExtInst %float %1 FMix %1403 %1404 %1405
       %1407 = OpExtInst %float %1 FMix %1316 %1341 %1402
       %1408 = OpExtInst %float %1 FMix %1366 %1391 %1402
       %1409 = OpExtInst %float %1 FMix %1407 %1408 %1405
       %1410 = OpCompositeExtract %float %1401 2
       %1411 = OpExtInst %float %1 FMix %1406 %1409 %1410
       %1412 = OpExtInst %float %1 FAbs %1411
       %1177 = OpExtInst %float %1 Fma %1412 %1174 %1176
       %1172 = OpVectorTimesScalar %v3float %1171 %float_2
       %1175 = OpFMul %float %1174 %float_0_5
       %1179 = OpIAdd %uint %1178 %uint_1
               OpBranch %1170
       %1181 = OpLabel
       %1413 = OpExtInst %float %1 FMix %float_0 %float_1 %1176
       %1414 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_6 %int_1
       %1415 = OpLoad %float %1414
       %1416 = OpFNegate %float %875
       %1417 = OpExtInst %float %1 Fma %1416 %1415 %1413
       %1418 = OpExtInst %float %1 Fma %875 %1415 %float_1
       %1419 = OpExtInst %float %1 Fma %1416 %1415 %1418
       %1420 = OpFDiv %float %1417 %1419
       %1421 = OpExtInst %float %1 Fma %1420 %float_n1 %float_1
       %1422 = OpExtInst %float %1 FClamp %1421 %float_0 %float_1
       %1423 = OpFOrdLessThanEqual %bool %1422 %float_0
       %1424 = OpExtInst %float %1 Pow %1422 %float_2
       %1425 = OpSelect %float %1423 %float_0 %1424
       %1426 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_6 %int_3
       %1427 = OpLoad %float %1426
       %1428 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_6 %int_2
       %1429 = OpLoad %float %1428
       %1430 = OpExtInst %float %1 FMix %1427 %1429 %1425
       %1431 = OpExtInst %float %1 FClamp %1430 %float_0 %float_1
       %1432 = OpFMul %float %875 %1431
       %1433 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_7 %int_0
       %1434 = OpLoad %float %1433
       %1435 = OpCompositeConstruct %v3float %1434 %1434 %1434
       %1436 = OpFMul %v3float %579 %1435
       %1437 = OpFMul %v3float %630 %1435
       %1438 = OpVectorTimesScalar %v3float %1437 %float_4_76837158en07
       %1439 = OpFAdd %v3float %1438 %135
       %1440 = OpExtInst %v3float %1 Fma %579 %1435 %1439
       %1441 = OpExtInst %v3float %1 Floor %1440
       %1442 = OpFNegate %v3float %1441
       %1443 = OpExtInst %v3float %1 Fma %579 %1435 %1442
       %1444 = OpVectorTimesScalar %v3float %1443 %float_2097152
       %1445 = OpExtInst %v3float %1 Fma %630 %1435 %1444
       %1446 = OpVectorTimesScalar %v3float %1445 %float_1
               OpBranch %1447
       %1447 = OpLabel
       %1448 = OpPhi %v3float %529 %1181 %1449 %1450
       %1451 = OpPhi %v3float %1446 %1181 %1452 %1450
       %1453 = OpPhi %float %float_1 %1181 %1454 %1450
       %1455 = OpPhi %float %float_0 %1181 %1456 %1450
       %1457 = OpPhi %uint %uint_0 %1181 %1458 %1450
       %1459 = OpULessThan %bool %1457 %uint_1
               OpLoopMerge %1460 %1450 DontUnroll
               OpBranchConditional %1459 %1461 %1460
       %1461 = OpLabel
       %1462 = OpExtInst %v3float %1 Fract %1451
       %1463 = OpExtInst %v3float %1 Floor %1451
       %1464 = OpCompositeInsert %v3float %float_0 %1448 0
               OpBranch %1465
       %1465 = OpLabel
       %1466 = OpPhi %v4float %346 %1461 %1467 %1468
       %1449 = OpPhi %v3float %1464 %1461 %1469 %1468
       %1470 = OpCompositeExtract %float %1449 0
       %1471 = OpFOrdLessThanEqual %bool %1470 %float_1
               OpLoopMerge %1472 %1468 None
               OpBranchConditional %1471 %1473 %1472
       %1473 = OpLabel
       %1474 = OpCompositeInsert %v3float %float_0 %1449 1
               OpBranch %1475
       %1475 = OpLabel
       %1476 = OpPhi %v3float %1474 %1473 %1477 %1478
       %1467 = OpPhi %v4float %1466 %1473 %1479 %1478
       %1480 = OpCompositeExtract %float %1476 1
       %1481 = OpFOrdLessThanEqual %bool %1480 %float_1
               OpLoopMerge %1482 %1478 None
               OpBranchConditional %1481 %1483 %1482
       %1483 = OpLabel
       %1484 = OpCompositeInsert %v3float %float_0 %1476 2
               OpBranch %1485
       %1485 = OpLabel
       %1479 = OpPhi %v4float %1467 %1483 %1486 %1487
       %1488 = OpPhi %v3float %1484 %1483 %1489 %1487
       %1490 = OpCompositeExtract %float %1488 2
       %1491 = OpFOrdLessThanEqual %bool %1490 %float_1
               OpLoopMerge %1492 %1487 None
               OpBranchConditional %1491 %1487 %1492
       %1487 = OpLabel
       %1493 = OpFAdd %v3float %1463 %1488
       %1494 = OpVectorShuffle %v3float %527 %1493 3 4 5
       %1495 = OpConvertFToS %v3int %1494
       %1496 = OpBitcast %v3uint %1495
       %1497 = OpIMul %v3uint %1496 %396
       %1498 = OpIAdd %v3uint %1497 %398
       %1499 = OpCompositeExtract %uint %1498 1
       %1500 = OpCompositeExtract %uint %1498 2
       %1501 = OpIMul %uint %1499 %1500
       %1502 = OpCompositeExtract %uint %1498 0
       %1503 = OpIAdd %uint %1502 %1501
       %1504 = OpIMul %uint %1500 %1503
       %1505 = OpIAdd %uint %1499 %1504
       %1506 = OpIMul %uint %1503 %1505
       %1507 = OpIAdd %uint %1500 %1506
       %1508 = OpIMul %uint %1505 %1507
       %1509 = OpIAdd %uint %1503 %1508
       %1510 = OpCompositeInsert %v3uint %1509 %1498 0
       %1511 = OpIMul %uint %1507 %1509
       %1512 = OpIAdd %uint %1505 %1511
       %1513 = OpCompositeInsert %v3uint %1512 %1510 1
       %1514 = OpIMul %uint %1509 %1512
       %1515 = OpIAdd %uint %1507 %1514
       %1516 = OpCompositeInsert %v3uint %1515 %1513 2
       %1517 = OpBitwiseAnd %v3uint %399 %400
       %1518 = OpShiftRightLogical %v3uint %1516 %1517
       %1519 = OpConvertUToF %v3float %1518
       %1520 = OpExtInst %v3float %1 Fma %1519 %511 %500
       %1521 = OpExtInst %v3float %1 Normalize %1520
       %1522 = OpVectorTimesScalar %v3float %1521 %float_0_2588
       %1523 = OpFAdd %v3float %1488 %1522
       %1524 = OpFSub %v3float %1462 %1523
       %1525 = OpCompositeExtract %float %1479 3
       %1526 = OpDot %float %1524 %1524
       %1527 = OpExtInst %float %1 NMin %1525 %1526
       %1486 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %1527
       %1528 = OpFAdd %float %1490 %float_1
       %1489 = OpCompositeInsert %v3float %1528 %1488 2
               OpBranch %1485
       %1492 = OpLabel
               OpBranch %1478
       %1478 = OpLabel
       %1529 = OpCompositeExtract %float %1488 1
       %1530 = OpFAdd %float %1529 %float_1
       %1477 = OpCompositeInsert %v3float %1530 %1488 1
               OpBranch %1475
       %1482 = OpLabel
               OpBranch %1468
       %1468 = OpLabel
       %1531 = OpCompositeExtract %float %1476 0
       %1532 = OpFAdd %float %1531 %float_1
       %1469 = OpCompositeInsert %v3float %1532 %1476 0
               OpBranch %1465
       %1472 = OpLabel
       %1533 = OpCompositeExtract %float %1466 3
       %1534 = OpExtInst %float %1 Sqrt %1533
       %1535 = OpExtInst %float %1 Fma %1534 %float_2 %float_n1
       %1536 = OpExtInst %float %1 FAbs %1535
       %1456 = OpExtInst %float %1 Fma %1536 %1453 %1455
       %1452 = OpVectorTimesScalar %v3float %1451 %float_2
       %1454 = OpFMul %float %1453 %float_0_5
               OpBranch %1450
       %1450 = OpLabel
       %1458 = OpIAdd %uint %1457 %uint_1
               OpBranch %1447
       %1460 = OpLabel
       %1537 = OpExtInst %float %1 FMix %float_n1 %float_1 %1455
       %1538 = OpExtInst %float %1 FClamp %1537 %float_0 %float_1
       %1539 = OpFMul %v3float %1437 %275
       %1540 = OpVectorTimesScalar %v3float %1539 %float_4_76837158en07
       %1541 = OpFAdd %v3float %1540 %135
       %1542 = OpExtInst %v3float %1 Fma %1436 %275 %1541
       %1543 = OpExtInst %v3float %1 Floor %1542
       %1544 = OpFNegate %v3float %1543
       %1545 = OpExtInst %v3float %1 Fma %1436 %275 %1544
       %1546 = OpVectorTimesScalar %v3float %1545 %float_2097152
       %1547 = OpExtInst %v3float %1 Fma %1437 %275 %1546
       %1548 = OpVectorTimesScalar %v3float %1547 %float_1
               OpBranch %1549
       %1549 = OpLabel
       %1550 = OpPhi %v3float %529 %1460 %1551 %1552
       %1553 = OpPhi %v3float %1548 %1460 %1554 %1552
       %1555 = OpPhi %float %float_1 %1460 %1556 %1552
       %1557 = OpPhi %float %float_0 %1460 %1558 %1552
       %1559 = OpPhi %uint %uint_0 %1460 %1560 %1552
       %1561 = OpULessThan %bool %1559 %uint_1
               OpLoopMerge %1562 %1552 DontUnroll
               OpBranchConditional %1561 %1563 %1562
       %1563 = OpLabel
       %1564 = OpExtInst %v3float %1 Fract %1553
       %1565 = OpExtInst %v3float %1 Floor %1553
       %1566 = OpCompositeInsert %v3float %float_0 %1550 0
               OpBranch %1567
       %1567 = OpLabel
       %1568 = OpPhi %v4float %346 %1563 %1569 %1570
       %1551 = OpPhi %v3float %1566 %1563 %1571 %1570
       %1572 = OpCompositeExtract %float %1551 0
       %1573 = OpFOrdLessThanEqual %bool %1572 %float_1
               OpLoopMerge %1574 %1570 None
               OpBranchConditional %1573 %1575 %1574
       %1575 = OpLabel
       %1576 = OpCompositeInsert %v3float %float_0 %1551 1
               OpBranch %1577
       %1577 = OpLabel
       %1578 = OpPhi %v3float %1576 %1575 %1579 %1580
       %1569 = OpPhi %v4float %1568 %1575 %1581 %1580
       %1582 = OpCompositeExtract %float %1578 1
       %1583 = OpFOrdLessThanEqual %bool %1582 %float_1
               OpLoopMerge %1584 %1580 None
               OpBranchConditional %1583 %1585 %1584
       %1585 = OpLabel
       %1586 = OpCompositeInsert %v3float %float_0 %1578 2
               OpBranch %1587
       %1587 = OpLabel
       %1581 = OpPhi %v4float %1569 %1585 %1588 %1589
       %1590 = OpPhi %v3float %1586 %1585 %1591 %1589
       %1592 = OpCompositeExtract %float %1590 2
       %1593 = OpFOrdLessThanEqual %bool %1592 %float_1
               OpLoopMerge %1594 %1589 None
               OpBranchConditional %1593 %1589 %1594
       %1589 = OpLabel
       %1595 = OpFAdd %v3float %1565 %1590
       %1596 = OpVectorShuffle %v3float %527 %1595 3 4 5
       %1597 = OpConvertFToS %v3int %1596
       %1598 = OpBitcast %v3uint %1597
       %1599 = OpIMul %v3uint %1598 %396
       %1600 = OpIAdd %v3uint %1599 %398
       %1601 = OpCompositeExtract %uint %1600 1
       %1602 = OpCompositeExtract %uint %1600 2
       %1603 = OpIMul %uint %1601 %1602
       %1604 = OpCompositeExtract %uint %1600 0
       %1605 = OpIAdd %uint %1604 %1603
       %1606 = OpIMul %uint %1602 %1605
       %1607 = OpIAdd %uint %1601 %1606
       %1608 = OpIMul %uint %1605 %1607
       %1609 = OpIAdd %uint %1602 %1608
       %1610 = OpIMul %uint %1607 %1609
       %1611 = OpIAdd %uint %1605 %1610
       %1612 = OpCompositeInsert %v3uint %1611 %1600 0
       %1613 = OpIMul %uint %1609 %1611
       %1614 = OpIAdd %uint %1607 %1613
       %1615 = OpCompositeInsert %v3uint %1614 %1612 1
       %1616 = OpIMul %uint %1611 %1614
       %1617 = OpIAdd %uint %1609 %1616
       %1618 = OpCompositeInsert %v3uint %1617 %1615 2
       %1619 = OpBitwiseAnd %v3uint %399 %400
       %1620 = OpShiftRightLogical %v3uint %1618 %1619
       %1621 = OpConvertUToF %v3float %1620
       %1622 = OpExtInst %v3float %1 Fma %1621 %511 %500
       %1623 = OpExtInst %v3float %1 Normalize %1622
       %1624 = OpVectorTimesScalar %v3float %1623 %float_0_2588
       %1625 = OpFAdd %v3float %1590 %1624
       %1626 = OpFSub %v3float %1564 %1625
       %1627 = OpCompositeExtract %float %1581 3
       %1628 = OpDot %float %1626 %1626
       %1629 = OpExtInst %float %1 NMin %1627 %1628
       %1588 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %1629
       %1630 = OpFAdd %float %1592 %float_1
       %1591 = OpCompositeInsert %v3float %1630 %1590 2
               OpBranch %1587
       %1594 = OpLabel
               OpBranch %1580
       %1580 = OpLabel
       %1631 = OpCompositeExtract %float %1590 1
       %1632 = OpFAdd %float %1631 %float_1
       %1579 = OpCompositeInsert %v3float %1632 %1590 1
               OpBranch %1577
       %1584 = OpLabel
               OpBranch %1570
       %1570 = OpLabel
       %1633 = OpCompositeExtract %float %1578 0
       %1634 = OpFAdd %float %1633 %float_1
       %1571 = OpCompositeInsert %v3float %1634 %1578 0
               OpBranch %1567
       %1574 = OpLabel
       %1635 = OpCompositeExtract %float %1568 3
       %1636 = OpExtInst %float %1 Sqrt %1635
       %1637 = OpExtInst %float %1 Fma %1636 %float_2 %float_n1
       %1638 = OpExtInst %float %1 FAbs %1637
       %1558 = OpExtInst %float %1 Fma %1638 %1555 %1557
       %1554 = OpVectorTimesScalar %v3float %1553 %float_2
       %1556 = OpFMul %float %1555 %float_0_5
               OpBranch %1552
       %1552 = OpLabel
       %1560 = OpIAdd %uint %1559 %uint_1
               OpBranch %1549
       %1562 = OpLabel
       %1639 = OpExtInst %float %1 FMix %float_n1 %float_1 %1557
       %1640 = OpExtInst %float %1 FClamp %1639 %float_0 %float_1
       %1641 = OpFAdd %float %1538 %1640
       %1642 = OpFNegate %float %1641
       %1643 = OpExtInst %float %1 Fma %875 %1431 %1642
       %1644 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_7 %int_1
       %1645 = OpLoad %float %1644
       %1646 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_7 %int_2
       %1647 = OpLoad %float %1646
       %1648 = OpFSub %float %1647 %float_n1
       %1649 = OpExtInst %float %1 FAbs %1648
       %1650 = OpFOrdGreaterThan %bool %1649 %float_9_99999975en06
       %1651 = OpFOrdGreaterThanEqual %bool %1647 %float_n1
       %1652 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_7 %int_3
       %1653 = OpLoad %float %1652
       %1654 = OpSelect %float %1651 %1647 %1653
       %1655 = OpSelect %float %1650 %1654 %1647
       %1656 = OpFSub %float %1655 %float_1
       %1657 = OpExtInst %float %1 FAbs %1656
       %1658 = OpFOrdGreaterThan %bool %1657 %float_9_99999975en06
       %1659 = OpFOrdGreaterThanEqual %bool %1655 %float_1
       %1660 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_8 %int_0
       %1661 = OpLoad %float %1660
       %1662 = OpSelect %float %1659 %1661 %1647
       %1663 = OpSelect %float %1658 %1662 %1647
       %1664 = OpExtInst %float %1 FAbs %1663
       %1665 = OpFOrdGreaterThan %bool %1664 %float_9_99999975en06
       %1666 = OpFOrdGreaterThanEqual %bool %1663 %float_0
       %1667 = OpSelect %float %1666 %float_1 %float_n1
       %1668 = OpSelect %float %1665 %1667 %float_1
       %1669 = OpExtInst %float %1 NMax %1668 %float_n1
       %1670 = OpExtInst %float %1 NMin %1669 %float_1
       %1671 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_10 %int_1
       %1672 = OpLoad %float %1671
       %1673 = OpCompositeConstruct %v3float %1670 %1672 %float_0
       %1674 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_11
       %1675 = OpLoad %v4float %1674
       %1676 = OpVectorShuffle %v3float %1675 %1675 0 1 2
       %1677 = OpFAdd %v3float %1673 %1676
       %1678 = OpExtInst %v3float %1 NMax %1677 %276
       %1679 = OpExtInst %v3float %1 NMin %1678 %125
       %1680 = OpCompositeExtract %float %579 0
       %1681 = OpCompositeExtract %float %630 0
       %1682 = OpCompositeExtract %float %579 1
       %1683 = OpCompositeExtract %float %630 1
       %1684 = OpCompositeConstruct %v2float %1680 %1682
       %1685 = OpCompositeConstruct %v2float %1681 %1683
       %1686 = OpCompositeExtract %float %1679 0
       %1687 = OpCompositeExtract %float %1679 1
       %1688 = OpCompositeConstruct %v2float %1686 %1687
       %1689 = OpFMul %v2float %1684 %1688
       %1690 = OpFMul %v2float %1688 %1685
       %1691 = OpCompositeExtract %float %1689 0
       %1692 = OpCompositeExtract %float %1690 0
       %1693 = OpCompositeExtract %float %1689 1
       %1694 = OpCompositeExtract %float %1690 1
       %1695 = OpFAdd %float %1691 %1693
       %1696 = OpFAdd %float %1692 %1694
       %1697 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_14 %int_0
       %1698 = OpLoad %float %1697
       %1699 = OpFMul %float %1695 %1698
       %1700 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_14 %int_2
       %1701 = OpLoad %float %1700
       %1702 = OpFSub %float %1149 %1701
       %1703 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_14 %int_3
       %1704 = OpLoad %float %1703
       %1705 = OpCompositeConstruct %v3float %1704 %1704 %1704
       %1706 = OpFMul %v3float %579 %1705
       %1707 = OpFMul %v3float %1705 %630
       %1708 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_15 %int_0
       %1709 = OpLoad %float %1708
       %1710 = OpCompositeConstruct %v3float %1709 %1709 %1709
       %1711 = OpFMul %v3float %1706 %1710
       %1712 = OpFMul %v3float %1707 %1710
       %1713 = OpCompositeExtract %float %749 1
       %1714 = OpCompositeConstruct %v3float %1713 %1713 %1713
       %1715 = OpFMul %v3float %1711 %1714
       %1716 = OpFMul %v3float %1712 %1714
       %1717 = OpFMul %v3float %1716 %278
       %1718 = OpCompositeExtract %float %1717 0
       %1719 = OpCompositeExtract %float %1717 1
       %1720 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_15 %int_2
       %1721 = OpLoad %float %1720
       %1722 = OpFMul %float %1149 %1721
       %1723 = OpCompositeExtract %float %1717 2
       %1724 = OpCompositeConstruct %v2float %1722 %1722
       %1725 = OpCompositeConstruct %v2float %1723 %1723
       %1726 = OpFAdd %v2float %1724 %1725
       %1727 = OpCompositeExtract %float %1726 0
       %1728 = OpCompositeConstruct %v3float %1718 %1719 %1727
       %1729 = OpVectorTimesScalar %v3float %1728 %float_4_76837158en07
       %1730 = OpFAdd %v3float %1729 %135
       %1731 = OpExtInst %v3float %1 Fma %1715 %278 %1730
       %1732 = OpExtInst %v3float %1 Floor %1731
       %1733 = OpFNegate %v3float %1732
       %1734 = OpExtInst %v3float %1 Fma %1715 %278 %1733
       %1735 = OpVectorTimesScalar %v3float %1734 %float_2097152
       %1736 = OpFAdd %v3float %1735 %1728
       %1737 = OpVectorTimesScalar %v3float %1736 %float_1
               OpBranch %1738
       %1738 = OpLabel
       %1739 = OpPhi %v3float %1737 %1562 %1740 %1741
       %1742 = OpPhi %float %float_1 %1562 %1743 %1741
       %1744 = OpPhi %float %float_0 %1562 %1745 %1741
       %1746 = OpPhi %uint %uint_0 %1562 %1747 %1741
       %1748 = OpULessThan %bool %1746 %uint_6
               OpLoopMerge %1749 %1741 DontUnroll
               OpBranchConditional %1748 %1741 %1749
       %1741 = OpLabel
       %1750 = OpExtInst %v3float %1 Fract %1739
       %1751 = OpExtInst %v3float %1 Floor %1739
       %1752 = OpDot %float %1751 %380
       %1753 = OpFAdd %float %1752 %float_19
       %1754 = OpFAdd %float %1752 %float_47
       %1755 = OpFAdd %float %1752 %float_66
       %1756 = OpFAdd %float %1752 %float_101
       %1757 = OpFAdd %float %1752 %float_120
       %1758 = OpFAdd %float %1752 %float_148
       %1759 = OpFAdd %float %1752 %float_167
       %1760 = OpConvertFToS %int %1752
       %1761 = OpCompositeConstruct %v3int %1760 %int_0 %int_0
       %1762 = OpBitcast %v3uint %1761
       %1763 = OpIMul %v3uint %1762 %396
       %1764 = OpIAdd %v3uint %1763 %398
       %1765 = OpCompositeExtract %uint %1764 1
       %1766 = OpCompositeExtract %uint %1764 2
       %1767 = OpIMul %uint %1765 %1766
       %1768 = OpCompositeExtract %uint %1764 0
       %1769 = OpIAdd %uint %1768 %1767
       %1770 = OpIMul %uint %1766 %1769
       %1771 = OpIAdd %uint %1765 %1770
       %1772 = OpIMul %uint %1769 %1771
       %1773 = OpIAdd %uint %1766 %1772
       %1774 = OpIMul %uint %1771 %1773
       %1775 = OpIAdd %uint %1769 %1774
       %1776 = OpCompositeInsert %v3uint %1775 %538 0
       %1777 = OpBitwiseAnd %v3uint %399 %400
       %1778 = OpShiftRightLogical %v3uint %1776 %1777
       %1779 = OpCompositeExtract %uint %1778 0
       %1780 = OpCompositeConstruct %v3uint %1779 %1779 %1779
       %1781 = OpBitwiseAnd %v3uint %1780 %381
       %1782 = OpConvertUToF %v3float %1781
       %1783 = OpExtInst %v3float %1 Fma %1782 %385 %276
       %1784 = OpDot %float %1783 %1750
       %1785 = OpConvertFToS %int %1753
       %1786 = OpFSub %v3float %1750 %344
       %1787 = OpCompositeConstruct %v3int %1785 %int_0 %int_0
       %1788 = OpBitcast %v3uint %1787
       %1789 = OpIMul %v3uint %1788 %396
       %1790 = OpIAdd %v3uint %1789 %398
       %1791 = OpCompositeExtract %uint %1790 1
       %1792 = OpCompositeExtract %uint %1790 2
       %1793 = OpIMul %uint %1791 %1792
       %1794 = OpCompositeExtract %uint %1790 0
       %1795 = OpIAdd %uint %1794 %1793
       %1796 = OpIMul %uint %1792 %1795
       %1797 = OpIAdd %uint %1791 %1796
       %1798 = OpIMul %uint %1795 %1797
       %1799 = OpIAdd %uint %1792 %1798
       %1800 = OpIMul %uint %1797 %1799
       %1801 = OpIAdd %uint %1795 %1800
       %1802 = OpCompositeInsert %v3uint %1801 %538 0
       %1803 = OpShiftRightLogical %v3uint %1802 %1777
       %1804 = OpCompositeExtract %uint %1803 0
       %1805 = OpCompositeConstruct %v3uint %1804 %1804 %1804
       %1806 = OpBitwiseAnd %v3uint %1805 %381
       %1807 = OpConvertUToF %v3float %1806
       %1808 = OpExtInst %v3float %1 Fma %1807 %385 %276
       %1809 = OpDot %float %1808 %1786
       %1810 = OpConvertFToS %int %1754
       %1811 = OpFSub %v3float %1750 %345
       %1812 = OpCompositeConstruct %v3int %1810 %int_0 %int_0
       %1813 = OpBitcast %v3uint %1812
       %1814 = OpIMul %v3uint %1813 %396
       %1815 = OpIAdd %v3uint %1814 %398
       %1816 = OpCompositeExtract %uint %1815 1
       %1817 = OpCompositeExtract %uint %1815 2
       %1818 = OpIMul %uint %1816 %1817
       %1819 = OpCompositeExtract %uint %1815 0
       %1820 = OpIAdd %uint %1819 %1818
       %1821 = OpIMul %uint %1817 %1820
       %1822 = OpIAdd %uint %1816 %1821
       %1823 = OpIMul %uint %1820 %1822
       %1824 = OpIAdd %uint %1817 %1823
       %1825 = OpIMul %uint %1822 %1824
       %1826 = OpIAdd %uint %1820 %1825
       %1827 = OpCompositeInsert %v3uint %1826 %538 0
       %1828 = OpShiftRightLogical %v3uint %1827 %1777
       %1829 = OpCompositeExtract %uint %1828 0
       %1830 = OpCompositeConstruct %v3uint %1829 %1829 %1829
       %1831 = OpBitwiseAnd %v3uint %1830 %381
       %1832 = OpConvertUToF %v3float %1831
       %1833 = OpExtInst %v3float %1 Fma %1832 %385 %276
       %1834 = OpDot %float %1833 %1811
       %1835 = OpConvertFToS %int %1755
       %1836 = OpFSub %v3float %1750 %132
       %1837 = OpCompositeConstruct %v3int %1835 %int_0 %int_0
       %1838 = OpBitcast %v3uint %1837
       %1839 = OpIMul %v3uint %1838 %396
       %1840 = OpIAdd %v3uint %1839 %398
       %1841 = OpCompositeExtract %uint %1840 1
       %1842 = OpCompositeExtract %uint %1840 2
       %1843 = OpIMul %uint %1841 %1842
       %1844 = OpCompositeExtract %uint %1840 0
       %1845 = OpIAdd %uint %1844 %1843
       %1846 = OpIMul %uint %1842 %1845
       %1847 = OpIAdd %uint %1841 %1846
       %1848 = OpIMul %uint %1845 %1847
       %1849 = OpIAdd %uint %1842 %1848
       %1850 = OpIMul %uint %1847 %1849
       %1851 = OpIAdd %uint %1845 %1850
       %1852 = OpCompositeInsert %v3uint %1851 %538 0
       %1853 = OpShiftRightLogical %v3uint %1852 %1777
       %1854 = OpCompositeExtract %uint %1853 0
       %1855 = OpCompositeConstruct %v3uint %1854 %1854 %1854
       %1856 = OpBitwiseAnd %v3uint %1855 %381
       %1857 = OpConvertUToF %v3float %1856
       %1858 = OpExtInst %v3float %1 Fma %1857 %385 %276
       %1859 = OpDot %float %1858 %1836
       %1860 = OpConvertFToS %int %1756
       %1861 = OpFSub %v3float %1750 %288
       %1862 = OpCompositeConstruct %v3int %1860 %int_0 %int_0
       %1863 = OpBitcast %v3uint %1862
       %1864 = OpIMul %v3uint %1863 %396
       %1865 = OpIAdd %v3uint %1864 %398
       %1866 = OpCompositeExtract %uint %1865 1
       %1867 = OpCompositeExtract %uint %1865 2
       %1868 = OpIMul %uint %1866 %1867
       %1869 = OpCompositeExtract %uint %1865 0
       %1870 = OpIAdd %uint %1869 %1868
       %1871 = OpIMul %uint %1867 %1870
       %1872 = OpIAdd %uint %1866 %1871
       %1873 = OpIMul %uint %1870 %1872
       %1874 = OpIAdd %uint %1867 %1873
       %1875 = OpIMul %uint %1872 %1874
       %1876 = OpIAdd %uint %1870 %1875
       %1877 = OpCompositeInsert %v3uint %1876 %538 0
       %1878 = OpShiftRightLogical %v3uint %1877 %1777
       %1879 = OpCompositeExtract %uint %1878 0
       %1880 = OpCompositeConstruct %v3uint %1879 %1879 %1879
       %1881 = OpBitwiseAnd %v3uint %1880 %381
       %1882 = OpConvertUToF %v3float %1881
       %1883 = OpExtInst %v3float %1 Fma %1882 %385 %276
       %1884 = OpDot %float %1883 %1861
       %1885 = OpConvertFToS %int %1757
       %1886 = OpFSub %v3float %1750 %137
       %1887 = OpCompositeConstruct %v3int %1885 %int_0 %int_0
       %1888 = OpBitcast %v3uint %1887
       %1889 = OpIMul %v3uint %1888 %396
       %1890 = OpIAdd %v3uint %1889 %398
       %1891 = OpCompositeExtract %uint %1890 1
       %1892 = OpCompositeExtract %uint %1890 2
       %1893 = OpIMul %uint %1891 %1892
       %1894 = OpCompositeExtract %uint %1890 0
       %1895 = OpIAdd %uint %1894 %1893
       %1896 = OpIMul %uint %1892 %1895
       %1897 = OpIAdd %uint %1891 %1896
       %1898 = OpIMul %uint %1895 %1897
       %1899 = OpIAdd %uint %1892 %1898
       %1900 = OpIMul %uint %1897 %1899
       %1901 = OpIAdd %uint %1895 %1900
       %1902 = OpCompositeInsert %v3uint %1901 %538 0
       %1903 = OpShiftRightLogical %v3uint %1902 %1777
       %1904 = OpCompositeExtract %uint %1903 0
       %1905 = OpCompositeConstruct %v3uint %1904 %1904 %1904
       %1906 = OpBitwiseAnd %v3uint %1905 %381
       %1907 = OpConvertUToF %v3float %1906
       %1908 = OpExtInst %v3float %1 Fma %1907 %385 %276
       %1909 = OpDot %float %1908 %1886
       %1910 = OpConvertFToS %int %1758
       %1911 = OpFSub %v3float %1750 %133
       %1912 = OpCompositeConstruct %v3int %1910 %int_0 %int_0
       %1913 = OpBitcast %v3uint %1912
       %1914 = OpIMul %v3uint %1913 %396
       %1915 = OpIAdd %v3uint %1914 %398
       %1916 = OpCompositeExtract %uint %1915 1
       %1917 = OpCompositeExtract %uint %1915 2
       %1918 = OpIMul %uint %1916 %1917
       %1919 = OpCompositeExtract %uint %1915 0
       %1920 = OpIAdd %uint %1919 %1918
       %1921 = OpIMul %uint %1917 %1920
       %1922 = OpIAdd %uint %1916 %1921
       %1923 = OpIMul %uint %1920 %1922
       %1924 = OpIAdd %uint %1917 %1923
       %1925 = OpIMul %uint %1922 %1924
       %1926 = OpIAdd %uint %1920 %1925
       %1927 = OpCompositeInsert %v3uint %1926 %538 0
       %1928 = OpShiftRightLogical %v3uint %1927 %1777
       %1929 = OpCompositeExtract %uint %1928 0
       %1930 = OpCompositeConstruct %v3uint %1929 %1929 %1929
       %1931 = OpBitwiseAnd %v3uint %1930 %381
       %1932 = OpConvertUToF %v3float %1931
       %1933 = OpExtInst %v3float %1 Fma %1932 %385 %276
       %1934 = OpDot %float %1933 %1911
       %1935 = OpConvertFToS %int %1759
       %1936 = OpFSub %v3float %1750 %125
       %1937 = OpCompositeConstruct %v3int %1935 %int_0 %int_0
       %1938 = OpBitcast %v3uint %1937
       %1939 = OpIMul %v3uint %1938 %396
       %1940 = OpIAdd %v3uint %1939 %398
       %1941 = OpCompositeExtract %uint %1940 1
       %1942 = OpCompositeExtract %uint %1940 2
       %1943 = OpIMul %uint %1941 %1942
       %1944 = OpCompositeExtract %uint %1940 0
       %1945 = OpIAdd %uint %1944 %1943
       %1946 = OpIMul %uint %1942 %1945
       %1947 = OpIAdd %uint %1941 %1946
       %1948 = OpIMul %uint %1945 %1947
       %1949 = OpIAdd %uint %1942 %1948
       %1950 = OpIMul %uint %1947 %1949
       %1951 = OpIAdd %uint %1945 %1950
       %1952 = OpCompositeInsert %v3uint %1951 %538 0
       %1953 = OpShiftRightLogical %v3uint %1952 %1777
       %1954 = OpCompositeExtract %uint %1953 0
       %1955 = OpCompositeConstruct %v3uint %1954 %1954 %1954
       %1956 = OpBitwiseAnd %v3uint %1955 %381
       %1957 = OpConvertUToF %v3float %1956
       %1958 = OpExtInst %v3float %1 Fma %1957 %385 %276
       %1959 = OpDot %float %1958 %1936
       %1960 = OpCompositeExtract %float %1750 0
       %1961 = OpCompositeExtract %float %1750 1
       %1962 = OpCompositeExtract %float %1750 2
       %1963 = OpCompositeConstruct %v4float %1960 %1961 %1962 %float_0
       %1964 = OpFMul %v4float %1963 %1963
       %1965 = OpFMul %v4float %1964 %1963
       %1966 = OpVectorTimesScalar %v4float %1963 %float_6
       %1967 = OpFSub %v4float %1966 %376
       %1968 = OpExtInst %v4float %1 Fma %1963 %1967 %377
       %1969 = OpFMul %v4float %1965 %1968
       %1970 = OpCompositeExtract %float %1969 0
       %1971 = OpExtInst %float %1 FMix %1784 %1809 %1970
       %1972 = OpExtInst %float %1 FMix %1834 %1859 %1970
       %1973 = OpCompositeExtract %float %1969 1
       %1974 = OpExtInst %float %1 FMix %1971 %1972 %1973
       %1975 = OpExtInst %float %1 FMix %1884 %1909 %1970
       %1976 = OpExtInst %float %1 FMix %1934 %1959 %1970
       %1977 = OpExtInst %float %1 FMix %1975 %1976 %1973
       %1978 = OpCompositeExtract %float %1969 2
       %1979 = OpExtInst %float %1 FMix %1974 %1977 %1978
       %1745 = OpExtInst %float %1 Fma %1979 %1742 %1744
       %1740 = OpVectorTimesScalar %v3float %1739 %float_2
       %1743 = OpFMul %float %1742 %float_0_5
       %1747 = OpIAdd %uint %1746 %uint_1
               OpBranch %1738
       %1749 = OpLabel
       %1980 = OpExtInst %float %1 Fma %1744 %float_0_5 %float_0_5
       %1981 = OpExtInst %float %1 FMix %float_0 %float_1 %1980
       %1982 = OpExtInst %float %1 FClamp %1981 %float_0 %float_1
       %1983 = OpExtInst %float %1 FMix %1149 %1702 %1982
       %1984 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_15 %int_3
       %1985 = OpLoad %float %1984
       %1986 = OpFMul %float %1985 %1983
       %1987 = OpExtInst %float %1 Fma %1696 %1698 %1986
       %1988 = OpExtInst %float %1 Floor %1699
       %1989 = OpFNegate %float %1988
       %1990 = OpExtInst %float %1 Fma %1695 %1698 %1989
       %1991 = OpExtInst %float %1 Fma %1990 %float_2097152 %1987
       %1992 = OpExtInst %float %1 Floor %1991
       %1993 = OpFMul %float %1988 %float_n6_28318548
       %1994 = OpExtInst %float %1 Fma %1699 %float_6_28318548 %1993
       %1995 = OpFMul %float %1992 %float_n6_28318548
       %1996 = OpExtInst %float %1 Fma %1987 %float_6_28318548 %1995
       %1997 = OpExtInst %float %1 Fma %1994 %float_2097152 %1996
       %1998 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_0
       %1999 = OpLoad %float %1998
       %2000 = OpCompositeConstruct %v3float %1999 %1999 %1999
       %2001 = OpFMul %v3float %579 %2000
       %2002 = OpFMul %v3float %2000 %630
       %2003 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_1
       %2004 = OpLoad %float %2003
       %2005 = OpCompositeConstruct %v3float %2004 %2004 %2004
       %2006 = OpFMul %v3float %2001 %2005
       %2007 = OpFMul %v3float %2002 %2005
       %2008 = OpFMul %v3float %2007 %497
       %2009 = OpCompositeExtract %float %2008 0
       %2010 = OpCompositeExtract %float %2008 1
       %2011 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_3
       %2012 = OpLoad %float %2011
       %2013 = OpFMul %float %1149 %2012
       %2014 = OpCompositeExtract %float %2008 2
       %2015 = OpCompositeConstruct %v2float %2013 %2013
       %2016 = OpCompositeConstruct %v2float %2014 %2014
       %2017 = OpFAdd %v2float %2015 %2016
       %2018 = OpCompositeExtract %float %2017 0
       %2019 = OpCompositeConstruct %v3float %2009 %2010 %2018
       %2020 = OpVectorTimesScalar %v3float %2019 %float_4_76837158en07
       %2021 = OpFAdd %v3float %2020 %135
       %2022 = OpExtInst %v3float %1 Fma %2006 %497 %2021
       %2023 = OpExtInst %v3float %1 Floor %2022
       %2024 = OpFNegate %v3float %2023
       %2025 = OpExtInst %v3float %1 Fma %2006 %497 %2024
       %2026 = OpVectorTimesScalar %v3float %2025 %float_2097152
       %2027 = OpFAdd %v3float %2026 %2019
       %2028 = OpVectorTimesScalar %v3float %2027 %float_1
               OpBranch %2029
       %2029 = OpLabel
       %2030 = OpPhi %v3float %2028 %1749 %2031 %2032
       %2033 = OpPhi %float %float_1 %1749 %2034 %2032
       %2035 = OpPhi %float %float_0 %1749 %2036 %2032
       %2037 = OpPhi %uint %uint_0 %1749 %2038 %2032
       %2039 = OpULessThan %bool %2037 %uint_10
               OpLoopMerge %2040 %2032 DontUnroll
               OpBranchConditional %2039 %2032 %2040
       %2032 = OpLabel
       %2041 = OpExtInst %v3float %1 Fract %2030
       %2042 = OpExtInst %v3float %1 Floor %2030
       %2043 = OpDot %float %2042 %380
       %2044 = OpFAdd %float %2043 %float_19
       %2045 = OpFAdd %float %2043 %float_47
       %2046 = OpFAdd %float %2043 %float_66
       %2047 = OpFAdd %float %2043 %float_101
       %2048 = OpFAdd %float %2043 %float_120
       %2049 = OpFAdd %float %2043 %float_148
       %2050 = OpFAdd %float %2043 %float_167
       %2051 = OpConvertFToS %int %2043
       %2052 = OpCompositeConstruct %v3int %2051 %int_0 %int_0
       %2053 = OpBitcast %v3uint %2052
       %2054 = OpIMul %v3uint %2053 %396
       %2055 = OpIAdd %v3uint %2054 %398
       %2056 = OpCompositeExtract %uint %2055 1
       %2057 = OpCompositeExtract %uint %2055 2
       %2058 = OpIMul %uint %2056 %2057
       %2059 = OpCompositeExtract %uint %2055 0
       %2060 = OpIAdd %uint %2059 %2058
       %2061 = OpIMul %uint %2057 %2060
       %2062 = OpIAdd %uint %2056 %2061
       %2063 = OpIMul %uint %2060 %2062
       %2064 = OpIAdd %uint %2057 %2063
       %2065 = OpIMul %uint %2062 %2064
       %2066 = OpIAdd %uint %2060 %2065
       %2067 = OpCompositeInsert %v3uint %2066 %538 0
       %2068 = OpBitwiseAnd %v3uint %399 %400
       %2069 = OpShiftRightLogical %v3uint %2067 %2068
       %2070 = OpCompositeExtract %uint %2069 0
       %2071 = OpCompositeConstruct %v3uint %2070 %2070 %2070
       %2072 = OpBitwiseAnd %v3uint %2071 %381
       %2073 = OpConvertUToF %v3float %2072
       %2074 = OpExtInst %v3float %1 Fma %2073 %385 %276
       %2075 = OpDot %float %2074 %2041
       %2076 = OpConvertFToS %int %2044
       %2077 = OpFSub %v3float %2041 %344
       %2078 = OpCompositeConstruct %v3int %2076 %int_0 %int_0
       %2079 = OpBitcast %v3uint %2078
       %2080 = OpIMul %v3uint %2079 %396
       %2081 = OpIAdd %v3uint %2080 %398
       %2082 = OpCompositeExtract %uint %2081 1
       %2083 = OpCompositeExtract %uint %2081 2
       %2084 = OpIMul %uint %2082 %2083
       %2085 = OpCompositeExtract %uint %2081 0
       %2086 = OpIAdd %uint %2085 %2084
       %2087 = OpIMul %uint %2083 %2086
       %2088 = OpIAdd %uint %2082 %2087
       %2089 = OpIMul %uint %2086 %2088
       %2090 = OpIAdd %uint %2083 %2089
       %2091 = OpIMul %uint %2088 %2090
       %2092 = OpIAdd %uint %2086 %2091
       %2093 = OpCompositeInsert %v3uint %2092 %538 0
       %2094 = OpShiftRightLogical %v3uint %2093 %2068
       %2095 = OpCompositeExtract %uint %2094 0
       %2096 = OpCompositeConstruct %v3uint %2095 %2095 %2095
       %2097 = OpBitwiseAnd %v3uint %2096 %381
       %2098 = OpConvertUToF %v3float %2097
       %2099 = OpExtInst %v3float %1 Fma %2098 %385 %276
       %2100 = OpDot %float %2099 %2077
       %2101 = OpConvertFToS %int %2045
       %2102 = OpFSub %v3float %2041 %345
       %2103 = OpCompositeConstruct %v3int %2101 %int_0 %int_0
       %2104 = OpBitcast %v3uint %2103
       %2105 = OpIMul %v3uint %2104 %396
       %2106 = OpIAdd %v3uint %2105 %398
       %2107 = OpCompositeExtract %uint %2106 1
       %2108 = OpCompositeExtract %uint %2106 2
       %2109 = OpIMul %uint %2107 %2108
       %2110 = OpCompositeExtract %uint %2106 0
       %2111 = OpIAdd %uint %2110 %2109
       %2112 = OpIMul %uint %2108 %2111
       %2113 = OpIAdd %uint %2107 %2112
       %2114 = OpIMul %uint %2111 %2113
       %2115 = OpIAdd %uint %2108 %2114
       %2116 = OpIMul %uint %2113 %2115
       %2117 = OpIAdd %uint %2111 %2116
       %2118 = OpCompositeInsert %v3uint %2117 %538 0
       %2119 = OpShiftRightLogical %v3uint %2118 %2068
       %2120 = OpCompositeExtract %uint %2119 0
       %2121 = OpCompositeConstruct %v3uint %2120 %2120 %2120
       %2122 = OpBitwiseAnd %v3uint %2121 %381
       %2123 = OpConvertUToF %v3float %2122
       %2124 = OpExtInst %v3float %1 Fma %2123 %385 %276
       %2125 = OpDot %float %2124 %2102
       %2126 = OpConvertFToS %int %2046
       %2127 = OpFSub %v3float %2041 %132
       %2128 = OpCompositeConstruct %v3int %2126 %int_0 %int_0
       %2129 = OpBitcast %v3uint %2128
       %2130 = OpIMul %v3uint %2129 %396
       %2131 = OpIAdd %v3uint %2130 %398
       %2132 = OpCompositeExtract %uint %2131 1
       %2133 = OpCompositeExtract %uint %2131 2
       %2134 = OpIMul %uint %2132 %2133
       %2135 = OpCompositeExtract %uint %2131 0
       %2136 = OpIAdd %uint %2135 %2134
       %2137 = OpIMul %uint %2133 %2136
       %2138 = OpIAdd %uint %2132 %2137
       %2139 = OpIMul %uint %2136 %2138
       %2140 = OpIAdd %uint %2133 %2139
       %2141 = OpIMul %uint %2138 %2140
       %2142 = OpIAdd %uint %2136 %2141
       %2143 = OpCompositeInsert %v3uint %2142 %538 0
       %2144 = OpShiftRightLogical %v3uint %2143 %2068
       %2145 = OpCompositeExtract %uint %2144 0
       %2146 = OpCompositeConstruct %v3uint %2145 %2145 %2145
       %2147 = OpBitwiseAnd %v3uint %2146 %381
       %2148 = OpConvertUToF %v3float %2147
       %2149 = OpExtInst %v3float %1 Fma %2148 %385 %276
       %2150 = OpDot %float %2149 %2127
       %2151 = OpConvertFToS %int %2047
       %2152 = OpFSub %v3float %2041 %288
       %2153 = OpCompositeConstruct %v3int %2151 %int_0 %int_0
       %2154 = OpBitcast %v3uint %2153
       %2155 = OpIMul %v3uint %2154 %396
       %2156 = OpIAdd %v3uint %2155 %398
       %2157 = OpCompositeExtract %uint %2156 1
       %2158 = OpCompositeExtract %uint %2156 2
       %2159 = OpIMul %uint %2157 %2158
       %2160 = OpCompositeExtract %uint %2156 0
       %2161 = OpIAdd %uint %2160 %2159
       %2162 = OpIMul %uint %2158 %2161
       %2163 = OpIAdd %uint %2157 %2162
       %2164 = OpIMul %uint %2161 %2163
       %2165 = OpIAdd %uint %2158 %2164
       %2166 = OpIMul %uint %2163 %2165
       %2167 = OpIAdd %uint %2161 %2166
       %2168 = OpCompositeInsert %v3uint %2167 %538 0
       %2169 = OpShiftRightLogical %v3uint %2168 %2068
       %2170 = OpCompositeExtract %uint %2169 0
       %2171 = OpCompositeConstruct %v3uint %2170 %2170 %2170
       %2172 = OpBitwiseAnd %v3uint %2171 %381
       %2173 = OpConvertUToF %v3float %2172
       %2174 = OpExtInst %v3float %1 Fma %2173 %385 %276
       %2175 = OpDot %float %2174 %2152
       %2176 = OpConvertFToS %int %2048
       %2177 = OpFSub %v3float %2041 %137
       %2178 = OpCompositeConstruct %v3int %2176 %int_0 %int_0
       %2179 = OpBitcast %v3uint %2178
       %2180 = OpIMul %v3uint %2179 %396
       %2181 = OpIAdd %v3uint %2180 %398
       %2182 = OpCompositeExtract %uint %2181 1
       %2183 = OpCompositeExtract %uint %2181 2
       %2184 = OpIMul %uint %2182 %2183
       %2185 = OpCompositeExtract %uint %2181 0
       %2186 = OpIAdd %uint %2185 %2184
       %2187 = OpIMul %uint %2183 %2186
       %2188 = OpIAdd %uint %2182 %2187
       %2189 = OpIMul %uint %2186 %2188
       %2190 = OpIAdd %uint %2183 %2189
       %2191 = OpIMul %uint %2188 %2190
       %2192 = OpIAdd %uint %2186 %2191
       %2193 = OpCompositeInsert %v3uint %2192 %538 0
       %2194 = OpShiftRightLogical %v3uint %2193 %2068
       %2195 = OpCompositeExtract %uint %2194 0
       %2196 = OpCompositeConstruct %v3uint %2195 %2195 %2195
       %2197 = OpBitwiseAnd %v3uint %2196 %381
       %2198 = OpConvertUToF %v3float %2197
       %2199 = OpExtInst %v3float %1 Fma %2198 %385 %276
       %2200 = OpDot %float %2199 %2177
       %2201 = OpConvertFToS %int %2049
       %2202 = OpFSub %v3float %2041 %133
       %2203 = OpCompositeConstruct %v3int %2201 %int_0 %int_0
       %2204 = OpBitcast %v3uint %2203
       %2205 = OpIMul %v3uint %2204 %396
       %2206 = OpIAdd %v3uint %2205 %398
       %2207 = OpCompositeExtract %uint %2206 1
       %2208 = OpCompositeExtract %uint %2206 2
       %2209 = OpIMul %uint %2207 %2208
       %2210 = OpCompositeExtract %uint %2206 0
       %2211 = OpIAdd %uint %2210 %2209
       %2212 = OpIMul %uint %2208 %2211
       %2213 = OpIAdd %uint %2207 %2212
       %2214 = OpIMul %uint %2211 %2213
       %2215 = OpIAdd %uint %2208 %2214
       %2216 = OpIMul %uint %2213 %2215
       %2217 = OpIAdd %uint %2211 %2216
       %2218 = OpCompositeInsert %v3uint %2217 %538 0
       %2219 = OpShiftRightLogical %v3uint %2218 %2068
       %2220 = OpCompositeExtract %uint %2219 0
       %2221 = OpCompositeConstruct %v3uint %2220 %2220 %2220
       %2222 = OpBitwiseAnd %v3uint %2221 %381
       %2223 = OpConvertUToF %v3float %2222
       %2224 = OpExtInst %v3float %1 Fma %2223 %385 %276
       %2225 = OpDot %float %2224 %2202
       %2226 = OpConvertFToS %int %2050
       %2227 = OpFSub %v3float %2041 %125
       %2228 = OpCompositeConstruct %v3int %2226 %int_0 %int_0
       %2229 = OpBitcast %v3uint %2228
       %2230 = OpIMul %v3uint %2229 %396
       %2231 = OpIAdd %v3uint %2230 %398
       %2232 = OpCompositeExtract %uint %2231 1
       %2233 = OpCompositeExtract %uint %2231 2
       %2234 = OpIMul %uint %2232 %2233
       %2235 = OpCompositeExtract %uint %2231 0
       %2236 = OpIAdd %uint %2235 %2234
       %2237 = OpIMul %uint %2233 %2236
       %2238 = OpIAdd %uint %2232 %2237
       %2239 = OpIMul %uint %2236 %2238
       %2240 = OpIAdd %uint %2233 %2239
       %2241 = OpIMul %uint %2238 %2240
       %2242 = OpIAdd %uint %2236 %2241
       %2243 = OpCompositeInsert %v3uint %2242 %538 0
       %2244 = OpShiftRightLogical %v3uint %2243 %2068
       %2245 = OpCompositeExtract %uint %2244 0
       %2246 = OpCompositeConstruct %v3uint %2245 %2245 %2245
       %2247 = OpBitwiseAnd %v3uint %2246 %381
       %2248 = OpConvertUToF %v3float %2247
       %2249 = OpExtInst %v3float %1 Fma %2248 %385 %276
       %2250 = OpDot %float %2249 %2227
       %2251 = OpCompositeExtract %float %2041 0
       %2252 = OpCompositeExtract %float %2041 1
       %2253 = OpCompositeExtract %float %2041 2
       %2254 = OpCompositeConstruct %v4float %2251 %2252 %2253 %float_0
       %2255 = OpFMul %v4float %2254 %2254
       %2256 = OpFMul %v4float %2255 %2254
       %2257 = OpVectorTimesScalar %v4float %2254 %float_6
       %2258 = OpFSub %v4float %2257 %376
       %2259 = OpExtInst %v4float %1 Fma %2254 %2258 %377
       %2260 = OpFMul %v4float %2256 %2259
       %2261 = OpCompositeExtract %float %2260 0
       %2262 = OpExtInst %float %1 FMix %2075 %2100 %2261
       %2263 = OpExtInst %float %1 FMix %2125 %2150 %2261
       %2264 = OpCompositeExtract %float %2260 1
       %2265 = OpExtInst %float %1 FMix %2262 %2263 %2264
       %2266 = OpExtInst %float %1 FMix %2175 %2200 %2261
       %2267 = OpExtInst %float %1 FMix %2225 %2250 %2261
       %2268 = OpExtInst %float %1 FMix %2266 %2267 %2264
       %2269 = OpCompositeExtract %float %2260 2
       %2270 = OpExtInst %float %1 FMix %2265 %2268 %2269
       %2271 = OpExtInst %float %1 FAbs %2270
       %2036 = OpExtInst %float %1 Fma %2271 %2033 %2035
       %2031 = OpVectorTimesScalar %v3float %2030 %float_2
       %2034 = OpFMul %float %2033 %float_0_5
       %2038 = OpIAdd %uint %2037 %uint_1
               OpBranch %2029
       %2040 = OpLabel
       %2272 = OpExtInst %float %1 FMix %float_0 %float_1 %2035
       %2273 = OpFMul %v3float %2007 %499
       %2274 = OpCompositeExtract %float %2273 0
       %2275 = OpCompositeExtract %float %2273 1
       %2276 = OpCompositeExtract %float %2273 2
       %2277 = OpCompositeConstruct %v2float %2276 %2276
       %2278 = OpFAdd %v2float %2015 %2277
       %2279 = OpCompositeExtract %float %2278 0
       %2280 = OpCompositeConstruct %v3float %2274 %2275 %2279
       %2281 = OpVectorTimesScalar %v3float %2280 %float_4_76837158en07
       %2282 = OpFAdd %v3float %2281 %135
       %2283 = OpExtInst %v3float %1 Fma %2006 %499 %2282
       %2284 = OpExtInst %v3float %1 Floor %2283
       %2285 = OpFNegate %v3float %2284
       %2286 = OpExtInst %v3float %1 Fma %2006 %499 %2285
       %2287 = OpVectorTimesScalar %v3float %2286 %float_2097152
       %2288 = OpFAdd %v3float %2287 %2280
       %2289 = OpVectorTimesScalar %v3float %2288 %float_1
               OpBranch %2290
       %2290 = OpLabel
       %2291 = OpPhi %v3float %2289 %2040 %2292 %2293
       %2294 = OpPhi %float %float_1 %2040 %2295 %2293
       %2296 = OpPhi %float %float_0 %2040 %2297 %2293
       %2298 = OpPhi %uint %uint_0 %2040 %2299 %2293
       %2300 = OpULessThan %bool %2298 %uint_10
               OpLoopMerge %2301 %2293 DontUnroll
               OpBranchConditional %2300 %2293 %2301
       %2293 = OpLabel
       %2302 = OpExtInst %v3float %1 Fract %2291
       %2303 = OpExtInst %v3float %1 Floor %2291
       %2304 = OpDot %float %2303 %380
       %2305 = OpFAdd %float %2304 %float_19
       %2306 = OpFAdd %float %2304 %float_47
       %2307 = OpFAdd %float %2304 %float_66
       %2308 = OpFAdd %float %2304 %float_101
       %2309 = OpFAdd %float %2304 %float_120
       %2310 = OpFAdd %float %2304 %float_148
       %2311 = OpFAdd %float %2304 %float_167
       %2312 = OpConvertFToS %int %2304
       %2313 = OpCompositeConstruct %v3int %2312 %int_0 %int_0
       %2314 = OpBitcast %v3uint %2313
       %2315 = OpIMul %v3uint %2314 %396
       %2316 = OpIAdd %v3uint %2315 %398
       %2317 = OpCompositeExtract %uint %2316 1
       %2318 = OpCompositeExtract %uint %2316 2
       %2319 = OpIMul %uint %2317 %2318
       %2320 = OpCompositeExtract %uint %2316 0
       %2321 = OpIAdd %uint %2320 %2319
       %2322 = OpIMul %uint %2318 %2321
       %2323 = OpIAdd %uint %2317 %2322
       %2324 = OpIMul %uint %2321 %2323
       %2325 = OpIAdd %uint %2318 %2324
       %2326 = OpIMul %uint %2323 %2325
       %2327 = OpIAdd %uint %2321 %2326
       %2328 = OpCompositeInsert %v3uint %2327 %538 0
       %2329 = OpBitwiseAnd %v3uint %399 %400
       %2330 = OpShiftRightLogical %v3uint %2328 %2329
       %2331 = OpCompositeExtract %uint %2330 0
       %2332 = OpCompositeConstruct %v3uint %2331 %2331 %2331
       %2333 = OpBitwiseAnd %v3uint %2332 %381
       %2334 = OpConvertUToF %v3float %2333
       %2335 = OpExtInst %v3float %1 Fma %2334 %385 %276
       %2336 = OpDot %float %2335 %2302
       %2337 = OpConvertFToS %int %2305
       %2338 = OpFSub %v3float %2302 %344
       %2339 = OpCompositeConstruct %v3int %2337 %int_0 %int_0
       %2340 = OpBitcast %v3uint %2339
       %2341 = OpIMul %v3uint %2340 %396
       %2342 = OpIAdd %v3uint %2341 %398
       %2343 = OpCompositeExtract %uint %2342 1
       %2344 = OpCompositeExtract %uint %2342 2
       %2345 = OpIMul %uint %2343 %2344
       %2346 = OpCompositeExtract %uint %2342 0
       %2347 = OpIAdd %uint %2346 %2345
       %2348 = OpIMul %uint %2344 %2347
       %2349 = OpIAdd %uint %2343 %2348
       %2350 = OpIMul %uint %2347 %2349
       %2351 = OpIAdd %uint %2344 %2350
       %2352 = OpIMul %uint %2349 %2351
       %2353 = OpIAdd %uint %2347 %2352
       %2354 = OpCompositeInsert %v3uint %2353 %538 0
       %2355 = OpShiftRightLogical %v3uint %2354 %2329
       %2356 = OpCompositeExtract %uint %2355 0
       %2357 = OpCompositeConstruct %v3uint %2356 %2356 %2356
       %2358 = OpBitwiseAnd %v3uint %2357 %381
       %2359 = OpConvertUToF %v3float %2358
       %2360 = OpExtInst %v3float %1 Fma %2359 %385 %276
       %2361 = OpDot %float %2360 %2338
       %2362 = OpConvertFToS %int %2306
       %2363 = OpFSub %v3float %2302 %345
       %2364 = OpCompositeConstruct %v3int %2362 %int_0 %int_0
       %2365 = OpBitcast %v3uint %2364
       %2366 = OpIMul %v3uint %2365 %396
       %2367 = OpIAdd %v3uint %2366 %398
       %2368 = OpCompositeExtract %uint %2367 1
       %2369 = OpCompositeExtract %uint %2367 2
       %2370 = OpIMul %uint %2368 %2369
       %2371 = OpCompositeExtract %uint %2367 0
       %2372 = OpIAdd %uint %2371 %2370
       %2373 = OpIMul %uint %2369 %2372
       %2374 = OpIAdd %uint %2368 %2373
       %2375 = OpIMul %uint %2372 %2374
       %2376 = OpIAdd %uint %2369 %2375
       %2377 = OpIMul %uint %2374 %2376
       %2378 = OpIAdd %uint %2372 %2377
       %2379 = OpCompositeInsert %v3uint %2378 %538 0
       %2380 = OpShiftRightLogical %v3uint %2379 %2329
       %2381 = OpCompositeExtract %uint %2380 0
       %2382 = OpCompositeConstruct %v3uint %2381 %2381 %2381
       %2383 = OpBitwiseAnd %v3uint %2382 %381
       %2384 = OpConvertUToF %v3float %2383
       %2385 = OpExtInst %v3float %1 Fma %2384 %385 %276
       %2386 = OpDot %float %2385 %2363
       %2387 = OpConvertFToS %int %2307
       %2388 = OpFSub %v3float %2302 %132
       %2389 = OpCompositeConstruct %v3int %2387 %int_0 %int_0
       %2390 = OpBitcast %v3uint %2389
       %2391 = OpIMul %v3uint %2390 %396
       %2392 = OpIAdd %v3uint %2391 %398
       %2393 = OpCompositeExtract %uint %2392 1
       %2394 = OpCompositeExtract %uint %2392 2
       %2395 = OpIMul %uint %2393 %2394
       %2396 = OpCompositeExtract %uint %2392 0
       %2397 = OpIAdd %uint %2396 %2395
       %2398 = OpIMul %uint %2394 %2397
       %2399 = OpIAdd %uint %2393 %2398
       %2400 = OpIMul %uint %2397 %2399
       %2401 = OpIAdd %uint %2394 %2400
       %2402 = OpIMul %uint %2399 %2401
       %2403 = OpIAdd %uint %2397 %2402
       %2404 = OpCompositeInsert %v3uint %2403 %538 0
       %2405 = OpShiftRightLogical %v3uint %2404 %2329
       %2406 = OpCompositeExtract %uint %2405 0
       %2407 = OpCompositeConstruct %v3uint %2406 %2406 %2406
       %2408 = OpBitwiseAnd %v3uint %2407 %381
       %2409 = OpConvertUToF %v3float %2408
       %2410 = OpExtInst %v3float %1 Fma %2409 %385 %276
       %2411 = OpDot %float %2410 %2388
       %2412 = OpConvertFToS %int %2308
       %2413 = OpFSub %v3float %2302 %288
       %2414 = OpCompositeConstruct %v3int %2412 %int_0 %int_0
       %2415 = OpBitcast %v3uint %2414
       %2416 = OpIMul %v3uint %2415 %396
       %2417 = OpIAdd %v3uint %2416 %398
       %2418 = OpCompositeExtract %uint %2417 1
       %2419 = OpCompositeExtract %uint %2417 2
       %2420 = OpIMul %uint %2418 %2419
       %2421 = OpCompositeExtract %uint %2417 0
       %2422 = OpIAdd %uint %2421 %2420
       %2423 = OpIMul %uint %2419 %2422
       %2424 = OpIAdd %uint %2418 %2423
       %2425 = OpIMul %uint %2422 %2424
       %2426 = OpIAdd %uint %2419 %2425
       %2427 = OpIMul %uint %2424 %2426
       %2428 = OpIAdd %uint %2422 %2427
       %2429 = OpCompositeInsert %v3uint %2428 %538 0
       %2430 = OpShiftRightLogical %v3uint %2429 %2329
       %2431 = OpCompositeExtract %uint %2430 0
       %2432 = OpCompositeConstruct %v3uint %2431 %2431 %2431
       %2433 = OpBitwiseAnd %v3uint %2432 %381
       %2434 = OpConvertUToF %v3float %2433
       %2435 = OpExtInst %v3float %1 Fma %2434 %385 %276
       %2436 = OpDot %float %2435 %2413
       %2437 = OpConvertFToS %int %2309
       %2438 = OpFSub %v3float %2302 %137
       %2439 = OpCompositeConstruct %v3int %2437 %int_0 %int_0
       %2440 = OpBitcast %v3uint %2439
       %2441 = OpIMul %v3uint %2440 %396
       %2442 = OpIAdd %v3uint %2441 %398
       %2443 = OpCompositeExtract %uint %2442 1
       %2444 = OpCompositeExtract %uint %2442 2
       %2445 = OpIMul %uint %2443 %2444
       %2446 = OpCompositeExtract %uint %2442 0
       %2447 = OpIAdd %uint %2446 %2445
       %2448 = OpIMul %uint %2444 %2447
       %2449 = OpIAdd %uint %2443 %2448
       %2450 = OpIMul %uint %2447 %2449
       %2451 = OpIAdd %uint %2444 %2450
       %2452 = OpIMul %uint %2449 %2451
       %2453 = OpIAdd %uint %2447 %2452
       %2454 = OpCompositeInsert %v3uint %2453 %538 0
       %2455 = OpShiftRightLogical %v3uint %2454 %2329
       %2456 = OpCompositeExtract %uint %2455 0
       %2457 = OpCompositeConstruct %v3uint %2456 %2456 %2456
       %2458 = OpBitwiseAnd %v3uint %2457 %381
       %2459 = OpConvertUToF %v3float %2458
       %2460 = OpExtInst %v3float %1 Fma %2459 %385 %276
       %2461 = OpDot %float %2460 %2438
       %2462 = OpConvertFToS %int %2310
       %2463 = OpFSub %v3float %2302 %133
       %2464 = OpCompositeConstruct %v3int %2462 %int_0 %int_0
       %2465 = OpBitcast %v3uint %2464
       %2466 = OpIMul %v3uint %2465 %396
       %2467 = OpIAdd %v3uint %2466 %398
       %2468 = OpCompositeExtract %uint %2467 1
       %2469 = OpCompositeExtract %uint %2467 2
       %2470 = OpIMul %uint %2468 %2469
       %2471 = OpCompositeExtract %uint %2467 0
       %2472 = OpIAdd %uint %2471 %2470
       %2473 = OpIMul %uint %2469 %2472
       %2474 = OpIAdd %uint %2468 %2473
       %2475 = OpIMul %uint %2472 %2474
       %2476 = OpIAdd %uint %2469 %2475
       %2477 = OpIMul %uint %2474 %2476
       %2478 = OpIAdd %uint %2472 %2477
       %2479 = OpCompositeInsert %v3uint %2478 %538 0
       %2480 = OpShiftRightLogical %v3uint %2479 %2329
       %2481 = OpCompositeExtract %uint %2480 0
       %2482 = OpCompositeConstruct %v3uint %2481 %2481 %2481
       %2483 = OpBitwiseAnd %v3uint %2482 %381
       %2484 = OpConvertUToF %v3float %2483
       %2485 = OpExtInst %v3float %1 Fma %2484 %385 %276
       %2486 = OpDot %float %2485 %2463
       %2487 = OpConvertFToS %int %2311
       %2488 = OpFSub %v3float %2302 %125
       %2489 = OpCompositeConstruct %v3int %2487 %int_0 %int_0
       %2490 = OpBitcast %v3uint %2489
       %2491 = OpIMul %v3uint %2490 %396
       %2492 = OpIAdd %v3uint %2491 %398
       %2493 = OpCompositeExtract %uint %2492 1
       %2494 = OpCompositeExtract %uint %2492 2
       %2495 = OpIMul %uint %2493 %2494
       %2496 = OpCompositeExtract %uint %2492 0
       %2497 = OpIAdd %uint %2496 %2495
       %2498 = OpIMul %uint %2494 %2497
       %2499 = OpIAdd %uint %2493 %2498
       %2500 = OpIMul %uint %2497 %2499
       %2501 = OpIAdd %uint %2494 %2500
       %2502 = OpIMul %uint %2499 %2501
       %2503 = OpIAdd %uint %2497 %2502
       %2504 = OpCompositeInsert %v3uint %2503 %538 0
       %2505 = OpShiftRightLogical %v3uint %2504 %2329
       %2506 = OpCompositeExtract %uint %2505 0
       %2507 = OpCompositeConstruct %v3uint %2506 %2506 %2506
       %2508 = OpBitwiseAnd %v3uint %2507 %381
       %2509 = OpConvertUToF %v3float %2508
       %2510 = OpExtInst %v3float %1 Fma %2509 %385 %276
       %2511 = OpDot %float %2510 %2488
       %2512 = OpCompositeExtract %float %2302 0
       %2513 = OpCompositeExtract %float %2302 1
       %2514 = OpCompositeExtract %float %2302 2
       %2515 = OpCompositeConstruct %v4float %2512 %2513 %2514 %float_0
       %2516 = OpFMul %v4float %2515 %2515
       %2517 = OpFMul %v4float %2516 %2515
       %2518 = OpVectorTimesScalar %v4float %2515 %float_6
       %2519 = OpFSub %v4float %2518 %376
       %2520 = OpExtInst %v4float %1 Fma %2515 %2519 %377
       %2521 = OpFMul %v4float %2517 %2520
       %2522 = OpCompositeExtract %float %2521 0
       %2523 = OpExtInst %float %1 FMix %2336 %2361 %2522
       %2524 = OpExtInst %float %1 FMix %2386 %2411 %2522
       %2525 = OpCompositeExtract %float %2521 1
       %2526 = OpExtInst %float %1 FMix %2523 %2524 %2525
       %2527 = OpExtInst %float %1 FMix %2436 %2461 %2522
       %2528 = OpExtInst %float %1 FMix %2486 %2511 %2522
       %2529 = OpExtInst %float %1 FMix %2527 %2528 %2525
       %2530 = OpCompositeExtract %float %2521 2
       %2531 = OpExtInst %float %1 FMix %2526 %2529 %2530
       %2532 = OpExtInst %float %1 FAbs %2531
       %2297 = OpExtInst %float %1 Fma %2532 %2294 %2296
       %2292 = OpVectorTimesScalar %v3float %2291 %float_2
       %2295 = OpFMul %float %2294 %float_0_5
       %2299 = OpIAdd %uint %2298 %uint_1
               OpBranch %2290
       %2301 = OpLabel
       %2533 = OpExtInst %float %1 FMix %float_0 %float_1 %2296
       %2534 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_1
       %2535 = OpLoad %float %2534
       %2536 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_0
       %2537 = OpLoad %float %2536
       %2538 = OpExtInst %float %1 Fma %2533 %2535 %2537
       %2539 = OpFMul %float %2272 %2538
       %2540 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_16 %int_3
       %2541 = OpLoad %float %2540
       %2542 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_2
       %2543 = OpLoad %float %2542
       %2544 = OpExtInst %float %1 FMix %2541 %2543 %2539
       %2545 = OpExtInst %float %1 Sin %1997
       %2546 = OpFMul %float %2545 %2544
       %2547 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_20
       %2548 = OpLoad %v4float %2547
       %2549 = OpVectorShuffle %v3float %2548 %2548 0 1 2
       %2550 = OpFAdd %v3float %1673 %2549
       %2551 = OpExtInst %v3float %1 NMax %2550 %276
       %2552 = OpExtInst %v3float %1 NMin %2551 %125
       %2553 = OpCompositeExtract %float %2552 0
       %2554 = OpCompositeExtract %float %2552 1
       %2555 = OpCompositeConstruct %v2float %2553 %2554
       %2556 = OpFMul %v2float %1684 %2555
       %2557 = OpFMul %v2float %2555 %1685
       %2558 = OpCompositeExtract %float %2556 0
       %2559 = OpCompositeExtract %float %2557 0
       %2560 = OpCompositeExtract %float %2556 1
       %2561 = OpCompositeExtract %float %2557 1
       %2562 = OpFAdd %float %2558 %2560
       %2563 = OpFAdd %float %2559 %2561
       %2564 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_21 %int_1
       %2565 = OpLoad %float %2564
       %2566 = OpFMul %float %2562 %2565
       %2567 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_22 %int_0
       %2568 = OpLoad %float %2567
       %2569 = OpFMul %float %2568 %1983
       %2570 = OpExtInst %float %1 Fma %2563 %2565 %2569
       %2571 = OpExtInst %float %1 Floor %2566
       %2572 = OpFNegate %float %2571
       %2573 = OpExtInst %float %1 Fma %2562 %2565 %2572
       %2574 = OpExtInst %float %1 Fma %2573 %float_2097152 %2570
       %2575 = OpExtInst %float %1 Floor %2574
       %2576 = OpFMul %float %2571 %float_n6_28318548
       %2577 = OpExtInst %float %1 Fma %2566 %float_6_28318548 %2576
       %2578 = OpFMul %float %2575 %float_n6_28318548
       %2579 = OpExtInst %float %1 Fma %2570 %float_6_28318548 %2578
       %2580 = OpExtInst %float %1 Fma %2577 %float_2097152 %2579
       %2581 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_22 %int_2
       %2582 = OpLoad %float %2581
       %2583 = OpFMul %float %2544 %2582
       %2584 = OpExtInst %float %1 Sin %2580
       %2585 = OpFMul %float %2584 %2583
       %2586 = OpCompositeConstruct %v3float %537 %537 %2546
       %2587 = OpCompositeConstruct %v3float %537 %537 %2585
       %2588 = OpFAdd %v3float %2586 %2587
       %2589 = OpFSub %v3float %1673 %1676
       %2590 = OpExtInst %v3float %1 NMax %2589 %276
       %2591 = OpExtInst %v3float %1 NMin %2590 %125
       %2592 = OpCompositeExtract %float %2591 0
       %2593 = OpCompositeExtract %float %2591 1
       %2594 = OpCompositeConstruct %v2float %2592 %2593
       %2595 = OpFMul %v2float %1684 %2594
       %2596 = OpFMul %v2float %2594 %1685
       %2597 = OpCompositeExtract %float %2595 0
       %2598 = OpCompositeExtract %float %2596 0
       %2599 = OpCompositeExtract %float %2595 1
       %2600 = OpCompositeExtract %float %2596 1
       %2601 = OpFAdd %float %2597 %2599
       %2602 = OpFAdd %float %2598 %2600
       %2603 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_23 %int_1
       %2604 = OpLoad %float %2603
       %2605 = OpFMul %float %2601 %2604
       %2606 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_23 %int_3
       %2607 = OpLoad %float %2606
       %2608 = OpFMul %float %2607 %1983
       %2609 = OpExtInst %float %1 Fma %2602 %2604 %2608
       %2610 = OpExtInst %float %1 Floor %2605
       %2611 = OpFNegate %float %2610
       %2612 = OpExtInst %float %1 Fma %2601 %2604 %2611
       %2613 = OpExtInst %float %1 Fma %2612 %float_2097152 %2609
       %2614 = OpExtInst %float %1 Floor %2613
       %2615 = OpFMul %float %2610 %float_n6_28318548
       %2616 = OpExtInst %float %1 Fma %2605 %float_6_28318548 %2615
       %2617 = OpFMul %float %2614 %float_n6_28318548
       %2618 = OpExtInst %float %1 Fma %2609 %float_6_28318548 %2617
       %2619 = OpExtInst %float %1 Fma %2616 %float_2097152 %2618
       %2620 = OpFMul %float %2583 %2582
       %2621 = OpExtInst %float %1 Sin %2619
       %2622 = OpFMul %float %2621 %2620
       %2623 = OpCompositeConstruct %v3float %537 %537 %2622
       %2624 = OpFAdd %v3float %2588 %2623
       %2625 = OpFSub %v3float %1673 %2549
       %2626 = OpExtInst %v3float %1 NMax %2625 %276
       %2627 = OpExtInst %v3float %1 NMin %2626 %125
       %2628 = OpCompositeExtract %float %2627 0
       %2629 = OpCompositeExtract %float %2627 1
       %2630 = OpCompositeConstruct %v2float %2628 %2629
       %2631 = OpFMul %v2float %1684 %2630
       %2632 = OpFMul %v2float %2630 %1685
       %2633 = OpCompositeExtract %float %2631 0
       %2634 = OpCompositeExtract %float %2632 0
       %2635 = OpCompositeExtract %float %2631 1
       %2636 = OpCompositeExtract %float %2632 1
       %2637 = OpFAdd %float %2633 %2635
       %2638 = OpFAdd %float %2634 %2636
       %2639 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_24 %int_2
       %2640 = OpLoad %float %2639
       %2641 = OpFMul %float %2637 %2640
       %2642 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_25 %int_0
       %2643 = OpLoad %float %2642
       %2644 = OpFMul %float %2643 %1983
       %2645 = OpExtInst %float %1 Fma %2638 %2640 %2644
       %2646 = OpExtInst %float %1 Floor %2641
       %2647 = OpFNegate %float %2646
       %2648 = OpExtInst %float %1 Fma %2637 %2640 %2647
       %2649 = OpExtInst %float %1 Fma %2648 %float_2097152 %2645
       %2650 = OpExtInst %float %1 Floor %2649
       %2651 = OpFMul %float %2646 %float_n6_28318548
       %2652 = OpExtInst %float %1 Fma %2641 %float_6_28318548 %2651
       %2653 = OpFMul %float %2650 %float_n6_28318548
       %2654 = OpExtInst %float %1 Fma %2645 %float_6_28318548 %2653
       %2655 = OpExtInst %float %1 Fma %2652 %float_2097152 %2654
       %2656 = OpFMul %float %2620 %2582
       %2657 = OpExtInst %float %1 Sin %2655
       %2658 = OpFMul %float %2657 %2656
       %2659 = OpCompositeConstruct %v3float %537 %537 %2658
       %2660 = OpFAdd %v3float %2624 %2659
       %2661 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_25 %int_3
       %2662 = OpLoad %float %2661
       %2663 = OpFSub %float %2662 %float_n1
       %2664 = OpExtInst %float %1 FAbs %2663
       %2665 = OpFOrdGreaterThan %bool %2664 %float_9_99999975en06
       %2666 = OpFOrdGreaterThanEqual %bool %2662 %float_n1
       %2667 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_26 %int_0
       %2668 = OpLoad %float %2667
       %2669 = OpSelect %float %2666 %2662 %2668
       %2670 = OpSelect %float %2665 %2669 %2662
       %2671 = OpFSub %float %2670 %float_1
       %2672 = OpExtInst %float %1 FAbs %2671
       %2673 = OpFOrdGreaterThan %bool %2672 %float_9_99999975en06
       %2674 = OpFOrdGreaterThanEqual %bool %2670 %float_1
       %2675 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_26 %int_1
       %2676 = OpLoad %float %2675
       %2677 = OpSelect %float %2674 %2676 %2662
       %2678 = OpSelect %float %2673 %2677 %2662
       %2679 = OpExtInst %float %1 FAbs %2678
       %2680 = OpFOrdGreaterThan %bool %2679 %float_9_99999975en06
       %2681 = OpFOrdGreaterThanEqual %bool %2678 %float_0
       %2682 = OpSelect %float %2681 %float_1 %float_n1
       %2683 = OpSelect %float %2680 %2682 %float_1
       %2684 = OpExtInst %float %1 NMax %2683 %float_n1
       %2685 = OpExtInst %float %1 NMin %2684 %float_1
       %2686 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_27 %int_2
       %2687 = OpLoad %float %2686
       %2688 = OpCompositeConstruct %v3float %2685 %2687 %float_0
       %2689 = OpFAdd %v3float %2688 %1676
       %2690 = OpExtInst %v3float %1 NMax %2689 %276
       %2691 = OpExtInst %v3float %1 NMin %2690 %125
       %2692 = OpCompositeExtract %float %2691 0
       %2693 = OpCompositeExtract %float %2691 1
       %2694 = OpCompositeConstruct %v2float %2692 %2693
       %2695 = OpFMul %v2float %1684 %2694
       %2696 = OpFMul %v2float %2694 %1685
       %2697 = OpCompositeExtract %float %2695 0
       %2698 = OpCompositeExtract %float %2696 0
       %2699 = OpCompositeExtract %float %2695 1
       %2700 = OpCompositeExtract %float %2696 1
       %2701 = OpFAdd %float %2697 %2699
       %2702 = OpFAdd %float %2698 %2700
       %2703 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_29 %int_3
       %2704 = OpLoad %float %2703
       %2705 = OpFMul %float %2701 %2704
       %2706 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_30 %int_2
       %2707 = OpLoad %float %2706
       %2708 = OpFMul %float %2707 %1983
       %2709 = OpExtInst %float %1 Fma %2702 %2704 %2708
       %2710 = OpExtInst %float %1 Floor %2705
       %2711 = OpFNegate %float %2710
       %2712 = OpExtInst %float %1 Fma %2701 %2704 %2711
       %2713 = OpExtInst %float %1 Fma %2712 %float_2097152 %2709
       %2714 = OpExtInst %float %1 Floor %2713
       %2715 = OpFMul %float %2710 %float_n6_28318548
       %2716 = OpExtInst %float %1 Fma %2705 %float_6_28318548 %2715
       %2717 = OpFMul %float %2714 %float_n6_28318548
       %2718 = OpExtInst %float %1 Fma %2709 %float_6_28318548 %2717
       %2719 = OpExtInst %float %1 Fma %2716 %float_2097152 %2718
       %2720 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_30 %int_3
       %2721 = OpLoad %float %2720
       %2722 = OpFMul %float %2544 %2721
       %2723 = OpExtInst %float %1 Sin %2719
       %2724 = OpFMul %float %2723 %2722
       %2725 = OpFAdd %v3float %2688 %2549
       %2726 = OpExtInst %v3float %1 NMax %2725 %276
       %2727 = OpExtInst %v3float %1 NMin %2726 %125
       %2728 = OpCompositeExtract %float %2727 0
       %2729 = OpCompositeExtract %float %2727 1
       %2730 = OpCompositeConstruct %v2float %2728 %2729
       %2731 = OpFMul %v2float %1684 %2730
       %2732 = OpFMul %v2float %2730 %1685
       %2733 = OpCompositeExtract %float %2731 0
       %2734 = OpCompositeExtract %float %2732 0
       %2735 = OpCompositeExtract %float %2731 1
       %2736 = OpCompositeExtract %float %2732 1
       %2737 = OpFAdd %float %2733 %2735
       %2738 = OpFAdd %float %2734 %2736
       %2739 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_31 %int_1
       %2740 = OpLoad %float %2739
       %2741 = OpFMul %float %2737 %2740
       %2742 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_31 %int_3
       %2743 = OpLoad %float %2742
       %2744 = OpFMul %float %2743 %1983
       %2745 = OpExtInst %float %1 Fma %2738 %2740 %2744
       %2746 = OpExtInst %float %1 Floor %2741
       %2747 = OpFNegate %float %2746
       %2748 = OpExtInst %float %1 Fma %2737 %2740 %2747
       %2749 = OpExtInst %float %1 Fma %2748 %float_2097152 %2745
       %2750 = OpExtInst %float %1 Floor %2749
       %2751 = OpFMul %float %2746 %float_n6_28318548
       %2752 = OpExtInst %float %1 Fma %2741 %float_6_28318548 %2751
       %2753 = OpFMul %float %2750 %float_n6_28318548
       %2754 = OpExtInst %float %1 Fma %2745 %float_6_28318548 %2753
       %2755 = OpExtInst %float %1 Fma %2752 %float_2097152 %2754
       %2756 = OpFMul %float %2722 %2582
       %2757 = OpExtInst %float %1 Sin %2755
       %2758 = OpFMul %float %2757 %2756
       %2759 = OpCompositeConstruct %v3float %537 %537 %2724
       %2760 = OpCompositeConstruct %v3float %537 %537 %2758
       %2761 = OpFAdd %v3float %2759 %2760
       %2762 = OpFSub %v3float %2688 %1676
       %2763 = OpExtInst %v3float %1 NMax %2762 %276
       %2764 = OpExtInst %v3float %1 NMin %2763 %125
       %2765 = OpCompositeExtract %float %2764 0
       %2766 = OpCompositeExtract %float %2764 1
       %2767 = OpCompositeConstruct %v2float %2765 %2766
       %2768 = OpFMul %v2float %1684 %2767
       %2769 = OpFMul %v2float %2767 %1685
       %2770 = OpCompositeExtract %float %2768 0
       %2771 = OpCompositeExtract %float %2769 0
       %2772 = OpCompositeExtract %float %2768 1
       %2773 = OpCompositeExtract %float %2769 1
       %2774 = OpFAdd %float %2770 %2772
       %2775 = OpFAdd %float %2771 %2773
       %2776 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_32 %int_1
       %2777 = OpLoad %float %2776
       %2778 = OpFMul %float %2774 %2777
       %2779 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_32 %int_3
       %2780 = OpLoad %float %2779
       %2781 = OpFMul %float %2780 %1983
       %2782 = OpExtInst %float %1 Fma %2775 %2777 %2781
       %2783 = OpExtInst %float %1 Floor %2778
       %2784 = OpFNegate %float %2783
       %2785 = OpExtInst %float %1 Fma %2774 %2777 %2784
       %2786 = OpExtInst %float %1 Fma %2785 %float_2097152 %2782
       %2787 = OpExtInst %float %1 Floor %2786
       %2788 = OpFMul %float %2783 %float_n6_28318548
       %2789 = OpExtInst %float %1 Fma %2778 %float_6_28318548 %2788
       %2790 = OpFMul %float %2787 %float_n6_28318548
       %2791 = OpExtInst %float %1 Fma %2782 %float_6_28318548 %2790
       %2792 = OpExtInst %float %1 Fma %2789 %float_2097152 %2791
       %2793 = OpFMul %float %2756 %2582
       %2794 = OpExtInst %float %1 Sin %2792
       %2795 = OpFMul %float %2794 %2793
       %2796 = OpCompositeConstruct %v3float %537 %537 %2795
       %2797 = OpFAdd %v3float %2761 %2796
       %2798 = OpFSub %v3float %2688 %2549
       %2799 = OpExtInst %v3float %1 NMax %2798 %276
       %2800 = OpExtInst %v3float %1 NMin %2799 %125
       %2801 = OpCompositeExtract %float %2800 0
       %2802 = OpCompositeExtract %float %2800 1
       %2803 = OpCompositeConstruct %v2float %2801 %2802
       %2804 = OpFMul %v2float %1684 %2803
       %2805 = OpFMul %v2float %2803 %1685
       %2806 = OpCompositeExtract %float %2804 0
       %2807 = OpCompositeExtract %float %2805 0
       %2808 = OpCompositeExtract %float %2804 1
       %2809 = OpCompositeExtract %float %2805 1
       %2810 = OpFAdd %float %2806 %2808
       %2811 = OpFAdd %float %2807 %2809
       %2812 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_33 %int_1
       %2813 = OpLoad %float %2812
       %2814 = OpFMul %float %2810 %2813
       %2815 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_33 %int_3
       %2816 = OpLoad %float %2815
       %2817 = OpFMul %float %2816 %1983
       %2818 = OpExtInst %float %1 Fma %2811 %2813 %2817
       %2819 = OpExtInst %float %1 Floor %2814
       %2820 = OpFNegate %float %2819
       %2821 = OpExtInst %float %1 Fma %2810 %2813 %2820
       %2822 = OpExtInst %float %1 Fma %2821 %float_2097152 %2818
       %2823 = OpExtInst %float %1 Floor %2822
       %2824 = OpFMul %float %2819 %float_n6_28318548
       %2825 = OpExtInst %float %1 Fma %2814 %float_6_28318548 %2824
       %2826 = OpFMul %float %2823 %float_n6_28318548
       %2827 = OpExtInst %float %1 Fma %2818 %float_6_28318548 %2826
       %2828 = OpExtInst %float %1 Fma %2825 %float_2097152 %2827
       %2829 = OpFMul %float %2793 %2582
       %2830 = OpExtInst %float %1 Sin %2828
       %2831 = OpFMul %float %2830 %2829
       %2832 = OpCompositeConstruct %v3float %537 %537 %2831
       %2833 = OpFAdd %v3float %2797 %2832
       %2834 = OpFAdd %v3float %2660 %2833
       %2835 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_0
       %2836 = OpLoad %float %2835
       %2837 = OpFSub %float %2836 %float_n1
       %2838 = OpExtInst %float %1 FAbs %2837
       %2839 = OpFOrdGreaterThan %bool %2838 %float_9_99999975en06
       %2840 = OpFOrdGreaterThanEqual %bool %2836 %float_n1
       %2841 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_1
       %2842 = OpLoad %float %2841
       %2843 = OpSelect %float %2840 %2836 %2842
       %2844 = OpSelect %float %2839 %2843 %2836
       %2845 = OpFSub %float %2844 %float_1
       %2846 = OpExtInst %float %1 FAbs %2845
       %2847 = OpFOrdGreaterThan %bool %2846 %float_9_99999975en06
       %2848 = OpFOrdGreaterThanEqual %bool %2844 %float_1
       %2849 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_2
       %2850 = OpLoad %float %2849
       %2851 = OpSelect %float %2848 %2850 %2836
       %2852 = OpSelect %float %2847 %2851 %2836
       %2853 = OpExtInst %float %1 FAbs %2852
       %2854 = OpFOrdGreaterThan %bool %2853 %float_9_99999975en06
       %2855 = OpFOrdGreaterThanEqual %bool %2852 %float_0
       %2856 = OpSelect %float %2855 %float_1 %float_n1
       %2857 = OpSelect %float %2854 %2856 %float_1
       %2858 = OpExtInst %float %1 NMax %2857 %float_n1
       %2859 = OpExtInst %float %1 NMin %2858 %float_1
       %2860 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_3
       %2861 = OpLoad %float %2860
       %2862 = OpCompositeConstruct %v3float %2859 %2861 %float_0
       %2863 = OpFAdd %v3float %2862 %1676
       %2864 = OpExtInst %v3float %1 NMax %2863 %276
       %2865 = OpExtInst %v3float %1 NMin %2864 %125
       %2866 = OpCompositeExtract %float %2865 0
       %2867 = OpCompositeExtract %float %2865 1
       %2868 = OpCompositeConstruct %v2float %2866 %2867
       %2869 = OpFMul %v2float %1684 %2868
       %2870 = OpFMul %v2float %2868 %1685
       %2871 = OpCompositeExtract %float %2869 0
       %2872 = OpCompositeExtract %float %2870 0
       %2873 = OpCompositeExtract %float %2869 1
       %2874 = OpCompositeExtract %float %2870 1
       %2875 = OpFAdd %float %2871 %2873
       %2876 = OpFAdd %float %2872 %2874
       %2877 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_37 %int_2
       %2878 = OpLoad %float %2877
       %2879 = OpFMul %float %2875 %2878
       %2880 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_37 %int_3
       %2881 = OpLoad %float %2880
       %2882 = OpFMul %float %2881 %1983
       %2883 = OpExtInst %float %1 Fma %2876 %2878 %2882
       %2884 = OpExtInst %float %1 Floor %2879
       %2885 = OpFNegate %float %2884
       %2886 = OpExtInst %float %1 Fma %2875 %2878 %2885
       %2887 = OpExtInst %float %1 Fma %2886 %float_2097152 %2883
       %2888 = OpExtInst %float %1 Floor %2887
       %2889 = OpFMul %float %2884 %float_n6_28318548
       %2890 = OpExtInst %float %1 Fma %2879 %float_6_28318548 %2889
       %2891 = OpFMul %float %2888 %float_n6_28318548
       %2892 = OpExtInst %float %1 Fma %2883 %float_6_28318548 %2891
       %2893 = OpExtInst %float %1 Fma %2890 %float_2097152 %2892
       %2894 = OpExtInst %float %1 Sin %2893
       %2895 = OpFMul %float %2894 %2722
       %2896 = OpFAdd %v3float %2862 %2549
       %2897 = OpExtInst %v3float %1 NMax %2896 %276
       %2898 = OpExtInst %v3float %1 NMin %2897 %125
       %2899 = OpCompositeExtract %float %2898 0
       %2900 = OpCompositeExtract %float %2898 1
       %2901 = OpCompositeConstruct %v2float %2899 %2900
       %2902 = OpFMul %v2float %1684 %2901
       %2903 = OpFMul %v2float %2901 %1685
       %2904 = OpCompositeExtract %float %2902 0
       %2905 = OpCompositeExtract %float %2903 0
       %2906 = OpCompositeExtract %float %2902 1
       %2907 = OpCompositeExtract %float %2903 1
       %2908 = OpFAdd %float %2904 %2906
       %2909 = OpFAdd %float %2905 %2907
       %2910 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_38 %int_1
       %2911 = OpLoad %float %2910
       %2912 = OpFMul %float %2908 %2911
       %2913 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_38 %int_2
       %2914 = OpLoad %float %2913
       %2915 = OpFMul %float %2914 %1983
       %2916 = OpExtInst %float %1 Fma %2909 %2911 %2915
       %2917 = OpExtInst %float %1 Floor %2912
       %2918 = OpFNegate %float %2917
       %2919 = OpExtInst %float %1 Fma %2908 %2911 %2918
       %2920 = OpExtInst %float %1 Fma %2919 %float_2097152 %2916
       %2921 = OpExtInst %float %1 Floor %2920
       %2922 = OpFMul %float %2917 %float_n6_28318548
       %2923 = OpExtInst %float %1 Fma %2912 %float_6_28318548 %2922
       %2924 = OpFMul %float %2921 %float_n6_28318548
       %2925 = OpExtInst %float %1 Fma %2916 %float_6_28318548 %2924
       %2926 = OpExtInst %float %1 Fma %2923 %float_2097152 %2925
       %2927 = OpExtInst %float %1 Sin %2926
       %2928 = OpFMul %float %2927 %2756
       %2929 = OpCompositeConstruct %v3float %537 %537 %2895
       %2930 = OpCompositeConstruct %v3float %537 %537 %2928
       %2931 = OpFAdd %v3float %2929 %2930
       %2932 = OpFSub %v3float %2862 %1676
       %2933 = OpExtInst %v3float %1 NMax %2932 %276
       %2934 = OpExtInst %v3float %1 NMin %2933 %125
       %2935 = OpCompositeExtract %float %2934 0
       %2936 = OpCompositeExtract %float %2934 1
       %2937 = OpCompositeConstruct %v2float %2935 %2936
       %2938 = OpFMul %v2float %1684 %2937
       %2939 = OpFMul %v2float %2937 %1685
       %2940 = OpCompositeExtract %float %2938 0
       %2941 = OpCompositeExtract %float %2939 0
       %2942 = OpCompositeExtract %float %2938 1
       %2943 = OpCompositeExtract %float %2939 1
       %2944 = OpFAdd %float %2940 %2942
       %2945 = OpFAdd %float %2941 %2943
       %2946 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_0
       %2947 = OpLoad %float %2946
       %2948 = OpFMul %float %2944 %2947
       %2949 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_1
       %2950 = OpLoad %float %2949
       %2951 = OpFMul %float %2950 %1983
       %2952 = OpExtInst %float %1 Fma %2945 %2947 %2951
       %2953 = OpExtInst %float %1 Floor %2948
       %2954 = OpFNegate %float %2953
       %2955 = OpExtInst %float %1 Fma %2944 %2947 %2954
       %2956 = OpExtInst %float %1 Fma %2955 %float_2097152 %2952
       %2957 = OpExtInst %float %1 Floor %2956
       %2958 = OpFMul %float %2953 %float_n6_28318548
       %2959 = OpExtInst %float %1 Fma %2948 %float_6_28318548 %2958
       %2960 = OpFMul %float %2957 %float_n6_28318548
       %2961 = OpExtInst %float %1 Fma %2952 %float_6_28318548 %2960
       %2962 = OpExtInst %float %1 Fma %2959 %float_2097152 %2961
       %2963 = OpExtInst %float %1 Sin %2962
       %2964 = OpFMul %float %2963 %2793
       %2965 = OpCompositeConstruct %v3float %537 %537 %2964
       %2966 = OpFAdd %v3float %2931 %2965
       %2967 = OpFSub %v3float %2862 %2549
       %2968 = OpExtInst %v3float %1 NMax %2967 %276
       %2969 = OpExtInst %v3float %1 NMin %2968 %125
       %2970 = OpCompositeExtract %float %2969 0
       %2971 = OpCompositeExtract %float %2969 1
       %2972 = OpCompositeConstruct %v2float %2970 %2971
       %2973 = OpFMul %v2float %1684 %2972
       %2974 = OpFMul %v2float %2972 %1685
       %2975 = OpCompositeExtract %float %2973 0
       %2976 = OpCompositeExtract %float %2974 0
       %2977 = OpCompositeExtract %float %2973 1
       %2978 = OpCompositeExtract %float %2974 1
       %2979 = OpFAdd %float %2975 %2977
       %2980 = OpFAdd %float %2976 %2978
       %2981 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_3
       %2982 = OpLoad %float %2981
       %2983 = OpFMul %float %2979 %2982
       %2984 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_0
       %2985 = OpLoad %float %2984
       %2986 = OpFMul %float %2985 %1983
       %2987 = OpExtInst %float %1 Fma %2980 %2982 %2986
       %2988 = OpExtInst %float %1 Floor %2983
       %2989 = OpFNegate %float %2988
       %2990 = OpExtInst %float %1 Fma %2979 %2982 %2989
       %2991 = OpExtInst %float %1 Fma %2990 %float_2097152 %2987
       %2992 = OpExtInst %float %1 Floor %2991
       %2993 = OpFMul %float %2988 %float_n6_28318548
       %2994 = OpExtInst %float %1 Fma %2983 %float_6_28318548 %2993
       %2995 = OpFMul %float %2992 %float_n6_28318548
       %2996 = OpExtInst %float %1 Fma %2987 %float_6_28318548 %2995
       %2997 = OpExtInst %float %1 Fma %2994 %float_2097152 %2996
       %2998 = OpExtInst %float %1 Sin %2997
       %2999 = OpFMul %float %2998 %2829
       %3000 = OpCompositeConstruct %v3float %537 %537 %2999
       %3001 = OpFAdd %v3float %2966 %3000
       %3002 = OpFAdd %v3float %2834 %3001
       %3003 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_1
       %3004 = OpLoad %float %3003
       %3005 = OpFSub %float %3004 %float_n1
       %3006 = OpExtInst %float %1 FAbs %3005
       %3007 = OpFOrdGreaterThan %bool %3006 %float_9_99999975en06
       %3008 = OpFOrdGreaterThanEqual %bool %3004 %float_n1
       %3009 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_2
       %3010 = OpLoad %float %3009
       %3011 = OpSelect %float %3008 %3004 %3010
       %3012 = OpSelect %float %3007 %3011 %3004
       %3013 = OpFSub %float %3012 %float_1
       %3014 = OpExtInst %float %1 FAbs %3013
       %3015 = OpFOrdGreaterThan %bool %3014 %float_9_99999975en06
       %3016 = OpFOrdGreaterThanEqual %bool %3012 %float_1
       %3017 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_3
       %3018 = OpLoad %float %3017
       %3019 = OpSelect %float %3016 %3018 %3004
       %3020 = OpSelect %float %3015 %3019 %3004
       %3021 = OpExtInst %float %1 FAbs %3020
       %3022 = OpFOrdGreaterThan %bool %3021 %float_9_99999975en06
       %3023 = OpFOrdGreaterThanEqual %bool %3020 %float_0
       %3024 = OpSelect %float %3023 %float_1 %float_n1
       %3025 = OpSelect %float %3022 %3024 %float_1
       %3026 = OpExtInst %float %1 NMax %3025 %float_n1
       %3027 = OpExtInst %float %1 NMin %3026 %float_1
       %3028 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_42 %int_0
       %3029 = OpLoad %float %3028
       %3030 = OpCompositeConstruct %v3float %3027 %3029 %float_0
       %3031 = OpFAdd %v3float %3030 %1676
       %3032 = OpExtInst %v3float %1 NMax %3031 %276
       %3033 = OpExtInst %v3float %1 NMin %3032 %125
       %3034 = OpCompositeExtract %float %3033 0
       %3035 = OpCompositeExtract %float %3033 1
       %3036 = OpCompositeConstruct %v2float %3034 %3035
       %3037 = OpFMul %v2float %1684 %3036
       %3038 = OpFMul %v2float %3036 %1685
       %3039 = OpCompositeExtract %float %3037 0
       %3040 = OpCompositeExtract %float %3038 0
       %3041 = OpCompositeExtract %float %3037 1
       %3042 = OpCompositeExtract %float %3038 1
       %3043 = OpFAdd %float %3039 %3041
       %3044 = OpFAdd %float %3040 %3042
       %3045 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_43 %int_3
       %3046 = OpLoad %float %3045
       %3047 = OpFMul %float %3043 %3046
       %3048 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_44 %int_0
       %3049 = OpLoad %float %3048
       %3050 = OpFMul %float %3049 %1983
       %3051 = OpExtInst %float %1 Fma %3044 %3046 %3050
       %3052 = OpExtInst %float %1 Floor %3047
       %3053 = OpFNegate %float %3052
       %3054 = OpExtInst %float %1 Fma %3043 %3046 %3053
       %3055 = OpExtInst %float %1 Fma %3054 %float_2097152 %3051
       %3056 = OpExtInst %float %1 Floor %3055
       %3057 = OpFMul %float %3052 %float_n6_28318548
       %3058 = OpExtInst %float %1 Fma %3047 %float_6_28318548 %3057
       %3059 = OpFMul %float %3056 %float_n6_28318548
       %3060 = OpExtInst %float %1 Fma %3051 %float_6_28318548 %3059
       %3061 = OpExtInst %float %1 Fma %3058 %float_2097152 %3060
       %3062 = OpExtInst %float %1 Sin %3061
       %3063 = OpFMul %float %3062 %2544
       %3064 = OpFAdd %v3float %3030 %2549
       %3065 = OpExtInst %v3float %1 NMax %3064 %276
       %3066 = OpExtInst %v3float %1 NMin %3065 %125
       %3067 = OpCompositeExtract %float %3066 0
       %3068 = OpCompositeExtract %float %3066 1
       %3069 = OpCompositeConstruct %v2float %3067 %3068
       %3070 = OpFMul %v2float %1684 %3069
       %3071 = OpFMul %v2float %3069 %1685
       %3072 = OpCompositeExtract %float %3070 0
       %3073 = OpCompositeExtract %float %3071 0
       %3074 = OpCompositeExtract %float %3070 1
       %3075 = OpCompositeExtract %float %3071 1
       %3076 = OpFAdd %float %3072 %3074
       %3077 = OpFAdd %float %3073 %3075
       %3078 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_44 %int_2
       %3079 = OpLoad %float %3078
       %3080 = OpFMul %float %3076 %3079
       %3081 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_44 %int_3
       %3082 = OpLoad %float %3081
       %3083 = OpFMul %float %3082 %1983
       %3084 = OpExtInst %float %1 Fma %3077 %3079 %3083
       %3085 = OpExtInst %float %1 Floor %3080
       %3086 = OpFNegate %float %3085
       %3087 = OpExtInst %float %1 Fma %3076 %3079 %3086
       %3088 = OpExtInst %float %1 Fma %3087 %float_2097152 %3084
       %3089 = OpExtInst %float %1 Floor %3088
       %3090 = OpFMul %float %3085 %float_n6_28318548
       %3091 = OpExtInst %float %1 Fma %3080 %float_6_28318548 %3090
       %3092 = OpFMul %float %3089 %float_n6_28318548
       %3093 = OpExtInst %float %1 Fma %3084 %float_6_28318548 %3092
       %3094 = OpExtInst %float %1 Fma %3091 %float_2097152 %3093
       %3095 = OpExtInst %float %1 Sin %3094
       %3096 = OpFMul %float %3095 %2583
       %3097 = OpCompositeConstruct %v3float %537 %537 %3063
       %3098 = OpCompositeConstruct %v3float %537 %537 %3096
       %3099 = OpFAdd %v3float %3097 %3098
       %3100 = OpFSub %v3float %3030 %1676
       %3101 = OpExtInst %v3float %1 NMax %3100 %276
       %3102 = OpExtInst %v3float %1 NMin %3101 %125
       %3103 = OpCompositeExtract %float %3102 0
       %3104 = OpCompositeExtract %float %3102 1
       %3105 = OpCompositeConstruct %v2float %3103 %3104
       %3106 = OpFMul %v2float %1684 %3105
       %3107 = OpFMul %v2float %3105 %1685
       %3108 = OpCompositeExtract %float %3106 0
       %3109 = OpCompositeExtract %float %3107 0
       %3110 = OpCompositeExtract %float %3106 1
       %3111 = OpCompositeExtract %float %3107 1
       %3112 = OpFAdd %float %3108 %3110
       %3113 = OpFAdd %float %3109 %3111
       %3114 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_1
       %3115 = OpLoad %float %3114
       %3116 = OpFMul %float %3112 %3115
       %3117 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_2
       %3118 = OpLoad %float %3117
       %3119 = OpFMul %float %3118 %1983
       %3120 = OpExtInst %float %1 Fma %3113 %3115 %3119
       %3121 = OpExtInst %float %1 Floor %3116
       %3122 = OpFNegate %float %3121
       %3123 = OpExtInst %float %1 Fma %3112 %3115 %3122
       %3124 = OpExtInst %float %1 Fma %3123 %float_2097152 %3120
       %3125 = OpExtInst %float %1 Floor %3124
       %3126 = OpFMul %float %3121 %float_n6_28318548
       %3127 = OpExtInst %float %1 Fma %3116 %float_6_28318548 %3126
       %3128 = OpFMul %float %3125 %float_n6_28318548
       %3129 = OpExtInst %float %1 Fma %3120 %float_6_28318548 %3128
       %3130 = OpExtInst %float %1 Fma %3127 %float_2097152 %3129
       %3131 = OpExtInst %float %1 Sin %3130
       %3132 = OpFMul %float %3131 %2620
       %3133 = OpCompositeConstruct %v3float %537 %537 %3132
       %3134 = OpFAdd %v3float %3099 %3133
       %3135 = OpFSub %v3float %3030 %2549
       %3136 = OpExtInst %v3float %1 NMax %3135 %276
       %3137 = OpExtInst %v3float %1 NMin %3136 %125
       %3138 = OpCompositeExtract %float %3137 0
       %3139 = OpCompositeExtract %float %3137 1
       %3140 = OpCompositeConstruct %v2float %3138 %3139
       %3141 = OpFMul %v2float %1684 %3140
       %3142 = OpFMul %v2float %3140 %1685
       %3143 = OpCompositeExtract %float %3141 0
       %3144 = OpCompositeExtract %float %3142 0
       %3145 = OpCompositeExtract %float %3141 1
       %3146 = OpCompositeExtract %float %3142 1
       %3147 = OpFAdd %float %3143 %3145
       %3148 = OpFAdd %float %3144 %3146
       %3149 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_0
       %3150 = OpLoad %float %3149
       %3151 = OpFMul %float %3147 %3150
       %3152 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_1
       %3153 = OpLoad %float %3152
       %3154 = OpFMul %float %3153 %1983
       %3155 = OpExtInst %float %1 Fma %3148 %3150 %3154
       %3156 = OpExtInst %float %1 Floor %3151
       %3157 = OpFNegate %float %3156
       %3158 = OpExtInst %float %1 Fma %3147 %3150 %3157
       %3159 = OpExtInst %float %1 Fma %3158 %float_2097152 %3155
       %3160 = OpExtInst %float %1 Floor %3159
       %3161 = OpFMul %float %3156 %float_n6_28318548
       %3162 = OpExtInst %float %1 Fma %3151 %float_6_28318548 %3161
       %3163 = OpFMul %float %3160 %float_n6_28318548
       %3164 = OpExtInst %float %1 Fma %3155 %float_6_28318548 %3163
       %3165 = OpExtInst %float %1 Fma %3162 %float_2097152 %3164
       %3166 = OpExtInst %float %1 Sin %3165
       %3167 = OpFMul %float %3166 %2656
       %3168 = OpCompositeConstruct %v3float %537 %537 %3167
       %3169 = OpFAdd %v3float %3134 %3168
       %3170 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_2
       %3171 = OpLoad %float %3170
       %3172 = OpFSub %float %3171 %float_n1
       %3173 = OpExtInst %float %1 FAbs %3172
       %3174 = OpFOrdGreaterThan %bool %3173 %float_9_99999975en06
       %3175 = OpFOrdGreaterThanEqual %bool %3171 %float_n1
       %3176 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_3
       %3177 = OpLoad %float %3176
       %3178 = OpSelect %float %3175 %3171 %3177
       %3179 = OpSelect %float %3174 %3178 %3171
       %3180 = OpFSub %float %3179 %float_1
       %3181 = OpExtInst %float %1 FAbs %3180
       %3182 = OpFOrdGreaterThan %bool %3181 %float_9_99999975en06
       %3183 = OpFOrdGreaterThanEqual %bool %3179 %float_1
       %3184 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_47 %int_0
       %3185 = OpLoad %float %3184
       %3186 = OpSelect %float %3183 %3185 %3171
       %3187 = OpSelect %float %3182 %3186 %3171
       %3188 = OpExtInst %float %1 FAbs %3187
       %3189 = OpFOrdGreaterThan %bool %3188 %float_9_99999975en06
       %3190 = OpFOrdGreaterThanEqual %bool %3187 %float_0
       %3191 = OpSelect %float %3190 %float_1 %float_n1
       %3192 = OpSelect %float %3189 %3191 %float_1
       %3193 = OpExtInst %float %1 NMax %3192 %float_n1
       %3194 = OpExtInst %float %1 NMin %3193 %float_1
       %3195 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_48 %int_1
       %3196 = OpLoad %float %3195
       %3197 = OpCompositeConstruct %v3float %3194 %3196 %float_0
       %3198 = OpFAdd %v3float %3197 %1676
       %3199 = OpExtInst %v3float %1 NMax %3198 %276
       %3200 = OpExtInst %v3float %1 NMin %3199 %125
       %3201 = OpCompositeExtract %float %3200 0
       %3202 = OpCompositeExtract %float %3200 1
       %3203 = OpCompositeConstruct %v2float %3201 %3202
       %3204 = OpFMul %v2float %1684 %3203
       %3205 = OpFMul %v2float %3203 %1685
       %3206 = OpCompositeExtract %float %3204 0
       %3207 = OpCompositeExtract %float %3205 0
       %3208 = OpCompositeExtract %float %3204 1
       %3209 = OpCompositeExtract %float %3205 1
       %3210 = OpFAdd %float %3206 %3208
       %3211 = OpFAdd %float %3207 %3209
       %3212 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_50 %int_0
       %3213 = OpLoad %float %3212
       %3214 = OpFMul %float %3210 %3213
       %3215 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_50 %int_1
       %3216 = OpLoad %float %3215
       %3217 = OpFMul %float %3216 %1983
       %3218 = OpExtInst %float %1 Fma %3211 %3213 %3217
       %3219 = OpExtInst %float %1 Floor %3214
       %3220 = OpFNegate %float %3219
       %3221 = OpExtInst %float %1 Fma %3210 %3213 %3220
       %3222 = OpExtInst %float %1 Fma %3221 %float_2097152 %3218
       %3223 = OpExtInst %float %1 Floor %3222
       %3224 = OpFMul %float %3219 %float_n6_28318548
       %3225 = OpExtInst %float %1 Fma %3214 %float_6_28318548 %3224
       %3226 = OpFMul %float %3223 %float_n6_28318548
       %3227 = OpExtInst %float %1 Fma %3218 %float_6_28318548 %3226
       %3228 = OpExtInst %float %1 Fma %3225 %float_2097152 %3227
       %3229 = OpExtInst %float %1 Sin %3228
       %3230 = OpFMul %float %3229 %2722
       %3231 = OpFAdd %v3float %3197 %2549
       %3232 = OpExtInst %v3float %1 NMax %3231 %276
       %3233 = OpExtInst %v3float %1 NMin %3232 %125
       %3234 = OpCompositeExtract %float %3233 0
       %3235 = OpCompositeExtract %float %3233 1
       %3236 = OpCompositeConstruct %v2float %3234 %3235
       %3237 = OpFMul %v2float %1684 %3236
       %3238 = OpFMul %v2float %3236 %1685
       %3239 = OpCompositeExtract %float %3237 0
       %3240 = OpCompositeExtract %float %3238 0
       %3241 = OpCompositeExtract %float %3237 1
       %3242 = OpCompositeExtract %float %3238 1
       %3243 = OpFAdd %float %3239 %3241
       %3244 = OpFAdd %float %3240 %3242
       %3245 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_50 %int_3
       %3246 = OpLoad %float %3245
       %3247 = OpFMul %float %3243 %3246
       %3248 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_0
       %3249 = OpLoad %float %3248
       %3250 = OpFMul %float %3249 %1983
       %3251 = OpExtInst %float %1 Fma %3244 %3246 %3250
       %3252 = OpExtInst %float %1 Floor %3247
       %3253 = OpFNegate %float %3252
       %3254 = OpExtInst %float %1 Fma %3243 %3246 %3253
       %3255 = OpExtInst %float %1 Fma %3254 %float_2097152 %3251
       %3256 = OpExtInst %float %1 Floor %3255
       %3257 = OpFMul %float %3252 %float_n6_28318548
       %3258 = OpExtInst %float %1 Fma %3247 %float_6_28318548 %3257
       %3259 = OpFMul %float %3256 %float_n6_28318548
       %3260 = OpExtInst %float %1 Fma %3251 %float_6_28318548 %3259
       %3261 = OpExtInst %float %1 Fma %3258 %float_2097152 %3260
       %3262 = OpExtInst %float %1 Sin %3261
       %3263 = OpFMul %float %3262 %2756
       %3264 = OpCompositeConstruct %v3float %537 %537 %3230
       %3265 = OpCompositeConstruct %v3float %537 %537 %3263
       %3266 = OpFAdd %v3float %3264 %3265
       %3267 = OpFSub %v3float %3197 %1676
       %3268 = OpExtInst %v3float %1 NMax %3267 %276
       %3269 = OpExtInst %v3float %1 NMin %3268 %125
       %3270 = OpCompositeExtract %float %3269 0
       %3271 = OpCompositeExtract %float %3269 1
       %3272 = OpCompositeConstruct %v2float %3270 %3271
       %3273 = OpFMul %v2float %1684 %3272
       %3274 = OpFMul %v2float %3272 %1685
       %3275 = OpCompositeExtract %float %3273 0
       %3276 = OpCompositeExtract %float %3274 0
       %3277 = OpCompositeExtract %float %3273 1
       %3278 = OpCompositeExtract %float %3274 1
       %3279 = OpFAdd %float %3275 %3277
       %3280 = OpFAdd %float %3276 %3278
       %3281 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_2
       %3282 = OpLoad %float %3281
       %3283 = OpFMul %float %3279 %3282
       %3284 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_3
       %3285 = OpLoad %float %3284
       %3286 = OpFMul %float %3285 %1983
       %3287 = OpExtInst %float %1 Fma %3280 %3282 %3286
       %3288 = OpExtInst %float %1 Floor %3283
       %3289 = OpFNegate %float %3288
       %3290 = OpExtInst %float %1 Fma %3279 %3282 %3289
       %3291 = OpExtInst %float %1 Fma %3290 %float_2097152 %3287
       %3292 = OpExtInst %float %1 Floor %3291
       %3293 = OpFMul %float %3288 %float_n6_28318548
       %3294 = OpExtInst %float %1 Fma %3283 %float_6_28318548 %3293
       %3295 = OpFMul %float %3292 %float_n6_28318548
       %3296 = OpExtInst %float %1 Fma %3287 %float_6_28318548 %3295
       %3297 = OpExtInst %float %1 Fma %3294 %float_2097152 %3296
       %3298 = OpExtInst %float %1 Sin %3297
       %3299 = OpFMul %float %3298 %2793
       %3300 = OpCompositeConstruct %v3float %537 %537 %3299
       %3301 = OpFAdd %v3float %3266 %3300
       %3302 = OpFSub %v3float %3197 %2549
       %3303 = OpExtInst %v3float %1 NMax %3302 %276
       %3304 = OpExtInst %v3float %1 NMin %3303 %125
       %3305 = OpCompositeExtract %float %3304 0
       %3306 = OpCompositeExtract %float %3304 1
       %3307 = OpCompositeConstruct %v2float %3305 %3306
       %3308 = OpFMul %v2float %1684 %3307
       %3309 = OpFMul %v2float %3307 %1685
       %3310 = OpCompositeExtract %float %3308 0
       %3311 = OpCompositeExtract %float %3309 0
       %3312 = OpCompositeExtract %float %3308 1
       %3313 = OpCompositeExtract %float %3309 1
       %3314 = OpFAdd %float %3310 %3312
       %3315 = OpFAdd %float %3311 %3313
       %3316 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_1
       %3317 = OpLoad %float %3316
       %3318 = OpFMul %float %3314 %3317
       %3319 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_2
       %3320 = OpLoad %float %3319
       %3321 = OpFMul %float %3320 %1983
       %3322 = OpExtInst %float %1 Fma %3315 %3317 %3321
       %3323 = OpExtInst %float %1 Floor %3318
       %3324 = OpFNegate %float %3323
       %3325 = OpExtInst %float %1 Fma %3314 %3317 %3324
       %3326 = OpExtInst %float %1 Fma %3325 %float_2097152 %3322
       %3327 = OpExtInst %float %1 Floor %3326
       %3328 = OpFMul %float %3323 %float_n6_28318548
       %3329 = OpExtInst %float %1 Fma %3318 %float_6_28318548 %3328
       %3330 = OpFMul %float %3327 %float_n6_28318548
       %3331 = OpExtInst %float %1 Fma %3322 %float_6_28318548 %3330
       %3332 = OpExtInst %float %1 Fma %3329 %float_2097152 %3331
       %3333 = OpExtInst %float %1 Sin %3332
       %3334 = OpFMul %float %3333 %2829
       %3335 = OpCompositeConstruct %v3float %537 %537 %3334
       %3336 = OpFAdd %v3float %3301 %3335
       %3337 = OpFAdd %v3float %3169 %3336
       %3338 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_3
       %3339 = OpLoad %float %3338
       %3340 = OpFSub %float %3339 %float_n1
       %3341 = OpExtInst %float %1 FAbs %3340
       %3342 = OpFOrdGreaterThan %bool %3341 %float_9_99999975en06
       %3343 = OpFOrdGreaterThanEqual %bool %3339 %float_n1
       %3344 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_0
       %3345 = OpLoad %float %3344
       %3346 = OpSelect %float %3343 %3339 %3345
       %3347 = OpSelect %float %3342 %3346 %3339
       %3348 = OpFSub %float %3347 %float_1
       %3349 = OpExtInst %float %1 FAbs %3348
       %3350 = OpFOrdGreaterThan %bool %3349 %float_9_99999975en06
       %3351 = OpFOrdGreaterThanEqual %bool %3347 %float_1
       %3352 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_1
       %3353 = OpLoad %float %3352
       %3354 = OpSelect %float %3351 %3353 %3339
       %3355 = OpSelect %float %3350 %3354 %3339
       %3356 = OpExtInst %float %1 FAbs %3355
       %3357 = OpFOrdGreaterThan %bool %3356 %float_9_99999975en06
       %3358 = OpFOrdGreaterThanEqual %bool %3355 %float_0
       %3359 = OpSelect %float %3358 %float_1 %float_n1
       %3360 = OpSelect %float %3357 %3359 %float_1
       %3361 = OpExtInst %float %1 NMax %3360 %float_n1
       %3362 = OpExtInst %float %1 NMin %3361 %float_1
       %3363 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_2
       %3364 = OpLoad %float %3363
       %3365 = OpCompositeConstruct %v3float %3362 %3364 %float_0
       %3366 = OpFAdd %v3float %3365 %1676
       %3367 = OpExtInst %v3float %1 NMax %3366 %276
       %3368 = OpExtInst %v3float %1 NMin %3367 %125
       %3369 = OpCompositeExtract %float %3368 0
       %3370 = OpCompositeExtract %float %3368 1
       %3371 = OpCompositeConstruct %v2float %3369 %3370
       %3372 = OpFMul %v2float %1684 %3371
       %3373 = OpFMul %v2float %3371 %1685
       %3374 = OpCompositeExtract %float %3372 0
       %3375 = OpCompositeExtract %float %3373 0
       %3376 = OpCompositeExtract %float %3372 1
       %3377 = OpCompositeExtract %float %3373 1
       %3378 = OpFAdd %float %3374 %3376
       %3379 = OpFAdd %float %3375 %3377
       %3380 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_56 %int_1
       %3381 = OpLoad %float %3380
       %3382 = OpFMul %float %3378 %3381
       %3383 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_56 %int_2
       %3384 = OpLoad %float %3383
       %3385 = OpFMul %float %3384 %1983
       %3386 = OpExtInst %float %1 Fma %3379 %3381 %3385
       %3387 = OpExtInst %float %1 Floor %3382
       %3388 = OpFNegate %float %3387
       %3389 = OpExtInst %float %1 Fma %3378 %3381 %3388
       %3390 = OpExtInst %float %1 Fma %3389 %float_2097152 %3386
       %3391 = OpExtInst %float %1 Floor %3390
       %3392 = OpFMul %float %3387 %float_n6_28318548
       %3393 = OpExtInst %float %1 Fma %3382 %float_6_28318548 %3392
       %3394 = OpFMul %float %3391 %float_n6_28318548
       %3395 = OpExtInst %float %1 Fma %3386 %float_6_28318548 %3394
       %3396 = OpExtInst %float %1 Fma %3393 %float_2097152 %3395
       %3397 = OpExtInst %float %1 Sin %3396
       %3398 = OpFMul %float %3397 %2722
       %3399 = OpFAdd %v3float %3365 %2549
       %3400 = OpExtInst %v3float %1 NMax %3399 %276
       %3401 = OpExtInst %v3float %1 NMin %3400 %125
       %3402 = OpCompositeExtract %float %3401 0
       %3403 = OpCompositeExtract %float %3401 1
       %3404 = OpCompositeConstruct %v2float %3402 %3403
       %3405 = OpFMul %v2float %1684 %3404
       %3406 = OpFMul %v2float %3404 %1685
       %3407 = OpCompositeExtract %float %3405 0
       %3408 = OpCompositeExtract %float %3406 0
       %3409 = OpCompositeExtract %float %3405 1
       %3410 = OpCompositeExtract %float %3406 1
       %3411 = OpFAdd %float %3407 %3409
       %3412 = OpFAdd %float %3408 %3410
       %3413 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_0
       %3414 = OpLoad %float %3413
       %3415 = OpFMul %float %3411 %3414
       %3416 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_1
       %3417 = OpLoad %float %3416
       %3418 = OpFMul %float %3417 %1983
       %3419 = OpExtInst %float %1 Fma %3412 %3414 %3418
       %3420 = OpExtInst %float %1 Floor %3415
       %3421 = OpFNegate %float %3420
       %3422 = OpExtInst %float %1 Fma %3411 %3414 %3421
       %3423 = OpExtInst %float %1 Fma %3422 %float_2097152 %3419
       %3424 = OpExtInst %float %1 Floor %3423
       %3425 = OpFMul %float %3420 %float_n6_28318548
       %3426 = OpExtInst %float %1 Fma %3415 %float_6_28318548 %3425
       %3427 = OpFMul %float %3424 %float_n6_28318548
       %3428 = OpExtInst %float %1 Fma %3419 %float_6_28318548 %3427
       %3429 = OpExtInst %float %1 Fma %3426 %float_2097152 %3428
       %3430 = OpExtInst %float %1 Sin %3429
       %3431 = OpFMul %float %3430 %2756
       %3432 = OpCompositeConstruct %v3float %537 %537 %3398
       %3433 = OpCompositeConstruct %v3float %537 %537 %3431
       %3434 = OpFAdd %v3float %3432 %3433
       %3435 = OpFSub %v3float %3365 %1676
       %3436 = OpExtInst %v3float %1 NMax %3435 %276
       %3437 = OpExtInst %v3float %1 NMin %3436 %125
       %3438 = OpCompositeExtract %float %3437 0
       %3439 = OpCompositeExtract %float %3437 1
       %3440 = OpCompositeConstruct %v2float %3438 %3439
       %3441 = OpFMul %v2float %1684 %3440
       %3442 = OpFMul %v2float %3440 %1685
       %3443 = OpCompositeExtract %float %3441 0
       %3444 = OpCompositeExtract %float %3442 0
       %3445 = OpCompositeExtract %float %3441 1
       %3446 = OpCompositeExtract %float %3442 1
       %3447 = OpFAdd %float %3443 %3445
       %3448 = OpFAdd %float %3444 %3446
       %3449 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_3
       %3450 = OpLoad %float %3449
       %3451 = OpFMul %float %3447 %3450
       %3452 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_0
       %3453 = OpLoad %float %3452
       %3454 = OpFMul %float %3453 %1983
       %3455 = OpExtInst %float %1 Fma %3448 %3450 %3454
       %3456 = OpExtInst %float %1 Floor %3451
       %3457 = OpFNegate %float %3456
       %3458 = OpExtInst %float %1 Fma %3447 %3450 %3457
       %3459 = OpExtInst %float %1 Fma %3458 %float_2097152 %3455
       %3460 = OpExtInst %float %1 Floor %3459
       %3461 = OpFMul %float %3456 %float_n6_28318548
       %3462 = OpExtInst %float %1 Fma %3451 %float_6_28318548 %3461
       %3463 = OpFMul %float %3460 %float_n6_28318548
       %3464 = OpExtInst %float %1 Fma %3455 %float_6_28318548 %3463
       %3465 = OpExtInst %float %1 Fma %3462 %float_2097152 %3464
       %3466 = OpExtInst %float %1 Sin %3465
       %3467 = OpFMul %float %3466 %2793
       %3468 = OpCompositeConstruct %v3float %537 %537 %3467
       %3469 = OpFAdd %v3float %3434 %3468
       %3470 = OpFSub %v3float %3365 %2549
       %3471 = OpExtInst %v3float %1 NMax %3470 %276
       %3472 = OpExtInst %v3float %1 NMin %3471 %125
       %3473 = OpCompositeExtract %float %3472 0
       %3474 = OpCompositeExtract %float %3472 1
       %3475 = OpCompositeConstruct %v2float %3473 %3474
       %3476 = OpFMul %v2float %1684 %3475
       %3477 = OpFMul %v2float %3475 %1685
       %3478 = OpCompositeExtract %float %3476 0
       %3479 = OpCompositeExtract %float %3477 0
       %3480 = OpCompositeExtract %float %3476 1
       %3481 = OpCompositeExtract %float %3477 1
       %3482 = OpFAdd %float %3478 %3480
       %3483 = OpFAdd %float %3479 %3481
       %3484 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_2
       %3485 = OpLoad %float %3484
       %3486 = OpFMul %float %3482 %3485
       %3487 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_3
       %3488 = OpLoad %float %3487
       %3489 = OpFMul %float %3488 %1983
       %3490 = OpExtInst %float %1 Fma %3483 %3485 %3489
       %3491 = OpExtInst %float %1 Floor %3486
       %3492 = OpFNegate %float %3491
       %3493 = OpExtInst %float %1 Fma %3482 %3485 %3492
       %3494 = OpExtInst %float %1 Fma %3493 %float_2097152 %3490
       %3495 = OpExtInst %float %1 Floor %3494
       %3496 = OpFMul %float %3491 %float_n6_28318548
       %3497 = OpExtInst %float %1 Fma %3486 %float_6_28318548 %3496
       %3498 = OpFMul %float %3495 %float_n6_28318548
       %3499 = OpExtInst %float %1 Fma %3490 %float_6_28318548 %3498
       %3500 = OpExtInst %float %1 Fma %3497 %float_2097152 %3499
       %3501 = OpExtInst %float %1 Sin %3500
       %3502 = OpFMul %float %3501 %2829
       %3503 = OpCompositeConstruct %v3float %537 %537 %3502
       %3504 = OpFAdd %v3float %3469 %3503
       %3505 = OpFAdd %v3float %3337 %3504
       %3506 = OpFAdd %v3float %3002 %3505
       %3507 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_0
       %3508 = OpLoad %float %3507
       %3509 = OpCompositeConstruct %v3float %3508 %3508 %3508
       %3510 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_1
       %3511 = OpLoad %float %3510
       %3512 = OpFSub %float %3511 %float_n1
       %3513 = OpExtInst %float %1 FAbs %3512
       %3514 = OpFOrdGreaterThan %bool %3513 %float_9_99999975en06
       %3515 = OpFOrdGreaterThanEqual %bool %3511 %float_n1
       %3516 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_2
       %3517 = OpLoad %float %3516
       %3518 = OpSelect %float %3515 %3511 %3517
       %3519 = OpSelect %float %3514 %3518 %3511
       %3520 = OpFSub %float %3519 %float_1
       %3521 = OpExtInst %float %1 FAbs %3520
       %3522 = OpFOrdGreaterThan %bool %3521 %float_9_99999975en06
       %3523 = OpFOrdGreaterThanEqual %bool %3519 %float_1
       %3524 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_3
       %3525 = OpLoad %float %3524
       %3526 = OpSelect %float %3523 %3525 %3511
       %3527 = OpSelect %float %3522 %3526 %3511
       %3528 = OpExtInst %float %1 FAbs %3527
       %3529 = OpFOrdGreaterThan %bool %3528 %float_9_99999975en06
       %3530 = OpFOrdGreaterThanEqual %bool %3527 %float_0
       %3531 = OpSelect %float %3530 %float_1 %float_n1
       %3532 = OpSelect %float %3529 %3531 %float_1
       %3533 = OpExtInst %float %1 NMax %3532 %float_n1
       %3534 = OpExtInst %float %1 NMin %3533 %float_1
       %3535 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_61 %int_0
       %3536 = OpLoad %float %3535
       %3537 = OpCompositeConstruct %v3float %3534 %3536 %float_0
       %3538 = OpFAdd %v3float %3537 %1676
       %3539 = OpExtInst %v3float %1 NMax %3538 %276
       %3540 = OpExtInst %v3float %1 NMin %3539 %125
       %3541 = OpCompositeExtract %float %3540 0
       %3542 = OpCompositeExtract %float %3540 1
       %3543 = OpCompositeConstruct %v2float %3541 %3542
       %3544 = OpFMul %v2float %1684 %3543
       %3545 = OpFMul %v2float %3543 %1685
       %3546 = OpCompositeExtract %float %3544 0
       %3547 = OpCompositeExtract %float %3545 0
       %3548 = OpCompositeExtract %float %3544 1
       %3549 = OpCompositeExtract %float %3545 1
       %3550 = OpFAdd %float %3546 %3548
       %3551 = OpFAdd %float %3547 %3549
       %3552 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_1
       %3553 = OpLoad %float %3552
       %3554 = OpFMul %float %3553 %1713
       %3555 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_2
       %3556 = OpLoad %float %3555
       %3557 = OpFMul %float %3556 %3554
       %3558 = OpFDiv %float %float_2 %3557
       %3559 = OpFMul %float %3550 %3558
       %3560 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_3
       %3561 = OpLoad %float %3560
       %3562 = OpFMul %float %3558 %3561
       %3563 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_63 %int_0
       %3564 = OpLoad %float %3563
       %3565 = OpCompositeConstruct %v3float %3564 %3564 %3564
       %3566 = OpFMul %v3float %579 %3565
       %3567 = OpFMul %v3float %3565 %630
       %3568 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_63 %int_1
       %3569 = OpLoad %float %3568
       %3570 = OpCompositeConstruct %v3float %3569 %3569 %3569
       %3571 = OpFMul %v3float %3566 %3570
       %3572 = OpFMul %v3float %3567 %3570
       %3573 = OpFDiv %float %float_1 %1713
       %3574 = OpCompositeConstruct %v3float %3573 %3573 %3573
       %3575 = OpFMul %v3float %3572 %3574
       %3576 = OpCompositeExtract %float %3575 0
       %3577 = OpCompositeExtract %float %3575 1
       %3578 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_63 %int_3
       %3579 = OpLoad %float %3578
       %3580 = OpFMul %float %1149 %3579
       %3581 = OpCompositeExtract %float %3575 2
       %3582 = OpCompositeConstruct %v2float %3580 %3580
       %3583 = OpCompositeConstruct %v2float %3581 %3581
       %3584 = OpFAdd %v2float %3582 %3583
       %3585 = OpCompositeExtract %float %3584 0
       %3586 = OpCompositeConstruct %v3float %3576 %3577 %3585
       %3587 = OpVectorTimesScalar %v3float %3586 %float_4_76837158en07
       %3588 = OpFAdd %v3float %3587 %135
       %3589 = OpExtInst %v3float %1 Fma %3571 %3574 %3588
       %3590 = OpExtInst %v3float %1 Floor %3589
       %3591 = OpFNegate %v3float %3590
       %3592 = OpExtInst %v3float %1 Fma %3571 %3574 %3591
       %3593 = OpVectorTimesScalar %v3float %3592 %float_2097152
       %3594 = OpFAdd %v3float %3593 %3586
       %3595 = OpVectorTimesScalar %v3float %3594 %float_1
               OpBranch %3596
       %3596 = OpLabel
       %3597 = OpPhi %v3float %3595 %2301 %3598 %3599
       %3600 = OpPhi %float %float_1 %2301 %3601 %3599
       %3602 = OpPhi %float %float_0 %2301 %3603 %3599
       %3604 = OpPhi %uint %uint_0 %2301 %3605 %3599
       %3606 = OpULessThan %bool %3604 %uint_6
               OpLoopMerge %3607 %3599 DontUnroll
               OpBranchConditional %3606 %3599 %3607
       %3599 = OpLabel
       %3608 = OpExtInst %v3float %1 Fract %3597
       %3609 = OpExtInst %v3float %1 Floor %3597
       %3610 = OpDot %float %3609 %380
       %3611 = OpFAdd %float %3610 %float_19
       %3612 = OpFAdd %float %3610 %float_47
       %3613 = OpFAdd %float %3610 %float_66
       %3614 = OpFAdd %float %3610 %float_101
       %3615 = OpFAdd %float %3610 %float_120
       %3616 = OpFAdd %float %3610 %float_148
       %3617 = OpFAdd %float %3610 %float_167
       %3618 = OpConvertFToS %int %3610
       %3619 = OpCompositeConstruct %v3int %3618 %int_0 %int_0
       %3620 = OpBitcast %v3uint %3619
       %3621 = OpIMul %v3uint %3620 %396
       %3622 = OpIAdd %v3uint %3621 %398
       %3623 = OpCompositeExtract %uint %3622 1
       %3624 = OpCompositeExtract %uint %3622 2
       %3625 = OpIMul %uint %3623 %3624
       %3626 = OpCompositeExtract %uint %3622 0
       %3627 = OpIAdd %uint %3626 %3625
       %3628 = OpIMul %uint %3624 %3627
       %3629 = OpIAdd %uint %3623 %3628
       %3630 = OpIMul %uint %3627 %3629
       %3631 = OpIAdd %uint %3624 %3630
       %3632 = OpIMul %uint %3629 %3631
       %3633 = OpIAdd %uint %3627 %3632
       %3634 = OpCompositeInsert %v3uint %3633 %538 0
       %3635 = OpBitwiseAnd %v3uint %399 %400
       %3636 = OpShiftRightLogical %v3uint %3634 %3635
       %3637 = OpCompositeExtract %uint %3636 0
       %3638 = OpCompositeConstruct %v3uint %3637 %3637 %3637
       %3639 = OpBitwiseAnd %v3uint %3638 %381
       %3640 = OpConvertUToF %v3float %3639
       %3641 = OpExtInst %v3float %1 Fma %3640 %385 %276
       %3642 = OpDot %float %3641 %3608
       %3643 = OpConvertFToS %int %3611
       %3644 = OpFSub %v3float %3608 %344
       %3645 = OpCompositeConstruct %v3int %3643 %int_0 %int_0
       %3646 = OpBitcast %v3uint %3645
       %3647 = OpIMul %v3uint %3646 %396
       %3648 = OpIAdd %v3uint %3647 %398
       %3649 = OpCompositeExtract %uint %3648 1
       %3650 = OpCompositeExtract %uint %3648 2
       %3651 = OpIMul %uint %3649 %3650
       %3652 = OpCompositeExtract %uint %3648 0
       %3653 = OpIAdd %uint %3652 %3651
       %3654 = OpIMul %uint %3650 %3653
       %3655 = OpIAdd %uint %3649 %3654
       %3656 = OpIMul %uint %3653 %3655
       %3657 = OpIAdd %uint %3650 %3656
       %3658 = OpIMul %uint %3655 %3657
       %3659 = OpIAdd %uint %3653 %3658
       %3660 = OpCompositeInsert %v3uint %3659 %538 0
       %3661 = OpShiftRightLogical %v3uint %3660 %3635
       %3662 = OpCompositeExtract %uint %3661 0
       %3663 = OpCompositeConstruct %v3uint %3662 %3662 %3662
       %3664 = OpBitwiseAnd %v3uint %3663 %381
       %3665 = OpConvertUToF %v3float %3664
       %3666 = OpExtInst %v3float %1 Fma %3665 %385 %276
       %3667 = OpDot %float %3666 %3644
       %3668 = OpConvertFToS %int %3612
       %3669 = OpFSub %v3float %3608 %345
       %3670 = OpCompositeConstruct %v3int %3668 %int_0 %int_0
       %3671 = OpBitcast %v3uint %3670
       %3672 = OpIMul %v3uint %3671 %396
       %3673 = OpIAdd %v3uint %3672 %398
       %3674 = OpCompositeExtract %uint %3673 1
       %3675 = OpCompositeExtract %uint %3673 2
       %3676 = OpIMul %uint %3674 %3675
       %3677 = OpCompositeExtract %uint %3673 0
       %3678 = OpIAdd %uint %3677 %3676
       %3679 = OpIMul %uint %3675 %3678
       %3680 = OpIAdd %uint %3674 %3679
       %3681 = OpIMul %uint %3678 %3680
       %3682 = OpIAdd %uint %3675 %3681
       %3683 = OpIMul %uint %3680 %3682
       %3684 = OpIAdd %uint %3678 %3683
       %3685 = OpCompositeInsert %v3uint %3684 %538 0
       %3686 = OpShiftRightLogical %v3uint %3685 %3635
       %3687 = OpCompositeExtract %uint %3686 0
       %3688 = OpCompositeConstruct %v3uint %3687 %3687 %3687
       %3689 = OpBitwiseAnd %v3uint %3688 %381
       %3690 = OpConvertUToF %v3float %3689
       %3691 = OpExtInst %v3float %1 Fma %3690 %385 %276
       %3692 = OpDot %float %3691 %3669
       %3693 = OpConvertFToS %int %3613
       %3694 = OpFSub %v3float %3608 %132
       %3695 = OpCompositeConstruct %v3int %3693 %int_0 %int_0
       %3696 = OpBitcast %v3uint %3695
       %3697 = OpIMul %v3uint %3696 %396
       %3698 = OpIAdd %v3uint %3697 %398
       %3699 = OpCompositeExtract %uint %3698 1
       %3700 = OpCompositeExtract %uint %3698 2
       %3701 = OpIMul %uint %3699 %3700
       %3702 = OpCompositeExtract %uint %3698 0
       %3703 = OpIAdd %uint %3702 %3701
       %3704 = OpIMul %uint %3700 %3703
       %3705 = OpIAdd %uint %3699 %3704
       %3706 = OpIMul %uint %3703 %3705
       %3707 = OpIAdd %uint %3700 %3706
       %3708 = OpIMul %uint %3705 %3707
       %3709 = OpIAdd %uint %3703 %3708
       %3710 = OpCompositeInsert %v3uint %3709 %538 0
       %3711 = OpShiftRightLogical %v3uint %3710 %3635
       %3712 = OpCompositeExtract %uint %3711 0
       %3713 = OpCompositeConstruct %v3uint %3712 %3712 %3712
       %3714 = OpBitwiseAnd %v3uint %3713 %381
       %3715 = OpConvertUToF %v3float %3714
       %3716 = OpExtInst %v3float %1 Fma %3715 %385 %276
       %3717 = OpDot %float %3716 %3694
       %3718 = OpConvertFToS %int %3614
       %3719 = OpFSub %v3float %3608 %288
       %3720 = OpCompositeConstruct %v3int %3718 %int_0 %int_0
       %3721 = OpBitcast %v3uint %3720
       %3722 = OpIMul %v3uint %3721 %396
       %3723 = OpIAdd %v3uint %3722 %398
       %3724 = OpCompositeExtract %uint %3723 1
       %3725 = OpCompositeExtract %uint %3723 2
       %3726 = OpIMul %uint %3724 %3725
       %3727 = OpCompositeExtract %uint %3723 0
       %3728 = OpIAdd %uint %3727 %3726
       %3729 = OpIMul %uint %3725 %3728
       %3730 = OpIAdd %uint %3724 %3729
       %3731 = OpIMul %uint %3728 %3730
       %3732 = OpIAdd %uint %3725 %3731
       %3733 = OpIMul %uint %3730 %3732
       %3734 = OpIAdd %uint %3728 %3733
       %3735 = OpCompositeInsert %v3uint %3734 %538 0
       %3736 = OpShiftRightLogical %v3uint %3735 %3635
       %3737 = OpCompositeExtract %uint %3736 0
       %3738 = OpCompositeConstruct %v3uint %3737 %3737 %3737
       %3739 = OpBitwiseAnd %v3uint %3738 %381
       %3740 = OpConvertUToF %v3float %3739
       %3741 = OpExtInst %v3float %1 Fma %3740 %385 %276
       %3742 = OpDot %float %3741 %3719
       %3743 = OpConvertFToS %int %3615
       %3744 = OpFSub %v3float %3608 %137
       %3745 = OpCompositeConstruct %v3int %3743 %int_0 %int_0
       %3746 = OpBitcast %v3uint %3745
       %3747 = OpIMul %v3uint %3746 %396
       %3748 = OpIAdd %v3uint %3747 %398
       %3749 = OpCompositeExtract %uint %3748 1
       %3750 = OpCompositeExtract %uint %3748 2
       %3751 = OpIMul %uint %3749 %3750
       %3752 = OpCompositeExtract %uint %3748 0
       %3753 = OpIAdd %uint %3752 %3751
       %3754 = OpIMul %uint %3750 %3753
       %3755 = OpIAdd %uint %3749 %3754
       %3756 = OpIMul %uint %3753 %3755
       %3757 = OpIAdd %uint %3750 %3756
       %3758 = OpIMul %uint %3755 %3757
       %3759 = OpIAdd %uint %3753 %3758
       %3760 = OpCompositeInsert %v3uint %3759 %538 0
       %3761 = OpShiftRightLogical %v3uint %3760 %3635
       %3762 = OpCompositeExtract %uint %3761 0
       %3763 = OpCompositeConstruct %v3uint %3762 %3762 %3762
       %3764 = OpBitwiseAnd %v3uint %3763 %381
       %3765 = OpConvertUToF %v3float %3764
       %3766 = OpExtInst %v3float %1 Fma %3765 %385 %276
       %3767 = OpDot %float %3766 %3744
       %3768 = OpConvertFToS %int %3616
       %3769 = OpFSub %v3float %3608 %133
       %3770 = OpCompositeConstruct %v3int %3768 %int_0 %int_0
       %3771 = OpBitcast %v3uint %3770
       %3772 = OpIMul %v3uint %3771 %396
       %3773 = OpIAdd %v3uint %3772 %398
       %3774 = OpCompositeExtract %uint %3773 1
       %3775 = OpCompositeExtract %uint %3773 2
       %3776 = OpIMul %uint %3774 %3775
       %3777 = OpCompositeExtract %uint %3773 0
       %3778 = OpIAdd %uint %3777 %3776
       %3779 = OpIMul %uint %3775 %3778
       %3780 = OpIAdd %uint %3774 %3779
       %3781 = OpIMul %uint %3778 %3780
       %3782 = OpIAdd %uint %3775 %3781
       %3783 = OpIMul %uint %3780 %3782
       %3784 = OpIAdd %uint %3778 %3783
       %3785 = OpCompositeInsert %v3uint %3784 %538 0
       %3786 = OpShiftRightLogical %v3uint %3785 %3635
       %3787 = OpCompositeExtract %uint %3786 0
       %3788 = OpCompositeConstruct %v3uint %3787 %3787 %3787
       %3789 = OpBitwiseAnd %v3uint %3788 %381
       %3790 = OpConvertUToF %v3float %3789
       %3791 = OpExtInst %v3float %1 Fma %3790 %385 %276
       %3792 = OpDot %float %3791 %3769
       %3793 = OpConvertFToS %int %3617
       %3794 = OpFSub %v3float %3608 %125
       %3795 = OpCompositeConstruct %v3int %3793 %int_0 %int_0
       %3796 = OpBitcast %v3uint %3795
       %3797 = OpIMul %v3uint %3796 %396
       %3798 = OpIAdd %v3uint %3797 %398
       %3799 = OpCompositeExtract %uint %3798 1
       %3800 = OpCompositeExtract %uint %3798 2
       %3801 = OpIMul %uint %3799 %3800
       %3802 = OpCompositeExtract %uint %3798 0
       %3803 = OpIAdd %uint %3802 %3801
       %3804 = OpIMul %uint %3800 %3803
       %3805 = OpIAdd %uint %3799 %3804
       %3806 = OpIMul %uint %3803 %3805
       %3807 = OpIAdd %uint %3800 %3806
       %3808 = OpIMul %uint %3805 %3807
       %3809 = OpIAdd %uint %3803 %3808
       %3810 = OpCompositeInsert %v3uint %3809 %538 0
       %3811 = OpShiftRightLogical %v3uint %3810 %3635
       %3812 = OpCompositeExtract %uint %3811 0
       %3813 = OpCompositeConstruct %v3uint %3812 %3812 %3812
       %3814 = OpBitwiseAnd %v3uint %3813 %381
       %3815 = OpConvertUToF %v3float %3814
       %3816 = OpExtInst %v3float %1 Fma %3815 %385 %276
       %3817 = OpDot %float %3816 %3794
       %3818 = OpCompositeExtract %float %3608 0
       %3819 = OpCompositeExtract %float %3608 1
       %3820 = OpCompositeExtract %float %3608 2
       %3821 = OpCompositeConstruct %v4float %3818 %3819 %3820 %float_0
       %3822 = OpFMul %v4float %3821 %3821
       %3823 = OpFMul %v4float %3822 %3821
       %3824 = OpVectorTimesScalar %v4float %3821 %float_6
       %3825 = OpFSub %v4float %3824 %376
       %3826 = OpExtInst %v4float %1 Fma %3821 %3825 %377
       %3827 = OpFMul %v4float %3823 %3826
       %3828 = OpCompositeExtract %float %3827 0
       %3829 = OpExtInst %float %1 FMix %3642 %3667 %3828
       %3830 = OpExtInst %float %1 FMix %3692 %3717 %3828
       %3831 = OpCompositeExtract %float %3827 1
       %3832 = OpExtInst %float %1 FMix %3829 %3830 %3831
       %3833 = OpExtInst %float %1 FMix %3742 %3767 %3828
       %3834 = OpExtInst %float %1 FMix %3792 %3817 %3828
       %3835 = OpExtInst %float %1 FMix %3833 %3834 %3831
       %3836 = OpCompositeExtract %float %3827 2
       %3837 = OpExtInst %float %1 FMix %3832 %3835 %3836
       %3603 = OpExtInst %float %1 Fma %3837 %3600 %3602
       %3598 = OpVectorTimesScalar %v3float %3597 %float_2
       %3601 = OpFMul %float %3600 %float_0_5
       %3605 = OpIAdd %uint %3604 %uint_1
               OpBranch %3596
       %3607 = OpLabel
       %3838 = OpExtInst %float %1 Fma %3602 %float_0_5 %float_0_5
       %3839 = OpExtInst %float %1 FMix %float_0 %float_1 %3838
       %3840 = OpExtInst %float %1 FClamp %3839 %float_0 %float_1
       %3841 = OpExtInst %float %1 FMix %1149 %1702 %3840
       %3842 = OpFMul %float %3562 %3841
       %3843 = OpExtInst %float %1 Fma %3551 %3558 %3842
       %3844 = OpExtInst %float %1 Floor %3559
       %3845 = OpFNegate %float %3844
       %3846 = OpExtInst %float %1 Fma %3550 %3558 %3845
       %3847 = OpExtInst %float %1 Fma %3846 %float_2097152 %3843
       %3848 = OpExtInst %float %1 Floor %3847
       %3849 = OpFMul %float %3844 %float_n6_28318548
       %3850 = OpExtInst %float %1 Fma %3559 %float_6_28318548 %3849
       %3851 = OpFMul %float %3848 %float_n6_28318548
       %3852 = OpExtInst %float %1 Fma %3843 %float_6_28318548 %3851
       %3853 = OpExtInst %float %1 Fma %3850 %float_2097152 %3852
       %3854 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_0
       %3855 = OpLoad %float %3854
       %3856 = OpFMul %float %3855 %1713
       %3857 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_1
       %3858 = OpLoad %float %3857
       %3859 = OpFMul %float %3858 %1713
       %3860 = OpFNegate %float %3859
       %3861 = OpExtInst %float %1 Fma %3855 %1713 %3860
       %3862 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_2
       %3863 = OpLoad %float %3862
       %3864 = OpCompositeConstruct %v3float %3863 %3863 %3863
       %3865 = OpFMul %v3float %579 %3864
       %3866 = OpFMul %v3float %3864 %630
       %3867 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_3
       %3868 = OpLoad %float %3867
       %3869 = OpCompositeConstruct %v3float %3868 %3868 %3868
       %3870 = OpFMul %v3float %3865 %3869
       %3871 = OpFMul %v3float %3866 %3869
       %3872 = OpFMul %v3float %3871 %3574
       %3873 = OpCompositeExtract %float %3872 0
       %3874 = OpCompositeExtract %float %3872 1
       %3875 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_65 %int_1
       %3876 = OpLoad %float %3875
       %3877 = OpFMul %float %1149 %3876
       %3878 = OpCompositeExtract %float %3872 2
       %3879 = OpCompositeConstruct %v2float %3877 %3877
       %3880 = OpCompositeConstruct %v2float %3878 %3878
       %3881 = OpFAdd %v2float %3879 %3880
       %3882 = OpCompositeExtract %float %3881 0
       %3883 = OpCompositeConstruct %v3float %3873 %3874 %3882
       %3884 = OpVectorTimesScalar %v3float %3883 %float_4_76837158en07
       %3885 = OpFAdd %v3float %3884 %135
       %3886 = OpExtInst %v3float %1 Fma %3870 %3574 %3885
       %3887 = OpExtInst %v3float %1 Floor %3886
       %3888 = OpFNegate %v3float %3887
       %3889 = OpExtInst %v3float %1 Fma %3870 %3574 %3888
       %3890 = OpVectorTimesScalar %v3float %3889 %float_2097152
       %3891 = OpFAdd %v3float %3890 %3883
       %3892 = OpVectorTimesScalar %v3float %3891 %float_1
               OpBranch %3893
       %3893 = OpLabel
       %3894 = OpPhi %v3float %3892 %3607 %3895 %3896
       %3897 = OpPhi %float %float_1 %3607 %3898 %3896
       %3899 = OpPhi %float %float_0 %3607 %3900 %3896
       %3901 = OpPhi %uint %uint_0 %3607 %3902 %3896
       %3903 = OpULessThan %bool %3901 %uint_10
               OpLoopMerge %3904 %3896 DontUnroll
               OpBranchConditional %3903 %3896 %3904
       %3896 = OpLabel
       %3905 = OpExtInst %v3float %1 Fract %3894
       %3906 = OpExtInst %v3float %1 Floor %3894
       %3907 = OpDot %float %3906 %380
       %3908 = OpFAdd %float %3907 %float_19
       %3909 = OpFAdd %float %3907 %float_47
       %3910 = OpFAdd %float %3907 %float_66
       %3911 = OpFAdd %float %3907 %float_101
       %3912 = OpFAdd %float %3907 %float_120
       %3913 = OpFAdd %float %3907 %float_148
       %3914 = OpFAdd %float %3907 %float_167
       %3915 = OpConvertFToS %int %3907
       %3916 = OpCompositeConstruct %v3int %3915 %int_0 %int_0
       %3917 = OpBitcast %v3uint %3916
       %3918 = OpIMul %v3uint %3917 %396
       %3919 = OpIAdd %v3uint %3918 %398
       %3920 = OpCompositeExtract %uint %3919 1
       %3921 = OpCompositeExtract %uint %3919 2
       %3922 = OpIMul %uint %3920 %3921
       %3923 = OpCompositeExtract %uint %3919 0
       %3924 = OpIAdd %uint %3923 %3922
       %3925 = OpIMul %uint %3921 %3924
       %3926 = OpIAdd %uint %3920 %3925
       %3927 = OpIMul %uint %3924 %3926
       %3928 = OpIAdd %uint %3921 %3927
       %3929 = OpIMul %uint %3926 %3928
       %3930 = OpIAdd %uint %3924 %3929
       %3931 = OpCompositeInsert %v3uint %3930 %538 0
       %3932 = OpBitwiseAnd %v3uint %399 %400
       %3933 = OpShiftRightLogical %v3uint %3931 %3932
       %3934 = OpCompositeExtract %uint %3933 0
       %3935 = OpCompositeConstruct %v3uint %3934 %3934 %3934
       %3936 = OpBitwiseAnd %v3uint %3935 %381
       %3937 = OpConvertUToF %v3float %3936
       %3938 = OpExtInst %v3float %1 Fma %3937 %385 %276
       %3939 = OpDot %float %3938 %3905
       %3940 = OpConvertFToS %int %3908
       %3941 = OpFSub %v3float %3905 %344
       %3942 = OpCompositeConstruct %v3int %3940 %int_0 %int_0
       %3943 = OpBitcast %v3uint %3942
       %3944 = OpIMul %v3uint %3943 %396
       %3945 = OpIAdd %v3uint %3944 %398
       %3946 = OpCompositeExtract %uint %3945 1
       %3947 = OpCompositeExtract %uint %3945 2
       %3948 = OpIMul %uint %3946 %3947
       %3949 = OpCompositeExtract %uint %3945 0
       %3950 = OpIAdd %uint %3949 %3948
       %3951 = OpIMul %uint %3947 %3950
       %3952 = OpIAdd %uint %3946 %3951
       %3953 = OpIMul %uint %3950 %3952
       %3954 = OpIAdd %uint %3947 %3953
       %3955 = OpIMul %uint %3952 %3954
       %3956 = OpIAdd %uint %3950 %3955
       %3957 = OpCompositeInsert %v3uint %3956 %538 0
       %3958 = OpShiftRightLogical %v3uint %3957 %3932
       %3959 = OpCompositeExtract %uint %3958 0
       %3960 = OpCompositeConstruct %v3uint %3959 %3959 %3959
       %3961 = OpBitwiseAnd %v3uint %3960 %381
       %3962 = OpConvertUToF %v3float %3961
       %3963 = OpExtInst %v3float %1 Fma %3962 %385 %276
       %3964 = OpDot %float %3963 %3941
       %3965 = OpConvertFToS %int %3909
       %3966 = OpFSub %v3float %3905 %345
       %3967 = OpCompositeConstruct %v3int %3965 %int_0 %int_0
       %3968 = OpBitcast %v3uint %3967
       %3969 = OpIMul %v3uint %3968 %396
       %3970 = OpIAdd %v3uint %3969 %398
       %3971 = OpCompositeExtract %uint %3970 1
       %3972 = OpCompositeExtract %uint %3970 2
       %3973 = OpIMul %uint %3971 %3972
       %3974 = OpCompositeExtract %uint %3970 0
       %3975 = OpIAdd %uint %3974 %3973
       %3976 = OpIMul %uint %3972 %3975
       %3977 = OpIAdd %uint %3971 %3976
       %3978 = OpIMul %uint %3975 %3977
       %3979 = OpIAdd %uint %3972 %3978
       %3980 = OpIMul %uint %3977 %3979
       %3981 = OpIAdd %uint %3975 %3980
       %3982 = OpCompositeInsert %v3uint %3981 %538 0
       %3983 = OpShiftRightLogical %v3uint %3982 %3932
       %3984 = OpCompositeExtract %uint %3983 0
       %3985 = OpCompositeConstruct %v3uint %3984 %3984 %3984
       %3986 = OpBitwiseAnd %v3uint %3985 %381
       %3987 = OpConvertUToF %v3float %3986
       %3988 = OpExtInst %v3float %1 Fma %3987 %385 %276
       %3989 = OpDot %float %3988 %3966
       %3990 = OpConvertFToS %int %3910
       %3991 = OpFSub %v3float %3905 %132
       %3992 = OpCompositeConstruct %v3int %3990 %int_0 %int_0
       %3993 = OpBitcast %v3uint %3992
       %3994 = OpIMul %v3uint %3993 %396
       %3995 = OpIAdd %v3uint %3994 %398
       %3996 = OpCompositeExtract %uint %3995 1
       %3997 = OpCompositeExtract %uint %3995 2
       %3998 = OpIMul %uint %3996 %3997
       %3999 = OpCompositeExtract %uint %3995 0
       %4000 = OpIAdd %uint %3999 %3998
       %4001 = OpIMul %uint %3997 %4000
       %4002 = OpIAdd %uint %3996 %4001
       %4003 = OpIMul %uint %4000 %4002
       %4004 = OpIAdd %uint %3997 %4003
       %4005 = OpIMul %uint %4002 %4004
       %4006 = OpIAdd %uint %4000 %4005
       %4007 = OpCompositeInsert %v3uint %4006 %538 0
       %4008 = OpShiftRightLogical %v3uint %4007 %3932
       %4009 = OpCompositeExtract %uint %4008 0
       %4010 = OpCompositeConstruct %v3uint %4009 %4009 %4009
       %4011 = OpBitwiseAnd %v3uint %4010 %381
       %4012 = OpConvertUToF %v3float %4011
       %4013 = OpExtInst %v3float %1 Fma %4012 %385 %276
       %4014 = OpDot %float %4013 %3991
       %4015 = OpConvertFToS %int %3911
       %4016 = OpFSub %v3float %3905 %288
       %4017 = OpCompositeConstruct %v3int %4015 %int_0 %int_0
       %4018 = OpBitcast %v3uint %4017
       %4019 = OpIMul %v3uint %4018 %396
       %4020 = OpIAdd %v3uint %4019 %398
       %4021 = OpCompositeExtract %uint %4020 1
       %4022 = OpCompositeExtract %uint %4020 2
       %4023 = OpIMul %uint %4021 %4022
       %4024 = OpCompositeExtract %uint %4020 0
       %4025 = OpIAdd %uint %4024 %4023
       %4026 = OpIMul %uint %4022 %4025
       %4027 = OpIAdd %uint %4021 %4026
       %4028 = OpIMul %uint %4025 %4027
       %4029 = OpIAdd %uint %4022 %4028
       %4030 = OpIMul %uint %4027 %4029
       %4031 = OpIAdd %uint %4025 %4030
       %4032 = OpCompositeInsert %v3uint %4031 %538 0
       %4033 = OpShiftRightLogical %v3uint %4032 %3932
       %4034 = OpCompositeExtract %uint %4033 0
       %4035 = OpCompositeConstruct %v3uint %4034 %4034 %4034
       %4036 = OpBitwiseAnd %v3uint %4035 %381
       %4037 = OpConvertUToF %v3float %4036
       %4038 = OpExtInst %v3float %1 Fma %4037 %385 %276
       %4039 = OpDot %float %4038 %4016
       %4040 = OpConvertFToS %int %3912
       %4041 = OpFSub %v3float %3905 %137
       %4042 = OpCompositeConstruct %v3int %4040 %int_0 %int_0
       %4043 = OpBitcast %v3uint %4042
       %4044 = OpIMul %v3uint %4043 %396
       %4045 = OpIAdd %v3uint %4044 %398
       %4046 = OpCompositeExtract %uint %4045 1
       %4047 = OpCompositeExtract %uint %4045 2
       %4048 = OpIMul %uint %4046 %4047
       %4049 = OpCompositeExtract %uint %4045 0
       %4050 = OpIAdd %uint %4049 %4048
       %4051 = OpIMul %uint %4047 %4050
       %4052 = OpIAdd %uint %4046 %4051
       %4053 = OpIMul %uint %4050 %4052
       %4054 = OpIAdd %uint %4047 %4053
       %4055 = OpIMul %uint %4052 %4054
       %4056 = OpIAdd %uint %4050 %4055
       %4057 = OpCompositeInsert %v3uint %4056 %538 0
       %4058 = OpShiftRightLogical %v3uint %4057 %3932
       %4059 = OpCompositeExtract %uint %4058 0
       %4060 = OpCompositeConstruct %v3uint %4059 %4059 %4059
       %4061 = OpBitwiseAnd %v3uint %4060 %381
       %4062 = OpConvertUToF %v3float %4061
       %4063 = OpExtInst %v3float %1 Fma %4062 %385 %276
       %4064 = OpDot %float %4063 %4041
       %4065 = OpConvertFToS %int %3913
       %4066 = OpFSub %v3float %3905 %133
       %4067 = OpCompositeConstruct %v3int %4065 %int_0 %int_0
       %4068 = OpBitcast %v3uint %4067
       %4069 = OpIMul %v3uint %4068 %396
       %4070 = OpIAdd %v3uint %4069 %398
       %4071 = OpCompositeExtract %uint %4070 1
       %4072 = OpCompositeExtract %uint %4070 2
       %4073 = OpIMul %uint %4071 %4072
       %4074 = OpCompositeExtract %uint %4070 0
       %4075 = OpIAdd %uint %4074 %4073
       %4076 = OpIMul %uint %4072 %4075
       %4077 = OpIAdd %uint %4071 %4076
       %4078 = OpIMul %uint %4075 %4077
       %4079 = OpIAdd %uint %4072 %4078
       %4080 = OpIMul %uint %4077 %4079
       %4081 = OpIAdd %uint %4075 %4080
       %4082 = OpCompositeInsert %v3uint %4081 %538 0
       %4083 = OpShiftRightLogical %v3uint %4082 %3932
       %4084 = OpCompositeExtract %uint %4083 0
       %4085 = OpCompositeConstruct %v3uint %4084 %4084 %4084
       %4086 = OpBitwiseAnd %v3uint %4085 %381
       %4087 = OpConvertUToF %v3float %4086
       %4088 = OpExtInst %v3float %1 Fma %4087 %385 %276
       %4089 = OpDot %float %4088 %4066
       %4090 = OpConvertFToS %int %3914
       %4091 = OpFSub %v3float %3905 %125
       %4092 = OpCompositeConstruct %v3int %4090 %int_0 %int_0
       %4093 = OpBitcast %v3uint %4092
       %4094 = OpIMul %v3uint %4093 %396
       %4095 = OpIAdd %v3uint %4094 %398
       %4096 = OpCompositeExtract %uint %4095 1
       %4097 = OpCompositeExtract %uint %4095 2
       %4098 = OpIMul %uint %4096 %4097
       %4099 = OpCompositeExtract %uint %4095 0
       %4100 = OpIAdd %uint %4099 %4098
       %4101 = OpIMul %uint %4097 %4100
       %4102 = OpIAdd %uint %4096 %4101
       %4103 = OpIMul %uint %4100 %4102
       %4104 = OpIAdd %uint %4097 %4103
       %4105 = OpIMul %uint %4102 %4104
       %4106 = OpIAdd %uint %4100 %4105
       %4107 = OpCompositeInsert %v3uint %4106 %538 0
       %4108 = OpShiftRightLogical %v3uint %4107 %3932
       %4109 = OpCompositeExtract %uint %4108 0
       %4110 = OpCompositeConstruct %v3uint %4109 %4109 %4109
       %4111 = OpBitwiseAnd %v3uint %4110 %381
       %4112 = OpConvertUToF %v3float %4111
       %4113 = OpExtInst %v3float %1 Fma %4112 %385 %276
       %4114 = OpDot %float %4113 %4091
       %4115 = OpCompositeExtract %float %3905 0
       %4116 = OpCompositeExtract %float %3905 1
       %4117 = OpCompositeExtract %float %3905 2
       %4118 = OpCompositeConstruct %v4float %4115 %4116 %4117 %float_0
       %4119 = OpFMul %v4float %4118 %4118
       %4120 = OpFMul %v4float %4119 %4118
       %4121 = OpVectorTimesScalar %v4float %4118 %float_6
       %4122 = OpFSub %v4float %4121 %376
       %4123 = OpExtInst %v4float %1 Fma %4118 %4122 %377
       %4124 = OpFMul %v4float %4120 %4123
       %4125 = OpCompositeExtract %float %4124 0
       %4126 = OpExtInst %float %1 FMix %3939 %3964 %4125
       %4127 = OpExtInst %float %1 FMix %3989 %4014 %4125
       %4128 = OpCompositeExtract %float %4124 1
       %4129 = OpExtInst %float %1 FMix %4126 %4127 %4128
       %4130 = OpExtInst %float %1 FMix %4039 %4064 %4125
       %4131 = OpExtInst %float %1 FMix %4089 %4114 %4125
       %4132 = OpExtInst %float %1 FMix %4130 %4131 %4128
       %4133 = OpCompositeExtract %float %4124 2
       %4134 = OpExtInst %float %1 FMix %4129 %4132 %4133
       %4135 = OpExtInst %float %1 FAbs %4134
       %3900 = OpExtInst %float %1 Fma %4135 %3897 %3899
       %3895 = OpVectorTimesScalar %v3float %3894 %float_2
       %3898 = OpFMul %float %3897 %float_0_5
       %3902 = OpIAdd %uint %3901 %uint_1
               OpBranch %3893
       %3904 = OpLabel
       %4136 = OpExtInst %float %1 FMix %float_0 %float_1 %3899
       %4137 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_65 %int_2
       %4138 = OpLoad %float %4137
       %4139 = OpCompositeConstruct %v3float %4138 %4138 %4138
       %4140 = OpFMul %v3float %579 %4139
       %4141 = OpFMul %v3float %4139 %630
       %4142 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_65 %int_3
       %4143 = OpLoad %float %4142
       %4144 = OpCompositeConstruct %v3float %4143 %4143 %4143
       %4145 = OpFMul %v3float %4140 %4144
       %4146 = OpFMul %v3float %4141 %4144
       %4147 = OpFMul %v3float %4146 %3574
       %4148 = OpCompositeExtract %float %4147 0
       %4149 = OpCompositeExtract %float %4147 1
       %4150 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_66 %int_1
       %4151 = OpLoad %float %4150
       %4152 = OpFMul %float %1149 %4151
       %4153 = OpCompositeExtract %float %4147 2
       %4154 = OpCompositeConstruct %v2float %4152 %4152
       %4155 = OpCompositeConstruct %v2float %4153 %4153
       %4156 = OpFAdd %v2float %4154 %4155
       %4157 = OpCompositeExtract %float %4156 0
       %4158 = OpCompositeConstruct %v3float %4148 %4149 %4157
       %4159 = OpVectorTimesScalar %v3float %4158 %float_4_76837158en07
       %4160 = OpFAdd %v3float %4159 %135
       %4161 = OpExtInst %v3float %1 Fma %4145 %3574 %4160
       %4162 = OpExtInst %v3float %1 Floor %4161
       %4163 = OpFNegate %v3float %4162
       %4164 = OpExtInst %v3float %1 Fma %4145 %3574 %4163
       %4165 = OpVectorTimesScalar %v3float %4164 %float_2097152
       %4166 = OpFAdd %v3float %4165 %4158
       %4167 = OpVectorTimesScalar %v3float %4166 %float_1
               OpBranch %4168
       %4168 = OpLabel
       %4169 = OpPhi %v3float %4167 %3904 %4170 %4171
       %4172 = OpPhi %float %float_1 %3904 %4173 %4171
       %4174 = OpPhi %float %float_0 %3904 %4175 %4171
       %4176 = OpPhi %uint %uint_0 %3904 %4177 %4171
       %4178 = OpULessThan %bool %4176 %uint_10
               OpLoopMerge %4179 %4171 DontUnroll
               OpBranchConditional %4178 %4171 %4179
       %4171 = OpLabel
       %4180 = OpExtInst %v3float %1 Fract %4169
       %4181 = OpExtInst %v3float %1 Floor %4169
       %4182 = OpDot %float %4181 %380
       %4183 = OpFAdd %float %4182 %float_19
       %4184 = OpFAdd %float %4182 %float_47
       %4185 = OpFAdd %float %4182 %float_66
       %4186 = OpFAdd %float %4182 %float_101
       %4187 = OpFAdd %float %4182 %float_120
       %4188 = OpFAdd %float %4182 %float_148
       %4189 = OpFAdd %float %4182 %float_167
       %4190 = OpConvertFToS %int %4182
       %4191 = OpCompositeConstruct %v3int %4190 %int_0 %int_0
       %4192 = OpBitcast %v3uint %4191
       %4193 = OpIMul %v3uint %4192 %396
       %4194 = OpIAdd %v3uint %4193 %398
       %4195 = OpCompositeExtract %uint %4194 1
       %4196 = OpCompositeExtract %uint %4194 2
       %4197 = OpIMul %uint %4195 %4196
       %4198 = OpCompositeExtract %uint %4194 0
       %4199 = OpIAdd %uint %4198 %4197
       %4200 = OpIMul %uint %4196 %4199
       %4201 = OpIAdd %uint %4195 %4200
       %4202 = OpIMul %uint %4199 %4201
       %4203 = OpIAdd %uint %4196 %4202
       %4204 = OpIMul %uint %4201 %4203
       %4205 = OpIAdd %uint %4199 %4204
       %4206 = OpCompositeInsert %v3uint %4205 %538 0
       %4207 = OpBitwiseAnd %v3uint %399 %400
       %4208 = OpShiftRightLogical %v3uint %4206 %4207
       %4209 = OpCompositeExtract %uint %4208 0
       %4210 = OpCompositeConstruct %v3uint %4209 %4209 %4209
       %4211 = OpBitwiseAnd %v3uint %4210 %381
       %4212 = OpConvertUToF %v3float %4211
       %4213 = OpExtInst %v3float %1 Fma %4212 %385 %276
       %4214 = OpDot %float %4213 %4180
       %4215 = OpConvertFToS %int %4183
       %4216 = OpFSub %v3float %4180 %344
       %4217 = OpCompositeConstruct %v3int %4215 %int_0 %int_0
       %4218 = OpBitcast %v3uint %4217
       %4219 = OpIMul %v3uint %4218 %396
       %4220 = OpIAdd %v3uint %4219 %398
       %4221 = OpCompositeExtract %uint %4220 1
       %4222 = OpCompositeExtract %uint %4220 2
       %4223 = OpIMul %uint %4221 %4222
       %4224 = OpCompositeExtract %uint %4220 0
       %4225 = OpIAdd %uint %4224 %4223
       %4226 = OpIMul %uint %4222 %4225
       %4227 = OpIAdd %uint %4221 %4226
       %4228 = OpIMul %uint %4225 %4227
       %4229 = OpIAdd %uint %4222 %4228
       %4230 = OpIMul %uint %4227 %4229
       %4231 = OpIAdd %uint %4225 %4230
       %4232 = OpCompositeInsert %v3uint %4231 %538 0
       %4233 = OpShiftRightLogical %v3uint %4232 %4207
       %4234 = OpCompositeExtract %uint %4233 0
       %4235 = OpCompositeConstruct %v3uint %4234 %4234 %4234
       %4236 = OpBitwiseAnd %v3uint %4235 %381
       %4237 = OpConvertUToF %v3float %4236
       %4238 = OpExtInst %v3float %1 Fma %4237 %385 %276
       %4239 = OpDot %float %4238 %4216
       %4240 = OpConvertFToS %int %4184
       %4241 = OpFSub %v3float %4180 %345
       %4242 = OpCompositeConstruct %v3int %4240 %int_0 %int_0
       %4243 = OpBitcast %v3uint %4242
       %4244 = OpIMul %v3uint %4243 %396
       %4245 = OpIAdd %v3uint %4244 %398
       %4246 = OpCompositeExtract %uint %4245 1
       %4247 = OpCompositeExtract %uint %4245 2
       %4248 = OpIMul %uint %4246 %4247
       %4249 = OpCompositeExtract %uint %4245 0
       %4250 = OpIAdd %uint %4249 %4248
       %4251 = OpIMul %uint %4247 %4250
       %4252 = OpIAdd %uint %4246 %4251
       %4253 = OpIMul %uint %4250 %4252
       %4254 = OpIAdd %uint %4247 %4253
       %4255 = OpIMul %uint %4252 %4254
       %4256 = OpIAdd %uint %4250 %4255
       %4257 = OpCompositeInsert %v3uint %4256 %538 0
       %4258 = OpShiftRightLogical %v3uint %4257 %4207
       %4259 = OpCompositeExtract %uint %4258 0
       %4260 = OpCompositeConstruct %v3uint %4259 %4259 %4259
       %4261 = OpBitwiseAnd %v3uint %4260 %381
       %4262 = OpConvertUToF %v3float %4261
       %4263 = OpExtInst %v3float %1 Fma %4262 %385 %276
       %4264 = OpDot %float %4263 %4241
       %4265 = OpConvertFToS %int %4185
       %4266 = OpFSub %v3float %4180 %132
       %4267 = OpCompositeConstruct %v3int %4265 %int_0 %int_0
       %4268 = OpBitcast %v3uint %4267
       %4269 = OpIMul %v3uint %4268 %396
       %4270 = OpIAdd %v3uint %4269 %398
       %4271 = OpCompositeExtract %uint %4270 1
       %4272 = OpCompositeExtract %uint %4270 2
       %4273 = OpIMul %uint %4271 %4272
       %4274 = OpCompositeExtract %uint %4270 0
       %4275 = OpIAdd %uint %4274 %4273
       %4276 = OpIMul %uint %4272 %4275
       %4277 = OpIAdd %uint %4271 %4276
       %4278 = OpIMul %uint %4275 %4277
       %4279 = OpIAdd %uint %4272 %4278
       %4280 = OpIMul %uint %4277 %4279
       %4281 = OpIAdd %uint %4275 %4280
       %4282 = OpCompositeInsert %v3uint %4281 %538 0
       %4283 = OpShiftRightLogical %v3uint %4282 %4207
       %4284 = OpCompositeExtract %uint %4283 0
       %4285 = OpCompositeConstruct %v3uint %4284 %4284 %4284
       %4286 = OpBitwiseAnd %v3uint %4285 %381
       %4287 = OpConvertUToF %v3float %4286
       %4288 = OpExtInst %v3float %1 Fma %4287 %385 %276
       %4289 = OpDot %float %4288 %4266
       %4290 = OpConvertFToS %int %4186
       %4291 = OpFSub %v3float %4180 %288
       %4292 = OpCompositeConstruct %v3int %4290 %int_0 %int_0
       %4293 = OpBitcast %v3uint %4292
       %4294 = OpIMul %v3uint %4293 %396
       %4295 = OpIAdd %v3uint %4294 %398
       %4296 = OpCompositeExtract %uint %4295 1
       %4297 = OpCompositeExtract %uint %4295 2
       %4298 = OpIMul %uint %4296 %4297
       %4299 = OpCompositeExtract %uint %4295 0
       %4300 = OpIAdd %uint %4299 %4298
       %4301 = OpIMul %uint %4297 %4300
       %4302 = OpIAdd %uint %4296 %4301
       %4303 = OpIMul %uint %4300 %4302
       %4304 = OpIAdd %uint %4297 %4303
       %4305 = OpIMul %uint %4302 %4304
       %4306 = OpIAdd %uint %4300 %4305
       %4307 = OpCompositeInsert %v3uint %4306 %538 0
       %4308 = OpShiftRightLogical %v3uint %4307 %4207
       %4309 = OpCompositeExtract %uint %4308 0
       %4310 = OpCompositeConstruct %v3uint %4309 %4309 %4309
       %4311 = OpBitwiseAnd %v3uint %4310 %381
       %4312 = OpConvertUToF %v3float %4311
       %4313 = OpExtInst %v3float %1 Fma %4312 %385 %276
       %4314 = OpDot %float %4313 %4291
       %4315 = OpConvertFToS %int %4187
       %4316 = OpFSub %v3float %4180 %137
       %4317 = OpCompositeConstruct %v3int %4315 %int_0 %int_0
       %4318 = OpBitcast %v3uint %4317
       %4319 = OpIMul %v3uint %4318 %396
       %4320 = OpIAdd %v3uint %4319 %398
       %4321 = OpCompositeExtract %uint %4320 1
       %4322 = OpCompositeExtract %uint %4320 2
       %4323 = OpIMul %uint %4321 %4322
       %4324 = OpCompositeExtract %uint %4320 0
       %4325 = OpIAdd %uint %4324 %4323
       %4326 = OpIMul %uint %4322 %4325
       %4327 = OpIAdd %uint %4321 %4326
       %4328 = OpIMul %uint %4325 %4327
       %4329 = OpIAdd %uint %4322 %4328
       %4330 = OpIMul %uint %4327 %4329
       %4331 = OpIAdd %uint %4325 %4330
       %4332 = OpCompositeInsert %v3uint %4331 %538 0
       %4333 = OpShiftRightLogical %v3uint %4332 %4207
       %4334 = OpCompositeExtract %uint %4333 0
       %4335 = OpCompositeConstruct %v3uint %4334 %4334 %4334
       %4336 = OpBitwiseAnd %v3uint %4335 %381
       %4337 = OpConvertUToF %v3float %4336
       %4338 = OpExtInst %v3float %1 Fma %4337 %385 %276
       %4339 = OpDot %float %4338 %4316
       %4340 = OpConvertFToS %int %4188
       %4341 = OpFSub %v3float %4180 %133
       %4342 = OpCompositeConstruct %v3int %4340 %int_0 %int_0
       %4343 = OpBitcast %v3uint %4342
       %4344 = OpIMul %v3uint %4343 %396
       %4345 = OpIAdd %v3uint %4344 %398
       %4346 = OpCompositeExtract %uint %4345 1
       %4347 = OpCompositeExtract %uint %4345 2
       %4348 = OpIMul %uint %4346 %4347
       %4349 = OpCompositeExtract %uint %4345 0
       %4350 = OpIAdd %uint %4349 %4348
       %4351 = OpIMul %uint %4347 %4350
       %4352 = OpIAdd %uint %4346 %4351
       %4353 = OpIMul %uint %4350 %4352
       %4354 = OpIAdd %uint %4347 %4353
       %4355 = OpIMul %uint %4352 %4354
       %4356 = OpIAdd %uint %4350 %4355
       %4357 = OpCompositeInsert %v3uint %4356 %538 0
       %4358 = OpShiftRightLogical %v3uint %4357 %4207
       %4359 = OpCompositeExtract %uint %4358 0
       %4360 = OpCompositeConstruct %v3uint %4359 %4359 %4359
       %4361 = OpBitwiseAnd %v3uint %4360 %381
       %4362 = OpConvertUToF %v3float %4361
       %4363 = OpExtInst %v3float %1 Fma %4362 %385 %276
       %4364 = OpDot %float %4363 %4341
       %4365 = OpConvertFToS %int %4189
       %4366 = OpFSub %v3float %4180 %125
       %4367 = OpCompositeConstruct %v3int %4365 %int_0 %int_0
       %4368 = OpBitcast %v3uint %4367
       %4369 = OpIMul %v3uint %4368 %396
       %4370 = OpIAdd %v3uint %4369 %398
       %4371 = OpCompositeExtract %uint %4370 1
       %4372 = OpCompositeExtract %uint %4370 2
       %4373 = OpIMul %uint %4371 %4372
       %4374 = OpCompositeExtract %uint %4370 0
       %4375 = OpIAdd %uint %4374 %4373
       %4376 = OpIMul %uint %4372 %4375
       %4377 = OpIAdd %uint %4371 %4376
       %4378 = OpIMul %uint %4375 %4377
       %4379 = OpIAdd %uint %4372 %4378
       %4380 = OpIMul %uint %4377 %4379
       %4381 = OpIAdd %uint %4375 %4380
       %4382 = OpCompositeInsert %v3uint %4381 %538 0
       %4383 = OpShiftRightLogical %v3uint %4382 %4207
       %4384 = OpCompositeExtract %uint %4383 0
       %4385 = OpCompositeConstruct %v3uint %4384 %4384 %4384
       %4386 = OpBitwiseAnd %v3uint %4385 %381
       %4387 = OpConvertUToF %v3float %4386
       %4388 = OpExtInst %v3float %1 Fma %4387 %385 %276
       %4389 = OpDot %float %4388 %4366
       %4390 = OpCompositeExtract %float %4180 0
       %4391 = OpCompositeExtract %float %4180 1
       %4392 = OpCompositeExtract %float %4180 2
       %4393 = OpCompositeConstruct %v4float %4390 %4391 %4392 %float_0
       %4394 = OpFMul %v4float %4393 %4393
       %4395 = OpFMul %v4float %4394 %4393
       %4396 = OpVectorTimesScalar %v4float %4393 %float_6
       %4397 = OpFSub %v4float %4396 %376
       %4398 = OpExtInst %v4float %1 Fma %4393 %4397 %377
       %4399 = OpFMul %v4float %4395 %4398
       %4400 = OpCompositeExtract %float %4399 0
       %4401 = OpExtInst %float %1 FMix %4214 %4239 %4400
       %4402 = OpExtInst %float %1 FMix %4264 %4289 %4400
       %4403 = OpCompositeExtract %float %4399 1
       %4404 = OpExtInst %float %1 FMix %4401 %4402 %4403
       %4405 = OpExtInst %float %1 FMix %4314 %4339 %4400
       %4406 = OpExtInst %float %1 FMix %4364 %4389 %4400
       %4407 = OpExtInst %float %1 FMix %4405 %4406 %4403
       %4408 = OpCompositeExtract %float %4399 2
       %4409 = OpExtInst %float %1 FMix %4404 %4407 %4408
       %4410 = OpExtInst %float %1 FAbs %4409
       %4175 = OpExtInst %float %1 Fma %4410 %4172 %4174
       %4170 = OpVectorTimesScalar %v3float %4169 %float_2
       %4173 = OpFMul %float %4172 %float_0_5
       %4177 = OpIAdd %uint %4176 %uint_1
               OpBranch %4168
       %4179 = OpLabel
       %4411 = OpExtInst %float %1 FMix %float_0 %float_1 %4174
       %4412 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_66 %int_3
       %4413 = OpLoad %float %4412
       %4414 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_66 %int_2
       %4415 = OpLoad %float %4414
       %4416 = OpExtInst %float %1 Fma %4411 %4413 %4415
       %4417 = OpFMul %float %4136 %4416
       %4418 = OpExtInst %float %1 FMix %3856 %3861 %4417
       %4419 = OpExtInst %float %1 Sin %3853
       %4420 = OpFMul %float %4419 %4418
       %4421 = OpFAdd %v3float %3537 %2549
       %4422 = OpExtInst %v3float %1 NMax %4421 %276
       %4423 = OpExtInst %v3float %1 NMin %4422 %125
       %4424 = OpCompositeExtract %float %4423 0
       %4425 = OpCompositeExtract %float %4423 1
       %4426 = OpCompositeConstruct %v2float %4424 %4425
       %4427 = OpFMul %v2float %1684 %4426
       %4428 = OpFMul %v2float %4426 %1685
       %4429 = OpCompositeExtract %float %4427 0
       %4430 = OpCompositeExtract %float %4428 0
       %4431 = OpCompositeExtract %float %4427 1
       %4432 = OpCompositeExtract %float %4428 1
       %4433 = OpFAdd %float %4429 %4431
       %4434 = OpFAdd %float %4430 %4432
       %4435 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_20 %int_3
       %4436 = OpLoad %float %4435
       %4437 = OpFMul %float %3557 %4436
       %4438 = OpFDiv %float %float_2 %4437
       %4439 = OpFMul %float %4433 %4438
       %4440 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_1
       %4441 = OpLoad %float %4440
       %4442 = OpFMul %float %4438 %4441
       %4443 = OpFMul %float %4442 %3841
       %4444 = OpExtInst %float %1 Fma %4434 %4438 %4443
       %4445 = OpExtInst %float %1 Floor %4439
       %4446 = OpFNegate %float %4445
       %4447 = OpExtInst %float %1 Fma %4433 %4438 %4446
       %4448 = OpExtInst %float %1 Fma %4447 %float_2097152 %4444
       %4449 = OpExtInst %float %1 Floor %4448
       %4450 = OpFMul %float %4445 %float_n6_28318548
       %4451 = OpExtInst %float %1 Fma %4439 %float_6_28318548 %4450
       %4452 = OpFMul %float %4449 %float_n6_28318548
       %4453 = OpExtInst %float %1 Fma %4444 %float_6_28318548 %4452
       %4454 = OpExtInst %float %1 Fma %4451 %float_2097152 %4453
       %4455 = OpFMul %float %4418 %2582
       %4456 = OpExtInst %float %1 Sin %4454
       %4457 = OpFMul %float %4456 %4455
       %4458 = OpCompositeConstruct %v3float %537 %537 %4420
       %4459 = OpCompositeConstruct %v3float %537 %537 %4457
       %4460 = OpFAdd %v3float %4458 %4459
       %4461 = OpFSub %v3float %3537 %1676
       %4462 = OpExtInst %v3float %1 NMax %4461 %276
       %4463 = OpExtInst %v3float %1 NMin %4462 %125
       %4464 = OpCompositeExtract %float %4463 0
       %4465 = OpCompositeExtract %float %4463 1
       %4466 = OpCompositeConstruct %v2float %4464 %4465
       %4467 = OpFMul %v2float %1684 %4466
       %4468 = OpFMul %v2float %4466 %1685
       %4469 = OpCompositeExtract %float %4467 0
       %4470 = OpCompositeExtract %float %4468 0
       %4471 = OpCompositeExtract %float %4467 1
       %4472 = OpCompositeExtract %float %4468 1
       %4473 = OpFAdd %float %4469 %4471
       %4474 = OpFAdd %float %4470 %4472
       %4475 = OpFMul %float %4437 %4436
       %4476 = OpFDiv %float %float_2 %4475
       %4477 = OpFMul %float %4473 %4476
       %4478 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_3
       %4479 = OpLoad %float %4478
       %4480 = OpFMul %float %4476 %4479
       %4481 = OpFMul %float %4480 %3841
       %4482 = OpExtInst %float %1 Fma %4474 %4476 %4481
       %4483 = OpExtInst %float %1 Floor %4477
       %4484 = OpFNegate %float %4483
       %4485 = OpExtInst %float %1 Fma %4473 %4476 %4484
       %4486 = OpExtInst %float %1 Fma %4485 %float_2097152 %4482
       %4487 = OpExtInst %float %1 Floor %4486
       %4488 = OpFMul %float %4483 %float_n6_28318548
       %4489 = OpExtInst %float %1 Fma %4477 %float_6_28318548 %4488
       %4490 = OpFMul %float %4487 %float_n6_28318548
       %4491 = OpExtInst %float %1 Fma %4482 %float_6_28318548 %4490
       %4492 = OpExtInst %float %1 Fma %4489 %float_2097152 %4491
       %4493 = OpFMul %float %4455 %2582
       %4494 = OpExtInst %float %1 Sin %4492
       %4495 = OpFMul %float %4494 %4493
       %4496 = OpCompositeConstruct %v3float %537 %537 %4495
       %4497 = OpFAdd %v3float %4460 %4496
       %4498 = OpFSub %v3float %3537 %2549
       %4499 = OpExtInst %v3float %1 NMax %4498 %276
       %4500 = OpExtInst %v3float %1 NMin %4499 %125
       %4501 = OpCompositeExtract %float %4500 0
       %4502 = OpCompositeExtract %float %4500 1
       %4503 = OpCompositeConstruct %v2float %4501 %4502
       %4504 = OpFMul %v2float %1684 %4503
       %4505 = OpFMul %v2float %4503 %1685
       %4506 = OpCompositeExtract %float %4504 0
       %4507 = OpCompositeExtract %float %4505 0
       %4508 = OpCompositeExtract %float %4504 1
       %4509 = OpCompositeExtract %float %4505 1
       %4510 = OpFAdd %float %4506 %4508
       %4511 = OpFAdd %float %4507 %4509
       %4512 = OpFMul %float %4475 %4436
       %4513 = OpFDiv %float %float_2 %4512
       %4514 = OpFMul %float %4510 %4513
       %4515 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_1
       %4516 = OpLoad %float %4515
       %4517 = OpFMul %float %4513 %4516
       %4518 = OpFMul %float %4517 %3841
       %4519 = OpExtInst %float %1 Fma %4511 %4513 %4518
       %4520 = OpExtInst %float %1 Floor %4514
       %4521 = OpFNegate %float %4520
       %4522 = OpExtInst %float %1 Fma %4510 %4513 %4521
       %4523 = OpExtInst %float %1 Fma %4522 %float_2097152 %4519
       %4524 = OpExtInst %float %1 Floor %4523
       %4525 = OpFMul %float %4520 %float_n6_28318548
       %4526 = OpExtInst %float %1 Fma %4514 %float_6_28318548 %4525
       %4527 = OpFMul %float %4524 %float_n6_28318548
       %4528 = OpExtInst %float %1 Fma %4519 %float_6_28318548 %4527
       %4529 = OpExtInst %float %1 Fma %4526 %float_2097152 %4528
       %4530 = OpFMul %float %4493 %2582
       %4531 = OpExtInst %float %1 Sin %4529
       %4532 = OpFMul %float %4531 %4530
       %4533 = OpCompositeConstruct %v3float %537 %537 %4532
       %4534 = OpFAdd %v3float %4497 %4533
       %4535 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_69 %int_0
       %4536 = OpLoad %float %4535
       %4537 = OpFSub %float %4536 %float_n1
       %4538 = OpExtInst %float %1 FAbs %4537
       %4539 = OpFOrdGreaterThan %bool %4538 %float_9_99999975en06
       %4540 = OpFOrdGreaterThanEqual %bool %4536 %float_n1
       %4541 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_69 %int_1
       %4542 = OpLoad %float %4541
       %4543 = OpSelect %float %4540 %4536 %4542
       %4544 = OpSelect %float %4539 %4543 %4536
       %4545 = OpFSub %float %4544 %float_1
       %4546 = OpExtInst %float %1 FAbs %4545
       %4547 = OpFOrdGreaterThan %bool %4546 %float_9_99999975en06
       %4548 = OpFOrdGreaterThanEqual %bool %4544 %float_1
       %4549 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_69 %int_2
       %4550 = OpLoad %float %4549
       %4551 = OpSelect %float %4548 %4550 %4536
       %4552 = OpSelect %float %4547 %4551 %4536
       %4553 = OpExtInst %float %1 FAbs %4552
       %4554 = OpFOrdGreaterThan %bool %4553 %float_9_99999975en06
       %4555 = OpFOrdGreaterThanEqual %bool %4552 %float_0
       %4556 = OpSelect %float %4555 %float_1 %float_n1
       %4557 = OpSelect %float %4554 %4556 %float_1
       %4558 = OpExtInst %float %1 NMax %4557 %float_n1
       %4559 = OpExtInst %float %1 NMin %4558 %float_1
       %4560 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_70 %int_3
       %4561 = OpLoad %float %4560
       %4562 = OpCompositeConstruct %v3float %4559 %4561 %float_0
       %4563 = OpFAdd %v3float %4562 %1676
       %4564 = OpExtInst %v3float %1 NMax %4563 %276
       %4565 = OpExtInst %v3float %1 NMin %4564 %125
       %4566 = OpCompositeExtract %float %4565 0
       %4567 = OpCompositeExtract %float %4565 1
       %4568 = OpCompositeConstruct %v2float %4566 %4567
       %4569 = OpFMul %v2float %1684 %4568
       %4570 = OpFMul %v2float %4568 %1685
       %4571 = OpCompositeExtract %float %4569 0
       %4572 = OpCompositeExtract %float %4570 0
       %4573 = OpCompositeExtract %float %4569 1
       %4574 = OpCompositeExtract %float %4570 1
       %4575 = OpFAdd %float %4571 %4573
       %4576 = OpFAdd %float %4572 %4574
       %4577 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_28 %int_3
       %4578 = OpLoad %float %4577
       %4579 = OpFMul %float %3554 %4578
       %4580 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_0
       %4581 = OpLoad %float %4580
       %4582 = OpFMul %float %4581 %4579
       %4583 = OpFDiv %float %float_2 %4582
       %4584 = OpFMul %float %4575 %4583
       %4585 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_1
       %4586 = OpLoad %float %4585
       %4587 = OpFMul %float %4583 %4586
       %4588 = OpFMul %float %4587 %3841
       %4589 = OpExtInst %float %1 Fma %4576 %4583 %4588
       %4590 = OpExtInst %float %1 Floor %4584
       %4591 = OpFNegate %float %4590
       %4592 = OpExtInst %float %1 Fma %4575 %4583 %4591
       %4593 = OpExtInst %float %1 Fma %4592 %float_2097152 %4589
       %4594 = OpExtInst %float %1 Floor %4593
       %4595 = OpFMul %float %4590 %float_n6_28318548
       %4596 = OpExtInst %float %1 Fma %4584 %float_6_28318548 %4595
       %4597 = OpFMul %float %4594 %float_n6_28318548
       %4598 = OpExtInst %float %1 Fma %4589 %float_6_28318548 %4597
       %4599 = OpExtInst %float %1 Fma %4596 %float_2097152 %4598
       %4600 = OpFMul %float %4418 %2721
       %4601 = OpExtInst %float %1 Sin %4599
       %4602 = OpFMul %float %4601 %4600
       %4603 = OpFAdd %v3float %4562 %2549
       %4604 = OpExtInst %v3float %1 NMax %4603 %276
       %4605 = OpExtInst %v3float %1 NMin %4604 %125
       %4606 = OpCompositeExtract %float %4605 0
       %4607 = OpCompositeExtract %float %4605 1
       %4608 = OpCompositeConstruct %v2float %4606 %4607
       %4609 = OpFMul %v2float %1684 %4608
       %4610 = OpFMul %v2float %4608 %1685
       %4611 = OpCompositeExtract %float %4609 0
       %4612 = OpCompositeExtract %float %4610 0
       %4613 = OpCompositeExtract %float %4609 1
       %4614 = OpCompositeExtract %float %4610 1
       %4615 = OpFAdd %float %4611 %4613
       %4616 = OpFAdd %float %4612 %4614
       %4617 = OpFMul %float %4582 %4436
       %4618 = OpFDiv %float %float_2 %4617
       %4619 = OpFMul %float %4615 %4618
       %4620 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_2
       %4621 = OpLoad %float %4620
       %4622 = OpFMul %float %4618 %4621
       %4623 = OpFMul %float %4622 %3841
       %4624 = OpExtInst %float %1 Fma %4616 %4618 %4623
       %4625 = OpExtInst %float %1 Floor %4619
       %4626 = OpFNegate %float %4625
       %4627 = OpExtInst %float %1 Fma %4615 %4618 %4626
       %4628 = OpExtInst %float %1 Fma %4627 %float_2097152 %4624
       %4629 = OpExtInst %float %1 Floor %4628
       %4630 = OpFMul %float %4625 %float_n6_28318548
       %4631 = OpExtInst %float %1 Fma %4619 %float_6_28318548 %4630
       %4632 = OpFMul %float %4629 %float_n6_28318548
       %4633 = OpExtInst %float %1 Fma %4624 %float_6_28318548 %4632
       %4634 = OpExtInst %float %1 Fma %4631 %float_2097152 %4633
       %4635 = OpFMul %float %4600 %2582
       %4636 = OpExtInst %float %1 Sin %4634
       %4637 = OpFMul %float %4636 %4635
       %4638 = OpCompositeConstruct %v3float %537 %537 %4602
       %4639 = OpCompositeConstruct %v3float %537 %537 %4637
       %4640 = OpFAdd %v3float %4638 %4639
       %4641 = OpFSub %v3float %4562 %1676
       %4642 = OpExtInst %v3float %1 NMax %4641 %276
       %4643 = OpExtInst %v3float %1 NMin %4642 %125
       %4644 = OpCompositeExtract %float %4643 0
       %4645 = OpCompositeExtract %float %4643 1
       %4646 = OpCompositeConstruct %v2float %4644 %4645
       %4647 = OpFMul %v2float %1684 %4646
       %4648 = OpFMul %v2float %4646 %1685
       %4649 = OpCompositeExtract %float %4647 0
       %4650 = OpCompositeExtract %float %4648 0
       %4651 = OpCompositeExtract %float %4647 1
       %4652 = OpCompositeExtract %float %4648 1
       %4653 = OpFAdd %float %4649 %4651
       %4654 = OpFAdd %float %4650 %4652
       %4655 = OpFMul %float %4617 %4436
       %4656 = OpFDiv %float %float_2 %4655
       %4657 = OpFMul %float %4653 %4656
       %4658 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_3
       %4659 = OpLoad %float %4658
       %4660 = OpFMul %float %4656 %4659
       %4661 = OpFMul %float %4660 %3841
       %4662 = OpExtInst %float %1 Fma %4654 %4656 %4661
       %4663 = OpExtInst %float %1 Floor %4657
       %4664 = OpFNegate %float %4663
       %4665 = OpExtInst %float %1 Fma %4653 %4656 %4664
       %4666 = OpExtInst %float %1 Fma %4665 %float_2097152 %4662
       %4667 = OpExtInst %float %1 Floor %4666
       %4668 = OpFMul %float %4663 %float_n6_28318548
       %4669 = OpExtInst %float %1 Fma %4657 %float_6_28318548 %4668
       %4670 = OpFMul %float %4667 %float_n6_28318548
       %4671 = OpExtInst %float %1 Fma %4662 %float_6_28318548 %4670
       %4672 = OpExtInst %float %1 Fma %4669 %float_2097152 %4671
       %4673 = OpFMul %float %4635 %2582
       %4674 = OpExtInst %float %1 Sin %4672
       %4675 = OpFMul %float %4674 %4673
       %4676 = OpCompositeConstruct %v3float %537 %537 %4675
       %4677 = OpFAdd %v3float %4640 %4676
       %4678 = OpFSub %v3float %4562 %2549
       %4679 = OpExtInst %v3float %1 NMax %4678 %276
       %4680 = OpExtInst %v3float %1 NMin %4679 %125
       %4681 = OpCompositeExtract %float %4680 0
       %4682 = OpCompositeExtract %float %4680 1
       %4683 = OpCompositeConstruct %v2float %4681 %4682
       %4684 = OpFMul %v2float %1684 %4683
       %4685 = OpFMul %v2float %4683 %1685
       %4686 = OpCompositeExtract %float %4684 0
       %4687 = OpCompositeExtract %float %4685 0
       %4688 = OpCompositeExtract %float %4684 1
       %4689 = OpCompositeExtract %float %4685 1
       %4690 = OpFAdd %float %4686 %4688
       %4691 = OpFAdd %float %4687 %4689
       %4692 = OpFMul %float %4655 %4436
       %4693 = OpFDiv %float %float_2 %4692
       %4694 = OpFMul %float %4690 %4693
       %4695 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_0
       %4696 = OpLoad %float %4695
       %4697 = OpFMul %float %4693 %4696
       %4698 = OpFMul %float %4697 %3841
       %4699 = OpExtInst %float %1 Fma %4691 %4693 %4698
       %4700 = OpExtInst %float %1 Floor %4694
       %4701 = OpFNegate %float %4700
       %4702 = OpExtInst %float %1 Fma %4690 %4693 %4701
       %4703 = OpExtInst %float %1 Fma %4702 %float_2097152 %4699
       %4704 = OpExtInst %float %1 Floor %4703
       %4705 = OpFMul %float %4700 %float_n6_28318548
       %4706 = OpExtInst %float %1 Fma %4694 %float_6_28318548 %4705
       %4707 = OpFMul %float %4704 %float_n6_28318548
       %4708 = OpExtInst %float %1 Fma %4699 %float_6_28318548 %4707
       %4709 = OpExtInst %float %1 Fma %4706 %float_2097152 %4708
       %4710 = OpFMul %float %4673 %2582
       %4711 = OpExtInst %float %1 Sin %4709
       %4712 = OpFMul %float %4711 %4710
       %4713 = OpCompositeConstruct %v3float %537 %537 %4712
       %4714 = OpFAdd %v3float %4677 %4713
       %4715 = OpFAdd %v3float %4534 %4714
       %4716 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_1
       %4717 = OpLoad %float %4716
       %4718 = OpFSub %float %4717 %float_n1
       %4719 = OpExtInst %float %1 FAbs %4718
       %4720 = OpFOrdGreaterThan %bool %4719 %float_9_99999975en06
       %4721 = OpFOrdGreaterThanEqual %bool %4717 %float_n1
       %4722 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_2
       %4723 = OpLoad %float %4722
       %4724 = OpSelect %float %4721 %4717 %4723
       %4725 = OpSelect %float %4720 %4724 %4717
       %4726 = OpFSub %float %4725 %float_1
       %4727 = OpExtInst %float %1 FAbs %4726
       %4728 = OpFOrdGreaterThan %bool %4727 %float_9_99999975en06
       %4729 = OpFOrdGreaterThanEqual %bool %4725 %float_1
       %4730 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_3
       %4731 = OpLoad %float %4730
       %4732 = OpSelect %float %4729 %4731 %4717
       %4733 = OpSelect %float %4728 %4732 %4717
       %4734 = OpExtInst %float %1 FAbs %4733
       %4735 = OpFOrdGreaterThan %bool %4734 %float_9_99999975en06
       %4736 = OpFOrdGreaterThanEqual %bool %4733 %float_0
       %4737 = OpSelect %float %4736 %float_1 %float_n1
       %4738 = OpSelect %float %4735 %4737 %float_1
       %4739 = OpExtInst %float %1 NMax %4738 %float_n1
       %4740 = OpExtInst %float %1 NMin %4739 %float_1
       %4741 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_0
       %4742 = OpLoad %float %4741
       %4743 = OpCompositeConstruct %v3float %4740 %4742 %float_0
       %4744 = OpFAdd %v3float %4743 %1676
       %4745 = OpExtInst %v3float %1 NMax %4744 %276
       %4746 = OpExtInst %v3float %1 NMin %4745 %125
       %4747 = OpCompositeExtract %float %4746 0
       %4748 = OpCompositeExtract %float %4746 1
       %4749 = OpCompositeConstruct %v2float %4747 %4748
       %4750 = OpFMul %v2float %1684 %4749
       %4751 = OpFMul %v2float %4749 %1685
       %4752 = OpCompositeExtract %float %4750 0
       %4753 = OpCompositeExtract %float %4751 0
       %4754 = OpCompositeExtract %float %4750 1
       %4755 = OpCompositeExtract %float %4751 1
       %4756 = OpFAdd %float %4752 %4754
       %4757 = OpFAdd %float %4753 %4755
       %4758 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_76 %int_1
       %4759 = OpLoad %float %4758
       %4760 = OpFMul %float %4759 %4579
       %4761 = OpFDiv %float %float_2 %4760
       %4762 = OpFMul %float %4756 %4761
       %4763 = OpFMul %float %4761 %4586
       %4764 = OpFMul %float %4763 %3841
       %4765 = OpExtInst %float %1 Fma %4757 %4761 %4764
       %4766 = OpExtInst %float %1 Floor %4762
       %4767 = OpFNegate %float %4766
       %4768 = OpExtInst %float %1 Fma %4756 %4761 %4767
       %4769 = OpExtInst %float %1 Fma %4768 %float_2097152 %4765
       %4770 = OpExtInst %float %1 Floor %4769
       %4771 = OpFMul %float %4766 %float_n6_28318548
       %4772 = OpExtInst %float %1 Fma %4762 %float_6_28318548 %4771
       %4773 = OpFMul %float %4770 %float_n6_28318548
       %4774 = OpExtInst %float %1 Fma %4765 %float_6_28318548 %4773
       %4775 = OpExtInst %float %1 Fma %4772 %float_2097152 %4774
       %4776 = OpExtInst %float %1 Sin %4775
       %4777 = OpFMul %float %4776 %4600
       %4778 = OpFAdd %v3float %4743 %2549
       %4779 = OpExtInst %v3float %1 NMax %4778 %276
       %4780 = OpExtInst %v3float %1 NMin %4779 %125
       %4781 = OpCompositeExtract %float %4780 0
       %4782 = OpCompositeExtract %float %4780 1
       %4783 = OpCompositeConstruct %v2float %4781 %4782
       %4784 = OpFMul %v2float %1684 %4783
       %4785 = OpFMul %v2float %4783 %1685
       %4786 = OpCompositeExtract %float %4784 0
       %4787 = OpCompositeExtract %float %4785 0
       %4788 = OpCompositeExtract %float %4784 1
       %4789 = OpCompositeExtract %float %4785 1
       %4790 = OpFAdd %float %4786 %4788
       %4791 = OpFAdd %float %4787 %4789
       %4792 = OpFMul %float %4760 %4436
       %4793 = OpFDiv %float %float_2 %4792
       %4794 = OpFMul %float %4790 %4793
       %4795 = OpFMul %float %4793 %4621
       %4796 = OpFMul %float %4795 %3841
       %4797 = OpExtInst %float %1 Fma %4791 %4793 %4796
       %4798 = OpExtInst %float %1 Floor %4794
       %4799 = OpFNegate %float %4798
       %4800 = OpExtInst %float %1 Fma %4790 %4793 %4799
       %4801 = OpExtInst %float %1 Fma %4800 %float_2097152 %4797
       %4802 = OpExtInst %float %1 Floor %4801
       %4803 = OpFMul %float %4798 %float_n6_28318548
       %4804 = OpExtInst %float %1 Fma %4794 %float_6_28318548 %4803
       %4805 = OpFMul %float %4802 %float_n6_28318548
       %4806 = OpExtInst %float %1 Fma %4797 %float_6_28318548 %4805
       %4807 = OpExtInst %float %1 Fma %4804 %float_2097152 %4806
       %4808 = OpExtInst %float %1 Sin %4807
       %4809 = OpFMul %float %4808 %4635
       %4810 = OpCompositeConstruct %v3float %537 %537 %4777
       %4811 = OpCompositeConstruct %v3float %537 %537 %4809
       %4812 = OpFAdd %v3float %4810 %4811
       %4813 = OpFSub %v3float %4743 %1676
       %4814 = OpExtInst %v3float %1 NMax %4813 %276
       %4815 = OpExtInst %v3float %1 NMin %4814 %125
       %4816 = OpCompositeExtract %float %4815 0
       %4817 = OpCompositeExtract %float %4815 1
       %4818 = OpCompositeConstruct %v2float %4816 %4817
       %4819 = OpFMul %v2float %1684 %4818
       %4820 = OpFMul %v2float %4818 %1685
       %4821 = OpCompositeExtract %float %4819 0
       %4822 = OpCompositeExtract %float %4820 0
       %4823 = OpCompositeExtract %float %4819 1
       %4824 = OpCompositeExtract %float %4820 1
       %4825 = OpFAdd %float %4821 %4823
       %4826 = OpFAdd %float %4822 %4824
       %4827 = OpFMul %float %4792 %4436
       %4828 = OpFDiv %float %float_2 %4827
       %4829 = OpFMul %float %4825 %4828
       %4830 = OpFMul %float %4828 %4659
       %4831 = OpFMul %float %4830 %3841
       %4832 = OpExtInst %float %1 Fma %4826 %4828 %4831
       %4833 = OpExtInst %float %1 Floor %4829
       %4834 = OpFNegate %float %4833
       %4835 = OpExtInst %float %1 Fma %4825 %4828 %4834
       %4836 = OpExtInst %float %1 Fma %4835 %float_2097152 %4832
       %4837 = OpExtInst %float %1 Floor %4836
       %4838 = OpFMul %float %4833 %float_n6_28318548
       %4839 = OpExtInst %float %1 Fma %4829 %float_6_28318548 %4838
       %4840 = OpFMul %float %4837 %float_n6_28318548
       %4841 = OpExtInst %float %1 Fma %4832 %float_6_28318548 %4840
       %4842 = OpExtInst %float %1 Fma %4839 %float_2097152 %4841
       %4843 = OpExtInst %float %1 Sin %4842
       %4844 = OpFMul %float %4843 %4673
       %4845 = OpCompositeConstruct %v3float %537 %537 %4844
       %4846 = OpFAdd %v3float %4812 %4845
       %4847 = OpFSub %v3float %4743 %2549
       %4848 = OpExtInst %v3float %1 NMax %4847 %276
       %4849 = OpExtInst %v3float %1 NMin %4848 %125
       %4850 = OpCompositeExtract %float %4849 0
       %4851 = OpCompositeExtract %float %4849 1
       %4852 = OpCompositeConstruct %v2float %4850 %4851
       %4853 = OpFMul %v2float %1684 %4852
       %4854 = OpFMul %v2float %4852 %1685
       %4855 = OpCompositeExtract %float %4853 0
       %4856 = OpCompositeExtract %float %4854 0
       %4857 = OpCompositeExtract %float %4853 1
       %4858 = OpCompositeExtract %float %4854 1
       %4859 = OpFAdd %float %4855 %4857
       %4860 = OpFAdd %float %4856 %4858
       %4861 = OpFMul %float %4827 %4436
       %4862 = OpFDiv %float %float_2 %4861
       %4863 = OpFMul %float %4859 %4862
       %4864 = OpFMul %float %4862 %4696
       %4865 = OpFMul %float %4864 %3841
       %4866 = OpExtInst %float %1 Fma %4860 %4862 %4865
       %4867 = OpExtInst %float %1 Floor %4863
       %4868 = OpFNegate %float %4867
       %4869 = OpExtInst %float %1 Fma %4859 %4862 %4868
       %4870 = OpExtInst %float %1 Fma %4869 %float_2097152 %4866
       %4871 = OpExtInst %float %1 Floor %4870
       %4872 = OpFMul %float %4867 %float_n6_28318548
       %4873 = OpExtInst %float %1 Fma %4863 %float_6_28318548 %4872
       %4874 = OpFMul %float %4871 %float_n6_28318548
       %4875 = OpExtInst %float %1 Fma %4866 %float_6_28318548 %4874
       %4876 = OpExtInst %float %1 Fma %4873 %float_2097152 %4875
       %4877 = OpExtInst %float %1 Sin %4876
       %4878 = OpFMul %float %4877 %4710
       %4879 = OpCompositeConstruct %v3float %537 %537 %4878
       %4880 = OpFAdd %v3float %4846 %4879
       %4881 = OpFAdd %v3float %4715 %4880
       %4882 = OpFMul %float %3554 %float_0_800000012
       %4883 = OpFMul %float %3556 %4882
       %4884 = OpFDiv %float %float_2 %4883
       %4885 = OpFMul %float %3550 %4884
       %4886 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_76 %int_2
       %4887 = OpLoad %float %4886
       %4888 = OpFMul %float %4884 %4887
       %4889 = OpFMul %float %4888 %3841
       %4890 = OpExtInst %float %1 Fma %3551 %4884 %4889
       %4891 = OpExtInst %float %1 Floor %4885
       %4892 = OpFNegate %float %4891
       %4893 = OpExtInst %float %1 Fma %3550 %4884 %4892
       %4894 = OpExtInst %float %1 Fma %4893 %float_2097152 %4890
       %4895 = OpExtInst %float %1 Floor %4894
       %4896 = OpFMul %float %4891 %float_n6_28318548
       %4897 = OpExtInst %float %1 Fma %4885 %float_6_28318548 %4896
       %4898 = OpFMul %float %4895 %float_n6_28318548
       %4899 = OpExtInst %float %1 Fma %4890 %float_6_28318548 %4898
       %4900 = OpExtInst %float %1 Fma %4897 %float_2097152 %4899
       %4901 = OpFMul %float %4418 %float_0_800000012
       %4902 = OpExtInst %float %1 Sin %4900
       %4903 = OpFMul %float %4902 %4901
       %4904 = OpFMul %float %4883 %4436
       %4905 = OpFDiv %float %float_2 %4904
       %4906 = OpFMul %float %4433 %4905
       %4907 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_76 %int_3
       %4908 = OpLoad %float %4907
       %4909 = OpFMul %float %4905 %4908
       %4910 = OpFMul %float %4909 %3841
       %4911 = OpExtInst %float %1 Fma %4434 %4905 %4910
       %4912 = OpExtInst %float %1 Floor %4906
       %4913 = OpFNegate %float %4912
       %4914 = OpExtInst %float %1 Fma %4433 %4905 %4913
       %4915 = OpExtInst %float %1 Fma %4914 %float_2097152 %4911
       %4916 = OpExtInst %float %1 Floor %4915
       %4917 = OpFMul %float %4912 %float_n6_28318548
       %4918 = OpExtInst %float %1 Fma %4906 %float_6_28318548 %4917
       %4919 = OpFMul %float %4916 %float_n6_28318548
       %4920 = OpExtInst %float %1 Fma %4911 %float_6_28318548 %4919
       %4921 = OpExtInst %float %1 Fma %4918 %float_2097152 %4920
       %4922 = OpFMul %float %4901 %2582
       %4923 = OpExtInst %float %1 Sin %4921
       %4924 = OpFMul %float %4923 %4922
       %4925 = OpCompositeConstruct %v3float %537 %537 %4903
       %4926 = OpCompositeConstruct %v3float %537 %537 %4924
       %4927 = OpFAdd %v3float %4925 %4926
       %4928 = OpFMul %float %4904 %4436
       %4929 = OpFDiv %float %float_2 %4928
       %4930 = OpFMul %float %4473 %4929
       %4931 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_77 %int_0
       %4932 = OpLoad %float %4931
       %4933 = OpFMul %float %4929 %4932
       %4934 = OpFMul %float %4933 %3841
       %4935 = OpExtInst %float %1 Fma %4474 %4929 %4934
       %4936 = OpExtInst %float %1 Floor %4930
       %4937 = OpFNegate %float %4936
       %4938 = OpExtInst %float %1 Fma %4473 %4929 %4937
       %4939 = OpExtInst %float %1 Fma %4938 %float_2097152 %4935
       %4940 = OpExtInst %float %1 Floor %4939
       %4941 = OpFMul %float %4936 %float_n6_28318548
       %4942 = OpExtInst %float %1 Fma %4930 %float_6_28318548 %4941
       %4943 = OpFMul %float %4940 %float_n6_28318548
       %4944 = OpExtInst %float %1 Fma %4935 %float_6_28318548 %4943
       %4945 = OpExtInst %float %1 Fma %4942 %float_2097152 %4944
       %4946 = OpFMul %float %4922 %2582
       %4947 = OpExtInst %float %1 Sin %4945
       %4948 = OpFMul %float %4947 %4946
       %4949 = OpCompositeConstruct %v3float %537 %537 %4948
       %4950 = OpFAdd %v3float %4927 %4949
       %4951 = OpFMul %float %4928 %4436
       %4952 = OpFDiv %float %float_2 %4951
       %4953 = OpFMul %float %4510 %4952
       %4954 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_77 %int_1
       %4955 = OpLoad %float %4954
       %4956 = OpFMul %float %4952 %4955
       %4957 = OpFMul %float %4956 %3841
       %4958 = OpExtInst %float %1 Fma %4511 %4952 %4957
       %4959 = OpExtInst %float %1 Floor %4953
       %4960 = OpFNegate %float %4959
       %4961 = OpExtInst %float %1 Fma %4510 %4952 %4960
       %4962 = OpExtInst %float %1 Fma %4961 %float_2097152 %4958
       %4963 = OpExtInst %float %1 Floor %4962
       %4964 = OpFMul %float %4959 %float_n6_28318548
       %4965 = OpExtInst %float %1 Fma %4953 %float_6_28318548 %4964
       %4966 = OpFMul %float %4963 %float_n6_28318548
       %4967 = OpExtInst %float %1 Fma %4958 %float_6_28318548 %4966
       %4968 = OpExtInst %float %1 Fma %4965 %float_2097152 %4967
       %4969 = OpFMul %float %4946 %2582
       %4970 = OpExtInst %float %1 Sin %4968
       %4971 = OpFMul %float %4970 %4969
       %4972 = OpCompositeConstruct %v3float %537 %537 %4971
       %4973 = OpFAdd %v3float %4950 %4972
       %4974 = OpFMul %float %4882 %4578
       %4975 = OpFMul %float %4581 %4974
       %4976 = OpFDiv %float %float_2 %4975
       %4977 = OpFMul %float %4575 %4976
       %4978 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_77 %int_2
       %4979 = OpLoad %float %4978
       %4980 = OpFMul %float %4976 %4979
       %4981 = OpFMul %float %4980 %3841
       %4982 = OpExtInst %float %1 Fma %4576 %4976 %4981
       %4983 = OpExtInst %float %1 Floor %4977
       %4984 = OpFNegate %float %4983
       %4985 = OpExtInst %float %1 Fma %4575 %4976 %4984
       %4986 = OpExtInst %float %1 Fma %4985 %float_2097152 %4982
       %4987 = OpExtInst %float %1 Floor %4986
       %4988 = OpFMul %float %4983 %float_n6_28318548
       %4989 = OpExtInst %float %1 Fma %4977 %float_6_28318548 %4988
       %4990 = OpFMul %float %4987 %float_n6_28318548
       %4991 = OpExtInst %float %1 Fma %4982 %float_6_28318548 %4990
       %4992 = OpExtInst %float %1 Fma %4989 %float_2097152 %4991
       %4993 = OpFMul %float %4901 %2721
       %4994 = OpExtInst %float %1 Sin %4992
       %4995 = OpFMul %float %4994 %4993
       %4996 = OpFMul %float %4975 %4436
       %4997 = OpFDiv %float %float_2 %4996
       %4998 = OpFMul %float %4615 %4997
       %4999 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_77 %int_3
       %5000 = OpLoad %float %4999
       %5001 = OpFMul %float %4997 %5000
       %5002 = OpFMul %float %5001 %3841
       %5003 = OpExtInst %float %1 Fma %4616 %4997 %5002
       %5004 = OpExtInst %float %1 Floor %4998
       %5005 = OpFNegate %float %5004
       %5006 = OpExtInst %float %1 Fma %4615 %4997 %5005
       %5007 = OpExtInst %float %1 Fma %5006 %float_2097152 %5003
       %5008 = OpExtInst %float %1 Floor %5007
       %5009 = OpFMul %float %5004 %float_n6_28318548
       %5010 = OpExtInst %float %1 Fma %4998 %float_6_28318548 %5009
       %5011 = OpFMul %float %5008 %float_n6_28318548
       %5012 = OpExtInst %float %1 Fma %5003 %float_6_28318548 %5011
       %5013 = OpExtInst %float %1 Fma %5010 %float_2097152 %5012
       %5014 = OpFMul %float %4993 %2582
       %5015 = OpExtInst %float %1 Sin %5013
       %5016 = OpFMul %float %5015 %5014
       %5017 = OpCompositeConstruct %v3float %537 %537 %4995
       %5018 = OpCompositeConstruct %v3float %537 %537 %5016
       %5019 = OpFAdd %v3float %5017 %5018
       %5020 = OpFMul %float %4996 %4436
       %5021 = OpFDiv %float %float_2 %5020
       %5022 = OpFMul %float %4653 %5021
       %5023 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_0
       %5024 = OpLoad %float %5023
       %5025 = OpFMul %float %5021 %5024
       %5026 = OpFMul %float %5025 %3841
       %5027 = OpExtInst %float %1 Fma %4654 %5021 %5026
       %5028 = OpExtInst %float %1 Floor %5022
       %5029 = OpFNegate %float %5028
       %5030 = OpExtInst %float %1 Fma %4653 %5021 %5029
       %5031 = OpExtInst %float %1 Fma %5030 %float_2097152 %5027
       %5032 = OpExtInst %float %1 Floor %5031
       %5033 = OpFMul %float %5028 %float_n6_28318548
       %5034 = OpExtInst %float %1 Fma %5022 %float_6_28318548 %5033
       %5035 = OpFMul %float %5032 %float_n6_28318548
       %5036 = OpExtInst %float %1 Fma %5027 %float_6_28318548 %5035
       %5037 = OpExtInst %float %1 Fma %5034 %float_2097152 %5036
       %5038 = OpFMul %float %5014 %2582
       %5039 = OpExtInst %float %1 Sin %5037
       %5040 = OpFMul %float %5039 %5038
       %5041 = OpCompositeConstruct %v3float %537 %537 %5040
       %5042 = OpFAdd %v3float %5019 %5041
       %5043 = OpFMul %float %5020 %4436
       %5044 = OpFDiv %float %float_2 %5043
       %5045 = OpFMul %float %4690 %5044
       %5046 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_1
       %5047 = OpLoad %float %5046
       %5048 = OpFMul %float %5044 %5047
       %5049 = OpFMul %float %5048 %3841
       %5050 = OpExtInst %float %1 Fma %4691 %5044 %5049
       %5051 = OpExtInst %float %1 Floor %5045
       %5052 = OpFNegate %float %5051
       %5053 = OpExtInst %float %1 Fma %4690 %5044 %5052
       %5054 = OpExtInst %float %1 Fma %5053 %float_2097152 %5050
       %5055 = OpExtInst %float %1 Floor %5054
       %5056 = OpFMul %float %5051 %float_n6_28318548
       %5057 = OpExtInst %float %1 Fma %5045 %float_6_28318548 %5056
       %5058 = OpFMul %float %5055 %float_n6_28318548
       %5059 = OpExtInst %float %1 Fma %5050 %float_6_28318548 %5058
       %5060 = OpExtInst %float %1 Fma %5057 %float_2097152 %5059
       %5061 = OpFMul %float %5038 %2582
       %5062 = OpExtInst %float %1 Sin %5060
       %5063 = OpFMul %float %5062 %5061
       %5064 = OpCompositeConstruct %v3float %537 %537 %5063
       %5065 = OpFAdd %v3float %5042 %5064
       %5066 = OpFAdd %v3float %4973 %5065
       %5067 = OpFMul %float %4759 %4974
       %5068 = OpFDiv %float %float_2 %5067
       %5069 = OpFMul %float %4756 %5068
       %5070 = OpFMul %float %5068 %4979
       %5071 = OpFMul %float %5070 %3841
       %5072 = OpExtInst %float %1 Fma %4757 %5068 %5071
       %5073 = OpExtInst %float %1 Floor %5069
       %5074 = OpFNegate %float %5073
       %5075 = OpExtInst %float %1 Fma %4756 %5068 %5074
       %5076 = OpExtInst %float %1 Fma %5075 %float_2097152 %5072
       %5077 = OpExtInst %float %1 Floor %5076
       %5078 = OpFMul %float %5073 %float_n6_28318548
       %5079 = OpExtInst %float %1 Fma %5069 %float_6_28318548 %5078
       %5080 = OpFMul %float %5077 %float_n6_28318548
       %5081 = OpExtInst %float %1 Fma %5072 %float_6_28318548 %5080
       %5082 = OpExtInst %float %1 Fma %5079 %float_2097152 %5081
       %5083 = OpExtInst %float %1 Sin %5082
       %5084 = OpFMul %float %5083 %4993
       %5085 = OpFMul %float %5067 %4436
       %5086 = OpFDiv %float %float_2 %5085
       %5087 = OpFMul %float %4790 %5086
       %5088 = OpFMul %float %5086 %5000
       %5089 = OpFMul %float %5088 %3841
       %5090 = OpExtInst %float %1 Fma %4791 %5086 %5089
       %5091 = OpExtInst %float %1 Floor %5087
       %5092 = OpFNegate %float %5091
       %5093 = OpExtInst %float %1 Fma %4790 %5086 %5092
       %5094 = OpExtInst %float %1 Fma %5093 %float_2097152 %5090
       %5095 = OpExtInst %float %1 Floor %5094
       %5096 = OpFMul %float %5091 %float_n6_28318548
       %5097 = OpExtInst %float %1 Fma %5087 %float_6_28318548 %5096
       %5098 = OpFMul %float %5095 %float_n6_28318548
       %5099 = OpExtInst %float %1 Fma %5090 %float_6_28318548 %5098
       %5100 = OpExtInst %float %1 Fma %5097 %float_2097152 %5099
       %5101 = OpExtInst %float %1 Sin %5100
       %5102 = OpFMul %float %5101 %5014
       %5103 = OpCompositeConstruct %v3float %537 %537 %5084
       %5104 = OpCompositeConstruct %v3float %537 %537 %5102
       %5105 = OpFAdd %v3float %5103 %5104
       %5106 = OpFMul %float %5085 %4436
       %5107 = OpFDiv %float %float_2 %5106
       %5108 = OpFMul %float %4825 %5107
       %5109 = OpFMul %float %5107 %5024
       %5110 = OpFMul %float %5109 %3841
       %5111 = OpExtInst %float %1 Fma %4826 %5107 %5110
       %5112 = OpExtInst %float %1 Floor %5108
       %5113 = OpFNegate %float %5112
       %5114 = OpExtInst %float %1 Fma %4825 %5107 %5113
       %5115 = OpExtInst %float %1 Fma %5114 %float_2097152 %5111
       %5116 = OpExtInst %float %1 Floor %5115
       %5117 = OpFMul %float %5112 %float_n6_28318548
       %5118 = OpExtInst %float %1 Fma %5108 %float_6_28318548 %5117
       %5119 = OpFMul %float %5116 %float_n6_28318548
       %5120 = OpExtInst %float %1 Fma %5111 %float_6_28318548 %5119
       %5121 = OpExtInst %float %1 Fma %5118 %float_2097152 %5120
       %5122 = OpExtInst %float %1 Sin %5121
       %5123 = OpFMul %float %5122 %5038
       %5124 = OpCompositeConstruct %v3float %537 %537 %5123
       %5125 = OpFAdd %v3float %5105 %5124
       %5126 = OpFMul %float %5106 %4436
       %5127 = OpFDiv %float %float_2 %5126
       %5128 = OpFMul %float %4859 %5127
       %5129 = OpFMul %float %5127 %5047
       %5130 = OpFMul %float %5129 %3841
       %5131 = OpExtInst %float %1 Fma %4860 %5127 %5130
       %5132 = OpExtInst %float %1 Floor %5128
       %5133 = OpFNegate %float %5132
       %5134 = OpExtInst %float %1 Fma %4859 %5127 %5133
       %5135 = OpExtInst %float %1 Fma %5134 %float_2097152 %5131
       %5136 = OpExtInst %float %1 Floor %5135
       %5137 = OpFMul %float %5132 %float_n6_28318548
       %5138 = OpExtInst %float %1 Fma %5128 %float_6_28318548 %5137
       %5139 = OpFMul %float %5136 %float_n6_28318548
       %5140 = OpExtInst %float %1 Fma %5131 %float_6_28318548 %5139
       %5141 = OpExtInst %float %1 Fma %5138 %float_2097152 %5140
       %5142 = OpExtInst %float %1 Sin %5141
       %5143 = OpFMul %float %5142 %5061
       %5144 = OpCompositeConstruct %v3float %537 %537 %5143
       %5145 = OpFAdd %v3float %5125 %5144
       %5146 = OpFAdd %v3float %5066 %5145
       %5147 = OpFMul %float %3554 %float_4
       %5148 = OpFMul %float %3556 %5147
       %5149 = OpFDiv %float %float_2 %5148
       %5150 = OpFMul %float %3550 %5149
       %5151 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_2
       %5152 = OpLoad %float %5151
       %5153 = OpFMul %float %5149 %5152
       %5154 = OpFMul %float %5153 %3841
       %5155 = OpExtInst %float %1 Fma %3551 %5149 %5154
       %5156 = OpExtInst %float %1 Floor %5150
       %5157 = OpFNegate %float %5156
       %5158 = OpExtInst %float %1 Fma %3550 %5149 %5157
       %5159 = OpExtInst %float %1 Fma %5158 %float_2097152 %5155
       %5160 = OpExtInst %float %1 Floor %5159
       %5161 = OpFMul %float %5156 %float_n6_28318548
       %5162 = OpExtInst %float %1 Fma %5150 %float_6_28318548 %5161
       %5163 = OpFMul %float %5160 %float_n6_28318548
       %5164 = OpExtInst %float %1 Fma %5155 %float_6_28318548 %5163
       %5165 = OpExtInst %float %1 Fma %5162 %float_2097152 %5164
       %5166 = OpExtInst %float %1 Sin %5165
       %5167 = OpFMul %float %5166 %4901
       %5168 = OpFMul %float %5148 %4436
       %5169 = OpFDiv %float %float_2 %5168
       %5170 = OpFMul %float %4433 %5169
       %5171 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_3
       %5172 = OpLoad %float %5171
       %5173 = OpFMul %float %5169 %5172
       %5174 = OpFMul %float %5173 %3841
       %5175 = OpExtInst %float %1 Fma %4434 %5169 %5174
       %5176 = OpExtInst %float %1 Floor %5170
       %5177 = OpFNegate %float %5176
       %5178 = OpExtInst %float %1 Fma %4433 %5169 %5177
       %5179 = OpExtInst %float %1 Fma %5178 %float_2097152 %5175
       %5180 = OpExtInst %float %1 Floor %5179
       %5181 = OpFMul %float %5176 %float_n6_28318548
       %5182 = OpExtInst %float %1 Fma %5170 %float_6_28318548 %5181
       %5183 = OpFMul %float %5180 %float_n6_28318548
       %5184 = OpExtInst %float %1 Fma %5175 %float_6_28318548 %5183
       %5185 = OpExtInst %float %1 Fma %5182 %float_2097152 %5184
       %5186 = OpExtInst %float %1 Sin %5185
       %5187 = OpFMul %float %5186 %4922
       %5188 = OpCompositeConstruct %v3float %537 %537 %5167
       %5189 = OpCompositeConstruct %v3float %537 %537 %5187
       %5190 = OpFAdd %v3float %5188 %5189
       %5191 = OpFMul %float %5168 %4436
       %5192 = OpFDiv %float %float_2 %5191
       %5193 = OpFMul %float %4473 %5192
       %5194 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_0
       %5195 = OpLoad %float %5194
       %5196 = OpFMul %float %5192 %5195
       %5197 = OpFMul %float %5196 %3841
       %5198 = OpExtInst %float %1 Fma %4474 %5192 %5197
       %5199 = OpExtInst %float %1 Floor %5193
       %5200 = OpFNegate %float %5199
       %5201 = OpExtInst %float %1 Fma %4473 %5192 %5200
       %5202 = OpExtInst %float %1 Fma %5201 %float_2097152 %5198
       %5203 = OpExtInst %float %1 Floor %5202
       %5204 = OpFMul %float %5199 %float_n6_28318548
       %5205 = OpExtInst %float %1 Fma %5193 %float_6_28318548 %5204
       %5206 = OpFMul %float %5203 %float_n6_28318548
       %5207 = OpExtInst %float %1 Fma %5198 %float_6_28318548 %5206
       %5208 = OpExtInst %float %1 Fma %5205 %float_2097152 %5207
       %5209 = OpExtInst %float %1 Sin %5208
       %5210 = OpFMul %float %5209 %4946
       %5211 = OpCompositeConstruct %v3float %537 %537 %5210
       %5212 = OpFAdd %v3float %5190 %5211
       %5213 = OpFMul %float %5191 %4436
       %5214 = OpFDiv %float %float_2 %5213
       %5215 = OpFMul %float %4510 %5214
       %5216 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_1
       %5217 = OpLoad %float %5216
       %5218 = OpFMul %float %5214 %5217
       %5219 = OpFMul %float %5218 %3841
       %5220 = OpExtInst %float %1 Fma %4511 %5214 %5219
       %5221 = OpExtInst %float %1 Floor %5215
       %5222 = OpFNegate %float %5221
       %5223 = OpExtInst %float %1 Fma %4510 %5214 %5222
       %5224 = OpExtInst %float %1 Fma %5223 %float_2097152 %5220
       %5225 = OpExtInst %float %1 Floor %5224
       %5226 = OpFMul %float %5221 %float_n6_28318548
       %5227 = OpExtInst %float %1 Fma %5215 %float_6_28318548 %5226
       %5228 = OpFMul %float %5225 %float_n6_28318548
       %5229 = OpExtInst %float %1 Fma %5220 %float_6_28318548 %5228
       %5230 = OpExtInst %float %1 Fma %5227 %float_2097152 %5229
       %5231 = OpExtInst %float %1 Sin %5230
       %5232 = OpFMul %float %5231 %4969
       %5233 = OpCompositeConstruct %v3float %537 %537 %5232
       %5234 = OpFAdd %v3float %5212 %5233
       %5235 = OpFMul %float %5147 %4578
       %5236 = OpFMul %float %4581 %5235
       %5237 = OpFDiv %float %float_2 %5236
       %5238 = OpFMul %float %4575 %5237
       %5239 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_2
       %5240 = OpLoad %float %5239
       %5241 = OpFMul %float %5237 %5240
       %5242 = OpFMul %float %5241 %3841
       %5243 = OpExtInst %float %1 Fma %4576 %5237 %5242
       %5244 = OpExtInst %float %1 Floor %5238
       %5245 = OpFNegate %float %5244
       %5246 = OpExtInst %float %1 Fma %4575 %5237 %5245
       %5247 = OpExtInst %float %1 Fma %5246 %float_2097152 %5243
       %5248 = OpExtInst %float %1 Floor %5247
       %5249 = OpFMul %float %5244 %float_n6_28318548
       %5250 = OpExtInst %float %1 Fma %5238 %float_6_28318548 %5249
       %5251 = OpFMul %float %5248 %float_n6_28318548
       %5252 = OpExtInst %float %1 Fma %5243 %float_6_28318548 %5251
       %5253 = OpExtInst %float %1 Fma %5250 %float_2097152 %5252
       %5254 = OpExtInst %float %1 Sin %5253
       %5255 = OpFMul %float %5254 %4993
       %5256 = OpFMul %float %5236 %4436
       %5257 = OpFDiv %float %float_2 %5256
       %5258 = OpFMul %float %4615 %5257
       %5259 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_3
       %5260 = OpLoad %float %5259
       %5261 = OpFMul %float %5257 %5260
       %5262 = OpFMul %float %5261 %3841
       %5263 = OpExtInst %float %1 Fma %4616 %5257 %5262
       %5264 = OpExtInst %float %1 Floor %5258
       %5265 = OpFNegate %float %5264
       %5266 = OpExtInst %float %1 Fma %4615 %5257 %5265
       %5267 = OpExtInst %float %1 Fma %5266 %float_2097152 %5263
       %5268 = OpExtInst %float %1 Floor %5267
       %5269 = OpFMul %float %5264 %float_n6_28318548
       %5270 = OpExtInst %float %1 Fma %5258 %float_6_28318548 %5269
       %5271 = OpFMul %float %5268 %float_n6_28318548
       %5272 = OpExtInst %float %1 Fma %5263 %float_6_28318548 %5271
       %5273 = OpExtInst %float %1 Fma %5270 %float_2097152 %5272
       %5274 = OpExtInst %float %1 Sin %5273
       %5275 = OpFMul %float %5274 %5014
       %5276 = OpCompositeConstruct %v3float %537 %537 %5255
       %5277 = OpCompositeConstruct %v3float %537 %537 %5275
       %5278 = OpFAdd %v3float %5276 %5277
       %5279 = OpFMul %float %5256 %4436
       %5280 = OpFDiv %float %float_2 %5279
       %5281 = OpFMul %float %4653 %5280
       %5282 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_80 %int_0
       %5283 = OpLoad %float %5282
       %5284 = OpFMul %float %5280 %5283
       %5285 = OpFMul %float %5284 %3841
       %5286 = OpExtInst %float %1 Fma %4654 %5280 %5285
       %5287 = OpExtInst %float %1 Floor %5281
       %5288 = OpFNegate %float %5287
       %5289 = OpExtInst %float %1 Fma %4653 %5280 %5288
       %5290 = OpExtInst %float %1 Fma %5289 %float_2097152 %5286
       %5291 = OpExtInst %float %1 Floor %5290
       %5292 = OpFMul %float %5287 %float_n6_28318548
       %5293 = OpExtInst %float %1 Fma %5281 %float_6_28318548 %5292
       %5294 = OpFMul %float %5291 %float_n6_28318548
       %5295 = OpExtInst %float %1 Fma %5286 %float_6_28318548 %5294
       %5296 = OpExtInst %float %1 Fma %5293 %float_2097152 %5295
       %5297 = OpExtInst %float %1 Sin %5296
       %5298 = OpFMul %float %5297 %5038
       %5299 = OpCompositeConstruct %v3float %537 %537 %5298
       %5300 = OpFAdd %v3float %5278 %5299
       %5301 = OpFMul %float %5279 %4436
       %5302 = OpFDiv %float %float_2 %5301
       %5303 = OpFMul %float %4690 %5302
       %5304 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_80 %int_1
       %5305 = OpLoad %float %5304
       %5306 = OpFMul %float %5302 %5305
       %5307 = OpFMul %float %5306 %3841
       %5308 = OpExtInst %float %1 Fma %4691 %5302 %5307
       %5309 = OpExtInst %float %1 Floor %5303
       %5310 = OpFNegate %float %5309
       %5311 = OpExtInst %float %1 Fma %4690 %5302 %5310
       %5312 = OpExtInst %float %1 Fma %5311 %float_2097152 %5308
       %5313 = OpExtInst %float %1 Floor %5312
       %5314 = OpFMul %float %5309 %float_n6_28318548
       %5315 = OpExtInst %float %1 Fma %5303 %float_6_28318548 %5314
       %5316 = OpFMul %float %5313 %float_n6_28318548
       %5317 = OpExtInst %float %1 Fma %5308 %float_6_28318548 %5316
       %5318 = OpExtInst %float %1 Fma %5315 %float_2097152 %5317
       %5319 = OpExtInst %float %1 Sin %5318
       %5320 = OpFMul %float %5319 %5061
       %5321 = OpCompositeConstruct %v3float %537 %537 %5320
       %5322 = OpFAdd %v3float %5300 %5321
       %5323 = OpFAdd %v3float %5234 %5322
       %5324 = OpFMul %float %4759 %5235
       %5325 = OpFDiv %float %float_2 %5324
       %5326 = OpFMul %float %4756 %5325
       %5327 = OpFMul %float %5325 %5240
       %5328 = OpFMul %float %5327 %3841
       %5329 = OpExtInst %float %1 Fma %4757 %5325 %5328
       %5330 = OpExtInst %float %1 Floor %5326
       %5331 = OpFNegate %float %5330
       %5332 = OpExtInst %float %1 Fma %4756 %5325 %5331
       %5333 = OpExtInst %float %1 Fma %5332 %float_2097152 %5329
       %5334 = OpExtInst %float %1 Floor %5333
       %5335 = OpFMul %float %5330 %float_n6_28318548
       %5336 = OpExtInst %float %1 Fma %5326 %float_6_28318548 %5335
       %5337 = OpFMul %float %5334 %float_n6_28318548
       %5338 = OpExtInst %float %1 Fma %5329 %float_6_28318548 %5337
       %5339 = OpExtInst %float %1 Fma %5336 %float_2097152 %5338
       %5340 = OpExtInst %float %1 Sin %5339
       %5341 = OpFMul %float %5340 %4993
       %5342 = OpFMul %float %5324 %4436
       %5343 = OpFDiv %float %float_2 %5342
       %5344 = OpFMul %float %4790 %5343
       %5345 = OpFMul %float %5343 %5260
       %5346 = OpFMul %float %5345 %3841
       %5347 = OpExtInst %float %1 Fma %4791 %5343 %5346
       %5348 = OpExtInst %float %1 Floor %5344
       %5349 = OpFNegate %float %5348
       %5350 = OpExtInst %float %1 Fma %4790 %5343 %5349
       %5351 = OpExtInst %float %1 Fma %5350 %float_2097152 %5347
       %5352 = OpExtInst %float %1 Floor %5351
       %5353 = OpFMul %float %5348 %float_n6_28318548
       %5354 = OpExtInst %float %1 Fma %5344 %float_6_28318548 %5353
       %5355 = OpFMul %float %5352 %float_n6_28318548
       %5356 = OpExtInst %float %1 Fma %5347 %float_6_28318548 %5355
       %5357 = OpExtInst %float %1 Fma %5354 %float_2097152 %5356
       %5358 = OpExtInst %float %1 Sin %5357
       %5359 = OpFMul %float %5358 %5014
       %5360 = OpCompositeConstruct %v3float %537 %537 %5341
       %5361 = OpCompositeConstruct %v3float %537 %537 %5359
       %5362 = OpFAdd %v3float %5360 %5361
       %5363 = OpFMul %float %5342 %4436
       %5364 = OpFDiv %float %float_2 %5363
       %5365 = OpFMul %float %4825 %5364
       %5366 = OpFMul %float %5364 %5283
       %5367 = OpFMul %float %5366 %3841
       %5368 = OpExtInst %float %1 Fma %4826 %5364 %5367
       %5369 = OpExtInst %float %1 Floor %5365
       %5370 = OpFNegate %float %5369
       %5371 = OpExtInst %float %1 Fma %4825 %5364 %5370
       %5372 = OpExtInst %float %1 Fma %5371 %float_2097152 %5368
       %5373 = OpExtInst %float %1 Floor %5372
       %5374 = OpFMul %float %5369 %float_n6_28318548
       %5375 = OpExtInst %float %1 Fma %5365 %float_6_28318548 %5374
       %5376 = OpFMul %float %5373 %float_n6_28318548
       %5377 = OpExtInst %float %1 Fma %5368 %float_6_28318548 %5376
       %5378 = OpExtInst %float %1 Fma %5375 %float_2097152 %5377
       %5379 = OpExtInst %float %1 Sin %5378
       %5380 = OpFMul %float %5379 %5038
       %5381 = OpCompositeConstruct %v3float %537 %537 %5380
       %5382 = OpFAdd %v3float %5362 %5381
       %5383 = OpFMul %float %5363 %4436
       %5384 = OpFDiv %float %float_2 %5383
       %5385 = OpFMul %float %4859 %5384
       %5386 = OpFMul %float %5384 %5305
       %5387 = OpFMul %float %5386 %3841
       %5388 = OpExtInst %float %1 Fma %4860 %5384 %5387
       %5389 = OpExtInst %float %1 Floor %5385
       %5390 = OpFNegate %float %5389
       %5391 = OpExtInst %float %1 Fma %4859 %5384 %5390
       %5392 = OpExtInst %float %1 Fma %5391 %float_2097152 %5388
       %5393 = OpExtInst %float %1 Floor %5392
       %5394 = OpFMul %float %5389 %float_n6_28318548
       %5395 = OpExtInst %float %1 Fma %5385 %float_6_28318548 %5394
       %5396 = OpFMul %float %5393 %float_n6_28318548
       %5397 = OpExtInst %float %1 Fma %5388 %float_6_28318548 %5396
       %5398 = OpExtInst %float %1 Fma %5395 %float_2097152 %5397
       %5399 = OpExtInst %float %1 Sin %5398
       %5400 = OpFMul %float %5399 %5061
       %5401 = OpCompositeConstruct %v3float %537 %537 %5400
       %5402 = OpFAdd %v3float %5382 %5401
       %5403 = OpFAdd %v3float %5323 %5402
       %5404 = OpFMul %float %3554 %float_0_75
       %5405 = OpFMul %float %3556 %5404
       %5406 = OpFDiv %float %float_2 %5405
       %5407 = OpFMul %float %3550 %5406
       %5408 = OpFMul %float %5406 %4887
       %5409 = OpFMul %float %5408 %3841
       %5410 = OpExtInst %float %1 Fma %3551 %5406 %5409
       %5411 = OpExtInst %float %1 Floor %5407
       %5412 = OpFNegate %float %5411
       %5413 = OpExtInst %float %1 Fma %3550 %5406 %5412
       %5414 = OpExtInst %float %1 Fma %5413 %float_2097152 %5410
       %5415 = OpExtInst %float %1 Floor %5414
       %5416 = OpFMul %float %5411 %float_n6_28318548
       %5417 = OpExtInst %float %1 Fma %5407 %float_6_28318548 %5416
       %5418 = OpFMul %float %5415 %float_n6_28318548
       %5419 = OpExtInst %float %1 Fma %5410 %float_6_28318548 %5418
       %5420 = OpExtInst %float %1 Fma %5417 %float_2097152 %5419
       %5421 = OpFMul %float %4418 %float_0_5
       %5422 = OpExtInst %float %1 Sin %5420
       %5423 = OpFMul %float %5422 %5421
       %5424 = OpFMul %float %5405 %4436
       %5425 = OpFDiv %float %float_2 %5424
       %5426 = OpFMul %float %4433 %5425
       %5427 = OpFMul %float %5425 %4908
       %5428 = OpFMul %float %5427 %3841
       %5429 = OpExtInst %float %1 Fma %4434 %5425 %5428
       %5430 = OpExtInst %float %1 Floor %5426
       %5431 = OpFNegate %float %5430
       %5432 = OpExtInst %float %1 Fma %4433 %5425 %5431
       %5433 = OpExtInst %float %1 Fma %5432 %float_2097152 %5429
       %5434 = OpExtInst %float %1 Floor %5433
       %5435 = OpFMul %float %5430 %float_n6_28318548
       %5436 = OpExtInst %float %1 Fma %5426 %float_6_28318548 %5435
       %5437 = OpFMul %float %5434 %float_n6_28318548
       %5438 = OpExtInst %float %1 Fma %5429 %float_6_28318548 %5437
       %5439 = OpExtInst %float %1 Fma %5436 %float_2097152 %5438
       %5440 = OpFMul %float %5421 %2582
       %5441 = OpExtInst %float %1 Sin %5439
       %5442 = OpFMul %float %5441 %5440
       %5443 = OpCompositeConstruct %v3float %537 %537 %5423
       %5444 = OpCompositeConstruct %v3float %537 %537 %5442
       %5445 = OpFAdd %v3float %5443 %5444
       %5446 = OpFMul %float %5424 %4436
       %5447 = OpFDiv %float %float_2 %5446
       %5448 = OpFMul %float %4473 %5447
       %5449 = OpFMul %float %5447 %4932
       %5450 = OpFMul %float %5449 %3841
       %5451 = OpExtInst %float %1 Fma %4474 %5447 %5450
       %5452 = OpExtInst %float %1 Floor %5448
       %5453 = OpFNegate %float %5452
       %5454 = OpExtInst %float %1 Fma %4473 %5447 %5453
       %5455 = OpExtInst %float %1 Fma %5454 %float_2097152 %5451
       %5456 = OpExtInst %float %1 Floor %5455
       %5457 = OpFMul %float %5452 %float_n6_28318548
       %5458 = OpExtInst %float %1 Fma %5448 %float_6_28318548 %5457
       %5459 = OpFMul %float %5456 %float_n6_28318548
       %5460 = OpExtInst %float %1 Fma %5451 %float_6_28318548 %5459
       %5461 = OpExtInst %float %1 Fma %5458 %float_2097152 %5460
       %5462 = OpFMul %float %5440 %2582
       %5463 = OpExtInst %float %1 Sin %5461
       %5464 = OpFMul %float %5463 %5462
       %5465 = OpCompositeConstruct %v3float %537 %537 %5464
       %5466 = OpFAdd %v3float %5445 %5465
       %5467 = OpFMul %float %5446 %4436
       %5468 = OpFDiv %float %float_2 %5467
       %5469 = OpFMul %float %4510 %5468
       %5470 = OpFMul %float %5468 %4955
       %5471 = OpFMul %float %5470 %3841
       %5472 = OpExtInst %float %1 Fma %4511 %5468 %5471
       %5473 = OpExtInst %float %1 Floor %5469
       %5474 = OpFNegate %float %5473
       %5475 = OpExtInst %float %1 Fma %4510 %5468 %5474
       %5476 = OpExtInst %float %1 Fma %5475 %float_2097152 %5472
       %5477 = OpExtInst %float %1 Floor %5476
       %5478 = OpFMul %float %5473 %float_n6_28318548
       %5479 = OpExtInst %float %1 Fma %5469 %float_6_28318548 %5478
       %5480 = OpFMul %float %5477 %float_n6_28318548
       %5481 = OpExtInst %float %1 Fma %5472 %float_6_28318548 %5480
       %5482 = OpExtInst %float %1 Fma %5479 %float_2097152 %5481
       %5483 = OpFMul %float %5462 %2582
       %5484 = OpExtInst %float %1 Sin %5482
       %5485 = OpFMul %float %5484 %5483
       %5486 = OpCompositeConstruct %v3float %537 %537 %5485
       %5487 = OpFAdd %v3float %5466 %5486
       %5488 = OpFMul %float %5404 %4578
       %5489 = OpFMul %float %4581 %5488
       %5490 = OpFDiv %float %float_2 %5489
       %5491 = OpFMul %float %4575 %5490
       %5492 = OpFMul %float %5490 %4979
       %5493 = OpFMul %float %5492 %3841
       %5494 = OpExtInst %float %1 Fma %4576 %5490 %5493
       %5495 = OpExtInst %float %1 Floor %5491
       %5496 = OpFNegate %float %5495
       %5497 = OpExtInst %float %1 Fma %4575 %5490 %5496
       %5498 = OpExtInst %float %1 Fma %5497 %float_2097152 %5494
       %5499 = OpExtInst %float %1 Floor %5498
       %5500 = OpFMul %float %5495 %float_n6_28318548
       %5501 = OpExtInst %float %1 Fma %5491 %float_6_28318548 %5500
       %5502 = OpFMul %float %5499 %float_n6_28318548
       %5503 = OpExtInst %float %1 Fma %5494 %float_6_28318548 %5502
       %5504 = OpExtInst %float %1 Fma %5501 %float_2097152 %5503
       %5505 = OpFMul %float %5421 %2721
       %5506 = OpExtInst %float %1 Sin %5504
       %5507 = OpFMul %float %5506 %5505
       %5508 = OpFMul %float %5489 %4436
       %5509 = OpFDiv %float %float_2 %5508
       %5510 = OpFMul %float %4615 %5509
       %5511 = OpFMul %float %5509 %5000
       %5512 = OpFMul %float %5511 %3841
       %5513 = OpExtInst %float %1 Fma %4616 %5509 %5512
       %5514 = OpExtInst %float %1 Floor %5510
       %5515 = OpFNegate %float %5514
       %5516 = OpExtInst %float %1 Fma %4615 %5509 %5515
       %5517 = OpExtInst %float %1 Fma %5516 %float_2097152 %5513
       %5518 = OpExtInst %float %1 Floor %5517
       %5519 = OpFMul %float %5514 %float_n6_28318548
       %5520 = OpExtInst %float %1 Fma %5510 %float_6_28318548 %5519
       %5521 = OpFMul %float %5518 %float_n6_28318548
       %5522 = OpExtInst %float %1 Fma %5513 %float_6_28318548 %5521
       %5523 = OpExtInst %float %1 Fma %5520 %float_2097152 %5522
       %5524 = OpFMul %float %5505 %2582
       %5525 = OpExtInst %float %1 Sin %5523
       %5526 = OpFMul %float %5525 %5524
       %5527 = OpCompositeConstruct %v3float %537 %537 %5507
       %5528 = OpCompositeConstruct %v3float %537 %537 %5526
       %5529 = OpFAdd %v3float %5527 %5528
       %5530 = OpFMul %float %5508 %4436
       %5531 = OpFDiv %float %float_2 %5530
       %5532 = OpFMul %float %4653 %5531
       %5533 = OpFMul %float %5531 %5024
       %5534 = OpFMul %float %5533 %3841
       %5535 = OpExtInst %float %1 Fma %4654 %5531 %5534
       %5536 = OpExtInst %float %1 Floor %5532
       %5537 = OpFNegate %float %5536
       %5538 = OpExtInst %float %1 Fma %4653 %5531 %5537
       %5539 = OpExtInst %float %1 Fma %5538 %float_2097152 %5535
       %5540 = OpExtInst %float %1 Floor %5539
       %5541 = OpFMul %float %5536 %float_n6_28318548
       %5542 = OpExtInst %float %1 Fma %5532 %float_6_28318548 %5541
       %5543 = OpFMul %float %5540 %float_n6_28318548
       %5544 = OpExtInst %float %1 Fma %5535 %float_6_28318548 %5543
       %5545 = OpExtInst %float %1 Fma %5542 %float_2097152 %5544
       %5546 = OpFMul %float %5524 %2582
       %5547 = OpExtInst %float %1 Sin %5545
       %5548 = OpFMul %float %5547 %5546
       %5549 = OpCompositeConstruct %v3float %537 %537 %5548
       %5550 = OpFAdd %v3float %5529 %5549
       %5551 = OpFMul %float %5530 %4436
       %5552 = OpFDiv %float %float_2 %5551
       %5553 = OpFMul %float %4690 %5552
       %5554 = OpFMul %float %5552 %5047
       %5555 = OpFMul %float %5554 %3841
       %5556 = OpExtInst %float %1 Fma %4691 %5552 %5555
       %5557 = OpExtInst %float %1 Floor %5553
       %5558 = OpFNegate %float %5557
       %5559 = OpExtInst %float %1 Fma %4690 %5552 %5558
       %5560 = OpExtInst %float %1 Fma %5559 %float_2097152 %5556
       %5561 = OpExtInst %float %1 Floor %5560
       %5562 = OpFMul %float %5557 %float_n6_28318548
       %5563 = OpExtInst %float %1 Fma %5553 %float_6_28318548 %5562
       %5564 = OpFMul %float %5561 %float_n6_28318548
       %5565 = OpExtInst %float %1 Fma %5556 %float_6_28318548 %5564
       %5566 = OpExtInst %float %1 Fma %5563 %float_2097152 %5565
       %5567 = OpFMul %float %5546 %2582
       %5568 = OpExtInst %float %1 Sin %5566
       %5569 = OpFMul %float %5568 %5567
       %5570 = OpCompositeConstruct %v3float %537 %537 %5569
       %5571 = OpFAdd %v3float %5550 %5570
       %5572 = OpFAdd %v3float %5487 %5571
       %5573 = OpFMul %float %4759 %5488
       %5574 = OpFDiv %float %float_2 %5573
       %5575 = OpFMul %float %4756 %5574
       %5576 = OpFMul %float %5574 %4979
       %5577 = OpFMul %float %5576 %3841
       %5578 = OpExtInst %float %1 Fma %4757 %5574 %5577
       %5579 = OpExtInst %float %1 Floor %5575
       %5580 = OpFNegate %float %5579
       %5581 = OpExtInst %float %1 Fma %4756 %5574 %5580
       %5582 = OpExtInst %float %1 Fma %5581 %float_2097152 %5578
       %5583 = OpExtInst %float %1 Floor %5582
       %5584 = OpFMul %float %5579 %float_n6_28318548
       %5585 = OpExtInst %float %1 Fma %5575 %float_6_28318548 %5584
       %5586 = OpFMul %float %5583 %float_n6_28318548
       %5587 = OpExtInst %float %1 Fma %5578 %float_6_28318548 %5586
       %5588 = OpExtInst %float %1 Fma %5585 %float_2097152 %5587
       %5589 = OpExtInst %float %1 Sin %5588
       %5590 = OpFMul %float %5589 %5505
       %5591 = OpFMul %float %5573 %4436
       %5592 = OpFDiv %float %float_2 %5591
       %5593 = OpFMul %float %4790 %5592
       %5594 = OpFMul %float %5592 %5000
       %5595 = OpFMul %float %5594 %3841
       %5596 = OpExtInst %float %1 Fma %4791 %5592 %5595
       %5597 = OpExtInst %float %1 Floor %5593
       %5598 = OpFNegate %float %5597
       %5599 = OpExtInst %float %1 Fma %4790 %5592 %5598
       %5600 = OpExtInst %float %1 Fma %5599 %float_2097152 %5596
       %5601 = OpExtInst %float %1 Floor %5600
       %5602 = OpFMul %float %5597 %float_n6_28318548
       %5603 = OpExtInst %float %1 Fma %5593 %float_6_28318548 %5602
       %5604 = OpFMul %float %5601 %float_n6_28318548
       %5605 = OpExtInst %float %1 Fma %5596 %float_6_28318548 %5604
       %5606 = OpExtInst %float %1 Fma %5603 %float_2097152 %5605
       %5607 = OpExtInst %float %1 Sin %5606
       %5608 = OpFMul %float %5607 %5524
       %5609 = OpCompositeConstruct %v3float %537 %537 %5590
       %5610 = OpCompositeConstruct %v3float %537 %537 %5608
       %5611 = OpFAdd %v3float %5609 %5610
       %5612 = OpFMul %float %5591 %4436
       %5613 = OpFDiv %float %float_2 %5612
       %5614 = OpFMul %float %4825 %5613
       %5615 = OpFMul %float %5613 %5024
       %5616 = OpFMul %float %5615 %3841
       %5617 = OpExtInst %float %1 Fma %4826 %5613 %5616
       %5618 = OpExtInst %float %1 Floor %5614
       %5619 = OpFNegate %float %5618
       %5620 = OpExtInst %float %1 Fma %4825 %5613 %5619
       %5621 = OpExtInst %float %1 Fma %5620 %float_2097152 %5617
       %5622 = OpExtInst %float %1 Floor %5621
       %5623 = OpFMul %float %5618 %float_n6_28318548
       %5624 = OpExtInst %float %1 Fma %5614 %float_6_28318548 %5623
       %5625 = OpFMul %float %5622 %float_n6_28318548
       %5626 = OpExtInst %float %1 Fma %5617 %float_6_28318548 %5625
       %5627 = OpExtInst %float %1 Fma %5624 %float_2097152 %5626
       %5628 = OpExtInst %float %1 Sin %5627
       %5629 = OpFMul %float %5628 %5546
       %5630 = OpCompositeConstruct %v3float %537 %537 %5629
       %5631 = OpFAdd %v3float %5611 %5630
       %5632 = OpFMul %float %5612 %4436
       %5633 = OpFDiv %float %float_2 %5632
       %5634 = OpFMul %float %4859 %5633
       %5635 = OpFMul %float %5633 %5047
       %5636 = OpFMul %float %5635 %3841
       %5637 = OpExtInst %float %1 Fma %4860 %5633 %5636
       %5638 = OpExtInst %float %1 Floor %5634
       %5639 = OpFNegate %float %5638
       %5640 = OpExtInst %float %1 Fma %4859 %5633 %5639
       %5641 = OpExtInst %float %1 Fma %5640 %float_2097152 %5637
       %5642 = OpExtInst %float %1 Floor %5641
       %5643 = OpFMul %float %5638 %float_n6_28318548
       %5644 = OpExtInst %float %1 Fma %5634 %float_6_28318548 %5643
       %5645 = OpFMul %float %5642 %float_n6_28318548
       %5646 = OpExtInst %float %1 Fma %5637 %float_6_28318548 %5645
       %5647 = OpExtInst %float %1 Fma %5644 %float_2097152 %5646
       %5648 = OpExtInst %float %1 Sin %5647
       %5649 = OpFMul %float %5648 %5567
       %5650 = OpCompositeConstruct %v3float %537 %537 %5649
       %5651 = OpFAdd %v3float %5631 %5650
       %5652 = OpFAdd %v3float %5572 %5651
       %5653 = OpFAdd %v3float %5403 %5652
       %5654 = OpFAdd %v3float %5146 %5653
       %5655 = OpFAdd %v3float %4881 %5654
       %5656 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_80 %int_2
       %5657 = OpLoad %float %5656
       %5658 = OpFSub %float %5657 %float_n1
       %5659 = OpExtInst %float %1 FAbs %5658
       %5660 = OpFOrdGreaterThan %bool %5659 %float_9_99999975en06
       %5661 = OpFOrdGreaterThanEqual %bool %5657 %float_n1
       %5662 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_80 %int_3
       %5663 = OpLoad %float %5662
       %5664 = OpSelect %float %5661 %5657 %5663
       %5665 = OpSelect %float %5660 %5664 %5657
       %5666 = OpFSub %float %5665 %float_1
       %5667 = OpExtInst %float %1 FAbs %5666
       %5668 = OpFOrdGreaterThan %bool %5667 %float_9_99999975en06
       %5669 = OpFOrdGreaterThanEqual %bool %5665 %float_1
       %5670 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_81 %int_0
       %5671 = OpLoad %float %5670
       %5672 = OpSelect %float %5669 %5671 %5657
       %5673 = OpSelect %float %5668 %5672 %5657
       %5674 = OpExtInst %float %1 FAbs %5673
       %5675 = OpFOrdGreaterThan %bool %5674 %float_9_99999975en06
       %5676 = OpFOrdGreaterThanEqual %bool %5673 %float_0
       %5677 = OpSelect %float %5676 %float_1 %float_n1
       %5678 = OpSelect %float %5675 %5677 %float_1
       %5679 = OpExtInst %float %1 NMax %5678 %float_n1
       %5680 = OpExtInst %float %1 NMin %5679 %float_1
       %5681 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_82 %int_1
       %5682 = OpLoad %float %5681
       %5683 = OpCompositeConstruct %v3float %5680 %5682 %float_0
       %5684 = OpFAdd %v3float %5683 %1676
       %5685 = OpExtInst %v3float %1 NMax %5684 %276
       %5686 = OpExtInst %v3float %1 NMin %5685 %125
       %5687 = OpCompositeExtract %float %5686 0
       %5688 = OpCompositeExtract %float %5686 1
       %5689 = OpCompositeConstruct %v2float %5687 %5688
       %5690 = OpFMul %v2float %1684 %5689
       %5691 = OpFMul %v2float %5689 %1685
       %5692 = OpCompositeExtract %float %5690 0
       %5693 = OpCompositeExtract %float %5691 0
       %5694 = OpCompositeExtract %float %5690 1
       %5695 = OpCompositeExtract %float %5691 1
       %5696 = OpFAdd %float %5692 %5694
       %5697 = OpFAdd %float %5693 %5695
       %5698 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_83 %int_2
       %5699 = OpLoad %float %5698
       %5700 = OpFMul %float %5699 %3554
       %5701 = OpFDiv %float %float_2 %5700
       %5702 = OpFMul %float %5696 %5701
       %5703 = OpFMul %float %5701 %3561
       %5704 = OpFAdd %v3float %630 %286
       %5705 = OpFMul %v3float %579 %3574
       %5706 = OpFMul %v3float %5704 %3574
       %5707 = OpFMul %v3float %5705 %3565
       %5708 = OpFMul %v3float %3565 %5706
       %5709 = OpFMul %v3float %5708 %3570
       %5710 = OpCompositeExtract %float %5709 0
       %5711 = OpCompositeExtract %float %5709 1
       %5712 = OpCompositeExtract %float %5709 2
       %5713 = OpCompositeConstruct %v2float %5712 %5712
       %5714 = OpFAdd %v2float %3582 %5713
       %5715 = OpCompositeExtract %float %5714 0
       %5716 = OpCompositeConstruct %v3float %5710 %5711 %5715
       %5717 = OpVectorTimesScalar %v3float %5716 %float_4_76837158en07
       %5718 = OpFAdd %v3float %5717 %135
       %5719 = OpExtInst %v3float %1 Fma %5707 %3570 %5718
       %5720 = OpExtInst %v3float %1 Floor %5719
       %5721 = OpFNegate %v3float %5720
       %5722 = OpExtInst %v3float %1 Fma %5707 %3570 %5721
       %5723 = OpVectorTimesScalar %v3float %5722 %float_2097152
       %5724 = OpFAdd %v3float %5723 %5716
       %5725 = OpVectorTimesScalar %v3float %5724 %float_1
               OpBranch %5726
       %5726 = OpLabel
       %5727 = OpPhi %v3float %5725 %4179 %5728 %5729
       %5730 = OpPhi %float %float_1 %4179 %5731 %5729
       %5732 = OpPhi %float %float_0 %4179 %5733 %5729
       %5734 = OpPhi %uint %uint_0 %4179 %5735 %5729
       %5736 = OpULessThan %bool %5734 %uint_6
               OpLoopMerge %5737 %5729 DontUnroll
               OpBranchConditional %5736 %5729 %5737
       %5729 = OpLabel
       %5738 = OpExtInst %v3float %1 Fract %5727
       %5739 = OpExtInst %v3float %1 Floor %5727
       %5740 = OpDot %float %5739 %380
       %5741 = OpFAdd %float %5740 %float_19
       %5742 = OpFAdd %float %5740 %float_47
       %5743 = OpFAdd %float %5740 %float_66
       %5744 = OpFAdd %float %5740 %float_101
       %5745 = OpFAdd %float %5740 %float_120
       %5746 = OpFAdd %float %5740 %float_148
       %5747 = OpFAdd %float %5740 %float_167
       %5748 = OpConvertFToS %int %5740
       %5749 = OpCompositeConstruct %v3int %5748 %int_0 %int_0
       %5750 = OpBitcast %v3uint %5749
       %5751 = OpIMul %v3uint %5750 %396
       %5752 = OpIAdd %v3uint %5751 %398
       %5753 = OpCompositeExtract %uint %5752 1
       %5754 = OpCompositeExtract %uint %5752 2
       %5755 = OpIMul %uint %5753 %5754
       %5756 = OpCompositeExtract %uint %5752 0
       %5757 = OpIAdd %uint %5756 %5755
       %5758 = OpIMul %uint %5754 %5757
       %5759 = OpIAdd %uint %5753 %5758
       %5760 = OpIMul %uint %5757 %5759
       %5761 = OpIAdd %uint %5754 %5760
       %5762 = OpIMul %uint %5759 %5761
       %5763 = OpIAdd %uint %5757 %5762
       %5764 = OpCompositeInsert %v3uint %5763 %538 0
       %5765 = OpBitwiseAnd %v3uint %399 %400
       %5766 = OpShiftRightLogical %v3uint %5764 %5765
       %5767 = OpCompositeExtract %uint %5766 0
       %5768 = OpCompositeConstruct %v3uint %5767 %5767 %5767
       %5769 = OpBitwiseAnd %v3uint %5768 %381
       %5770 = OpConvertUToF %v3float %5769
       %5771 = OpExtInst %v3float %1 Fma %5770 %385 %276
       %5772 = OpDot %float %5771 %5738
       %5773 = OpConvertFToS %int %5741
       %5774 = OpFSub %v3float %5738 %344
       %5775 = OpCompositeConstruct %v3int %5773 %int_0 %int_0
       %5776 = OpBitcast %v3uint %5775
       %5777 = OpIMul %v3uint %5776 %396
       %5778 = OpIAdd %v3uint %5777 %398
       %5779 = OpCompositeExtract %uint %5778 1
       %5780 = OpCompositeExtract %uint %5778 2
       %5781 = OpIMul %uint %5779 %5780
       %5782 = OpCompositeExtract %uint %5778 0
       %5783 = OpIAdd %uint %5782 %5781
       %5784 = OpIMul %uint %5780 %5783
       %5785 = OpIAdd %uint %5779 %5784
       %5786 = OpIMul %uint %5783 %5785
       %5787 = OpIAdd %uint %5780 %5786
       %5788 = OpIMul %uint %5785 %5787
       %5789 = OpIAdd %uint %5783 %5788
       %5790 = OpCompositeInsert %v3uint %5789 %538 0
       %5791 = OpShiftRightLogical %v3uint %5790 %5765
       %5792 = OpCompositeExtract %uint %5791 0
       %5793 = OpCompositeConstruct %v3uint %5792 %5792 %5792
       %5794 = OpBitwiseAnd %v3uint %5793 %381
       %5795 = OpConvertUToF %v3float %5794
       %5796 = OpExtInst %v3float %1 Fma %5795 %385 %276
       %5797 = OpDot %float %5796 %5774
       %5798 = OpConvertFToS %int %5742
       %5799 = OpFSub %v3float %5738 %345
       %5800 = OpCompositeConstruct %v3int %5798 %int_0 %int_0
       %5801 = OpBitcast %v3uint %5800
       %5802 = OpIMul %v3uint %5801 %396
       %5803 = OpIAdd %v3uint %5802 %398
       %5804 = OpCompositeExtract %uint %5803 1
       %5805 = OpCompositeExtract %uint %5803 2
       %5806 = OpIMul %uint %5804 %5805
       %5807 = OpCompositeExtract %uint %5803 0
       %5808 = OpIAdd %uint %5807 %5806
       %5809 = OpIMul %uint %5805 %5808
       %5810 = OpIAdd %uint %5804 %5809
       %5811 = OpIMul %uint %5808 %5810
       %5812 = OpIAdd %uint %5805 %5811
       %5813 = OpIMul %uint %5810 %5812
       %5814 = OpIAdd %uint %5808 %5813
       %5815 = OpCompositeInsert %v3uint %5814 %538 0
       %5816 = OpShiftRightLogical %v3uint %5815 %5765
       %5817 = OpCompositeExtract %uint %5816 0
       %5818 = OpCompositeConstruct %v3uint %5817 %5817 %5817
       %5819 = OpBitwiseAnd %v3uint %5818 %381
       %5820 = OpConvertUToF %v3float %5819
       %5821 = OpExtInst %v3float %1 Fma %5820 %385 %276
       %5822 = OpDot %float %5821 %5799
       %5823 = OpConvertFToS %int %5743
       %5824 = OpFSub %v3float %5738 %132
       %5825 = OpCompositeConstruct %v3int %5823 %int_0 %int_0
       %5826 = OpBitcast %v3uint %5825
       %5827 = OpIMul %v3uint %5826 %396
       %5828 = OpIAdd %v3uint %5827 %398
       %5829 = OpCompositeExtract %uint %5828 1
       %5830 = OpCompositeExtract %uint %5828 2
       %5831 = OpIMul %uint %5829 %5830
       %5832 = OpCompositeExtract %uint %5828 0
       %5833 = OpIAdd %uint %5832 %5831
       %5834 = OpIMul %uint %5830 %5833
       %5835 = OpIAdd %uint %5829 %5834
       %5836 = OpIMul %uint %5833 %5835
       %5837 = OpIAdd %uint %5830 %5836
       %5838 = OpIMul %uint %5835 %5837
       %5839 = OpIAdd %uint %5833 %5838
       %5840 = OpCompositeInsert %v3uint %5839 %538 0
       %5841 = OpShiftRightLogical %v3uint %5840 %5765
       %5842 = OpCompositeExtract %uint %5841 0
       %5843 = OpCompositeConstruct %v3uint %5842 %5842 %5842
       %5844 = OpBitwiseAnd %v3uint %5843 %381
       %5845 = OpConvertUToF %v3float %5844
       %5846 = OpExtInst %v3float %1 Fma %5845 %385 %276
       %5847 = OpDot %float %5846 %5824
       %5848 = OpConvertFToS %int %5744
       %5849 = OpFSub %v3float %5738 %288
       %5850 = OpCompositeConstruct %v3int %5848 %int_0 %int_0
       %5851 = OpBitcast %v3uint %5850
       %5852 = OpIMul %v3uint %5851 %396
       %5853 = OpIAdd %v3uint %5852 %398
       %5854 = OpCompositeExtract %uint %5853 1
       %5855 = OpCompositeExtract %uint %5853 2
       %5856 = OpIMul %uint %5854 %5855
       %5857 = OpCompositeExtract %uint %5853 0
       %5858 = OpIAdd %uint %5857 %5856
       %5859 = OpIMul %uint %5855 %5858
       %5860 = OpIAdd %uint %5854 %5859
       %5861 = OpIMul %uint %5858 %5860
       %5862 = OpIAdd %uint %5855 %5861
       %5863 = OpIMul %uint %5860 %5862
       %5864 = OpIAdd %uint %5858 %5863
       %5865 = OpCompositeInsert %v3uint %5864 %538 0
       %5866 = OpShiftRightLogical %v3uint %5865 %5765
       %5867 = OpCompositeExtract %uint %5866 0
       %5868 = OpCompositeConstruct %v3uint %5867 %5867 %5867
       %5869 = OpBitwiseAnd %v3uint %5868 %381
       %5870 = OpConvertUToF %v3float %5869
       %5871 = OpExtInst %v3float %1 Fma %5870 %385 %276
       %5872 = OpDot %float %5871 %5849
       %5873 = OpConvertFToS %int %5745
       %5874 = OpFSub %v3float %5738 %137
       %5875 = OpCompositeConstruct %v3int %5873 %int_0 %int_0
       %5876 = OpBitcast %v3uint %5875
       %5877 = OpIMul %v3uint %5876 %396
       %5878 = OpIAdd %v3uint %5877 %398
       %5879 = OpCompositeExtract %uint %5878 1
       %5880 = OpCompositeExtract %uint %5878 2
       %5881 = OpIMul %uint %5879 %5880
       %5882 = OpCompositeExtract %uint %5878 0
       %5883 = OpIAdd %uint %5882 %5881
       %5884 = OpIMul %uint %5880 %5883
       %5885 = OpIAdd %uint %5879 %5884
       %5886 = OpIMul %uint %5883 %5885
       %5887 = OpIAdd %uint %5880 %5886
       %5888 = OpIMul %uint %5885 %5887
       %5889 = OpIAdd %uint %5883 %5888
       %5890 = OpCompositeInsert %v3uint %5889 %538 0
       %5891 = OpShiftRightLogical %v3uint %5890 %5765
       %5892 = OpCompositeExtract %uint %5891 0
       %5893 = OpCompositeConstruct %v3uint %5892 %5892 %5892
       %5894 = OpBitwiseAnd %v3uint %5893 %381
       %5895 = OpConvertUToF %v3float %5894
       %5896 = OpExtInst %v3float %1 Fma %5895 %385 %276
       %5897 = OpDot %float %5896 %5874
       %5898 = OpConvertFToS %int %5746
       %5899 = OpFSub %v3float %5738 %133
       %5900 = OpCompositeConstruct %v3int %5898 %int_0 %int_0
       %5901 = OpBitcast %v3uint %5900
       %5902 = OpIMul %v3uint %5901 %396
       %5903 = OpIAdd %v3uint %5902 %398
       %5904 = OpCompositeExtract %uint %5903 1
       %5905 = OpCompositeExtract %uint %5903 2
       %5906 = OpIMul %uint %5904 %5905
       %5907 = OpCompositeExtract %uint %5903 0
       %5908 = OpIAdd %uint %5907 %5906
       %5909 = OpIMul %uint %5905 %5908
       %5910 = OpIAdd %uint %5904 %5909
       %5911 = OpIMul %uint %5908 %5910
       %5912 = OpIAdd %uint %5905 %5911
       %5913 = OpIMul %uint %5910 %5912
       %5914 = OpIAdd %uint %5908 %5913
       %5915 = OpCompositeInsert %v3uint %5914 %538 0
       %5916 = OpShiftRightLogical %v3uint %5915 %5765
       %5917 = OpCompositeExtract %uint %5916 0
       %5918 = OpCompositeConstruct %v3uint %5917 %5917 %5917
       %5919 = OpBitwiseAnd %v3uint %5918 %381
       %5920 = OpConvertUToF %v3float %5919
       %5921 = OpExtInst %v3float %1 Fma %5920 %385 %276
       %5922 = OpDot %float %5921 %5899
       %5923 = OpConvertFToS %int %5747
       %5924 = OpFSub %v3float %5738 %125
       %5925 = OpCompositeConstruct %v3int %5923 %int_0 %int_0
       %5926 = OpBitcast %v3uint %5925
       %5927 = OpIMul %v3uint %5926 %396
       %5928 = OpIAdd %v3uint %5927 %398
       %5929 = OpCompositeExtract %uint %5928 1
       %5930 = OpCompositeExtract %uint %5928 2
       %5931 = OpIMul %uint %5929 %5930
       %5932 = OpCompositeExtract %uint %5928 0
       %5933 = OpIAdd %uint %5932 %5931
       %5934 = OpIMul %uint %5930 %5933
       %5935 = OpIAdd %uint %5929 %5934
       %5936 = OpIMul %uint %5933 %5935
       %5937 = OpIAdd %uint %5930 %5936
       %5938 = OpIMul %uint %5935 %5937
       %5939 = OpIAdd %uint %5933 %5938
       %5940 = OpCompositeInsert %v3uint %5939 %538 0
       %5941 = OpShiftRightLogical %v3uint %5940 %5765
       %5942 = OpCompositeExtract %uint %5941 0
       %5943 = OpCompositeConstruct %v3uint %5942 %5942 %5942
       %5944 = OpBitwiseAnd %v3uint %5943 %381
       %5945 = OpConvertUToF %v3float %5944
       %5946 = OpExtInst %v3float %1 Fma %5945 %385 %276
       %5947 = OpDot %float %5946 %5924
       %5948 = OpCompositeExtract %float %5738 0
       %5949 = OpCompositeExtract %float %5738 1
       %5950 = OpCompositeExtract %float %5738 2
       %5951 = OpCompositeConstruct %v4float %5948 %5949 %5950 %float_0
       %5952 = OpFMul %v4float %5951 %5951
       %5953 = OpFMul %v4float %5952 %5951
       %5954 = OpVectorTimesScalar %v4float %5951 %float_6
       %5955 = OpFSub %v4float %5954 %376
       %5956 = OpExtInst %v4float %1 Fma %5951 %5955 %377
       %5957 = OpFMul %v4float %5953 %5956
       %5958 = OpCompositeExtract %float %5957 0
       %5959 = OpExtInst %float %1 FMix %5772 %5797 %5958
       %5960 = OpExtInst %float %1 FMix %5822 %5847 %5958
       %5961 = OpCompositeExtract %float %5957 1
       %5962 = OpExtInst %float %1 FMix %5959 %5960 %5961
       %5963 = OpExtInst %float %1 FMix %5872 %5897 %5958
       %5964 = OpExtInst %float %1 FMix %5922 %5947 %5958
       %5965 = OpExtInst %float %1 FMix %5963 %5964 %5961
       %5966 = OpCompositeExtract %float %5957 2
       %5967 = OpExtInst %float %1 FMix %5962 %5965 %5966
       %5733 = OpExtInst %float %1 Fma %5967 %5730 %5732
       %5728 = OpVectorTimesScalar %v3float %5727 %float_2
       %5731 = OpFMul %float %5730 %float_0_5
       %5735 = OpIAdd %uint %5734 %uint_1
               OpBranch %5726
       %5737 = OpLabel
       %5968 = OpExtInst %float %1 Fma %5732 %float_0_5 %float_0_5
       %5969 = OpExtInst %float %1 FMix %float_0 %float_1 %5968
       %5970 = OpExtInst %float %1 FClamp %5969 %float_0 %float_1
       %5971 = OpExtInst %float %1 FMix %1149 %1702 %5970
       %5972 = OpFMul %float %5703 %5971
       %5973 = OpExtInst %float %1 Fma %5697 %5701 %5972
       %5974 = OpExtInst %float %1 Floor %5702
       %5975 = OpFNegate %float %5974
       %5976 = OpExtInst %float %1 Fma %5696 %5701 %5975
       %5977 = OpExtInst %float %1 Fma %5976 %float_2097152 %5973
       %5978 = OpExtInst %float %1 Floor %5977
       %5979 = OpFMul %float %5974 %float_n6_28318548
       %5980 = OpExtInst %float %1 Fma %5702 %float_6_28318548 %5979
       %5981 = OpFMul %float %5978 %float_n6_28318548
       %5982 = OpExtInst %float %1 Fma %5973 %float_6_28318548 %5981
       %5983 = OpExtInst %float %1 Fma %5980 %float_2097152 %5982
       %5984 = OpFMul %v3float %5705 %3864
       %5985 = OpFMul %v3float %3864 %5706
       %5986 = OpFMul %v3float %5985 %3869
       %5987 = OpCompositeExtract %float %5986 0
       %5988 = OpCompositeExtract %float %5986 1
       %5989 = OpCompositeExtract %float %5986 2
       %5990 = OpCompositeConstruct %v2float %5989 %5989
       %5991 = OpFAdd %v2float %3879 %5990
       %5992 = OpCompositeExtract %float %5991 0
       %5993 = OpCompositeConstruct %v3float %5987 %5988 %5992
       %5994 = OpVectorTimesScalar %v3float %5993 %float_4_76837158en07
       %5995 = OpFAdd %v3float %5994 %135
       %5996 = OpExtInst %v3float %1 Fma %5984 %3869 %5995
       %5997 = OpExtInst %v3float %1 Floor %5996
       %5998 = OpFNegate %v3float %5997
       %5999 = OpExtInst %v3float %1 Fma %5984 %3869 %5998
       %6000 = OpVectorTimesScalar %v3float %5999 %float_2097152
       %6001 = OpFAdd %v3float %6000 %5993
       %6002 = OpVectorTimesScalar %v3float %6001 %float_1
               OpBranch %6003
       %6003 = OpLabel
       %6004 = OpPhi %v3float %6002 %5737 %6005 %6006
       %6007 = OpPhi %float %float_1 %5737 %6008 %6006
       %6009 = OpPhi %float %float_0 %5737 %6010 %6006
       %6011 = OpPhi %uint %uint_0 %5737 %6012 %6006
       %6013 = OpULessThan %bool %6011 %uint_10
               OpLoopMerge %6014 %6006 DontUnroll
               OpBranchConditional %6013 %6006 %6014
       %6006 = OpLabel
       %6015 = OpExtInst %v3float %1 Fract %6004
       %6016 = OpExtInst %v3float %1 Floor %6004
       %6017 = OpDot %float %6016 %380
       %6018 = OpFAdd %float %6017 %float_19
       %6019 = OpFAdd %float %6017 %float_47
       %6020 = OpFAdd %float %6017 %float_66
       %6021 = OpFAdd %float %6017 %float_101
       %6022 = OpFAdd %float %6017 %float_120
       %6023 = OpFAdd %float %6017 %float_148
       %6024 = OpFAdd %float %6017 %float_167
       %6025 = OpConvertFToS %int %6017
       %6026 = OpCompositeConstruct %v3int %6025 %int_0 %int_0
       %6027 = OpBitcast %v3uint %6026
       %6028 = OpIMul %v3uint %6027 %396
       %6029 = OpIAdd %v3uint %6028 %398
       %6030 = OpCompositeExtract %uint %6029 1
       %6031 = OpCompositeExtract %uint %6029 2
       %6032 = OpIMul %uint %6030 %6031
       %6033 = OpCompositeExtract %uint %6029 0
       %6034 = OpIAdd %uint %6033 %6032
       %6035 = OpIMul %uint %6031 %6034
       %6036 = OpIAdd %uint %6030 %6035
       %6037 = OpIMul %uint %6034 %6036
       %6038 = OpIAdd %uint %6031 %6037
       %6039 = OpIMul %uint %6036 %6038
       %6040 = OpIAdd %uint %6034 %6039
       %6041 = OpCompositeInsert %v3uint %6040 %538 0
       %6042 = OpBitwiseAnd %v3uint %399 %400
       %6043 = OpShiftRightLogical %v3uint %6041 %6042
       %6044 = OpCompositeExtract %uint %6043 0
       %6045 = OpCompositeConstruct %v3uint %6044 %6044 %6044
       %6046 = OpBitwiseAnd %v3uint %6045 %381
       %6047 = OpConvertUToF %v3float %6046
       %6048 = OpExtInst %v3float %1 Fma %6047 %385 %276
       %6049 = OpDot %float %6048 %6015
       %6050 = OpConvertFToS %int %6018
       %6051 = OpFSub %v3float %6015 %344
       %6052 = OpCompositeConstruct %v3int %6050 %int_0 %int_0
       %6053 = OpBitcast %v3uint %6052
       %6054 = OpIMul %v3uint %6053 %396
       %6055 = OpIAdd %v3uint %6054 %398
       %6056 = OpCompositeExtract %uint %6055 1
       %6057 = OpCompositeExtract %uint %6055 2
       %6058 = OpIMul %uint %6056 %6057
       %6059 = OpCompositeExtract %uint %6055 0
       %6060 = OpIAdd %uint %6059 %6058
       %6061 = OpIMul %uint %6057 %6060
       %6062 = OpIAdd %uint %6056 %6061
       %6063 = OpIMul %uint %6060 %6062
       %6064 = OpIAdd %uint %6057 %6063
       %6065 = OpIMul %uint %6062 %6064
       %6066 = OpIAdd %uint %6060 %6065
       %6067 = OpCompositeInsert %v3uint %6066 %538 0
       %6068 = OpShiftRightLogical %v3uint %6067 %6042
       %6069 = OpCompositeExtract %uint %6068 0
       %6070 = OpCompositeConstruct %v3uint %6069 %6069 %6069
       %6071 = OpBitwiseAnd %v3uint %6070 %381
       %6072 = OpConvertUToF %v3float %6071
       %6073 = OpExtInst %v3float %1 Fma %6072 %385 %276
       %6074 = OpDot %float %6073 %6051
       %6075 = OpConvertFToS %int %6019
       %6076 = OpFSub %v3float %6015 %345
       %6077 = OpCompositeConstruct %v3int %6075 %int_0 %int_0
       %6078 = OpBitcast %v3uint %6077
       %6079 = OpIMul %v3uint %6078 %396
       %6080 = OpIAdd %v3uint %6079 %398
       %6081 = OpCompositeExtract %uint %6080 1
       %6082 = OpCompositeExtract %uint %6080 2
       %6083 = OpIMul %uint %6081 %6082
       %6084 = OpCompositeExtract %uint %6080 0
       %6085 = OpIAdd %uint %6084 %6083
       %6086 = OpIMul %uint %6082 %6085
       %6087 = OpIAdd %uint %6081 %6086
       %6088 = OpIMul %uint %6085 %6087
       %6089 = OpIAdd %uint %6082 %6088
       %6090 = OpIMul %uint %6087 %6089
       %6091 = OpIAdd %uint %6085 %6090
       %6092 = OpCompositeInsert %v3uint %6091 %538 0
       %6093 = OpShiftRightLogical %v3uint %6092 %6042
       %6094 = OpCompositeExtract %uint %6093 0
       %6095 = OpCompositeConstruct %v3uint %6094 %6094 %6094
       %6096 = OpBitwiseAnd %v3uint %6095 %381
       %6097 = OpConvertUToF %v3float %6096
       %6098 = OpExtInst %v3float %1 Fma %6097 %385 %276
       %6099 = OpDot %float %6098 %6076
       %6100 = OpConvertFToS %int %6020
       %6101 = OpFSub %v3float %6015 %132
       %6102 = OpCompositeConstruct %v3int %6100 %int_0 %int_0
       %6103 = OpBitcast %v3uint %6102
       %6104 = OpIMul %v3uint %6103 %396
       %6105 = OpIAdd %v3uint %6104 %398
       %6106 = OpCompositeExtract %uint %6105 1
       %6107 = OpCompositeExtract %uint %6105 2
       %6108 = OpIMul %uint %6106 %6107
       %6109 = OpCompositeExtract %uint %6105 0
       %6110 = OpIAdd %uint %6109 %6108
       %6111 = OpIMul %uint %6107 %6110
       %6112 = OpIAdd %uint %6106 %6111
       %6113 = OpIMul %uint %6110 %6112
       %6114 = OpIAdd %uint %6107 %6113
       %6115 = OpIMul %uint %6112 %6114
       %6116 = OpIAdd %uint %6110 %6115
       %6117 = OpCompositeInsert %v3uint %6116 %538 0
       %6118 = OpShiftRightLogical %v3uint %6117 %6042
       %6119 = OpCompositeExtract %uint %6118 0
       %6120 = OpCompositeConstruct %v3uint %6119 %6119 %6119
       %6121 = OpBitwiseAnd %v3uint %6120 %381
       %6122 = OpConvertUToF %v3float %6121
       %6123 = OpExtInst %v3float %1 Fma %6122 %385 %276
       %6124 = OpDot %float %6123 %6101
       %6125 = OpConvertFToS %int %6021
       %6126 = OpFSub %v3float %6015 %288
       %6127 = OpCompositeConstruct %v3int %6125 %int_0 %int_0
       %6128 = OpBitcast %v3uint %6127
       %6129 = OpIMul %v3uint %6128 %396
       %6130 = OpIAdd %v3uint %6129 %398
       %6131 = OpCompositeExtract %uint %6130 1
       %6132 = OpCompositeExtract %uint %6130 2
       %6133 = OpIMul %uint %6131 %6132
       %6134 = OpCompositeExtract %uint %6130 0
       %6135 = OpIAdd %uint %6134 %6133
       %6136 = OpIMul %uint %6132 %6135
       %6137 = OpIAdd %uint %6131 %6136
       %6138 = OpIMul %uint %6135 %6137
       %6139 = OpIAdd %uint %6132 %6138
       %6140 = OpIMul %uint %6137 %6139
       %6141 = OpIAdd %uint %6135 %6140
       %6142 = OpCompositeInsert %v3uint %6141 %538 0
       %6143 = OpShiftRightLogical %v3uint %6142 %6042
       %6144 = OpCompositeExtract %uint %6143 0
       %6145 = OpCompositeConstruct %v3uint %6144 %6144 %6144
       %6146 = OpBitwiseAnd %v3uint %6145 %381
       %6147 = OpConvertUToF %v3float %6146
       %6148 = OpExtInst %v3float %1 Fma %6147 %385 %276
       %6149 = OpDot %float %6148 %6126
       %6150 = OpConvertFToS %int %6022
       %6151 = OpFSub %v3float %6015 %137
       %6152 = OpCompositeConstruct %v3int %6150 %int_0 %int_0
       %6153 = OpBitcast %v3uint %6152
       %6154 = OpIMul %v3uint %6153 %396
       %6155 = OpIAdd %v3uint %6154 %398
       %6156 = OpCompositeExtract %uint %6155 1
       %6157 = OpCompositeExtract %uint %6155 2
       %6158 = OpIMul %uint %6156 %6157
       %6159 = OpCompositeExtract %uint %6155 0
       %6160 = OpIAdd %uint %6159 %6158
       %6161 = OpIMul %uint %6157 %6160
       %6162 = OpIAdd %uint %6156 %6161
       %6163 = OpIMul %uint %6160 %6162
       %6164 = OpIAdd %uint %6157 %6163
       %6165 = OpIMul %uint %6162 %6164
       %6166 = OpIAdd %uint %6160 %6165
       %6167 = OpCompositeInsert %v3uint %6166 %538 0
       %6168 = OpShiftRightLogical %v3uint %6167 %6042
       %6169 = OpCompositeExtract %uint %6168 0
       %6170 = OpCompositeConstruct %v3uint %6169 %6169 %6169
       %6171 = OpBitwiseAnd %v3uint %6170 %381
       %6172 = OpConvertUToF %v3float %6171
       %6173 = OpExtInst %v3float %1 Fma %6172 %385 %276
       %6174 = OpDot %float %6173 %6151
       %6175 = OpConvertFToS %int %6023
       %6176 = OpFSub %v3float %6015 %133
       %6177 = OpCompositeConstruct %v3int %6175 %int_0 %int_0
       %6178 = OpBitcast %v3uint %6177
       %6179 = OpIMul %v3uint %6178 %396
       %6180 = OpIAdd %v3uint %6179 %398
       %6181 = OpCompositeExtract %uint %6180 1
       %6182 = OpCompositeExtract %uint %6180 2
       %6183 = OpIMul %uint %6181 %6182
       %6184 = OpCompositeExtract %uint %6180 0
       %6185 = OpIAdd %uint %6184 %6183
       %6186 = OpIMul %uint %6182 %6185
       %6187 = OpIAdd %uint %6181 %6186
       %6188 = OpIMul %uint %6185 %6187
       %6189 = OpIAdd %uint %6182 %6188
       %6190 = OpIMul %uint %6187 %6189
       %6191 = OpIAdd %uint %6185 %6190
       %6192 = OpCompositeInsert %v3uint %6191 %538 0
       %6193 = OpShiftRightLogical %v3uint %6192 %6042
       %6194 = OpCompositeExtract %uint %6193 0
       %6195 = OpCompositeConstruct %v3uint %6194 %6194 %6194
       %6196 = OpBitwiseAnd %v3uint %6195 %381
       %6197 = OpConvertUToF %v3float %6196
       %6198 = OpExtInst %v3float %1 Fma %6197 %385 %276
       %6199 = OpDot %float %6198 %6176
       %6200 = OpConvertFToS %int %6024
       %6201 = OpFSub %v3float %6015 %125
       %6202 = OpCompositeConstruct %v3int %6200 %int_0 %int_0
       %6203 = OpBitcast %v3uint %6202
       %6204 = OpIMul %v3uint %6203 %396
       %6205 = OpIAdd %v3uint %6204 %398
       %6206 = OpCompositeExtract %uint %6205 1
       %6207 = OpCompositeExtract %uint %6205 2
       %6208 = OpIMul %uint %6206 %6207
       %6209 = OpCompositeExtract %uint %6205 0
       %6210 = OpIAdd %uint %6209 %6208
       %6211 = OpIMul %uint %6207 %6210
       %6212 = OpIAdd %uint %6206 %6211
       %6213 = OpIMul %uint %6210 %6212
       %6214 = OpIAdd %uint %6207 %6213
       %6215 = OpIMul %uint %6212 %6214
       %6216 = OpIAdd %uint %6210 %6215
       %6217 = OpCompositeInsert %v3uint %6216 %538 0
       %6218 = OpShiftRightLogical %v3uint %6217 %6042
       %6219 = OpCompositeExtract %uint %6218 0
       %6220 = OpCompositeConstruct %v3uint %6219 %6219 %6219
       %6221 = OpBitwiseAnd %v3uint %6220 %381
       %6222 = OpConvertUToF %v3float %6221
       %6223 = OpExtInst %v3float %1 Fma %6222 %385 %276
       %6224 = OpDot %float %6223 %6201
       %6225 = OpCompositeExtract %float %6015 0
       %6226 = OpCompositeExtract %float %6015 1
       %6227 = OpCompositeExtract %float %6015 2
       %6228 = OpCompositeConstruct %v4float %6225 %6226 %6227 %float_0
       %6229 = OpFMul %v4float %6228 %6228
       %6230 = OpFMul %v4float %6229 %6228
       %6231 = OpVectorTimesScalar %v4float %6228 %float_6
       %6232 = OpFSub %v4float %6231 %376
       %6233 = OpExtInst %v4float %1 Fma %6228 %6232 %377
       %6234 = OpFMul %v4float %6230 %6233
       %6235 = OpCompositeExtract %float %6234 0
       %6236 = OpExtInst %float %1 FMix %6049 %6074 %6235
       %6237 = OpExtInst %float %1 FMix %6099 %6124 %6235
       %6238 = OpCompositeExtract %float %6234 1
       %6239 = OpExtInst %float %1 FMix %6236 %6237 %6238
       %6240 = OpExtInst %float %1 FMix %6149 %6174 %6235
       %6241 = OpExtInst %float %1 FMix %6199 %6224 %6235
       %6242 = OpExtInst %float %1 FMix %6240 %6241 %6238
       %6243 = OpCompositeExtract %float %6234 2
       %6244 = OpExtInst %float %1 FMix %6239 %6242 %6243
       %6245 = OpExtInst %float %1 FAbs %6244
       %6010 = OpExtInst %float %1 Fma %6245 %6007 %6009
       %6005 = OpVectorTimesScalar %v3float %6004 %float_2
       %6008 = OpFMul %float %6007 %float_0_5
       %6012 = OpIAdd %uint %6011 %uint_1
               OpBranch %6003
       %6014 = OpLabel
       %6246 = OpExtInst %float %1 FMix %float_0 %float_1 %6009
       %6247 = OpFMul %v3float %5705 %4139
       %6248 = OpFMul %v3float %4139 %5706
       %6249 = OpFMul %v3float %6248 %4144
       %6250 = OpCompositeExtract %float %6249 0
       %6251 = OpCompositeExtract %float %6249 1
       %6252 = OpCompositeExtract %float %6249 2
       %6253 = OpCompositeConstruct %v2float %6252 %6252
       %6254 = OpFAdd %v2float %4154 %6253
       %6255 = OpCompositeExtract %float %6254 0
       %6256 = OpCompositeConstruct %v3float %6250 %6251 %6255
       %6257 = OpVectorTimesScalar %v3float %6256 %float_4_76837158en07
       %6258 = OpFAdd %v3float %6257 %135
       %6259 = OpExtInst %v3float %1 Fma %6247 %4144 %6258
       %6260 = OpExtInst %v3float %1 Floor %6259
       %6261 = OpFNegate %v3float %6260
       %6262 = OpExtInst %v3float %1 Fma %6247 %4144 %6261
       %6263 = OpVectorTimesScalar %v3float %6262 %float_2097152
       %6264 = OpFAdd %v3float %6263 %6256
       %6265 = OpVectorTimesScalar %v3float %6264 %float_1
               OpBranch %6266
       %6266 = OpLabel
       %6267 = OpPhi %v3float %6265 %6014 %6268 %6269
       %6270 = OpPhi %float %float_1 %6014 %6271 %6269
       %6272 = OpPhi %float %float_0 %6014 %6273 %6269
       %6274 = OpPhi %uint %uint_0 %6014 %6275 %6269
       %6276 = OpULessThan %bool %6274 %uint_10
               OpLoopMerge %6277 %6269 DontUnroll
               OpBranchConditional %6276 %6269 %6277
       %6269 = OpLabel
       %6278 = OpExtInst %v3float %1 Fract %6267
       %6279 = OpExtInst %v3float %1 Floor %6267
       %6280 = OpDot %float %6279 %380
       %6281 = OpFAdd %float %6280 %float_19
       %6282 = OpFAdd %float %6280 %float_47
       %6283 = OpFAdd %float %6280 %float_66
       %6284 = OpFAdd %float %6280 %float_101
       %6285 = OpFAdd %float %6280 %float_120
       %6286 = OpFAdd %float %6280 %float_148
       %6287 = OpFAdd %float %6280 %float_167
       %6288 = OpConvertFToS %int %6280
       %6289 = OpCompositeConstruct %v3int %6288 %int_0 %int_0
       %6290 = OpBitcast %v3uint %6289
       %6291 = OpIMul %v3uint %6290 %396
       %6292 = OpIAdd %v3uint %6291 %398
       %6293 = OpCompositeExtract %uint %6292 1
       %6294 = OpCompositeExtract %uint %6292 2
       %6295 = OpIMul %uint %6293 %6294
       %6296 = OpCompositeExtract %uint %6292 0
       %6297 = OpIAdd %uint %6296 %6295
       %6298 = OpIMul %uint %6294 %6297
       %6299 = OpIAdd %uint %6293 %6298
       %6300 = OpIMul %uint %6297 %6299
       %6301 = OpIAdd %uint %6294 %6300
       %6302 = OpIMul %uint %6299 %6301
       %6303 = OpIAdd %uint %6297 %6302
       %6304 = OpCompositeInsert %v3uint %6303 %538 0
       %6305 = OpBitwiseAnd %v3uint %399 %400
       %6306 = OpShiftRightLogical %v3uint %6304 %6305
       %6307 = OpCompositeExtract %uint %6306 0
       %6308 = OpCompositeConstruct %v3uint %6307 %6307 %6307
       %6309 = OpBitwiseAnd %v3uint %6308 %381
       %6310 = OpConvertUToF %v3float %6309
       %6311 = OpExtInst %v3float %1 Fma %6310 %385 %276
       %6312 = OpDot %float %6311 %6278
       %6313 = OpConvertFToS %int %6281
       %6314 = OpFSub %v3float %6278 %344
       %6315 = OpCompositeConstruct %v3int %6313 %int_0 %int_0
       %6316 = OpBitcast %v3uint %6315
       %6317 = OpIMul %v3uint %6316 %396
       %6318 = OpIAdd %v3uint %6317 %398
       %6319 = OpCompositeExtract %uint %6318 1
       %6320 = OpCompositeExtract %uint %6318 2
       %6321 = OpIMul %uint %6319 %6320
       %6322 = OpCompositeExtract %uint %6318 0
       %6323 = OpIAdd %uint %6322 %6321
       %6324 = OpIMul %uint %6320 %6323
       %6325 = OpIAdd %uint %6319 %6324
       %6326 = OpIMul %uint %6323 %6325
       %6327 = OpIAdd %uint %6320 %6326
       %6328 = OpIMul %uint %6325 %6327
       %6329 = OpIAdd %uint %6323 %6328
       %6330 = OpCompositeInsert %v3uint %6329 %538 0
       %6331 = OpShiftRightLogical %v3uint %6330 %6305
       %6332 = OpCompositeExtract %uint %6331 0
       %6333 = OpCompositeConstruct %v3uint %6332 %6332 %6332
       %6334 = OpBitwiseAnd %v3uint %6333 %381
       %6335 = OpConvertUToF %v3float %6334
       %6336 = OpExtInst %v3float %1 Fma %6335 %385 %276
       %6337 = OpDot %float %6336 %6314
       %6338 = OpConvertFToS %int %6282
       %6339 = OpFSub %v3float %6278 %345
       %6340 = OpCompositeConstruct %v3int %6338 %int_0 %int_0
       %6341 = OpBitcast %v3uint %6340
       %6342 = OpIMul %v3uint %6341 %396
       %6343 = OpIAdd %v3uint %6342 %398
       %6344 = OpCompositeExtract %uint %6343 1
       %6345 = OpCompositeExtract %uint %6343 2
       %6346 = OpIMul %uint %6344 %6345
       %6347 = OpCompositeExtract %uint %6343 0
       %6348 = OpIAdd %uint %6347 %6346
       %6349 = OpIMul %uint %6345 %6348
       %6350 = OpIAdd %uint %6344 %6349
       %6351 = OpIMul %uint %6348 %6350
       %6352 = OpIAdd %uint %6345 %6351
       %6353 = OpIMul %uint %6350 %6352
       %6354 = OpIAdd %uint %6348 %6353
       %6355 = OpCompositeInsert %v3uint %6354 %538 0
       %6356 = OpShiftRightLogical %v3uint %6355 %6305
       %6357 = OpCompositeExtract %uint %6356 0
       %6358 = OpCompositeConstruct %v3uint %6357 %6357 %6357
       %6359 = OpBitwiseAnd %v3uint %6358 %381
       %6360 = OpConvertUToF %v3float %6359
       %6361 = OpExtInst %v3float %1 Fma %6360 %385 %276
       %6362 = OpDot %float %6361 %6339
       %6363 = OpConvertFToS %int %6283
       %6364 = OpFSub %v3float %6278 %132
       %6365 = OpCompositeConstruct %v3int %6363 %int_0 %int_0
       %6366 = OpBitcast %v3uint %6365
       %6367 = OpIMul %v3uint %6366 %396
       %6368 = OpIAdd %v3uint %6367 %398
       %6369 = OpCompositeExtract %uint %6368 1
       %6370 = OpCompositeExtract %uint %6368 2
       %6371 = OpIMul %uint %6369 %6370
       %6372 = OpCompositeExtract %uint %6368 0
       %6373 = OpIAdd %uint %6372 %6371
       %6374 = OpIMul %uint %6370 %6373
       %6375 = OpIAdd %uint %6369 %6374
       %6376 = OpIMul %uint %6373 %6375
       %6377 = OpIAdd %uint %6370 %6376
       %6378 = OpIMul %uint %6375 %6377
       %6379 = OpIAdd %uint %6373 %6378
       %6380 = OpCompositeInsert %v3uint %6379 %538 0
       %6381 = OpShiftRightLogical %v3uint %6380 %6305
       %6382 = OpCompositeExtract %uint %6381 0
       %6383 = OpCompositeConstruct %v3uint %6382 %6382 %6382
       %6384 = OpBitwiseAnd %v3uint %6383 %381
       %6385 = OpConvertUToF %v3float %6384
       %6386 = OpExtInst %v3float %1 Fma %6385 %385 %276
       %6387 = OpDot %float %6386 %6364
       %6388 = OpConvertFToS %int %6284
       %6389 = OpFSub %v3float %6278 %288
       %6390 = OpCompositeConstruct %v3int %6388 %int_0 %int_0
       %6391 = OpBitcast %v3uint %6390
       %6392 = OpIMul %v3uint %6391 %396
       %6393 = OpIAdd %v3uint %6392 %398
       %6394 = OpCompositeExtract %uint %6393 1
       %6395 = OpCompositeExtract %uint %6393 2
       %6396 = OpIMul %uint %6394 %6395
       %6397 = OpCompositeExtract %uint %6393 0
       %6398 = OpIAdd %uint %6397 %6396
       %6399 = OpIMul %uint %6395 %6398
       %6400 = OpIAdd %uint %6394 %6399
       %6401 = OpIMul %uint %6398 %6400
       %6402 = OpIAdd %uint %6395 %6401
       %6403 = OpIMul %uint %6400 %6402
       %6404 = OpIAdd %uint %6398 %6403
       %6405 = OpCompositeInsert %v3uint %6404 %538 0
       %6406 = OpShiftRightLogical %v3uint %6405 %6305
       %6407 = OpCompositeExtract %uint %6406 0
       %6408 = OpCompositeConstruct %v3uint %6407 %6407 %6407
       %6409 = OpBitwiseAnd %v3uint %6408 %381
       %6410 = OpConvertUToF %v3float %6409
       %6411 = OpExtInst %v3float %1 Fma %6410 %385 %276
       %6412 = OpDot %float %6411 %6389
       %6413 = OpConvertFToS %int %6285
       %6414 = OpFSub %v3float %6278 %137
       %6415 = OpCompositeConstruct %v3int %6413 %int_0 %int_0
       %6416 = OpBitcast %v3uint %6415
       %6417 = OpIMul %v3uint %6416 %396
       %6418 = OpIAdd %v3uint %6417 %398
       %6419 = OpCompositeExtract %uint %6418 1
       %6420 = OpCompositeExtract %uint %6418 2
       %6421 = OpIMul %uint %6419 %6420
       %6422 = OpCompositeExtract %uint %6418 0
       %6423 = OpIAdd %uint %6422 %6421
       %6424 = OpIMul %uint %6420 %6423
       %6425 = OpIAdd %uint %6419 %6424
       %6426 = OpIMul %uint %6423 %6425
       %6427 = OpIAdd %uint %6420 %6426
       %6428 = OpIMul %uint %6425 %6427
       %6429 = OpIAdd %uint %6423 %6428
       %6430 = OpCompositeInsert %v3uint %6429 %538 0
       %6431 = OpShiftRightLogical %v3uint %6430 %6305
       %6432 = OpCompositeExtract %uint %6431 0
       %6433 = OpCompositeConstruct %v3uint %6432 %6432 %6432
       %6434 = OpBitwiseAnd %v3uint %6433 %381
       %6435 = OpConvertUToF %v3float %6434
       %6436 = OpExtInst %v3float %1 Fma %6435 %385 %276
       %6437 = OpDot %float %6436 %6414
       %6438 = OpConvertFToS %int %6286
       %6439 = OpFSub %v3float %6278 %133
       %6440 = OpCompositeConstruct %v3int %6438 %int_0 %int_0
       %6441 = OpBitcast %v3uint %6440
       %6442 = OpIMul %v3uint %6441 %396
       %6443 = OpIAdd %v3uint %6442 %398
       %6444 = OpCompositeExtract %uint %6443 1
       %6445 = OpCompositeExtract %uint %6443 2
       %6446 = OpIMul %uint %6444 %6445
       %6447 = OpCompositeExtract %uint %6443 0
       %6448 = OpIAdd %uint %6447 %6446
       %6449 = OpIMul %uint %6445 %6448
       %6450 = OpIAdd %uint %6444 %6449
       %6451 = OpIMul %uint %6448 %6450
       %6452 = OpIAdd %uint %6445 %6451
       %6453 = OpIMul %uint %6450 %6452
       %6454 = OpIAdd %uint %6448 %6453
       %6455 = OpCompositeInsert %v3uint %6454 %538 0
       %6456 = OpShiftRightLogical %v3uint %6455 %6305
       %6457 = OpCompositeExtract %uint %6456 0
       %6458 = OpCompositeConstruct %v3uint %6457 %6457 %6457
       %6459 = OpBitwiseAnd %v3uint %6458 %381
       %6460 = OpConvertUToF %v3float %6459
       %6461 = OpExtInst %v3float %1 Fma %6460 %385 %276
       %6462 = OpDot %float %6461 %6439
       %6463 = OpConvertFToS %int %6287
       %6464 = OpFSub %v3float %6278 %125
       %6465 = OpCompositeConstruct %v3int %6463 %int_0 %int_0
       %6466 = OpBitcast %v3uint %6465
       %6467 = OpIMul %v3uint %6466 %396
       %6468 = OpIAdd %v3uint %6467 %398
       %6469 = OpCompositeExtract %uint %6468 1
       %6470 = OpCompositeExtract %uint %6468 2
       %6471 = OpIMul %uint %6469 %6470
       %6472 = OpCompositeExtract %uint %6468 0
       %6473 = OpIAdd %uint %6472 %6471
       %6474 = OpIMul %uint %6470 %6473
       %6475 = OpIAdd %uint %6469 %6474
       %6476 = OpIMul %uint %6473 %6475
       %6477 = OpIAdd %uint %6470 %6476
       %6478 = OpIMul %uint %6475 %6477
       %6479 = OpIAdd %uint %6473 %6478
       %6480 = OpCompositeInsert %v3uint %6479 %538 0
       %6481 = OpShiftRightLogical %v3uint %6480 %6305
       %6482 = OpCompositeExtract %uint %6481 0
       %6483 = OpCompositeConstruct %v3uint %6482 %6482 %6482
       %6484 = OpBitwiseAnd %v3uint %6483 %381
       %6485 = OpConvertUToF %v3float %6484
       %6486 = OpExtInst %v3float %1 Fma %6485 %385 %276
       %6487 = OpDot %float %6486 %6464
       %6488 = OpCompositeExtract %float %6278 0
       %6489 = OpCompositeExtract %float %6278 1
       %6490 = OpCompositeExtract %float %6278 2
       %6491 = OpCompositeConstruct %v4float %6488 %6489 %6490 %float_0
       %6492 = OpFMul %v4float %6491 %6491
       %6493 = OpFMul %v4float %6492 %6491
       %6494 = OpVectorTimesScalar %v4float %6491 %float_6
       %6495 = OpFSub %v4float %6494 %376
       %6496 = OpExtInst %v4float %1 Fma %6491 %6495 %377
       %6497 = OpFMul %v4float %6493 %6496
       %6498 = OpCompositeExtract %float %6497 0
       %6499 = OpExtInst %float %1 FMix %6312 %6337 %6498
       %6500 = OpExtInst %float %1 FMix %6362 %6387 %6498
       %6501 = OpCompositeExtract %float %6497 1
       %6502 = OpExtInst %float %1 FMix %6499 %6500 %6501
       %6503 = OpExtInst %float %1 FMix %6412 %6437 %6498
       %6504 = OpExtInst %float %1 FMix %6462 %6487 %6498
       %6505 = OpExtInst %float %1 FMix %6503 %6504 %6501
       %6506 = OpCompositeExtract %float %6497 2
       %6507 = OpExtInst %float %1 FMix %6502 %6505 %6506
       %6508 = OpExtInst %float %1 FAbs %6507
       %6273 = OpExtInst %float %1 Fma %6508 %6270 %6272
       %6268 = OpVectorTimesScalar %v3float %6267 %float_2
       %6271 = OpFMul %float %6270 %float_0_5
       %6275 = OpIAdd %uint %6274 %uint_1
               OpBranch %6266
       %6277 = OpLabel
       %6509 = OpExtInst %float %1 FMix %float_0 %float_1 %6272
       %6510 = OpExtInst %float %1 Fma %6509 %4413 %4415
       %6511 = OpFMul %float %6246 %6510
       %6512 = OpExtInst %float %1 FMix %3856 %3861 %6511
       %6513 = OpExtInst %float %1 Sin %5983
       %6514 = OpFMul %float %6513 %6512
       %6515 = OpFAdd %v3float %5683 %2549
       %6516 = OpExtInst %v3float %1 NMax %6515 %276
       %6517 = OpExtInst %v3float %1 NMin %6516 %125
       %6518 = OpCompositeExtract %float %6517 0
       %6519 = OpCompositeExtract %float %6517 1
       %6520 = OpCompositeConstruct %v2float %6518 %6519
       %6521 = OpFMul %v2float %1684 %6520
       %6522 = OpFMul %v2float %6520 %1685
       %6523 = OpCompositeExtract %float %6521 0
       %6524 = OpCompositeExtract %float %6522 0
       %6525 = OpCompositeExtract %float %6521 1
       %6526 = OpCompositeExtract %float %6522 1
       %6527 = OpFAdd %float %6523 %6525
       %6528 = OpFAdd %float %6524 %6526
       %6529 = OpFMul %float %5700 %4436
       %6530 = OpFDiv %float %float_2 %6529
       %6531 = OpFMul %float %6527 %6530
       %6532 = OpFMul %float %6530 %4441
       %6533 = OpFMul %float %6532 %5971
       %6534 = OpExtInst %float %1 Fma %6528 %6530 %6533
       %6535 = OpExtInst %float %1 Floor %6531
       %6536 = OpFNegate %float %6535
       %6537 = OpExtInst %float %1 Fma %6527 %6530 %6536
       %6538 = OpExtInst %float %1 Fma %6537 %float_2097152 %6534
       %6539 = OpExtInst %float %1 Floor %6538
       %6540 = OpFMul %float %6535 %float_n6_28318548
       %6541 = OpExtInst %float %1 Fma %6531 %float_6_28318548 %6540
       %6542 = OpFMul %float %6539 %float_n6_28318548
       %6543 = OpExtInst %float %1 Fma %6534 %float_6_28318548 %6542
       %6544 = OpExtInst %float %1 Fma %6541 %float_2097152 %6543
       %6545 = OpFMul %float %6512 %2582
       %6546 = OpExtInst %float %1 Sin %6544
       %6547 = OpFMul %float %6546 %6545
       %6548 = OpCompositeConstruct %v3float %537 %537 %6514
       %6549 = OpCompositeConstruct %v3float %537 %537 %6547
       %6550 = OpFAdd %v3float %6548 %6549
       %6551 = OpFSub %v3float %5683 %1676
       %6552 = OpExtInst %v3float %1 NMax %6551 %276
       %6553 = OpExtInst %v3float %1 NMin %6552 %125
       %6554 = OpCompositeExtract %float %6553 0
       %6555 = OpCompositeExtract %float %6553 1
       %6556 = OpCompositeConstruct %v2float %6554 %6555
       %6557 = OpFMul %v2float %1684 %6556
       %6558 = OpFMul %v2float %6556 %1685
       %6559 = OpCompositeExtract %float %6557 0
       %6560 = OpCompositeExtract %float %6558 0
       %6561 = OpCompositeExtract %float %6557 1
       %6562 = OpCompositeExtract %float %6558 1
       %6563 = OpFAdd %float %6559 %6561
       %6564 = OpFAdd %float %6560 %6562
       %6565 = OpFMul %float %6529 %4436
       %6566 = OpFDiv %float %float_2 %6565
       %6567 = OpFMul %float %6563 %6566
       %6568 = OpFMul %float %6566 %4479
       %6569 = OpFMul %float %6568 %5971
       %6570 = OpExtInst %float %1 Fma %6564 %6566 %6569
       %6571 = OpExtInst %float %1 Floor %6567
       %6572 = OpFNegate %float %6571
       %6573 = OpExtInst %float %1 Fma %6563 %6566 %6572
       %6574 = OpExtInst %float %1 Fma %6573 %float_2097152 %6570
       %6575 = OpExtInst %float %1 Floor %6574
       %6576 = OpFMul %float %6571 %float_n6_28318548
       %6577 = OpExtInst %float %1 Fma %6567 %float_6_28318548 %6576
       %6578 = OpFMul %float %6575 %float_n6_28318548
       %6579 = OpExtInst %float %1 Fma %6570 %float_6_28318548 %6578
       %6580 = OpExtInst %float %1 Fma %6577 %float_2097152 %6579
       %6581 = OpFMul %float %6545 %2582
       %6582 = OpExtInst %float %1 Sin %6580
       %6583 = OpFMul %float %6582 %6581
       %6584 = OpCompositeConstruct %v3float %537 %537 %6583
       %6585 = OpFAdd %v3float %6550 %6584
       %6586 = OpFSub %v3float %5683 %2549
       %6587 = OpExtInst %v3float %1 NMax %6586 %276
       %6588 = OpExtInst %v3float %1 NMin %6587 %125
       %6589 = OpCompositeExtract %float %6588 0
       %6590 = OpCompositeExtract %float %6588 1
       %6591 = OpCompositeConstruct %v2float %6589 %6590
       %6592 = OpFMul %v2float %1684 %6591
       %6593 = OpFMul %v2float %6591 %1685
       %6594 = OpCompositeExtract %float %6592 0
       %6595 = OpCompositeExtract %float %6593 0
       %6596 = OpCompositeExtract %float %6592 1
       %6597 = OpCompositeExtract %float %6593 1
       %6598 = OpFAdd %float %6594 %6596
       %6599 = OpFAdd %float %6595 %6597
       %6600 = OpFMul %float %6565 %4436
       %6601 = OpFDiv %float %float_2 %6600
       %6602 = OpFMul %float %6598 %6601
       %6603 = OpFMul %float %6601 %4516
       %6604 = OpFMul %float %6603 %5971
       %6605 = OpExtInst %float %1 Fma %6599 %6601 %6604
       %6606 = OpExtInst %float %1 Floor %6602
       %6607 = OpFNegate %float %6606
       %6608 = OpExtInst %float %1 Fma %6598 %6601 %6607
       %6609 = OpExtInst %float %1 Fma %6608 %float_2097152 %6605
       %6610 = OpExtInst %float %1 Floor %6609
       %6611 = OpFMul %float %6606 %float_n6_28318548
       %6612 = OpExtInst %float %1 Fma %6602 %float_6_28318548 %6611
       %6613 = OpFMul %float %6610 %float_n6_28318548
       %6614 = OpExtInst %float %1 Fma %6605 %float_6_28318548 %6613
       %6615 = OpExtInst %float %1 Fma %6612 %float_2097152 %6614
       %6616 = OpFMul %float %6581 %2582
       %6617 = OpExtInst %float %1 Sin %6615
       %6618 = OpFMul %float %6617 %6616
       %6619 = OpCompositeConstruct %v3float %537 %537 %6618
       %6620 = OpFAdd %v3float %6585 %6619
       %6621 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_83 %int_3
       %6622 = OpLoad %float %6621
       %6623 = OpFSub %float %6622 %float_n1
       %6624 = OpExtInst %float %1 FAbs %6623
       %6625 = OpFOrdGreaterThan %bool %6624 %float_9_99999975en06
       %6626 = OpFOrdGreaterThanEqual %bool %6622 %float_n1
       %6627 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_84 %int_0
       %6628 = OpLoad %float %6627
       %6629 = OpSelect %float %6626 %6622 %6628
       %6630 = OpSelect %float %6625 %6629 %6622
       %6631 = OpFSub %float %6630 %float_1
       %6632 = OpExtInst %float %1 FAbs %6631
       %6633 = OpFOrdGreaterThan %bool %6632 %float_9_99999975en06
       %6634 = OpFOrdGreaterThanEqual %bool %6630 %float_1
       %6635 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_84 %int_1
       %6636 = OpLoad %float %6635
       %6637 = OpSelect %float %6634 %6636 %6622
       %6638 = OpSelect %float %6633 %6637 %6622
       %6639 = OpExtInst %float %1 FAbs %6638
       %6640 = OpFOrdGreaterThan %bool %6639 %float_9_99999975en06
       %6641 = OpFOrdGreaterThanEqual %bool %6638 %float_0
       %6642 = OpSelect %float %6641 %float_1 %float_n1
       %6643 = OpSelect %float %6640 %6642 %float_1
       %6644 = OpExtInst %float %1 NMax %6643 %float_n1
       %6645 = OpExtInst %float %1 NMin %6644 %float_1
       %6646 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_85 %int_2
       %6647 = OpLoad %float %6646
       %6648 = OpCompositeConstruct %v3float %6645 %6647 %float_0
       %6649 = OpFAdd %v3float %6648 %1676
       %6650 = OpExtInst %v3float %1 NMax %6649 %276
       %6651 = OpExtInst %v3float %1 NMin %6650 %125
       %6652 = OpCompositeExtract %float %6651 0
       %6653 = OpCompositeExtract %float %6651 1
       %6654 = OpCompositeConstruct %v2float %6652 %6653
       %6655 = OpFMul %v2float %1684 %6654
       %6656 = OpFMul %v2float %6654 %1685
       %6657 = OpCompositeExtract %float %6655 0
       %6658 = OpCompositeExtract %float %6656 0
       %6659 = OpCompositeExtract %float %6655 1
       %6660 = OpCompositeExtract %float %6656 1
       %6661 = OpFAdd %float %6657 %6659
       %6662 = OpFAdd %float %6658 %6660
       %6663 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_86 %int_3
       %6664 = OpLoad %float %6663
       %6665 = OpFMul %float %6664 %4579
       %6666 = OpFDiv %float %float_2 %6665
       %6667 = OpFMul %float %6661 %6666
       %6668 = OpFMul %float %6666 %4586
       %6669 = OpFMul %float %6668 %5971
       %6670 = OpExtInst %float %1 Fma %6662 %6666 %6669
       %6671 = OpExtInst %float %1 Floor %6667
       %6672 = OpFNegate %float %6671
       %6673 = OpExtInst %float %1 Fma %6661 %6666 %6672
       %6674 = OpExtInst %float %1 Fma %6673 %float_2097152 %6670
       %6675 = OpExtInst %float %1 Floor %6674
       %6676 = OpFMul %float %6671 %float_n6_28318548
       %6677 = OpExtInst %float %1 Fma %6667 %float_6_28318548 %6676
       %6678 = OpFMul %float %6675 %float_n6_28318548
       %6679 = OpExtInst %float %1 Fma %6670 %float_6_28318548 %6678
       %6680 = OpExtInst %float %1 Fma %6677 %float_2097152 %6679
       %6681 = OpFMul %float %6512 %2721
       %6682 = OpExtInst %float %1 Sin %6680
       %6683 = OpFMul %float %6682 %6681
       %6684 = OpFAdd %v3float %6648 %2549
       %6685 = OpExtInst %v3float %1 NMax %6684 %276
       %6686 = OpExtInst %v3float %1 NMin %6685 %125
       %6687 = OpCompositeExtract %float %6686 0
       %6688 = OpCompositeExtract %float %6686 1
       %6689 = OpCompositeConstruct %v2float %6687 %6688
       %6690 = OpFMul %v2float %1684 %6689
       %6691 = OpFMul %v2float %6689 %1685
       %6692 = OpCompositeExtract %float %6690 0
       %6693 = OpCompositeExtract %float %6691 0
       %6694 = OpCompositeExtract %float %6690 1
       %6695 = OpCompositeExtract %float %6691 1
       %6696 = OpFAdd %float %6692 %6694
       %6697 = OpFAdd %float %6693 %6695
       %6698 = OpFMul %float %6665 %4436
       %6699 = OpFDiv %float %float_2 %6698
       %6700 = OpFMul %float %6696 %6699
       %6701 = OpFMul %float %6699 %4621
       %6702 = OpFMul %float %6701 %5971
       %6703 = OpExtInst %float %1 Fma %6697 %6699 %6702
       %6704 = OpExtInst %float %1 Floor %6700
       %6705 = OpFNegate %float %6704
       %6706 = OpExtInst %float %1 Fma %6696 %6699 %6705
       %6707 = OpExtInst %float %1 Fma %6706 %float_2097152 %6703
       %6708 = OpExtInst %float %1 Floor %6707
       %6709 = OpFMul %float %6704 %float_n6_28318548
       %6710 = OpExtInst %float %1 Fma %6700 %float_6_28318548 %6709
       %6711 = OpFMul %float %6708 %float_n6_28318548
       %6712 = OpExtInst %float %1 Fma %6703 %float_6_28318548 %6711
       %6713 = OpExtInst %float %1 Fma %6710 %float_2097152 %6712
       %6714 = OpFMul %float %6681 %2582
       %6715 = OpExtInst %float %1 Sin %6713
       %6716 = OpFMul %float %6715 %6714
       %6717 = OpCompositeConstruct %v3float %537 %537 %6683
       %6718 = OpCompositeConstruct %v3float %537 %537 %6716
       %6719 = OpFAdd %v3float %6717 %6718
       %6720 = OpFSub %v3float %6648 %1676
       %6721 = OpExtInst %v3float %1 NMax %6720 %276
       %6722 = OpExtInst %v3float %1 NMin %6721 %125
       %6723 = OpCompositeExtract %float %6722 0
       %6724 = OpCompositeExtract %float %6722 1
       %6725 = OpCompositeConstruct %v2float %6723 %6724
       %6726 = OpFMul %v2float %1684 %6725
       %6727 = OpFMul %v2float %6725 %1685
       %6728 = OpCompositeExtract %float %6726 0
       %6729 = OpCompositeExtract %float %6727 0
       %6730 = OpCompositeExtract %float %6726 1
       %6731 = OpCompositeExtract %float %6727 1
       %6732 = OpFAdd %float %6728 %6730
       %6733 = OpFAdd %float %6729 %6731
       %6734 = OpFMul %float %6698 %4436
       %6735 = OpFDiv %float %float_2 %6734
       %6736 = OpFMul %float %6732 %6735
       %6737 = OpFMul %float %6735 %4659
       %6738 = OpFMul %float %6737 %5971
       %6739 = OpExtInst %float %1 Fma %6733 %6735 %6738
       %6740 = OpExtInst %float %1 Floor %6736
       %6741 = OpFNegate %float %6740
       %6742 = OpExtInst %float %1 Fma %6732 %6735 %6741
       %6743 = OpExtInst %float %1 Fma %6742 %float_2097152 %6739
       %6744 = OpExtInst %float %1 Floor %6743
       %6745 = OpFMul %float %6740 %float_n6_28318548
       %6746 = OpExtInst %float %1 Fma %6736 %float_6_28318548 %6745
       %6747 = OpFMul %float %6744 %float_n6_28318548
       %6748 = OpExtInst %float %1 Fma %6739 %float_6_28318548 %6747
       %6749 = OpExtInst %float %1 Fma %6746 %float_2097152 %6748
       %6750 = OpFMul %float %6714 %2582
       %6751 = OpExtInst %float %1 Sin %6749
       %6752 = OpFMul %float %6751 %6750
       %6753 = OpCompositeConstruct %v3float %537 %537 %6752
       %6754 = OpFAdd %v3float %6719 %6753
       %6755 = OpFSub %v3float %6648 %2549
       %6756 = OpExtInst %v3float %1 NMax %6755 %276
       %6757 = OpExtInst %v3float %1 NMin %6756 %125
       %6758 = OpCompositeExtract %float %6757 0
       %6759 = OpCompositeExtract %float %6757 1
       %6760 = OpCompositeConstruct %v2float %6758 %6759
       %6761 = OpFMul %v2float %1684 %6760
       %6762 = OpFMul %v2float %6760 %1685
       %6763 = OpCompositeExtract %float %6761 0
       %6764 = OpCompositeExtract %float %6762 0
       %6765 = OpCompositeExtract %float %6761 1
       %6766 = OpCompositeExtract %float %6762 1
       %6767 = OpFAdd %float %6763 %6765
       %6768 = OpFAdd %float %6764 %6766
       %6769 = OpFMul %float %6734 %4436
       %6770 = OpFDiv %float %float_2 %6769
       %6771 = OpFMul %float %6767 %6770
       %6772 = OpFMul %float %6770 %4696
       %6773 = OpFMul %float %6772 %5971
       %6774 = OpExtInst %float %1 Fma %6768 %6770 %6773
       %6775 = OpExtInst %float %1 Floor %6771
       %6776 = OpFNegate %float %6775
       %6777 = OpExtInst %float %1 Fma %6767 %6770 %6776
       %6778 = OpExtInst %float %1 Fma %6777 %float_2097152 %6774
       %6779 = OpExtInst %float %1 Floor %6778
       %6780 = OpFMul %float %6775 %float_n6_28318548
       %6781 = OpExtInst %float %1 Fma %6771 %float_6_28318548 %6780
       %6782 = OpFMul %float %6779 %float_n6_28318548
       %6783 = OpExtInst %float %1 Fma %6774 %float_6_28318548 %6782
       %6784 = OpExtInst %float %1 Fma %6781 %float_2097152 %6783
       %6785 = OpFMul %float %6750 %2582
       %6786 = OpExtInst %float %1 Sin %6784
       %6787 = OpFMul %float %6786 %6785
       %6788 = OpCompositeConstruct %v3float %537 %537 %6787
       %6789 = OpFAdd %v3float %6754 %6788
       %6790 = OpFAdd %v3float %6620 %6789
       %6791 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_0
       %6792 = OpLoad %float %6791
       %6793 = OpFSub %float %6792 %float_n1
       %6794 = OpExtInst %float %1 FAbs %6793
       %6795 = OpFOrdGreaterThan %bool %6794 %float_9_99999975en06
       %6796 = OpFOrdGreaterThanEqual %bool %6792 %float_n1
       %6797 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_1
       %6798 = OpLoad %float %6797
       %6799 = OpSelect %float %6796 %6792 %6798
       %6800 = OpSelect %float %6795 %6799 %6792
       %6801 = OpFSub %float %6800 %float_1
       %6802 = OpExtInst %float %1 FAbs %6801
       %6803 = OpFOrdGreaterThan %bool %6802 %float_9_99999975en06
       %6804 = OpFOrdGreaterThanEqual %bool %6800 %float_1
       %6805 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_2
       %6806 = OpLoad %float %6805
       %6807 = OpSelect %float %6804 %6806 %6792
       %6808 = OpSelect %float %6803 %6807 %6792
       %6809 = OpExtInst %float %1 FAbs %6808
       %6810 = OpFOrdGreaterThan %bool %6809 %float_9_99999975en06
       %6811 = OpFOrdGreaterThanEqual %bool %6808 %float_0
       %6812 = OpSelect %float %6811 %float_1 %float_n1
       %6813 = OpSelect %float %6810 %6812 %float_1
       %6814 = OpExtInst %float %1 NMax %6813 %float_n1
       %6815 = OpExtInst %float %1 NMin %6814 %float_1
       %6816 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_88 %int_3
       %6817 = OpLoad %float %6816
       %6818 = OpCompositeConstruct %v3float %6815 %6817 %float_0
       %6819 = OpFAdd %v3float %6818 %1676
       %6820 = OpExtInst %v3float %1 NMax %6819 %276
       %6821 = OpExtInst %v3float %1 NMin %6820 %125
       %6822 = OpCompositeExtract %float %6821 0
       %6823 = OpCompositeExtract %float %6821 1
       %6824 = OpCompositeConstruct %v2float %6822 %6823
       %6825 = OpFMul %v2float %1684 %6824
       %6826 = OpFMul %v2float %6824 %1685
       %6827 = OpCompositeExtract %float %6825 0
       %6828 = OpCompositeExtract %float %6826 0
       %6829 = OpCompositeExtract %float %6825 1
       %6830 = OpCompositeExtract %float %6826 1
       %6831 = OpFAdd %float %6827 %6829
       %6832 = OpFAdd %float %6828 %6830
       %6833 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_0
       %6834 = OpLoad %float %6833
       %6835 = OpFMul %float %6834 %4579
       %6836 = OpFDiv %float %float_2 %6835
       %6837 = OpFMul %float %6831 %6836
       %6838 = OpFMul %float %6836 %4586
       %6839 = OpFMul %float %6838 %5971
       %6840 = OpExtInst %float %1 Fma %6832 %6836 %6839
       %6841 = OpExtInst %float %1 Floor %6837
       %6842 = OpFNegate %float %6841
       %6843 = OpExtInst %float %1 Fma %6831 %6836 %6842
       %6844 = OpExtInst %float %1 Fma %6843 %float_2097152 %6840
       %6845 = OpExtInst %float %1 Floor %6844
       %6846 = OpFMul %float %6841 %float_n6_28318548
       %6847 = OpExtInst %float %1 Fma %6837 %float_6_28318548 %6846
       %6848 = OpFMul %float %6845 %float_n6_28318548
       %6849 = OpExtInst %float %1 Fma %6840 %float_6_28318548 %6848
       %6850 = OpExtInst %float %1 Fma %6847 %float_2097152 %6849
       %6851 = OpExtInst %float %1 Sin %6850
       %6852 = OpFMul %float %6851 %6681
       %6853 = OpFAdd %v3float %6818 %2549
       %6854 = OpExtInst %v3float %1 NMax %6853 %276
       %6855 = OpExtInst %v3float %1 NMin %6854 %125
       %6856 = OpCompositeExtract %float %6855 0
       %6857 = OpCompositeExtract %float %6855 1
       %6858 = OpCompositeConstruct %v2float %6856 %6857
       %6859 = OpFMul %v2float %1684 %6858
       %6860 = OpFMul %v2float %6858 %1685
       %6861 = OpCompositeExtract %float %6859 0
       %6862 = OpCompositeExtract %float %6860 0
       %6863 = OpCompositeExtract %float %6859 1
       %6864 = OpCompositeExtract %float %6860 1
       %6865 = OpFAdd %float %6861 %6863
       %6866 = OpFAdd %float %6862 %6864
       %6867 = OpFMul %float %6835 %4436
       %6868 = OpFDiv %float %float_2 %6867
       %6869 = OpFMul %float %6865 %6868
       %6870 = OpFMul %float %6868 %4621
       %6871 = OpFMul %float %6870 %5971
       %6872 = OpExtInst %float %1 Fma %6866 %6868 %6871
       %6873 = OpExtInst %float %1 Floor %6869
       %6874 = OpFNegate %float %6873
       %6875 = OpExtInst %float %1 Fma %6865 %6868 %6874
       %6876 = OpExtInst %float %1 Fma %6875 %float_2097152 %6872
       %6877 = OpExtInst %float %1 Floor %6876
       %6878 = OpFMul %float %6873 %float_n6_28318548
       %6879 = OpExtInst %float %1 Fma %6869 %float_6_28318548 %6878
       %6880 = OpFMul %float %6877 %float_n6_28318548
       %6881 = OpExtInst %float %1 Fma %6872 %float_6_28318548 %6880
       %6882 = OpExtInst %float %1 Fma %6879 %float_2097152 %6881
       %6883 = OpExtInst %float %1 Sin %6882
       %6884 = OpFMul %float %6883 %6714
       %6885 = OpCompositeConstruct %v3float %537 %537 %6852
       %6886 = OpCompositeConstruct %v3float %537 %537 %6884
       %6887 = OpFAdd %v3float %6885 %6886
       %6888 = OpFSub %v3float %6818 %1676
       %6889 = OpExtInst %v3float %1 NMax %6888 %276
       %6890 = OpExtInst %v3float %1 NMin %6889 %125
       %6891 = OpCompositeExtract %float %6890 0
       %6892 = OpCompositeExtract %float %6890 1
       %6893 = OpCompositeConstruct %v2float %6891 %6892
       %6894 = OpFMul %v2float %1684 %6893
       %6895 = OpFMul %v2float %6893 %1685
       %6896 = OpCompositeExtract %float %6894 0
       %6897 = OpCompositeExtract %float %6895 0
       %6898 = OpCompositeExtract %float %6894 1
       %6899 = OpCompositeExtract %float %6895 1
       %6900 = OpFAdd %float %6896 %6898
       %6901 = OpFAdd %float %6897 %6899
       %6902 = OpFMul %float %6867 %4436
       %6903 = OpFDiv %float %float_2 %6902
       %6904 = OpFMul %float %6900 %6903
       %6905 = OpFMul %float %6903 %4659
       %6906 = OpFMul %float %6905 %5971
       %6907 = OpExtInst %float %1 Fma %6901 %6903 %6906
       %6908 = OpExtInst %float %1 Floor %6904
       %6909 = OpFNegate %float %6908
       %6910 = OpExtInst %float %1 Fma %6900 %6903 %6909
       %6911 = OpExtInst %float %1 Fma %6910 %float_2097152 %6907
       %6912 = OpExtInst %float %1 Floor %6911
       %6913 = OpFMul %float %6908 %float_n6_28318548
       %6914 = OpExtInst %float %1 Fma %6904 %float_6_28318548 %6913
       %6915 = OpFMul %float %6912 %float_n6_28318548
       %6916 = OpExtInst %float %1 Fma %6907 %float_6_28318548 %6915
       %6917 = OpExtInst %float %1 Fma %6914 %float_2097152 %6916
       %6918 = OpExtInst %float %1 Sin %6917
       %6919 = OpFMul %float %6918 %6750
       %6920 = OpCompositeConstruct %v3float %537 %537 %6919
       %6921 = OpFAdd %v3float %6887 %6920
       %6922 = OpFSub %v3float %6818 %2549
       %6923 = OpExtInst %v3float %1 NMax %6922 %276
       %6924 = OpExtInst %v3float %1 NMin %6923 %125
       %6925 = OpCompositeExtract %float %6924 0
       %6926 = OpCompositeExtract %float %6924 1
       %6927 = OpCompositeConstruct %v2float %6925 %6926
       %6928 = OpFMul %v2float %1684 %6927
       %6929 = OpFMul %v2float %6927 %1685
       %6930 = OpCompositeExtract %float %6928 0
       %6931 = OpCompositeExtract %float %6929 0
       %6932 = OpCompositeExtract %float %6928 1
       %6933 = OpCompositeExtract %float %6929 1
       %6934 = OpFAdd %float %6930 %6932
       %6935 = OpFAdd %float %6931 %6933
       %6936 = OpFMul %float %6902 %4436
       %6937 = OpFDiv %float %float_2 %6936
       %6938 = OpFMul %float %6934 %6937
       %6939 = OpFMul %float %6937 %4696
       %6940 = OpFMul %float %6939 %5971
       %6941 = OpExtInst %float %1 Fma %6935 %6937 %6940
       %6942 = OpExtInst %float %1 Floor %6938
       %6943 = OpFNegate %float %6942
       %6944 = OpExtInst %float %1 Fma %6934 %6937 %6943
       %6945 = OpExtInst %float %1 Fma %6944 %float_2097152 %6941
       %6946 = OpExtInst %float %1 Floor %6945
       %6947 = OpFMul %float %6942 %float_n6_28318548
       %6948 = OpExtInst %float %1 Fma %6938 %float_6_28318548 %6947
       %6949 = OpFMul %float %6946 %float_n6_28318548
       %6950 = OpExtInst %float %1 Fma %6941 %float_6_28318548 %6949
       %6951 = OpExtInst %float %1 Fma %6948 %float_2097152 %6950
       %6952 = OpExtInst %float %1 Sin %6951
       %6953 = OpFMul %float %6952 %6785
       %6954 = OpCompositeConstruct %v3float %537 %537 %6953
       %6955 = OpFAdd %v3float %6921 %6954
       %6956 = OpFAdd %v3float %6790 %6955
       %6957 = OpFMul %float %3554 %float_8
       %6958 = OpFMul %float %5699 %6957
       %6959 = OpFDiv %float %float_2 %6958
       %6960 = OpFMul %float %5696 %6959
       %6961 = OpFMul %float %6959 %4887
       %6962 = OpFMul %float %6961 %5971
       %6963 = OpExtInst %float %1 Fma %5697 %6959 %6962
       %6964 = OpExtInst %float %1 Floor %6960
       %6965 = OpFNegate %float %6964
       %6966 = OpExtInst %float %1 Fma %5696 %6959 %6965
       %6967 = OpExtInst %float %1 Fma %6966 %float_2097152 %6963
       %6968 = OpExtInst %float %1 Floor %6967
       %6969 = OpFMul %float %6964 %float_n6_28318548
       %6970 = OpExtInst %float %1 Fma %6960 %float_6_28318548 %6969
       %6971 = OpFMul %float %6968 %float_n6_28318548
       %6972 = OpExtInst %float %1 Fma %6963 %float_6_28318548 %6971
       %6973 = OpExtInst %float %1 Fma %6970 %float_2097152 %6972
       %6974 = OpFMul %float %6512 %float_8
       %6975 = OpExtInst %float %1 Sin %6973
       %6976 = OpFMul %float %6975 %6974
       %6977 = OpFMul %float %6958 %4436
       %6978 = OpFDiv %float %float_2 %6977
       %6979 = OpFMul %float %6527 %6978
       %6980 = OpFMul %float %6978 %4908
       %6981 = OpFMul %float %6980 %5971
       %6982 = OpExtInst %float %1 Fma %6528 %6978 %6981
       %6983 = OpExtInst %float %1 Floor %6979
       %6984 = OpFNegate %float %6983
       %6985 = OpExtInst %float %1 Fma %6527 %6978 %6984
       %6986 = OpExtInst %float %1 Fma %6985 %float_2097152 %6982
       %6987 = OpExtInst %float %1 Floor %6986
       %6988 = OpFMul %float %6983 %float_n6_28318548
       %6989 = OpExtInst %float %1 Fma %6979 %float_6_28318548 %6988
       %6990 = OpFMul %float %6987 %float_n6_28318548
       %6991 = OpExtInst %float %1 Fma %6982 %float_6_28318548 %6990
       %6992 = OpExtInst %float %1 Fma %6989 %float_2097152 %6991
       %6993 = OpFMul %float %6974 %2582
       %6994 = OpExtInst %float %1 Sin %6992
       %6995 = OpFMul %float %6994 %6993
       %6996 = OpCompositeConstruct %v3float %537 %537 %6976
       %6997 = OpCompositeConstruct %v3float %537 %537 %6995
       %6998 = OpFAdd %v3float %6996 %6997
       %6999 = OpFMul %float %6977 %4436
       %7000 = OpFDiv %float %float_2 %6999
       %7001 = OpFMul %float %6563 %7000
       %7002 = OpFMul %float %7000 %4932
       %7003 = OpFMul %float %7002 %5971
       %7004 = OpExtInst %float %1 Fma %6564 %7000 %7003
       %7005 = OpExtInst %float %1 Floor %7001
       %7006 = OpFNegate %float %7005
       %7007 = OpExtInst %float %1 Fma %6563 %7000 %7006
       %7008 = OpExtInst %float %1 Fma %7007 %float_2097152 %7004
       %7009 = OpExtInst %float %1 Floor %7008
       %7010 = OpFMul %float %7005 %float_n6_28318548
       %7011 = OpExtInst %float %1 Fma %7001 %float_6_28318548 %7010
       %7012 = OpFMul %float %7009 %float_n6_28318548
       %7013 = OpExtInst %float %1 Fma %7004 %float_6_28318548 %7012
       %7014 = OpExtInst %float %1 Fma %7011 %float_2097152 %7013
       %7015 = OpFMul %float %6993 %2582
       %7016 = OpExtInst %float %1 Sin %7014
       %7017 = OpFMul %float %7016 %7015
       %7018 = OpCompositeConstruct %v3float %537 %537 %7017
       %7019 = OpFAdd %v3float %6998 %7018
       %7020 = OpFMul %float %6999 %4436
       %7021 = OpFDiv %float %float_2 %7020
       %7022 = OpFMul %float %6598 %7021
       %7023 = OpFMul %float %7021 %4955
       %7024 = OpFMul %float %7023 %5971
       %7025 = OpExtInst %float %1 Fma %6599 %7021 %7024
       %7026 = OpExtInst %float %1 Floor %7022
       %7027 = OpFNegate %float %7026
       %7028 = OpExtInst %float %1 Fma %6598 %7021 %7027
       %7029 = OpExtInst %float %1 Fma %7028 %float_2097152 %7025
       %7030 = OpExtInst %float %1 Floor %7029
       %7031 = OpFMul %float %7026 %float_n6_28318548
       %7032 = OpExtInst %float %1 Fma %7022 %float_6_28318548 %7031
       %7033 = OpFMul %float %7030 %float_n6_28318548
       %7034 = OpExtInst %float %1 Fma %7025 %float_6_28318548 %7033
       %7035 = OpExtInst %float %1 Fma %7032 %float_2097152 %7034
       %7036 = OpFMul %float %7015 %2582
       %7037 = OpExtInst %float %1 Sin %7035
       %7038 = OpFMul %float %7037 %7036
       %7039 = OpCompositeConstruct %v3float %537 %537 %7038
       %7040 = OpFAdd %v3float %7019 %7039
       %7041 = OpFMul %float %6957 %4578
       %7042 = OpFMul %float %6664 %7041
       %7043 = OpFDiv %float %float_2 %7042
       %7044 = OpFMul %float %6661 %7043
       %7045 = OpFMul %float %7043 %4979
       %7046 = OpFMul %float %7045 %5971
       %7047 = OpExtInst %float %1 Fma %6662 %7043 %7046
       %7048 = OpExtInst %float %1 Floor %7044
       %7049 = OpFNegate %float %7048
       %7050 = OpExtInst %float %1 Fma %6661 %7043 %7049
       %7051 = OpExtInst %float %1 Fma %7050 %float_2097152 %7047
       %7052 = OpExtInst %float %1 Floor %7051
       %7053 = OpFMul %float %7048 %float_n6_28318548
       %7054 = OpExtInst %float %1 Fma %7044 %float_6_28318548 %7053
       %7055 = OpFMul %float %7052 %float_n6_28318548
       %7056 = OpExtInst %float %1 Fma %7047 %float_6_28318548 %7055
       %7057 = OpExtInst %float %1 Fma %7054 %float_2097152 %7056
       %7058 = OpFMul %float %6974 %2721
       %7059 = OpExtInst %float %1 Sin %7057
       %7060 = OpFMul %float %7059 %7058
       %7061 = OpFMul %float %7042 %4436
       %7062 = OpFDiv %float %float_2 %7061
       %7063 = OpFMul %float %6696 %7062
       %7064 = OpFMul %float %7062 %5000
       %7065 = OpFMul %float %7064 %5971
       %7066 = OpExtInst %float %1 Fma %6697 %7062 %7065
       %7067 = OpExtInst %float %1 Floor %7063
       %7068 = OpFNegate %float %7067
       %7069 = OpExtInst %float %1 Fma %6696 %7062 %7068
       %7070 = OpExtInst %float %1 Fma %7069 %float_2097152 %7066
       %7071 = OpExtInst %float %1 Floor %7070
       %7072 = OpFMul %float %7067 %float_n6_28318548
       %7073 = OpExtInst %float %1 Fma %7063 %float_6_28318548 %7072
       %7074 = OpFMul %float %7071 %float_n6_28318548
       %7075 = OpExtInst %float %1 Fma %7066 %float_6_28318548 %7074
       %7076 = OpExtInst %float %1 Fma %7073 %float_2097152 %7075
       %7077 = OpFMul %float %7058 %2582
       %7078 = OpExtInst %float %1 Sin %7076
       %7079 = OpFMul %float %7078 %7077
       %7080 = OpCompositeConstruct %v3float %537 %537 %7060
       %7081 = OpCompositeConstruct %v3float %537 %537 %7079
       %7082 = OpFAdd %v3float %7080 %7081
       %7083 = OpFMul %float %7061 %4436
       %7084 = OpFDiv %float %float_2 %7083
       %7085 = OpFMul %float %6732 %7084
       %7086 = OpFMul %float %7084 %5024
       %7087 = OpFMul %float %7086 %5971
       %7088 = OpExtInst %float %1 Fma %6733 %7084 %7087
       %7089 = OpExtInst %float %1 Floor %7085
       %7090 = OpFNegate %float %7089
       %7091 = OpExtInst %float %1 Fma %6732 %7084 %7090
       %7092 = OpExtInst %float %1 Fma %7091 %float_2097152 %7088
       %7093 = OpExtInst %float %1 Floor %7092
       %7094 = OpFMul %float %7089 %float_n6_28318548
       %7095 = OpExtInst %float %1 Fma %7085 %float_6_28318548 %7094
       %7096 = OpFMul %float %7093 %float_n6_28318548
       %7097 = OpExtInst %float %1 Fma %7088 %float_6_28318548 %7096
       %7098 = OpExtInst %float %1 Fma %7095 %float_2097152 %7097
       %7099 = OpFMul %float %7077 %2582
       %7100 = OpExtInst %float %1 Sin %7098
       %7101 = OpFMul %float %7100 %7099
       %7102 = OpCompositeConstruct %v3float %537 %537 %7101
       %7103 = OpFAdd %v3float %7082 %7102
       %7104 = OpFMul %float %7083 %4436
       %7105 = OpFDiv %float %float_2 %7104
       %7106 = OpFMul %float %6767 %7105
       %7107 = OpFMul %float %7105 %5047
       %7108 = OpFMul %float %7107 %5971
       %7109 = OpExtInst %float %1 Fma %6768 %7105 %7108
       %7110 = OpExtInst %float %1 Floor %7106
       %7111 = OpFNegate %float %7110
       %7112 = OpExtInst %float %1 Fma %6767 %7105 %7111
       %7113 = OpExtInst %float %1 Fma %7112 %float_2097152 %7109
       %7114 = OpExtInst %float %1 Floor %7113
       %7115 = OpFMul %float %7110 %float_n6_28318548
       %7116 = OpExtInst %float %1 Fma %7106 %float_6_28318548 %7115
       %7117 = OpFMul %float %7114 %float_n6_28318548
       %7118 = OpExtInst %float %1 Fma %7109 %float_6_28318548 %7117
       %7119 = OpExtInst %float %1 Fma %7116 %float_2097152 %7118
       %7120 = OpFMul %float %7099 %2582
       %7121 = OpExtInst %float %1 Sin %7119
       %7122 = OpFMul %float %7121 %7120
       %7123 = OpCompositeConstruct %v3float %537 %537 %7122
       %7124 = OpFAdd %v3float %7103 %7123
       %7125 = OpFAdd %v3float %7040 %7124
       %7126 = OpFMul %float %6834 %7041
       %7127 = OpFDiv %float %float_2 %7126
       %7128 = OpFMul %float %6831 %7127
       %7129 = OpFMul %float %7127 %4979
       %7130 = OpFMul %float %7129 %5971
       %7131 = OpExtInst %float %1 Fma %6832 %7127 %7130
       %7132 = OpExtInst %float %1 Floor %7128
       %7133 = OpFNegate %float %7132
       %7134 = OpExtInst %float %1 Fma %6831 %7127 %7133
       %7135 = OpExtInst %float %1 Fma %7134 %float_2097152 %7131
       %7136 = OpExtInst %float %1 Floor %7135
       %7137 = OpFMul %float %7132 %float_n6_28318548
       %7138 = OpExtInst %float %1 Fma %7128 %float_6_28318548 %7137
       %7139 = OpFMul %float %7136 %float_n6_28318548
       %7140 = OpExtInst %float %1 Fma %7131 %float_6_28318548 %7139
       %7141 = OpExtInst %float %1 Fma %7138 %float_2097152 %7140
       %7142 = OpExtInst %float %1 Sin %7141
       %7143 = OpFMul %float %7142 %7058
       %7144 = OpFMul %float %7126 %4436
       %7145 = OpFDiv %float %float_2 %7144
       %7146 = OpFMul %float %6865 %7145
       %7147 = OpFMul %float %7145 %5000
       %7148 = OpFMul %float %7147 %5971
       %7149 = OpExtInst %float %1 Fma %6866 %7145 %7148
       %7150 = OpExtInst %float %1 Floor %7146
       %7151 = OpFNegate %float %7150
       %7152 = OpExtInst %float %1 Fma %6865 %7145 %7151
       %7153 = OpExtInst %float %1 Fma %7152 %float_2097152 %7149
       %7154 = OpExtInst %float %1 Floor %7153
       %7155 = OpFMul %float %7150 %float_n6_28318548
       %7156 = OpExtInst %float %1 Fma %7146 %float_6_28318548 %7155
       %7157 = OpFMul %float %7154 %float_n6_28318548
       %7158 = OpExtInst %float %1 Fma %7149 %float_6_28318548 %7157
       %7159 = OpExtInst %float %1 Fma %7156 %float_2097152 %7158
       %7160 = OpExtInst %float %1 Sin %7159
       %7161 = OpFMul %float %7160 %7077
       %7162 = OpCompositeConstruct %v3float %537 %537 %7143
       %7163 = OpCompositeConstruct %v3float %537 %537 %7161
       %7164 = OpFAdd %v3float %7162 %7163
       %7165 = OpFMul %float %7144 %4436
       %7166 = OpFDiv %float %float_2 %7165
       %7167 = OpFMul %float %6900 %7166
       %7168 = OpFMul %float %7166 %5024
       %7169 = OpFMul %float %7168 %5971
       %7170 = OpExtInst %float %1 Fma %6901 %7166 %7169
       %7171 = OpExtInst %float %1 Floor %7167
       %7172 = OpFNegate %float %7171
       %7173 = OpExtInst %float %1 Fma %6900 %7166 %7172
       %7174 = OpExtInst %float %1 Fma %7173 %float_2097152 %7170
       %7175 = OpExtInst %float %1 Floor %7174
       %7176 = OpFMul %float %7171 %float_n6_28318548
       %7177 = OpExtInst %float %1 Fma %7167 %float_6_28318548 %7176
       %7178 = OpFMul %float %7175 %float_n6_28318548
       %7179 = OpExtInst %float %1 Fma %7170 %float_6_28318548 %7178
       %7180 = OpExtInst %float %1 Fma %7177 %float_2097152 %7179
       %7181 = OpExtInst %float %1 Sin %7180
       %7182 = OpFMul %float %7181 %7099
       %7183 = OpCompositeConstruct %v3float %537 %537 %7182
       %7184 = OpFAdd %v3float %7164 %7183
       %7185 = OpFMul %float %7165 %4436
       %7186 = OpFDiv %float %float_2 %7185
       %7187 = OpFMul %float %6934 %7186
       %7188 = OpFMul %float %7186 %5047
       %7189 = OpFMul %float %7188 %5971
       %7190 = OpExtInst %float %1 Fma %6935 %7186 %7189
       %7191 = OpExtInst %float %1 Floor %7187
       %7192 = OpFNegate %float %7191
       %7193 = OpExtInst %float %1 Fma %6934 %7186 %7192
       %7194 = OpExtInst %float %1 Fma %7193 %float_2097152 %7190
       %7195 = OpExtInst %float %1 Floor %7194
       %7196 = OpFMul %float %7191 %float_n6_28318548
       %7197 = OpExtInst %float %1 Fma %7187 %float_6_28318548 %7196
       %7198 = OpFMul %float %7195 %float_n6_28318548
       %7199 = OpExtInst %float %1 Fma %7190 %float_6_28318548 %7198
       %7200 = OpExtInst %float %1 Fma %7197 %float_2097152 %7199
       %7201 = OpExtInst %float %1 Sin %7200
       %7202 = OpFMul %float %7201 %7120
       %7203 = OpCompositeConstruct %v3float %537 %537 %7202
       %7204 = OpFAdd %v3float %7184 %7203
       %7205 = OpFAdd %v3float %7125 %7204
       %7206 = OpFMul %float %5699 %5147
       %7207 = OpFDiv %float %float_2 %7206
       %7208 = OpFMul %float %5696 %7207
       %7209 = OpFMul %float %7207 %5152
       %7210 = OpFMul %float %7209 %5971
       %7211 = OpExtInst %float %1 Fma %5697 %7207 %7210
       %7212 = OpExtInst %float %1 Floor %7208
       %7213 = OpFNegate %float %7212
       %7214 = OpExtInst %float %1 Fma %5696 %7207 %7213
       %7215 = OpExtInst %float %1 Fma %7214 %float_2097152 %7211
       %7216 = OpExtInst %float %1 Floor %7215
       %7217 = OpFMul %float %7212 %float_n6_28318548
       %7218 = OpExtInst %float %1 Fma %7208 %float_6_28318548 %7217
       %7219 = OpFMul %float %7216 %float_n6_28318548
       %7220 = OpExtInst %float %1 Fma %7211 %float_6_28318548 %7219
       %7221 = OpExtInst %float %1 Fma %7218 %float_2097152 %7220
       %7222 = OpFMul %float %6512 %float_4
       %7223 = OpExtInst %float %1 Sin %7221
       %7224 = OpFMul %float %7223 %7222
       %7225 = OpFMul %float %7206 %4436
       %7226 = OpFDiv %float %float_2 %7225
       %7227 = OpFMul %float %6527 %7226
       %7228 = OpFMul %float %7226 %5172
       %7229 = OpFMul %float %7228 %5971
       %7230 = OpExtInst %float %1 Fma %6528 %7226 %7229
       %7231 = OpExtInst %float %1 Floor %7227
       %7232 = OpFNegate %float %7231
       %7233 = OpExtInst %float %1 Fma %6527 %7226 %7232
       %7234 = OpExtInst %float %1 Fma %7233 %float_2097152 %7230
       %7235 = OpExtInst %float %1 Floor %7234
       %7236 = OpFMul %float %7231 %float_n6_28318548
       %7237 = OpExtInst %float %1 Fma %7227 %float_6_28318548 %7236
       %7238 = OpFMul %float %7235 %float_n6_28318548
       %7239 = OpExtInst %float %1 Fma %7230 %float_6_28318548 %7238
       %7240 = OpExtInst %float %1 Fma %7237 %float_2097152 %7239
       %7241 = OpFMul %float %7222 %2582
       %7242 = OpExtInst %float %1 Sin %7240
       %7243 = OpFMul %float %7242 %7241
       %7244 = OpCompositeConstruct %v3float %537 %537 %7224
       %7245 = OpCompositeConstruct %v3float %537 %537 %7243
       %7246 = OpFAdd %v3float %7244 %7245
       %7247 = OpFMul %float %7225 %4436
       %7248 = OpFDiv %float %float_2 %7247
       %7249 = OpFMul %float %6563 %7248
       %7250 = OpFMul %float %7248 %5195
       %7251 = OpFMul %float %7250 %5971
       %7252 = OpExtInst %float %1 Fma %6564 %7248 %7251
       %7253 = OpExtInst %float %1 Floor %7249
       %7254 = OpFNegate %float %7253
       %7255 = OpExtInst %float %1 Fma %6563 %7248 %7254
       %7256 = OpExtInst %float %1 Fma %7255 %float_2097152 %7252
       %7257 = OpExtInst %float %1 Floor %7256
       %7258 = OpFMul %float %7253 %float_n6_28318548
       %7259 = OpExtInst %float %1 Fma %7249 %float_6_28318548 %7258
       %7260 = OpFMul %float %7257 %float_n6_28318548
       %7261 = OpExtInst %float %1 Fma %7252 %float_6_28318548 %7260
       %7262 = OpExtInst %float %1 Fma %7259 %float_2097152 %7261
       %7263 = OpFMul %float %7241 %2582
       %7264 = OpExtInst %float %1 Sin %7262
       %7265 = OpFMul %float %7264 %7263
       %7266 = OpCompositeConstruct %v3float %537 %537 %7265
       %7267 = OpFAdd %v3float %7246 %7266
       %7268 = OpFMul %float %7247 %4436
       %7269 = OpFDiv %float %float_2 %7268
       %7270 = OpFMul %float %6598 %7269
       %7271 = OpFMul %float %7269 %5217
       %7272 = OpFMul %float %7271 %5971
       %7273 = OpExtInst %float %1 Fma %6599 %7269 %7272
       %7274 = OpExtInst %float %1 Floor %7270
       %7275 = OpFNegate %float %7274
       %7276 = OpExtInst %float %1 Fma %6598 %7269 %7275
       %7277 = OpExtInst %float %1 Fma %7276 %float_2097152 %7273
       %7278 = OpExtInst %float %1 Floor %7277
       %7279 = OpFMul %float %7274 %float_n6_28318548
       %7280 = OpExtInst %float %1 Fma %7270 %float_6_28318548 %7279
       %7281 = OpFMul %float %7278 %float_n6_28318548
       %7282 = OpExtInst %float %1 Fma %7273 %float_6_28318548 %7281
       %7283 = OpExtInst %float %1 Fma %7280 %float_2097152 %7282
       %7284 = OpFMul %float %7263 %2582
       %7285 = OpExtInst %float %1 Sin %7283
       %7286 = OpFMul %float %7285 %7284
       %7287 = OpCompositeConstruct %v3float %537 %537 %7286
       %7288 = OpFAdd %v3float %7267 %7287
       %7289 = OpFMul %float %6664 %5235
       %7290 = OpFDiv %float %float_2 %7289
       %7291 = OpFMul %float %6661 %7290
       %7292 = OpFMul %float %7290 %5240
       %7293 = OpFMul %float %7292 %5971
       %7294 = OpExtInst %float %1 Fma %6662 %7290 %7293
       %7295 = OpExtInst %float %1 Floor %7291
       %7296 = OpFNegate %float %7295
       %7297 = OpExtInst %float %1 Fma %6661 %7290 %7296
       %7298 = OpExtInst %float %1 Fma %7297 %float_2097152 %7294
       %7299 = OpExtInst %float %1 Floor %7298
       %7300 = OpFMul %float %7295 %float_n6_28318548
       %7301 = OpExtInst %float %1 Fma %7291 %float_6_28318548 %7300
       %7302 = OpFMul %float %7299 %float_n6_28318548
       %7303 = OpExtInst %float %1 Fma %7294 %float_6_28318548 %7302
       %7304 = OpExtInst %float %1 Fma %7301 %float_2097152 %7303
       %7305 = OpFMul %float %7222 %2721
       %7306 = OpExtInst %float %1 Sin %7304
       %7307 = OpFMul %float %7306 %7305
       %7308 = OpFMul %float %7289 %4436
       %7309 = OpFDiv %float %float_2 %7308
       %7310 = OpFMul %float %6696 %7309
       %7311 = OpFMul %float %7309 %5260
       %7312 = OpFMul %float %7311 %5971
       %7313 = OpExtInst %float %1 Fma %6697 %7309 %7312
       %7314 = OpExtInst %float %1 Floor %7310
       %7315 = OpFNegate %float %7314
       %7316 = OpExtInst %float %1 Fma %6696 %7309 %7315
       %7317 = OpExtInst %float %1 Fma %7316 %float_2097152 %7313
       %7318 = OpExtInst %float %1 Floor %7317
       %7319 = OpFMul %float %7314 %float_n6_28318548
       %7320 = OpExtInst %float %1 Fma %7310 %float_6_28318548 %7319
       %7321 = OpFMul %float %7318 %float_n6_28318548
       %7322 = OpExtInst %float %1 Fma %7313 %float_6_28318548 %7321
       %7323 = OpExtInst %float %1 Fma %7320 %float_2097152 %7322
       %7324 = OpFMul %float %7305 %2582
       %7325 = OpExtInst %float %1 Sin %7323
       %7326 = OpFMul %float %7325 %7324
       %7327 = OpCompositeConstruct %v3float %537 %537 %7307
       %7328 = OpCompositeConstruct %v3float %537 %537 %7326
       %7329 = OpFAdd %v3float %7327 %7328
       %7330 = OpFMul %float %7308 %4436
       %7331 = OpFDiv %float %float_2 %7330
       %7332 = OpFMul %float %6732 %7331
       %7333 = OpFMul %float %7331 %5283
       %7334 = OpFMul %float %7333 %5971
       %7335 = OpExtInst %float %1 Fma %6733 %7331 %7334
       %7336 = OpExtInst %float %1 Floor %7332
       %7337 = OpFNegate %float %7336
       %7338 = OpExtInst %float %1 Fma %6732 %7331 %7337
       %7339 = OpExtInst %float %1 Fma %7338 %float_2097152 %7335
       %7340 = OpExtInst %float %1 Floor %7339
       %7341 = OpFMul %float %7336 %float_n6_28318548
       %7342 = OpExtInst %float %1 Fma %7332 %float_6_28318548 %7341
       %7343 = OpFMul %float %7340 %float_n6_28318548
       %7344 = OpExtInst %float %1 Fma %7335 %float_6_28318548 %7343
       %7345 = OpExtInst %float %1 Fma %7342 %float_2097152 %7344
       %7346 = OpFMul %float %7324 %2582
       %7347 = OpExtInst %float %1 Sin %7345
       %7348 = OpFMul %float %7347 %7346
       %7349 = OpCompositeConstruct %v3float %537 %537 %7348
       %7350 = OpFAdd %v3float %7329 %7349
       %7351 = OpFMul %float %7330 %4436
       %7352 = OpFDiv %float %float_2 %7351
       %7353 = OpFMul %float %6767 %7352
       %7354 = OpFMul %float %7352 %5305
       %7355 = OpFMul %float %7354 %5971
       %7356 = OpExtInst %float %1 Fma %6768 %7352 %7355
       %7357 = OpExtInst %float %1 Floor %7353
       %7358 = OpFNegate %float %7357
       %7359 = OpExtInst %float %1 Fma %6767 %7352 %7358
       %7360 = OpExtInst %float %1 Fma %7359 %float_2097152 %7356
       %7361 = OpExtInst %float %1 Floor %7360
       %7362 = OpFMul %float %7357 %float_n6_28318548
       %7363 = OpExtInst %float %1 Fma %7353 %float_6_28318548 %7362
       %7364 = OpFMul %float %7361 %float_n6_28318548
       %7365 = OpExtInst %float %1 Fma %7356 %float_6_28318548 %7364
       %7366 = OpExtInst %float %1 Fma %7363 %float_2097152 %7365
       %7367 = OpFMul %float %7346 %2582
       %7368 = OpExtInst %float %1 Sin %7366
       %7369 = OpFMul %float %7368 %7367
       %7370 = OpCompositeConstruct %v3float %537 %537 %7369
       %7371 = OpFAdd %v3float %7350 %7370
       %7372 = OpFAdd %v3float %7288 %7371
       %7373 = OpFMul %float %6834 %5235
       %7374 = OpFDiv %float %float_2 %7373
       %7375 = OpFMul %float %6831 %7374
       %7376 = OpFMul %float %7374 %5240
       %7377 = OpFMul %float %7376 %5971
       %7378 = OpExtInst %float %1 Fma %6832 %7374 %7377
       %7379 = OpExtInst %float %1 Floor %7375
       %7380 = OpFNegate %float %7379
       %7381 = OpExtInst %float %1 Fma %6831 %7374 %7380
       %7382 = OpExtInst %float %1 Fma %7381 %float_2097152 %7378
       %7383 = OpExtInst %float %1 Floor %7382
       %7384 = OpFMul %float %7379 %float_n6_28318548
       %7385 = OpExtInst %float %1 Fma %7375 %float_6_28318548 %7384
       %7386 = OpFMul %float %7383 %float_n6_28318548
       %7387 = OpExtInst %float %1 Fma %7378 %float_6_28318548 %7386
       %7388 = OpExtInst %float %1 Fma %7385 %float_2097152 %7387
       %7389 = OpExtInst %float %1 Sin %7388
       %7390 = OpFMul %float %7389 %7305
       %7391 = OpFMul %float %7373 %4436
       %7392 = OpFDiv %float %float_2 %7391
       %7393 = OpFMul %float %6865 %7392
       %7394 = OpFMul %float %7392 %5260
       %7395 = OpFMul %float %7394 %5971
       %7396 = OpExtInst %float %1 Fma %6866 %7392 %7395
       %7397 = OpExtInst %float %1 Floor %7393
       %7398 = OpFNegate %float %7397
       %7399 = OpExtInst %float %1 Fma %6865 %7392 %7398
       %7400 = OpExtInst %float %1 Fma %7399 %float_2097152 %7396
       %7401 = OpExtInst %float %1 Floor %7400
       %7402 = OpFMul %float %7397 %float_n6_28318548
       %7403 = OpExtInst %float %1 Fma %7393 %float_6_28318548 %7402
       %7404 = OpFMul %float %7401 %float_n6_28318548
       %7405 = OpExtInst %float %1 Fma %7396 %float_6_28318548 %7404
       %7406 = OpExtInst %float %1 Fma %7403 %float_2097152 %7405
       %7407 = OpExtInst %float %1 Sin %7406
       %7408 = OpFMul %float %7407 %7324
       %7409 = OpCompositeConstruct %v3float %537 %537 %7390
       %7410 = OpCompositeConstruct %v3float %537 %537 %7408
       %7411 = OpFAdd %v3float %7409 %7410
       %7412 = OpFMul %float %7391 %4436
       %7413 = OpFDiv %float %float_2 %7412
       %7414 = OpFMul %float %6900 %7413
       %7415 = OpFMul %float %7413 %5283
       %7416 = OpFMul %float %7415 %5971
       %7417 = OpExtInst %float %1 Fma %6901 %7413 %7416
       %7418 = OpExtInst %float %1 Floor %7414
       %7419 = OpFNegate %float %7418
       %7420 = OpExtInst %float %1 Fma %6900 %7413 %7419
       %7421 = OpExtInst %float %1 Fma %7420 %float_2097152 %7417
       %7422 = OpExtInst %float %1 Floor %7421
       %7423 = OpFMul %float %7418 %float_n6_28318548
       %7424 = OpExtInst %float %1 Fma %7414 %float_6_28318548 %7423
       %7425 = OpFMul %float %7422 %float_n6_28318548
       %7426 = OpExtInst %float %1 Fma %7417 %float_6_28318548 %7425
       %7427 = OpExtInst %float %1 Fma %7424 %float_2097152 %7426
       %7428 = OpExtInst %float %1 Sin %7427
       %7429 = OpFMul %float %7428 %7346
       %7430 = OpCompositeConstruct %v3float %537 %537 %7429
       %7431 = OpFAdd %v3float %7411 %7430
       %7432 = OpFMul %float %7412 %4436
       %7433 = OpFDiv %float %float_2 %7432
       %7434 = OpFMul %float %6934 %7433
       %7435 = OpFMul %float %7433 %5305
       %7436 = OpFMul %float %7435 %5971
       %7437 = OpExtInst %float %1 Fma %6935 %7433 %7436
       %7438 = OpExtInst %float %1 Floor %7434
       %7439 = OpFNegate %float %7438
       %7440 = OpExtInst %float %1 Fma %6934 %7433 %7439
       %7441 = OpExtInst %float %1 Fma %7440 %float_2097152 %7437
       %7442 = OpExtInst %float %1 Floor %7441
       %7443 = OpFMul %float %7438 %float_n6_28318548
       %7444 = OpExtInst %float %1 Fma %7434 %float_6_28318548 %7443
       %7445 = OpFMul %float %7442 %float_n6_28318548
       %7446 = OpExtInst %float %1 Fma %7437 %float_6_28318548 %7445
       %7447 = OpExtInst %float %1 Fma %7444 %float_2097152 %7446
       %7448 = OpExtInst %float %1 Sin %7447
       %7449 = OpFMul %float %7448 %7367
       %7450 = OpCompositeConstruct %v3float %537 %537 %7449
       %7451 = OpFAdd %v3float %7431 %7450
       %7452 = OpFAdd %v3float %7372 %7451
       %7453 = OpFMul %float %5699 %5404
       %7454 = OpFDiv %float %float_2 %7453
       %7455 = OpFMul %float %5696 %7454
       %7456 = OpFMul %float %7454 %4887
       %7457 = OpFMul %float %7456 %5971
       %7458 = OpExtInst %float %1 Fma %5697 %7454 %7457
       %7459 = OpExtInst %float %1 Floor %7455
       %7460 = OpFNegate %float %7459
       %7461 = OpExtInst %float %1 Fma %5696 %7454 %7460
       %7462 = OpExtInst %float %1 Fma %7461 %float_2097152 %7458
       %7463 = OpExtInst %float %1 Floor %7462
       %7464 = OpFMul %float %7459 %float_n6_28318548
       %7465 = OpExtInst %float %1 Fma %7455 %float_6_28318548 %7464
       %7466 = OpFMul %float %7463 %float_n6_28318548
       %7467 = OpExtInst %float %1 Fma %7458 %float_6_28318548 %7466
       %7468 = OpExtInst %float %1 Fma %7465 %float_2097152 %7467
       %7469 = OpFMul %float %6512 %float_0_5
       %7470 = OpExtInst %float %1 Sin %7468
       %7471 = OpFMul %float %7470 %7469
       %7472 = OpFMul %float %7453 %4436
       %7473 = OpFDiv %float %float_2 %7472
       %7474 = OpFMul %float %6527 %7473
       %7475 = OpFMul %float %7473 %4908
       %7476 = OpFMul %float %7475 %5971
       %7477 = OpExtInst %float %1 Fma %6528 %7473 %7476
       %7478 = OpExtInst %float %1 Floor %7474
       %7479 = OpFNegate %float %7478
       %7480 = OpExtInst %float %1 Fma %6527 %7473 %7479
       %7481 = OpExtInst %float %1 Fma %7480 %float_2097152 %7477
       %7482 = OpExtInst %float %1 Floor %7481
       %7483 = OpFMul %float %7478 %float_n6_28318548
       %7484 = OpExtInst %float %1 Fma %7474 %float_6_28318548 %7483
       %7485 = OpFMul %float %7482 %float_n6_28318548
       %7486 = OpExtInst %float %1 Fma %7477 %float_6_28318548 %7485
       %7487 = OpExtInst %float %1 Fma %7484 %float_2097152 %7486
       %7488 = OpFMul %float %7469 %2582
       %7489 = OpExtInst %float %1 Sin %7487
       %7490 = OpFMul %float %7489 %7488
       %7491 = OpCompositeConstruct %v3float %537 %537 %7471
       %7492 = OpCompositeConstruct %v3float %537 %537 %7490
       %7493 = OpFAdd %v3float %7491 %7492
       %7494 = OpFMul %float %7472 %4436
       %7495 = OpFDiv %float %float_2 %7494
       %7496 = OpFMul %float %6563 %7495
       %7497 = OpFMul %float %7495 %4932
       %7498 = OpFMul %float %7497 %5971
       %7499 = OpExtInst %float %1 Fma %6564 %7495 %7498
       %7500 = OpExtInst %float %1 Floor %7496
       %7501 = OpFNegate %float %7500
       %7502 = OpExtInst %float %1 Fma %6563 %7495 %7501
       %7503 = OpExtInst %float %1 Fma %7502 %float_2097152 %7499
       %7504 = OpExtInst %float %1 Floor %7503
       %7505 = OpFMul %float %7500 %float_n6_28318548
       %7506 = OpExtInst %float %1 Fma %7496 %float_6_28318548 %7505
       %7507 = OpFMul %float %7504 %float_n6_28318548
       %7508 = OpExtInst %float %1 Fma %7499 %float_6_28318548 %7507
       %7509 = OpExtInst %float %1 Fma %7506 %float_2097152 %7508
       %7510 = OpFMul %float %7488 %2582
       %7511 = OpExtInst %float %1 Sin %7509
       %7512 = OpFMul %float %7511 %7510
       %7513 = OpCompositeConstruct %v3float %537 %537 %7512
       %7514 = OpFAdd %v3float %7493 %7513
       %7515 = OpFMul %float %7494 %4436
       %7516 = OpFDiv %float %float_2 %7515
       %7517 = OpFMul %float %6598 %7516
       %7518 = OpFMul %float %7516 %4955
       %7519 = OpFMul %float %7518 %5971
       %7520 = OpExtInst %float %1 Fma %6599 %7516 %7519
       %7521 = OpExtInst %float %1 Floor %7517
       %7522 = OpFNegate %float %7521
       %7523 = OpExtInst %float %1 Fma %6598 %7516 %7522
       %7524 = OpExtInst %float %1 Fma %7523 %float_2097152 %7520
       %7525 = OpExtInst %float %1 Floor %7524
       %7526 = OpFMul %float %7521 %float_n6_28318548
       %7527 = OpExtInst %float %1 Fma %7517 %float_6_28318548 %7526
       %7528 = OpFMul %float %7525 %float_n6_28318548
       %7529 = OpExtInst %float %1 Fma %7520 %float_6_28318548 %7528
       %7530 = OpExtInst %float %1 Fma %7527 %float_2097152 %7529
       %7531 = OpFMul %float %7510 %2582
       %7532 = OpExtInst %float %1 Sin %7530
       %7533 = OpFMul %float %7532 %7531
       %7534 = OpCompositeConstruct %v3float %537 %537 %7533
       %7535 = OpFAdd %v3float %7514 %7534
       %7536 = OpFMul %float %6664 %5488
       %7537 = OpFDiv %float %float_2 %7536
       %7538 = OpFMul %float %6661 %7537
       %7539 = OpFMul %float %7537 %4979
       %7540 = OpFMul %float %7539 %5971
       %7541 = OpExtInst %float %1 Fma %6662 %7537 %7540
       %7542 = OpExtInst %float %1 Floor %7538
       %7543 = OpFNegate %float %7542
       %7544 = OpExtInst %float %1 Fma %6661 %7537 %7543
       %7545 = OpExtInst %float %1 Fma %7544 %float_2097152 %7541
       %7546 = OpExtInst %float %1 Floor %7545
       %7547 = OpFMul %float %7542 %float_n6_28318548
       %7548 = OpExtInst %float %1 Fma %7538 %float_6_28318548 %7547
       %7549 = OpFMul %float %7546 %float_n6_28318548
       %7550 = OpExtInst %float %1 Fma %7541 %float_6_28318548 %7549
       %7551 = OpExtInst %float %1 Fma %7548 %float_2097152 %7550
       %7552 = OpFMul %float %7469 %2721
       %7553 = OpExtInst %float %1 Sin %7551
       %7554 = OpFMul %float %7553 %7552
       %7555 = OpFMul %float %7536 %4436
       %7556 = OpFDiv %float %float_2 %7555
       %7557 = OpFMul %float %6696 %7556
       %7558 = OpFMul %float %7556 %5000
       %7559 = OpFMul %float %7558 %5971
       %7560 = OpExtInst %float %1 Fma %6697 %7556 %7559
       %7561 = OpExtInst %float %1 Floor %7557
       %7562 = OpFNegate %float %7561
       %7563 = OpExtInst %float %1 Fma %6696 %7556 %7562
       %7564 = OpExtInst %float %1 Fma %7563 %float_2097152 %7560
       %7565 = OpExtInst %float %1 Floor %7564
       %7566 = OpFMul %float %7561 %float_n6_28318548
       %7567 = OpExtInst %float %1 Fma %7557 %float_6_28318548 %7566
       %7568 = OpFMul %float %7565 %float_n6_28318548
       %7569 = OpExtInst %float %1 Fma %7560 %float_6_28318548 %7568
       %7570 = OpExtInst %float %1 Fma %7567 %float_2097152 %7569
       %7571 = OpFMul %float %7552 %2582
       %7572 = OpExtInst %float %1 Sin %7570
       %7573 = OpFMul %float %7572 %7571
       %7574 = OpCompositeConstruct %v3float %537 %537 %7554
       %7575 = OpCompositeConstruct %v3float %537 %537 %7573
       %7576 = OpFAdd %v3float %7574 %7575
       %7577 = OpFMul %float %7555 %4436
       %7578 = OpFDiv %float %float_2 %7577
       %7579 = OpFMul %float %6732 %7578
       %7580 = OpFMul %float %7578 %5024
       %7581 = OpFMul %float %7580 %5971
       %7582 = OpExtInst %float %1 Fma %6733 %7578 %7581
       %7583 = OpExtInst %float %1 Floor %7579
       %7584 = OpFNegate %float %7583
       %7585 = OpExtInst %float %1 Fma %6732 %7578 %7584
       %7586 = OpExtInst %float %1 Fma %7585 %float_2097152 %7582
       %7587 = OpExtInst %float %1 Floor %7586
       %7588 = OpFMul %float %7583 %float_n6_28318548
       %7589 = OpExtInst %float %1 Fma %7579 %float_6_28318548 %7588
       %7590 = OpFMul %float %7587 %float_n6_28318548
       %7591 = OpExtInst %float %1 Fma %7582 %float_6_28318548 %7590
       %7592 = OpExtInst %float %1 Fma %7589 %float_2097152 %7591
       %7593 = OpFMul %float %7571 %2582
       %7594 = OpExtInst %float %1 Sin %7592
       %7595 = OpFMul %float %7594 %7593
       %7596 = OpCompositeConstruct %v3float %537 %537 %7595
       %7597 = OpFAdd %v3float %7576 %7596
       %7598 = OpFMul %float %7577 %4436
       %7599 = OpFDiv %float %float_2 %7598
       %7600 = OpFMul %float %6767 %7599
       %7601 = OpFMul %float %7599 %5047
       %7602 = OpFMul %float %7601 %5971
       %7603 = OpExtInst %float %1 Fma %6768 %7599 %7602
       %7604 = OpExtInst %float %1 Floor %7600
       %7605 = OpFNegate %float %7604
       %7606 = OpExtInst %float %1 Fma %6767 %7599 %7605
       %7607 = OpExtInst %float %1 Fma %7606 %float_2097152 %7603
       %7608 = OpExtInst %float %1 Floor %7607
       %7609 = OpFMul %float %7604 %float_n6_28318548
       %7610 = OpExtInst %float %1 Fma %7600 %float_6_28318548 %7609
       %7611 = OpFMul %float %7608 %float_n6_28318548
       %7612 = OpExtInst %float %1 Fma %7603 %float_6_28318548 %7611
       %7613 = OpExtInst %float %1 Fma %7610 %float_2097152 %7612
       %7614 = OpFMul %float %7593 %2582
       %7615 = OpExtInst %float %1 Sin %7613
       %7616 = OpFMul %float %7615 %7614
       %7617 = OpCompositeConstruct %v3float %537 %537 %7616
       %7618 = OpFAdd %v3float %7597 %7617
       %7619 = OpFAdd %v3float %7535 %7618
       %7620 = OpFMul %float %6834 %5488
       %7621 = OpFDiv %float %float_2 %7620
       %7622 = OpFMul %float %6831 %7621
       %7623 = OpFMul %float %7621 %4979
       %7624 = OpFMul %float %7623 %5971
       %7625 = OpExtInst %float %1 Fma %6832 %7621 %7624
       %7626 = OpExtInst %float %1 Floor %7622
       %7627 = OpFNegate %float %7626
       %7628 = OpExtInst %float %1 Fma %6831 %7621 %7627
       %7629 = OpExtInst %float %1 Fma %7628 %float_2097152 %7625
       %7630 = OpExtInst %float %1 Floor %7629
       %7631 = OpFMul %float %7626 %float_n6_28318548
       %7632 = OpExtInst %float %1 Fma %7622 %float_6_28318548 %7631
       %7633 = OpFMul %float %7630 %float_n6_28318548
       %7634 = OpExtInst %float %1 Fma %7625 %float_6_28318548 %7633
       %7635 = OpExtInst %float %1 Fma %7632 %float_2097152 %7634
       %7636 = OpExtInst %float %1 Sin %7635
       %7637 = OpFMul %float %7636 %7552
       %7638 = OpFMul %float %7620 %4436
       %7639 = OpFDiv %float %float_2 %7638
       %7640 = OpFMul %float %6865 %7639
       %7641 = OpFMul %float %7639 %5000
       %7642 = OpFMul %float %7641 %5971
       %7643 = OpExtInst %float %1 Fma %6866 %7639 %7642
       %7644 = OpExtInst %float %1 Floor %7640
       %7645 = OpFNegate %float %7644
       %7646 = OpExtInst %float %1 Fma %6865 %7639 %7645
       %7647 = OpExtInst %float %1 Fma %7646 %float_2097152 %7643
       %7648 = OpExtInst %float %1 Floor %7647
       %7649 = OpFMul %float %7644 %float_n6_28318548
       %7650 = OpExtInst %float %1 Fma %7640 %float_6_28318548 %7649
       %7651 = OpFMul %float %7648 %float_n6_28318548
       %7652 = OpExtInst %float %1 Fma %7643 %float_6_28318548 %7651
       %7653 = OpExtInst %float %1 Fma %7650 %float_2097152 %7652
       %7654 = OpExtInst %float %1 Sin %7653
       %7655 = OpFMul %float %7654 %7571
       %7656 = OpCompositeConstruct %v3float %537 %537 %7637
       %7657 = OpCompositeConstruct %v3float %537 %537 %7655
       %7658 = OpFAdd %v3float %7656 %7657
       %7659 = OpFMul %float %7638 %4436
       %7660 = OpFDiv %float %float_2 %7659
       %7661 = OpFMul %float %6900 %7660
       %7662 = OpFMul %float %7660 %5024
       %7663 = OpFMul %float %7662 %5971
       %7664 = OpExtInst %float %1 Fma %6901 %7660 %7663
       %7665 = OpExtInst %float %1 Floor %7661
       %7666 = OpFNegate %float %7665
       %7667 = OpExtInst %float %1 Fma %6900 %7660 %7666
       %7668 = OpExtInst %float %1 Fma %7667 %float_2097152 %7664
       %7669 = OpExtInst %float %1 Floor %7668
       %7670 = OpFMul %float %7665 %float_n6_28318548
       %7671 = OpExtInst %float %1 Fma %7661 %float_6_28318548 %7670
       %7672 = OpFMul %float %7669 %float_n6_28318548
       %7673 = OpExtInst %float %1 Fma %7664 %float_6_28318548 %7672
       %7674 = OpExtInst %float %1 Fma %7671 %float_2097152 %7673
       %7675 = OpExtInst %float %1 Sin %7674
       %7676 = OpFMul %float %7675 %7593
       %7677 = OpCompositeConstruct %v3float %537 %537 %7676
       %7678 = OpFAdd %v3float %7658 %7677
       %7679 = OpFMul %float %7659 %4436
       %7680 = OpFDiv %float %float_2 %7679
       %7681 = OpFMul %float %6934 %7680
       %7682 = OpFMul %float %7680 %5047
       %7683 = OpFMul %float %7682 %5971
       %7684 = OpExtInst %float %1 Fma %6935 %7680 %7683
       %7685 = OpExtInst %float %1 Floor %7681
       %7686 = OpFNegate %float %7685
       %7687 = OpExtInst %float %1 Fma %6934 %7680 %7686
       %7688 = OpExtInst %float %1 Fma %7687 %float_2097152 %7684
       %7689 = OpExtInst %float %1 Floor %7688
       %7690 = OpFMul %float %7685 %float_n6_28318548
       %7691 = OpExtInst %float %1 Fma %7681 %float_6_28318548 %7690
       %7692 = OpFMul %float %7689 %float_n6_28318548
       %7693 = OpExtInst %float %1 Fma %7684 %float_6_28318548 %7692
       %7694 = OpExtInst %float %1 Fma %7691 %float_2097152 %7693
       %7695 = OpExtInst %float %1 Sin %7694
       %7696 = OpFMul %float %7695 %7614
       %7697 = OpCompositeConstruct %v3float %537 %537 %7696
       %7698 = OpFAdd %v3float %7678 %7697
       %7699 = OpFAdd %v3float %7619 %7698
       %7700 = OpFAdd %v3float %7452 %7699
       %7701 = OpFAdd %v3float %7205 %7700
       %7702 = OpFAdd %v3float %6956 %7701
       %7703 = OpFAdd %v3float %5655 %7702
       %7704 = OpExtInst %v3float %1 Fma %3506 %3509 %7703
       %7705 = OpCompositeExtract %float %7704 2
       %7706 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_1
       %7707 = OpLoad %float %7706
       %7708 = OpFNegate %float %7707
       %7709 = OpExtInst %float %1 Fma %7705 %1713 %7708
       %7710 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_0
       %7711 = OpLoad %float %7710
       %7712 = OpFMul %float %7709 %7711
       %7713 = OpExtInst %float %1 FClamp %7712 %float_0 %float_1
       %7714 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_1
       %7715 = OpLoad %float %7714
       %7716 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_2
       %7717 = OpLoad %float %7716
       %7718 = OpFNegate %float %7717
       %7719 = OpExtInst %float %1 Fma %7713 %7715 %7718
       %7720 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_92 %int_1
       %7721 = OpLoad %float %7720
       %7722 = OpFMul %float %7719 %7721
       %7723 = OpExtInst %float %1 FClamp %7722 %float_0 %float_1
       %7724 = OpCompositeConstruct %v3float %7705 %7705 %7705
       %7725 = OpExtInst %v3float %1 Fma %7724 %609 %629
       %7726 = OpDPdx %v3float %579
       %7727 = OpVectorTimesScalar %v3float %7726 %float_2097152
       %7728 = OpDPdx %v3float %7725
       %7729 = OpFAdd %v3float %7727 %7728
       %7730 = OpDPdy %v3float %579
       %7731 = OpVectorTimesScalar %v3float %7730 %float_2097152
       %7732 = OpDPdy %v3float %7725
       %7733 = OpFAdd %v3float %7731 %7732
       %7734 = OpExtInst %v3float %1 Cross %7729 %7733
       %7735 = OpExtInst %v3float %1 Normalize %7734
       %7736 = OpDPdx %v3float %579
       %7737 = OpVectorTimesScalar %v3float %7736 %float_2097152
       %7738 = OpDPdx %v3float %629
       %7739 = OpFAdd %v3float %7737 %7738
       %7740 = OpDPdy %v3float %579
       %7741 = OpVectorTimesScalar %v3float %7740 %float_2097152
       %7742 = OpDPdy %v3float %629
       %7743 = OpFAdd %v3float %7741 %7742
       %7744 = OpExtInst %v3float %1 Cross %7739 %7743
       %7745 = OpExtInst %v3float %1 Normalize %7744
       %7746 = OpFSub %v3float %7735 %7745
       %7747 = OpFAdd %v3float %7746 %609
       %7748 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_92 %int_3
       %7749 = OpLoad %float %7748
       %7750 = OpCompositeConstruct %v3float %7749 %7749 %7749
       %7751 = OpExtInst %v3float %1 FMix %7747 %288 %7750
       %7752 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_0
       %7753 = OpLoad %float %7752
       %7754 = OpCompositeConstruct %v3float %7753 %7753 %7753
       %7755 = OpExtInst %v3float %1 Fma %7751 %7754 %630
       %7756 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_1
       %7757 = OpLoad %float %7756
       %7758 = OpCompositeConstruct %v3float %7757 %7757 %7757
       %7759 = OpFMul %v3float %579 %7758
       %7760 = OpFMul %v3float %7755 %7758
       %7761 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_3
       %7762 = OpLoad %float %7761
       %7763 = OpFMul %float %1149 %7762
       %7764 = OpCompositeConstruct %v2float %7763 %7763
       %7765 = OpFAdd %v2float %7764 %273
       %7766 = OpCompositeExtract %float %7759 0
       %7767 = OpCompositeExtract %float %7760 0
       %7768 = OpCompositeExtract %float %7759 1
       %7769 = OpCompositeExtract %float %7760 1
       %7770 = OpCompositeExtract %float %7765 0
       %7771 = OpCompositeConstruct %v3float %7766 %7768 %float_0
       %7772 = OpCompositeConstruct %v3float %7767 %7769 %7770
       %7773 = OpVectorTimesScalar %v3float %7772 %float_4_76837158en07
       %7774 = OpFAdd %v3float %7773 %135
       %7775 = OpFAdd %v3float %7771 %7774
       %7776 = OpExtInst %v3float %1 Floor %7775
       %7777 = OpFSub %v3float %7771 %7776
       %7778 = OpVectorTimesScalar %v3float %7777 %float_2097152
       %7779 = OpFAdd %v3float %7778 %7772
       %7780 = OpVectorTimesScalar %v3float %7779 %float_1
               OpBranch %7781
       %7781 = OpLabel
       %7782 = OpPhi %v3float %7780 %6277 %7783 %7784
       %7785 = OpPhi %float %float_1 %6277 %7786 %7784
       %7787 = OpPhi %float %float_0 %6277 %7788 %7784
       %7789 = OpPhi %uint %uint_0 %6277 %7790 %7784
       %7791 = OpULessThan %bool %7789 %uint_10
               OpLoopMerge %7792 %7784 DontUnroll
               OpBranchConditional %7791 %7784 %7792
       %7784 = OpLabel
       %7793 = OpExtInst %v3float %1 Fract %7782
       %7794 = OpExtInst %v3float %1 Floor %7782
       %7795 = OpDot %float %7794 %380
       %7796 = OpFAdd %float %7795 %float_19
       %7797 = OpFAdd %float %7795 %float_47
       %7798 = OpFAdd %float %7795 %float_66
       %7799 = OpFAdd %float %7795 %float_101
       %7800 = OpFAdd %float %7795 %float_120
       %7801 = OpFAdd %float %7795 %float_148
       %7802 = OpFAdd %float %7795 %float_167
       %7803 = OpConvertFToS %int %7795
       %7804 = OpCompositeConstruct %v3int %7803 %int_0 %int_0
       %7805 = OpBitcast %v3uint %7804
       %7806 = OpIMul %v3uint %7805 %396
       %7807 = OpIAdd %v3uint %7806 %398
       %7808 = OpCompositeExtract %uint %7807 1
       %7809 = OpCompositeExtract %uint %7807 2
       %7810 = OpIMul %uint %7808 %7809
       %7811 = OpCompositeExtract %uint %7807 0
       %7812 = OpIAdd %uint %7811 %7810
       %7813 = OpIMul %uint %7809 %7812
       %7814 = OpIAdd %uint %7808 %7813
       %7815 = OpIMul %uint %7812 %7814
       %7816 = OpIAdd %uint %7809 %7815
       %7817 = OpIMul %uint %7814 %7816
       %7818 = OpIAdd %uint %7812 %7817
       %7819 = OpCompositeInsert %v3uint %7818 %538 0
       %7820 = OpBitwiseAnd %v3uint %399 %400
       %7821 = OpShiftRightLogical %v3uint %7819 %7820
       %7822 = OpCompositeExtract %uint %7821 0
       %7823 = OpCompositeConstruct %v3uint %7822 %7822 %7822
       %7824 = OpBitwiseAnd %v3uint %7823 %381
       %7825 = OpConvertUToF %v3float %7824
       %7826 = OpExtInst %v3float %1 Fma %7825 %385 %276
       %7827 = OpDot %float %7826 %7793
       %7828 = OpConvertFToS %int %7796
       %7829 = OpFSub %v3float %7793 %344
       %7830 = OpCompositeConstruct %v3int %7828 %int_0 %int_0
       %7831 = OpBitcast %v3uint %7830
       %7832 = OpIMul %v3uint %7831 %396
       %7833 = OpIAdd %v3uint %7832 %398
       %7834 = OpCompositeExtract %uint %7833 1
       %7835 = OpCompositeExtract %uint %7833 2
       %7836 = OpIMul %uint %7834 %7835
       %7837 = OpCompositeExtract %uint %7833 0
       %7838 = OpIAdd %uint %7837 %7836
       %7839 = OpIMul %uint %7835 %7838
       %7840 = OpIAdd %uint %7834 %7839
       %7841 = OpIMul %uint %7838 %7840
       %7842 = OpIAdd %uint %7835 %7841
       %7843 = OpIMul %uint %7840 %7842
       %7844 = OpIAdd %uint %7838 %7843
       %7845 = OpCompositeInsert %v3uint %7844 %538 0
       %7846 = OpShiftRightLogical %v3uint %7845 %7820
       %7847 = OpCompositeExtract %uint %7846 0
       %7848 = OpCompositeConstruct %v3uint %7847 %7847 %7847
       %7849 = OpBitwiseAnd %v3uint %7848 %381
       %7850 = OpConvertUToF %v3float %7849
       %7851 = OpExtInst %v3float %1 Fma %7850 %385 %276
       %7852 = OpDot %float %7851 %7829
       %7853 = OpConvertFToS %int %7797
       %7854 = OpFSub %v3float %7793 %345
       %7855 = OpCompositeConstruct %v3int %7853 %int_0 %int_0
       %7856 = OpBitcast %v3uint %7855
       %7857 = OpIMul %v3uint %7856 %396
       %7858 = OpIAdd %v3uint %7857 %398
       %7859 = OpCompositeExtract %uint %7858 1
       %7860 = OpCompositeExtract %uint %7858 2
       %7861 = OpIMul %uint %7859 %7860
       %7862 = OpCompositeExtract %uint %7858 0
       %7863 = OpIAdd %uint %7862 %7861
       %7864 = OpIMul %uint %7860 %7863
       %7865 = OpIAdd %uint %7859 %7864
       %7866 = OpIMul %uint %7863 %7865
       %7867 = OpIAdd %uint %7860 %7866
       %7868 = OpIMul %uint %7865 %7867
       %7869 = OpIAdd %uint %7863 %7868
       %7870 = OpCompositeInsert %v3uint %7869 %538 0
       %7871 = OpShiftRightLogical %v3uint %7870 %7820
       %7872 = OpCompositeExtract %uint %7871 0
       %7873 = OpCompositeConstruct %v3uint %7872 %7872 %7872
       %7874 = OpBitwiseAnd %v3uint %7873 %381
       %7875 = OpConvertUToF %v3float %7874
       %7876 = OpExtInst %v3float %1 Fma %7875 %385 %276
       %7877 = OpDot %float %7876 %7854
       %7878 = OpConvertFToS %int %7798
       %7879 = OpFSub %v3float %7793 %132
       %7880 = OpCompositeConstruct %v3int %7878 %int_0 %int_0
       %7881 = OpBitcast %v3uint %7880
       %7882 = OpIMul %v3uint %7881 %396
       %7883 = OpIAdd %v3uint %7882 %398
       %7884 = OpCompositeExtract %uint %7883 1
       %7885 = OpCompositeExtract %uint %7883 2
       %7886 = OpIMul %uint %7884 %7885
       %7887 = OpCompositeExtract %uint %7883 0
       %7888 = OpIAdd %uint %7887 %7886
       %7889 = OpIMul %uint %7885 %7888
       %7890 = OpIAdd %uint %7884 %7889
       %7891 = OpIMul %uint %7888 %7890
       %7892 = OpIAdd %uint %7885 %7891
       %7893 = OpIMul %uint %7890 %7892
       %7894 = OpIAdd %uint %7888 %7893
       %7895 = OpCompositeInsert %v3uint %7894 %538 0
       %7896 = OpShiftRightLogical %v3uint %7895 %7820
       %7897 = OpCompositeExtract %uint %7896 0
       %7898 = OpCompositeConstruct %v3uint %7897 %7897 %7897
       %7899 = OpBitwiseAnd %v3uint %7898 %381
       %7900 = OpConvertUToF %v3float %7899
       %7901 = OpExtInst %v3float %1 Fma %7900 %385 %276
       %7902 = OpDot %float %7901 %7879
       %7903 = OpConvertFToS %int %7799
       %7904 = OpFSub %v3float %7793 %288
       %7905 = OpCompositeConstruct %v3int %7903 %int_0 %int_0
       %7906 = OpBitcast %v3uint %7905
       %7907 = OpIMul %v3uint %7906 %396
       %7908 = OpIAdd %v3uint %7907 %398
       %7909 = OpCompositeExtract %uint %7908 1
       %7910 = OpCompositeExtract %uint %7908 2
       %7911 = OpIMul %uint %7909 %7910
       %7912 = OpCompositeExtract %uint %7908 0
       %7913 = OpIAdd %uint %7912 %7911
       %7914 = OpIMul %uint %7910 %7913
       %7915 = OpIAdd %uint %7909 %7914
       %7916 = OpIMul %uint %7913 %7915
       %7917 = OpIAdd %uint %7910 %7916
       %7918 = OpIMul %uint %7915 %7917
       %7919 = OpIAdd %uint %7913 %7918
       %7920 = OpCompositeInsert %v3uint %7919 %538 0
       %7921 = OpShiftRightLogical %v3uint %7920 %7820
       %7922 = OpCompositeExtract %uint %7921 0
       %7923 = OpCompositeConstruct %v3uint %7922 %7922 %7922
       %7924 = OpBitwiseAnd %v3uint %7923 %381
       %7925 = OpConvertUToF %v3float %7924
       %7926 = OpExtInst %v3float %1 Fma %7925 %385 %276
       %7927 = OpDot %float %7926 %7904
       %7928 = OpConvertFToS %int %7800
       %7929 = OpFSub %v3float %7793 %137
       %7930 = OpCompositeConstruct %v3int %7928 %int_0 %int_0
       %7931 = OpBitcast %v3uint %7930
       %7932 = OpIMul %v3uint %7931 %396
       %7933 = OpIAdd %v3uint %7932 %398
       %7934 = OpCompositeExtract %uint %7933 1
       %7935 = OpCompositeExtract %uint %7933 2
       %7936 = OpIMul %uint %7934 %7935
       %7937 = OpCompositeExtract %uint %7933 0
       %7938 = OpIAdd %uint %7937 %7936
       %7939 = OpIMul %uint %7935 %7938
       %7940 = OpIAdd %uint %7934 %7939
       %7941 = OpIMul %uint %7938 %7940
       %7942 = OpIAdd %uint %7935 %7941
       %7943 = OpIMul %uint %7940 %7942
       %7944 = OpIAdd %uint %7938 %7943
       %7945 = OpCompositeInsert %v3uint %7944 %538 0
       %7946 = OpShiftRightLogical %v3uint %7945 %7820
       %7947 = OpCompositeExtract %uint %7946 0
       %7948 = OpCompositeConstruct %v3uint %7947 %7947 %7947
       %7949 = OpBitwiseAnd %v3uint %7948 %381
       %7950 = OpConvertUToF %v3float %7949
       %7951 = OpExtInst %v3float %1 Fma %7950 %385 %276
       %7952 = OpDot %float %7951 %7929
       %7953 = OpConvertFToS %int %7801
       %7954 = OpFSub %v3float %7793 %133
       %7955 = OpCompositeConstruct %v3int %7953 %int_0 %int_0
       %7956 = OpBitcast %v3uint %7955
       %7957 = OpIMul %v3uint %7956 %396
       %7958 = OpIAdd %v3uint %7957 %398
       %7959 = OpCompositeExtract %uint %7958 1
       %7960 = OpCompositeExtract %uint %7958 2
       %7961 = OpIMul %uint %7959 %7960
       %7962 = OpCompositeExtract %uint %7958 0
       %7963 = OpIAdd %uint %7962 %7961
       %7964 = OpIMul %uint %7960 %7963
       %7965 = OpIAdd %uint %7959 %7964
       %7966 = OpIMul %uint %7963 %7965
       %7967 = OpIAdd %uint %7960 %7966
       %7968 = OpIMul %uint %7965 %7967
       %7969 = OpIAdd %uint %7963 %7968
       %7970 = OpCompositeInsert %v3uint %7969 %538 0
       %7971 = OpShiftRightLogical %v3uint %7970 %7820
       %7972 = OpCompositeExtract %uint %7971 0
       %7973 = OpCompositeConstruct %v3uint %7972 %7972 %7972
       %7974 = OpBitwiseAnd %v3uint %7973 %381
       %7975 = OpConvertUToF %v3float %7974
       %7976 = OpExtInst %v3float %1 Fma %7975 %385 %276
       %7977 = OpDot %float %7976 %7954
       %7978 = OpConvertFToS %int %7802
       %7979 = OpFSub %v3float %7793 %125
       %7980 = OpCompositeConstruct %v3int %7978 %int_0 %int_0
       %7981 = OpBitcast %v3uint %7980
       %7982 = OpIMul %v3uint %7981 %396
       %7983 = OpIAdd %v3uint %7982 %398
       %7984 = OpCompositeExtract %uint %7983 1
       %7985 = OpCompositeExtract %uint %7983 2
       %7986 = OpIMul %uint %7984 %7985
       %7987 = OpCompositeExtract %uint %7983 0
       %7988 = OpIAdd %uint %7987 %7986
       %7989 = OpIMul %uint %7985 %7988
       %7990 = OpIAdd %uint %7984 %7989
       %7991 = OpIMul %uint %7988 %7990
       %7992 = OpIAdd %uint %7985 %7991
       %7993 = OpIMul %uint %7990 %7992
       %7994 = OpIAdd %uint %7988 %7993
       %7995 = OpCompositeInsert %v3uint %7994 %538 0
       %7996 = OpShiftRightLogical %v3uint %7995 %7820
       %7997 = OpCompositeExtract %uint %7996 0
       %7998 = OpCompositeConstruct %v3uint %7997 %7997 %7997
       %7999 = OpBitwiseAnd %v3uint %7998 %381
       %8000 = OpConvertUToF %v3float %7999
       %8001 = OpExtInst %v3float %1 Fma %8000 %385 %276
       %8002 = OpDot %float %8001 %7979
       %8003 = OpCompositeExtract %float %7793 0
       %8004 = OpCompositeExtract %float %7793 1
       %8005 = OpCompositeExtract %float %7793 2
       %8006 = OpCompositeConstruct %v4float %8003 %8004 %8005 %float_0
       %8007 = OpFMul %v4float %8006 %8006
       %8008 = OpFMul %v4float %8007 %8006
       %8009 = OpVectorTimesScalar %v4float %8006 %float_6
       %8010 = OpFSub %v4float %8009 %376
       %8011 = OpExtInst %v4float %1 Fma %8006 %8010 %377
       %8012 = OpFMul %v4float %8008 %8011
       %8013 = OpCompositeExtract %float %8012 0
       %8014 = OpExtInst %float %1 FMix %7827 %7852 %8013
       %8015 = OpExtInst %float %1 FMix %7877 %7902 %8013
       %8016 = OpCompositeExtract %float %8012 1
       %8017 = OpExtInst %float %1 FMix %8014 %8015 %8016
       %8018 = OpExtInst %float %1 FMix %7927 %7952 %8013
       %8019 = OpExtInst %float %1 FMix %7977 %8002 %8013
       %8020 = OpExtInst %float %1 FMix %8018 %8019 %8016
       %8021 = OpCompositeExtract %float %8012 2
       %8022 = OpExtInst %float %1 FMix %8017 %8020 %8021
       %8023 = OpExtInst %float %1 FAbs %8022
       %7788 = OpExtInst %float %1 Fma %8023 %7785 %7787
       %7783 = OpVectorTimesScalar %v3float %7782 %float_2
       %7786 = OpFMul %float %7785 %float_0_5
       %7790 = OpIAdd %uint %7789 %uint_1
               OpBranch %7781
       %7792 = OpLabel
       %8024 = OpExtInst %float %1 FMix %float_0 %float_1 %7787
       %8025 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_0
       %8026 = OpLoad %float %8025
       %8027 = OpFNegate %float %7723
       %8028 = OpExtInst %float %1 Fma %8027 %8026 %8024
       %8029 = OpExtInst %float %1 Fma %7723 %8026 %float_1
       %8030 = OpExtInst %float %1 Fma %8027 %8026 %8029
       %8031 = OpFDiv %float %8028 %8030
       %8032 = OpExtInst %float %1 Fma %8031 %float_n1 %float_1
       %8033 = OpExtInst %float %1 FClamp %8032 %float_0 %float_1
       %8034 = OpFOrdLessThanEqual %bool %8033 %float_0
       %8035 = OpExtInst %float %1 Pow %8033 %float_2
       %8036 = OpSelect %float %8034 %float_0 %8035
       %8037 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_2
       %8038 = OpLoad %float %8037
       %8039 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_1
       %8040 = OpLoad %float %8039
       %8041 = OpExtInst %float %1 FMix %8038 %8040 %8036
       %8042 = OpExtInst %float %1 FClamp %8041 %float_0 %float_1
       %8043 = OpFMul %float %7723 %8042
       %8044 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_3
       %8045 = OpLoad %float %8044
       %8046 = OpCompositeConstruct %v3float %8045 %8045 %8045
       %8047 = OpFMul %v3float %579 %8046
       %8048 = OpFMul %v3float %630 %8046
       %8049 = OpVectorTimesScalar %v3float %8048 %float_4_76837158en07
       %8050 = OpFAdd %v3float %8049 %135
       %8051 = OpExtInst %v3float %1 Fma %579 %8046 %8050
       %8052 = OpExtInst %v3float %1 Floor %8051
       %8053 = OpFNegate %v3float %8052
       %8054 = OpExtInst %v3float %1 Fma %579 %8046 %8053
       %8055 = OpVectorTimesScalar %v3float %8054 %float_2097152
       %8056 = OpExtInst %v3float %1 Fma %630 %8046 %8055
       %8057 = OpVectorTimesScalar %v3float %8056 %float_1
               OpBranch %8058
       %8058 = OpLabel
       %8059 = OpPhi %v3float %529 %7792 %8060 %8061
       %8062 = OpPhi %v3float %8057 %7792 %8063 %8061
       %8064 = OpPhi %float %float_1 %7792 %8065 %8061
       %8066 = OpPhi %float %float_0 %7792 %8067 %8061
       %8068 = OpPhi %uint %uint_0 %7792 %8069 %8061
       %8070 = OpULessThan %bool %8068 %uint_1
               OpLoopMerge %8071 %8061 DontUnroll
               OpBranchConditional %8070 %8072 %8071
       %8072 = OpLabel
       %8073 = OpExtInst %v3float %1 Fract %8062
       %8074 = OpExtInst %v3float %1 Floor %8062
       %8075 = OpCompositeInsert %v3float %float_0 %8059 0
               OpBranch %8076
       %8076 = OpLabel
       %8077 = OpPhi %v4float %346 %8072 %8078 %8079
       %8060 = OpPhi %v3float %8075 %8072 %8080 %8079
       %8081 = OpCompositeExtract %float %8060 0
       %8082 = OpFOrdLessThanEqual %bool %8081 %float_1
               OpLoopMerge %8083 %8079 None
               OpBranchConditional %8082 %8084 %8083
       %8084 = OpLabel
       %8085 = OpCompositeInsert %v3float %float_0 %8060 1
               OpBranch %8086
       %8086 = OpLabel
       %8087 = OpPhi %v3float %8085 %8084 %8088 %8089
       %8078 = OpPhi %v4float %8077 %8084 %8090 %8089
       %8091 = OpCompositeExtract %float %8087 1
       %8092 = OpFOrdLessThanEqual %bool %8091 %float_1
               OpLoopMerge %8093 %8089 None
               OpBranchConditional %8092 %8094 %8093
       %8094 = OpLabel
       %8095 = OpCompositeInsert %v3float %float_0 %8087 2
               OpBranch %8096
       %8096 = OpLabel
       %8090 = OpPhi %v4float %8078 %8094 %8097 %8098
       %8099 = OpPhi %v3float %8095 %8094 %8100 %8098
       %8101 = OpCompositeExtract %float %8099 2
       %8102 = OpFOrdLessThanEqual %bool %8101 %float_1
               OpLoopMerge %8103 %8098 None
               OpBranchConditional %8102 %8098 %8103
       %8098 = OpLabel
       %8104 = OpFAdd %v3float %8074 %8099
       %8105 = OpVectorShuffle %v3float %527 %8104 3 4 5
       %8106 = OpConvertFToS %v3int %8105
       %8107 = OpBitcast %v3uint %8106
       %8108 = OpIMul %v3uint %8107 %396
       %8109 = OpIAdd %v3uint %8108 %398
       %8110 = OpCompositeExtract %uint %8109 1
       %8111 = OpCompositeExtract %uint %8109 2
       %8112 = OpIMul %uint %8110 %8111
       %8113 = OpCompositeExtract %uint %8109 0
       %8114 = OpIAdd %uint %8113 %8112
       %8115 = OpIMul %uint %8111 %8114
       %8116 = OpIAdd %uint %8110 %8115
       %8117 = OpIMul %uint %8114 %8116
       %8118 = OpIAdd %uint %8111 %8117
       %8119 = OpIMul %uint %8116 %8118
       %8120 = OpIAdd %uint %8114 %8119
       %8121 = OpCompositeInsert %v3uint %8120 %8109 0
       %8122 = OpIMul %uint %8118 %8120
       %8123 = OpIAdd %uint %8116 %8122
       %8124 = OpCompositeInsert %v3uint %8123 %8121 1
       %8125 = OpIMul %uint %8120 %8123
       %8126 = OpIAdd %uint %8118 %8125
       %8127 = OpCompositeInsert %v3uint %8126 %8124 2
       %8128 = OpBitwiseAnd %v3uint %399 %400
       %8129 = OpShiftRightLogical %v3uint %8127 %8128
       %8130 = OpConvertUToF %v3float %8129
       %8131 = OpExtInst %v3float %1 Fma %8130 %511 %500
       %8132 = OpExtInst %v3float %1 Normalize %8131
       %8133 = OpVectorTimesScalar %v3float %8132 %float_0_2588
       %8134 = OpFAdd %v3float %8099 %8133
       %8135 = OpFSub %v3float %8073 %8134
       %8136 = OpCompositeExtract %float %8090 3
       %8137 = OpDot %float %8135 %8135
       %8138 = OpExtInst %float %1 NMin %8136 %8137
       %8097 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %8138
       %8139 = OpFAdd %float %8101 %float_1
       %8100 = OpCompositeInsert %v3float %8139 %8099 2
               OpBranch %8096
       %8103 = OpLabel
               OpBranch %8089
       %8089 = OpLabel
       %8140 = OpCompositeExtract %float %8099 1
       %8141 = OpFAdd %float %8140 %float_1
       %8088 = OpCompositeInsert %v3float %8141 %8099 1
               OpBranch %8086
       %8093 = OpLabel
               OpBranch %8079
       %8079 = OpLabel
       %8142 = OpCompositeExtract %float %8087 0
       %8143 = OpFAdd %float %8142 %float_1
       %8080 = OpCompositeInsert %v3float %8143 %8087 0
               OpBranch %8076
       %8083 = OpLabel
       %8144 = OpCompositeExtract %float %8077 3
       %8145 = OpExtInst %float %1 Sqrt %8144
       %8146 = OpExtInst %float %1 Fma %8145 %float_2 %float_n1
       %8147 = OpExtInst %float %1 FAbs %8146
       %8067 = OpExtInst %float %1 Fma %8147 %8064 %8066
       %8063 = OpVectorTimesScalar %v3float %8062 %float_2
       %8065 = OpFMul %float %8064 %float_0_5
               OpBranch %8061
       %8061 = OpLabel
       %8069 = OpIAdd %uint %8068 %uint_1
               OpBranch %8058
       %8071 = OpLabel
       %8148 = OpExtInst %float %1 FMix %float_n1 %float_1 %8066
       %8149 = OpExtInst %float %1 FClamp %8148 %float_0 %float_1
       %8150 = OpFMul %v3float %8048 %275
       %8151 = OpVectorTimesScalar %v3float %8150 %float_4_76837158en07
       %8152 = OpFAdd %v3float %8151 %135
       %8153 = OpExtInst %v3float %1 Fma %8047 %275 %8152
       %8154 = OpExtInst %v3float %1 Floor %8153
       %8155 = OpFNegate %v3float %8154
       %8156 = OpExtInst %v3float %1 Fma %8047 %275 %8155
       %8157 = OpVectorTimesScalar %v3float %8156 %float_2097152
       %8158 = OpExtInst %v3float %1 Fma %8048 %275 %8157
       %8159 = OpVectorTimesScalar %v3float %8158 %float_1
               OpBranch %8160
       %8160 = OpLabel
       %8161 = OpPhi %v3float %529 %8071 %8162 %8163
       %8164 = OpPhi %v3float %8159 %8071 %8165 %8163
       %8166 = OpPhi %float %float_1 %8071 %8167 %8163
       %8168 = OpPhi %float %float_0 %8071 %8169 %8163
       %8170 = OpPhi %uint %uint_0 %8071 %8171 %8163
       %8172 = OpULessThan %bool %8170 %uint_1
               OpLoopMerge %8173 %8163 DontUnroll
               OpBranchConditional %8172 %8174 %8173
       %8174 = OpLabel
       %8175 = OpExtInst %v3float %1 Fract %8164
       %8176 = OpExtInst %v3float %1 Floor %8164
       %8177 = OpCompositeInsert %v3float %float_0 %8161 0
               OpBranch %8178
       %8178 = OpLabel
       %8179 = OpPhi %v4float %346 %8174 %8180 %8181
       %8162 = OpPhi %v3float %8177 %8174 %8182 %8181
       %8183 = OpCompositeExtract %float %8162 0
       %8184 = OpFOrdLessThanEqual %bool %8183 %float_1
               OpLoopMerge %8185 %8181 None
               OpBranchConditional %8184 %8186 %8185
       %8186 = OpLabel
       %8187 = OpCompositeInsert %v3float %float_0 %8162 1
               OpBranch %8188
       %8188 = OpLabel
       %8189 = OpPhi %v3float %8187 %8186 %8190 %8191
       %8180 = OpPhi %v4float %8179 %8186 %8192 %8191
       %8193 = OpCompositeExtract %float %8189 1
       %8194 = OpFOrdLessThanEqual %bool %8193 %float_1
               OpLoopMerge %8195 %8191 None
               OpBranchConditional %8194 %8196 %8195
       %8196 = OpLabel
       %8197 = OpCompositeInsert %v3float %float_0 %8189 2
               OpBranch %8198
       %8198 = OpLabel
       %8192 = OpPhi %v4float %8180 %8196 %8199 %8200
       %8201 = OpPhi %v3float %8197 %8196 %8202 %8200
       %8203 = OpCompositeExtract %float %8201 2
       %8204 = OpFOrdLessThanEqual %bool %8203 %float_1
               OpLoopMerge %8205 %8200 None
               OpBranchConditional %8204 %8200 %8205
       %8200 = OpLabel
       %8206 = OpFAdd %v3float %8176 %8201
       %8207 = OpVectorShuffle %v3float %527 %8206 3 4 5
       %8208 = OpConvertFToS %v3int %8207
       %8209 = OpBitcast %v3uint %8208
       %8210 = OpIMul %v3uint %8209 %396
       %8211 = OpIAdd %v3uint %8210 %398
       %8212 = OpCompositeExtract %uint %8211 1
       %8213 = OpCompositeExtract %uint %8211 2
       %8214 = OpIMul %uint %8212 %8213
       %8215 = OpCompositeExtract %uint %8211 0
       %8216 = OpIAdd %uint %8215 %8214
       %8217 = OpIMul %uint %8213 %8216
       %8218 = OpIAdd %uint %8212 %8217
       %8219 = OpIMul %uint %8216 %8218
       %8220 = OpIAdd %uint %8213 %8219
       %8221 = OpIMul %uint %8218 %8220
       %8222 = OpIAdd %uint %8216 %8221
       %8223 = OpCompositeInsert %v3uint %8222 %8211 0
       %8224 = OpIMul %uint %8220 %8222
       %8225 = OpIAdd %uint %8218 %8224
       %8226 = OpCompositeInsert %v3uint %8225 %8223 1
       %8227 = OpIMul %uint %8222 %8225
       %8228 = OpIAdd %uint %8220 %8227
       %8229 = OpCompositeInsert %v3uint %8228 %8226 2
       %8230 = OpBitwiseAnd %v3uint %399 %400
       %8231 = OpShiftRightLogical %v3uint %8229 %8230
       %8232 = OpConvertUToF %v3float %8231
       %8233 = OpExtInst %v3float %1 Fma %8232 %511 %500
       %8234 = OpExtInst %v3float %1 Normalize %8233
       %8235 = OpVectorTimesScalar %v3float %8234 %float_0_2588
       %8236 = OpFAdd %v3float %8201 %8235
       %8237 = OpFSub %v3float %8175 %8236
       %8238 = OpCompositeExtract %float %8192 3
       %8239 = OpDot %float %8237 %8237
       %8240 = OpExtInst %float %1 NMin %8238 %8239
       %8199 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %8240
       %8241 = OpFAdd %float %8203 %float_1
       %8202 = OpCompositeInsert %v3float %8241 %8201 2
               OpBranch %8198
       %8205 = OpLabel
               OpBranch %8191
       %8191 = OpLabel
       %8242 = OpCompositeExtract %float %8201 1
       %8243 = OpFAdd %float %8242 %float_1
       %8190 = OpCompositeInsert %v3float %8243 %8201 1
               OpBranch %8188
       %8195 = OpLabel
               OpBranch %8181
       %8181 = OpLabel
       %8244 = OpCompositeExtract %float %8189 0
       %8245 = OpFAdd %float %8244 %float_1
       %8182 = OpCompositeInsert %v3float %8245 %8189 0
               OpBranch %8178
       %8185 = OpLabel
       %8246 = OpCompositeExtract %float %8179 3
       %8247 = OpExtInst %float %1 Sqrt %8246
       %8248 = OpExtInst %float %1 Fma %8247 %float_2 %float_n1
       %8249 = OpExtInst %float %1 FAbs %8248
       %8169 = OpExtInst %float %1 Fma %8249 %8166 %8168
       %8165 = OpVectorTimesScalar %v3float %8164 %float_2
       %8167 = OpFMul %float %8166 %float_0_5
               OpBranch %8163
       %8163 = OpLabel
       %8171 = OpIAdd %uint %8170 %uint_1
               OpBranch %8160
       %8173 = OpLabel
       %8250 = OpExtInst %float %1 FMix %float_n1 %float_1 %8168
       %8251 = OpExtInst %float %1 FClamp %8250 %float_0 %float_1
       %8252 = OpFAdd %float %8149 %8251
       %8253 = OpFNegate %float %8252
       %8254 = OpExtInst %float %1 Fma %7723 %8042 %8253
       %8255 = OpExtInst %float %1 Fma %1643 %1645 %8254
       %8256 = OpFMul %float %762 %8255
       %8257 = OpExtInst %float %1 FClamp %8256 %float_0 %float_1
       %8258 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_1
       %8259 = OpLoad %float %8258
       %8260 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_0
       %8261 = OpLoad %float %8260
       %8262 = OpExtInst %float %1 FMix %8259 %8261 %8257
       %8263 = OpCompositeExtract %float %3506 2
       %8264 = OpCompositeConstruct %v3float %8263 %8263 %8263
       %8265 = OpExtInst %v3float %1 Fma %8264 %609 %629
       %8266 = OpDPdx %v3float %579
       %8267 = OpVectorTimesScalar %v3float %8266 %float_2097152
       %8268 = OpDPdx %v3float %8265
       %8269 = OpFAdd %v3float %8267 %8268
       %8270 = OpDPdy %v3float %579
       %8271 = OpVectorTimesScalar %v3float %8270 %float_2097152
       %8272 = OpDPdy %v3float %8265
       %8273 = OpFAdd %v3float %8271 %8272
       %8274 = OpExtInst %v3float %1 Cross %8269 %8273
       %8275 = OpExtInst %v3float %1 Normalize %8274
       %8276 = OpFSub %v3float %8275 %7745
       %8277 = OpFAdd %v3float %8276 %609
       %8278 = OpDot %float %7751 %646
       %8279 = OpExtInst %float %1 NMax %float_0 %8278
       %8280 = OpFSub %float %float_1 %8279
       %8281 = OpExtInst %float %1 FAbs %8280
       %8282 = OpExtInst %float %1 NMax %8281 %float_9_99999975en05
       %8283 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_2
       %8284 = OpLoad %float %8283
       %8285 = OpFOrdLessThanEqual %bool %8282 %float_0
       %8286 = OpExtInst %float %1 Pow %8282 %8284
       %8287 = OpSelect %float %8285 %float_0 %8286
       %8288 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_0
       %8289 = OpLoad %float %8288
       %8290 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_3
       %8291 = OpLoad %float %8290
       %8292 = OpExtInst %float %1 Fma %8287 %8289 %8291
       %8293 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_2
       %8294 = OpLoad %float %8293
       %8295 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_1
       %8296 = OpLoad %float %8295
       %8297 = OpExtInst %float %1 FMix %8294 %8296 %8292
       %8298 = OpCompositeConstruct %v3float %8297 %8297 %8297
       %8299 = OpExtInst %v3float %1 FMix %7751 %288 %8298
       %8300 = OpCompositeConstruct %v3float %761 %761 %761
       %8301 = OpExtInst %v3float %1 FMix %8277 %8299 %8300
       %8302 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_3
       %8303 = OpLoad %float %8302
       %8304 = OpExtInst %float %1 FMix %8303 %float_0 %761
       %8305 = OpCompositeConstruct %v3float %8304 %8304 %8304
       %8306 = OpExtInst %v3float %1 FMix %8301 %288 %8305
       %8307 = OpExtInst %float %1 Fma %1432 %1641 %1432
       %8308 = OpExtInst %float %1 Fma %8043 %8252 %8043
       %8309 = OpFAdd %float %8307 %8308
       %8310 = OpFMul %float %762 %8309
       %8311 = OpCompositeConstruct %v3float %8310 %8310 %8310
       %8312 = OpExtInst %v3float %1 Fma %8311 %609 %629
       %8313 = OpDPdx %v3float %579
       %8314 = OpVectorTimesScalar %v3float %8313 %float_2097152
       %8315 = OpDPdx %v3float %8312
       %8316 = OpFAdd %v3float %8314 %8315
       %8317 = OpDPdy %v3float %579
       %8318 = OpVectorTimesScalar %v3float %8317 %float_2097152
       %8319 = OpDPdy %v3float %8312
       %8320 = OpFAdd %v3float %8318 %8319
       %8321 = OpExtInst %v3float %1 Cross %8316 %8320
       %8322 = OpExtInst %v3float %1 Normalize %8321
       %8323 = OpFSub %v3float %8322 %7745
       %8324 = OpFAdd %v3float %8323 %609
       %8325 = OpCompositeConstruct %v3float %1432 %1432 %1432
       %8326 = OpExtInst %v3float %1 FMix %8306 %8324 %8325
       %8327 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_97 %int_0
       %8328 = OpLoad %float %8327
       %8329 = OpExtInst %float %1 FMix %8328 %float_1 %8257
       %8330 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_1
       %8331 = OpLoad %float %8330
       %8332 = OpExtInst %float %1 Pow %8282 %8331
       %8333 = OpSelect %float %8285 %float_0 %8332
       %8334 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_3
       %8335 = OpLoad %float %8334
       %8336 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_2
       %8337 = OpLoad %float %8336
       %8338 = OpExtInst %float %1 Fma %8333 %8335 %8337
       %8339 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_0
       %8340 = OpLoad %float %8339
       %8341 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_103 %int_3
       %8342 = OpLoad %float %8341
       %8343 = OpExtInst %float %1 FMix %8340 %8342 %8338
       %8344 = OpExtInst %float %1 FMix %8343 %float_1 %8257
       %8345 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_1
       %8346 = OpLoad %float %8345
       %8347 = OpExtInst %float %1 FMix %float_0 %8346 %8257
       %8348 = OpCompositeConstruct %v3float %8347 %8347 %8347
       %8349 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_107
       %8350 = OpLoad %v4float %8349
       %8351 = OpVectorShuffle %v3float %8350 %8350 0 1 2
       %8352 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_106
       %8353 = OpLoad %v4float %8352
       %8354 = OpVectorShuffle %v3float %8353 %8353 0 1 2
       %8355 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_2
       %8356 = OpLoad %float %8355
       %8357 = OpCompositeConstruct %v3float %8356 %8356 %8356
       %8358 = OpFAdd %v3float %8351 %8354
       %8359 = OpFDiv %v3float %8351 %8358
       %8360 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_107 %int_3
       %8361 = OpLoad %float %8360
       %8362 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_108 %int_0
       %8363 = OpLoad %float %8362
       %8364 = OpFSub %float %684 %float_0_333299994
       %8365 = OpFOrdLessThan %bool %8364 %float_0
               OpSelectionMerge %8366 None
               OpBranchConditional %8365 %8367 %8366
       %8367 = OpLabel
               OpKill
       %8366 = OpLabel
       %8368 = OpAccessChain %_ptr_Uniform_uint %View %uint_20
       %8369 = OpLoad %uint %8368
       %8370 = OpConvertUToF %float %8369
       %8371 = OpVectorTimesScalar %v2float %458 %8370
       %8372 = OpFAdd %v2float %610 %8371
       %8373 = OpDot %float %8372 %459
       %8374 = OpExtInst %float %1 Fract %8373
       %8375 = OpFMul %float %float_52_9829178 %8374
       %8376 = OpExtInst %float %1 Fract %8375
       %8377 = OpIMul %uint %567 %uint_41
       %8378 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %8377
       %8379 = OpLoad %v4float %8378
       %8380 = OpCompositeExtract %float %8379 0
       %8381 = OpBitcast %uint %8380
       %8382 = OpBitwiseAnd %uint %8381 %uint_512
       %8383 = OpINotEqual %bool %8382 %uint_0
       %8384 = OpSelect %uint %8383 %uint_32 %uint_0
       %8385 = OpBitwiseOr %uint %uint_1 %8384
       %8386 = OpLoad %v4float %8378
       %8387 = OpCompositeExtract %float %8386 0
       %8388 = OpBitcast %uint %8387
       %8389 = OpBitwiseAnd %uint %8388 %uint_256
       %8390 = OpINotEqual %bool %8389 %uint_0
       %8391 = OpSelect %uint %8390 %uint_64 %uint_0
       %8392 = OpBitwiseOr %uint %8385 %8391
       %8393 = OpBitwiseAnd %uint %8392 %uint_4294967288
       %8394 = OpBitwiseOr %uint %8393 %uint_4
       %8395 = OpVectorShuffle %v3float %8348 %451 0 1 2
       %8396 = OpExtInst %v3float %1 FClamp %8395 %100 %125
       %8397 = OpVectorShuffle %v3float %597 %597 3 3 3
       %8398 = OpVectorShuffle %v3float %597 %597 0 1 2
       %8399 = OpExtInst %v3float %1 Fma %8396 %8397 %8398
       %8400 = OpExtInst %float %1 FClamp %8344 %float_0 %float_1
       %8401 = OpCompositeExtract %float %599 3
       %8402 = OpCompositeExtract %float %599 0
       %8403 = OpExtInst %float %1 Fma %8400 %8401 %8402
       %8404 = OpCompositeInsert %v4float %8403 %532 1
       %8405 = OpCompositeExtract %float %601 1
       %8406 = OpCompositeExtract %float %601 0
       %8407 = OpExtInst %float %1 Fma %8262 %8405 %8406
       %8408 = OpAccessChain %_ptr_Uniform_float %View %uint_38
       %8409 = OpLoad %float %8408
       %8410 = OpExtInst %float %1 NMax %8409 %8407
       %8411 = OpExtInst %float %1 FClamp %8410 %float_0 %float_1
       %8412 = OpCompositeInsert %v4float %8411 %8404 2
       %8413 = OpExtInst %float %1 FClamp %8329 %float_0 %float_1
       %8414 = OpCompositeInsert %v4float %8413 %8412 3
       %8415 = OpVectorShuffle %v3float %8359 %451 0 1 2
       %8416 = OpExtInst %v3float %1 FClamp %8415 %100 %125
       %8417 = OpVectorShuffle %v4float %451 %8416 4 5 6 3
       %8418 = OpVectorShuffle %v3float %8358 %451 0 1 2
       %8419 = OpExtInst %v3float %1 FClamp %8418 %100 %161
       %8420 = OpCompositeInsert %v4float %float_0 %8417 3
       %8421 = OpVectorShuffle %v3float %8357 %451 0 1 2
       %8422 = OpExtInst %v3float %1 FClamp %8421 %100 %161
       %8423 = OpVectorShuffle %v3float %8399 %451 0 1 2
       %8424 = OpExtInst %v3float %1 Normalize %8326
       %8425 = OpDot %float %8424 %8424
       %8426 = OpBitcast %uint %8425
       %8427 = OpBitwiseAnd %uint %8426 %uint_2139095040
       %8428 = OpINotEqual %bool %8427 %uint_2139095040
       %8429 = OpLogicalNot %bool %8428
               OpSelectionMerge %8430 DontFlatten
               OpBranchConditional %8429 %8431 %8430
       %8431 = OpLabel
       %8432 = OpExtInst %v3float %1 Normalize %609
               OpBranch %8430
       %8430 = OpLabel
       %8433 = OpPhi %v3float %8326 %8366 %8432 %8431
       %8434 = OpPhi %v3float %8424 %8366 %8432 %8431
       %8435 = OpFSub %float %float_1 %8413
       %8436 = OpLoad %v4float %8378
       %8437 = OpCompositeExtract %float %8436 0
       %8438 = OpBitcast %uint %8437
       %8439 = OpBitwiseAnd %uint %8438 %uint_4
       %8440 = OpINotEqual %bool %8439 %uint_0
               OpSelectionMerge %8441 DontFlatten
               OpBranchConditional %8440 %8442 %8441
       %8442 = OpLabel
       %8443 = OpVectorTimesScalar %v3float %579 %float_2097152
       %8444 = OpFAdd %v3float %8443 %629
       %8445 = OpAccessChain %_ptr_Uniform_v3float %View %uint_33
       %8446 = OpLoad %v3float %8445
       %8447 = OpAccessChain %_ptr_Uniform_v3float %View %uint_34
       %8448 = OpLoad %v3float %8447
       %8449 = OpExtInst %v3float %1 Fma %8444 %8446 %8448
       %8450 = OpExtInst %v3float %1 FClamp %8449 %100 %300
       %8451 = OpAccessChain %_ptr_Uniform_v3float %View %uint_35
       %8452 = OpLoad %v3float %8451
       %8453 = OpFMul %v3float %8450 %8452
       %8454 = OpCompositeExtract %float %8453 0
       %8455 = OpCompositeExtract %float %8453 1
       %8456 = OpCompositeExtract %float %8453 2
       %8457 = OpConvertFToS %int %8454
       %8458 = OpConvertFToS %int %8455
       %8459 = OpConvertFToS %int %8456
       %8460 = OpCompositeConstruct %v4int %8457 %8458 %8459 %int_0
       %8461 = OpVectorShuffle %v3int %8460 %8460 0 1 2
       %8462 = OpLoad %type_3d_image %View_VolumetricLightmapIndirectionTexture
       %8463 = OpImageFetch %v4uint %8462 %8461 Lod %int_0
       %8464 = OpConvertUToF %v4float %8463
       %8465 = OpAccessChain %_ptr_Uniform_float %View %uint_36
       %8466 = OpLoad %float %8465
       %8467 = OpFAdd %float %8466 %float_1
       %8468 = OpVectorShuffle %v3float %8464 %8464 0 1 2
       %8469 = OpVectorTimesScalar %v3float %8468 %8467
       %8470 = OpCompositeExtract %float %8464 3
       %8471 = OpCompositeConstruct %v3float %8470 %8470 %8470
       %8472 = OpFDiv %v3float %8453 %8471
       %8473 = OpExtInst %v3float %1 Fract %8472
       %8474 = OpVectorTimesScalar %v3float %8473 %8466
       %8475 = OpFAdd %v3float %8469 %8474
       %8476 = OpFAdd %v3float %8475 %135
       %8477 = OpAccessChain %_ptr_Uniform_v3float %View %uint_37
       %8478 = OpLoad %v3float %8477
       %8479 = OpFMul %v3float %8476 %8478
       %8480 = OpLoad %type_3d_image_0 %View_DirectionalLightShadowingBrickTexture
       %8481 = OpLoad %type_sampler %View_SharedBilinearClampedSampler
       %8482 = OpSampledImage %type_sampled_image_0 %8480 %8481
       %8483 = OpImageSampleExplicitLod %v4float %8482 %8479 Lod %float_0
       %8484 = OpCompositeExtract %float %8483 0
               OpBranch %8441
       %8441 = OpLabel
       %8485 = OpPhi %float %float_1 %8430 %8484 %8442
       %8486 = OpCompositeConstruct %v4float %8485 %float_1 %float_1 %float_1
       %8487 = OpFOrdEqual %v4bool %8486 %96
       %8488 = OpAll %bool %8487
       %8489 = OpFOrdEqual %v4bool %8486 %115
       %8490 = OpAll %bool %8489
       %8491 = OpLogicalNot %bool %8488
       %8492 = OpLogicalNot %bool %8490
       %8493 = OpLogicalAnd %bool %8491 %8492
               OpSelectionMerge %8494 None
               OpBranchConditional %8493 %8495 %8496
       %8496 = OpLabel
               OpSelectionMerge %8497 None
               OpBranchConditional %8488 %8498 %8499
       %8499 = OpLabel
               OpSelectionMerge %8500 None
               OpBranchConditional %8490 %8501 %8500
       %8501 = OpLabel
       %8502 = OpBitwiseOr %uint %8394 %uint_0
       %8503 = OpBitwiseOr %uint %8502 %uint_0
               OpBranch %8500
       %8500 = OpLabel
       %8504 = OpPhi %uint %8394 %8499 %8503 %8501
               OpBranch %8497
       %8498 = OpLabel
       %8505 = OpBitwiseOr %uint %8394 %uint_0
       %8506 = OpBitwiseOr %uint %8505 %uint_16
               OpBranch %8497
       %8497 = OpLabel
       %8507 = OpPhi %uint %8504 %8500 %8506 %8498
               OpBranch %8494
       %8495 = OpLabel
       %8508 = OpBitwiseOr %uint %8394 %uint_8
               OpBranch %8494
       %8494 = OpLabel
       %8509 = OpPhi %uint %8507 %8497 %8508 %8495
       %8510 = OpFMul %float %float_0_0799999982 %8403
       %8511 = OpCompositeConstruct %v3float %8510 %8510 %8510
       %8512 = OpAccessChain %_ptr_Uniform_float %View %uint_15 %int_3
       %8513 = OpLoad %float %8512
       %8514 = OpVectorTimesScalar %v3float %8423 %8513
       %8515 = OpFAdd %v3float %8514 %8398
       %8516 = OpAccessChain %_ptr_Uniform_float %View %uint_16 %int_3
       %8517 = OpLoad %float %8516
       %8518 = OpVectorTimesScalar %v3float %8511 %8517
       %8519 = OpVectorShuffle %v3float %599 %599 0 1 2
       %8520 = OpFAdd %v3float %8518 %8519
       %8521 = OpAccessChain %_ptr_Uniform_float %View %uint_24
       %8522 = OpLoad %float %8521
       %8523 = OpFOrdNotEqual %bool %8522 %float_0
               OpSelectionMerge %8524 None
               OpBranchConditional %8523 %8525 %8524
       %8525 = OpLabel
       %8526 = OpVectorTimesScalar %v3float %8520 %float_0_449999988
       %8527 = OpFAdd %v3float %8515 %8526
               OpBranch %8524
       %8524 = OpLabel
       %8528 = OpPhi %v3float %8515 %8494 %8527 %8525
       %8529 = OpCompositeConstruct %v3bool %8523 %8523 %8523
       %8530 = OpSelect %v3float %8529 %100 %8520
       %8531 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_17
       %8532 = OpLoad %uint %8531
       %8533 = OpUGreaterThan %bool %8532 %uint_0
               OpSelectionMerge %8534 None
               OpBranchConditional %8533 %8535 %8534
       %8535 = OpLabel
       %8536 = OpCompositeExtract %float %8434 0
       %8537 = OpCompositeExtract %float %8434 1
       %8538 = OpCompositeExtract %float %8434 2
       %8539 = OpCompositeConstruct %v4float %8536 %8537 %8538 %float_1
       %8540 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_0
       %8541 = OpLoad %v4float %8540
       %8542 = OpDot %float %8541 %8539
       %8543 = OpCompositeInsert %v3float %8542 %539 0
       %8544 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_1
       %8545 = OpLoad %v4float %8544
       %8546 = OpDot %float %8545 %8539
       %8547 = OpCompositeInsert %v3float %8546 %8543 1
       %8548 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_2
       %8549 = OpLoad %v4float %8548
       %8550 = OpDot %float %8549 %8539
       %8551 = OpCompositeInsert %v3float %8550 %8547 2
       %8552 = OpVectorShuffle %v4float %8539 %8539 0 1 2 2
       %8553 = OpVectorShuffle %v4float %8539 %8539 1 2 2 0
       %8554 = OpFMul %v4float %8552 %8553
       %8555 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_3
       %8556 = OpLoad %v4float %8555
       %8557 = OpDot %float %8556 %8554
       %8558 = OpCompositeInsert %v3float %8557 %539 0
       %8559 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_4
       %8560 = OpLoad %v4float %8559
       %8561 = OpDot %float %8560 %8554
       %8562 = OpCompositeInsert %v3float %8561 %8558 1
       %8563 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_5
       %8564 = OpLoad %v4float %8563
       %8565 = OpDot %float %8564 %8554
       %8566 = OpCompositeInsert %v3float %8565 %8562 2
       %8567 = OpFMul %float %8537 %8537
       %8568 = OpFNegate %float %8567
       %8569 = OpExtInst %float %1 Fma %8536 %8536 %8568
       %8570 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_6
       %8571 = OpLoad %v4float %8570
       %8572 = OpVectorShuffle %v3float %8571 %8571 0 1 2
       %8573 = OpVectorTimesScalar %v3float %8572 %8569
       %8574 = OpFAdd %v3float %8551 %8566
       %8575 = OpFAdd %v3float %8574 %8573
       %8576 = OpExtInst %v3float %1 NMax %100 %8575
       %8577 = OpVectorShuffle %v3float %607 %607 0 1 2
       %8578 = OpFMul %v3float %8576 %8577
       %8579 = OpVectorTimesScalar %v3float %8578 %float_1
               OpBranch %8534
       %8534 = OpLabel
       %8580 = OpPhi %v3float %100 %8524 %8579 %8535
       %8581 = OpFMul %v3float %8580 %8528
       %8582 = OpVectorTimesScalar %v3float %8423 %float_2_04040003
       %8583 = OpFSub %v3float %8582 %172
       %8584 = OpVectorTimesScalar %v3float %8423 %float_n4_79510021
       %8585 = OpFAdd %v3float %8584 %175
       %8586 = OpVectorTimesScalar %v3float %8423 %float_2_75519991
       %8587 = OpFAdd %v3float %8586 %178
       %8588 = OpVectorTimesScalar %v3float %8583 %float_1
       %8589 = OpFAdd %v3float %8588 %8585
       %8590 = OpVectorTimesScalar %v3float %8589 %float_1
       %8591 = OpFAdd %v3float %8590 %8587
       %8592 = OpVectorTimesScalar %v3float %8591 %float_1
       %8593 = OpExtInst %v3float %1 NMax %125 %8592
       %8594 = OpFMul %v3float %8581 %8593
       %8595 = OpVectorTimesScalar %v3float %8528 %8413
       %8596 = OpVectorTimesScalar %v3float %8594 %8413
       %8597 = OpAccessChain %_ptr_Uniform_v4float %View %uint_11
       %8598 = OpLoad %v4float %8597
       %8599 = OpVectorShuffle %v2float %8598 %8598 2 3
       %8600 = OpFMul %v2float %612 %8599
       %8601 = OpConvertFToU %v2uint %8600
       %8602 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_3
       %8603 = OpLoad %uint %8602
       %8604 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_4
       %8605 = OpLoad %v3float %8604
       %8606 = OpAccessChain %_ptr_Uniform_v3int %OpaqueBasePass %uint_2
       %8607 = OpLoad %v3int %8606
       %8608 = OpCompositeExtract %float %8605 0
       %8609 = OpCompositeExtract %float %8605 1
       %8610 = OpExtInst %float %1 Fma %571 %8608 %8609
       %8611 = OpExtInst %float %1 Log2 %8610
       %8612 = OpCompositeExtract %float %8605 2
       %8613 = OpFMul %float %8611 %8612
       %8614 = OpExtInst %float %1 NMax %float_0 %8613
       %8615 = OpConvertFToU %uint %8614
       %8616 = OpCompositeExtract %int %8607 2
       %8617 = OpISub %int %8616 %int_1
       %8618 = OpBitcast %uint %8617
       %8619 = OpExtInst %uint %1 UMin %8615 %8618
       %8620 = OpCompositeConstruct %v2uint %8603 %8603
       %8621 = OpBitwiseAnd %v2uint %8620 %302
       %8622 = OpShiftRightLogical %v2uint %8601 %8621
       %8623 = OpCompositeExtract %uint %8622 0
       %8624 = OpCompositeExtract %uint %8622 1
       %8625 = OpCompositeExtract %int %8607 1
       %8626 = OpBitcast %uint %8625
       %8627 = OpIMul %uint %8619 %8626
       %8628 = OpIAdd %uint %8627 %8624
       %8629 = OpCompositeExtract %int %8607 0
       %8630 = OpBitcast %uint %8629
       %8631 = OpIMul %uint %8628 %8630
       %8632 = OpIAdd %uint %8631 %8623
       %8633 = OpAccessChain %_ptr_Uniform_uint %SingleLayerWater %uint_3
       %8634 = OpLoad %uint %8633
       %8635 = OpINotEqual %bool %8634 %uint_0
       %8636 = OpAccessChain %_ptr_Uniform_uint %SingleLayerWater %uint_4
       %8637 = OpLoad %uint %8636
       %8638 = OpINotEqual %bool %8637 %uint_0
       %8639 = OpLogicalAnd %bool %true %8638
       %8640 = OpExtInst %v2float %1 Trunc %122
       %8641 = OpConvertFToS %v2int %8640
       %8642 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_19
       %8643 = OpLoad %int %8642
       %8644 = OpINotEqual %bool %8643 %int_0
               OpSelectionMerge %8645 DontFlatten
               OpBranchConditional %8644 %8646 %8645
       %8646 = OpLabel
       %8647 = OpCompositeExtract %int %8641 0
       %8648 = OpCompositeExtract %int %8641 1
       %8649 = OpCompositeConstruct %v3int %8647 %8648 %int_0
       %8650 = OpVectorShuffle %v2int %8649 %8649 0 1
       %8651 = OpLoad %type_2d_image %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture
       %8652 = OpImageFetch %v4float %8651 %8650 Lod %int_0
               OpBranch %8645
       %8645 = OpLabel
       %8653 = OpPhi %v4float %115 %8534 %8652 %8646
       %8654 = OpFMul %v4float %8653 %8653
       %8655 = OpLoad %v4float %8378
       %8656 = OpCompositeExtract %float %8655 0
       %8657 = OpBitcast %uint %8656
       %8658 = OpBitwiseAnd %uint %8657 %uint_2048
       %8659 = OpINotEqual %bool %8658 %uint_0
       %8660 = OpSelect %uint %8659 %uint_1 %uint_0
       %8661 = OpBitwiseAnd %uint %8657 %uint_4096
       %8662 = OpINotEqual %bool %8661 %uint_0
       %8663 = OpSelect %uint %8662 %uint_1 %uint_0
       %8664 = OpBitwiseAnd %uint %8657 %uint_8192
       %8665 = OpINotEqual %bool %8664 %uint_0
       %8666 = OpSelect %uint %8665 %uint_1 %uint_0
       %8667 = OpShiftLeftLogical %uint %8663 %uint_1
       %8668 = OpBitwiseOr %uint %8660 %8667
       %8669 = OpShiftLeftLogical %uint %8666 %uint_2
       %8670 = OpBitwiseOr %uint %8668 %8669
       %8671 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_1
       %8672 = OpLoad %uint %8671
       %8673 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_8
       %8674 = OpLoad %uint %8673
       %8675 = OpAccessChain %_ptr_Uniform_v2float %OpaqueBasePass %uint_9
       %8676 = OpLoad %v2float %8675
       %8677 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_7
       %8678 = OpLoad %v3float %8677
       %8679 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_5
       %8680 = OpLoad %v3float %8679
       %8681 = OpAccessChain %_ptr_Uniform_float %OpaqueBasePass %uint_6
       %8682 = OpLoad %float %8681
       %8683 = OpINotEqual %bool %8672 %uint_0
               OpSelectionMerge %8684 DontFlatten
               OpBranchConditional %8683 %8685 %8684
       %8685 = OpLabel
       %8686 = OpBitwiseAnd %uint %8674 %uint_2
       %8687 = OpShiftRightLogical %uint %8686 %uint_1
       %8688 = OpConvertUToF %float %8687
       %8689 = OpBitwiseAnd %uint %8674 %uint_4
       %8690 = OpShiftRightLogical %uint %8689 %uint_2
       %8691 = OpConvertUToF %float %8690
       %8692 = OpBitwiseAnd %uint %8674 %uint_8
       %8693 = OpShiftRightLogical %uint %8692 %uint_3
       %8694 = OpConvertUToF %float %8693
       %8695 = OpCompositeConstruct %v4float %537 %8688 %8691 %8694
       %8696 = OpShiftRightLogical %uint %8674 %uint_8
       %8697 = OpBitwiseAnd %uint %8696 %uint_7
       %8698 = OpCompositeInsert %v4float %float_1 %8695 0
       %8699 = OpCompositeInsert %v4float %float_1 %8486 0
       %8700 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_10
       %8701 = OpLoad %uint %8700
       %8702 = OpUGreaterThan %bool %8701 %uint_0
               OpSelectionMerge %8703 None
               OpBranchConditional %8702 %8704 %8703
       %8704 = OpLabel
       %8705 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_12
       %8706 = OpLoad %v4float %8705
       %8707 = OpCompositeConstruct %v4float %632 %632 %632 %632
       %8708 = OpFOrdGreaterThanEqual %v4bool %8707 %8706
       %8709 = OpSelect %v4float %8708 %115 %96
       %8710 = OpCompositeExtract %float %8709 0
       %8711 = OpCompositeExtract %float %8709 1
       %8712 = OpFAdd %float %8710 %8711
       %8713 = OpCompositeExtract %float %8709 2
       %8714 = OpFAdd %float %8712 %8713
       %8715 = OpCompositeExtract %float %8709 3
       %8716 = OpFAdd %float %8714 %8715
       %8717 = OpConvertFToU %uint %8716
       %8718 = OpULessThan %bool %8717 %8701
               OpSelectionMerge %8719 None
               OpBranchConditional %8718 %8720 %8719
       %8720 = OpLabel
       %8721 = OpCompositeExtract %float %628 0
       %8722 = OpCompositeExtract %float %628 1
       %8723 = OpCompositeExtract %float %628 2
       %8724 = OpCompositeConstruct %v4float %8721 %8722 %8723 %float_1
       %8725 = OpAccessChain %_ptr_Uniform_mat4v4float %OpaqueBasePass %uint_13 %8717
       %8726 = OpLoad %mat4v4float %8725
       %8727 = OpMatrixTimesVector %v4float %8726 %8724
       %8728 = OpVectorShuffle %v2float %8727 %8727 0 1
       %8729 = OpCompositeExtract %float %8727 3
       %8730 = OpCompositeConstruct %v2float %8729 %8729
       %8731 = OpFDiv %v2float %8728 %8730
       %8732 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_14 %8717
       %8733 = OpLoad %v4float %8732
       %8734 = OpVectorShuffle %v2float %8733 %8733 0 1
       %8735 = OpFOrdGreaterThanEqual %v2bool %8731 %8734
       %8736 = OpVectorShuffle %v2float %8733 %8733 2 3
       %8737 = OpFOrdLessThanEqual %v2bool %8731 %8736
       %8738 = OpCompositeExtract %bool %8735 0
       %8739 = OpCompositeExtract %bool %8737 0
       %8740 = OpLogicalAnd %bool %8738 %8739
       %8741 = OpCompositeExtract %bool %8735 1
       %8742 = OpCompositeExtract %bool %8737 1
       %8743 = OpLogicalAnd %bool %8741 %8742
       %8744 = OpCompositeConstruct %v2bool %8740 %8743
       %8745 = OpAll %bool %8744
               OpSelectionMerge %8746 None
               OpBranchConditional %8745 %8747 %8746
       %8747 = OpLabel
       %8748 = OpLoad %type_2d_image %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas
       %8749 = OpLoad %type_sampler %OpaqueBasePass_Shared_Forward_ShadowmapSampler
       %8750 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_15
       %8751 = OpLoad %v4float %8750
       %8752 = OpCompositeExtract %float %8727 2
       %8753 = OpFSub %float %float_1 %8752
       %8754 = OpVectorShuffle %v2float %8751 %8751 0 1
       %8755 = OpExtInst %v2float %1 Fma %8731 %8754 %516
       %8756 = OpExtInst %v2float %1 Fract %8755
       %8757 = OpExtInst %v2float %1 Floor %8755
       %8758 = OpFAdd %v2float %8757 %309
       %8759 = OpVectorShuffle %v2float %8751 %8751 2 3
       %8760 = OpFMul %v2float %8758 %8759
       %8761 = OpSampledImage %type_sampled_image %8748 %8749
       %8762 = OpImageGather %v4float %8761 %8760 %int_0 None
       %8763 = OpExtInst %float %1 Fma %8753 %float_4000 %float_n1
       %8764 = OpVectorTimesScalar %v4float %8762 %float_4000
       %8765 = OpCompositeConstruct %v4float %8763 %8763 %8763 %8763
       %8766 = OpFSub %v4float %8764 %8765
       %8767 = OpExtInst %v4float %1 FClamp %8766 %96 %115
       %8768 = OpVectorShuffle %v2float %8767 %8767 3 0
       %8769 = OpVectorShuffle %v2float %8767 %8767 2 1
       %8770 = OpVectorShuffle %v2float %8756 %8756 0 0
       %8771 = OpExtInst %v2float %1 FMix %8768 %8769 %8770
       %8772 = OpCompositeExtract %float %8771 0
       %8773 = OpCompositeExtract %float %8771 1
       %8774 = OpCompositeExtract %float %8756 1
       %8775 = OpExtInst %float %1 FMix %8772 %8773 %8774
               OpBranch %8746
       %8746 = OpLabel
       %8776 = OpPhi %float %float_1 %8720 %8775 %8747
               OpBranch %8719
       %8719 = OpLabel
       %8777 = OpPhi %float %float_1 %8704 %8776 %8746
               OpBranch %8703
       %8703 = OpLabel
       %8778 = OpPhi %float %float_1 %8685 %8777 %8719
       %8779 = OpLogicalNot %bool %8635
       %8780 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_11
       %8781 = OpLoad %int %8780
       %8782 = OpINotEqual %bool %8781 %int_n1
       %8783 = OpLogicalAnd %bool %8779 %8782
               OpSelectionMerge %8784 DontFlatten
               OpBranchConditional %8783 %8785 %8784
       %8785 = OpLabel
               OpSelectionMerge %8786 None
               OpSwitch %uint_0 %8787
       %8787 = OpLabel
       %8788 = OpExtInst %float %1 NMax %float_0 %float_0
       %8789 = OpBitcast %uint %8781
       %8790 = OpIMul %uint %8789 %uint_336
       %8791 = OpIAdd %uint %8790 %uint_96
       %8792 = OpShiftRightLogical %uint %8791 %uint_2
       %8793 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8792
       %8794 = OpLoad %uint %8793
       %8795 = OpIAdd %uint %8792 %uint_1
       %8796 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8795
       %8797 = OpLoad %uint %8796
       %8798 = OpIAdd %uint %8792 %uint_2
       %8799 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8798
       %8800 = OpLoad %uint %8799
       %8801 = OpIAdd %uint %8792 %uint_3
       %8802 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8801
       %8803 = OpLoad %uint %8802
       %8804 = OpCompositeConstruct %v4uint %8794 %8797 %8800 %8803
       %8805 = OpBitcast %v4float %8804
       %8806 = OpCompositeInsert %mat4v4float %8805 %530 2
       %8807 = OpIAdd %uint %8790 %uint_128
       %8808 = OpShiftRightLogical %uint %8807 %uint_2
       %8809 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8808
       %8810 = OpLoad %uint %8809
       %8811 = OpIAdd %uint %8808 %uint_1
       %8812 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8811
       %8813 = OpLoad %uint %8812
       %8814 = OpIAdd %uint %8808 %uint_2
       %8815 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8814
       %8816 = OpLoad %uint %8815
       %8817 = OpIAdd %uint %8808 %uint_3
       %8818 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8817
       %8819 = OpLoad %uint %8818
       %8820 = OpCompositeConstruct %v4uint %8810 %8813 %8816 %8819
       %8821 = OpBitcast %v4float %8820
       %8822 = OpCompositeInsert %mat4v4float %8821 %530 0
       %8823 = OpIAdd %uint %8790 %uint_144
       %8824 = OpShiftRightLogical %uint %8823 %uint_2
       %8825 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8824
       %8826 = OpLoad %uint %8825
       %8827 = OpIAdd %uint %8824 %uint_1
       %8828 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8827
       %8829 = OpLoad %uint %8828
       %8830 = OpIAdd %uint %8824 %uint_2
       %8831 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8830
       %8832 = OpLoad %uint %8831
       %8833 = OpIAdd %uint %8824 %uint_3
       %8834 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8833
       %8835 = OpLoad %uint %8834
       %8836 = OpCompositeConstruct %v4uint %8826 %8829 %8832 %8835
       %8837 = OpBitcast %v4float %8836
       %8838 = OpCompositeInsert %mat4v4float %8837 %8822 1
       %8839 = OpIAdd %uint %8790 %uint_160
       %8840 = OpShiftRightLogical %uint %8839 %uint_2
       %8841 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8840
       %8842 = OpLoad %uint %8841
       %8843 = OpIAdd %uint %8840 %uint_1
       %8844 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8843
       %8845 = OpLoad %uint %8844
       %8846 = OpIAdd %uint %8840 %uint_2
       %8847 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8846
       %8848 = OpLoad %uint %8847
       %8849 = OpIAdd %uint %8840 %uint_3
       %8850 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8849
       %8851 = OpLoad %uint %8850
       %8852 = OpCompositeConstruct %v4uint %8842 %8845 %8848 %8851
       %8853 = OpBitcast %v4float %8852
       %8854 = OpCompositeInsert %mat4v4float %8853 %8838 2
       %8855 = OpIAdd %uint %8790 %uint_176
       %8856 = OpShiftRightLogical %uint %8855 %uint_2
       %8857 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8856
       %8858 = OpLoad %uint %8857
       %8859 = OpIAdd %uint %8856 %uint_1
       %8860 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8859
       %8861 = OpLoad %uint %8860
       %8862 = OpIAdd %uint %8856 %uint_2
       %8863 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8862
       %8864 = OpLoad %uint %8863
       %8865 = OpIAdd %uint %8856 %uint_3
       %8866 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8865
       %8867 = OpLoad %uint %8866
       %8868 = OpCompositeConstruct %v4uint %8858 %8861 %8864 %8867
       %8869 = OpBitcast %v4float %8868
       %8870 = OpCompositeInsert %mat4v4float %8869 %8854 3
       %8871 = OpIAdd %uint %8790 %uint_256
       %8872 = OpShiftRightLogical %uint %8871 %uint_2
       %8873 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8872
       %8874 = OpLoad %uint %8873
       %8875 = OpIAdd %uint %8872 %uint_1
       %8876 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8875
       %8877 = OpLoad %uint %8876
       %8878 = OpIAdd %uint %8872 %uint_2
       %8879 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8878
       %8880 = OpLoad %uint %8879
       %8881 = OpCompositeConstruct %v3uint %8874 %8877 %8880
       %8882 = OpBitcast %v3float %8881
       %8883 = OpIAdd %uint %8790 %uint_268
       %8884 = OpShiftRightLogical %uint %8883 %uint_2
       %8885 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8884
       %8886 = OpLoad %uint %8885
       %8887 = OpIAdd %uint %8790 %uint_272
       %8888 = OpShiftRightLogical %uint %8887 %uint_2
       %8889 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8888
       %8890 = OpLoad %uint %8889
       %8891 = OpIAdd %uint %8888 %uint_1
       %8892 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8891
       %8893 = OpLoad %uint %8892
       %8894 = OpIAdd %uint %8888 %uint_2
       %8895 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8894
       %8896 = OpLoad %uint %8895
       %8897 = OpCompositeConstruct %v3uint %8890 %8893 %8896
       %8898 = OpBitcast %v3float %8897
       %8899 = OpIAdd %uint %8790 %uint_288
       %8900 = OpShiftRightLogical %uint %8899 %uint_2
       %8901 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8900
       %8902 = OpLoad %uint %8901
       %8903 = OpIAdd %uint %8900 %uint_1
       %8904 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8903
       %8905 = OpLoad %uint %8904
       %8906 = OpIAdd %uint %8900 %uint_2
       %8907 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8906
       %8908 = OpLoad %uint %8907
       %8909 = OpCompositeConstruct %v3uint %8902 %8905 %8908
       %8910 = OpBitcast %v3float %8909
       %8911 = OpIAdd %uint %8790 %uint_300
       %8912 = OpShiftRightLogical %uint %8911 %uint_2
       %8913 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8912
       %8914 = OpLoad %uint %8913
       %8915 = OpBitcast %float %8914
       %8916 = OpIAdd %uint %8790 %uint_312
       %8917 = OpShiftRightLogical %uint %8916 %uint_2
       %8918 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8917
       %8919 = OpLoad %uint %8918
       %8920 = OpBitcast %int %8919
       %8921 = OpIAdd %uint %8790 %uint_316
       %8922 = OpShiftRightLogical %uint %8921 %uint_2
       %8923 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8922
       %8924 = OpLoad %uint %8923
       %8925 = OpBitcast %int %8924
       %8926 = OpFNegate %v3float %8882
       %8927 = OpFNegate %v3float %8910
       %8928 = OpIEqual %bool %8886 %uint_0
               OpSelectionMerge %8929 None
               OpBranchConditional %8928 %8930 %8931
       %8931 = OpLabel
       %8932 = OpFAdd %v3float %579 %8882
       %8933 = OpFAdd %v3float %629 %8898
       %8934 = OpVectorTimesScalar %v3float %8932 %float_2097152
       %8935 = OpFAdd %v3float %8934 %8933
       %8936 = OpINotEqual %bool %8886 %uint_2
               OpSelectionMerge %8937 None
               OpBranchConditional %8936 %8938 %8937
       %8938 = OpLabel
               OpSelectionMerge %8939 None
               OpSwitch %uint_0 %8940
       %8940 = OpLabel
       %8941 = OpCompositeExtract %float %8935 0
       %8942 = OpExtInst %float %1 FAbs %8941
       %8943 = OpCompositeExtract %float %8935 1
       %8944 = OpExtInst %float %1 FAbs %8943
       %8945 = OpFOrdGreaterThanEqual %bool %8942 %8944
       %8946 = OpCompositeExtract %float %8935 2
       %8947 = OpExtInst %float %1 FAbs %8946
       %8948 = OpFOrdGreaterThanEqual %bool %8942 %8947
       %8949 = OpLogicalAnd %bool %8945 %8948
               OpSelectionMerge %8950 None
               OpBranchConditional %8949 %8951 %8952
       %8952 = OpLabel
       %8953 = OpFOrdGreaterThan %bool %8944 %8947
               OpSelectionMerge %8954 None
               OpBranchConditional %8953 %8955 %8956
       %8956 = OpLabel
       %8957 = OpFOrdGreaterThan %bool %8946 %float_0
       %8958 = OpSelect %uint %8957 %uint_4 %uint_5
               OpBranch %8939
       %8955 = OpLabel
       %8959 = OpFOrdGreaterThan %bool %8943 %float_0
       %8960 = OpSelect %uint %8959 %uint_2 %uint_3
               OpBranch %8939
       %8954 = OpLabel
               OpUnreachable
       %8951 = OpLabel
       %8961 = OpFOrdGreaterThan %bool %8941 %float_0
       %8962 = OpSelect %uint %8961 %uint_0 %uint_1
               OpBranch %8939
       %8950 = OpLabel
               OpUnreachable
       %8939 = OpLabel
       %8963 = OpPhi %uint %8958 %8956 %8960 %8955 %8962 %8951
       %8964 = OpIAdd %uint %8789 %8963
       %8965 = OpBitcast %int %8964
       %8966 = OpBitcast %uint %8965
       %8967 = OpIMul %uint %8966 %uint_336
       %8968 = OpIAdd %uint %8967 %uint_96
       %8969 = OpShiftRightLogical %uint %8968 %uint_2
       %8970 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8969
       %8971 = OpLoad %uint %8970
       %8972 = OpIAdd %uint %8969 %uint_1
       %8973 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8972
       %8974 = OpLoad %uint %8973
       %8975 = OpIAdd %uint %8969 %uint_2
       %8976 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8975
       %8977 = OpLoad %uint %8976
       %8978 = OpIAdd %uint %8969 %uint_3
       %8979 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8978
       %8980 = OpLoad %uint %8979
       %8981 = OpCompositeConstruct %v4uint %8971 %8974 %8977 %8980
       %8982 = OpBitcast %v4float %8981
       %8983 = OpCompositeInsert %mat4v4float %8982 %530 2
       %8984 = OpIAdd %uint %8967 %uint_128
       %8985 = OpShiftRightLogical %uint %8984 %uint_2
       %8986 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8985
       %8987 = OpLoad %uint %8986
       %8988 = OpIAdd %uint %8985 %uint_1
       %8989 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8988
       %8990 = OpLoad %uint %8989
       %8991 = OpIAdd %uint %8985 %uint_2
       %8992 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8991
       %8993 = OpLoad %uint %8992
       %8994 = OpIAdd %uint %8985 %uint_3
       %8995 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8994
       %8996 = OpLoad %uint %8995
       %8997 = OpCompositeConstruct %v4uint %8987 %8990 %8993 %8996
       %8998 = OpBitcast %v4float %8997
       %8999 = OpCompositeInsert %mat4v4float %8998 %530 0
       %9000 = OpIAdd %uint %8967 %uint_144
       %9001 = OpShiftRightLogical %uint %9000 %uint_2
       %9002 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9001
       %9003 = OpLoad %uint %9002
       %9004 = OpIAdd %uint %9001 %uint_1
       %9005 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9004
       %9006 = OpLoad %uint %9005
       %9007 = OpIAdd %uint %9001 %uint_2
       %9008 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9007
       %9009 = OpLoad %uint %9008
       %9010 = OpIAdd %uint %9001 %uint_3
       %9011 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9010
       %9012 = OpLoad %uint %9011
       %9013 = OpCompositeConstruct %v4uint %9003 %9006 %9009 %9012
       %9014 = OpBitcast %v4float %9013
       %9015 = OpCompositeInsert %mat4v4float %9014 %8999 1
       %9016 = OpIAdd %uint %8967 %uint_160
       %9017 = OpShiftRightLogical %uint %9016 %uint_2
       %9018 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9017
       %9019 = OpLoad %uint %9018
       %9020 = OpIAdd %uint %9017 %uint_1
       %9021 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9020
       %9022 = OpLoad %uint %9021
       %9023 = OpIAdd %uint %9017 %uint_2
       %9024 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9023
       %9025 = OpLoad %uint %9024
       %9026 = OpIAdd %uint %9017 %uint_3
       %9027 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9026
       %9028 = OpLoad %uint %9027
       %9029 = OpCompositeConstruct %v4uint %9019 %9022 %9025 %9028
       %9030 = OpBitcast %v4float %9029
       %9031 = OpCompositeInsert %mat4v4float %9030 %9015 2
       %9032 = OpIAdd %uint %8967 %uint_176
       %9033 = OpShiftRightLogical %uint %9032 %uint_2
       %9034 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9033
       %9035 = OpLoad %uint %9034
       %9036 = OpIAdd %uint %9033 %uint_1
       %9037 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9036
       %9038 = OpLoad %uint %9037
       %9039 = OpIAdd %uint %9033 %uint_2
       %9040 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9039
       %9041 = OpLoad %uint %9040
       %9042 = OpIAdd %uint %9033 %uint_3
       %9043 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9042
       %9044 = OpLoad %uint %9043
       %9045 = OpCompositeConstruct %v4uint %9035 %9038 %9041 %9044
       %9046 = OpBitcast %v4float %9045
       %9047 = OpCompositeInsert %mat4v4float %9046 %9031 3
               OpBranch %8937
       %8937 = OpLabel
       %9048 = OpPhi %mat4v4float %8806 %8931 %8983 %8939
       %9049 = OpPhi %int %8781 %8931 %8965 %8939
       %9050 = OpPhi %mat4v4float %8870 %8931 %9047 %8939
       %9051 = OpCompositeExtract %float %8935 0
       %9052 = OpCompositeExtract %float %8935 1
       %9053 = OpCompositeExtract %float %8935 2
       %9054 = OpCompositeConstruct %v4float %9051 %9052 %9053 %float_1
       %9055 = OpMatrixTimesVector %v4float %9050 %9054
       %9056 = OpCompositeExtract %float %9055 3
       %9057 = OpCompositeConstruct %v3float %9056 %9056 %9056
       %9058 = OpVectorShuffle %v3float %9055 %9055 0 1 2
       %9059 = OpFDiv %v3float %9058 %9057
       %9060 = OpVectorShuffle %v2float %9059 %451 0 1
               OpSelectionMerge %9061 None
               OpSwitch %uint_0 %9062
       %9062 = OpLabel
       %9063 = OpBitcast %uint %9049
       %9064 = OpVectorTimesScalar %v2float %9060 %float_128
       %9065 = OpConvertFToU %v2uint %9064
               OpSelectionMerge %9066 None
               OpSwitch %uint_0 %9067
       %9067 = OpLabel
       %9068 = OpBitcast %int %9063
       %9069 = OpBitcast %uint %9068
       %9070 = OpULessThan %bool %9069 %uint_8192
               OpSelectionMerge %9071 None
               OpBranchConditional %9070 %9072 %9071
       %9072 = OpLabel
               OpBranch %9066
       %9071 = OpLabel
       %9073 = OpISub %uint %9063 %uint_8192
       %9074 = OpIMul %uint %9073 %uint_21845
       %9075 = OpIAdd %uint %uint_8192 %9074
       %9076 = OpCompositeExtract %uint %9065 0
       %9077 = OpCompositeExtract %uint %9065 1
       %9078 = OpShiftLeftLogical %uint %9077 %uint_7
       %9079 = OpIAdd %uint %9076 %9078
       %9080 = OpIAdd %uint %9075 %9079
               OpBranch %9066
       %9066 = OpLabel
       %9081 = OpPhi %uint %9063 %9072 %9080 %9071
       %9082 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9081
       %9083 = OpLoad %uint %9082
       %9084 = OpBitwiseAnd %uint %9083 %uint_1023
       %9085 = OpShiftRightLogical %uint %9083 %uint_10
       %9086 = OpBitwiseAnd %uint %9085 %uint_1023
       %9087 = OpCompositeConstruct %v2uint %9084 %9086
       %9088 = OpShiftRightLogical %uint %9083 %uint_20
       %9089 = OpBitwiseAnd %uint %9088 %uint_63
       %9090 = OpBitwiseAnd %uint %9083 %uint_134217728
       %9091 = OpINotEqual %bool %9090 %uint_0
       %9092 = OpSelect %uint %9070 %uint_7 %9089
       %9093 = OpBitwiseAnd %uint %9092 %uint_31
       %9094 = OpShiftRightLogical %uint %uint_16384 %9093
       %9095 = OpConvertUToF %float %9094
       %9096 = OpVectorTimesScalar %v2float %9060 %9095
       %9097 = OpConvertFToU %v2uint %9096
       %9098 = OpIMul %v2uint %9087 %334
       %9099 = OpBitwiseAnd %v2uint %9097 %335
       %9100 = OpIAdd %v2uint %9098 %9099
               OpSelectionMerge %9101 None
               OpBranchConditional %9091 %9102 %9101
       %9102 = OpLabel
       %9103 = OpCompositeExtract %uint %9100 0
       %9104 = OpCompositeExtract %uint %9100 1
       %9105 = OpCompositeConstruct %v4uint %9103 %9104 %uint_0 %uint_0
       %9106 = OpBitcast %v4int %9105
       %9107 = OpVectorShuffle %v3int %9106 %9106 0 1 2
       %9108 = OpCompositeExtract %int %9106 3
       %9109 = OpLoad %type_2d_image_array_0 %VirtualShadowMap_PhysicalPagePool
       %9110 = OpImageFetch %v4uint %9109 %9107 Lod %9108
       %9111 = OpCompositeExtract %uint %9110 0
       %9112 = OpBitcast %float %9111
               OpBranch %9061
       %9101 = OpLabel
               OpBranch %9061
       %9061 = OpLabel
       %9113 = OpPhi %float %9112 %9102 %float_0 %9101
       %9114 = OpPhi %bool %true %9102 %false %9101
               OpSelectionMerge %9115 None
               OpBranchConditional %9114 %9116 %9115
       %9116 = OpLabel
       %9117 = OpFNegate %float %8788
       %9118 = OpCompositeExtract %float %9048 2 2
       %9119 = OpFMul %float %9117 %9118
       %9120 = OpFDiv %float %9119 %9056
       %9121 = OpFSub %float %9113 %9120
       %9122 = OpCompositeExtract %float %9059 2
       %9123 = OpFOrdGreaterThan %bool %9121 %9122
       %9124 = OpSelect %float %9123 %float_0 %float_1
               OpBranch %8786
       %9115 = OpLabel
               OpBranch %8929
       %8930 = OpLabel
       %9125 = OpFSub %v3float %579 %8926
       %9126 = OpFSub %v3float %629 %8927
       %9127 = OpVectorTimesScalar %v3float %9125 %float_2097152
       %9128 = OpFAdd %v3float %9127 %9126
       %9129 = OpExtInst %float %1 Length %9128
       %9130 = OpExtInst %float %1 Log2 %9129
       %9131 = OpFAdd %float %9130 %8915
       %9132 = OpExtInst %float %1 Floor %9131
       %9133 = OpConvertFToS %int %9132
       %9134 = OpISub %int %9133 %8920
       %9135 = OpExtInst %int %1 SMax %int_0 %9134
       %9136 = OpSLessThan %bool %9135 %8925
               OpSelectionMerge %9137 None
               OpBranchConditional %9136 %9138 %9137
       %9138 = OpLabel
       %9139 = OpIAdd %int %8781 %9135
       %9140 = OpBitcast %uint %9139
       %9141 = OpIMul %uint %9140 %uint_336
       %9142 = OpIAdd %uint %9141 %uint_96
       %9143 = OpShiftRightLogical %uint %9142 %uint_2
       %9144 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9143
       %9145 = OpLoad %uint %9144
       %9146 = OpIAdd %uint %9143 %uint_1
       %9147 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9146
       %9148 = OpLoad %uint %9147
       %9149 = OpIAdd %uint %9143 %uint_2
       %9150 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9149
       %9151 = OpLoad %uint %9150
       %9152 = OpIAdd %uint %9143 %uint_3
       %9153 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9152
       %9154 = OpLoad %uint %9153
       %9155 = OpCompositeConstruct %v4uint %9145 %9148 %9151 %9154
       %9156 = OpBitcast %v4float %9155
       %9157 = OpIAdd %uint %9141 %uint_112
       %9158 = OpShiftRightLogical %uint %9157 %uint_2
       %9159 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9158
       %9160 = OpIAdd %uint %9158 %uint_1
       %9161 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9160
       %9162 = OpIAdd %uint %9158 %uint_2
       %9163 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9162
       %9164 = OpIAdd %uint %9158 %uint_3
       %9165 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9164
       %9166 = OpIAdd %uint %9141 %uint_128
       %9167 = OpShiftRightLogical %uint %9166 %uint_2
       %9168 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9167
       %9169 = OpLoad %uint %9168
       %9170 = OpIAdd %uint %9167 %uint_1
       %9171 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9170
       %9172 = OpLoad %uint %9171
       %9173 = OpIAdd %uint %9167 %uint_2
       %9174 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9173
       %9175 = OpLoad %uint %9174
       %9176 = OpIAdd %uint %9167 %uint_3
       %9177 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9176
       %9178 = OpLoad %uint %9177
       %9179 = OpCompositeConstruct %v4uint %9169 %9172 %9175 %9178
       %9180 = OpBitcast %v4float %9179
       %9181 = OpCompositeInsert %mat4v4float %9180 %530 0
       %9182 = OpIAdd %uint %9141 %uint_144
       %9183 = OpShiftRightLogical %uint %9182 %uint_2
       %9184 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9183
       %9185 = OpLoad %uint %9184
       %9186 = OpIAdd %uint %9183 %uint_1
       %9187 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9186
       %9188 = OpLoad %uint %9187
       %9189 = OpIAdd %uint %9183 %uint_2
       %9190 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9189
       %9191 = OpLoad %uint %9190
       %9192 = OpIAdd %uint %9183 %uint_3
       %9193 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9192
       %9194 = OpLoad %uint %9193
       %9195 = OpCompositeConstruct %v4uint %9185 %9188 %9191 %9194
       %9196 = OpBitcast %v4float %9195
       %9197 = OpCompositeInsert %mat4v4float %9196 %9181 1
       %9198 = OpIAdd %uint %9141 %uint_160
       %9199 = OpShiftRightLogical %uint %9198 %uint_2
       %9200 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9199
       %9201 = OpLoad %uint %9200
       %9202 = OpIAdd %uint %9199 %uint_1
       %9203 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9202
       %9204 = OpLoad %uint %9203
       %9205 = OpIAdd %uint %9199 %uint_2
       %9206 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9205
       %9207 = OpLoad %uint %9206
       %9208 = OpIAdd %uint %9199 %uint_3
       %9209 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9208
       %9210 = OpLoad %uint %9209
       %9211 = OpCompositeConstruct %v4uint %9201 %9204 %9207 %9210
       %9212 = OpBitcast %v4float %9211
       %9213 = OpCompositeInsert %mat4v4float %9212 %9197 2
       %9214 = OpIAdd %uint %9141 %uint_176
       %9215 = OpShiftRightLogical %uint %9214 %uint_2
       %9216 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9215
       %9217 = OpLoad %uint %9216
       %9218 = OpIAdd %uint %9215 %uint_1
       %9219 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9218
       %9220 = OpLoad %uint %9219
       %9221 = OpIAdd %uint %9215 %uint_2
       %9222 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9221
       %9223 = OpLoad %uint %9222
       %9224 = OpIAdd %uint %9215 %uint_3
       %9225 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9224
       %9226 = OpLoad %uint %9225
       %9227 = OpCompositeConstruct %v4uint %9217 %9220 %9223 %9226
       %9228 = OpBitcast %v4float %9227
       %9229 = OpCompositeInsert %mat4v4float %9228 %9213 3
       %9230 = OpIAdd %uint %9141 %uint_256
       %9231 = OpShiftRightLogical %uint %9230 %uint_2
       %9232 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9231
       %9233 = OpLoad %uint %9232
       %9234 = OpIAdd %uint %9231 %uint_1
       %9235 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9234
       %9236 = OpLoad %uint %9235
       %9237 = OpIAdd %uint %9231 %uint_2
       %9238 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9237
       %9239 = OpLoad %uint %9238
       %9240 = OpCompositeConstruct %v3uint %9233 %9236 %9239
       %9241 = OpBitcast %v3float %9240
       %9242 = OpIAdd %uint %9141 %uint_272
       %9243 = OpShiftRightLogical %uint %9242 %uint_2
       %9244 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9243
       %9245 = OpLoad %uint %9244
       %9246 = OpIAdd %uint %9243 %uint_1
       %9247 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9246
       %9248 = OpLoad %uint %9247
       %9249 = OpIAdd %uint %9243 %uint_2
       %9250 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9249
       %9251 = OpLoad %uint %9250
       %9252 = OpCompositeConstruct %v3uint %9245 %9248 %9251
       %9253 = OpBitcast %v3float %9252
       %9254 = OpFAdd %v3float %579 %9241
       %9255 = OpFAdd %v3float %629 %9253
       %9256 = OpVectorTimesScalar %v3float %9254 %float_2097152
       %9257 = OpFAdd %v3float %9256 %9255
       %9258 = OpCompositeExtract %float %9257 0
       %9259 = OpCompositeExtract %float %9257 1
       %9260 = OpCompositeExtract %float %9257 2
       %9261 = OpCompositeConstruct %v4float %9258 %9259 %9260 %float_1
       %9262 = OpMatrixTimesVector %v4float %9229 %9261
       %9263 = OpVectorShuffle %v2float %9262 %9262 0 1
       %9264 = OpVectorTimesScalar %v2float %9263 %float_128
       %9265 = OpConvertFToU %v2uint %9264
               OpSelectionMerge %9266 None
               OpSwitch %uint_0 %9267
       %9267 = OpLabel
       %9268 = OpBitcast %int %9140
       %9269 = OpBitcast %uint %9268
       %9270 = OpULessThan %bool %9269 %uint_8192
               OpSelectionMerge %9271 None
               OpBranchConditional %9270 %9272 %9271
       %9272 = OpLabel
               OpBranch %9266
       %9271 = OpLabel
       %9273 = OpISub %uint %9140 %uint_8192
       %9274 = OpIMul %uint %9273 %uint_21845
       %9275 = OpIAdd %uint %uint_8192 %9274
       %9276 = OpCompositeExtract %uint %9265 0
       %9277 = OpCompositeExtract %uint %9265 1
       %9278 = OpShiftLeftLogical %uint %9277 %uint_7
       %9279 = OpIAdd %uint %9276 %9278
       %9280 = OpIAdd %uint %9275 %9279
               OpBranch %9266
       %9266 = OpLabel
       %9281 = OpPhi %uint %9140 %9272 %9280 %9271
       %9282 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9281
       %9283 = OpLoad %uint %9282
       %9284 = OpBitwiseAnd %uint %9283 %uint_1023
       %9285 = OpShiftRightLogical %uint %9283 %uint_10
       %9286 = OpBitwiseAnd %uint %9285 %uint_1023
       %9287 = OpCompositeConstruct %v2uint %9284 %9286
       %9288 = OpShiftRightLogical %uint %9283 %uint_20
       %9289 = OpBitwiseAnd %uint %9288 %uint_63
       %9290 = OpBitwiseAnd %uint %9283 %uint_134217728
       %9291 = OpINotEqual %bool %9290 %uint_0
       %9292 = OpIEqual %bool %9289 %uint_0
       %9293 = OpLogicalAnd %bool %9291 %9292
               OpSelectionMerge %9294 None
               OpBranchConditional %9291 %9295 %9294
       %9295 = OpLabel
       %9296 = OpIAdd %uint %9140 %9289
       %9297 = OpBitcast %int %9296
       %9298 = OpVectorTimesScalar %v2float %9263 %float_16384
       %9299 = OpConvertFToU %v2uint %9298
       %9300 = OpUGreaterThan %bool %9289 %uint_0
               OpSelectionMerge %9301 None
               OpBranchConditional %9300 %9302 %9301
       %9302 = OpLabel
       %9303 = OpIAdd %uint %9141 %uint_304
       %9304 = OpShiftRightLogical %uint %9303 %uint_2
       %9305 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9304
       %9306 = OpLoad %uint %9305
       %9307 = OpIAdd %uint %9304 %uint_1
       %9308 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9307
       %9309 = OpLoad %uint %9308
       %9310 = OpCompositeConstruct %v2uint %9306 %9309
       %9311 = OpBitcast %v2int %9310
       %9312 = OpBitcast %uint %9297
       %9313 = OpIMul %uint %9312 %uint_336
       %9314 = OpIAdd %uint %9313 %uint_304
       %9315 = OpShiftRightLogical %uint %9314 %uint_2
       %9316 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9315
       %9317 = OpLoad %uint %9316
       %9318 = OpIAdd %uint %9315 %uint_1
       %9319 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9318
       %9320 = OpLoad %uint %9319
       %9321 = OpCompositeConstruct %v2uint %9317 %9320
       %9322 = OpBitcast %v2int %9321
       %9323 = OpIMul %v2int %364 %9311
       %9324 = OpIMul %v2int %364 %9322
       %9325 = OpBitcast %v2uint %9323
       %9326 = OpISub %v2uint %9265 %9325
       %9327 = OpBitcast %int %9289
       %9328 = OpCompositeConstruct %v2int %9327 %9327
       %9329 = OpBitwiseAnd %v2int %9328 %365
       %9330 = OpShiftLeftLogical %v2int %9324 %9329
       %9331 = OpBitcast %v2uint %9330
       %9332 = OpIAdd %v2uint %9326 %9331
       %9333 = OpCompositeConstruct %v2uint %9289 %9289
       %9334 = OpBitwiseAnd %v2uint %9333 %302
       %9335 = OpShiftRightLogical %v2uint %9332 %9334
       %9336 = OpIMul %v2uint %9335 %334
       %9337 = OpIAdd %v2uint %9336 %335
       %9338 = OpLoad %uint %9159
       %9339 = OpLoad %uint %9161
       %9340 = OpLoad %uint %9163
       %9341 = OpLoad %uint %9165
       %9342 = OpCompositeConstruct %v4uint %9338 %9339 %9340 %9341
       %9343 = OpBitcast %v4float %9342
       %9344 = OpLoad %uint %9305
       %9345 = OpLoad %uint %9308
       %9346 = OpCompositeConstruct %v2uint %9344 %9345
       %9347 = OpBitcast %v2int %9346
       %9348 = OpIAdd %int %9139 %9327
       %9349 = OpBitcast %uint %9348
       %9350 = OpIMul %uint %9349 %uint_336
       %9351 = OpIAdd %uint %9350 %uint_112
       %9352 = OpShiftRightLogical %uint %9351 %uint_2
       %9353 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9352
       %9354 = OpLoad %uint %9353
       %9355 = OpIAdd %uint %9352 %uint_1
       %9356 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9355
       %9357 = OpLoad %uint %9356
       %9358 = OpIAdd %uint %9352 %uint_2
       %9359 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9358
       %9360 = OpLoad %uint %9359
       %9361 = OpIAdd %uint %9352 %uint_3
       %9362 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9361
       %9363 = OpLoad %uint %9362
       %9364 = OpCompositeConstruct %v4uint %9354 %9357 %9360 %9363
       %9365 = OpBitcast %v4float %9364
       %9366 = OpIAdd %uint %9350 %uint_304
       %9367 = OpShiftRightLogical %uint %9366 %uint_2
       %9368 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9367
       %9369 = OpLoad %uint %9368
       %9370 = OpIAdd %uint %9367 %uint_1
       %9371 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9370
       %9372 = OpLoad %uint %9371
       %9373 = OpCompositeConstruct %v2uint %9369 %9372
       %9374 = OpBitcast %v2int %9373
       %9375 = OpConvertSToF %v2float %9347
       %9376 = OpConvertSToF %v2float %9374
       %9377 = OpSGreaterThanEqual %bool %9327 %int_0
       %9378 = OpBitcast %uint %9327
       %9379 = OpBitwiseAnd %uint %9378 %uint_31
       %9380 = OpShiftLeftLogical %uint %uint_1 %9379
       %9381 = OpConvertUToF %float %9380
       %9382 = OpFDiv %float %float_1 %9381
       %9383 = OpSNegate %int %9327
       %9384 = OpBitcast %uint %9383
       %9385 = OpBitwiseAnd %uint %9384 %uint_31
       %9386 = OpShiftLeftLogical %uint %uint_1 %9385
       %9387 = OpConvertUToF %float %9386
       %9388 = OpSelect %float %9377 %9382 %9387
       %9389 = OpVectorTimesScalar %v2float %9375 %9388
       %9390 = OpFSub %v2float %9376 %9389
       %9391 = OpVectorTimesScalar %v2float %9390 %float_0_25
       %9392 = OpCompositeExtract %float %9343 2
       %9393 = OpCompositeExtract %float %9365 2
       %9394 = OpFNegate %float %9388
       %9395 = OpExtInst %float %1 Fma %9394 %9392 %9393
       %9396 = OpVectorTimesScalar %v2float %9263 %9388
       %9397 = OpVectorShuffle %v2float %9391 %452 0 1
       %9398 = OpFAdd %v2float %9396 %9397
       %9399 = OpVectorTimesScalar %v2float %9398 %float_16384
       %9400 = OpConvertFToU %v2uint %9399
       %9401 = OpExtInst %v2uint %1 UClamp %9400 %9336 %9337
               OpSelectionMerge %9402 None
               OpSwitch %uint_0 %9403
       %9403 = OpLabel
       %9404 = OpBitcast %int %9312
       %9405 = OpBitcast %uint %9404
       %9406 = OpULessThan %bool %9405 %uint_8192
               OpSelectionMerge %9407 None
               OpBranchConditional %9406 %9408 %9407
       %9408 = OpLabel
               OpBranch %9402
       %9407 = OpLabel
       %9409 = OpISub %uint %9312 %uint_8192
       %9410 = OpIMul %uint %9409 %uint_21845
       %9411 = OpIAdd %uint %uint_8192 %9410
       %9412 = OpCompositeExtract %uint %9335 0
       %9413 = OpCompositeExtract %uint %9335 1
       %9414 = OpShiftLeftLogical %uint %9413 %uint_7
       %9415 = OpIAdd %uint %9412 %9414
       %9416 = OpIAdd %uint %9411 %9415
               OpBranch %9402
       %9402 = OpLabel
       %9417 = OpPhi %uint %9312 %9408 %9416 %9407
       %9418 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9417
       %9419 = OpLoad %uint %9418
       %9420 = OpBitwiseAnd %uint %9419 %uint_1023
       %9421 = OpShiftRightLogical %uint %9419 %uint_10
       %9422 = OpBitwiseAnd %uint %9421 %uint_1023
       %9423 = OpCompositeConstruct %v2uint %9420 %9422
       %9424 = OpShiftRightLogical %uint %9419 %uint_20
       %9425 = OpBitwiseAnd %uint %9424 %uint_63
       %9426 = OpBitwiseAnd %uint %9419 %uint_134217728
       %9427 = OpINotEqual %bool %9426 %uint_0
       %9428 = OpIEqual %bool %9425 %uint_0
       %9429 = OpLogicalAnd %bool %9427 %9428
               OpBranch %9301
       %9301 = OpLabel
       %9430 = OpPhi %float %float_1 %9295 %9388 %9402
       %9431 = OpPhi %float %float_0 %9295 %9395 %9402
       %9432 = OpPhi %v2uint %9299 %9295 %9401 %9402
       %9433 = OpPhi %v2uint %9287 %9295 %9423 %9402
       %9434 = OpPhi %bool %9293 %9295 %9429 %9402
               OpSelectionMerge %9435 None
               OpBranchConditional %9434 %9436 %9435
       %9436 = OpLabel
       %9437 = OpIMul %v2uint %9433 %334
       %9438 = OpBitwiseAnd %v2uint %9432 %335
       %9439 = OpIAdd %v2uint %9437 %9438
       %9440 = OpCompositeExtract %uint %9439 0
       %9441 = OpCompositeExtract %uint %9439 1
       %9442 = OpCompositeConstruct %v4uint %9440 %9441 %uint_0 %uint_0
       %9443 = OpBitcast %v4int %9442
       %9444 = OpVectorShuffle %v3int %9443 %9443 0 1 2
       %9445 = OpCompositeExtract %int %9443 3
       %9446 = OpLoad %type_2d_image_array_0 %VirtualShadowMap_PhysicalPagePool
       %9447 = OpImageFetch %v4uint %9446 %9444 Lod %9445
       %9448 = OpCompositeExtract %uint %9447 0
       %9449 = OpBitcast %float %9448
       %9450 = OpFSub %float %9449 %9431
       %9451 = OpFDiv %float %9450 %9430
               OpBranch %9435
       %9435 = OpLabel
       %9452 = OpPhi %float %float_0 %9301 %9451 %9436
       %9453 = OpSelect %bool %9434 %true %false
               OpBranch %9294
       %9294 = OpLabel
       %9454 = OpPhi %float %float_0 %9266 %9452 %9435
       %9455 = OpPhi %bool %false %9266 %9453 %9435
               OpSelectionMerge %9456 None
               OpBranchConditional %9455 %9457 %9456
       %9457 = OpLabel
       %9458 = OpCompositeExtract %float %9156 2
       %9459 = OpExtInst %float %1 Fma %8788 %9458 %9454
       %9460 = OpCompositeExtract %float %9262 2
       %9461 = OpFOrdGreaterThan %bool %9459 %9460
       %9462 = OpSelect %float %9461 %float_0 %float_1
               OpBranch %8786
       %9456 = OpLabel
               OpBranch %9137
       %9137 = OpLabel
               OpBranch %8929
       %8929 = OpLabel
               OpBranch %8786
       %8786 = OpLabel
       %9463 = OpPhi %float %9124 %9116 %9462 %9457 %float_1 %8929
       %9464 = OpFMul %float %8778 %9463
               OpBranch %8784
       %8784 = OpLabel
       %9465 = OpPhi %float %8778 %8703 %9464 %8786
       %9466 = OpDot %float %8698 %115
       %9467 = OpDot %float %8699 %8698
       %9468 = OpExtInst %float %1 FMix %float_1 %9467 %9466
       %9469 = OpCompositeExtract %float %8676 0
       %9470 = OpCompositeExtract %float %8676 1
       %9471 = OpExtInst %float %1 Fma %632 %9469 %9470
       %9472 = OpExtInst %float %1 FClamp %9471 %float_0 %float_1
       %9473 = OpFMul %float %9472 %9472
       %9474 = OpExtInst %float %1 FMix %9465 %9468 %9473
       %9475 = OpExtInst %float %1 NMin %9474 %float_1
       %9476 = OpFAdd %float %9474 %9475
       %9477 = OpFOrdGreaterThan %bool %9476 %float_0
               OpSelectionMerge %9478 DontFlatten
               OpBranchConditional %9477 %9479 %9478
       %9479 = OpLabel
       %9480 = OpExtInst %float %1 NMax %8411 %8409
       %9481 = OpDot %float %8680 %8680
       %9482 = OpFAdd %float %9481 %float_1
       %9483 = OpFDiv %float %float_1 %9482
       %9484 = OpExtInst %float %1 InverseSqrt %9481
       %9485 = OpVectorTimesScalar %v3float %8680 %9484
       %9486 = OpDot %float %8434 %9485
       %9487 = OpFOrdGreaterThan %bool %8682 %float_0
               OpSelectionMerge %9488 None
               OpBranchConditional %9487 %9489 %9488
       %9489 = OpLabel
       %9490 = OpFMul %float %8682 %8682
       %9491 = OpFMul %float %9490 %9483
       %9492 = OpExtInst %float %1 FClamp %9491 %float_0 %float_1
       %9493 = OpExtInst %float %1 Sqrt %9492
       %9494 = OpFOrdLessThan %bool %9486 %9493
               OpSelectionMerge %9495 None
               OpBranchConditional %9494 %9496 %9495
       %9496 = OpLabel
       %9497 = OpFNegate %float %9493
       %9498 = OpExtInst %float %1 NMax %9486 %9497
       %9499 = OpFAdd %float %9493 %9498
       %9500 = OpFMul %float %9499 %9499
       %9501 = OpFMul %float %float_4 %9493
       %9502 = OpFDiv %float %9500 %9501
               OpBranch %9495
       %9495 = OpLabel
       %9503 = OpPhi %float %9486 %9489 %9502 %9496
               OpBranch %9488
       %9488 = OpLabel
       %9504 = OpPhi %float %9486 %9479 %9503 %9495
       %9505 = OpExtInst %float %1 FClamp %9504 %float_0 %float_1
       %9506 = OpExtInst %float %1 NMax %9480 %8409
       %9507 = OpFMul %float %8682 %9484
       %9508 = OpFNegate %float %9506
       %9509 = OpExtInst %float %1 Fma %9508 %9506 %float_1
       %9510 = OpFMul %float %9507 %9509
       %9511 = OpExtInst %float %1 FClamp %9510 %float_0 %float_1
       %9512 = OpExtInst %float %1 NMax %453 %8682
       %9513 = OpFNegate %float %9512
       %9514 = OpExtInst %float %1 Fma %9513 %float_0_0500000007 %float_1
       %9515 = OpExtInst %float %1 FClamp %9514 %float_0 %float_1
       %9516 = OpBitcast %uint %9515
       %9517 = OpShiftLeftLogical %uint %9516 %uint_1
       %9518 = OpBitwiseOr %uint %uint_0 %9517
       %9519 = OpDot %float %8434 %646
       %9520 = OpDot %float %646 %9485
       %9521 = OpExtInst %float %1 Fma %float_2 %9520 %float_2
       %9522 = OpExtInst %float %1 InverseSqrt %9521
       %9523 = OpFAdd %float %9486 %9519
       %9524 = OpFMul %float %9523 %9522
       %9525 = OpExtInst %float %1 FClamp %9524 %float_0 %float_1
       %9526 = OpExtInst %float %1 Fma %9522 %9520 %9522
       %9527 = OpExtInst %float %1 FClamp %9526 %float_0 %float_1
       %9528 = OpFOrdGreaterThan %bool %9511 %float_0
               OpSelectionMerge %9529 None
               OpBranchConditional %9528 %9530 %9529
       %9530 = OpLabel
       %9531 = OpFNegate %float %9511
       %9532 = OpExtInst %float %1 Fma %9531 %9511 %float_1
       %9533 = OpExtInst %float %1 Sqrt %9532
       %9534 = OpFMul %float %float_2 %9486
       %9535 = OpFNegate %float %9520
       %9536 = OpExtInst %float %1 Fma %9534 %9519 %9535
       %9537 = OpFOrdGreaterThanEqual %bool %9536 %9533
               OpSelectionMerge %9538 None
               OpBranchConditional %9537 %9539 %9540
       %9540 = OpLabel
       %9541 = OpFNegate %float %9536
       %9542 = OpExtInst %float %1 Fma %9541 %9536 %float_1
       %9543 = OpExtInst %float %1 InverseSqrt %9542
       %9544 = OpFMul %float %9511 %9543
       %9545 = OpExtInst %float %1 Fma %9541 %9486 %9519
       %9546 = OpFMul %float %9544 %9545
       %9547 = OpFMul %float %float_2 %9519
       %9548 = OpExtInst %float %1 Fma %9547 %9519 %float_n1
       %9549 = OpExtInst %float %1 Fma %9541 %9520 %9548
       %9550 = OpFMul %float %9544 %9549
       %9551 = OpFNegate %float %9486
       %9552 = OpExtInst %float %1 Fma %9551 %9486 %float_1
       %9553 = OpFNegate %float %9519
       %9554 = OpExtInst %float %1 Fma %9553 %9519 %9552
       %9555 = OpExtInst %float %1 Fma %9535 %9520 %9554
       %9556 = OpFMul %float %9534 %9519
       %9557 = OpExtInst %float %1 Fma %9556 %9520 %9555
       %9558 = OpExtInst %float %1 FClamp %9557 %float_0 %float_1
       %9559 = OpExtInst %float %1 Sqrt %9558
       %9560 = OpFMul %float %9544 %9559
       %9561 = OpFMul %float %9560 %float_2
       %9562 = OpFMul %float %9561 %9519
       %9563 = OpExtInst %float %1 Fma %9486 %9533 %9519
       %9564 = OpExtInst %float %1 Fma %9544 %9545 %9563
       %9565 = OpExtInst %float %1 Fma %9520 %9533 %float_1
       %9566 = OpExtInst %float %1 Fma %9544 %9549 %9565
       %9567 = OpFMul %float %9560 %9566
       %9568 = OpFMul %float %9564 %9566
       %9569 = OpFMul %float %9562 %9564
       %9570 = OpFMul %float %float_0_25 %9562
       %9571 = OpFMul %float %9570 %9564
       %9572 = OpExtInst %float %1 Fma %float_n0_5 %9567 %9571
       %9573 = OpFMul %float %9568 %9572
       %9574 = OpFMul %float %9567 %float_n2
       %9575 = OpExtInst %float %1 Fma %9562 %9564 %9574
       %9576 = OpFMul %float %9569 %9575
       %9577 = OpExtInst %float %1 Fma %9567 %9567 %9576
       %9578 = OpFMul %float %9566 %9566
       %9579 = OpExtInst %float %1 Fma %9520 %9533 %9566
       %9580 = OpExtInst %float %1 Fma %float_n0_5 %9579 %float_n0_5
       %9581 = OpFMul %float %9568 %9580
       %9582 = OpExtInst %float %1 Fma %9563 %9578 %9581
       %9583 = OpExtInst %float %1 Fma %9564 %9582 %9577
       %9584 = OpFMul %float %float_2 %9573
       %9585 = OpFMul %float %9573 %9573
       %9586 = OpExtInst %float %1 Fma %9583 %9583 %9585
       %9587 = OpFDiv %float %9584 %9586
       %9588 = OpFMul %float %9587 %9583
       %9589 = OpFNegate %float %9587
       %9590 = OpExtInst %float %1 Fma %9589 %9573 %float_1
       %9591 = OpFMul %float %9588 %9560
       %9592 = OpExtInst %float %1 Fma %9590 %9546 %9591
       %9593 = OpFMul %float %9588 %9562
       %9594 = OpExtInst %float %1 Fma %9590 %9550 %9593
       %9595 = OpExtInst %float %1 Fma %9486 %9533 %9592
       %9596 = OpExtInst %float %1 Fma %9520 %9533 %9594
       %9597 = OpExtInst %float %1 Fma %float_2 %9596 %float_2
       %9598 = OpExtInst %float %1 InverseSqrt %9597
       %9599 = OpFAdd %float %9595 %9519
       %9600 = OpFMul %float %9599 %9598
       %9601 = OpExtInst %float %1 FClamp %9600 %float_0 %float_1
       %9602 = OpExtInst %float %1 Fma %9598 %9596 %9598
       %9603 = OpExtInst %float %1 FClamp %9602 %float_0 %float_1
               OpBranch %9538
       %9539 = OpLabel
       %9604 = OpExtInst %float %1 FAbs %9519
               OpBranch %9538
       %9538 = OpLabel
       %9605 = OpPhi %float %9601 %9540 %float_1 %9539
       %9606 = OpPhi %float %9603 %9540 %9604 %9539
               OpBranch %9529
       %9529 = OpLabel
       %9607 = OpPhi %float %9525 %9488 %9605 %9538
       %9608 = OpPhi %float %9527 %9488 %9606 %9538
       %9609 = OpExtInst %float %1 FAbs %9519
       %9610 = OpFAdd %float %9609 %float_9_99999975en06
       %9611 = OpExtInst %float %1 FClamp %9610 %float_0 %float_1
       %9612 = OpFMul %float %9480 %9480
       %9613 = OpFMul %float %9612 %9612
       %9614 = OpShiftRightLogical %uint %9518 %uint_1
       %9615 = OpBitcast %float %9614
       %9616 = OpExtInst %float %1 FClamp %9519 %float_0 %float_1
       %9617 = OpExtInst %float %1 FClamp %9505 %float_0 %float_1
       %9618 = OpExtInst %float %1 FClamp %9527 %float_0 %float_1
       %9619 = OpExtInst %float %1 FClamp %9525 %float_0 %float_1
       %9620 = OpBitcast %int %9613
       %9621 = OpISub %int %int_2129859010 %9620
       %9622 = OpBitcast %float %9621
       %9623 = OpExtInst %float %1 Fma %float_2 %9622 %float_n1
       %9624 = OpExtInst %float %1 Log2 %9623
       %9625 = OpFMul %float %float_0_055555556 %9624
       %9626 = OpExtInst %float %1 FClamp %9625 %float_0 %float_1
       %9627 = OpFSub %float %float_1 %9618
       %9628 = OpFMul %float %9627 %9627
       %9629 = OpFMul %float %9628 %9628
       %9630 = OpExtInst %float %1 Fma %9629 %9627 %9618
       %9631 = OpFSub %float %float_1 %9616
       %9632 = OpFMul %float %9631 %9631
       %9633 = OpFMul %float %9632 %9632
       %9634 = OpFMul %float %9633 %9631
       %9635 = OpExtInst %float %1 Fma %float_n0_75 %9634 %float_1
       %9636 = OpFSub %float %float_1 %9617
       %9637 = OpFMul %float %9636 %9636
       %9638 = OpFMul %float %9637 %9637
       %9639 = OpFMul %float %9638 %9636
       %9640 = OpExtInst %float %1 Fma %float_n0_75 %9639 %float_1
       %9641 = OpFMul %float %9635 %9640
       %9642 = OpExtInst %float %1 Fma %float_2_20000005 %9626 %float_n0_5
       %9643 = OpExtInst %float %1 FClamp %9642 %float_0 %float_1
       %9644 = OpExtInst %float %1 FMix %9630 %9641 %9643
       %9645 = OpExtInst %float %1 Fma %float_34_5 %9626 %float_n59
       %9646 = OpExtInst %float %1 Fma %9645 %9626 %float_24_5
       %9647 = OpFMul %float %9646 %9618
       %9648 = OpExtInst %float %1 Fma %float_73_1999969 %9626 %float_n21_2000008
       %9649 = OpExtInst %float %1 NMax %9648 %float_8_89999962
       %9650 = OpFNegate %float %9649
       %9651 = OpBitcast %int %9619
       %9652 = OpShiftRightArithmetic %int %9651 %int_1
       %9653 = OpIAdd %int %int_532487669 %9652
       %9654 = OpBitcast %float %9653
       %9655 = OpFMul %float %9650 %9654
       %9656 = OpExtInst %float %1 Exp2 %9655
       %9657 = OpFMul %float %9647 %9656
       %9658 = OpExtInst %float %1 Fma %9657 %9615 %9644
       %9659 = OpFMul %float %float_0_318309873 %9658
       %9660 = OpVectorTimesScalar %v3float %8595 %9659
       %9661 = OpVectorTimesScalar %v3float %125 %9505
       %9662 = OpFMul %v3float %9660 %9661
       %9663 = OpBitwiseAnd %uint %9518 %uint_1
       %9664 = OpIEqual %bool %9663 %uint_1
               OpSelectionMerge %9665 None
               OpBranchConditional %9664 %9666 %9667
       %9667 = OpLabel
               OpSelectionMerge %9668 None
               OpBranchConditional %9528 %9669 %9668
       %9669 = OpLabel
       %9670 = OpFMul %float %float_0_25 %9511
       %9671 = OpShiftRightArithmetic %int %9620 %int_1
       %9672 = OpIAdd %int %int_532487669 %9671
       %9673 = OpBitcast %float %9672
       %9674 = OpExtInst %float %1 Fma %float_3 %9673 %9511
       %9675 = OpFMul %float %9670 %9674
       %9676 = OpFAdd %float %9608 %float_0_00100000005
       %9677 = OpFDiv %float %9675 %9676
       %9678 = OpExtInst %float %1 Fma %9612 %9612 %9677
       %9679 = OpFDiv %float %9613 %9678
               OpBranch %9668
       %9668 = OpLabel
       %9680 = OpPhi %float %float_1 %9667 %9679 %9669
       %9681 = OpFNegate %float %9607
       %9682 = OpExtInst %float %1 Fma %9607 %9613 %9681
       %9683 = OpExtInst %float %1 Fma %9682 %9607 %float_1
       %9684 = OpFMul %float %float_3_14159274 %9683
       %9685 = OpFMul %float %9684 %9683
       %9686 = OpFDiv %float %9613 %9685
       %9687 = OpFMul %float %9686 %9680
       %9688 = OpExtInst %float %1 Sqrt %9613
       %9689 = OpFSub %float %float_1 %9688
       %9690 = OpExtInst %float %1 Fma %9611 %9689 %9688
       %9691 = OpExtInst %float %1 Fma %9505 %9689 %9688
       %9692 = OpFMul %float %9611 %9691
       %9693 = OpExtInst %float %1 Fma %9505 %9690 %9692
       %9694 = OpFDiv %float %float_0_5 %9693
       %9695 = OpFSub %float %float_1 %9608
       %9696 = OpFMul %float %9695 %9695
       %9697 = OpFMul %float %9696 %9696
       %9698 = OpFMul %float %9697 %9695
       %9699 = OpCompositeExtract %float %8530 1
       %9700 = OpFMul %float %float_50 %9699
       %9701 = OpExtInst %float %1 FClamp %9700 %float_0 %float_1
       %9702 = OpFMul %float %9701 %9698
       %9703 = OpCompositeConstruct %v3float %9702 %9702 %9702
       %9704 = OpFNegate %float %9697
       %9705 = OpExtInst %float %1 Fma %9704 %9695 %float_1
       %9706 = OpVectorTimesScalar %v3float %8530 %9705
       %9707 = OpFAdd %v3float %9703 %9706
       %9708 = OpFMul %float %9687 %9694
       %9709 = OpVectorTimesScalar %v3float %9707 %9708
       %9710 = OpFMul %v3float %9661 %9709
               OpBranch %9665
       %9666 = OpLabel
               OpBranch %9665
       %9665 = OpLabel
       %9711 = OpPhi %v3float %9710 %9668 %100 %9666
       %9712 = OpCompositeExtract %float %8530 1
       %9713 = OpFMul %float %float_50 %9712
       %9714 = OpExtInst %float %1 FClamp %9713 %float_0 %float_1
       %9715 = OpCompositeConstruct %v3float %9714 %9714 %9714
       %9716 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
       %9717 = OpLoad %type_sampler %View_ShadingEnergySampler
       %9718 = OpCompositeConstruct %v2float %9611 %9480
       %9719 = OpSampledImage %type_sampled_image %9716 %9717
       %9720 = OpImageSampleExplicitLod %v4float %9719 %9718 Lod %float_0
       %9721 = OpAccessChain %_ptr_Uniform_uint %View %uint_39
       %9722 = OpLoad %uint %9721
       %9723 = OpINotEqual %bool %9722 %uint_0
       %9724 = OpCompositeConstruct %v3bool %9723 %9723 %9723
       %9725 = OpCompositeExtract %float %9720 0
       %9726 = OpFSub %float %float_1 %9725
       %9727 = OpFDiv %float %9726 %9725
       %9728 = OpVectorTimesScalar %v3float %8530 %9727
       %9729 = OpFAdd %v3float %125 %9728
       %9730 = OpSelect %v3float %9724 %9729 %125
       %9731 = OpVectorTimesScalar %v3float %8530 %9725
       %9732 = OpFSub %v3float %9715 %8530
       %9733 = OpCompositeExtract %float %9720 1
       %9734 = OpVectorTimesScalar %v3float %9732 %9733
       %9735 = OpFAdd %v3float %9731 %9734
       %9736 = OpFMul %v3float %9730 %9735
       %9737 = OpAccessChain %_ptr_Uniform_uint %View %uint_40
       %9738 = OpLoad %uint %9737
       %9739 = OpINotEqual %bool %9738 %uint_0
       %9740 = OpDot %float %9736 %169
       %9741 = OpFSub %float %float_1 %9740
       %9742 = OpSelect %float %9739 %9741 %float_1
       %9743 = OpVectorTimesScalar %v3float %9662 %9742
       %9744 = OpFMul %v3float %9711 %9730
       %9745 = OpVectorTimesScalar %v3float %9744 %float_1
       %9746 = OpVectorTimesScalar %v3float %8678 %9474
       %9747 = OpFMul %v3float %9745 %9746
       %9748 = OpExtInst %v3float %1 Fma %9743 %9746 %100
               OpBranch %9478
       %9478 = OpLabel
       %9749 = OpPhi %v3float %452 %8784 %9748 %9665
       %9750 = OpPhi %v3float %452 %8784 %9747 %9665
       %9751 = OpCompositeExtract %float %9749 0
       %9752 = OpCompositeExtract %float %9749 1
       %9753 = OpCompositeExtract %float %9749 2
       %9754 = OpCompositeConstruct %v4float %9751 %9752 %9753 %float_0
       %9755 = OpCompositeExtract %float %9750 0
       %9756 = OpCompositeExtract %float %9750 1
       %9757 = OpCompositeExtract %float %9750 2
       %9758 = OpCompositeConstruct %v4float %9755 %9756 %9757 %float_0
       %9759 = OpBitwiseAnd %uint %8697 %8670
       %9760 = OpINotEqual %bool %9759 %uint_0
               OpSelectionMerge %9761 Flatten
               OpBranchConditional %9760 %9762 %9761
       %9762 = OpLabel
       %9763 = OpVectorShuffle %v4float %9754 %9754 4 5 6 3
       %9764 = OpVectorShuffle %v4float %9758 %9758 4 5 6 3
               OpSelectionMerge %9765 None
               OpBranchConditional %8639 %9766 %9767
       %9767 = OpLabel
               OpBranch %9765
       %9766 = OpLabel
       %9768 = OpVectorShuffle %v3float %9754 %451 0 1 2
       %9769 = OpVectorShuffle %v3float %9758 %451 0 1 2
       %9770 = OpFAdd %v3float %9768 %9769
               OpBranch %9765
       %9765 = OpLabel
       %9771 = OpPhi %v3float %100 %9767 %9770 %9766
       %9772 = OpCompositeConstruct %v4bool %8639 %8639 %8639 %8639
       %9773 = OpSelect %v4float %9772 %96 %9763
       %9774 = OpSelect %v4float %9772 %96 %9764
               OpBranch %9761
       %9761 = OpLabel
       %9775 = OpPhi %v3float %100 %9478 %9771 %9765
       %9776 = OpPhi %v4float %96 %9478 %9773 %9765
       %9777 = OpPhi %v4float %96 %9478 %9774 %9765
               OpBranch %8684
       %8684 = OpLabel
       %9778 = OpPhi %v4float %8486 %8645 %8699 %9761
       %9779 = OpPhi %v3float %100 %8645 %9775 %9761
       %9780 = OpPhi %float %float_1 %8645 %9474 %9761
       %9781 = OpPhi %v4float %96 %8645 %9776 %9761
       %9782 = OpPhi %v4float %96 %8645 %9777 %9761
       %9783 = OpIMul %uint %8632 %uint_2
       %9784 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid %int_0 %9783
       %9785 = OpLoad %uint %9784
       %9786 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %int_0
       %9787 = OpLoad %uint %9786
       %9788 = OpExtInst %uint %1 UMin %9785 %9787
       %9789 = OpIAdd %uint %9783 %uint_1
       %9790 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid %int_0 %9789
       %9791 = OpLoad %uint %9790
       %9792 = OpExtInst %uint %1 UMin %9788 %9787
               OpBranch %9793
       %9793 = OpLabel
       %9794 = OpPhi %v4float %9781 %8684 %9795 %9796
       %9797 = OpPhi %v4float %9782 %8684 %9798 %9796
       %9799 = OpPhi %uint %uint_0 %8684 %9800 %9796
       %9801 = OpULessThan %bool %9799 %9792
               OpLoopMerge %9802 %9796 DontUnroll
               OpBranchConditional %9801 %9803 %9802
       %9803 = OpLabel
       %9804 = OpIAdd %uint %9791 %9799
       %9805 = OpLoad %type_buffer_image %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit
       %9806 = OpImageFetch %v4uint %9805 %9804 None
       %9807 = OpCompositeExtract %uint %9806 0
       %9808 = OpIMul %uint %9807 %uint_6
       %9809 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9808
       %9810 = OpLoad %v4float %9809
       %9811 = OpIAdd %uint %9808 %uint_1
       %9812 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9811
       %9813 = OpLoad %v4float %9812
       %9814 = OpIAdd %uint %9808 %uint_2
       %9815 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9814
       %9816 = OpLoad %v4float %9815
       %9817 = OpIAdd %uint %9808 %uint_3
       %9818 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9817
       %9819 = OpLoad %v4float %9818
       %9820 = OpIAdd %uint %9808 %uint_4
       %9821 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9820
       %9822 = OpLoad %v4float %9821
       %9823 = OpCompositeExtract %float %9816 3
       %9824 = OpBitcast %uint %9823
       %9825 = OpShiftRightLogical %uint %9824 %uint_16
       %9826 = OpBitwiseAnd %uint %9825 %uint_3
       %9827 = OpVectorShuffle %v3float %9810 %9810 0 1 2
       %9828 = OpCompositeExtract %float %9810 3
       %9829 = OpCompositeExtract %float %9813 1
       %9830 = OpBitcast %uint %9829
       %9831 = OpShiftRightLogical %uint %9830 %uint_0
       %9832 = OpBitwiseAnd %uint %9831 %uint_1023
       %9833 = OpConvertUToF %float %9832
       %9834 = OpShiftRightLogical %uint %9830 %uint_10
       %9835 = OpBitwiseAnd %uint %9834 %uint_1023
       %9836 = OpConvertUToF %float %9835
       %9837 = OpShiftRightLogical %uint %9830 %uint_20
       %9838 = OpBitwiseAnd %uint %9837 %uint_1023
       %9839 = OpConvertUToF %float %9838
       %9840 = OpCompositeConstruct %v3float %9833 %9836 %9839
       %9841 = OpCompositeExtract %float %9813 0
       %9842 = OpVectorTimesScalar %v3float %9840 %9841
       %9843 = OpCompositeExtract %float %9813 3
       %9844 = OpVectorShuffle %v3float %9816 %9816 0 1 2
       %9845 = OpCompositeExtract %float %9819 2
       %9846 = OpBitcast %uint %9845
       %9847 = OpBitwiseAnd %uint %9846 %uint_65535
       %9848 = OpExtInst %v2float %1 UnpackHalf2x16 %9847
       %9849 = OpCompositeExtract %float %9848 0
       %9850 = OpCompositeExtract %float %9819 3
       %9851 = OpBitcast %uint %9850
       %9852 = OpExtInst %v2float %1 UnpackHalf2x16 %9851
       %9853 = OpCompositeExtract %float %9852 0
       %9854 = OpVectorShuffle %v3float %9822 %9822 0 1 2
       %9855 = OpShiftRightLogical %uint %9846 %uint_16
       %9856 = OpExtInst %v2float %1 UnpackHalf2x16 %9855
       %9857 = OpCompositeExtract %float %9856 0
       %9858 = OpFOrdEqual %bool %9843 %float_0
       %9859 = OpCompositeExtract %float %9822 3
       %9860 = OpBitcast %uint %9859
       %9861 = OpBitwiseAnd %uint %9860 %uint_65535
       %9862 = OpExtInst %v2float %1 UnpackHalf2x16 %9861
       %9863 = OpCompositeExtract %float %9862 0
       %9864 = OpIEqual %bool %9826 %uint_2
       %9865 = OpBitwiseAnd %uint %9824 %uint_255
       %9866 = OpINotEqual %bool %9865 %uint_0
       %9867 = OpSelect %uint %9866 %uint_1 %uint_0
       %9868 = OpBitwiseAnd %uint %9824 %uint_1
       %9869 = OpConvertUToF %float %9868
       %9870 = OpBitwiseAnd %uint %9824 %uint_2
       %9871 = OpShiftRightLogical %uint %9870 %uint_1
       %9872 = OpConvertUToF %float %9871
       %9873 = OpBitwiseAnd %uint %9824 %uint_4
       %9874 = OpShiftRightLogical %uint %9873 %uint_2
       %9875 = OpConvertUToF %float %9874
       %9876 = OpBitwiseAnd %uint %9824 %uint_8
       %9877 = OpShiftRightLogical %uint %9876 %uint_3
       %9878 = OpConvertUToF %float %9877
       %9879 = OpCompositeConstruct %v4float %9869 %9872 %9875 %9878
       %9880 = OpShiftRightLogical %uint %9824 %uint_4
       %9881 = OpBitwiseAnd %uint %9880 %uint_1
       %9882 = OpConvertUToF %float %9881
       %9883 = OpBitwiseAnd %uint %9880 %uint_2
       %9884 = OpShiftRightLogical %uint %9883 %uint_1
       %9885 = OpConvertUToF %float %9884
       %9886 = OpBitwiseAnd %uint %9880 %uint_4
       %9887 = OpShiftRightLogical %uint %9886 %uint_2
       %9888 = OpConvertUToF %float %9887
       %9889 = OpBitwiseAnd %uint %9880 %uint_8
       %9890 = OpShiftRightLogical %uint %9889 %uint_3
       %9891 = OpConvertUToF %float %9890
       %9892 = OpCompositeConstruct %v4float %9882 %9885 %9888 %9891
       %9893 = OpShiftRightLogical %uint %9824 %uint_8
       %9894 = OpBitwiseAnd %uint %9893 %uint_7
       %9895 = OpDot %float %9892 %8654
       %9896 = OpFSub %v3float %9827 %628
       %9897 = OpDot %float %9896 %9896
       %9898 = OpExtInst %float %1 InverseSqrt %9897
       %9899 = OpVectorTimesScalar %v3float %9896 %9898
               OpSelectionMerge %9900 None
               OpBranchConditional %9858 %9901 %9902
       %9902 = OpLabel
       %9903 = OpVectorTimesScalar %v3float %9896 %9828
       %9904 = OpDot %float %9903 %9903
       %9905 = OpExtInst %float %1 FClamp %9904 %float_0 %float_1
       %9906 = OpFSub %float %float_1 %9905
       %9907 = OpExtInst %float %1 Pow %9906 %9843
               OpBranch %9900
       %9901 = OpLabel
       %9908 = OpFMul %float %9828 %9828
       %9909 = OpFMul %float %9897 %9908
       %9910 = OpFNegate %float %9909
       %9911 = OpExtInst %float %1 Fma %9910 %9909 %float_1
       %9912 = OpExtInst %float %1 FClamp %9911 %float_0 %float_1
       %9913 = OpFMul %float %9912 %9912
               OpBranch %9900
       %9900 = OpLabel
       %9914 = OpPhi %float %9907 %9902 %9913 %9901
               OpSelectionMerge %9915 None
               OpBranchConditional %9864 %9916 %9915
       %9916 = OpLabel
       %9917 = OpDot %float %9899 %9844
       %9918 = OpCompositeExtract %float %9819 0
       %9919 = OpFSub %float %9917 %9918
       %9920 = OpCompositeExtract %float %9819 1
       %9921 = OpFMul %float %9919 %9920
       %9922 = OpExtInst %float %1 FClamp %9921 %float_0 %float_1
       %9923 = OpFMul %float %9922 %9922
       %9924 = OpFMul %float %9914 %9923
               OpBranch %9915
       %9915 = OpLabel
       %9925 = OpPhi %float %9914 %9900 %9924 %9916
       %9926 = OpVectorTimesScalar %v3float %9842 %9925
       %9927 = OpFOrdGreaterThan %bool %9925 %float_0
               OpSelectionMerge %9928 DontFlatten
               OpBranchConditional %9927 %9929 %9928
       %9929 = OpLabel
       %9930 = OpINotEqual %bool %9867 %uint_0
               OpSelectionMerge %9931 DontFlatten
               OpBranchConditional %9930 %9932 %9931
       %9932 = OpLabel
       %9933 = OpDot %float %9879 %115
       %9934 = OpDot %float %9778 %9879
       %9935 = OpExtInst %float %1 FMix %float_1 %9934 %9933
       %9936 = OpFMul %float %9895 %9935
               OpBranch %9931
       %9931 = OpLabel
       %9937 = OpPhi %float %float_1 %9929 %9936 %9932
       %9938 = OpFAdd %float %9937 %9937
       %9939 = OpFOrdGreaterThan %bool %9938 %float_0
               OpSelectionMerge %9940 DontFlatten
               OpBranchConditional %9939 %9941 %9940
       %9941 = OpLabel
       %9942 = OpFMul %float %float_0_5 %9853
       %9943 = OpVectorTimesScalar %v3float %9854 %9942
       %9944 = OpFSub %v3float %9896 %9943
       %9945 = OpFAdd %v3float %9896 %9943
       %9946 = OpExtInst %float %1 NMax %8411 %8409
       %9947 = OpFOrdGreaterThan %bool %9853 %float_0
               OpSelectionMerge %9948 DontFlatten
               OpBranchConditional %9947 %9949 %9950
       %9950 = OpLabel
       %9951 = OpDot %float %9944 %9944
       %9952 = OpFAdd %float %9951 %float_1
       %9953 = OpFDiv %float %float_1 %9952
       %9954 = OpExtInst %float %1 InverseSqrt %9951
       %9955 = OpVectorTimesScalar %v3float %9944 %9954
       %9956 = OpDot %float %8434 %9955
               OpBranch %9948
       %9949 = OpLabel
       %9957 = OpDot %float %9944 %9944
       %9958 = OpDot %float %9945 %9945
       %9959 = OpExtInst %float %1 InverseSqrt %9957
       %9960 = OpExtInst %float %1 InverseSqrt %9958
       %9961 = OpFMul %float %9959 %9960
       %9962 = OpDot %float %9944 %9945
       %9963 = OpFMul %float %9962 %9961
       %9964 = OpExtInst %float %1 Fma %9963 %float_0_5 %float_0_5
       %9965 = OpExtInst %float %1 Fma %9959 %9960 %9964
       %9966 = OpFDiv %float %9961 %9965
       %9967 = OpDot %float %8434 %9944
       %9968 = OpDot %float %8434 %9945
       %9969 = OpFMul %float %9968 %9960
       %9970 = OpExtInst %float %1 Fma %9967 %9959 %9969
       %9971 = OpFMul %float %float_0_5 %9970
               OpBranch %9948
       %9948 = OpLabel
       %9972 = OpPhi %float %float_1 %9950 %9963 %9949
       %9973 = OpPhi %float %9956 %9950 %9971 %9949
       %9974 = OpPhi %float %9953 %9950 %9966 %9949
       %9975 = OpFOrdGreaterThan %bool %9849 %float_0
               OpSelectionMerge %9976 None
               OpBranchConditional %9975 %9977 %9976
       %9977 = OpLabel
       %9978 = OpFMul %float %9849 %9849
       %9979 = OpFMul %float %9978 %9974
       %9980 = OpExtInst %float %1 FClamp %9979 %float_0 %float_1
       %9981 = OpExtInst %float %1 Sqrt %9980
       %9982 = OpFOrdLessThan %bool %9973 %9981
               OpSelectionMerge %9983 None
               OpBranchConditional %9982 %9984 %9983
       %9984 = OpLabel
       %9985 = OpFNegate %float %9981
       %9986 = OpExtInst %float %1 NMax %9973 %9985
       %9987 = OpFAdd %float %9981 %9986
       %9988 = OpFMul %float %9987 %9987
       %9989 = OpFMul %float %float_4 %9981
       %9990 = OpFDiv %float %9988 %9989
               OpBranch %9983
       %9983 = OpLabel
       %9991 = OpPhi %float %9973 %9977 %9990 %9984
               OpBranch %9976
       %9976 = OpLabel
       %9992 = OpPhi %float %9973 %9948 %9991 %9983
       %9993 = OpExtInst %float %1 FClamp %9992 %float_0 %float_1
       %9994 = OpSelect %float %9858 %9974 %float_1
               OpSelectionMerge %9995 None
               OpBranchConditional %9947 %9996 %9995
       %9996 = OpLabel
       %9997 = OpFNegate %v3float %646
       %9998 = OpExtInst %v3float %1 Reflect %9997 %8434
       %9999 = OpFSub %v3float %9945 %9944
      %10000 = OpDot %float %9998 %9999
      %10001 = OpVectorTimesScalar %v3float %9998 %10000
      %10002 = OpFSub %v3float %10001 %9999
      %10003 = OpDot %float %9944 %10002
      %10004 = OpFMul %float %10000 %10000
      %10005 = OpFNegate %float %10004
      %10006 = OpExtInst %float %1 Fma %9853 %9853 %10005
      %10007 = OpFDiv %float %10003 %10006
      %10008 = OpExtInst %float %1 FClamp %10007 %float_0 %float_1
      %10009 = OpVectorTimesScalar %v3float %9999 %10008
      %10010 = OpFAdd %v3float %9944 %10009
               OpBranch %9995
       %9995 = OpLabel
      %10011 = OpPhi %v3float %9944 %9976 %10010 %9996
      %10012 = OpDot %float %10011 %10011
      %10013 = OpExtInst %float %1 InverseSqrt %10012
      %10014 = OpVectorTimesScalar %v3float %10011 %10013
      %10015 = OpExtInst %float %1 NMax %9946 %8409
      %10016 = OpFMul %float %9849 %10013
      %10017 = OpFNegate %float %10015
      %10018 = OpExtInst %float %1 Fma %10017 %10015 %float_1
      %10019 = OpFMul %float %10016 %10018
      %10020 = OpExtInst %float %1 FClamp %10019 %float_0 %float_1
      %10021 = OpFMul %float %9857 %10013
      %10022 = OpExtInst %float %1 FClamp %10021 %float_0 %float_1
      %10023 = OpExtInst %float %1 NMax %9853 %9849
      %10024 = OpFNegate %float %10023
      %10025 = OpExtInst %float %1 Fma %10024 %float_0_0500000007 %float_1
      %10026 = OpExtInst %float %1 FClamp %10025 %float_0 %float_1
      %10027 = OpBitcast %uint %10026
      %10028 = OpShiftLeftLogical %uint %10027 %uint_1
      %10029 = OpBitwiseOr %uint %uint_0 %10028
      %10030 = OpDot %float %8434 %10014
      %10031 = OpDot %float %8434 %646
      %10032 = OpDot %float %646 %10014
      %10033 = OpExtInst %float %1 Fma %float_2 %10032 %float_2
      %10034 = OpExtInst %float %1 InverseSqrt %10033
      %10035 = OpFAdd %float %10030 %10031
      %10036 = OpFMul %float %10035 %10034
      %10037 = OpExtInst %float %1 FClamp %10036 %float_0 %float_1
      %10038 = OpExtInst %float %1 Fma %10034 %10032 %10034
      %10039 = OpExtInst %float %1 FClamp %10038 %float_0 %float_1
      %10040 = OpFOrdGreaterThan %bool %10020 %float_0
               OpSelectionMerge %10041 None
               OpBranchConditional %10040 %10042 %10041
      %10042 = OpLabel
      %10043 = OpFNegate %float %10020
      %10044 = OpExtInst %float %1 Fma %10043 %10020 %float_1
      %10045 = OpExtInst %float %1 Sqrt %10044
      %10046 = OpFMul %float %float_2 %10030
      %10047 = OpFNegate %float %10032
      %10048 = OpExtInst %float %1 Fma %10046 %10031 %10047
      %10049 = OpFOrdGreaterThanEqual %bool %10048 %10045
               OpSelectionMerge %10050 None
               OpBranchConditional %10049 %10051 %10052
      %10052 = OpLabel
      %10053 = OpFNegate %float %10048
      %10054 = OpExtInst %float %1 Fma %10053 %10048 %float_1
      %10055 = OpExtInst %float %1 InverseSqrt %10054
      %10056 = OpFMul %float %10020 %10055
      %10057 = OpExtInst %float %1 Fma %10053 %10030 %10031
      %10058 = OpFMul %float %10056 %10057
      %10059 = OpFMul %float %float_2 %10031
      %10060 = OpExtInst %float %1 Fma %10059 %10031 %float_n1
      %10061 = OpExtInst %float %1 Fma %10053 %10032 %10060
      %10062 = OpFMul %float %10056 %10061
      %10063 = OpFNegate %float %10030
      %10064 = OpExtInst %float %1 Fma %10063 %10030 %float_1
      %10065 = OpFNegate %float %10031
      %10066 = OpExtInst %float %1 Fma %10065 %10031 %10064
      %10067 = OpExtInst %float %1 Fma %10047 %10032 %10066
      %10068 = OpFMul %float %10046 %10031
      %10069 = OpExtInst %float %1 Fma %10068 %10032 %10067
      %10070 = OpExtInst %float %1 FClamp %10069 %float_0 %float_1
      %10071 = OpExtInst %float %1 Sqrt %10070
      %10072 = OpFMul %float %10056 %10071
      %10073 = OpFMul %float %10072 %float_2
      %10074 = OpFMul %float %10073 %10031
      %10075 = OpExtInst %float %1 Fma %10030 %10045 %10031
      %10076 = OpExtInst %float %1 Fma %10056 %10057 %10075
      %10077 = OpExtInst %float %1 Fma %10032 %10045 %float_1
      %10078 = OpExtInst %float %1 Fma %10056 %10061 %10077
      %10079 = OpFMul %float %10072 %10078
      %10080 = OpFMul %float %10076 %10078
      %10081 = OpFMul %float %10074 %10076
      %10082 = OpFMul %float %float_0_25 %10074
      %10083 = OpFMul %float %10082 %10076
      %10084 = OpExtInst %float %1 Fma %float_n0_5 %10079 %10083
      %10085 = OpFMul %float %10080 %10084
      %10086 = OpFMul %float %10079 %float_n2
      %10087 = OpExtInst %float %1 Fma %10074 %10076 %10086
      %10088 = OpFMul %float %10081 %10087
      %10089 = OpExtInst %float %1 Fma %10079 %10079 %10088
      %10090 = OpFMul %float %10078 %10078
      %10091 = OpExtInst %float %1 Fma %10032 %10045 %10078
      %10092 = OpExtInst %float %1 Fma %float_n0_5 %10091 %float_n0_5
      %10093 = OpFMul %float %10080 %10092
      %10094 = OpExtInst %float %1 Fma %10075 %10090 %10093
      %10095 = OpExtInst %float %1 Fma %10076 %10094 %10089
      %10096 = OpFMul %float %float_2 %10085
      %10097 = OpFMul %float %10085 %10085
      %10098 = OpExtInst %float %1 Fma %10095 %10095 %10097
      %10099 = OpFDiv %float %10096 %10098
      %10100 = OpFMul %float %10099 %10095
      %10101 = OpFNegate %float %10099
      %10102 = OpExtInst %float %1 Fma %10101 %10085 %float_1
      %10103 = OpFMul %float %10100 %10072
      %10104 = OpExtInst %float %1 Fma %10102 %10058 %10103
      %10105 = OpFMul %float %10100 %10074
      %10106 = OpExtInst %float %1 Fma %10102 %10062 %10105
      %10107 = OpExtInst %float %1 Fma %10030 %10045 %10104
      %10108 = OpExtInst %float %1 Fma %10032 %10045 %10106
      %10109 = OpExtInst %float %1 Fma %float_2 %10108 %float_2
      %10110 = OpExtInst %float %1 InverseSqrt %10109
      %10111 = OpFAdd %float %10107 %10031
      %10112 = OpFMul %float %10111 %10110
      %10113 = OpExtInst %float %1 FClamp %10112 %float_0 %float_1
      %10114 = OpExtInst %float %1 Fma %10110 %10108 %10110
      %10115 = OpExtInst %float %1 FClamp %10114 %float_0 %float_1
               OpBranch %10050
      %10051 = OpLabel
      %10116 = OpExtInst %float %1 FAbs %10031
               OpBranch %10050
      %10050 = OpLabel
      %10117 = OpPhi %float %10113 %10052 %float_1 %10051
      %10118 = OpPhi %float %10115 %10052 %10116 %10051
               OpBranch %10041
      %10041 = OpLabel
      %10119 = OpPhi %float %10037 %9995 %10117 %10050
      %10120 = OpPhi %float %10039 %9995 %10118 %10050
      %10121 = OpExtInst %float %1 FAbs %10031
      %10122 = OpFAdd %float %10121 %float_9_99999975en06
      %10123 = OpExtInst %float %1 FClamp %10122 %float_0 %float_1
      %10124 = OpFMul %float %9946 %9946
      %10125 = OpFMul %float %10124 %10124
      %10126 = OpShiftRightLogical %uint %10029 %uint_1
      %10127 = OpBitcast %float %10126
      %10128 = OpExtInst %float %1 FClamp %10031 %float_0 %float_1
      %10129 = OpExtInst %float %1 FClamp %9993 %float_0 %float_1
      %10130 = OpExtInst %float %1 FClamp %10039 %float_0 %float_1
      %10131 = OpExtInst %float %1 FClamp %10037 %float_0 %float_1
      %10132 = OpBitcast %int %10125
      %10133 = OpISub %int %int_2129859010 %10132
      %10134 = OpBitcast %float %10133
      %10135 = OpExtInst %float %1 Fma %float_2 %10134 %float_n1
      %10136 = OpExtInst %float %1 Log2 %10135
      %10137 = OpFMul %float %float_0_055555556 %10136
      %10138 = OpExtInst %float %1 FClamp %10137 %float_0 %float_1
      %10139 = OpFSub %float %float_1 %10130
      %10140 = OpFMul %float %10139 %10139
      %10141 = OpFMul %float %10140 %10140
      %10142 = OpExtInst %float %1 Fma %10141 %10139 %10130
      %10143 = OpFSub %float %float_1 %10128
      %10144 = OpFMul %float %10143 %10143
      %10145 = OpFMul %float %10144 %10144
      %10146 = OpFMul %float %10145 %10143
      %10147 = OpExtInst %float %1 Fma %float_n0_75 %10146 %float_1
      %10148 = OpFSub %float %float_1 %10129
      %10149 = OpFMul %float %10148 %10148
      %10150 = OpFMul %float %10149 %10149
      %10151 = OpFMul %float %10150 %10148
      %10152 = OpExtInst %float %1 Fma %float_n0_75 %10151 %float_1
      %10153 = OpFMul %float %10147 %10152
      %10154 = OpExtInst %float %1 Fma %float_2_20000005 %10138 %float_n0_5
      %10155 = OpExtInst %float %1 FClamp %10154 %float_0 %float_1
      %10156 = OpExtInst %float %1 FMix %10142 %10153 %10155
      %10157 = OpExtInst %float %1 Fma %float_34_5 %10138 %float_n59
      %10158 = OpExtInst %float %1 Fma %10157 %10138 %float_24_5
      %10159 = OpFMul %float %10158 %10130
      %10160 = OpExtInst %float %1 Fma %float_73_1999969 %10138 %float_n21_2000008
      %10161 = OpExtInst %float %1 NMax %10160 %float_8_89999962
      %10162 = OpFNegate %float %10161
      %10163 = OpBitcast %int %10131
      %10164 = OpShiftRightArithmetic %int %10163 %int_1
      %10165 = OpIAdd %int %int_532487669 %10164
      %10166 = OpBitcast %float %10165
      %10167 = OpFMul %float %10162 %10166
      %10168 = OpExtInst %float %1 Exp2 %10167
      %10169 = OpFMul %float %10159 %10168
      %10170 = OpExtInst %float %1 Fma %10169 %10127 %10156
      %10171 = OpFMul %float %float_0_318309873 %10170
      %10172 = OpVectorTimesScalar %v3float %8595 %10171
      %10173 = OpFMul %float %9994 %9993
      %10174 = OpVectorTimesScalar %v3float %125 %10173
      %10175 = OpFMul %v3float %10172 %10174
      %10176 = OpBitwiseAnd %uint %10029 %uint_1
      %10177 = OpIEqual %bool %10176 %uint_1
               OpSelectionMerge %10178 None
               OpBranchConditional %10177 %10179 %10180
      %10180 = OpLabel
      %10181 = OpFOrdGreaterThan %bool %10022 %float_0
               OpSelectionMerge %10182 None
               OpBranchConditional %10181 %10183 %10182
      %10183 = OpLabel
      %10184 = OpFMul %float %10022 %10022
      %10185 = OpExtInst %float %1 Fma %10120 %float_3_5999999 %float_0_400000006
      %10186 = OpFDiv %float %10184 %10185
      %10187 = OpExtInst %float %1 Fma %10124 %10124 %10186
      %10188 = OpExtInst %float %1 FClamp %10187 %float_0 %float_1
               OpBranch %10182
      %10182 = OpLabel
      %10189 = OpPhi %float %10125 %10180 %10188 %10183
               OpSelectionMerge %10190 None
               OpBranchConditional %10040 %10191 %10190
      %10191 = OpLabel
      %10192 = OpFMul %float %float_0_25 %10020
      %10193 = OpBitcast %int %10189
      %10194 = OpShiftRightArithmetic %int %10193 %int_1
      %10195 = OpIAdd %int %int_532487669 %10194
      %10196 = OpBitcast %float %10195
      %10197 = OpExtInst %float %1 Fma %float_3 %10196 %10020
      %10198 = OpFMul %float %10192 %10197
      %10199 = OpFAdd %float %10120 %float_0_00100000005
      %10200 = OpFDiv %float %10198 %10199
      %10201 = OpFAdd %float %10189 %10200
      %10202 = OpFDiv %float %10189 %10201
               OpBranch %10190
      %10190 = OpLabel
      %10203 = OpPhi %float %float_1 %10182 %10202 %10191
      %10204 = OpPhi %float %10189 %10182 %10201 %10191
      %10205 = OpFOrdLessThan %bool %9972 %float_1
               OpSelectionMerge %10206 None
               OpBranchConditional %10205 %10207 %10206
      %10207 = OpLabel
      %10208 = OpFSub %float %float_1_00010002 %9972
      %10209 = OpFAdd %float %float_1 %9972
      %10210 = OpFDiv %float %10208 %10209
      %10211 = OpExtInst %float %1 Sqrt %10210
      %10212 = OpFMul %float %float_0_25 %10211
      %10213 = OpBitcast %int %10204
      %10214 = OpShiftRightArithmetic %int %10213 %int_1
      %10215 = OpIAdd %int %int_532487669 %10214
      %10216 = OpBitcast %float %10215
      %10217 = OpExtInst %float %1 Fma %float_3 %10216 %10211
      %10218 = OpFMul %float %10212 %10217
      %10219 = OpFAdd %float %10120 %float_0_00100000005
      %10220 = OpFDiv %float %10218 %10219
      %10221 = OpFAdd %float %10204 %10220
      %10222 = OpFDiv %float %10204 %10221
      %10223 = OpExtInst %float %1 Sqrt %10222
      %10224 = OpFMul %float %10203 %10223
               OpBranch %10206
      %10206 = OpLabel
      %10225 = OpPhi %float %10203 %10190 %10224 %10207
      %10226 = OpFNegate %float %10119
      %10227 = OpExtInst %float %1 Fma %10119 %10189 %10226
      %10228 = OpExtInst %float %1 Fma %10227 %10119 %float_1
      %10229 = OpFMul %float %float_3_14159274 %10228
      %10230 = OpFMul %float %10229 %10228
      %10231 = OpFDiv %float %10189 %10230
      %10232 = OpFMul %float %10231 %10225
      %10233 = OpExtInst %float %1 Sqrt %10189
      %10234 = OpFSub %float %float_1 %10233
      %10235 = OpExtInst %float %1 Fma %10123 %10234 %10233
      %10236 = OpExtInst %float %1 Fma %9993 %10234 %10233
      %10237 = OpFMul %float %10123 %10236
      %10238 = OpExtInst %float %1 Fma %9993 %10235 %10237
      %10239 = OpFDiv %float %float_0_5 %10238
      %10240 = OpFSub %float %float_1 %10120
      %10241 = OpFMul %float %10240 %10240
      %10242 = OpFMul %float %10241 %10241
      %10243 = OpFMul %float %10242 %10240
      %10244 = OpCompositeExtract %float %8530 1
      %10245 = OpFMul %float %float_50 %10244
      %10246 = OpExtInst %float %1 FClamp %10245 %float_0 %float_1
      %10247 = OpFMul %float %10246 %10243
      %10248 = OpCompositeConstruct %v3float %10247 %10247 %10247
      %10249 = OpFNegate %float %10242
      %10250 = OpExtInst %float %1 Fma %10249 %10240 %float_1
      %10251 = OpVectorTimesScalar %v3float %8530 %10250
      %10252 = OpFAdd %v3float %10248 %10251
      %10253 = OpFMul %float %10232 %10239
      %10254 = OpVectorTimesScalar %v3float %10252 %10253
      %10255 = OpFMul %v3float %10174 %10254
               OpBranch %10178
      %10179 = OpLabel
               OpBranch %10178
      %10178 = OpLabel
      %10256 = OpPhi %v3float %10255 %10206 %100 %10179
      %10257 = OpCompositeExtract %float %8530 1
      %10258 = OpFMul %float %float_50 %10257
      %10259 = OpExtInst %float %1 FClamp %10258 %float_0 %float_1
      %10260 = OpCompositeConstruct %v3float %10259 %10259 %10259
      %10261 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
      %10262 = OpLoad %type_sampler %View_ShadingEnergySampler
      %10263 = OpCompositeConstruct %v2float %10123 %9946
      %10264 = OpSampledImage %type_sampled_image %10261 %10262
      %10265 = OpImageSampleExplicitLod %v4float %10264 %10263 Lod %float_0
      %10266 = OpAccessChain %_ptr_Uniform_uint %View %uint_39
      %10267 = OpLoad %uint %10266
      %10268 = OpINotEqual %bool %10267 %uint_0
      %10269 = OpCompositeConstruct %v3bool %10268 %10268 %10268
      %10270 = OpCompositeExtract %float %10265 0
      %10271 = OpFSub %float %float_1 %10270
      %10272 = OpFDiv %float %10271 %10270
      %10273 = OpVectorTimesScalar %v3float %8530 %10272
      %10274 = OpFAdd %v3float %125 %10273
      %10275 = OpSelect %v3float %10269 %10274 %125
      %10276 = OpVectorTimesScalar %v3float %8530 %10270
      %10277 = OpFSub %v3float %10260 %8530
      %10278 = OpCompositeExtract %float %10265 1
      %10279 = OpVectorTimesScalar %v3float %10277 %10278
      %10280 = OpFAdd %v3float %10276 %10279
      %10281 = OpFMul %v3float %10275 %10280
      %10282 = OpAccessChain %_ptr_Uniform_uint %View %uint_40
      %10283 = OpLoad %uint %10282
      %10284 = OpINotEqual %bool %10283 %uint_0
      %10285 = OpDot %float %10281 %169
      %10286 = OpFSub %float %float_1 %10285
      %10287 = OpSelect %float %10284 %10286 %float_1
      %10288 = OpVectorTimesScalar %v3float %10175 %10287
      %10289 = OpFMul %v3float %10256 %10275
      %10290 = OpVectorTimesScalar %v3float %10289 %9863
      %10291 = OpVectorTimesScalar %v3float %9926 %9937
      %10292 = OpFMul %v3float %10290 %10291
      %10293 = OpExtInst %v3float %1 Fma %10288 %10291 %100
               OpBranch %9940
       %9940 = OpLabel
      %10294 = OpPhi %v3float %452 %9931 %10293 %10178
      %10295 = OpPhi %v3float %452 %9931 %10292 %10178
               OpBranch %9928
       %9928 = OpLabel
      %10296 = OpPhi %v3float %452 %9915 %10294 %9940
      %10297 = OpPhi %v3float %452 %9915 %10295 %9940
      %10298 = OpCompositeExtract %float %10296 0
      %10299 = OpCompositeExtract %float %10296 1
      %10300 = OpCompositeExtract %float %10296 2
      %10301 = OpCompositeConstruct %v4float %10298 %10299 %10300 %float_0
      %10302 = OpCompositeExtract %float %10297 0
      %10303 = OpCompositeExtract %float %10297 1
      %10304 = OpCompositeExtract %float %10297 2
      %10305 = OpCompositeConstruct %v4float %10302 %10303 %10304 %float_0
      %10306 = OpBitwiseAnd %uint %9894 %8670
      %10307 = OpINotEqual %bool %10306 %uint_0
               OpSelectionMerge %10308 Flatten
               OpBranchConditional %10307 %10309 %10308
      %10309 = OpLabel
      %10310 = OpFAdd %v4float %9794 %10301
      %10311 = OpFAdd %v4float %9797 %10305
               OpBranch %10308
      %10308 = OpLabel
       %9795 = OpPhi %v4float %9794 %9928 %10310 %10309
       %9798 = OpPhi %v4float %9797 %9928 %10311 %10309
               OpBranch %9796
       %9796 = OpLabel
       %9800 = OpIAdd %uint %9799 %uint_1
               OpBranch %9793
       %9802 = OpLabel
      %10312 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_16
      %10313 = OpLoad %uint %10312
      %10314 = OpIEqual %bool %10313 %uint_0
      %10315 = OpCompositeConstruct %v4bool %10314 %10314 %10314 %10314
      %10316 = OpSelect %v4float %10315 %96 %9794
      %10317 = OpSelect %v4float %10315 %96 %9797
      %10318 = OpVectorShuffle %v3float %10316 %10316 0 1 2
      %10319 = OpVectorShuffle %v3float %10317 %10317 0 1 2
      %10320 = OpFAdd %v3float %10318 %10319
      %10321 = OpAccessChain %_ptr_Uniform_float %View %uint_18
      %10322 = OpLoad %float %10321
      %10323 = OpFOrdGreaterThan %bool %10322 %float_0
               OpSelectionMerge %10324 DontFlatten
               OpBranchConditional %10323 %10325 %10324
      %10325 = OpLabel
      %10326 = OpIAdd %uint %8377 %uint_1
      %10327 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10326
      %10328 = OpLoad %v4float %10327
      %10329 = OpVectorShuffle %v3float %10328 %10328 0 1 2
      %10330 = OpIAdd %uint %8377 %uint_18
      %10331 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10330
      %10332 = OpLoad %v4float %10331
      %10333 = OpIAdd %uint %8377 %uint_17
      %10334 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10333
      %10335 = OpLoad %v4float %10334
      %10336 = OpCompositeExtract %float %10335 3
      %10337 = OpVectorShuffle %v3float %10332 %10332 0 1 2
      %10338 = OpIAdd %uint %8377 %uint_24
      %10339 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10338
      %10340 = OpLoad %v4float %10339
      %10341 = OpCompositeExtract %float %10340 3
      %10342 = OpIAdd %uint %8377 %uint_25
      %10343 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10342
      %10344 = OpLoad %v4float %10343
      %10345 = OpCompositeExtract %float %10344 3
      %10346 = OpIAdd %uint %8377 %uint_31
      %10347 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10346
      %10348 = OpLoad %v4float %10347
      %10349 = OpCompositeExtract %float %10348 0
      %10350 = OpCompositeConstruct %v3float %10336 %10341 %10345
      %10351 = OpFSub %v3float %579 %10329
      %10352 = OpFSub %v3float %629 %10337
      %10353 = OpVectorTimesScalar %v3float %10351 %float_2097152
      %10354 = OpFAdd %v3float %10353 %10352
      %10355 = OpExtInst %v3float %1 FAbs %10354
      %10356 = OpFAdd %v3float %10350 %125
      %10357 = OpFOrdGreaterThan %v3bool %10355 %10356
      %10358 = OpAny %bool %10357
               OpSelectionMerge %10359 None
               OpBranchConditional %10358 %10360 %10361
      %10361 = OpLabel
      %10362 = OpFOrdGreaterThan %bool %10349 %float_0
               OpSelectionMerge %10363 None
               OpBranchConditional %10362 %10364 %10363
      %10364 = OpLabel
      %10365 = OpFSub %v3float %628 %568
      %10366 = OpExtInst %v3float %1 FAbs %10365
      %10367 = OpCompositeExtract %float %10366 0
      %10368 = OpCompositeExtract %float %10366 1
      %10369 = OpCompositeExtract %float %10366 2
      %10370 = OpExtInst %float %1 NMax %10368 %10369
      %10371 = OpExtInst %float %1 NMax %10367 %10370
      %10372 = OpFSub %float %10371 %10349
      %10373 = OpExtInst %float %1 FAbs %10372
      %10374 = OpFMul %float %10373 %float_20
      %10375 = OpExtInst %float %1 FClamp %10374 %float_0 %float_1
      %10376 = OpFSub %float %float_1 %10375
      %10377 = OpVectorTimesScalar %v3float %137 %10376
               OpBranch %10363
      %10363 = OpLabel
      %10378 = OpPhi %v3float %100 %10361 %10377 %10364
               OpBranch %10359
      %10360 = OpLabel
      %10379 = OpFMul %v3float %579 %131
      %10380 = OpFMul %v3float %629 %131
      %10381 = OpCompositeExtract %float %10379 0
      %10382 = OpCompositeExtract %float %10380 0
      %10383 = OpCompositeExtract %float %10379 1
      %10384 = OpCompositeExtract %float %10380 1
      %10385 = OpFAdd %float %10381 %10383
      %10386 = OpFAdd %float %10382 %10384
      %10387 = OpCompositeExtract %float %10379 2
      %10388 = OpCompositeExtract %float %10380 2
      %10389 = OpFAdd %float %10385 %10387
      %10390 = OpFAdd %float %10386 %10388
      %10391 = OpFMul %float %10389 %float_4194_3042
      %10392 = OpExtInst %float %1 Fract %10391
      %10393 = OpExtInst %float %1 Fma %10390 %float_0_00200000009 %10392
      %10394 = OpExtInst %float %1 Fract %10393
      %10395 = OpCompositeConstruct %v3float %10394 %10394 %10394
      %10396 = OpFOrdGreaterThan %v3bool %10395 %135
      %10397 = OpSelect %v3float %10396 %125 %100
      %10398 = OpExtInst %v3float %1 FMix %132 %133 %10397
               OpBranch %10359
      %10359 = OpLabel
      %10399 = OpPhi %v3float %100 %10363 %10398 %10360
      %10400 = OpPhi %v3float %10378 %10363 %10398 %10360
               OpBranch %10324
      %10324 = OpLabel
      %10401 = OpPhi %v3float %100 %9802 %10399 %10359
      %10402 = OpPhi %v3float %100 %9802 %10400 %10359
      %10403 = OpFAdd %v3float %10320 %8596
      %10404 = OpFAdd %v3float %10403 %10402
      %10405 = OpVectorShuffle %v3float %603 %603 0 1 2
      %10406 = OpVectorTimesScalar %v3float %10405 %float_3_14159274
      %10407 = OpVectorTimesScalar %v3float %8580 %float_3_14159274
      %10408 = OpDot %float %8434 %646
      %10409 = OpExtInst %float %1 NMax %float_0 %10408
      %10410 = OpLoad %type_2d_image %OpaqueBasePass_PreIntegratedGFTexture
      %10411 = OpLoad %type_sampler %View_SharedBilinearClampedSampler
      %10412 = OpCompositeConstruct %v2float %10409 %8411
      %10413 = OpSampledImage %type_sampled_image %10410 %10411
      %10414 = OpImageSampleExplicitLod %v4float %10413 %10412 Lod %float_0
      %10415 = OpCompositeExtract %float %10414 0
      %10416 = OpVectorTimesScalar %v3float %8530 %10415
      %10417 = OpCompositeExtract %float %8530 1
      %10418 = OpFMul %float %float_50 %10417
      %10419 = OpExtInst %float %1 FClamp %10418 %float_0 %float_1
      %10420 = OpCompositeExtract %float %10414 1
      %10421 = OpFMul %float %10419 %10420
      %10422 = OpCompositeConstruct %v3float %10421 %10421 %10421
      %10423 = OpFAdd %v3float %10416 %10422
      %10424 = OpLoad %type_2d_image %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture
      %10425 = OpAccessChain %_ptr_Uniform_v2float %SingleLayerWater %uint_2
      %10426 = OpLoad %v2float %10425
      %10427 = OpLoad %type_2d_image %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture
      %10428 = OpAccessChain %_ptr_Uniform_v4float %SingleLayerWater %uint_0
      %10429 = OpLoad %v4float %10428
      %10430 = OpVectorShuffle %v2float %10429 %10429 0 1
      %10431 = OpVectorShuffle %v2float %10429 %10429 2 3
      %10432 = OpAccessChain %_ptr_Uniform_v4float %SingleLayerWater %uint_1
      %10433 = OpLoad %v4float %10432
      %10434 = OpFOrdGreaterThan %bool %8435 %float_0
               OpSelectionMerge %10435 None
               OpBranchConditional %10434 %10436 %10435
      %10436 = OpLabel
      %10437 = OpExtInst %float %1 NMin %8510 %float_0_99000001
      %10438 = OpExtInst %float %1 Sqrt %10437
      %10439 = OpFSub %float %float_1 %10438
      %10440 = OpFDiv %float %float_2 %10439
      %10441 = OpFSub %float %10440 %float_1
      %10442 = OpExtInst %v2float %1 FClamp %637 %10430 %10431
      %10443 = OpSampledImage %type_sampled_image %10424 %10411
      %10444 = OpImageSampleExplicitLod %v4float %10443 %10442 Lod %float_0
      %10445 = OpCompositeExtract %float %10444 0
      %10446 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_0
      %10447 = OpLoad %float %10446
      %10448 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_1
      %10449 = OpLoad %float %10448
      %10450 = OpExtInst %float %1 Fma %10445 %10447 %10449
      %10451 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_2
      %10452 = OpLoad %float %10451
      %10453 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_3
      %10454 = OpLoad %float %10453
      %10455 = OpFNegate %float %10454
      %10456 = OpExtInst %float %1 Fma %10445 %10452 %10455
      %10457 = OpFDiv %float %float_1 %10456
      %10458 = OpFAdd %float %10450 %10457
      %10459 = OpCompositeExtract %v4float %573 0
      %10460 = OpVectorShuffle %v3float %10459 %10459 0 1 2
      %10461 = OpCompositeExtract %v4float %573 1
      %10462 = OpVectorShuffle %v3float %10461 %10461 0 1 2
      %10463 = OpCompositeExtract %v4float %573 2
      %10464 = OpVectorShuffle %v3float %10463 %10463 0 1 2
      %10465 = OpCompositeConstruct %mat3v3float %10460 %10462 %10464
      %10466 = OpMatrixTimesVector %v3float %10465 %8434
      %10467 = OpExtInst %v3float %1 Normalize %10466
      %10468 = OpVectorShuffle %v2float %10467 %10467 0 1
      %10469 = OpFSub %float %8361 %float_1
      %10470 = OpVectorTimesScalar %v2float %10468 %10469
      %10471 = OpVectorShuffle %v2float %591 %591 0 1
      %10472 = OpFMul %v2float %10470 %10471
      %10473 = OpVectorShuffle %v2float %593 %593 2 3
      %10474 = OpFMul %v2float %10472 %10473
      %10475 = OpCompositeExtract %float %10433 0
      %10476 = OpCompositeExtract %float %10433 1
      %10477 = OpFMul %float %10476 %10475
      %10478 = OpCompositeConstruct %v2float %10475 %10477
      %10479 = OpVectorShuffle %v2float %10433 %10433 2 3
      %10480 = OpFMul %v2float %10479 %306
      %10481 = OpFMul %v2float %10480 %10478
      %10482 = OpFMul %v2float %10474 %10481
      %10483 = OpFNegate %float %8363
      %10484 = OpFMul %float %8363 %float_n0_5
      %10485 = OpExtInst %float %1 FAbs %10484
      %10486 = OpExtInst %float %1 FClamp %10485 %float_0 %float_50
      %10487 = OpExtInst %float %1 NMax %float_1 %10486
      %10488 = OpFDiv %float %float_1 %10487
      %10489 = OpFSub %float %10458 %632
      %10490 = OpExtInst %float %1 Fma %10489 %10488 %10483
      %10491 = OpExtInst %float %1 FClamp %10490 %float_0 %float_1
      %10492 = OpVectorTimesScalar %v2float %10482 %10491
      %10493 = OpVectorTimesScalar %v2float %10492 %float_4
      %10494 = OpFMul %float %10489 %float_0_0333333351
      %10495 = OpExtInst %float %1 FClamp %10494 %float_0 %float_1
      %10496 = OpVectorTimesScalar %v2float %10493 %10495
      %10497 = OpFAdd %v2float %10442 %10496
      %10498 = OpExtInst %v2float %1 FClamp %10497 %10430 %10431
      %10499 = OpSampledImage %type_sampled_image %10424 %10411
      %10500 = OpImageGather %v4float %10499 %10498 %int_0 None
      %10501 = OpCompositeExtract %float %10500 0
      %10502 = OpExtInst %float %1 Fma %10501 %10447 %10449
      %10503 = OpExtInst %float %1 Fma %10501 %10452 %10455
      %10504 = OpFDiv %float %float_1 %10503
      %10505 = OpFAdd %float %10502 %10504
      %10506 = OpCompositeExtract %float %10500 1
      %10507 = OpExtInst %float %1 Fma %10506 %10447 %10449
      %10508 = OpExtInst %float %1 Fma %10506 %10452 %10455
      %10509 = OpFDiv %float %float_1 %10508
      %10510 = OpFAdd %float %10507 %10509
      %10511 = OpCompositeExtract %float %10500 2
      %10512 = OpExtInst %float %1 Fma %10511 %10447 %10449
      %10513 = OpExtInst %float %1 Fma %10511 %10452 %10455
      %10514 = OpFDiv %float %float_1 %10513
      %10515 = OpFAdd %float %10512 %10514
      %10516 = OpCompositeExtract %float %10500 3
      %10517 = OpExtInst %float %1 Fma %10516 %10447 %10449
      %10518 = OpExtInst %float %1 Fma %10516 %10452 %10455
      %10519 = OpFDiv %float %float_1 %10518
      %10520 = OpFAdd %float %10517 %10519
      %10521 = OpCompositeConstruct %v4float %10505 %10510 %10515 %10520
      %10522 = OpCompositeConstruct %v4float %632 %632 %632 %632
      %10523 = OpFOrdLessThan %v4bool %10521 %10522
      %10524 = OpAny %bool %10523
               OpSelectionMerge %10525 None
               OpBranchConditional %10524 %10526 %10527
      %10527 = OpLabel
      %10528 = OpFMul %v2float %10498 %10426
      %10529 = OpVectorTimesScalar %v2float %10528 %float_1
      %10530 = OpFSub %v2float %10529 %147
      %10531 = OpExtInst %v2float %1 Fract %10530
      %10532 = OpVectorShuffle %v4float %10500 %10500 3 2 0 1
      %10533 = OpCompositeExtract %float %10531 0
      %10534 = OpFSub %float %float_1 %10533
      %10535 = OpCompositeExtract %float %10531 1
      %10536 = OpFSub %float %float_1 %10535
      %10537 = OpFMul %float %10534 %10536
      %10538 = OpCompositeInsert %v4float %10537 %531 0
      %10539 = OpFMul %float %10533 %10536
      %10540 = OpCompositeInsert %v4float %10539 %10538 1
      %10541 = OpFMul %float %10534 %10535
      %10542 = OpCompositeInsert %v4float %10541 %10540 2
      %10543 = OpFMul %float %10533 %10535
      %10544 = OpCompositeInsert %v4float %10543 %10542 3
      %10545 = OpDot %float %10532 %10544
      %10546 = OpExtInst %float %1 Fma %10545 %10447 %10449
      %10547 = OpExtInst %float %1 Fma %10545 %10452 %10455
      %10548 = OpFDiv %float %float_1 %10547
      %10549 = OpFAdd %float %10546 %10548
               OpBranch %10525
      %10526 = OpLabel
               OpBranch %10525
      %10525 = OpLabel
      %10550 = OpPhi %float %10549 %10527 %10458 %10526
      %10551 = OpPhi %float %10545 %10527 %10445 %10526
      %10552 = OpCompositeConstruct %v2bool %10524 %10524
      %10553 = OpSelect %v2float %10552 %10442 %10498
      %10554 = OpExtInst %float %1 NMax %float_9_99999996en13 %10551
      %10555 = OpFSub %float %10550 %632
      %10556 = OpExtInst %float %1 NMax %float_0 %10555
      %10557 = OpVectorShuffle %v3float %8420 %8420 0 1 2
      %10558 = OpVectorShuffle %v3float %8419 %451 0 1 2
      %10559 = OpFMul %v3float %10557 %10558
      %10560 = OpVectorShuffle %v3float %8422 %451 0 1 2
      %10561 = OpFMul %float %10556 %float_0_0199999996
      %10562 = OpExtInst %float %1 FClamp %10561 %float_0 %float_1
      %10563 = OpCompositeConstruct %v3float %10562 %10562 %10562
      %10564 = OpExtInst %v3float %1 FMix %125 %10560 %10563
      %10565 = OpExtInst %v3float %1 NMax %10558 %187
      %10566 = OpFDiv %float %float_1 %10441
               OpSelectionMerge %10567 None
               OpSwitch %uint_0 %10568
      %10568 = OpLabel
      %10569 = OpDot %float %646 %8434
      %10570 = OpFMul %float %10566 %10566
      %10571 = OpFNegate %float %10569
      %10572 = OpExtInst %float %1 Fma %10571 %10569 %float_1
      %10573 = OpFNegate %float %10570
      %10574 = OpExtInst %float %1 Fma %10573 %10572 %float_1
      %10575 = OpFOrdLessThan %bool %10574 %float_0
               OpSelectionMerge %10576 None
               OpBranchConditional %10575 %10577 %10576
      %10577 = OpLabel
      %10578 = OpFNegate %v3float %646
      %10579 = OpExtInst %v3float %1 Reflect %10578 %8434
               OpBranch %10567
      %10576 = OpLabel
      %10580 = OpFOrdGreaterThanEqual %bool %10569 %float_0
      %10581 = OpSelect %float %10580 %float_1 %float_n1
      %10582 = OpFNegate %float %10581
      %10583 = OpExtInst %float %1 Sqrt %10574
      %10584 = OpFMul %float %10582 %10583
      %10585 = OpExtInst %float %1 Fma %10566 %10569 %10584
      %10586 = OpVectorTimesScalar %v3float %8434 %10585
      %10587 = OpVectorTimesScalar %v3float %646 %10566
      %10588 = OpFSub %v3float %10586 %10587
               OpBranch %10567
      %10567 = OpLabel
      %10589 = OpPhi %v3float %10579 %10577 %10588 %10576
      %10590 = OpPhi %bool %false %10577 %true %10576
               OpSelectionMerge %10591 None
               OpBranchConditional %10590 %10592 %10591
      %10592 = OpLabel
      %10593 = OpFNegate %v3float %605
      %10594 = OpDot %float %10593 %10589
      %10595 = OpExtInst %float %1 Fma %float_1_54999995 %float_0 %float_n0
      %10596 = OpExtInst %float %1 Fma %10595 %10594 %float_1
      %10597 = OpFNegate %float %10595
      %10598 = OpExtInst %float %1 Fma %10597 %10595 %float_1
      %10599 = OpFMul %float %float_12_566371 %10596
      %10600 = OpFMul %float %10599 %10596
      %10601 = OpFDiv %float %10598 %10600
               OpBranch %10591
      %10591 = OpLabel
      %10602 = OpPhi %float %float_0 %10567 %10601 %10592
      %10603 = OpCompositeConstruct %v4float %620 %621 %10554 %float_1
      %10604 = OpMatrixTimesVector %v4float %577 %10603
      %10605 = OpVectorShuffle %v3float %10604 %10604 0 1 2
      %10606 = OpCompositeExtract %float %10604 3
      %10607 = OpCompositeConstruct %v3float %10606 %10606 %10606
      %10608 = OpFDiv %v3float %10605 %10607
      %10609 = OpFSub %v3float %10608 %587
      %10610 = OpFSub %v3float %579 %579
      %10611 = OpFSub %v3float %629 %10609
      %10612 = OpVectorTimesScalar %v3float %10610 %float_2097152
      %10613 = OpFAdd %v3float %10612 %10611
      %10614 = OpCompositeExtract %float %10613 2
      %10615 = OpExtInst %float %1 NMax %float_0 %10614
      %10616 = OpFNegate %float %10615
      %10617 = OpVectorTimesScalar %v3float %10558 %10616
      %10618 = OpExtInst %v3float %1 Exp %10617
      %10619 = OpSampledImage %type_sampled_image %10427 %10411
      %10620 = OpImageSampleExplicitLod %v4float %10619 %10553 Lod %float_0
      %10621 = OpVectorShuffle %v3float %10620 %10620 0 1 2
      %10622 = OpVectorTimesScalar %v3float %10618 %595
      %10623 = OpFMul %v3float %10622 %10621
      %10624 = OpVectorTimesScalar %v3float %10406 %10602
      %10625 = OpVectorTimesScalar %v3float %10407 %float_0_0795774683
      %10626 = OpSelect %float %8639 %float_0 %float_1
      %10627 = OpSelect %float %8639 %float_1 %float_0
      %10628 = OpVectorTimesScalar %v3float %10558 %10556
      %10629 = OpFNegate %v3float %10628
      %10630 = OpExtInst %v3float %1 Exp %10629
      %10631 = OpVectorTimesScalar %v3float %10624 %9780
      %10632 = OpVectorTimesScalar %v3float %10631 %10626
      %10633 = OpFAdd %v3float %10625 %10632
      %10634 = OpFSub %v3float %125 %10630
      %10635 = OpFMul %v3float %10559 %10634
      %10636 = OpFDiv %v3float %10635 %10565
      %10637 = OpExtInst %v3float %1 FClamp %10636 %100 %125
      %10638 = OpFMul %v3float %10633 %10637
      %10639 = OpVectorTimesScalar %v3float %10631 %10627
      %10640 = OpFMul %v3float %10639 %10637
      %10641 = OpFSub %v3float %125 %10423
      %10642 = OpVectorShuffle %v3float %125 %10641 3 4 5
      %10643 = OpFMul %v3float %10640 %10642
      %10644 = OpVectorTimesScalar %v3float %10643 %8435
      %10645 = OpFAdd %v3float %9779 %10644
      %10646 = OpVectorShuffle %v3float %527 %125 3 4 5
      %10647 = OpFMul %v3float %10630 %10646
      %10648 = OpFMul %v3float %10623 %10564
      %10649 = OpFMul %v3float %10647 %10648
      %10650 = OpExtInst %v3float %1 Fma %10638 %10642 %10649
      %10651 = OpVectorTimesScalar %v3float %10650 %8435
               OpBranch %10435
      %10435 = OpLabel
      %10652 = OpPhi %v3float %9779 %10324 %10645 %10591
      %10653 = OpPhi %v3float %100 %10324 %10651 %10591
      %10654 = OpFAdd %v3float %10404 %10653
      %10655 = OpExtInst %v3float %1 Normalize %8433
      %10656 = OpConvertFToU %v2uint %610
      %10657 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %10658 = OpExtInst %v3float %1 FClamp %8423 %100 %125
      %10659 = OpExtInst %v3float %1 Fma %10658 %8397 %8398
      %10660 = OpCompositeInsert %v4float %float_0 %8414 0
      %10661 = OpExtInst %float %1 FClamp %8403 %float_0 %float_1
      %10662 = OpExtInst %float %1 Fma %10661 %8401 %8402
      %10663 = OpCompositeInsert %v4float %10662 %10660 1
      %10664 = OpExtInst %float %1 Fma %8411 %8405 %8406
      %10665 = OpExtInst %float %1 NMax %8409 %10664
      %10666 = OpExtInst %float %1 FClamp %10665 %float_0 %float_1
      %10667 = OpCompositeInsert %v4float %10666 %10663 2
      %10668 = OpExtInst %float %1 FClamp %8413 %float_0 %float_1
      %10669 = OpCompositeInsert %v4float %10668 %10667 3
      %10670 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
      %10671 = OpLoad %type_sampler %View_ShadingEnergySampler
      %10672 = OpAccessChain %_ptr_Uniform_uint %View %uint_39
      %10673 = OpLoad %uint %10672
      %10674 = OpINotEqual %bool %10673 %uint_0
      %10675 = OpCompositeConstruct %v3bool %10674 %10674 %10674
      %10676 = OpAny %bool %542
               OpSelectionMerge %10677 None
               OpBranchConditional %10676 %10678 %10677
      %10678 = OpLabel
               OpSelectionMerge %10679 None
               OpSwitch %uint_4 %10679 0 %10680 3 %10681 5 %10682 4 %10683
      %10683 = OpLabel
      %10684 = OpExtInst %v3float %1 Fma %100 %125 %100
      %10685 = OpExtInst %float %1 Fma %float_1 %10666 %453
               OpSelectionMerge %10686 None
               OpSwitch %uint_0 %10687
      %10687 = OpLabel
               OpSelectionMerge %10688 None
               OpSwitch %uint_4 %10688 0 %10689 3 %10690 5 %10691 4 %10692
      %10692 = OpLabel
      %10693 = OpVectorShuffle %v3float %10659 %451 0 1 2
               OpBranch %10688
      %10691 = OpLabel
      %10694 = OpVectorShuffle %v3float %10659 %451 0 1 2
               OpBranch %10688
      %10690 = OpLabel
      %10695 = OpVectorShuffle %v3float %10659 %451 0 1 2
               OpBranch %10688
      %10689 = OpLabel
      %10696 = OpVectorShuffle %v3float %10659 %451 0 1 2
      %10697 = OpVectorShuffle %v3float %10669 %10669 0 1 2
      %10698 = OpExtInst %float %1 NMax %10662 %10666
      %10699 = OpExtInst %float %1 NMax %float_0 %10698
      %10700 = OpFSub %float %10699 %float_0_0799999982
      %10701 = OpFMul %float %10700 %float_3_125
      %10702 = OpExtInst %float %1 FClamp %10701 %float_0 %float_1
      %10703 = OpCompositeConstruct %v3float %10702 %10702 %10702
      %10704 = OpExtInst %v3float %1 FMix %10696 %10697 %10703
               OpBranch %10688
      %10688 = OpLabel
      %10705 = OpPhi %v3float %449 %10687 %10693 %10692 %10694 %10691 %10695 %10690 %10704 %10689
      %10706 = OpPhi %bool %false %10687 %true %10692 %true %10691 %true %10690 %true %10689
               OpSelectionMerge %10707 None
               OpBranchConditional %10706 %10686 %10707
      %10707 = OpLabel
               OpBranch %10686
      %10686 = OpLabel
      %10708 = OpPhi %v3float %10705 %10688 %100 %10707
      %10709 = OpVectorTimesScalar %v3float %10708 %float_1
      %10710 = OpBitwiseAnd %uint %8509 %uint_4294967288
      %10711 = OpBitwiseOr %uint %10710 %uint_4
               OpBranch %10679
      %10682 = OpLabel
      %10712 = OpBitwiseOr %uint %8509 %uint_0
      %10713 = OpBitwiseAnd %uint %10712 %uint_4294967288
      %10714 = OpBitwiseOr %uint %10713 %uint_6
               OpBranch %10679
      %10681 = OpLabel
      %10715 = OpExtInst %v3float %1 Fma %100 %125 %100
               OpSelectionMerge %10716 None
               OpSwitch %uint_0 %10717
      %10717 = OpLabel
               OpSelectionMerge %10718 None
               OpSwitch %uint_4 %10718 0 %10719 3 %10720 5 %10721 4 %10722
      %10722 = OpLabel
      %10723 = OpVectorShuffle %v3float %10659 %451 0 1 2
               OpBranch %10718
      %10721 = OpLabel
      %10724 = OpVectorShuffle %v3float %10659 %451 0 1 2
               OpBranch %10718
      %10720 = OpLabel
      %10725 = OpVectorShuffle %v3float %10659 %451 0 1 2
               OpBranch %10718
      %10719 = OpLabel
      %10726 = OpVectorShuffle %v3float %10659 %451 0 1 2
      %10727 = OpVectorShuffle %v3float %10669 %10669 0 1 2
      %10728 = OpExtInst %float %1 NMax %10662 %10666
      %10729 = OpExtInst %float %1 NMax %float_0 %10728
      %10730 = OpFSub %float %10729 %float_0_0799999982
      %10731 = OpFMul %float %10730 %float_3_125
      %10732 = OpExtInst %float %1 FClamp %10731 %float_0 %float_1
      %10733 = OpCompositeConstruct %v3float %10732 %10732 %10732
      %10734 = OpExtInst %v3float %1 FMix %10726 %10727 %10733
               OpBranch %10718
      %10718 = OpLabel
      %10735 = OpPhi %v3float %449 %10717 %10723 %10722 %10724 %10721 %10725 %10720 %10734 %10719
      %10736 = OpPhi %bool %false %10717 %true %10722 %true %10721 %true %10720 %true %10719
               OpSelectionMerge %10737 None
               OpBranchConditional %10736 %10716 %10737
      %10737 = OpLabel
               OpBranch %10716
      %10716 = OpLabel
      %10738 = OpPhi %v3float %10735 %10718 %100 %10737
      %10739 = OpVectorTimesScalar %v3float %10738 %float_1
      %10740 = OpBitwiseAnd %uint %8509 %uint_4294967288
      %10741 = OpBitwiseOr %uint %10740 %uint_5
               OpBranch %10679
      %10680 = OpLabel
      %10742 = OpExtInst %v3float %1 Fma %100 %125 %100
      %10743 = OpAll %bool %542
      %10744 = OpLogicalAnd %bool %true %10743
      %10745 = OpLogicalAnd %bool %10744 %true
               OpSelectionMerge %10746 None
               OpSwitch %uint_0 %10747
      %10747 = OpLabel
               OpSelectionMerge %10748 None
               OpSwitch %uint_4 %10748 0 %10749 3 %10750 5 %10751 4 %10752
      %10752 = OpLabel
      %10753 = OpVectorShuffle %v3float %10659 %451 0 1 2
               OpBranch %10748
      %10751 = OpLabel
      %10754 = OpVectorShuffle %v3float %10659 %451 0 1 2
               OpBranch %10748
      %10750 = OpLabel
      %10755 = OpVectorShuffle %v3float %10659 %451 0 1 2
               OpBranch %10748
      %10749 = OpLabel
      %10756 = OpVectorShuffle %v3float %10659 %451 0 1 2
      %10757 = OpVectorShuffle %v3float %10669 %10669 0 1 2
      %10758 = OpExtInst %float %1 NMax %10662 %10666
      %10759 = OpExtInst %float %1 NMax %float_0 %10758
      %10760 = OpFSub %float %10759 %float_0_0799999982
      %10761 = OpFMul %float %10760 %float_3_125
      %10762 = OpExtInst %float %1 FClamp %10761 %float_0 %float_1
      %10763 = OpCompositeConstruct %v3float %10762 %10762 %10762
      %10764 = OpExtInst %v3float %1 FMix %10756 %10757 %10763
               OpBranch %10748
      %10748 = OpLabel
      %10765 = OpPhi %v3float %449 %10747 %10753 %10752 %10754 %10751 %10755 %10750 %10764 %10749
      %10766 = OpPhi %bool %false %10747 %true %10752 %true %10751 %true %10750 %true %10749
               OpSelectionMerge %10767 None
               OpBranchConditional %10766 %10746 %10767
      %10767 = OpLabel
               OpBranch %10746
      %10746 = OpLabel
      %10768 = OpPhi %v3float %10765 %10748 %100 %10767
      %10769 = OpVectorTimesScalar %v3float %10768 %float_1
               OpSelectionMerge %10770 None
               OpBranchConditional %false %10771 %10770
      %10771 = OpLabel
               OpSelectionMerge %10772 None
               OpBranchConditional %false %10773 %10772
      %10773 = OpLabel
      %10774 = OpExtInst %float %1 NMax %float_0_0399999991 %float_0_0399999991
      %10775 = OpExtInst %float %1 NMax %float_0_0399999991 %10774
      %10776 = OpFSub %float %10775 %float_0_0799999982
      %10777 = OpFMul %float %10776 %float_3_125
      %10778 = OpExtInst %float %1 FClamp %10777 %float_0 %float_1
      %10779 = OpExtInst %float %1 FMix %float_0 %float_0_0399999991 %10778
      %10780 = OpCompositeConstruct %v3float %10779 %10779 %10779
               OpBranch %10772
      %10772 = OpLabel
      %10781 = OpPhi %v3float %10769 %10771 %10780 %10773
      %10782 = OpPhi %float %453 %10771 %float_0 %10773
               OpBranch %10770
      %10770 = OpLabel
      %10783 = OpPhi %v3float %10769 %10746 %10781 %10772
      %10784 = OpPhi %float %453 %10746 %10782 %10772
      %10785 = OpBitwiseOr %uint %8509 %uint_0
      %10786 = OpBitwiseOr %uint %10785 %uint_0
               OpBranch %10679
      %10679 = OpLabel
      %10787 = OpPhi %v3float %100 %10678 %10684 %10686 %100 %10682 %10715 %10716 %10742 %10770
      %10788 = OpPhi %uint %450 %10678 %uint_2 %10686 %uint_1 %10682 %uint_1 %10716 %uint_1 %10770
      %10789 = OpPhi %bool %true %10678 %false %10686 %false %10682 %false %10716 %10745 %10770
      %10790 = OpPhi %bool %true %10678 %false %10686 %false %10682 %false %10716 %true %10770
      %10791 = OpPhi %v3float %452 %10678 %10709 %10686 %452 %10682 %10739 %10716 %10783 %10770
      %10792 = OpPhi %float %453 %10678 %10685 %10686 %float_1 %10682 %float_1 %10716 %10784 %10770
      %10793 = OpPhi %float %float_0 %10678 %float_1 %10686 %float_1 %10682 %float_1 %10716 %float_1 %10770
      %10794 = OpPhi %uint %8509 %10678 %10711 %10686 %10714 %10682 %10741 %10716 %10786 %10770
      %10795 = OpCompositeConstruct %_arr_v3float_uint_4 %10655 %452 %452 %452
               OpStore %564 %10795
      %10796 = OpAccessChain %_ptr_Function_v3float %564 %uint_0
      %10797 = OpLoad %v3float %10796
      %10798 = OpVectorTimesScalar %v3float %10797 %float_1
               OpBranch %10677
      %10677 = OpLabel
      %10799 = OpPhi %uint %uint_8192 %10435 %uint_8194 %10679
      %10800 = OpPhi %v3float %100 %10435 %10787 %10679
      %10801 = OpPhi %uint %450 %10435 %10788 %10679
      %10802 = OpPhi %uint %8509 %10435 %10794 %10679
      %10803 = OpPhi %bool %true %10435 %10789 %10679
      %10804 = OpPhi %bool %true %10435 %10790 %10679
      %10805 = OpPhi %v3float %452 %10435 %10791 %10679
      %10806 = OpPhi %float %453 %10435 %10792 %10679
      %10807 = OpPhi %v3float %452 %10435 %10798 %10679
      %10808 = OpPhi %float %float_0 %10435 %10793 %10679
      %10809 = OpSelect %uint %10676 %uint_1 %uint_0
      %10810 = OpFOrdGreaterThan %bool %10808 %float_0
      %10811 = OpCompositeConstruct %v3bool %10810 %10810 %10810
      %10812 = OpExtInst %v3float %1 Normalize %10807
      %10813 = OpSelect %v3float %10811 %10812 %100
      %10814 = OpFDiv %float %10806 %10808
      %10815 = OpSelect %float %10810 %10814 %float_0
      %10816 = OpCompositeConstruct %v3float %10808 %10808 %10808
      %10817 = OpFDiv %v3float %10805 %10816
      %10818 = OpSelect %v3float %10811 %10817 %100
               OpSelectionMerge %10819 None
               OpBranchConditional %10804 %10820 %10819
      %10820 = OpLabel
      %10821 = OpIEqual %bool %10809 %uint_1
      %10822 = OpLogicalAnd %bool %10803 %10821
      %10823 = OpSelect %uint %10822 %uint_2 %uint_3
      %10824 = OpSelect %uint %10822 %uint_1 %10823
      %10825 = OpBitwiseAnd %uint %10802 %uint_4294967288
      %10826 = OpBitwiseAnd %uint %10824 %uint_7
      %10827 = OpBitwiseOr %uint %10825 %10826
               OpSelectionMerge %10828 None
               OpBranchConditional %10822 %10829 %10828
      %10829 = OpLabel
      %10830 = OpShiftRightLogical %uint %10799 %uint_6
      %10831 = OpBitwiseAnd %uint %10830 %uint_1
      %10832 = OpINotEqual %bool %10831 %uint_0
               OpSelectionMerge %10833 None
               OpBranchConditional %10832 %10834 %10833
      %10834 = OpLabel
               OpBranch %10833
      %10833 = OpLabel
      %10835 = OpPhi %uint %uint_0 %10829 %uint_1 %10834
      %10836 = OpShiftRightLogical %uint %10799 %uint_9
      %10837 = OpBitwiseAnd %uint %10836 %uint_1
      %10838 = OpINotEqual %bool %10837 %uint_0
      %10839 = OpLogicalAnd %bool %10838 %true
               OpSelectionMerge %10840 None
               OpBranchConditional %10839 %10841 %10840
      %10841 = OpLabel
      %10842 = OpBitwiseOr %uint %10835 %uint_4
               OpBranch %10840
      %10840 = OpLabel
      %10843 = OpPhi %uint %10835 %10833 %10842 %10841
      %10844 = OpShiftRightLogical %uint %10799 %uint_10
      %10845 = OpBitwiseAnd %uint %10844 %uint_1
      %10846 = OpINotEqual %bool %10845 %uint_0
               OpSelectionMerge %10847 None
               OpBranchConditional %10846 %10848 %10847
      %10848 = OpLabel
      %10849 = OpBitwiseOr %uint %10843 %uint_8
               OpBranch %10847
      %10847 = OpLabel
      %10850 = OpPhi %uint %10843 %10840 %10849 %10848
      %10851 = OpShiftRightLogical %uint %10799 %uint_2
      %10852 = OpBitwiseAnd %uint %10851 %uint_7
      %10853 = OpIEqual %bool %10852 %uint_4
               OpSelectionMerge %10854 None
               OpBranchConditional %10853 %10855 %10854
      %10855 = OpLabel
      %10856 = OpBitwiseOr %uint %10850 %uint_16
               OpBranch %10854
      %10854 = OpLabel
      %10857 = OpPhi %uint %10850 %10847 %10856 %10855
      %10858 = OpIEqual %bool %10852 %uint_1
               OpSelectionMerge %10859 None
               OpBranchConditional %10858 %10860 %10859
      %10860 = OpLabel
      %10861 = OpBitwiseOr %uint %10857 %uint_32
               OpBranch %10859
      %10859 = OpLabel
      %10862 = OpPhi %uint %10857 %10854 %10861 %10860
      %10863 = OpIEqual %bool %10852 %uint_3
               OpSelectionMerge %10864 None
               OpBranchConditional %10863 %10865 %10864
      %10865 = OpLabel
      %10866 = OpBitwiseOr %uint %10862 %uint_64
               OpBranch %10864
      %10864 = OpLabel
      %10867 = OpPhi %uint %10862 %10859 %10866 %10865
      %10868 = OpBitwiseAnd %uint %10867 %uint_2
      %10869 = OpIEqual %bool %10868 %uint_2
      %10870 = OpIEqual %bool %10868 %uint_3
      %10871 = OpLogicalOr %bool %10869 %10870
               OpSelectionMerge %10872 None
               OpBranchConditional %10871 %10873 %10874
      %10874 = OpLabel
      %10875 = OpBitwiseAnd %uint %10867 %uint_4
      %10876 = OpIEqual %bool %10875 %uint_4
               OpSelectionMerge %10877 None
               OpBranchConditional %10876 %10878 %10879
      %10879 = OpLabel
      %10880 = OpBitwiseAnd %uint %10867 %uint_40
      %10881 = OpIEqual %bool %10880 %uint_40
               OpSelectionMerge %10882 None
               OpBranchConditional %10881 %10883 %10884
      %10884 = OpLabel
      %10885 = OpBitwiseAnd %uint %10867 %uint_32
      %10886 = OpIEqual %bool %10885 %uint_32
               OpSelectionMerge %10887 None
               OpBranchConditional %10886 %10888 %10889
      %10889 = OpLabel
      %10890 = OpBitwiseAnd %uint %10867 %uint_72
      %10891 = OpIEqual %bool %10890 %uint_64
      %10892 = OpSelect %uint %10891 %uint_4 %uint_0
      %10893 = OpSelect %uint %10891 %uint_0 %450
               OpBranch %10887
      %10888 = OpLabel
               OpBranch %10887
      %10887 = OpLabel
      %10894 = OpPhi %uint %10892 %10889 %uint_3 %10888
      %10895 = OpPhi %uint %10893 %10889 %uint_0 %10888
               OpBranch %10882
      %10883 = OpLabel
               OpBranch %10882
      %10882 = OpLabel
      %10896 = OpPhi %uint %10894 %10887 %uint_5 %10883
      %10897 = OpPhi %uint %10895 %10887 %uint_0 %10883
               OpBranch %10877
      %10878 = OpLabel
               OpBranch %10877
      %10877 = OpLabel
      %10898 = OpPhi %uint %10896 %10882 %uint_2 %10878
      %10899 = OpPhi %uint %10897 %10882 %450 %10878
               OpBranch %10872
      %10873 = OpLabel
               OpBranch %10872
      %10872 = OpLabel
      %10900 = OpPhi %uint %10898 %10877 %uint_1 %10873
      %10901 = OpPhi %uint %10899 %10877 %450 %10873
               OpBranch %10828
      %10828 = OpLabel
      %10902 = OpPhi %uint %uint_0 %10820 %10900 %10872
      %10903 = OpPhi %uint %450 %10820 %10901 %10872
               OpBranch %10819
      %10819 = OpLabel
      %10904 = OpPhi %uint %uint_0 %10677 %10902 %10828
      %10905 = OpPhi %uint %450 %10677 %10903 %10828
      %10906 = OpPhi %uint %10802 %10677 %10827 %10828
               OpSelectionMerge %10907 DontFlatten
               OpBranchConditional %10676 %10908 %10907
      %10908 = OpLabel
      %10909 = OpCompositeConstruct %_arr_v3float_uint_4 %10655 %452 %452 %452
               OpStore %565 %10909
      %10910 = OpShiftRightLogical %uint %10799 %uint_14
      %10911 = OpBitwiseAnd %uint %10910 %uint_3
      %10912 = OpAccessChain %_ptr_Function_v3float %565 %10911
      %10913 = OpLoad %v3float %10912
      %10914 = OpDot %float %10913 %646
      %10915 = OpShiftRightLogical %uint %10799 %uint_11
      %10916 = OpBitwiseAnd %uint %10915 %uint_7
               OpSelectionMerge %10917 None
               OpSwitch %10916 %10917 0 %10918 3 %10919 5 %10920
      %10920 = OpLabel
      %10921 = OpVectorShuffle %v3float %10659 %451 0 1 2
      %10922 = OpVectorTimesScalar %v3float %10921 %float_1
               OpBranch %10917
      %10919 = OpLabel
      %10923 = OpVectorShuffle %v3float %10659 %451 0 1 2
      %10924 = OpDot %float %646 %10913
      %10925 = OpVectorTimesScalar %v3float %10913 %10924
      %10926 = OpFSub %v3float %646 %10925
      %10927 = OpExtInst %v3float %1 Normalize %10926
      %10928 = OpExtInst %float %1 NMin %float_0 %float_1
      %10929 = OpDot %float %646 %10927
      %10930 = OpDot %float %10913 %10927
      %10931 = OpExtInst %float %1 FClamp %10930 %float_n1 %float_1
      %10932 = OpExtInst %float %1 FClamp %10914 %float_n1 %float_1
      %10933 = OpExtInst %float %1 FAbs %10932
      %10934 = OpExtInst %float %1 Fma %float_n0_156582996 %10933 %float_1_57079637
      %10935 = OpFSub %float %float_1 %10933
      %10936 = OpExtInst %float %1 Sqrt %10935
      %10937 = OpFMul %float %10934 %10936
      %10938 = OpFOrdGreaterThanEqual %bool %10932 %float_0
      %10939 = OpFNegate %float %10934
      %10940 = OpExtInst %float %1 Fma %10939 %10936 %float_3_14159274
      %10941 = OpSelect %float %10938 %10937 %10940
      %10942 = OpFSub %float %float_1_57079637 %10941
      %10943 = OpExtInst %float %1 FAbs %10931
      %10944 = OpExtInst %float %1 Fma %float_n0_156582996 %10943 %float_1_57079637
      %10945 = OpFSub %float %float_1 %10943
      %10946 = OpExtInst %float %1 Sqrt %10945
      %10947 = OpFMul %float %10944 %10946
      %10948 = OpFOrdGreaterThanEqual %bool %10931 %float_0
      %10949 = OpFNegate %float %10944
      %10950 = OpExtInst %float %1 Fma %10949 %10946 %float_3_14159274
      %10951 = OpSelect %float %10948 %10947 %10950
      %10952 = OpFSub %float %float_1_57079637 %10951
      %10953 = OpFSub %float %10942 %10952
      %10954 = OpExtInst %float %1 FAbs %10953
      %10955 = OpFMul %float %float_0_5 %10954
      %10956 = OpExtInst %float %1 Cos %10955
      %10957 = OpVectorTimesScalar %v3float %10913 %10931
      %10958 = OpFSub %v3float %10927 %10957
      %10959 = OpVectorTimesScalar %v3float %10913 %10932
      %10960 = OpFSub %v3float %646 %10959
      %10961 = OpDot %float %10958 %10960
      %10962 = OpDot %float %10958 %10958
      %10963 = OpDot %float %10960 %10960
      %10964 = OpExtInst %float %1 Fma %10962 %10963 %float_9_99999975en05
      %10965 = OpExtInst %float %1 InverseSqrt %10964
      %10966 = OpFMul %float %10961 %10965
      %10967 = OpExtInst %float %1 Fma %float_0_5 %10966 %float_0_5
      %10968 = OpExtInst %float %1 FClamp %10967 %float_0 %float_1
      %10969 = OpExtInst %float %1 Sqrt %10968
      %10970 = OpFDiv %float %float_1_19000006 %10956
      %10971 = OpExtInst %float %1 Fma %float_0_360000014 %10956 %10970
      %10972 = OpExtInst %float %1 Fma %float_0_00392156886 %float_0_00392156886 %float_0_200000003
      %10973 = OpExtInst %float %1 Fma %float_1_53787023en05 %float_0_5 %float_0_200000003
      %10974 = OpExtInst %float %1 Fma %float_1_53787023en05 %float_2 %float_0_200000003
      %10975 = OpFMul %float %float_0_997551024 %10969
      %10976 = OpFNegate %float %10932
      %10977 = OpExtInst %float %1 Fma %10976 %10932 %float_1
      %10978 = OpExtInst %float %1 Sqrt %10977
      %10979 = OpFMul %float %float_n0_0699428469 %10932
      %10980 = OpExtInst %float %1 Fma %10975 %10978 %10979
      %10981 = OpFMul %float %float_1_41421354 %10969
      %10982 = OpFMul %float %10972 %10981
      %10983 = OpFAdd %float %10931 %10932
      %10984 = OpExtInst %float %1 Fma %float_0_139885694 %10980 %10983
      %10985 = OpFMul %float %10984 %10984
      %10986 = OpFMul %float %float_n0_5 %10985
      %10987 = OpFMul %float %10982 %10982
      %10988 = OpFDiv %float %10986 %10987
      %10989 = OpExtInst %float %1 Exp %10988
      %10990 = OpFMul %float %float_2_50662827 %10982
      %10991 = OpFDiv %float %10989 %10990
      %10992 = OpFMul %float %float_0_25 %10969
      %10993 = OpExtInst %float %1 Fma %float_0_5 %10929 %float_0_5
      %10994 = OpExtInst %float %1 FClamp %10993 %float_0 %float_1
      %10995 = OpExtInst %float %1 Sqrt %10994
      %10996 = OpFSub %float %float_1 %10995
      %10997 = OpFMul %float %10996 %10996
      %10998 = OpFMul %float %10997 %10997
      %10999 = OpFMul %float %10998 %10996
      %11000 = OpExtInst %float %1 Fma %float_0_953479409 %10999 %float_0_0465205647
      %11001 = OpFMul %float %10991 %10992
      %11002 = OpFMul %float %11001 %11000
      %11003 = OpFMul %float %10662 %float_2
      %11004 = OpFMul %float %11002 %11003
      %11005 = OpFNegate %float %10929
      %11006 = OpExtInst %float %1 FClamp %11005 %float_0 %float_1
      %11007 = OpExtInst %float %1 FMix %float_1 %10928 %11006
      %11008 = OpFMul %float %11004 %11007
      %11009 = OpCompositeConstruct %v3float %11008 %11008 %11008
      %11010 = OpFSub %float %10983 %float_0_0350000001
      %11011 = OpFMul %float %11010 %11010
      %11012 = OpFMul %float %float_n0_5 %11011
      %11013 = OpFMul %float %10973 %10973
      %11014 = OpFDiv %float %11012 %11013
      %11015 = OpExtInst %float %1 Exp %11014
      %11016 = OpFMul %float %float_2_50662827 %10973
      %11017 = OpFDiv %float %11015 %11016
      %11018 = OpFDiv %float %float_1 %10971
      %11019 = OpExtInst %float %1 Fma %float_n0_800000012 %10966 %float_0_600000024
      %11020 = OpExtInst %float %1 Fma %11018 %11019 %float_1
      %11021 = OpFMul %float %10969 %11020
      %11022 = OpFNegate %float %11021
      %11023 = OpExtInst %float %1 Fma %11022 %11021 %float_1
      %11024 = OpExtInst %float %1 FClamp %11023 %float_0 %float_1
      %11025 = OpExtInst %float %1 Sqrt %11024
      %11026 = OpFNegate %float %10956
      %11027 = OpExtInst %float %1 Fma %11026 %11025 %float_1
      %11028 = OpFMul %float %11027 %11027
      %11029 = OpFMul %float %11028 %11028
      %11030 = OpFMul %float %11029 %11027
      %11031 = OpExtInst %float %1 Fma %float_0_953479409 %11030 %float_0_0465205647
      %11032 = OpFSub %float %float_1 %11031
      %11033 = OpFMul %float %11032 %11032
      %11034 = OpExtInst %v3float %1 FAbs %10923
      %11035 = OpFMul %float %11021 %11018
      %11036 = OpFNegate %float %11035
      %11037 = OpExtInst %float %1 Fma %11036 %11035 %float_1
      %11038 = OpExtInst %float %1 Sqrt %11037
      %11039 = OpFMul %float %float_0_5 %11038
      %11040 = OpFDiv %float %11039 %10956
      %11041 = OpCompositeConstruct %v3float %11040 %11040 %11040
      %11042 = OpExtInst %v3float %1 Pow %11034 %11041
      %11043 = OpExtInst %float %1 Fma %float_n3_6500001 %10966 %float_n3_98000002
      %11044 = OpExtInst %float %1 Exp %11043
      %11045 = OpFMul %float %11017 %11044
      %11046 = OpFMul %float %11045 %11033
      %11047 = OpVectorTimesScalar %v3float %11042 %11046
      %11048 = OpVectorTimesScalar %v3float %11047 %10928
      %11049 = OpFAdd %v3float %11009 %11048
      %11050 = OpFSub %float %10983 %float_0_140000001
      %11051 = OpFMul %float %11050 %11050
      %11052 = OpFMul %float %float_n0_5 %11051
      %11053 = OpFMul %float %10974 %10974
      %11054 = OpFDiv %float %11052 %11053
      %11055 = OpExtInst %float %1 Exp %11054
      %11056 = OpFMul %float %float_2_50662827 %10974
      %11057 = OpFDiv %float %11055 %11056
      %11058 = OpExtInst %float %1 Fma %11026 %float_0_5 %float_1
      %11059 = OpFMul %float %11058 %11058
      %11060 = OpFMul %float %11059 %11059
      %11061 = OpFMul %float %11060 %11058
      %11062 = OpExtInst %float %1 Fma %float_0_953479409 %11061 %float_0_0465205647
      %11063 = OpFSub %float %float_1 %11062
      %11064 = OpFMul %float %11063 %11063
      %11065 = OpFMul %float %11064 %11062
      %11066 = OpFDiv %float %float_0_800000012 %10956
      %11067 = OpCompositeConstruct %v3float %11066 %11066 %11066
      %11068 = OpExtInst %v3float %1 Pow %11034 %11067
      %11069 = OpExtInst %float %1 Fma %float_17 %10966 %float_n16_7800007
      %11070 = OpExtInst %float %1 Exp %11069
      %11071 = OpFMul %float %11057 %11070
      %11072 = OpFMul %float %11071 %11065
      %11073 = OpVectorTimesScalar %v3float %11068 %11072
      %11074 = OpFAdd %v3float %11049 %11073
      %11075 = OpVectorTimesScalar %v3float %11074 %float_1
      %11076 = OpVectorShuffle %v3float %527 %125 3 4 5
      %11077 = OpExtInst %v3float %1 Fma %452 %11076 %11075
      %11078 = OpFNegate %v3float %11077
      %11079 = OpExtInst %v3float %1 NMin %11078 %100
      %11080 = OpFNegate %v3float %11079
      %11081 = OpVectorTimesScalar %v3float %11080 %float_6_28318548
      %11082 = OpExtInst %v3float %1 NMin %125 %11081
               OpBranch %10917
      %10918 = OpLabel
      %11083 = OpVectorShuffle %v3float %10659 %451 0 1 2
      %11084 = OpVectorShuffle %v3float %10669 %10669 0 1 2
      %11085 = OpCompositeConstruct %v2float %10914 %float_0_00100000005
      %11086 = OpSampledImage %type_sampled_image %10670 %10671
      %11087 = OpImageSampleExplicitLod %v4float %11086 %11085 Lod %float_0
      %11088 = OpCompositeExtract %float %11087 0
      %11089 = OpFSub %float %float_1 %11088
      %11090 = OpFDiv %float %11089 %11088
      %11091 = OpVectorTimesScalar %v3float %11084 %11090
      %11092 = OpFAdd %v3float %125 %11091
      %11093 = OpSelect %v3float %10675 %11092 %125
      %11094 = OpVectorTimesScalar %v3float %11084 %11088
      %11095 = OpFNegate %v3float %11084
      %11096 = OpCompositeExtract %float %11087 1
      %11097 = OpVectorTimesScalar %v3float %11095 %11096
      %11098 = OpFAdd %v3float %11094 %11097
      %11099 = OpFMul %v3float %11093 %11098
      %11100 = OpAccessChain %_ptr_Uniform_uint %View %uint_40
      %11101 = OpLoad %uint %11100
      %11102 = OpINotEqual %bool %11101 %uint_0
      %11103 = OpDot %float %11099 %169
      %11104 = OpFSub %float %float_1 %11103
      %11105 = OpSelect %float %11102 %11104 %float_1
      %11106 = OpVectorTimesScalar %v3float %11083 %11105
      %11107 = OpShiftRightLogical %uint %10799 %uint_2
      %11108 = OpBitwiseAnd %uint %11107 %uint_7
      %11109 = OpIEqual %bool %11108 %uint_4
               OpSelectionMerge %11110 DontFlatten
               OpBranchConditional %11109 %11111 %11110
      %11111 = OpLabel
      %11112 = OpExtInst %float %1 NMax %453 %453
      %11113 = OpExtInst %float %1 NMax %453 %11112
      %11114 = OpFSub %float %11113 %float_0_0399999991
      %11115 = OpExtInst %float %1 NMax %float_0 %11114
      %11116 = OpFMul %float %11115 %float_3
      %11117 = OpExtInst %float %1 FClamp %11116 %float_0 %float_1
      %11118 = OpFMul %float %11117 %11117
      %11119 = OpCompositeExtract %float %10659 0
      %11120 = OpExtInst %float %1 FClamp %10914 %float_0 %float_1
      %11121 = OpExtInst %float %1 FAbs %11120
      %11122 = OpExtInst %float %1 Fma %float_n0_156582996 %11121 %float_1_57079637
      %11123 = OpFSub %float %float_1 %11121
      %11124 = OpExtInst %float %1 Sqrt %11123
      %11125 = OpFMul %float %11122 %11124
      %11126 = OpFMul %float %11125 %float_0_636619747
      %11127 = OpExtInst %float %1 FClamp %11126 %float_0 %float_1
      %11128 = OpCompositeConstruct %v3float %float_0 %11119 %11127
      %11129 = OpExtInst %v3float %1 Fma %487 %11128 %486
      %11130 = OpLoad %type_3d_image_0 %View_SimpleVolumeEnvTexture
      %11131 = OpLoad %type_sampler %View_SimpleVolumeEnvTextureSampler
      %11132 = OpSampledImage %type_sampled_image_0 %11130 %11131
      %11133 = OpImageSampleExplicitLod %v4float %11132 %11129 Lod %float_0
      %11134 = OpCompositeExtract %float %11133 0
      %11135 = OpExtInst %float %1 Fma %float_10 %float_0_00158730161 %float_1
      %11136 = OpExtInst %float %1 FClamp %11135 %float_0 %float_1
      %11137 = OpFMul %float %11134 %11136
      %11138 = OpCompositeExtract %float %10659 1
      %11139 = OpCompositeConstruct %v3float %float_0 %11138 %11127
      %11140 = OpExtInst %v3float %1 Fma %487 %11139 %486
      %11141 = OpSampledImage %type_sampled_image_0 %11130 %11131
      %11142 = OpImageSampleExplicitLod %v4float %11141 %11140 Lod %float_0
      %11143 = OpCompositeExtract %float %11142 0
      %11144 = OpFMul %float %11143 %11136
      %11145 = OpCompositeExtract %float %10659 2
      %11146 = OpCompositeConstruct %v3float %float_0 %11145 %11127
      %11147 = OpExtInst %v3float %1 Fma %487 %11146 %486
      %11148 = OpSampledImage %type_sampled_image_0 %11130 %11131
      %11149 = OpImageSampleExplicitLod %v4float %11148 %11147 Lod %float_0
      %11150 = OpCompositeExtract %float %11149 0
      %11151 = OpFMul %float %11150 %11136
      %11152 = OpCompositeConstruct %v3float %11137 %11144 %11151
      %11153 = OpCompositeExtract %float %11106 0
      %11154 = OpCompositeExtract %float %11106 1
      %11155 = OpCompositeExtract %float %11106 2
      %11156 = OpExtInst %float %1 NMax %11154 %11155
      %11157 = OpExtInst %float %1 NMax %11153 %11156
      %11158 = OpExtInst %float %1 NMax %11144 %11151
      %11159 = OpExtInst %float %1 NMax %11137 %11158
      %11160 = OpFOrdLessThan %bool %11157 %11159
               OpSelectionMerge %11161 None
               OpBranchConditional %11160 %11162 %11161
      %11162 = OpLabel
      %11163 = OpFDiv %float %11157 %11159
      %11164 = OpVectorTimesScalar %v3float %11152 %11163
               OpBranch %11161
      %11161 = OpLabel
      %11165 = OpPhi %v3float %11152 %11111 %11164 %11162
      %11166 = OpVectorTimesScalar %v3float %11165 %11105
      %11167 = OpCompositeConstruct %v3float %11118 %11118 %11118
      %11168 = OpExtInst %v3float %1 FMix %11106 %11166 %11167
               OpBranch %11110
      %11110 = OpLabel
      %11169 = OpPhi %v3float %11106 %10918 %11168 %11161
      %11170 = OpIEqual %bool %11108 %uint_1
               OpSelectionMerge %11171 DontFlatten
               OpBranchConditional %11170 %11172 %11171
      %11172 = OpLabel
      %11173 = OpExtInst %v3float %1 NMax %349 %541
      %11174 = OpFDiv %v3float %125 %11173
      %11175 = OpExtInst %v3float %1 NMax %338 %11174
      %11176 = OpExtInst %float %1 FAbs %float_1
      %11177 = OpExtInst %float %1 NMax %float_9_99999975en05 %11176
      %11178 = OpFDiv %float %float_1 %11177
      %11179 = OpFNegate %v3float %11175
      %11180 = OpVectorTimesScalar %v3float %11179 %11178
      %11181 = OpExtInst %v3float %1 Exp %11180
      %11182 = OpFMul %v3float %488 %11181
      %11183 = OpVectorTimesScalar %v3float %11182 %11105
               OpBranch %11171
      %11171 = OpLabel
      %11184 = OpPhi %v3float %452 %11110 %11183 %11172
      %11185 = OpShiftRightLogical %uint %10799 %uint_9
      %11186 = OpBitwiseAnd %uint %11185 %uint_1
      %11187 = OpINotEqual %bool %11186 %uint_0
               OpSelectionMerge %11188 DontFlatten
               OpBranchConditional %11187 %11189 %11188
      %11189 = OpLabel
      %11190 = OpVectorTimesScalar %v3float %11083 %float_1
      %11191 = OpVectorTimesScalar %v3float %11169 %float_1
               OpBranch %10917
      %11188 = OpLabel
               OpBranch %10917
      %10917 = OpLabel
      %11192 = OpPhi %v3float %452 %10908 %10922 %10920 %11082 %10919 %11191 %11189 %11169 %11188
      %11193 = OpPhi %v3float %452 %10908 %10913 %10920 %10927 %10919 %10913 %11189 %10913 %11188
      %11194 = OpPhi %v3float %452 %10908 %452 %10920 %452 %10919 %11184 %11189 %11184 %11188
      %11195 = OpPhi %v3float %452 %10908 %10921 %10920 %452 %10919 %11190 %11189 %11083 %11188
      %11196 = OpFOrdGreaterThan %v3bool %11194 %100
      %11197 = OpAny %bool %11196
               OpSelectionMerge %11198 None
               OpBranchConditional %8533 %11199 %11198
      %11199 = OpLabel
      %11200 = OpCompositeExtract %float %11193 0
      %11201 = OpCompositeExtract %float %11193 1
      %11202 = OpCompositeExtract %float %11193 2
      %11203 = OpCompositeConstruct %v4float %11200 %11201 %11202 %float_1
      %11204 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_0
      %11205 = OpLoad %v4float %11204
      %11206 = OpDot %float %11205 %11203
      %11207 = OpCompositeInsert %v3float %11206 %539 0
      %11208 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_1
      %11209 = OpLoad %v4float %11208
      %11210 = OpDot %float %11209 %11203
      %11211 = OpCompositeInsert %v3float %11210 %11207 1
      %11212 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_2
      %11213 = OpLoad %v4float %11212
      %11214 = OpDot %float %11213 %11203
      %11215 = OpCompositeInsert %v3float %11214 %11211 2
      %11216 = OpVectorShuffle %v4float %11203 %11203 0 1 2 2
      %11217 = OpVectorShuffle %v4float %11203 %11203 1 2 2 0
      %11218 = OpFMul %v4float %11216 %11217
      %11219 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_3
      %11220 = OpLoad %v4float %11219
      %11221 = OpDot %float %11220 %11218
      %11222 = OpCompositeInsert %v3float %11221 %539 0
      %11223 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_4
      %11224 = OpLoad %v4float %11223
      %11225 = OpDot %float %11224 %11218
      %11226 = OpCompositeInsert %v3float %11225 %11222 1
      %11227 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_5
      %11228 = OpLoad %v4float %11227
      %11229 = OpDot %float %11228 %11218
      %11230 = OpCompositeInsert %v3float %11229 %11226 2
      %11231 = OpFMul %float %11201 %11201
      %11232 = OpFNegate %float %11231
      %11233 = OpExtInst %float %1 Fma %11200 %11200 %11232
      %11234 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_6
      %11235 = OpLoad %v4float %11234
      %11236 = OpVectorShuffle %v3float %11235 %11235 0 1 2
      %11237 = OpVectorTimesScalar %v3float %11236 %11233
      %11238 = OpFAdd %v3float %11215 %11230
      %11239 = OpFAdd %v3float %11238 %11237
      %11240 = OpExtInst %v3float %1 NMax %100 %11239
      %11241 = OpVectorShuffle %v3float %607 %607 0 1 2
      %11242 = OpFMul %v3float %11240 %11241
      %11243 = OpVectorTimesScalar %v3float %11242 %float_1
               OpSelectionMerge %11244 None
               OpBranchConditional %11197 %11245 %11244
      %11245 = OpLabel
      %11246 = OpFNegate %v3float %11193
      %11247 = OpCompositeExtract %float %11246 0
      %11248 = OpCompositeExtract %float %11246 1
      %11249 = OpCompositeExtract %float %11246 2
      %11250 = OpCompositeConstruct %v4float %11247 %11248 %11249 %float_1
      %11251 = OpLoad %v4float %11204
      %11252 = OpDot %float %11251 %11250
      %11253 = OpCompositeInsert %v3float %11252 %539 0
      %11254 = OpLoad %v4float %11208
      %11255 = OpDot %float %11254 %11250
      %11256 = OpCompositeInsert %v3float %11255 %11253 1
      %11257 = OpLoad %v4float %11212
      %11258 = OpDot %float %11257 %11250
      %11259 = OpCompositeInsert %v3float %11258 %11256 2
      %11260 = OpVectorShuffle %v4float %11250 %11250 0 1 2 2
      %11261 = OpVectorShuffle %v4float %11250 %11250 1 2 2 0
      %11262 = OpFMul %v4float %11260 %11261
      %11263 = OpLoad %v4float %11219
      %11264 = OpDot %float %11263 %11262
      %11265 = OpCompositeInsert %v3float %11264 %539 0
      %11266 = OpLoad %v4float %11223
      %11267 = OpDot %float %11266 %11262
      %11268 = OpCompositeInsert %v3float %11267 %11265 1
      %11269 = OpLoad %v4float %11227
      %11270 = OpDot %float %11269 %11262
      %11271 = OpCompositeInsert %v3float %11270 %11268 2
      %11272 = OpFMul %float %11248 %11248
      %11273 = OpFNegate %float %11272
      %11274 = OpExtInst %float %1 Fma %11247 %11247 %11273
      %11275 = OpLoad %v4float %11234
      %11276 = OpVectorShuffle %v3float %11275 %11275 0 1 2
      %11277 = OpVectorTimesScalar %v3float %11276 %11274
      %11278 = OpFAdd %v3float %11259 %11271
      %11279 = OpFAdd %v3float %11278 %11277
      %11280 = OpExtInst %v3float %1 NMax %100 %11279
      %11281 = OpFMul %v3float %11280 %11241
      %11282 = OpVectorTimesScalar %v3float %11281 %float_1
               OpBranch %11244
      %11244 = OpLabel
      %11283 = OpPhi %v3float %100 %11199 %11282 %11245
               OpBranch %11198
      %11198 = OpLabel
      %11284 = OpPhi %v3float %100 %10917 %11243 %11244
      %11285 = OpPhi %v3float %100 %10917 %11283 %11244
      %11286 = OpVectorTimesScalar %v3float %11195 %float_2_04040003
      %11287 = OpFSub %v3float %11286 %172
      %11288 = OpVectorTimesScalar %v3float %11195 %float_n4_79510021
      %11289 = OpFAdd %v3float %11288 %175
      %11290 = OpVectorTimesScalar %v3float %11195 %float_2_75519991
      %11291 = OpFAdd %v3float %11290 %178
      %11292 = OpVectorTimesScalar %v3float %11287 %float_1
      %11293 = OpFAdd %v3float %11292 %11289
      %11294 = OpVectorTimesScalar %v3float %11293 %float_1
      %11295 = OpFAdd %v3float %11294 %11291
      %11296 = OpVectorTimesScalar %v3float %11295 %float_1
      %11297 = OpExtInst %v3float %1 NMax %125 %11296
      %11298 = OpExtInst %v3float %1 NMax %125 %509
      %11299 = OpCompositeExtract %float %11298 1
      %11300 = OpCompositeInsert %v2float %11299 %540 0
      %11301 = OpCompositeInsert %v2float %float_0 %11300 1
      %11302 = OpFMul %v3float %11285 %11194
      %11303 = OpExtInst %v3float %1 Fma %11284 %11192 %11302
      %11304 = OpExtInst %v3float %1 Fma %11303 %11297 %10800
               OpBranch %10907
      %10907 = OpLabel
      %11305 = OpPhi %v3float %10800 %10819 %11304 %11198
      %11306 = OpPhi %float %float_0 %10819 %float_1 %11198
      %11307 = OpPhi %v2float %122 %10819 %11301 %11198
      %11308 = OpExtInst %float %1 NMax %float_1 %11306
      %11309 = OpFDiv %float %float_1 %11308
      %11310 = OpVectorTimesScalar %v2float %11307 %11309
      %11311 = OpCompositeExtract %float %11310 0
      %11312 = OpCompositeExtract %float %11310 1
      %11313 = OpBitwiseAnd %uint %10906 %uint_4294902015
      %11314 = OpFMul %float %11312 %11311
      %11315 = OpAccessChain %_ptr_Uniform_float %View %uint_13
      %11316 = OpLoad %float %11315
      %11317 = OpExtInst %float %1 Fma %11314 %11316 %float_0_00390625
      %11318 = OpExtInst %float %1 Log2 %11317
      %11319 = OpExtInst %float %1 Fma %11318 %float_0_0625 %float_0_5
      %11320 = OpFMul %float %11319 %float_255
      %11321 = OpExtInst %float %1 NMin %float_255 %11320
      %11322 = OpConvertFToU %uint %11321
      %11323 = OpBitwiseAnd %uint %11322 %uint_255
      %11324 = OpShiftLeftLogical %uint %11323 %uint_8
      %11325 = OpBitwiseOr %uint %11313 %11324
      %11326 = OpBitwiseAnd %uint %11325 %uint_7
      %11327 = OpIEqual %bool %11326 %uint_1
      %11328 = OpLogicalOr %bool %11327 %false
      %11329 = OpIEqual %bool %11326 %uint_4
      %11330 = OpIEqual %bool %11326 %uint_2
      %11331 = OpLogicalOr %bool %11330 %false
      %11332 = OpIEqual %bool %11326 %uint_5
      %11333 = OpIEqual %bool %11326 %uint_6
      %11334 = OpLogicalOr %bool %11332 %11333
      %11335 = OpLogicalNot %bool %11328
      %11336 = OpLogicalNot %bool %11331
      %11337 = OpLogicalAnd %bool %11335 %11336
      %11338 = OpLogicalNot %bool %11334
      %11339 = OpLogicalAnd %bool %11337 %11338
      %11340 = OpLogicalNot %bool %11329
      %11341 = OpLogicalAnd %bool %11339 %11340
               OpSelectionMerge %11342 None
               OpBranchConditional %11341 %11343 %11342
      %11343 = OpLabel
      %11344 = OpBitwiseAnd %uint %10809 %uint_15
      %11345 = OpShiftLeftLogical %uint %11344 %uint_16
      %11346 = OpBitwiseOr %uint %uint_0 %11345
      %11347 = OpBitwiseAnd %uint %11346 %uint_4287627263
      %11348 = OpBitwiseOr %uint %11347 %uint_1048576
      %11349 = OpBitwiseAnd %uint %11348 %uint_4169138175
      %11350 = OpBitwiseOr %uint %11349 %uint_0
      %11351 = OpBitwiseAnd %uint %11325 %uint_134217728
      %11352 = OpBitwiseOr %uint %11350 %11351
      %11353 = OpBitwiseAnd %uint %11352 %uint_4294901760
      %11354 = OpBitwiseAnd %uint %11325 %uint_65535
      %11355 = OpShiftLeftLogical %uint %11354 %uint_0
      %11356 = OpBitwiseOr %uint %11353 %11355
      %11357 = OpExtInst %v3float %1 FAbs %10655
      %11358 = OpDot %float %125 %11357
      %11359 = OpCompositeConstruct %v2float %11358 %11358
      %11360 = OpVectorShuffle %v2float %10655 %10655 0 1
      %11361 = OpFDiv %v2float %11360 %11359
      %11362 = OpVectorShuffle %v3float %10655 %11361 3 4 2
      %11363 = OpCompositeExtract %float %10655 2
      %11364 = OpFOrdLessThanEqual %bool %11363 %float_0
               OpSelectionMerge %11365 None
               OpBranchConditional %11364 %11366 %11365
      %11366 = OpLabel
      %11367 = OpVectorShuffle %v2float %11361 %452 1 0
      %11368 = OpExtInst %v2float %1 FAbs %11367
      %11369 = OpFSub %v2float %309 %11368
      %11370 = OpVectorShuffle %v2float %11361 %452 0 1
      %11371 = OpFOrdGreaterThanEqual %v2bool %11370 %122
      %11372 = OpCompositeExtract %bool %11371 0
      %11373 = OpSelect %float %11372 %float_1 %float_n1
      %11374 = OpCompositeExtract %bool %11371 1
      %11375 = OpSelect %float %11374 %float_1 %float_n1
      %11376 = OpCompositeConstruct %v2float %11373 %11375
      %11377 = OpFMul %v2float %11369 %11376
      %11378 = OpVectorShuffle %v3float %10655 %11377 3 4 2
               OpBranch %11365
      %11365 = OpLabel
      %11379 = OpPhi %v3float %11362 %11343 %11378 %11366
      %11380 = OpCompositeExtract %float %11379 0
      %11381 = OpCompositeExtract %float %11379 1
      %11382 = OpCompositeConstruct %v2float %11380 %float_0
      %11383 = OpExtInst %uint %1 PackHalf2x16 %11382
      %11384 = OpCompositeConstruct %v2float %11381 %float_0
      %11385 = OpExtInst %uint %1 PackHalf2x16 %11384
      %11386 = OpShiftLeftLogical %uint %11385 %uint_16
      %11387 = OpBitwiseOr %uint %11383 %11386
               OpBranch %11342
      %11342 = OpLabel
      %11388 = OpPhi %uint %uint_0 %10907 %11387 %11365
      %11389 = OpPhi %uint %uint_0 %10907 %11356 %11365
      %11390 = OpSelect %uint %11341 %uint_2 %uint_0
               OpSelectionMerge %11391 DontFlatten
               OpBranchConditional %10676 %11392 %11391
      %11392 = OpLabel
      %11393 = OpBitwiseAnd %uint %10799 %uint_4294967263
      %11394 = OpBitwiseOr %uint %11393 %uint_32
      %11395 = OpAny %bool %543
      %11396 = OpBitwiseAnd %uint %11394 %uint_4294901759
      %11397 = OpSelect %uint %11395 %uint_1 %uint_0
      %11398 = OpBitwiseAnd %uint %11397 %uint_1
      %11399 = OpShiftLeftLogical %uint %11398 %uint_16
      %11400 = OpBitwiseOr %uint %11396 %11399
      %11401 = OpLogicalAnd %bool %11328 %true
               OpSelectionMerge %11402 None
               OpBranchConditional %11401 %11403 %11404
      %11404 = OpLabel
      %11405 = OpLogicalAnd %bool %11331 %true
               OpSelectionMerge %11406 None
               OpBranchConditional %11405 %11407 %11408
      %11408 = OpLabel
               OpSelectionMerge %11409 None
               OpBranchConditional %11333 %11410 %11411
      %11411 = OpLabel
               OpSelectionMerge %11412 None
               OpBranchConditional %11332 %11413 %11414
      %11414 = OpLabel
               OpSelectionMerge %11415 None
               OpBranchConditional %11329 %11416 %11417
      %11417 = OpLabel
      %11418 = OpBitwiseAnd %uint %11400 %uint_4194303
      %11419 = OpExtInst %uint %1 PackHalf2x16 %273
      %11420 = OpShiftRightLogical %uint %11419 %uint_5
      %11421 = OpBitwiseAnd %uint %11420 %uint_1023
      %11422 = OpBitwiseAnd %uint %11421 %uint_1023
      %11423 = OpShiftLeftLogical %uint %11422 %uint_22
      %11424 = OpBitwiseOr %uint %11418 %11423
      %11425 = OpULessThan %bool %11390 %uint_3
               OpSelectionMerge %11426 None
               OpBranchConditional %11425 %11427 %11428
      %11428 = OpLabel
      %11429 = OpISub %uint %11390 %uint_3
      %11430 = OpCompositeExtract %uint %10656 0
      %11431 = OpCompositeExtract %uint %10656 1
      %11432 = OpCompositeConstruct %v3uint %11430 %11431 %11429
               OpImageWrite %10657 %11432 %11424 None
               OpBranch %11426
      %11427 = OpLabel
      %11433 = OpIEqual %bool %11390 %uint_0
      %11434 = OpSelect %uint %11433 %11424 %11389
      %11435 = OpIEqual %bool %11390 %uint_1
      %11436 = OpSelect %uint %11435 %11424 %11388
      %11437 = OpIEqual %bool %11390 %uint_2
      %11438 = OpSelect %uint %11437 %11424 %uint_0
               OpBranch %11426
      %11426 = OpLabel
      %11439 = OpPhi %uint %uint_0 %11428 %11438 %11427
      %11440 = OpPhi %uint %11388 %11428 %11436 %11427
      %11441 = OpPhi %uint %11389 %11428 %11434 %11427
      %11442 = OpIAdd %uint %11390 %uint_1
               OpBranch %11415
      %11416 = OpLabel
      %11443 = OpVectorShuffle %v3float %10659 %451 0 1 2
      %11444 = OpFSub %float %8376 %float_0_5
      %11445 = OpFMul %float %11444 %float_0_00787401572
      %11446 = OpFMul %float %11444 %float_0_0158730168
      %11447 = OpCompositeConstruct %v3float %11445 %11445 %11446
      %11448 = OpExtInst %v3float %1 FClamp %11443 %100 %125
      %11449 = OpCompositeExtract %float %11448 0
               OpSelectionMerge %11450 None
               OpSwitch %uint_0 %11451
      %11451 = OpLabel
      %11452 = OpFOrdLessThan %bool %11449 %float_0_00313066994
               OpSelectionMerge %11453 None
               OpBranchConditional %11452 %11454 %11453
      %11454 = OpLabel
      %11455 = OpFMul %float %11449 %float_12_9200001
               OpBranch %11450
      %11453 = OpLabel
      %11456 = OpExtInst %float %1 Pow %11449 %float_0_416666657
      %11457 = OpExtInst %float %1 Fma %11456 %float_1_05499995 %float_n0_0549999997
               OpBranch %11450
      %11450 = OpLabel
      %11458 = OpPhi %float %11455 %11454 %11457 %11453
      %11459 = OpCompositeExtract %float %11448 1
               OpSelectionMerge %11460 None
               OpSwitch %uint_0 %11461
      %11461 = OpLabel
      %11462 = OpFOrdLessThan %bool %11459 %float_0_00313066994
               OpSelectionMerge %11463 None
               OpBranchConditional %11462 %11464 %11463
      %11464 = OpLabel
      %11465 = OpFMul %float %11459 %float_12_9200001
               OpBranch %11460
      %11463 = OpLabel
      %11466 = OpExtInst %float %1 Pow %11459 %float_0_416666657
      %11467 = OpExtInst %float %1 Fma %11466 %float_1_05499995 %float_n0_0549999997
               OpBranch %11460
      %11460 = OpLabel
      %11468 = OpPhi %float %11465 %11464 %11467 %11463
      %11469 = OpCompositeExtract %float %11448 2
               OpSelectionMerge %11470 None
               OpSwitch %uint_0 %11471
      %11471 = OpLabel
      %11472 = OpFOrdLessThan %bool %11469 %float_0_00313066994
               OpSelectionMerge %11473 None
               OpBranchConditional %11472 %11474 %11473
      %11474 = OpLabel
      %11475 = OpFMul %float %11469 %float_12_9200001
               OpBranch %11470
      %11473 = OpLabel
      %11476 = OpExtInst %float %1 Pow %11469 %float_0_416666657
      %11477 = OpExtInst %float %1 Fma %11476 %float_1_05499995 %float_n0_0549999997
               OpBranch %11470
      %11470 = OpLabel
      %11478 = OpPhi %float %11475 %11474 %11477 %11473
      %11479 = OpCompositeConstruct %v3float %11458 %11468 %11478
      %11480 = OpBitcast %v3uint %11479
      %11481 = OpBitwiseAnd %v3uint %11480 %342
      %11482 = OpExtInst %v3uint %1 UMin %11481 %490
      %11483 = OpConvertUToF %v3float %11482
      %11484 = OpExtInst %v3float %1 Fma %11447 %11483 %11479
      %11485 = OpExtInst %v3float %1 FClamp %11484 %100 %125
      %11486 = OpCompositeExtract %float %11485 0
      %11487 = OpFMul %float %11486 %float_127
      %11488 = OpConvertFToU %uint %11487
      %11489 = OpShiftLeftLogical %uint %11488 %uint_0
      %11490 = OpCompositeExtract %float %11485 1
      %11491 = OpFMul %float %11490 %float_127
      %11492 = OpConvertFToU %uint %11491
      %11493 = OpShiftLeftLogical %uint %11492 %uint_7
      %11494 = OpCompositeExtract %float %11485 2
      %11495 = OpFMul %float %11494 %float_63
      %11496 = OpConvertFToU %uint %11495
      %11497 = OpShiftLeftLogical %uint %11496 %uint_14
      %11498 = OpBitwiseOr %uint %11489 %11493
      %11499 = OpBitwiseOr %uint %11498 %11497
      %11500 = OpBitwiseAnd %uint %11499 %uint_4095
      %11501 = OpShiftRightLogical %uint %11499 %uint_12
      %11502 = OpBitwiseAnd %uint %11501 %uint_255
      %11503 = OpExtInst %float %1 FClamp %10666 %float_0 %float_1
      %11504 = OpFMul %float %11503 %float_255
      %11505 = OpConvertFToU %uint %11504
      %11506 = OpCompositeConstruct %v3float %10668 %float_0 %10662
      %11507 = OpExtInst %v3float %1 FClamp %11506 %100 %125
      %11508 = OpBitcast %v3uint %11507
      %11509 = OpBitwiseAnd %v3uint %11508 %342
      %11510 = OpExtInst %v3uint %1 UMin %11509 %490
      %11511 = OpConvertUToF %v3float %11510
      %11512 = OpExtInst %v3float %1 Fma %11447 %11511 %11507
      %11513 = OpExtInst %v3float %1 FClamp %11512 %100 %125
      %11514 = OpCompositeExtract %float %11513 0
      %11515 = OpFMul %float %11514 %float_127
      %11516 = OpConvertFToU %uint %11515
      %11517 = OpShiftLeftLogical %uint %11516 %uint_0
      %11518 = OpCompositeExtract %float %11513 1
      %11519 = OpFMul %float %11518 %float_127
      %11520 = OpConvertFToU %uint %11519
      %11521 = OpShiftLeftLogical %uint %11520 %uint_7
      %11522 = OpCompositeExtract %float %11513 2
      %11523 = OpFMul %float %11522 %float_63
      %11524 = OpConvertFToU %uint %11523
      %11525 = OpShiftLeftLogical %uint %11524 %uint_14
      %11526 = OpBitwiseOr %uint %11517 %11521
      %11527 = OpBitwiseOr %uint %11526 %11525
      %11528 = OpBitwiseAnd %uint %11325 %uint_65535
      %11529 = OpShiftLeftLogical %uint %11528 %uint_0
      %11530 = OpBitwiseOr %uint %uint_0 %11529
      %11531 = OpShiftLeftLogical %uint %11502 %uint_8
      %11532 = OpBitwiseOr %uint %11531 %11505
      %11533 = OpBitwiseAnd %uint %11530 %uint_65535
      %11534 = OpShiftLeftLogical %uint %11532 %uint_16
      %11535 = OpBitwiseOr %uint %11533 %11534
      %11536 = OpULessThan %bool %11390 %uint_3
               OpSelectionMerge %11537 None
               OpBranchConditional %11536 %11538 %11539
      %11539 = OpLabel
      %11540 = OpISub %uint %11390 %uint_3
      %11541 = OpCompositeExtract %uint %10656 0
      %11542 = OpCompositeExtract %uint %10656 1
      %11543 = OpCompositeConstruct %v3uint %11541 %11542 %11540
               OpImageWrite %10657 %11543 %11535 None
               OpBranch %11537
      %11538 = OpLabel
      %11544 = OpIEqual %bool %11390 %uint_0
      %11545 = OpSelect %uint %11544 %11535 %11389
      %11546 = OpIEqual %bool %11390 %uint_1
      %11547 = OpSelect %uint %11546 %11535 %11388
      %11548 = OpIEqual %bool %11390 %uint_2
      %11549 = OpSelect %uint %11548 %11535 %uint_0
               OpBranch %11537
      %11537 = OpLabel
      %11550 = OpPhi %uint %uint_0 %11539 %11549 %11538
      %11551 = OpPhi %uint %11388 %11539 %11547 %11538
      %11552 = OpPhi %uint %11389 %11539 %11545 %11538
      %11553 = OpIAdd %uint %11390 %uint_1
      %11554 = OpShiftLeftLogical %uint %11500 %uint_20
      %11555 = OpBitwiseOr %uint %11554 %11527
      %11556 = OpULessThan %bool %11553 %uint_3
               OpSelectionMerge %11557 None
               OpBranchConditional %11556 %11558 %11559
      %11559 = OpLabel
      %11560 = OpIAdd %uint %11390 %uint_4294967294
      %11561 = OpCompositeExtract %uint %10656 0
      %11562 = OpCompositeExtract %uint %10656 1
      %11563 = OpCompositeConstruct %v3uint %11561 %11562 %11560
               OpImageWrite %10657 %11563 %11555 None
               OpBranch %11557
      %11558 = OpLabel
      %11564 = OpIEqual %bool %11553 %uint_0
      %11565 = OpSelect %uint %11564 %11555 %11552
      %11566 = OpIEqual %bool %11553 %uint_1
      %11567 = OpSelect %uint %11566 %11555 %11551
      %11568 = OpIEqual %bool %11553 %uint_2
      %11569 = OpSelect %uint %11568 %11555 %11550
               OpBranch %11557
      %11557 = OpLabel
      %11570 = OpPhi %uint %11550 %11559 %11569 %11558
      %11571 = OpPhi %uint %11551 %11559 %11567 %11558
      %11572 = OpPhi %uint %11552 %11559 %11565 %11558
      %11573 = OpIAdd %uint %11390 %uint_2
               OpBranch %11415
      %11415 = OpLabel
      %11574 = OpPhi %uint %11424 %11426 %uint_0 %11557
      %11575 = OpPhi %uint %11439 %11426 %11570 %11557
      %11576 = OpPhi %uint %11440 %11426 %11571 %11557
      %11577 = OpPhi %uint %11441 %11426 %11572 %11557
      %11578 = OpPhi %uint %11442 %11426 %11573 %11557
               OpBranch %11412
      %11413 = OpLabel
      %11579 = OpBitwiseAnd %uint %11325 %uint_65535
      %11580 = OpShiftLeftLogical %uint %11579 %uint_0
      %11581 = OpBitwiseOr %uint %uint_0 %11580
      %11582 = OpBitwiseAnd %uint %11581 %uint_65535
      %11583 = OpULessThan %bool %11390 %uint_3
               OpSelectionMerge %11584 None
               OpBranchConditional %11583 %11585 %11586
      %11586 = OpLabel
      %11587 = OpISub %uint %11390 %uint_3
      %11588 = OpCompositeExtract %uint %10656 0
      %11589 = OpCompositeExtract %uint %10656 1
      %11590 = OpCompositeConstruct %v3uint %11588 %11589 %11587
               OpImageWrite %10657 %11590 %11582 None
               OpBranch %11584
      %11585 = OpLabel
      %11591 = OpIEqual %bool %11390 %uint_0
      %11592 = OpSelect %uint %11591 %11582 %11389
      %11593 = OpIEqual %bool %11390 %uint_1
      %11594 = OpSelect %uint %11593 %11582 %11388
      %11595 = OpIEqual %bool %11390 %uint_2
      %11596 = OpSelect %uint %11595 %11582 %uint_0
               OpBranch %11584
      %11584 = OpLabel
      %11597 = OpPhi %uint %uint_0 %11586 %11596 %11585
      %11598 = OpPhi %uint %11388 %11586 %11594 %11585
      %11599 = OpPhi %uint %11389 %11586 %11592 %11585
      %11600 = OpIAdd %uint %11390 %uint_1
               OpBranch %11412
      %11412 = OpLabel
      %11601 = OpPhi %uint %11574 %11415 %11400 %11584
      %11602 = OpPhi %uint %11575 %11415 %11597 %11584
      %11603 = OpPhi %uint %11576 %11415 %11598 %11584
      %11604 = OpPhi %uint %11577 %11415 %11599 %11584
      %11605 = OpPhi %uint %11578 %11415 %11600 %11584
               OpBranch %11409
      %11410 = OpLabel
      %11606 = OpBitwiseAnd %uint %11325 %uint_65535
      %11607 = OpShiftLeftLogical %uint %11606 %uint_0
      %11608 = OpBitwiseOr %uint %uint_0 %11607
      %11609 = OpBitwiseAnd %uint %11608 %uint_65535
      %11610 = OpExtInst %float %1 FClamp %10662 %float_0 %float_1
      %11611 = OpFMul %float %11610 %float_255
      %11612 = OpConvertFToU %uint %11611
      %11613 = OpShiftLeftLogical %uint %11612 %uint_16
      %11614 = OpBitwiseOr %uint %uint_0 %11613
      %11615 = OpBitwiseOr %uint %11614 %uint_0
      %11616 = OpBitwiseOr %uint %11609 %11615
      %11617 = OpULessThan %bool %11390 %uint_3
               OpSelectionMerge %11618 None
               OpBranchConditional %11617 %11619 %11620
      %11620 = OpLabel
      %11621 = OpISub %uint %11390 %uint_3
      %11622 = OpCompositeExtract %uint %10656 0
      %11623 = OpCompositeExtract %uint %10656 1
      %11624 = OpCompositeConstruct %v3uint %11622 %11623 %11621
               OpImageWrite %10657 %11624 %11616 None
               OpBranch %11618
      %11619 = OpLabel
      %11625 = OpIEqual %bool %11390 %uint_0
      %11626 = OpSelect %uint %11625 %11616 %11389
      %11627 = OpIEqual %bool %11390 %uint_1
      %11628 = OpSelect %uint %11627 %11616 %11388
      %11629 = OpIEqual %bool %11390 %uint_2
      %11630 = OpSelect %uint %11629 %11616 %uint_0
               OpBranch %11618
      %11618 = OpLabel
      %11631 = OpPhi %uint %uint_0 %11620 %11630 %11619
      %11632 = OpPhi %uint %11388 %11620 %11628 %11619
      %11633 = OpPhi %uint %11389 %11620 %11626 %11619
      %11634 = OpIAdd %uint %11390 %uint_1
               OpBranch %11409
      %11409 = OpLabel
      %11635 = OpPhi %uint %11601 %11412 %11400 %11618
      %11636 = OpPhi %uint %11602 %11412 %11631 %11618
      %11637 = OpPhi %uint %11603 %11412 %11632 %11618
      %11638 = OpPhi %uint %11604 %11412 %11633 %11618
      %11639 = OpPhi %uint %11605 %11412 %11634 %11618
               OpBranch %11406
      %11407 = OpLabel
      %11640 = OpBitwiseAnd %uint %11400 %uint_4294967293
      %11641 = OpBitwiseOr %uint %11640 %uint_2
      %11642 = OpBitwiseAnd %uint %11325 %uint_65535
      %11643 = OpShiftLeftLogical %uint %11642 %uint_0
      %11644 = OpBitwiseOr %uint %uint_0 %11643
      %11645 = OpBitwiseAnd %uint %11644 %uint_65535
      %11646 = OpBitwiseAnd %uint %10904 %uint_7
      %11647 = OpShiftLeftLogical %uint %11646 %uint_16
      %11648 = OpBitwiseOr %uint %11645 %11647
      %11649 = OpIEqual %bool %10904 %uint_0
               OpSelectionMerge %11650 DontFlatten
               OpBranchConditional %11649 %11651 %11652
      %11652 = OpLabel
      %11653 = OpIEqual %bool %10904 %uint_1
               OpSelectionMerge %11654 None
               OpBranchConditional %11653 %11655 %11656
      %11656 = OpLabel
      %11657 = OpIEqual %bool %10904 %uint_2
               OpSelectionMerge %11658 None
               OpBranchConditional %11657 %11659 %11660
      %11660 = OpLabel
      %11661 = OpIEqual %bool %10904 %uint_3
      %11662 = OpIEqual %bool %10904 %uint_5
      %11663 = OpLogicalOr %bool %11661 %11662
               OpSelectionMerge %11664 None
               OpBranchConditional %11663 %11665 %11666
      %11666 = OpLabel
      %11667 = OpIEqual %bool %10904 %uint_4
               OpSelectionMerge %11668 None
               OpBranchConditional %11667 %11669 %11668
      %11669 = OpLabel
      %11670 = OpVectorShuffle %v3float %10659 %451 0 1 2
      %11671 = OpFSub %float %8376 %float_0_5
      %11672 = OpFMul %float %11671 %float_0_00787401572
      %11673 = OpFMul %float %11671 %float_0_0158730168
      %11674 = OpCompositeConstruct %v3float %11672 %11672 %11673
      %11675 = OpExtInst %v3float %1 FClamp %11670 %100 %125
      %11676 = OpCompositeExtract %float %11675 0
               OpSelectionMerge %11677 None
               OpSwitch %uint_0 %11678
      %11678 = OpLabel
      %11679 = OpFOrdLessThan %bool %11676 %float_0_00313066994
               OpSelectionMerge %11680 None
               OpBranchConditional %11679 %11681 %11680
      %11681 = OpLabel
      %11682 = OpFMul %float %11676 %float_12_9200001
               OpBranch %11677
      %11680 = OpLabel
      %11683 = OpExtInst %float %1 Pow %11676 %float_0_416666657
      %11684 = OpExtInst %float %1 Fma %11683 %float_1_05499995 %float_n0_0549999997
               OpBranch %11677
      %11677 = OpLabel
      %11685 = OpPhi %float %11682 %11681 %11684 %11680
      %11686 = OpCompositeExtract %float %11675 1
               OpSelectionMerge %11687 None
               OpSwitch %uint_0 %11688
      %11688 = OpLabel
      %11689 = OpFOrdLessThan %bool %11686 %float_0_00313066994
               OpSelectionMerge %11690 None
               OpBranchConditional %11689 %11691 %11690
      %11691 = OpLabel
      %11692 = OpFMul %float %11686 %float_12_9200001
               OpBranch %11687
      %11690 = OpLabel
      %11693 = OpExtInst %float %1 Pow %11686 %float_0_416666657
      %11694 = OpExtInst %float %1 Fma %11693 %float_1_05499995 %float_n0_0549999997
               OpBranch %11687
      %11687 = OpLabel
      %11695 = OpPhi %float %11692 %11691 %11694 %11690
      %11696 = OpCompositeExtract %float %11675 2
               OpSelectionMerge %11697 None
               OpSwitch %uint_0 %11698
      %11698 = OpLabel
      %11699 = OpFOrdLessThan %bool %11696 %float_0_00313066994
               OpSelectionMerge %11700 None
               OpBranchConditional %11699 %11701 %11700
      %11701 = OpLabel
      %11702 = OpFMul %float %11696 %float_12_9200001
               OpBranch %11697
      %11700 = OpLabel
      %11703 = OpExtInst %float %1 Pow %11696 %float_0_416666657
      %11704 = OpExtInst %float %1 Fma %11703 %float_1_05499995 %float_n0_0549999997
               OpBranch %11697
      %11697 = OpLabel
      %11705 = OpPhi %float %11702 %11701 %11704 %11700
      %11706 = OpCompositeConstruct %v3float %11685 %11695 %11705
      %11707 = OpBitcast %v3uint %11706
      %11708 = OpBitwiseAnd %v3uint %11707 %342
      %11709 = OpExtInst %v3uint %1 UMin %11708 %490
      %11710 = OpConvertUToF %v3float %11709
      %11711 = OpExtInst %v3float %1 Fma %11674 %11710 %11706
      %11712 = OpExtInst %v3float %1 FClamp %11711 %100 %125
      %11713 = OpCompositeExtract %float %11712 0
      %11714 = OpFMul %float %11713 %float_127
      %11715 = OpConvertFToU %uint %11714
      %11716 = OpShiftLeftLogical %uint %11715 %uint_0
      %11717 = OpCompositeExtract %float %11712 1
      %11718 = OpFMul %float %11717 %float_127
      %11719 = OpConvertFToU %uint %11718
      %11720 = OpShiftLeftLogical %uint %11719 %uint_7
      %11721 = OpCompositeExtract %float %11712 2
      %11722 = OpFMul %float %11721 %float_63
      %11723 = OpConvertFToU %uint %11722
      %11724 = OpShiftLeftLogical %uint %11723 %uint_14
      %11725 = OpBitwiseOr %uint %11716 %11720
      %11726 = OpBitwiseOr %uint %11725 %11724
      %11727 = OpVectorShuffle %v3float %10669 %10669 0 1 2
      %11728 = OpExtInst %v3float %1 FClamp %11727 %100 %125
      %11729 = OpCompositeExtract %float %11728 0
               OpSelectionMerge %11730 None
               OpSwitch %uint_0 %11731
      %11731 = OpLabel
      %11732 = OpFOrdLessThan %bool %11729 %float_0_00313066994
               OpSelectionMerge %11733 None
               OpBranchConditional %11732 %11734 %11733
      %11734 = OpLabel
      %11735 = OpFMul %float %11729 %float_12_9200001
               OpBranch %11730
      %11733 = OpLabel
      %11736 = OpExtInst %float %1 Pow %11729 %float_0_416666657
      %11737 = OpExtInst %float %1 Fma %11736 %float_1_05499995 %float_n0_0549999997
               OpBranch %11730
      %11730 = OpLabel
      %11738 = OpPhi %float %11735 %11734 %11737 %11733
      %11739 = OpCompositeExtract %float %11728 1
               OpSelectionMerge %11740 None
               OpSwitch %uint_0 %11741
      %11741 = OpLabel
      %11742 = OpFOrdLessThan %bool %11739 %float_0_00313066994
               OpSelectionMerge %11743 None
               OpBranchConditional %11742 %11744 %11743
      %11744 = OpLabel
      %11745 = OpFMul %float %11739 %float_12_9200001
               OpBranch %11740
      %11743 = OpLabel
      %11746 = OpExtInst %float %1 Pow %11739 %float_0_416666657
      %11747 = OpExtInst %float %1 Fma %11746 %float_1_05499995 %float_n0_0549999997
               OpBranch %11740
      %11740 = OpLabel
      %11748 = OpPhi %float %11745 %11744 %11747 %11743
      %11749 = OpCompositeExtract %float %11728 2
               OpSelectionMerge %11750 None
               OpSwitch %uint_0 %11751
      %11751 = OpLabel
      %11752 = OpFOrdLessThan %bool %11749 %float_0_00313066994
               OpSelectionMerge %11753 None
               OpBranchConditional %11752 %11754 %11753
      %11754 = OpLabel
      %11755 = OpFMul %float %11749 %float_12_9200001
               OpBranch %11750
      %11753 = OpLabel
      %11756 = OpExtInst %float %1 Pow %11749 %float_0_416666657
      %11757 = OpExtInst %float %1 Fma %11756 %float_1_05499995 %float_n0_0549999997
               OpBranch %11750
      %11750 = OpLabel
      %11758 = OpPhi %float %11755 %11754 %11757 %11753
      %11759 = OpCompositeConstruct %v3float %11738 %11748 %11758
      %11760 = OpBitcast %v3uint %11759
      %11761 = OpBitwiseAnd %v3uint %11760 %342
      %11762 = OpExtInst %v3uint %1 UMin %11761 %490
      %11763 = OpConvertUToF %v3float %11762
      %11764 = OpExtInst %v3float %1 Fma %11674 %11763 %11759
      %11765 = OpExtInst %v3float %1 FClamp %11764 %100 %125
      %11766 = OpCompositeExtract %float %11765 0
      %11767 = OpFMul %float %11766 %float_127
      %11768 = OpConvertFToU %uint %11767
      %11769 = OpShiftLeftLogical %uint %11768 %uint_0
      %11770 = OpCompositeExtract %float %11765 1
      %11771 = OpFMul %float %11770 %float_127
      %11772 = OpConvertFToU %uint %11771
      %11773 = OpShiftLeftLogical %uint %11772 %uint_7
      %11774 = OpCompositeExtract %float %11765 2
      %11775 = OpFMul %float %11774 %float_63
      %11776 = OpConvertFToU %uint %11775
      %11777 = OpShiftLeftLogical %uint %11776 %uint_14
      %11778 = OpBitwiseOr %uint %11769 %11773
      %11779 = OpBitwiseOr %uint %11778 %11777
      %11780 = OpBitwiseOr %uint %11648 %uint_0
      %11781 = OpULessThan %bool %11390 %uint_3
               OpSelectionMerge %11782 None
               OpBranchConditional %11781 %11783 %11784
      %11784 = OpLabel
      %11785 = OpISub %uint %11390 %uint_3
      %11786 = OpCompositeExtract %uint %10656 0
      %11787 = OpCompositeExtract %uint %10656 1
      %11788 = OpCompositeConstruct %v3uint %11786 %11787 %11785
               OpImageWrite %10657 %11788 %11780 None
               OpBranch %11782
      %11783 = OpLabel
      %11789 = OpIEqual %bool %11390 %uint_0
      %11790 = OpSelect %uint %11789 %11780 %11389
      %11791 = OpIEqual %bool %11390 %uint_1
      %11792 = OpSelect %uint %11791 %11780 %11388
      %11793 = OpIEqual %bool %11390 %uint_2
      %11794 = OpSelect %uint %11793 %11780 %uint_0
               OpBranch %11782
      %11782 = OpLabel
      %11795 = OpPhi %uint %uint_0 %11784 %11794 %11783
      %11796 = OpPhi %uint %11388 %11784 %11792 %11783
      %11797 = OpPhi %uint %11389 %11784 %11790 %11783
      %11798 = OpIAdd %uint %11390 %uint_1
      %11799 = OpBitwiseOr %uint %11726 %uint_0
      %11800 = OpULessThan %bool %11798 %uint_3
               OpSelectionMerge %11801 None
               OpBranchConditional %11800 %11802 %11803
      %11803 = OpLabel
      %11804 = OpIAdd %uint %11390 %uint_4294967294
      %11805 = OpCompositeExtract %uint %10656 0
      %11806 = OpCompositeExtract %uint %10656 1
      %11807 = OpCompositeConstruct %v3uint %11805 %11806 %11804
               OpImageWrite %10657 %11807 %11799 None
               OpBranch %11801
      %11802 = OpLabel
      %11808 = OpIEqual %bool %11798 %uint_0
      %11809 = OpSelect %uint %11808 %11799 %11797
      %11810 = OpIEqual %bool %11798 %uint_1
      %11811 = OpSelect %uint %11810 %11799 %11796
      %11812 = OpIEqual %bool %11798 %uint_2
      %11813 = OpSelect %uint %11812 %11799 %11795
               OpBranch %11801
      %11801 = OpLabel
      %11814 = OpPhi %uint %11795 %11803 %11813 %11802
      %11815 = OpPhi %uint %11796 %11803 %11811 %11802
      %11816 = OpPhi %uint %11797 %11803 %11809 %11802
      %11817 = OpIAdd %uint %11390 %uint_2
      %11818 = OpBitwiseOr %uint %11779 %uint_0
      %11819 = OpULessThan %bool %11817 %uint_3
               OpSelectionMerge %11820 None
               OpBranchConditional %11819 %11821 %11822
      %11822 = OpLabel
      %11823 = OpIAdd %uint %11390 %uint_4294967295
      %11824 = OpCompositeExtract %uint %10656 0
      %11825 = OpCompositeExtract %uint %10656 1
      %11826 = OpCompositeConstruct %v3uint %11824 %11825 %11823
               OpImageWrite %10657 %11826 %11818 None
               OpBranch %11820
      %11821 = OpLabel
      %11827 = OpIEqual %bool %11817 %uint_0
      %11828 = OpSelect %uint %11827 %11818 %11816
      %11829 = OpIEqual %bool %11817 %uint_1
      %11830 = OpSelect %uint %11829 %11818 %11815
      %11831 = OpIEqual %bool %11817 %uint_2
      %11832 = OpSelect %uint %11831 %11818 %11814
               OpBranch %11820
      %11820 = OpLabel
      %11833 = OpPhi %uint %11814 %11822 %11832 %11821
      %11834 = OpPhi %uint %11815 %11822 %11830 %11821
      %11835 = OpPhi %uint %11816 %11822 %11828 %11821
      %11836 = OpIAdd %uint %11390 %uint_3
               OpBranch %11668
      %11668 = OpLabel
      %11837 = OpPhi %uint %uint_0 %11666 %11833 %11820
      %11838 = OpPhi %uint %11388 %11666 %11834 %11820
      %11839 = OpPhi %uint %11389 %11666 %11835 %11820
      %11840 = OpPhi %uint %11390 %11666 %11836 %11820
      %11841 = OpSelect %uint %11667 %uint_0 %11641
               OpBranch %11664
      %11665 = OpLabel
      %11842 = OpExtInst %float %1 FAbs %453
      %11843 = OpFSub %float %float_1 %11842
      %11844 = OpVectorShuffle %v3float %10659 %451 0 1 2
      %11845 = OpFSub %float %8376 %float_0_5
      %11846 = OpFMul %float %11845 %float_0_00787401572
      %11847 = OpFMul %float %11845 %float_0_0158730168
      %11848 = OpCompositeConstruct %v3float %11846 %11846 %11847
      %11849 = OpExtInst %v3float %1 FClamp %11844 %100 %125
      %11850 = OpCompositeExtract %float %11849 0
               OpSelectionMerge %11851 None
               OpSwitch %uint_0 %11852
      %11852 = OpLabel
      %11853 = OpFOrdLessThan %bool %11850 %float_0_00313066994
               OpSelectionMerge %11854 None
               OpBranchConditional %11853 %11855 %11854
      %11855 = OpLabel
      %11856 = OpFMul %float %11850 %float_12_9200001
               OpBranch %11851
      %11854 = OpLabel
      %11857 = OpExtInst %float %1 Pow %11850 %float_0_416666657
      %11858 = OpExtInst %float %1 Fma %11857 %float_1_05499995 %float_n0_0549999997
               OpBranch %11851
      %11851 = OpLabel
      %11859 = OpPhi %float %11856 %11855 %11858 %11854
      %11860 = OpCompositeExtract %float %11849 1
               OpSelectionMerge %11861 None
               OpSwitch %uint_0 %11862
      %11862 = OpLabel
      %11863 = OpFOrdLessThan %bool %11860 %float_0_00313066994
               OpSelectionMerge %11864 None
               OpBranchConditional %11863 %11865 %11864
      %11865 = OpLabel
      %11866 = OpFMul %float %11860 %float_12_9200001
               OpBranch %11861
      %11864 = OpLabel
      %11867 = OpExtInst %float %1 Pow %11860 %float_0_416666657
      %11868 = OpExtInst %float %1 Fma %11867 %float_1_05499995 %float_n0_0549999997
               OpBranch %11861
      %11861 = OpLabel
      %11869 = OpPhi %float %11866 %11865 %11868 %11864
      %11870 = OpCompositeExtract %float %11849 2
               OpSelectionMerge %11871 None
               OpSwitch %uint_0 %11872
      %11872 = OpLabel
      %11873 = OpFOrdLessThan %bool %11870 %float_0_00313066994
               OpSelectionMerge %11874 None
               OpBranchConditional %11873 %11875 %11874
      %11875 = OpLabel
      %11876 = OpFMul %float %11870 %float_12_9200001
               OpBranch %11871
      %11874 = OpLabel
      %11877 = OpExtInst %float %1 Pow %11870 %float_0_416666657
      %11878 = OpExtInst %float %1 Fma %11877 %float_1_05499995 %float_n0_0549999997
               OpBranch %11871
      %11871 = OpLabel
      %11879 = OpPhi %float %11876 %11875 %11878 %11874
      %11880 = OpCompositeConstruct %v3float %11859 %11869 %11879
      %11881 = OpBitcast %v3uint %11880
      %11882 = OpBitwiseAnd %v3uint %11881 %342
      %11883 = OpExtInst %v3uint %1 UMin %11882 %490
      %11884 = OpConvertUToF %v3float %11883
      %11885 = OpExtInst %v3float %1 Fma %11848 %11884 %11880
      %11886 = OpExtInst %v3float %1 FClamp %11885 %100 %125
      %11887 = OpCompositeExtract %float %11886 0
      %11888 = OpFMul %float %11887 %float_127
      %11889 = OpConvertFToU %uint %11888
      %11890 = OpShiftLeftLogical %uint %11889 %uint_0
      %11891 = OpCompositeExtract %float %11886 1
      %11892 = OpFMul %float %11891 %float_127
      %11893 = OpConvertFToU %uint %11892
      %11894 = OpShiftLeftLogical %uint %11893 %uint_7
      %11895 = OpCompositeExtract %float %11886 2
      %11896 = OpFMul %float %11895 %float_63
      %11897 = OpConvertFToU %uint %11896
      %11898 = OpShiftLeftLogical %uint %11897 %uint_14
      %11899 = OpBitwiseOr %uint %11890 %11894
      %11900 = OpBitwiseOr %uint %11899 %11898
      %11901 = OpVectorShuffle %v3float %10669 %10669 0 1 2
      %11902 = OpExtInst %v3float %1 FClamp %11901 %100 %125
      %11903 = OpCompositeExtract %float %11902 0
               OpSelectionMerge %11904 None
               OpSwitch %uint_0 %11905
      %11905 = OpLabel
      %11906 = OpFOrdLessThan %bool %11903 %float_0_00313066994
               OpSelectionMerge %11907 None
               OpBranchConditional %11906 %11908 %11907
      %11908 = OpLabel
      %11909 = OpFMul %float %11903 %float_12_9200001
               OpBranch %11904
      %11907 = OpLabel
      %11910 = OpExtInst %float %1 Pow %11903 %float_0_416666657
      %11911 = OpExtInst %float %1 Fma %11910 %float_1_05499995 %float_n0_0549999997
               OpBranch %11904
      %11904 = OpLabel
      %11912 = OpPhi %float %11909 %11908 %11911 %11907
      %11913 = OpCompositeExtract %float %11902 1
               OpSelectionMerge %11914 None
               OpSwitch %uint_0 %11915
      %11915 = OpLabel
      %11916 = OpFOrdLessThan %bool %11913 %float_0_00313066994
               OpSelectionMerge %11917 None
               OpBranchConditional %11916 %11918 %11917
      %11918 = OpLabel
      %11919 = OpFMul %float %11913 %float_12_9200001
               OpBranch %11914
      %11917 = OpLabel
      %11920 = OpExtInst %float %1 Pow %11913 %float_0_416666657
      %11921 = OpExtInst %float %1 Fma %11920 %float_1_05499995 %float_n0_0549999997
               OpBranch %11914
      %11914 = OpLabel
      %11922 = OpPhi %float %11919 %11918 %11921 %11917
      %11923 = OpCompositeExtract %float %11902 2
               OpSelectionMerge %11924 None
               OpSwitch %uint_0 %11925
      %11925 = OpLabel
      %11926 = OpFOrdLessThan %bool %11923 %float_0_00313066994
               OpSelectionMerge %11927 None
               OpBranchConditional %11926 %11928 %11927
      %11928 = OpLabel
      %11929 = OpFMul %float %11923 %float_12_9200001
               OpBranch %11924
      %11927 = OpLabel
      %11930 = OpExtInst %float %1 Pow %11923 %float_0_416666657
      %11931 = OpExtInst %float %1 Fma %11930 %float_1_05499995 %float_n0_0549999997
               OpBranch %11924
      %11924 = OpLabel
      %11932 = OpPhi %float %11929 %11928 %11931 %11927
      %11933 = OpCompositeConstruct %v3float %11912 %11922 %11932
      %11934 = OpBitcast %v3uint %11933
      %11935 = OpBitwiseAnd %v3uint %11934 %342
      %11936 = OpExtInst %v3uint %1 UMin %11935 %490
      %11937 = OpConvertUToF %v3float %11936
      %11938 = OpExtInst %v3float %1 Fma %11848 %11937 %11933
      %11939 = OpExtInst %v3float %1 FClamp %11938 %100 %125
      %11940 = OpCompositeExtract %float %11939 0
      %11941 = OpFMul %float %11940 %float_127
      %11942 = OpConvertFToU %uint %11941
      %11943 = OpShiftLeftLogical %uint %11942 %uint_0
      %11944 = OpCompositeExtract %float %11939 1
      %11945 = OpFMul %float %11944 %float_127
      %11946 = OpConvertFToU %uint %11945
      %11947 = OpShiftLeftLogical %uint %11946 %uint_7
      %11948 = OpCompositeExtract %float %11939 2
      %11949 = OpFMul %float %11948 %float_63
      %11950 = OpConvertFToU %uint %11949
      %11951 = OpShiftLeftLogical %uint %11950 %uint_14
      %11952 = OpBitwiseOr %uint %11943 %11947
      %11953 = OpBitwiseOr %uint %11952 %11951
      %11954 = OpExtInst %float %1 FClamp %11843 %float_0 %float_1
      %11955 = OpExtInst %float %1 FClamp %11954 %float_0 %float_1
      %11956 = OpFMul %float %11955 %float_127
      %11957 = OpConvertFToU %uint %11956
      %11958 = OpExtInst %uint %1 PackHalf2x16 %544
      %11959 = OpShiftLeftLogical %uint %11958 %uint_15
      %11960 = OpBitwiseAnd %uint %11959 %uint_1072693248
      %11961 = OpShiftLeftLogical %uint %11958 %uint_5
      %11962 = OpBitwiseAnd %uint %11961 %uint_1047552
      %11963 = OpShiftRightLogical %uint %11958 %uint_5
      %11964 = OpBitwiseAnd %uint %11963 %uint_1023
      %11965 = OpBitwiseOr %uint %11960 %11962
      %11966 = OpBitwiseOr %uint %11965 %11964
      %11967 = OpBitwiseAnd %uint %11966 %uint_4095
      %11968 = OpShiftRightLogical %uint %11966 %uint_12
      %11969 = OpBitwiseAnd %uint %11968 %uint_4095
      %11970 = OpShiftRightLogical %uint %11966 %uint_24
      %11971 = OpBitwiseAnd %uint %11970 %uint_63
      %11972 = OpBitwiseAnd %uint %11957 %uint_127
      %11973 = OpShiftLeftLogical %uint %11972 %uint_19
      %11974 = OpBitwiseOr %uint %11648 %11973
      %11975 = OpShiftLeftLogical %uint %11971 %uint_26
      %11976 = OpBitwiseOr %uint %11974 %11975
      %11977 = OpULessThan %bool %11390 %uint_3
               OpSelectionMerge %11978 None
               OpBranchConditional %11977 %11979 %11980
      %11980 = OpLabel
      %11981 = OpISub %uint %11390 %uint_3
      %11982 = OpCompositeExtract %uint %10656 0
      %11983 = OpCompositeExtract %uint %10656 1
      %11984 = OpCompositeConstruct %v3uint %11982 %11983 %11981
               OpImageWrite %10657 %11984 %11976 None
               OpBranch %11978
      %11979 = OpLabel
      %11985 = OpIEqual %bool %11390 %uint_0
      %11986 = OpSelect %uint %11985 %11976 %11389
      %11987 = OpIEqual %bool %11390 %uint_1
      %11988 = OpSelect %uint %11987 %11976 %11388
      %11989 = OpIEqual %bool %11390 %uint_2
      %11990 = OpSelect %uint %11989 %11976 %uint_0
               OpBranch %11978
      %11978 = OpLabel
      %11991 = OpPhi %uint %uint_0 %11980 %11990 %11979
      %11992 = OpPhi %uint %11388 %11980 %11988 %11979
      %11993 = OpPhi %uint %11389 %11980 %11986 %11979
      %11994 = OpIAdd %uint %11390 %uint_1
      %11995 = OpShiftLeftLogical %uint %11967 %uint_20
      %11996 = OpBitwiseOr %uint %11900 %11995
      %11997 = OpULessThan %bool %11994 %uint_3
               OpSelectionMerge %11998 None
               OpBranchConditional %11997 %11999 %12000
      %12000 = OpLabel
      %12001 = OpIAdd %uint %11390 %uint_4294967294
      %12002 = OpCompositeExtract %uint %10656 0
      %12003 = OpCompositeExtract %uint %10656 1
      %12004 = OpCompositeConstruct %v3uint %12002 %12003 %12001
               OpImageWrite %10657 %12004 %11996 None
               OpBranch %11998
      %11999 = OpLabel
      %12005 = OpIEqual %bool %11994 %uint_0
      %12006 = OpSelect %uint %12005 %11996 %11993
      %12007 = OpIEqual %bool %11994 %uint_1
      %12008 = OpSelect %uint %12007 %11996 %11992
      %12009 = OpIEqual %bool %11994 %uint_2
      %12010 = OpSelect %uint %12009 %11996 %11991
               OpBranch %11998
      %11998 = OpLabel
      %12011 = OpPhi %uint %11991 %12000 %12010 %11999
      %12012 = OpPhi %uint %11992 %12000 %12008 %11999
      %12013 = OpPhi %uint %11993 %12000 %12006 %11999
      %12014 = OpIAdd %uint %11390 %uint_2
      %12015 = OpShiftLeftLogical %uint %11969 %uint_20
      %12016 = OpBitwiseOr %uint %11953 %12015
      %12017 = OpULessThan %bool %12014 %uint_3
               OpSelectionMerge %12018 None
               OpBranchConditional %12017 %12019 %12020
      %12020 = OpLabel
      %12021 = OpIAdd %uint %11390 %uint_4294967295
      %12022 = OpCompositeExtract %uint %10656 0
      %12023 = OpCompositeExtract %uint %10656 1
      %12024 = OpCompositeConstruct %v3uint %12022 %12023 %12021
               OpImageWrite %10657 %12024 %12016 None
               OpBranch %12018
      %12019 = OpLabel
      %12025 = OpIEqual %bool %12014 %uint_0
      %12026 = OpSelect %uint %12025 %12016 %12013
      %12027 = OpIEqual %bool %12014 %uint_1
      %12028 = OpSelect %uint %12027 %12016 %12012
      %12029 = OpIEqual %bool %12014 %uint_2
      %12030 = OpSelect %uint %12029 %12016 %12011
               OpBranch %12018
      %12018 = OpLabel
      %12031 = OpPhi %uint %12011 %12020 %12030 %12019
      %12032 = OpPhi %uint %12012 %12020 %12028 %12019
      %12033 = OpPhi %uint %12013 %12020 %12026 %12019
      %12034 = OpIAdd %uint %11390 %uint_3
               OpBranch %11664
      %11664 = OpLabel
      %12035 = OpPhi %uint %11841 %11668 %uint_0 %12018
      %12036 = OpPhi %uint %11837 %11668 %12031 %12018
      %12037 = OpPhi %uint %11838 %11668 %12032 %12018
      %12038 = OpPhi %uint %11839 %11668 %12033 %12018
      %12039 = OpPhi %uint %11840 %11668 %12034 %12018
               OpBranch %11658
      %11659 = OpLabel
      %12040 = OpVectorShuffle %v3float %10659 %451 0 1 2
      %12041 = OpFSub %float %8376 %float_0_5
      %12042 = OpFMul %float %12041 %float_0_00787401572
      %12043 = OpFMul %float %12041 %float_0_0158730168
      %12044 = OpCompositeConstruct %v3float %12042 %12042 %12043
      %12045 = OpExtInst %v3float %1 FClamp %12040 %100 %125
      %12046 = OpCompositeExtract %float %12045 0
               OpSelectionMerge %12047 None
               OpSwitch %uint_0 %12048
      %12048 = OpLabel
      %12049 = OpFOrdLessThan %bool %12046 %float_0_00313066994
               OpSelectionMerge %12050 None
               OpBranchConditional %12049 %12051 %12050
      %12051 = OpLabel
      %12052 = OpFMul %float %12046 %float_12_9200001
               OpBranch %12047
      %12050 = OpLabel
      %12053 = OpExtInst %float %1 Pow %12046 %float_0_416666657
      %12054 = OpExtInst %float %1 Fma %12053 %float_1_05499995 %float_n0_0549999997
               OpBranch %12047
      %12047 = OpLabel
      %12055 = OpPhi %float %12052 %12051 %12054 %12050
      %12056 = OpCompositeExtract %float %12045 1
               OpSelectionMerge %12057 None
               OpSwitch %uint_0 %12058
      %12058 = OpLabel
      %12059 = OpFOrdLessThan %bool %12056 %float_0_00313066994
               OpSelectionMerge %12060 None
               OpBranchConditional %12059 %12061 %12060
      %12061 = OpLabel
      %12062 = OpFMul %float %12056 %float_12_9200001
               OpBranch %12057
      %12060 = OpLabel
      %12063 = OpExtInst %float %1 Pow %12056 %float_0_416666657
      %12064 = OpExtInst %float %1 Fma %12063 %float_1_05499995 %float_n0_0549999997
               OpBranch %12057
      %12057 = OpLabel
      %12065 = OpPhi %float %12062 %12061 %12064 %12060
      %12066 = OpCompositeExtract %float %12045 2
               OpSelectionMerge %12067 None
               OpSwitch %uint_0 %12068
      %12068 = OpLabel
      %12069 = OpFOrdLessThan %bool %12066 %float_0_00313066994
               OpSelectionMerge %12070 None
               OpBranchConditional %12069 %12071 %12070
      %12071 = OpLabel
      %12072 = OpFMul %float %12066 %float_12_9200001
               OpBranch %12067
      %12070 = OpLabel
      %12073 = OpExtInst %float %1 Pow %12066 %float_0_416666657
      %12074 = OpExtInst %float %1 Fma %12073 %float_1_05499995 %float_n0_0549999997
               OpBranch %12067
      %12067 = OpLabel
      %12075 = OpPhi %float %12072 %12071 %12074 %12070
      %12076 = OpCompositeConstruct %v3float %12055 %12065 %12075
      %12077 = OpBitcast %v3uint %12076
      %12078 = OpBitwiseAnd %v3uint %12077 %342
      %12079 = OpExtInst %v3uint %1 UMin %12078 %490
      %12080 = OpConvertUToF %v3float %12079
      %12081 = OpExtInst %v3float %1 Fma %12044 %12080 %12076
      %12082 = OpExtInst %v3float %1 FClamp %12081 %100 %125
      %12083 = OpCompositeExtract %float %12082 0
      %12084 = OpFMul %float %12083 %float_127
      %12085 = OpConvertFToU %uint %12084
      %12086 = OpShiftLeftLogical %uint %12085 %uint_0
      %12087 = OpCompositeExtract %float %12082 1
      %12088 = OpFMul %float %12087 %float_127
      %12089 = OpConvertFToU %uint %12088
      %12090 = OpShiftLeftLogical %uint %12089 %uint_7
      %12091 = OpCompositeExtract %float %12082 2
      %12092 = OpFMul %float %12091 %float_63
      %12093 = OpConvertFToU %uint %12092
      %12094 = OpShiftLeftLogical %uint %12093 %uint_14
      %12095 = OpBitwiseOr %uint %12086 %12090
      %12096 = OpBitwiseOr %uint %12095 %12094
      %12097 = OpVectorShuffle %v3float %10669 %10669 0 1 2
      %12098 = OpExtInst %v3float %1 FClamp %12097 %100 %125
      %12099 = OpCompositeExtract %float %12098 0
               OpSelectionMerge %12100 None
               OpSwitch %uint_0 %12101
      %12101 = OpLabel
      %12102 = OpFOrdLessThan %bool %12099 %float_0_00313066994
               OpSelectionMerge %12103 None
               OpBranchConditional %12102 %12104 %12103
      %12104 = OpLabel
      %12105 = OpFMul %float %12099 %float_12_9200001
               OpBranch %12100
      %12103 = OpLabel
      %12106 = OpExtInst %float %1 Pow %12099 %float_0_416666657
      %12107 = OpExtInst %float %1 Fma %12106 %float_1_05499995 %float_n0_0549999997
               OpBranch %12100
      %12100 = OpLabel
      %12108 = OpPhi %float %12105 %12104 %12107 %12103
      %12109 = OpCompositeExtract %float %12098 1
               OpSelectionMerge %12110 None
               OpSwitch %uint_0 %12111
      %12111 = OpLabel
      %12112 = OpFOrdLessThan %bool %12109 %float_0_00313066994
               OpSelectionMerge %12113 None
               OpBranchConditional %12112 %12114 %12113
      %12114 = OpLabel
      %12115 = OpFMul %float %12109 %float_12_9200001
               OpBranch %12110
      %12113 = OpLabel
      %12116 = OpExtInst %float %1 Pow %12109 %float_0_416666657
      %12117 = OpExtInst %float %1 Fma %12116 %float_1_05499995 %float_n0_0549999997
               OpBranch %12110
      %12110 = OpLabel
      %12118 = OpPhi %float %12115 %12114 %12117 %12113
      %12119 = OpCompositeExtract %float %12098 2
               OpSelectionMerge %12120 None
               OpSwitch %uint_0 %12121
      %12121 = OpLabel
      %12122 = OpFOrdLessThan %bool %12119 %float_0_00313066994
               OpSelectionMerge %12123 None
               OpBranchConditional %12122 %12124 %12123
      %12124 = OpLabel
      %12125 = OpFMul %float %12119 %float_12_9200001
               OpBranch %12120
      %12123 = OpLabel
      %12126 = OpExtInst %float %1 Pow %12119 %float_0_416666657
      %12127 = OpExtInst %float %1 Fma %12126 %float_1_05499995 %float_n0_0549999997
               OpBranch %12120
      %12120 = OpLabel
      %12128 = OpPhi %float %12125 %12124 %12127 %12123
      %12129 = OpCompositeConstruct %v3float %12108 %12118 %12128
      %12130 = OpBitcast %v3uint %12129
      %12131 = OpBitwiseAnd %v3uint %12130 %342
      %12132 = OpExtInst %v3uint %1 UMin %12131 %490
      %12133 = OpConvertUToF %v3float %12132
      %12134 = OpExtInst %v3float %1 Fma %12044 %12133 %12129
      %12135 = OpExtInst %v3float %1 FClamp %12134 %100 %125
      %12136 = OpCompositeExtract %float %12135 0
      %12137 = OpFMul %float %12136 %float_127
      %12138 = OpConvertFToU %uint %12137
      %12139 = OpShiftLeftLogical %uint %12138 %uint_0
      %12140 = OpCompositeExtract %float %12135 1
      %12141 = OpFMul %float %12140 %float_127
      %12142 = OpConvertFToU %uint %12141
      %12143 = OpShiftLeftLogical %uint %12142 %uint_7
      %12144 = OpCompositeExtract %float %12135 2
      %12145 = OpFMul %float %12144 %float_63
      %12146 = OpConvertFToU %uint %12145
      %12147 = OpShiftLeftLogical %uint %12146 %uint_14
      %12148 = OpBitwiseOr %uint %12139 %12143
      %12149 = OpBitwiseOr %uint %12148 %12147
               OpSelectionMerge %12150 None
               OpSwitch %uint_0 %12151
      %12151 = OpLabel
               OpSelectionMerge %12152 None
               OpBranchConditional %true %12153 %12152
      %12153 = OpLabel
               OpBranch %12150
      %12152 = OpLabel
      %12154 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12150
      %12150 = OpLabel
      %12155 = OpPhi %float %float_0 %12153 %12154 %12152
               OpSelectionMerge %12156 None
               OpSwitch %uint_0 %12157
      %12157 = OpLabel
               OpSelectionMerge %12158 None
               OpBranchConditional %true %12159 %12158
      %12159 = OpLabel
               OpBranch %12156
      %12158 = OpLabel
      %12160 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12156
      %12156 = OpLabel
      %12161 = OpPhi %float %float_0 %12159 %12160 %12158
               OpSelectionMerge %12162 None
               OpSwitch %uint_0 %12163
      %12163 = OpLabel
               OpSelectionMerge %12164 None
               OpBranchConditional %true %12165 %12164
      %12165 = OpLabel
               OpBranch %12162
      %12164 = OpLabel
      %12166 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12162
      %12162 = OpLabel
      %12167 = OpPhi %float %float_0 %12165 %12166 %12164
      %12168 = OpCompositeConstruct %v3float %12155 %12161 %12167
      %12169 = OpBitcast %v3uint %12168
      %12170 = OpBitwiseAnd %v3uint %12169 %342
      %12171 = OpExtInst %v3uint %1 UMin %12170 %490
      %12172 = OpConvertUToF %v3float %12171
      %12173 = OpExtInst %v3float %1 Fma %12044 %12172 %12168
      %12174 = OpExtInst %v3float %1 FClamp %12173 %100 %125
      %12175 = OpCompositeExtract %float %12174 0
      %12176 = OpFMul %float %12175 %float_127
      %12177 = OpConvertFToU %uint %12176
      %12178 = OpShiftLeftLogical %uint %12177 %uint_0
      %12179 = OpCompositeExtract %float %12174 1
      %12180 = OpFMul %float %12179 %float_127
      %12181 = OpConvertFToU %uint %12180
      %12182 = OpShiftLeftLogical %uint %12181 %uint_7
      %12183 = OpCompositeExtract %float %12174 2
      %12184 = OpFMul %float %12183 %float_63
      %12185 = OpConvertFToU %uint %12184
      %12186 = OpShiftLeftLogical %uint %12185 %uint_14
      %12187 = OpBitwiseOr %uint %12178 %12182
      %12188 = OpBitwiseOr %uint %12187 %12186
      %12189 = OpBitwiseOr %uint %11648 %uint_0
      %12190 = OpULessThan %bool %11390 %uint_3
               OpSelectionMerge %12191 None
               OpBranchConditional %12190 %12192 %12193
      %12193 = OpLabel
      %12194 = OpISub %uint %11390 %uint_3
      %12195 = OpCompositeExtract %uint %10656 0
      %12196 = OpCompositeExtract %uint %10656 1
      %12197 = OpCompositeConstruct %v3uint %12195 %12196 %12194
               OpImageWrite %10657 %12197 %12189 None
               OpBranch %12191
      %12192 = OpLabel
      %12198 = OpIEqual %bool %11390 %uint_0
      %12199 = OpSelect %uint %12198 %12189 %11389
      %12200 = OpIEqual %bool %11390 %uint_1
      %12201 = OpSelect %uint %12200 %12189 %11388
      %12202 = OpIEqual %bool %11390 %uint_2
      %12203 = OpSelect %uint %12202 %12189 %uint_0
               OpBranch %12191
      %12191 = OpLabel
      %12204 = OpPhi %uint %uint_0 %12193 %12203 %12192
      %12205 = OpPhi %uint %11388 %12193 %12201 %12192
      %12206 = OpPhi %uint %11389 %12193 %12199 %12192
      %12207 = OpIAdd %uint %11390 %uint_1
      %12208 = OpBitwiseAnd %uint %12188 %uint_1047552
      %12209 = OpShiftLeftLogical %uint %12208 %uint_10
      %12210 = OpBitwiseOr %uint %12096 %12209
      %12211 = OpULessThan %bool %12207 %uint_3
               OpSelectionMerge %12212 None
               OpBranchConditional %12211 %12213 %12214
      %12214 = OpLabel
      %12215 = OpIAdd %uint %11390 %uint_4294967294
      %12216 = OpCompositeExtract %uint %10656 0
      %12217 = OpCompositeExtract %uint %10656 1
      %12218 = OpCompositeConstruct %v3uint %12216 %12217 %12215
               OpImageWrite %10657 %12218 %12210 None
               OpBranch %12212
      %12213 = OpLabel
      %12219 = OpIEqual %bool %12207 %uint_0
      %12220 = OpSelect %uint %12219 %12210 %12206
      %12221 = OpIEqual %bool %12207 %uint_1
      %12222 = OpSelect %uint %12221 %12210 %12205
      %12223 = OpIEqual %bool %12207 %uint_2
      %12224 = OpSelect %uint %12223 %12210 %12204
               OpBranch %12212
      %12212 = OpLabel
      %12225 = OpPhi %uint %12204 %12214 %12224 %12213
      %12226 = OpPhi %uint %12205 %12214 %12222 %12213
      %12227 = OpPhi %uint %12206 %12214 %12220 %12213
      %12228 = OpIAdd %uint %11390 %uint_2
      %12229 = OpBitwiseAnd %uint %12188 %uint_1023
      %12230 = OpShiftLeftLogical %uint %12229 %uint_20
      %12231 = OpBitwiseOr %uint %12149 %12230
      %12232 = OpULessThan %bool %12228 %uint_3
               OpSelectionMerge %12233 None
               OpBranchConditional %12232 %12234 %12235
      %12235 = OpLabel
      %12236 = OpIAdd %uint %11390 %uint_4294967295
      %12237 = OpCompositeExtract %uint %10656 0
      %12238 = OpCompositeExtract %uint %10656 1
      %12239 = OpCompositeConstruct %v3uint %12237 %12238 %12236
               OpImageWrite %10657 %12239 %12231 None
               OpBranch %12233
      %12234 = OpLabel
      %12240 = OpIEqual %bool %12228 %uint_0
      %12241 = OpSelect %uint %12240 %12231 %12227
      %12242 = OpIEqual %bool %12228 %uint_1
      %12243 = OpSelect %uint %12242 %12231 %12226
      %12244 = OpIEqual %bool %12228 %uint_2
      %12245 = OpSelect %uint %12244 %12231 %12225
               OpBranch %12233
      %12233 = OpLabel
      %12246 = OpPhi %uint %12225 %12235 %12245 %12234
      %12247 = OpPhi %uint %12226 %12235 %12243 %12234
      %12248 = OpPhi %uint %12227 %12235 %12241 %12234
      %12249 = OpIAdd %uint %11390 %uint_3
               OpBranch %11658
      %11658 = OpLabel
      %12250 = OpPhi %uint %12035 %11664 %uint_0 %12233
      %12251 = OpPhi %uint %12036 %11664 %12246 %12233
      %12252 = OpPhi %uint %12037 %11664 %12247 %12233
      %12253 = OpPhi %uint %12038 %11664 %12248 %12233
      %12254 = OpPhi %uint %12039 %11664 %12249 %12233
               OpBranch %11654
      %11655 = OpLabel
      %12255 = OpVectorShuffle %v3float %10659 %451 0 1 2
      %12256 = OpFSub %float %8376 %float_0_5
      %12257 = OpFMul %float %12256 %float_0_00787401572
      %12258 = OpFMul %float %12256 %float_0_0158730168
      %12259 = OpCompositeConstruct %v3float %12257 %12257 %12258
      %12260 = OpExtInst %v3float %1 FClamp %12255 %100 %125
      %12261 = OpCompositeExtract %float %12260 0
               OpSelectionMerge %12262 None
               OpSwitch %uint_0 %12263
      %12263 = OpLabel
      %12264 = OpFOrdLessThan %bool %12261 %float_0_00313066994
               OpSelectionMerge %12265 None
               OpBranchConditional %12264 %12266 %12265
      %12266 = OpLabel
      %12267 = OpFMul %float %12261 %float_12_9200001
               OpBranch %12262
      %12265 = OpLabel
      %12268 = OpExtInst %float %1 Pow %12261 %float_0_416666657
      %12269 = OpExtInst %float %1 Fma %12268 %float_1_05499995 %float_n0_0549999997
               OpBranch %12262
      %12262 = OpLabel
      %12270 = OpPhi %float %12267 %12266 %12269 %12265
      %12271 = OpCompositeExtract %float %12260 1
               OpSelectionMerge %12272 None
               OpSwitch %uint_0 %12273
      %12273 = OpLabel
      %12274 = OpFOrdLessThan %bool %12271 %float_0_00313066994
               OpSelectionMerge %12275 None
               OpBranchConditional %12274 %12276 %12275
      %12276 = OpLabel
      %12277 = OpFMul %float %12271 %float_12_9200001
               OpBranch %12272
      %12275 = OpLabel
      %12278 = OpExtInst %float %1 Pow %12271 %float_0_416666657
      %12279 = OpExtInst %float %1 Fma %12278 %float_1_05499995 %float_n0_0549999997
               OpBranch %12272
      %12272 = OpLabel
      %12280 = OpPhi %float %12277 %12276 %12279 %12275
      %12281 = OpCompositeExtract %float %12260 2
               OpSelectionMerge %12282 None
               OpSwitch %uint_0 %12283
      %12283 = OpLabel
      %12284 = OpFOrdLessThan %bool %12281 %float_0_00313066994
               OpSelectionMerge %12285 None
               OpBranchConditional %12284 %12286 %12285
      %12286 = OpLabel
      %12287 = OpFMul %float %12281 %float_12_9200001
               OpBranch %12282
      %12285 = OpLabel
      %12288 = OpExtInst %float %1 Pow %12281 %float_0_416666657
      %12289 = OpExtInst %float %1 Fma %12288 %float_1_05499995 %float_n0_0549999997
               OpBranch %12282
      %12282 = OpLabel
      %12290 = OpPhi %float %12287 %12286 %12289 %12285
      %12291 = OpCompositeConstruct %v3float %12270 %12280 %12290
      %12292 = OpBitcast %v3uint %12291
      %12293 = OpBitwiseAnd %v3uint %12292 %342
      %12294 = OpExtInst %v3uint %1 UMin %12293 %490
      %12295 = OpConvertUToF %v3float %12294
      %12296 = OpExtInst %v3float %1 Fma %12259 %12295 %12291
      %12297 = OpExtInst %v3float %1 FClamp %12296 %100 %125
      %12298 = OpCompositeExtract %float %12297 0
      %12299 = OpFMul %float %12298 %float_127
      %12300 = OpConvertFToU %uint %12299
      %12301 = OpShiftLeftLogical %uint %12300 %uint_0
      %12302 = OpCompositeExtract %float %12297 1
      %12303 = OpFMul %float %12302 %float_127
      %12304 = OpConvertFToU %uint %12303
      %12305 = OpShiftLeftLogical %uint %12304 %uint_7
      %12306 = OpCompositeExtract %float %12297 2
      %12307 = OpFMul %float %12306 %float_63
      %12308 = OpConvertFToU %uint %12307
      %12309 = OpShiftLeftLogical %uint %12308 %uint_14
      %12310 = OpBitwiseOr %uint %12301 %12305
      %12311 = OpBitwiseOr %uint %12310 %12309
      %12312 = OpExtInst %float %1 FClamp %10662 %float_0 %float_1
      %12313 = OpFMul %float %12312 %float_255
      %12314 = OpConvertFToU %uint %12313
      %12315 = OpShiftLeftLogical %uint %12314 %uint_8
      %12316 = OpExtInst %float %1 FClamp %10666 %float_0 %float_1
      %12317 = OpFMul %float %12316 %float_255
      %12318 = OpConvertFToU %uint %12317
      %12319 = OpShiftLeftLogical %uint %12318 %uint_16
      %12320 = OpBitwiseOr %uint %uint_0 %12315
      %12321 = OpBitwiseOr %uint %12320 %12319
      %12322 = OpBitwiseOr %uint %12321 %uint_0
      %12323 = OpBitwiseOr %uint %11648 %uint_0
      %12324 = OpULessThan %bool %11390 %uint_3
               OpSelectionMerge %12325 None
               OpBranchConditional %12324 %12326 %12327
      %12327 = OpLabel
      %12328 = OpISub %uint %11390 %uint_3
      %12329 = OpCompositeExtract %uint %10656 0
      %12330 = OpCompositeExtract %uint %10656 1
      %12331 = OpCompositeConstruct %v3uint %12329 %12330 %12328
               OpImageWrite %10657 %12331 %12323 None
               OpBranch %12325
      %12326 = OpLabel
      %12332 = OpIEqual %bool %11390 %uint_0
      %12333 = OpSelect %uint %12332 %12323 %11389
      %12334 = OpIEqual %bool %11390 %uint_1
      %12335 = OpSelect %uint %12334 %12323 %11388
      %12336 = OpIEqual %bool %11390 %uint_2
      %12337 = OpSelect %uint %12336 %12323 %uint_0
               OpBranch %12325
      %12325 = OpLabel
      %12338 = OpPhi %uint %uint_0 %12327 %12337 %12326
      %12339 = OpPhi %uint %11388 %12327 %12335 %12326
      %12340 = OpPhi %uint %11389 %12327 %12333 %12326
      %12341 = OpIAdd %uint %11390 %uint_1
      %12342 = OpBitwiseOr %uint %12311 %uint_0
      %12343 = OpULessThan %bool %12341 %uint_3
               OpSelectionMerge %12344 None
               OpBranchConditional %12343 %12345 %12346
      %12346 = OpLabel
      %12347 = OpIAdd %uint %11390 %uint_4294967294
      %12348 = OpCompositeExtract %uint %10656 0
      %12349 = OpCompositeExtract %uint %10656 1
      %12350 = OpCompositeConstruct %v3uint %12348 %12349 %12347
               OpImageWrite %10657 %12350 %12342 None
               OpBranch %12344
      %12345 = OpLabel
      %12351 = OpIEqual %bool %12341 %uint_0
      %12352 = OpSelect %uint %12351 %12342 %12340
      %12353 = OpIEqual %bool %12341 %uint_1
      %12354 = OpSelect %uint %12353 %12342 %12339
      %12355 = OpIEqual %bool %12341 %uint_2
      %12356 = OpSelect %uint %12355 %12342 %12338
               OpBranch %12344
      %12344 = OpLabel
      %12357 = OpPhi %uint %12338 %12346 %12356 %12345
      %12358 = OpPhi %uint %12339 %12346 %12354 %12345
      %12359 = OpPhi %uint %12340 %12346 %12352 %12345
      %12360 = OpIAdd %uint %11390 %uint_2
      %12361 = OpBitwiseOr %uint %12322 %uint_0
      %12362 = OpULessThan %bool %12360 %uint_3
               OpSelectionMerge %12363 None
               OpBranchConditional %12362 %12364 %12365
      %12365 = OpLabel
      %12366 = OpIAdd %uint %11390 %uint_4294967295
      %12367 = OpCompositeExtract %uint %10656 0
      %12368 = OpCompositeExtract %uint %10656 1
      %12369 = OpCompositeConstruct %v3uint %12367 %12368 %12366
               OpImageWrite %10657 %12369 %12361 None
               OpBranch %12363
      %12364 = OpLabel
      %12370 = OpIEqual %bool %12360 %uint_0
      %12371 = OpSelect %uint %12370 %12361 %12359
      %12372 = OpIEqual %bool %12360 %uint_1
      %12373 = OpSelect %uint %12372 %12361 %12358
      %12374 = OpIEqual %bool %12360 %uint_2
      %12375 = OpSelect %uint %12374 %12361 %12357
               OpBranch %12363
      %12363 = OpLabel
      %12376 = OpPhi %uint %12357 %12365 %12375 %12364
      %12377 = OpPhi %uint %12358 %12365 %12373 %12364
      %12378 = OpPhi %uint %12359 %12365 %12371 %12364
      %12379 = OpIAdd %uint %11390 %uint_3
               OpBranch %11654
      %11654 = OpLabel
      %12380 = OpPhi %uint %12250 %11658 %uint_0 %12363
      %12381 = OpPhi %uint %12251 %11658 %12376 %12363
      %12382 = OpPhi %uint %12252 %11658 %12377 %12363
      %12383 = OpPhi %uint %12253 %11658 %12378 %12363
      %12384 = OpPhi %uint %12254 %11658 %12379 %12363
               OpBranch %11650
      %11651 = OpLabel
      %12385 = OpBitwiseAnd %uint %11641 %uint_2047
      %12386 = OpShiftLeftLogical %uint %12385 %uint_19
      %12387 = OpBitwiseOr %uint %11648 %12386
      %12388 = OpULessThan %bool %11390 %uint_3
               OpSelectionMerge %12389 None
               OpBranchConditional %12388 %12390 %12391
      %12391 = OpLabel
      %12392 = OpISub %uint %11390 %uint_3
      %12393 = OpCompositeExtract %uint %10656 0
      %12394 = OpCompositeExtract %uint %10656 1
      %12395 = OpCompositeConstruct %v3uint %12393 %12394 %12392
               OpImageWrite %10657 %12395 %12387 None
               OpBranch %12389
      %12390 = OpLabel
      %12396 = OpIEqual %bool %11390 %uint_0
      %12397 = OpSelect %uint %12396 %12387 %11389
      %12398 = OpIEqual %bool %11390 %uint_1
      %12399 = OpSelect %uint %12398 %12387 %11388
      %12400 = OpIEqual %bool %11390 %uint_2
      %12401 = OpSelect %uint %12400 %12387 %uint_0
               OpBranch %12389
      %12389 = OpLabel
      %12402 = OpPhi %uint %uint_0 %12391 %12401 %12390
      %12403 = OpPhi %uint %11388 %12391 %12399 %12390
      %12404 = OpPhi %uint %11389 %12391 %12397 %12390
      %12405 = OpIAdd %uint %11390 %uint_1
               OpBranch %11650
      %11650 = OpLabel
      %12406 = OpPhi %uint %12380 %11654 %11641 %12389
      %12407 = OpPhi %uint %12381 %11654 %12402 %12389
      %12408 = OpPhi %uint %12382 %11654 %12403 %12389
      %12409 = OpPhi %uint %12383 %11654 %12404 %12389
      %12410 = OpPhi %uint %12384 %11654 %12405 %12389
               OpBranch %11406
      %11406 = OpLabel
      %12411 = OpPhi %uint %11635 %11409 %12406 %11650
      %12412 = OpPhi %uint %11636 %11409 %12407 %11650
      %12413 = OpPhi %uint %11637 %11409 %12408 %11650
      %12414 = OpPhi %uint %11638 %11409 %12409 %11650
      %12415 = OpPhi %uint %11639 %11409 %12410 %11650
               OpBranch %11402
      %11403 = OpLabel
      %12416 = OpVectorShuffle %v3float %10659 %451 0 1 2
      %12417 = OpFSub %float %8376 %float_0_5
      %12418 = OpFMul %float %12417 %float_0_00787401572
      %12419 = OpFMul %float %12417 %float_0_0158730168
      %12420 = OpCompositeConstruct %v3float %12418 %12418 %12419
      %12421 = OpExtInst %v3float %1 FClamp %12416 %100 %125
      %12422 = OpCompositeExtract %float %12421 0
               OpSelectionMerge %12423 None
               OpSwitch %uint_0 %12424
      %12424 = OpLabel
      %12425 = OpFOrdLessThan %bool %12422 %float_0_00313066994
               OpSelectionMerge %12426 None
               OpBranchConditional %12425 %12427 %12426
      %12427 = OpLabel
      %12428 = OpFMul %float %12422 %float_12_9200001
               OpBranch %12423
      %12426 = OpLabel
      %12429 = OpExtInst %float %1 Pow %12422 %float_0_416666657
      %12430 = OpExtInst %float %1 Fma %12429 %float_1_05499995 %float_n0_0549999997
               OpBranch %12423
      %12423 = OpLabel
      %12431 = OpPhi %float %12428 %12427 %12430 %12426
      %12432 = OpCompositeExtract %float %12421 1
               OpSelectionMerge %12433 None
               OpSwitch %uint_0 %12434
      %12434 = OpLabel
      %12435 = OpFOrdLessThan %bool %12432 %float_0_00313066994
               OpSelectionMerge %12436 None
               OpBranchConditional %12435 %12437 %12436
      %12437 = OpLabel
      %12438 = OpFMul %float %12432 %float_12_9200001
               OpBranch %12433
      %12436 = OpLabel
      %12439 = OpExtInst %float %1 Pow %12432 %float_0_416666657
      %12440 = OpExtInst %float %1 Fma %12439 %float_1_05499995 %float_n0_0549999997
               OpBranch %12433
      %12433 = OpLabel
      %12441 = OpPhi %float %12438 %12437 %12440 %12436
      %12442 = OpCompositeExtract %float %12421 2
               OpSelectionMerge %12443 None
               OpSwitch %uint_0 %12444
      %12444 = OpLabel
      %12445 = OpFOrdLessThan %bool %12442 %float_0_00313066994
               OpSelectionMerge %12446 None
               OpBranchConditional %12445 %12447 %12446
      %12447 = OpLabel
      %12448 = OpFMul %float %12442 %float_12_9200001
               OpBranch %12443
      %12446 = OpLabel
      %12449 = OpExtInst %float %1 Pow %12442 %float_0_416666657
      %12450 = OpExtInst %float %1 Fma %12449 %float_1_05499995 %float_n0_0549999997
               OpBranch %12443
      %12443 = OpLabel
      %12451 = OpPhi %float %12448 %12447 %12450 %12446
      %12452 = OpCompositeConstruct %v3float %12431 %12441 %12451
      %12453 = OpBitcast %v3uint %12452
      %12454 = OpBitwiseAnd %v3uint %12453 %342
      %12455 = OpExtInst %v3uint %1 UMin %12454 %490
      %12456 = OpConvertUToF %v3float %12455
      %12457 = OpExtInst %v3float %1 Fma %12420 %12456 %12452
      %12458 = OpExtInst %v3float %1 FClamp %12457 %100 %125
      %12459 = OpCompositeExtract %float %12458 0
      %12460 = OpFMul %float %12459 %float_127
      %12461 = OpConvertFToU %uint %12460
      %12462 = OpShiftLeftLogical %uint %12461 %uint_0
      %12463 = OpCompositeExtract %float %12458 1
      %12464 = OpFMul %float %12463 %float_127
      %12465 = OpConvertFToU %uint %12464
      %12466 = OpShiftLeftLogical %uint %12465 %uint_7
      %12467 = OpCompositeExtract %float %12458 2
      %12468 = OpFMul %float %12467 %float_63
      %12469 = OpConvertFToU %uint %12468
      %12470 = OpShiftLeftLogical %uint %12469 %uint_14
      %12471 = OpBitwiseOr %uint %12462 %12466
      %12472 = OpBitwiseOr %uint %12471 %12470
      %12473 = OpBitwiseAnd %uint %12472 %uint_4095
      %12474 = OpShiftRightLogical %uint %12472 %uint_12
      %12475 = OpBitwiseAnd %uint %12474 %uint_255
      %12476 = OpVectorShuffle %v3float %10669 %10669 0 1 2
      %12477 = OpExtInst %v3float %1 FClamp %12476 %100 %125
      %12478 = OpCompositeExtract %float %12477 0
               OpSelectionMerge %12479 None
               OpSwitch %uint_0 %12480
      %12480 = OpLabel
      %12481 = OpFOrdLessThan %bool %12478 %float_0_00313066994
               OpSelectionMerge %12482 None
               OpBranchConditional %12481 %12483 %12482
      %12483 = OpLabel
      %12484 = OpFMul %float %12478 %float_12_9200001
               OpBranch %12479
      %12482 = OpLabel
      %12485 = OpExtInst %float %1 Pow %12478 %float_0_416666657
      %12486 = OpExtInst %float %1 Fma %12485 %float_1_05499995 %float_n0_0549999997
               OpBranch %12479
      %12479 = OpLabel
      %12487 = OpPhi %float %12484 %12483 %12486 %12482
      %12488 = OpCompositeExtract %float %12477 1
               OpSelectionMerge %12489 None
               OpSwitch %uint_0 %12490
      %12490 = OpLabel
      %12491 = OpFOrdLessThan %bool %12488 %float_0_00313066994
               OpSelectionMerge %12492 None
               OpBranchConditional %12491 %12493 %12492
      %12493 = OpLabel
      %12494 = OpFMul %float %12488 %float_12_9200001
               OpBranch %12489
      %12492 = OpLabel
      %12495 = OpExtInst %float %1 Pow %12488 %float_0_416666657
      %12496 = OpExtInst %float %1 Fma %12495 %float_1_05499995 %float_n0_0549999997
               OpBranch %12489
      %12489 = OpLabel
      %12497 = OpPhi %float %12494 %12493 %12496 %12492
      %12498 = OpCompositeExtract %float %12477 2
               OpSelectionMerge %12499 None
               OpSwitch %uint_0 %12500
      %12500 = OpLabel
      %12501 = OpFOrdLessThan %bool %12498 %float_0_00313066994
               OpSelectionMerge %12502 None
               OpBranchConditional %12501 %12503 %12502
      %12503 = OpLabel
      %12504 = OpFMul %float %12498 %float_12_9200001
               OpBranch %12499
      %12502 = OpLabel
      %12505 = OpExtInst %float %1 Pow %12498 %float_0_416666657
      %12506 = OpExtInst %float %1 Fma %12505 %float_1_05499995 %float_n0_0549999997
               OpBranch %12499
      %12499 = OpLabel
      %12507 = OpPhi %float %12504 %12503 %12506 %12502
      %12508 = OpCompositeConstruct %v3float %12487 %12497 %12507
      %12509 = OpBitcast %v3uint %12508
      %12510 = OpBitwiseAnd %v3uint %12509 %342
      %12511 = OpExtInst %v3uint %1 UMin %12510 %490
      %12512 = OpConvertUToF %v3float %12511
      %12513 = OpExtInst %v3float %1 Fma %12420 %12512 %12508
      %12514 = OpExtInst %v3float %1 FClamp %12513 %100 %125
      %12515 = OpCompositeExtract %float %12514 0
      %12516 = OpFMul %float %12515 %float_127
      %12517 = OpConvertFToU %uint %12516
      %12518 = OpShiftLeftLogical %uint %12517 %uint_0
      %12519 = OpCompositeExtract %float %12514 1
      %12520 = OpFMul %float %12519 %float_127
      %12521 = OpConvertFToU %uint %12520
      %12522 = OpShiftLeftLogical %uint %12521 %uint_7
      %12523 = OpCompositeExtract %float %12514 2
      %12524 = OpFMul %float %12523 %float_63
      %12525 = OpConvertFToU %uint %12524
      %12526 = OpShiftLeftLogical %uint %12525 %uint_14
      %12527 = OpBitwiseOr %uint %12518 %12522
      %12528 = OpBitwiseOr %uint %12527 %12526
      %12529 = OpBitwiseAnd %uint %11325 %uint_65535
      %12530 = OpShiftLeftLogical %uint %12529 %uint_0
      %12531 = OpBitwiseOr %uint %uint_0 %12530
      %12532 = OpShiftLeftLogical %uint %12475 %uint_8
      %12533 = OpBitwiseOr %uint %12532 %uint_0
      %12534 = OpBitwiseAnd %uint %12531 %uint_65535
      %12535 = OpShiftLeftLogical %uint %12533 %uint_16
      %12536 = OpBitwiseOr %uint %12534 %12535
      %12537 = OpULessThan %bool %11390 %uint_3
               OpSelectionMerge %12538 None
               OpBranchConditional %12537 %12539 %12540
      %12540 = OpLabel
      %12541 = OpISub %uint %11390 %uint_3
      %12542 = OpCompositeExtract %uint %10656 0
      %12543 = OpCompositeExtract %uint %10656 1
      %12544 = OpCompositeConstruct %v3uint %12542 %12543 %12541
               OpImageWrite %10657 %12544 %12536 None
               OpBranch %12538
      %12539 = OpLabel
      %12545 = OpIEqual %bool %11390 %uint_0
      %12546 = OpSelect %uint %12545 %12536 %11389
      %12547 = OpIEqual %bool %11390 %uint_1
      %12548 = OpSelect %uint %12547 %12536 %11388
      %12549 = OpIEqual %bool %11390 %uint_2
      %12550 = OpSelect %uint %12549 %12536 %uint_0
               OpBranch %12538
      %12538 = OpLabel
      %12551 = OpPhi %uint %uint_0 %12540 %12550 %12539
      %12552 = OpPhi %uint %11388 %12540 %12548 %12539
      %12553 = OpPhi %uint %11389 %12540 %12546 %12539
      %12554 = OpIAdd %uint %11390 %uint_1
      %12555 = OpShiftLeftLogical %uint %12473 %uint_20
      %12556 = OpBitwiseOr %uint %12528 %12555
      %12557 = OpULessThan %bool %12554 %uint_3
               OpSelectionMerge %12558 None
               OpBranchConditional %12557 %12559 %12560
      %12560 = OpLabel
      %12561 = OpIAdd %uint %11390 %uint_4294967294
      %12562 = OpCompositeExtract %uint %10656 0
      %12563 = OpCompositeExtract %uint %10656 1
      %12564 = OpCompositeConstruct %v3uint %12562 %12563 %12561
               OpImageWrite %10657 %12564 %12556 None
               OpBranch %12558
      %12559 = OpLabel
      %12565 = OpIEqual %bool %12554 %uint_0
      %12566 = OpSelect %uint %12565 %12556 %12553
      %12567 = OpIEqual %bool %12554 %uint_1
      %12568 = OpSelect %uint %12567 %12556 %12552
      %12569 = OpIEqual %bool %12554 %uint_2
      %12570 = OpSelect %uint %12569 %12556 %12551
               OpBranch %12558
      %12558 = OpLabel
      %12571 = OpPhi %uint %12551 %12560 %12570 %12559
      %12572 = OpPhi %uint %12552 %12560 %12568 %12559
      %12573 = OpPhi %uint %12553 %12560 %12566 %12559
      %12574 = OpIAdd %uint %11390 %uint_2
               OpBranch %11402
      %11402 = OpLabel
      %12575 = OpPhi %uint %12411 %11406 %uint_0 %12558
      %12576 = OpPhi %uint %12412 %11406 %12571 %12558
      %12577 = OpPhi %uint %12413 %11406 %12572 %12558
      %12578 = OpPhi %uint %12414 %11406 %12573 %12558
      %12579 = OpPhi %uint %12415 %11406 %12574 %12558
      %12580 = OpLogicalNot %bool %11401
      %12581 = OpLogicalAnd %bool %12580 %11340
      %12582 = OpIEqual %bool %10904 %uint_0
      %12583 = OpLogicalAnd %bool %12581 %12582
               OpSelectionMerge %12584 None
               OpBranchConditional %12583 %12585 %12584
      %12585 = OpLabel
      %12586 = OpShiftRightLogical %uint %12575 %uint_11
      %12587 = OpBitwiseAnd %uint %12586 %uint_7
               OpSelectionMerge %12588 None
               OpSwitch %12587 %12588 0 %12589 3 %12590 5 %12591
      %12591 = OpLabel
               OpSelectionMerge %12592 None
               OpBranchConditional %true %12593 %12592
      %12593 = OpLabel
      %12594 = OpExtInst %v2float %1 FAbs %547
      %12595 = OpFSub %v2float %309 %12594
      %12596 = OpVectorShuffle %v3float %451 %12595 4 5 2
               OpBranch %12592
      %12592 = OpLabel
      %12597 = OpPhi %v3float %541 %12591 %12596 %12593
      %12598 = OpVectorShuffle %v2float %12597 %12597 0 1
               OpSelectionMerge %12599 None
               OpBranchConditional %true %12600 %12599
      %12600 = OpLabel
      %12601 = OpExtInst %v2float %1 FAbs %547
      %12602 = OpFSub %v2float %309 %12601
      %12603 = OpVectorShuffle %v3float %451 %12602 4 5 2
               OpBranch %12599
      %12599 = OpLabel
      %12604 = OpPhi %v3float %541 %12592 %12603 %12600
      %12605 = OpVectorShuffle %v2float %12604 %12604 0 1
      %12606 = OpVectorShuffle %v3float %10659 %451 0 1 2
      %12607 = OpExtInst %v3float %1 FClamp %12606 %100 %125
      %12608 = OpCompositeExtract %float %12607 0
               OpSelectionMerge %12609 None
               OpSwitch %uint_0 %12610
      %12610 = OpLabel
      %12611 = OpFOrdLessThan %bool %12608 %float_0_00313066994
               OpSelectionMerge %12612 None
               OpBranchConditional %12611 %12613 %12612
      %12613 = OpLabel
      %12614 = OpFMul %float %12608 %float_12_9200001
               OpBranch %12609
      %12612 = OpLabel
      %12615 = OpExtInst %float %1 Pow %12608 %float_0_416666657
      %12616 = OpExtInst %float %1 Fma %12615 %float_1_05499995 %float_n0_0549999997
               OpBranch %12609
      %12609 = OpLabel
      %12617 = OpPhi %float %12614 %12613 %12616 %12612
      %12618 = OpCompositeExtract %float %12607 1
               OpSelectionMerge %12619 None
               OpSwitch %uint_0 %12620
      %12620 = OpLabel
      %12621 = OpFOrdLessThan %bool %12618 %float_0_00313066994
               OpSelectionMerge %12622 None
               OpBranchConditional %12621 %12623 %12622
      %12623 = OpLabel
      %12624 = OpFMul %float %12618 %float_12_9200001
               OpBranch %12619
      %12622 = OpLabel
      %12625 = OpExtInst %float %1 Pow %12618 %float_0_416666657
      %12626 = OpExtInst %float %1 Fma %12625 %float_1_05499995 %float_n0_0549999997
               OpBranch %12619
      %12619 = OpLabel
      %12627 = OpPhi %float %12624 %12623 %12626 %12622
      %12628 = OpCompositeExtract %float %12607 2
               OpSelectionMerge %12629 None
               OpSwitch %uint_0 %12630
      %12630 = OpLabel
      %12631 = OpFOrdLessThan %bool %12628 %float_0_00313066994
               OpSelectionMerge %12632 None
               OpBranchConditional %12631 %12633 %12632
      %12633 = OpLabel
      %12634 = OpFMul %float %12628 %float_12_9200001
               OpBranch %12629
      %12632 = OpLabel
      %12635 = OpExtInst %float %1 Pow %12628 %float_0_416666657
      %12636 = OpExtInst %float %1 Fma %12635 %float_1_05499995 %float_n0_0549999997
               OpBranch %12629
      %12629 = OpLabel
      %12637 = OpPhi %float %12634 %12633 %12636 %12632
      %12638 = OpExtInst %float %1 FClamp %12617 %float_0 %float_1
      %12639 = OpFMul %float %12638 %float_255
      %12640 = OpConvertFToU %uint %12639
      %12641 = OpShiftLeftLogical %uint %12640 %uint_0
      %12642 = OpExtInst %float %1 FClamp %12627 %float_0 %float_1
      %12643 = OpFMul %float %12642 %float_255
      %12644 = OpConvertFToU %uint %12643
      %12645 = OpShiftLeftLogical %uint %12644 %uint_8
      %12646 = OpExtInst %float %1 FClamp %12637 %float_0 %float_1
      %12647 = OpFMul %float %12646 %float_255
      %12648 = OpConvertFToU %uint %12647
      %12649 = OpShiftLeftLogical %uint %12648 %uint_16
      %12650 = OpBitwiseOr %uint %12641 %12645
      %12651 = OpBitwiseOr %uint %12650 %12649
      %12652 = OpBitwiseOr %uint %12651 %uint_0
      %12653 = OpULessThan %bool %12579 %uint_3
               OpSelectionMerge %12654 None
               OpBranchConditional %12653 %12655 %12656
      %12656 = OpLabel
      %12657 = OpISub %uint %12579 %uint_3
      %12658 = OpCompositeExtract %uint %10656 0
      %12659 = OpCompositeExtract %uint %10656 1
      %12660 = OpCompositeConstruct %v3uint %12658 %12659 %12657
               OpImageWrite %10657 %12660 %12652 None
               OpBranch %12654
      %12655 = OpLabel
      %12661 = OpIEqual %bool %12579 %uint_0
      %12662 = OpSelect %uint %12661 %12652 %12578
      %12663 = OpIEqual %bool %12579 %uint_1
      %12664 = OpSelect %uint %12663 %12652 %12577
      %12665 = OpIEqual %bool %12579 %uint_2
      %12666 = OpSelect %uint %12665 %12652 %12576
               OpBranch %12654
      %12654 = OpLabel
      %12667 = OpPhi %uint %12576 %12656 %12666 %12655
      %12668 = OpPhi %uint %12577 %12656 %12664 %12655
      %12669 = OpPhi %uint %12578 %12656 %12662 %12655
      %12670 = OpIAdd %uint %12579 %uint_1
      %12671 = OpVectorTimesScalar %v2float %12598 %float_0_5
      %12672 = OpFAdd %v2float %12671 %147
      %12673 = OpVectorTimesScalar %v2float %12605 %float_0_5
      %12674 = OpFAdd %v2float %12673 %147
      %12675 = OpCompositeExtract %float %12672 0
      %12676 = OpCompositeExtract %float %12672 1
      %12677 = OpCompositeExtract %float %12674 0
      %12678 = OpCompositeExtract %float %12674 1
      %12679 = OpExtInst %float %1 FClamp %12675 %float_0 %float_1
      %12680 = OpFMul %float %12679 %float_255
      %12681 = OpConvertFToU %uint %12680
      %12682 = OpShiftLeftLogical %uint %12681 %uint_0
      %12683 = OpExtInst %float %1 FClamp %12676 %float_0 %float_1
      %12684 = OpFMul %float %12683 %float_255
      %12685 = OpConvertFToU %uint %12684
      %12686 = OpShiftLeftLogical %uint %12685 %uint_8
      %12687 = OpExtInst %float %1 FClamp %12677 %float_0 %float_1
      %12688 = OpFMul %float %12687 %float_255
      %12689 = OpConvertFToU %uint %12688
      %12690 = OpShiftLeftLogical %uint %12689 %uint_16
      %12691 = OpExtInst %float %1 FClamp %12678 %float_0 %float_1
      %12692 = OpFMul %float %12691 %float_255
      %12693 = OpConvertFToU %uint %12692
      %12694 = OpShiftLeftLogical %uint %12693 %uint_24
      %12695 = OpBitwiseOr %uint %12682 %12686
      %12696 = OpBitwiseOr %uint %12695 %12690
      %12697 = OpBitwiseOr %uint %12696 %12694
      %12698 = OpULessThan %bool %12670 %uint_3
               OpSelectionMerge %12699 None
               OpBranchConditional %12698 %12700 %12701
      %12701 = OpLabel
      %12702 = OpIAdd %uint %12579 %uint_4294967294
      %12703 = OpCompositeExtract %uint %10656 0
      %12704 = OpCompositeExtract %uint %10656 1
      %12705 = OpCompositeConstruct %v3uint %12703 %12704 %12702
               OpImageWrite %10657 %12705 %12697 None
               OpBranch %12699
      %12700 = OpLabel
      %12706 = OpIEqual %bool %12670 %uint_0
      %12707 = OpSelect %uint %12706 %12697 %12669
      %12708 = OpIEqual %bool %12670 %uint_1
      %12709 = OpSelect %uint %12708 %12697 %12668
      %12710 = OpIEqual %bool %12670 %uint_2
      %12711 = OpSelect %uint %12710 %12697 %12667
               OpBranch %12699
      %12699 = OpLabel
      %12712 = OpPhi %uint %12667 %12701 %12711 %12700
      %12713 = OpPhi %uint %12668 %12701 %12709 %12700
      %12714 = OpPhi %uint %12669 %12701 %12707 %12700
      %12715 = OpShiftRightLogical %uint %12575 %uint_2
      %12716 = OpBitwiseAnd %uint %12715 %uint_7
      %12717 = OpIEqual %bool %12716 %uint_3
               OpSelectionMerge %12718 None
               OpBranchConditional %12717 %12719 %12718
      %12719 = OpLabel
      %12720 = OpBitwiseAnd %uint %10905 %uint_4294967292
      %12721 = OpBitwiseOr %uint %12720 %uint_3
      %12722 = OpExtInst %float %1 Fma %10666 %float_255 %float_0_5
      %12723 = OpConvertFToU %uint %12722
      %12724 = OpBitwiseAnd %uint %12721 %uint_3
      %12725 = OpShiftLeftLogical %uint %12723 %uint_24
      %12726 = OpBitwiseOr %uint %12724 %12725
      %12727 = OpBitwiseOr %uint %12726 %uint_16711680
      %12728 = OpCompositeExtract %float %10659 0
      %12729 = OpCompositeExtract %float %10659 1
      %12730 = OpCompositeExtract %float %10659 2
      %12731 = OpCompositeConstruct %v4float %12728 %12729 %12730 %float_0
      %12732 = OpVectorShuffle %v3float %12731 %12731 0 1 2
      %12733 = OpExtInst %v3float %1 FClamp %12732 %100 %125
      %12734 = OpCompositeExtract %float %12733 0
               OpSelectionMerge %12735 None
               OpSwitch %uint_0 %12736
      %12736 = OpLabel
      %12737 = OpFOrdLessThan %bool %12734 %float_0_00313066994
               OpSelectionMerge %12738 None
               OpBranchConditional %12737 %12739 %12738
      %12739 = OpLabel
      %12740 = OpFMul %float %12734 %float_12_9200001
               OpBranch %12735
      %12738 = OpLabel
      %12741 = OpExtInst %float %1 Pow %12734 %float_0_416666657
      %12742 = OpExtInst %float %1 Fma %12741 %float_1_05499995 %float_n0_0549999997
               OpBranch %12735
      %12735 = OpLabel
      %12743 = OpPhi %float %12740 %12739 %12742 %12738
      %12744 = OpCompositeExtract %float %12733 1
               OpSelectionMerge %12745 None
               OpSwitch %uint_0 %12746
      %12746 = OpLabel
      %12747 = OpFOrdLessThan %bool %12744 %float_0_00313066994
               OpSelectionMerge %12748 None
               OpBranchConditional %12747 %12749 %12748
      %12749 = OpLabel
      %12750 = OpFMul %float %12744 %float_12_9200001
               OpBranch %12745
      %12748 = OpLabel
      %12751 = OpExtInst %float %1 Pow %12744 %float_0_416666657
      %12752 = OpExtInst %float %1 Fma %12751 %float_1_05499995 %float_n0_0549999997
               OpBranch %12745
      %12745 = OpLabel
      %12753 = OpPhi %float %12750 %12749 %12752 %12748
      %12754 = OpCompositeExtract %float %12733 2
               OpSelectionMerge %12755 None
               OpSwitch %uint_0 %12756
      %12756 = OpLabel
      %12757 = OpFOrdLessThan %bool %12754 %float_0_00313066994
               OpSelectionMerge %12758 None
               OpBranchConditional %12757 %12759 %12758
      %12759 = OpLabel
      %12760 = OpFMul %float %12754 %float_12_9200001
               OpBranch %12755
      %12758 = OpLabel
      %12761 = OpExtInst %float %1 Pow %12754 %float_0_416666657
      %12762 = OpExtInst %float %1 Fma %12761 %float_1_05499995 %float_n0_0549999997
               OpBranch %12755
      %12755 = OpLabel
      %12763 = OpPhi %float %12760 %12759 %12762 %12758
      %12764 = OpExtInst %float %1 FClamp %12743 %float_0 %float_1
      %12765 = OpFMul %float %12764 %float_255
      %12766 = OpConvertFToU %uint %12765
      %12767 = OpShiftLeftLogical %uint %12766 %uint_0
      %12768 = OpExtInst %float %1 FClamp %12753 %float_0 %float_1
      %12769 = OpFMul %float %12768 %float_255
      %12770 = OpConvertFToU %uint %12769
      %12771 = OpShiftLeftLogical %uint %12770 %uint_8
      %12772 = OpExtInst %float %1 FClamp %12763 %float_0 %float_1
      %12773 = OpFMul %float %12772 %float_255
      %12774 = OpConvertFToU %uint %12773
      %12775 = OpShiftLeftLogical %uint %12774 %uint_16
      %12776 = OpBitwiseOr %uint %12767 %12771
      %12777 = OpBitwiseOr %uint %12776 %12775
      %12778 = OpBitwiseOr %uint %12777 %uint_0
               OpBranch %12718
      %12718 = OpLabel
      %12779 = OpPhi %uint %450 %12699 %12778 %12755
      %12780 = OpPhi %uint %10905 %12699 %12727 %12755
               OpBranch %12588
      %12590 = OpLabel
      %12781 = OpCompositeExtract %float %10659 0
      %12782 = OpCompositeExtract %float %10659 1
      %12783 = OpCompositeExtract %float %10659 2
      %12784 = OpCompositeConstruct %v4float %12781 %12782 %12783 %float_0
      %12785 = OpVectorShuffle %v3float %12784 %12784 0 1 2
      %12786 = OpExtInst %v3float %1 FClamp %12785 %100 %125
      %12787 = OpCompositeExtract %float %12786 0
               OpSelectionMerge %12788 None
               OpSwitch %uint_0 %12789
      %12789 = OpLabel
      %12790 = OpFOrdLessThan %bool %12787 %float_0_00313066994
               OpSelectionMerge %12791 None
               OpBranchConditional %12790 %12792 %12791
      %12792 = OpLabel
      %12793 = OpFMul %float %12787 %float_12_9200001
               OpBranch %12788
      %12791 = OpLabel
      %12794 = OpExtInst %float %1 Pow %12787 %float_0_416666657
      %12795 = OpExtInst %float %1 Fma %12794 %float_1_05499995 %float_n0_0549999997
               OpBranch %12788
      %12788 = OpLabel
      %12796 = OpPhi %float %12793 %12792 %12795 %12791
      %12797 = OpCompositeExtract %float %12786 1
               OpSelectionMerge %12798 None
               OpSwitch %uint_0 %12799
      %12799 = OpLabel
      %12800 = OpFOrdLessThan %bool %12797 %float_0_00313066994
               OpSelectionMerge %12801 None
               OpBranchConditional %12800 %12802 %12801
      %12802 = OpLabel
      %12803 = OpFMul %float %12797 %float_12_9200001
               OpBranch %12798
      %12801 = OpLabel
      %12804 = OpExtInst %float %1 Pow %12797 %float_0_416666657
      %12805 = OpExtInst %float %1 Fma %12804 %float_1_05499995 %float_n0_0549999997
               OpBranch %12798
      %12798 = OpLabel
      %12806 = OpPhi %float %12803 %12802 %12805 %12801
      %12807 = OpCompositeExtract %float %12786 2
               OpSelectionMerge %12808 None
               OpSwitch %uint_0 %12809
      %12809 = OpLabel
      %12810 = OpFOrdLessThan %bool %12807 %float_0_00313066994
               OpSelectionMerge %12811 None
               OpBranchConditional %12810 %12812 %12811
      %12812 = OpLabel
      %12813 = OpFMul %float %12807 %float_12_9200001
               OpBranch %12808
      %12811 = OpLabel
      %12814 = OpExtInst %float %1 Pow %12807 %float_0_416666657
      %12815 = OpExtInst %float %1 Fma %12814 %float_1_05499995 %float_n0_0549999997
               OpBranch %12808
      %12808 = OpLabel
      %12816 = OpPhi %float %12813 %12812 %12815 %12811
      %12817 = OpExtInst %float %1 FClamp %12796 %float_0 %float_1
      %12818 = OpFMul %float %12817 %float_255
      %12819 = OpConvertFToU %uint %12818
      %12820 = OpShiftLeftLogical %uint %12819 %uint_0
      %12821 = OpExtInst %float %1 FClamp %12806 %float_0 %float_1
      %12822 = OpFMul %float %12821 %float_255
      %12823 = OpConvertFToU %uint %12822
      %12824 = OpShiftLeftLogical %uint %12823 %uint_8
      %12825 = OpExtInst %float %1 FClamp %12816 %float_0 %float_1
      %12826 = OpFMul %float %12825 %float_255
      %12827 = OpConvertFToU %uint %12826
      %12828 = OpShiftLeftLogical %uint %12827 %uint_16
      %12829 = OpBitwiseOr %uint %12820 %12824
      %12830 = OpBitwiseOr %uint %12829 %12828
      %12831 = OpBitwiseOr %uint %12830 %uint_0
      %12832 = OpULessThan %bool %12579 %uint_3
               OpSelectionMerge %12833 None
               OpBranchConditional %12832 %12834 %12835
      %12835 = OpLabel
      %12836 = OpISub %uint %12579 %uint_3
      %12837 = OpCompositeExtract %uint %10656 0
      %12838 = OpCompositeExtract %uint %10656 1
      %12839 = OpCompositeConstruct %v3uint %12837 %12838 %12836
               OpImageWrite %10657 %12839 %12831 None
               OpBranch %12833
      %12834 = OpLabel
      %12840 = OpIEqual %bool %12579 %uint_0
      %12841 = OpSelect %uint %12840 %12831 %12578
      %12842 = OpIEqual %bool %12579 %uint_1
      %12843 = OpSelect %uint %12842 %12831 %12577
      %12844 = OpIEqual %bool %12579 %uint_2
      %12845 = OpSelect %uint %12844 %12831 %12576
               OpBranch %12833
      %12833 = OpLabel
      %12846 = OpPhi %uint %12576 %12835 %12845 %12834
      %12847 = OpPhi %uint %12577 %12835 %12843 %12834
      %12848 = OpPhi %uint %12578 %12835 %12841 %12834
      %12849 = OpIAdd %uint %12579 %uint_1
      %12850 = OpExtInst %float %1 FClamp %10662 %float_0 %float_1
      %12851 = OpFMul %float %12850 %float_255
      %12852 = OpConvertFToU %uint %12851
      %12853 = OpShiftLeftLogical %uint %12852 %uint_8
      %12854 = OpExtInst %float %1 FClamp %10666 %float_0 %float_1
      %12855 = OpFMul %float %12854 %float_255
      %12856 = OpConvertFToU %uint %12855
      %12857 = OpShiftLeftLogical %uint %12856 %uint_16
      %12858 = OpExtInst %float %1 FClamp %10668 %float_0 %float_1
      %12859 = OpFMul %float %12858 %float_255
      %12860 = OpConvertFToU %uint %12859
      %12861 = OpShiftLeftLogical %uint %12860 %uint_24
      %12862 = OpBitwiseOr %uint %uint_0 %12853
      %12863 = OpBitwiseOr %uint %12862 %12857
      %12864 = OpBitwiseOr %uint %12863 %12861
      %12865 = OpULessThan %bool %12849 %uint_3
               OpSelectionMerge %12866 None
               OpBranchConditional %12865 %12867 %12868
      %12868 = OpLabel
      %12869 = OpIAdd %uint %12579 %uint_4294967294
      %12870 = OpCompositeExtract %uint %10656 0
      %12871 = OpCompositeExtract %uint %10656 1
      %12872 = OpCompositeConstruct %v3uint %12870 %12871 %12869
               OpImageWrite %10657 %12872 %12864 None
               OpBranch %12866
      %12867 = OpLabel
      %12873 = OpIEqual %bool %12849 %uint_0
      %12874 = OpSelect %uint %12873 %12864 %12848
      %12875 = OpIEqual %bool %12849 %uint_1
      %12876 = OpSelect %uint %12875 %12864 %12847
      %12877 = OpIEqual %bool %12849 %uint_2
      %12878 = OpSelect %uint %12877 %12864 %12846
               OpBranch %12866
      %12866 = OpLabel
      %12879 = OpPhi %uint %12846 %12868 %12878 %12867
      %12880 = OpPhi %uint %12847 %12868 %12876 %12867
      %12881 = OpPhi %uint %12848 %12868 %12874 %12867
               OpBranch %12588
      %12589 = OpLabel
      %12882 = OpVectorShuffle %v3float %10659 %451 0 1 2
      %12883 = OpFSub %float %8376 %float_0_5
      %12884 = OpFMul %float %12883 %float_0_00787401572
      %12885 = OpFMul %float %12883 %float_0_0158730168
      %12886 = OpCompositeConstruct %v3float %12884 %12884 %12885
      %12887 = OpExtInst %v3float %1 FClamp %12882 %100 %125
      %12888 = OpCompositeExtract %float %12887 0
               OpSelectionMerge %12889 None
               OpSwitch %uint_0 %12890
      %12890 = OpLabel
      %12891 = OpFOrdLessThan %bool %12888 %float_0_00313066994
               OpSelectionMerge %12892 None
               OpBranchConditional %12891 %12893 %12892
      %12893 = OpLabel
      %12894 = OpFMul %float %12888 %float_12_9200001
               OpBranch %12889
      %12892 = OpLabel
      %12895 = OpExtInst %float %1 Pow %12888 %float_0_416666657
      %12896 = OpExtInst %float %1 Fma %12895 %float_1_05499995 %float_n0_0549999997
               OpBranch %12889
      %12889 = OpLabel
      %12897 = OpPhi %float %12894 %12893 %12896 %12892
      %12898 = OpCompositeExtract %float %12887 1
               OpSelectionMerge %12899 None
               OpSwitch %uint_0 %12900
      %12900 = OpLabel
      %12901 = OpFOrdLessThan %bool %12898 %float_0_00313066994
               OpSelectionMerge %12902 None
               OpBranchConditional %12901 %12903 %12902
      %12903 = OpLabel
      %12904 = OpFMul %float %12898 %float_12_9200001
               OpBranch %12899
      %12902 = OpLabel
      %12905 = OpExtInst %float %1 Pow %12898 %float_0_416666657
      %12906 = OpExtInst %float %1 Fma %12905 %float_1_05499995 %float_n0_0549999997
               OpBranch %12899
      %12899 = OpLabel
      %12907 = OpPhi %float %12904 %12903 %12906 %12902
      %12908 = OpCompositeExtract %float %12887 2
               OpSelectionMerge %12909 None
               OpSwitch %uint_0 %12910
      %12910 = OpLabel
      %12911 = OpFOrdLessThan %bool %12908 %float_0_00313066994
               OpSelectionMerge %12912 None
               OpBranchConditional %12911 %12913 %12912
      %12913 = OpLabel
      %12914 = OpFMul %float %12908 %float_12_9200001
               OpBranch %12909
      %12912 = OpLabel
      %12915 = OpExtInst %float %1 Pow %12908 %float_0_416666657
      %12916 = OpExtInst %float %1 Fma %12915 %float_1_05499995 %float_n0_0549999997
               OpBranch %12909
      %12909 = OpLabel
      %12917 = OpPhi %float %12914 %12913 %12916 %12912
      %12918 = OpCompositeConstruct %v3float %12897 %12907 %12917
      %12919 = OpBitcast %v3uint %12918
      %12920 = OpBitwiseAnd %v3uint %12919 %342
      %12921 = OpExtInst %v3uint %1 UMin %12920 %490
      %12922 = OpConvertUToF %v3float %12921
      %12923 = OpExtInst %v3float %1 Fma %12886 %12922 %12918
      %12924 = OpExtInst %v3float %1 FClamp %12923 %100 %125
      %12925 = OpCompositeExtract %float %12924 0
      %12926 = OpFMul %float %12925 %float_127
      %12927 = OpConvertFToU %uint %12926
      %12928 = OpShiftLeftLogical %uint %12927 %uint_0
      %12929 = OpCompositeExtract %float %12924 1
      %12930 = OpFMul %float %12929 %float_127
      %12931 = OpConvertFToU %uint %12930
      %12932 = OpShiftLeftLogical %uint %12931 %uint_7
      %12933 = OpCompositeExtract %float %12924 2
      %12934 = OpFMul %float %12933 %float_63
      %12935 = OpConvertFToU %uint %12934
      %12936 = OpShiftLeftLogical %uint %12935 %uint_14
      %12937 = OpBitwiseOr %uint %12928 %12932
      %12938 = OpBitwiseOr %uint %12937 %12936
      %12939 = OpVectorShuffle %v3float %10669 %10669 0 1 2
      %12940 = OpExtInst %v3float %1 FClamp %12939 %100 %125
      %12941 = OpCompositeExtract %float %12940 0
               OpSelectionMerge %12942 None
               OpSwitch %uint_0 %12943
      %12943 = OpLabel
      %12944 = OpFOrdLessThan %bool %12941 %float_0_00313066994
               OpSelectionMerge %12945 None
               OpBranchConditional %12944 %12946 %12945
      %12946 = OpLabel
      %12947 = OpFMul %float %12941 %float_12_9200001
               OpBranch %12942
      %12945 = OpLabel
      %12948 = OpExtInst %float %1 Pow %12941 %float_0_416666657
      %12949 = OpExtInst %float %1 Fma %12948 %float_1_05499995 %float_n0_0549999997
               OpBranch %12942
      %12942 = OpLabel
      %12950 = OpPhi %float %12947 %12946 %12949 %12945
      %12951 = OpCompositeExtract %float %12940 1
               OpSelectionMerge %12952 None
               OpSwitch %uint_0 %12953
      %12953 = OpLabel
      %12954 = OpFOrdLessThan %bool %12951 %float_0_00313066994
               OpSelectionMerge %12955 None
               OpBranchConditional %12954 %12956 %12955
      %12956 = OpLabel
      %12957 = OpFMul %float %12951 %float_12_9200001
               OpBranch %12952
      %12955 = OpLabel
      %12958 = OpExtInst %float %1 Pow %12951 %float_0_416666657
      %12959 = OpExtInst %float %1 Fma %12958 %float_1_05499995 %float_n0_0549999997
               OpBranch %12952
      %12952 = OpLabel
      %12960 = OpPhi %float %12957 %12956 %12959 %12955
      %12961 = OpCompositeExtract %float %12940 2
               OpSelectionMerge %12962 None
               OpSwitch %uint_0 %12963
      %12963 = OpLabel
      %12964 = OpFOrdLessThan %bool %12961 %float_0_00313066994
               OpSelectionMerge %12965 None
               OpBranchConditional %12964 %12966 %12965
      %12966 = OpLabel
      %12967 = OpFMul %float %12961 %float_12_9200001
               OpBranch %12962
      %12965 = OpLabel
      %12968 = OpExtInst %float %1 Pow %12961 %float_0_416666657
      %12969 = OpExtInst %float %1 Fma %12968 %float_1_05499995 %float_n0_0549999997
               OpBranch %12962
      %12962 = OpLabel
      %12970 = OpPhi %float %12967 %12966 %12969 %12965
      %12971 = OpCompositeConstruct %v3float %12950 %12960 %12970
      %12972 = OpBitcast %v3uint %12971
      %12973 = OpBitwiseAnd %v3uint %12972 %342
      %12974 = OpExtInst %v3uint %1 UMin %12973 %490
      %12975 = OpConvertUToF %v3float %12974
      %12976 = OpExtInst %v3float %1 Fma %12886 %12975 %12971
      %12977 = OpExtInst %v3float %1 FClamp %12976 %100 %125
      %12978 = OpCompositeExtract %float %12977 0
      %12979 = OpFMul %float %12978 %float_127
      %12980 = OpConvertFToU %uint %12979
      %12981 = OpShiftLeftLogical %uint %12980 %uint_0
      %12982 = OpCompositeExtract %float %12977 1
      %12983 = OpFMul %float %12982 %float_127
      %12984 = OpConvertFToU %uint %12983
      %12985 = OpShiftLeftLogical %uint %12984 %uint_7
      %12986 = OpCompositeExtract %float %12977 2
      %12987 = OpFMul %float %12986 %float_63
      %12988 = OpConvertFToU %uint %12987
      %12989 = OpShiftLeftLogical %uint %12988 %uint_14
      %12990 = OpBitwiseOr %uint %12981 %12985
      %12991 = OpBitwiseOr %uint %12990 %12989
      %12992 = OpShiftLeftLogical %uint %12938 %uint_12
      %12993 = OpBitwiseAnd %uint %12992 %uint_4294963200
      %12994 = OpBitwiseAnd %uint %12991 %uint_4095
      %12995 = OpBitwiseOr %uint %12993 %12994
      %12996 = OpShiftRightLogical %uint %12991 %uint_12
      %12997 = OpBitwiseAnd %uint %12996 %uint_255
      %12998 = OpULessThan %bool %12579 %uint_3
               OpSelectionMerge %12999 None
               OpBranchConditional %12998 %13000 %13001
      %13001 = OpLabel
      %13002 = OpISub %uint %12579 %uint_3
      %13003 = OpCompositeExtract %uint %10656 0
      %13004 = OpCompositeExtract %uint %10656 1
      %13005 = OpCompositeConstruct %v3uint %13003 %13004 %13002
               OpImageWrite %10657 %13005 %12995 None
               OpBranch %12999
      %13000 = OpLabel
      %13006 = OpIEqual %bool %12579 %uint_0
      %13007 = OpSelect %uint %13006 %12995 %12578
      %13008 = OpIEqual %bool %12579 %uint_1
      %13009 = OpSelect %uint %13008 %12995 %12577
      %13010 = OpIEqual %bool %12579 %uint_2
      %13011 = OpSelect %uint %13010 %12995 %12576
               OpBranch %12999
      %12999 = OpLabel
      %13012 = OpPhi %uint %12576 %13001 %13011 %13000
      %13013 = OpPhi %uint %12577 %13001 %13009 %13000
      %13014 = OpPhi %uint %12578 %13001 %13007 %13000
      %13015 = OpIAdd %uint %12579 %uint_1
      %13016 = OpFAdd %float %10668 %float_1
      %13017 = OpFMul %float %13016 %float_0_5
      %13018 = OpExtInst %float %1 FClamp %13017 %float_0 %float_1
      %13019 = OpFMul %float %13018 %float_255
      %13020 = OpConvertFToU %uint %13019
      %13021 = OpShiftLeftLogical %uint %13020 %uint_16
      %13022 = OpBitwiseOr %uint %uint_0 %13021
      %13023 = OpBitwiseOr %uint %13022 %uint_2130706432
      %13024 = OpBitwiseOr %uint %12997 %13023
      %13025 = OpULessThan %bool %13015 %uint_3
               OpSelectionMerge %13026 None
               OpBranchConditional %13025 %13027 %13028
      %13028 = OpLabel
      %13029 = OpIAdd %uint %12579 %uint_4294967294
      %13030 = OpCompositeExtract %uint %10656 0
      %13031 = OpCompositeExtract %uint %10656 1
      %13032 = OpCompositeConstruct %v3uint %13030 %13031 %13029
               OpImageWrite %10657 %13032 %13024 None
               OpBranch %13026
      %13027 = OpLabel
      %13033 = OpIEqual %bool %13015 %uint_0
      %13034 = OpSelect %uint %13033 %13024 %13014
      %13035 = OpIEqual %bool %13015 %uint_1
      %13036 = OpSelect %uint %13035 %13024 %13013
      %13037 = OpIEqual %bool %13015 %uint_2
      %13038 = OpSelect %uint %13037 %13024 %13012
               OpBranch %13026
      %13026 = OpLabel
      %13039 = OpPhi %uint %13012 %13028 %13038 %13027
      %13040 = OpPhi %uint %13013 %13028 %13036 %13027
      %13041 = OpPhi %uint %13014 %13028 %13034 %13027
      %13042 = OpIAdd %uint %12579 %uint_2
      %13043 = OpShiftRightLogical %uint %12575 %uint_7
      %13044 = OpBitwiseAnd %uint %13043 %uint_1
      %13045 = OpINotEqual %bool %13044 %uint_0
      %13046 = OpShiftRightLogical %uint %12575 %uint_6
      %13047 = OpBitwiseAnd %uint %13046 %uint_1
      %13048 = OpINotEqual %bool %13047 %uint_0
      %13049 = OpLogicalOr %bool %13045 %13048
               OpSelectionMerge %13050 None
               OpBranchConditional %13049 %13051 %13050
      %13051 = OpLabel
      %13052 = OpExtInst %float %1 NMax %float_0 %float_0
      %13053 = OpExtInst %float %1 NMax %float_0 %13052
      %13054 = OpFOrdGreaterThan %bool %13053 %float_0
      %13055 = OpCompositeConstruct %v3bool %13054 %13054 %13054
      %13056 = OpSelect %v3float %13055 %100 %125
      %13057 = OpDot %float %13056 %330
      %13058 = OpDot %float %13056 %331
      %13059 = OpCompositeConstruct %v3float %537 %13057 %13058
      %13060 = OpExtInst %v3float %1 Fma %13059 %318 %319
      %13061 = OpCompositeExtract %float %13060 1
      %13062 = OpCompositeExtract %float %13060 2
      %13063 = OpExtInst %float %1 FClamp %13061 %float_0 %float_1
      %13064 = OpFMul %float %13063 %float_255
      %13065 = OpConvertFToU %uint %13064
      %13066 = OpShiftLeftLogical %uint %13065 %uint_0
      %13067 = OpExtInst %float %1 FClamp %13062 %float_0 %float_1
      %13068 = OpFMul %float %13067 %float_255
      %13069 = OpConvertFToU %uint %13068
      %13070 = OpShiftLeftLogical %uint %13069 %uint_8
      %13071 = OpBitwiseOr %uint %13066 %13070
      %13072 = OpBitwiseOr %uint %13071 %uint_0
      %13073 = OpBitwiseOr %uint %13072 %uint_0
      %13074 = OpBitwiseOr %uint %uint_0 %13073
      %13075 = OpULessThan %bool %13042 %uint_3
               OpSelectionMerge %13076 None
               OpBranchConditional %13075 %13077 %13078
      %13078 = OpLabel
      %13079 = OpIAdd %uint %12579 %uint_4294967295
      %13080 = OpCompositeExtract %uint %10656 0
      %13081 = OpCompositeExtract %uint %10656 1
      %13082 = OpCompositeConstruct %v3uint %13080 %13081 %13079
               OpImageWrite %10657 %13082 %13074 None
               OpBranch %13076
      %13077 = OpLabel
      %13083 = OpIEqual %bool %13042 %uint_0
      %13084 = OpSelect %uint %13083 %13074 %13041
      %13085 = OpIEqual %bool %13042 %uint_1
      %13086 = OpSelect %uint %13085 %13074 %13040
      %13087 = OpIEqual %bool %13042 %uint_2
      %13088 = OpSelect %uint %13087 %13074 %13039
               OpBranch %13076
      %13076 = OpLabel
      %13089 = OpPhi %uint %13039 %13078 %13088 %13077
      %13090 = OpPhi %uint %13040 %13078 %13086 %13077
      %13091 = OpPhi %uint %13041 %13078 %13084 %13077
      %13092 = OpIAdd %uint %12579 %uint_3
               OpBranch %13050
      %13050 = OpLabel
      %13093 = OpPhi %uint %13039 %13026 %13089 %13076
      %13094 = OpPhi %uint %13040 %13026 %13090 %13076
      %13095 = OpPhi %uint %13041 %13026 %13091 %13076
      %13096 = OpPhi %uint %13042 %13026 %13092 %13076
      %13097 = OpShiftRightLogical %uint %12575 %uint_2
      %13098 = OpBitwiseAnd %uint %13097 %uint_7
      %13099 = OpINotEqual %bool %13098 %uint_0
               OpSelectionMerge %13100 None
               OpBranchConditional %13099 %13101 %13100
      %13101 = OpLabel
      %13102 = OpINotEqual %bool %13098 %uint_4
               OpSelectionMerge %13103 None
               OpBranchConditional %13102 %13104 %13103
      %13104 = OpLabel
      %13105 = OpBitwiseAnd %uint %10905 %uint_4294967292
      %13106 = OpBitwiseAnd %uint %13098 %uint_3
      %13107 = OpBitwiseOr %uint %13105 %13106
      %13108 = OpIEqual %bool %13098 %uint_1
               OpSelectionMerge %13109 None
               OpBranchConditional %13108 %13110 %13111
      %13111 = OpLabel
      %13112 = OpIEqual %bool %13098 %uint_3
               OpSelectionMerge %13113 None
               OpBranchConditional %13112 %13114 %13115
      %13115 = OpLabel
      %13116 = OpBitwiseAnd %uint %13107 %uint_3
      %13117 = OpExtInst %uint %1 PackHalf2x16 %544
      %13118 = OpShiftRightLogical %uint %13117 %uint_5
      %13119 = OpBitwiseAnd %uint %13118 %uint_1023
      %13120 = OpShiftLeftLogical %uint %13119 %uint_22
      %13121 = OpShiftLeftLogical %uint %13119 %uint_12
      %13122 = OpBitwiseOr %uint %13120 %13121
      %13123 = OpShiftLeftLogical %uint %13119 %uint_2
      %13124 = OpBitwiseOr %uint %13122 %13123
      %13125 = OpBitwiseOr %uint %13116 %13124
               OpBranch %13113
      %13114 = OpLabel
      %13126 = OpExtInst %float %1 Fma %453 %float_255 %float_0_5
      %13127 = OpConvertFToU %uint %13126
      %13128 = OpBitwiseAnd %uint %13107 %uint_3
      %13129 = OpShiftLeftLogical %uint %13127 %uint_24
      %13130 = OpBitwiseOr %uint %13128 %13129
      %13131 = OpBitwiseOr %uint %13130 %uint_0
               OpBranch %13113
      %13113 = OpLabel
      %13132 = OpPhi %uint %13125 %13115 %13131 %13114
               OpBranch %13109
      %13110 = OpLabel
      %13133 = OpExtInst %float %1 FAbs %453
      %13134 = OpFSub %float %float_1 %13133
      %13135 = OpBitwiseAnd %uint %13107 %uint_3
      %13136 = OpExtInst %float %1 FClamp %13134 %float_0 %float_1
      %13137 = OpFMul %float %13136 %float_255
      %13138 = OpConvertFToU %uint %13137
      %13139 = OpShiftLeftLogical %uint %13138 %uint_2
      %13140 = OpBitwiseOr %uint %13135 %13139
               OpBranch %13109
      %13109 = OpLabel
      %13141 = OpPhi %uint %13132 %13113 %13140 %13110
      %13142 = OpCompositeExtract %float %10659 0
      %13143 = OpCompositeExtract %float %10659 1
      %13144 = OpCompositeExtract %float %10659 2
      %13145 = OpCompositeConstruct %v4float %13142 %13143 %13144 %float_0
      %13146 = OpVectorShuffle %v3float %13145 %13145 0 1 2
      %13147 = OpExtInst %v3float %1 FClamp %13146 %100 %125
      %13148 = OpCompositeExtract %float %13147 0
               OpSelectionMerge %13149 None
               OpSwitch %uint_0 %13150
      %13150 = OpLabel
      %13151 = OpFOrdLessThan %bool %13148 %float_0_00313066994
               OpSelectionMerge %13152 None
               OpBranchConditional %13151 %13153 %13152
      %13153 = OpLabel
      %13154 = OpFMul %float %13148 %float_12_9200001
               OpBranch %13149
      %13152 = OpLabel
      %13155 = OpExtInst %float %1 Pow %13148 %float_0_416666657
      %13156 = OpExtInst %float %1 Fma %13155 %float_1_05499995 %float_n0_0549999997
               OpBranch %13149
      %13149 = OpLabel
      %13157 = OpPhi %float %13154 %13153 %13156 %13152
      %13158 = OpCompositeExtract %float %13147 1
               OpSelectionMerge %13159 None
               OpSwitch %uint_0 %13160
      %13160 = OpLabel
      %13161 = OpFOrdLessThan %bool %13158 %float_0_00313066994
               OpSelectionMerge %13162 None
               OpBranchConditional %13161 %13163 %13162
      %13163 = OpLabel
      %13164 = OpFMul %float %13158 %float_12_9200001
               OpBranch %13159
      %13162 = OpLabel
      %13165 = OpExtInst %float %1 Pow %13158 %float_0_416666657
      %13166 = OpExtInst %float %1 Fma %13165 %float_1_05499995 %float_n0_0549999997
               OpBranch %13159
      %13159 = OpLabel
      %13167 = OpPhi %float %13164 %13163 %13166 %13162
      %13168 = OpCompositeExtract %float %13147 2
               OpSelectionMerge %13169 None
               OpSwitch %uint_0 %13170
      %13170 = OpLabel
      %13171 = OpFOrdLessThan %bool %13168 %float_0_00313066994
               OpSelectionMerge %13172 None
               OpBranchConditional %13171 %13173 %13172
      %13173 = OpLabel
      %13174 = OpFMul %float %13168 %float_12_9200001
               OpBranch %13169
      %13172 = OpLabel
      %13175 = OpExtInst %float %1 Pow %13168 %float_0_416666657
      %13176 = OpExtInst %float %1 Fma %13175 %float_1_05499995 %float_n0_0549999997
               OpBranch %13169
      %13169 = OpLabel
      %13177 = OpPhi %float %13174 %13173 %13176 %13172
      %13178 = OpExtInst %float %1 FClamp %13157 %float_0 %float_1
      %13179 = OpFMul %float %13178 %float_255
      %13180 = OpConvertFToU %uint %13179
      %13181 = OpShiftLeftLogical %uint %13180 %uint_0
      %13182 = OpExtInst %float %1 FClamp %13167 %float_0 %float_1
      %13183 = OpFMul %float %13182 %float_255
      %13184 = OpConvertFToU %uint %13183
      %13185 = OpShiftLeftLogical %uint %13184 %uint_8
      %13186 = OpExtInst %float %1 FClamp %13177 %float_0 %float_1
      %13187 = OpFMul %float %13186 %float_255
      %13188 = OpConvertFToU %uint %13187
      %13189 = OpShiftLeftLogical %uint %13188 %uint_16
      %13190 = OpBitwiseOr %uint %13181 %13185
      %13191 = OpBitwiseOr %uint %13190 %13189
      %13192 = OpBitwiseOr %uint %13191 %uint_0
               OpBranch %13103
      %13103 = OpLabel
      %13193 = OpPhi %uint %450 %13101 %13192 %13169
      %13194 = OpPhi %uint %10905 %13101 %13141 %13169
      %13195 = OpIEqual %bool %13098 %uint_3
      %13196 = OpIAdd %uint %13096 %uint_1
               OpSelectionMerge %13197 None
               OpBranchConditional %13195 %13198 %13199
      %13199 = OpLabel
      %13200 = OpShiftRightLogical %uint %12575 %uint_10
      %13201 = OpBitwiseAnd %uint %13200 %uint_1
      %13202 = OpINotEqual %bool %13201 %uint_0
      %13203 = OpIEqual %bool %13098 %uint_2
      %13204 = OpLogicalAnd %bool %13202 %13203
               OpSelectionMerge %13205 None
               OpBranchConditional %13204 %13206 %13205
      %13206 = OpLabel
      %13207 = OpExtInst %v3float %1 NMax %541 %100
      %13208 = OpVectorShuffle %v4float %451 %13207 4 5 6 3
               OpBranch %13205
      %13205 = OpLabel
      %13209 = OpPhi %v4float %451 %13199 %13208 %13206
      %13210 = OpCompositeExtract %float %13209 0
      %13211 = OpCompositeConstruct %v2float %13210 %float_0
      %13212 = OpExtInst %uint %1 PackHalf2x16 %13211
      %13213 = OpShiftLeftLogical %uint %13212 %uint_17
      %13214 = OpBitwiseAnd %uint %13213 %uint_4292870144
      %13215 = OpCompositeExtract %float %13209 1
      %13216 = OpCompositeConstruct %v2float %13215 %float_0
      %13217 = OpExtInst %uint %1 PackHalf2x16 %13216
      %13218 = OpShiftLeftLogical %uint %13217 %uint_6
      %13219 = OpBitwiseAnd %uint %13218 %uint_2096128
      %13220 = OpCompositeExtract %float %13209 2
      %13221 = OpCompositeConstruct %v2float %13220 %float_0
      %13222 = OpExtInst %uint %1 PackHalf2x16 %13221
      %13223 = OpShiftRightLogical %uint %13222 %uint_5
      %13224 = OpBitwiseAnd %uint %13223 %uint_1023
      %13225 = OpBitwiseOr %uint %13214 %13219
      %13226 = OpBitwiseOr %uint %13225 %13224
      %13227 = OpULessThan %bool %13096 %uint_3
               OpSelectionMerge %13228 None
               OpBranchConditional %13227 %13229 %13230
      %13230 = OpLabel
      %13231 = OpISub %uint %13096 %uint_3
      %13232 = OpCompositeExtract %uint %10656 0
      %13233 = OpCompositeExtract %uint %10656 1
      %13234 = OpCompositeConstruct %v3uint %13232 %13233 %13231
               OpImageWrite %10657 %13234 %13226 None
               OpBranch %13228
      %13229 = OpLabel
      %13235 = OpIEqual %bool %13096 %uint_0
      %13236 = OpSelect %uint %13235 %13226 %13095
      %13237 = OpIEqual %bool %13096 %uint_1
      %13238 = OpSelect %uint %13237 %13226 %13094
      %13239 = OpIEqual %bool %13096 %uint_2
      %13240 = OpSelect %uint %13239 %13226 %13093
               OpBranch %13228
      %13228 = OpLabel
      %13241 = OpPhi %uint %13093 %13230 %13240 %13229
      %13242 = OpPhi %uint %13094 %13230 %13238 %13229
      %13243 = OpPhi %uint %13095 %13230 %13236 %13229
               OpBranch %13197
      %13198 = OpLabel
      %13244 = OpExtInst %uint %1 PackHalf2x16 %544
      %13245 = OpShiftRightLogical %uint %13244 %uint_5
      %13246 = OpBitwiseAnd %uint %13245 %uint_1023
      %13247 = OpShiftLeftLogical %uint %13246 %uint_16
      %13248 = OpBitwiseOr %uint %uint_0 %13247
      %13249 = OpULessThan %bool %13096 %uint_3
               OpSelectionMerge %13250 None
               OpBranchConditional %13249 %13251 %13252
      %13252 = OpLabel
      %13253 = OpISub %uint %13096 %uint_3
      %13254 = OpCompositeExtract %uint %10656 0
      %13255 = OpCompositeExtract %uint %10656 1
      %13256 = OpCompositeConstruct %v3uint %13254 %13255 %13253
               OpImageWrite %10657 %13256 %13248 None
               OpBranch %13250
      %13251 = OpLabel
      %13257 = OpIEqual %bool %13096 %uint_0
      %13258 = OpSelect %uint %13257 %13248 %13095
      %13259 = OpIEqual %bool %13096 %uint_1
      %13260 = OpSelect %uint %13259 %13248 %13094
      %13261 = OpIEqual %bool %13096 %uint_2
      %13262 = OpSelect %uint %13261 %13248 %13093
               OpBranch %13250
      %13250 = OpLabel
      %13263 = OpPhi %uint %13093 %13252 %13262 %13251
      %13264 = OpPhi %uint %13094 %13252 %13260 %13251
      %13265 = OpPhi %uint %13095 %13252 %13258 %13251
               OpBranch %13197
      %13197 = OpLabel
      %13266 = OpPhi %uint %13241 %13228 %13263 %13250
      %13267 = OpPhi %uint %13242 %13228 %13264 %13250
      %13268 = OpPhi %uint %13243 %13228 %13265 %13250
               OpBranch %13100
      %13100 = OpLabel
      %13269 = OpPhi %uint %450 %13050 %13193 %13197
      %13270 = OpPhi %uint %10905 %13050 %13194 %13197
      %13271 = OpPhi %uint %13093 %13050 %13266 %13197
      %13272 = OpPhi %uint %13094 %13050 %13267 %13197
      %13273 = OpPhi %uint %13095 %13050 %13268 %13197
      %13274 = OpPhi %uint %13096 %13050 %13196 %13197
      %13275 = OpShiftRightLogical %uint %12575 %uint_9
      %13276 = OpBitwiseAnd %uint %13275 %uint_1
      %13277 = OpINotEqual %bool %13276 %uint_0
               OpSelectionMerge %13278 None
               OpBranchConditional %13277 %13279 %13278
      %13279 = OpLabel
               OpSelectionMerge %13280 None
               OpSwitch %uint_0 %13281
      %13281 = OpLabel
               OpSelectionMerge %13282 None
               OpBranchConditional %true %13283 %13282
      %13283 = OpLabel
               OpBranch %13280
      %13282 = OpLabel
      %13284 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13280
      %13280 = OpLabel
      %13285 = OpPhi %float %float_0 %13283 %13284 %13282
               OpSelectionMerge %13286 None
               OpSwitch %uint_0 %13287
      %13287 = OpLabel
               OpSelectionMerge %13288 None
               OpBranchConditional %true %13289 %13288
      %13289 = OpLabel
               OpBranch %13286
      %13288 = OpLabel
      %13290 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13286
      %13286 = OpLabel
      %13291 = OpPhi %float %float_0 %13289 %13290 %13288
               OpSelectionMerge %13292 None
               OpSwitch %uint_0 %13293
      %13293 = OpLabel
               OpSelectionMerge %13294 None
               OpBranchConditional %true %13295 %13294
      %13295 = OpLabel
               OpBranch %13292
      %13294 = OpLabel
      %13296 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13292
      %13292 = OpLabel
      %13297 = OpPhi %float %float_0 %13295 %13296 %13294
      %13298 = OpCompositeConstruct %v3float %13285 %13291 %13297
      %13299 = OpBitcast %v3uint %13298
      %13300 = OpBitwiseAnd %v3uint %13299 %342
      %13301 = OpExtInst %v3uint %1 UMin %13300 %490
      %13302 = OpConvertUToF %v3float %13301
      %13303 = OpExtInst %v3float %1 Fma %12886 %13302 %13298
      %13304 = OpExtInst %v3float %1 FClamp %13303 %100 %125
      %13305 = OpCompositeExtract %float %13304 0
      %13306 = OpFMul %float %13305 %float_127
      %13307 = OpConvertFToU %uint %13306
      %13308 = OpShiftLeftLogical %uint %13307 %uint_0
      %13309 = OpCompositeExtract %float %13304 1
      %13310 = OpFMul %float %13309 %float_127
      %13311 = OpConvertFToU %uint %13310
      %13312 = OpShiftLeftLogical %uint %13311 %uint_7
      %13313 = OpCompositeExtract %float %13304 2
      %13314 = OpFMul %float %13313 %float_63
      %13315 = OpConvertFToU %uint %13314
      %13316 = OpShiftLeftLogical %uint %13315 %uint_14
      %13317 = OpBitwiseOr %uint %13308 %13312
      %13318 = OpBitwiseOr %uint %13317 %13316
      %13319 = OpExtInst %float %1 Fma %12885 %float_0 %float_0
      %13320 = OpExtInst %float %1 FClamp %13319 %float_0 %float_1
      %13321 = OpFMul %float %13320 %float_63
      %13322 = OpConvertFToU %uint %13321
      %13323 = OpShiftLeftLogical %uint %13322 %uint_20
      %13324 = OpBitwiseOr %uint %13318 %13323
      %13325 = OpShiftLeftLogical %uint %13322 %uint_26
      %13326 = OpBitwiseOr %uint %13324 %13325
      %13327 = OpULessThan %bool %13274 %uint_3
               OpSelectionMerge %13328 None
               OpBranchConditional %13327 %13329 %13330
      %13330 = OpLabel
      %13331 = OpISub %uint %13274 %uint_3
      %13332 = OpCompositeExtract %uint %10656 0
      %13333 = OpCompositeExtract %uint %10656 1
      %13334 = OpCompositeConstruct %v3uint %13332 %13333 %13331
               OpImageWrite %10657 %13334 %13326 None
               OpBranch %13328
      %13329 = OpLabel
      %13335 = OpIEqual %bool %13274 %uint_0
      %13336 = OpSelect %uint %13335 %13326 %13273
      %13337 = OpIEqual %bool %13274 %uint_1
      %13338 = OpSelect %uint %13337 %13326 %13272
      %13339 = OpIEqual %bool %13274 %uint_2
      %13340 = OpSelect %uint %13339 %13326 %13271
               OpBranch %13328
      %13328 = OpLabel
      %13341 = OpPhi %uint %13271 %13330 %13340 %13329
      %13342 = OpPhi %uint %13272 %13330 %13338 %13329
      %13343 = OpPhi %uint %13273 %13330 %13336 %13329
      %13344 = OpIAdd %uint %13274 %uint_1
               OpBranch %13278
      %13278 = OpLabel
      %13345 = OpPhi %uint %13271 %13100 %13341 %13328
      %13346 = OpPhi %uint %13272 %13100 %13342 %13328
      %13347 = OpPhi %uint %13273 %13100 %13343 %13328
      %13348 = OpPhi %uint %13274 %13100 %13344 %13328
      %13349 = OpShiftRightLogical %uint %12575 %uint_16
      %13350 = OpBitwiseAnd %uint %13349 %uint_1
      %13351 = OpINotEqual %bool %13350 %uint_0
               OpSelectionMerge %13352 None
               OpBranchConditional %13351 %13353 %13352
      %13353 = OpLabel
               OpSelectionMerge %13354 None
               OpSwitch %uint_0 %13355
      %13355 = OpLabel
      %13356 = OpExtInst %float %1 Fma %float_1 %float_1_05499995 %float_n0_0549999997
               OpBranch %13354
      %13354 = OpLabel
               OpBranch %13357
      %13357 = OpLabel
               OpBranch %13358
      %13358 = OpLabel
      %13359 = OpExtInst %float %1 FClamp %13356 %float_0 %float_1
      %13360 = OpFMul %float %13359 %float_255
      %13361 = OpConvertFToU %uint %13360
      %13362 = OpShiftLeftLogical %uint %13361 %uint_0
      %13363 = OpShiftLeftLogical %uint %13361 %uint_8
      %13364 = OpShiftLeftLogical %uint %13361 %uint_16
      %13365 = OpBitwiseOr %uint %13362 %13363
      %13366 = OpBitwiseOr %uint %13365 %13364
      %13367 = OpBitwiseOr %uint %13366 %uint_0
      %13368 = OpULessThan %bool %13348 %uint_3
               OpSelectionMerge %13369 None
               OpBranchConditional %13368 %13370 %13371
      %13371 = OpLabel
      %13372 = OpISub %uint %13348 %uint_3
      %13373 = OpCompositeExtract %uint %10656 0
      %13374 = OpCompositeExtract %uint %10656 1
      %13375 = OpCompositeConstruct %v3uint %13373 %13374 %13372
               OpImageWrite %10657 %13375 %13367 None
               OpBranch %13369
      %13370 = OpLabel
      %13376 = OpIEqual %bool %13348 %uint_0
      %13377 = OpSelect %uint %13376 %13367 %13347
      %13378 = OpIEqual %bool %13348 %uint_1
      %13379 = OpSelect %uint %13378 %13367 %13346
      %13380 = OpIEqual %bool %13348 %uint_2
      %13381 = OpSelect %uint %13380 %13367 %13345
               OpBranch %13369
      %13369 = OpLabel
      %13382 = OpPhi %uint %13345 %13371 %13381 %13370
      %13383 = OpPhi %uint %13346 %13371 %13379 %13370
      %13384 = OpPhi %uint %13347 %13371 %13377 %13370
               OpBranch %13352
      %13352 = OpLabel
      %13385 = OpPhi %uint %13345 %13278 %13382 %13369
      %13386 = OpPhi %uint %13346 %13278 %13383 %13369
      %13387 = OpPhi %uint %13347 %13278 %13384 %13369
               OpBranch %12588
      %12588 = OpLabel
      %13388 = OpPhi %uint %450 %12585 %12779 %12718 %450 %12866 %13269 %13352
      %13389 = OpPhi %uint %10905 %12585 %12780 %12718 %10905 %12866 %13270 %13352
      %13390 = OpPhi %uint %12576 %12585 %12712 %12718 %12879 %12866 %13385 %13352
      %13391 = OpPhi %uint %12577 %12585 %12713 %12718 %12880 %12866 %13386 %13352
      %13392 = OpPhi %uint %12578 %12585 %12714 %12718 %12881 %12866 %13387 %13352
               OpBranch %12584
      %12584 = OpLabel
      %13393 = OpPhi %uint %450 %11402 %13388 %12588
      %13394 = OpPhi %uint %10905 %11402 %13389 %12588
      %13395 = OpPhi %uint %12576 %11402 %13390 %12588
      %13396 = OpPhi %uint %12577 %11402 %13391 %12588
      %13397 = OpPhi %uint %12578 %11402 %13392 %12588
               OpBranch %11391
      %11391 = OpLabel
      %13398 = OpPhi %uint %450 %11342 %13393 %12584
      %13399 = OpPhi %uint %10905 %11342 %13394 %12584
      %13400 = OpPhi %uint %uint_0 %11342 %13395 %12584
      %13401 = OpPhi %uint %11388 %11342 %13396 %12584
      %13402 = OpPhi %uint %11389 %11342 %13397 %12584
      %13403 = OpExtInst %v3float %1 FAbs %10813
      %13404 = OpDot %float %125 %13403
      %13405 = OpCompositeConstruct %v2float %13404 %13404
      %13406 = OpVectorShuffle %v2float %10813 %10813 0 1
      %13407 = OpFDiv %v2float %13406 %13405
      %13408 = OpVectorShuffle %v3float %10813 %13407 3 4 2
      %13409 = OpCompositeExtract %float %10813 2
      %13410 = OpFOrdLessThanEqual %bool %13409 %float_0
               OpSelectionMerge %13411 None
               OpBranchConditional %13410 %13412 %13411
      %13412 = OpLabel
      %13413 = OpVectorShuffle %v2float %13407 %452 1 0
      %13414 = OpExtInst %v2float %1 FAbs %13413
      %13415 = OpFSub %v2float %309 %13414
      %13416 = OpVectorShuffle %v2float %13407 %452 0 1
      %13417 = OpFOrdGreaterThanEqual %v2bool %13416 %122
      %13418 = OpCompositeExtract %bool %13417 0
      %13419 = OpSelect %float %13418 %float_1 %float_n1
      %13420 = OpCompositeExtract %bool %13417 1
      %13421 = OpSelect %float %13420 %float_1 %float_n1
      %13422 = OpCompositeConstruct %v2float %13419 %13421
      %13423 = OpFMul %v2float %13415 %13422
      %13424 = OpVectorShuffle %v3float %10813 %13423 3 4 2
               OpBranch %13411
      %13411 = OpLabel
      %13425 = OpPhi %v3float %13408 %11391 %13424 %13412
      %13426 = OpVectorShuffle %v2float %13425 %13425 0 1
      %13427 = OpVectorTimesScalar %v2float %13426 %float_1023
      %13428 = OpFAdd %v2float %13427 %322
      %13429 = OpExtInst %v2float %1 FClamp %13428 %122 %323
      %13430 = OpConvertFToU %v2uint %13429
      %13431 = OpCompositeExtract %uint %13430 0
      %13432 = OpCompositeExtract %uint %13430 1
      %13433 = OpShiftLeftLogical %uint %13432 %uint_11
      %13434 = OpBitwiseOr %uint %13431 %13433
      %13435 = OpShiftLeftLogical %uint %13434 %uint_10
      %13436 = OpExtInst %float %1 FClamp %10815 %float_0 %float_1
      %13437 = OpFMul %float %13436 %float_255
      %13438 = OpConvertFToU %uint %13437
      %13439 = OpShiftLeftLogical %uint %13438 %uint_2
      %13440 = OpBitwiseOr %uint %13435 %13439
      %13441 = OpBitwiseOr %uint %13440 %10801
      %13442 = OpBitwiseAnd %uint %13399 %uint_3
      %13443 = OpINotEqual %bool %13442 %uint_0
               OpSelectionMerge %13444 DontFlatten
               OpBranchConditional %13443 %13445 %13444
      %13445 = OpLabel
      %13446 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %13447 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_18
      %13448 = OpLoad %int %13447
      %13449 = OpBitcast %uint %13448
      %13450 = OpCompositeExtract %uint %10656 0
      %13451 = OpCompositeExtract %uint %10656 1
      %13452 = OpCompositeConstruct %v3uint %13450 %13451 %13449
               OpImageWrite %13446 %13452 %13399 None
      %13453 = OpIEqual %bool %13442 %uint_2
      %13454 = OpIEqual %bool %13442 %uint_3
      %13455 = OpLogicalOr %bool %13453 %13454
               OpSelectionMerge %13456 None
               OpBranchConditional %13455 %13457 %13456
      %13457 = OpLabel
      %13458 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %13459 = OpIAdd %uint %13449 %uint_1
      %13460 = OpCompositeConstruct %v3uint %13450 %13451 %13459
               OpImageWrite %13458 %13460 %13398 None
               OpBranch %13456
      %13456 = OpLabel
               OpBranch %13444
      %13444 = OpLabel
      %13461 = OpAccessChain %_ptr_Uniform_float %View %uint_21
      %13462 = OpLoad %float %13461
      %13463 = OpCompositeConstruct %v3float %13462 %13462 %13462
      %13464 = OpExtInst %v3float %1 FMix %10654 %10818 %13463
      %13465 = OpFAdd %v3float %11305 %10401
      %13466 = OpFAdd %v3float %13464 %13465
      %13467 = OpVectorTimesScalar %v3float %13466 %float_1
      %13468 = OpCompositeExtract %float %13467 0
      %13469 = OpCompositeExtract %float %13467 1
      %13470 = OpCompositeExtract %float %13467 2
      %13471 = OpCompositeConstruct %v4float %13468 %13469 %13470 %float_0
      %13472 = OpAccessChain %_ptr_Uniform_float %View %uint_32
      %13473 = OpLoad %float %13472
      %13474 = OpFOrdEqual %bool %13473 %float_0
               OpSelectionMerge %13475 None
               OpBranchConditional %13474 %13476 %13475
      %13476 = OpLabel
      %13477 = OpCompositeInsert %v4float %453 %13471 3
               OpBranch %13475
      %13475 = OpLabel
      %13478 = OpPhi %v4float %13471 %13444 %13477 %13476
      %13479 = OpCompositeInsert %v4float %8485 %96 0
      %13480 = OpCompositeInsert %v4float %float_1 %13479 1
      %13481 = OpCompositeInsert %v4float %float_1 %13480 2
      %13482 = OpCompositeInsert %v4float %float_1 %13481 3
      %13483 = OpVectorTimesScalar %v3float %10652 %11316
      %13484 = OpCompositeExtract %float %13483 0
      %13485 = OpCompositeExtract %float %13483 1
      %13486 = OpCompositeExtract %float %13483 2
      %13487 = OpCompositeConstruct %v4float %13484 %13485 %13486 %float_1
      %13488 = OpVectorTimesScalar %v4float %13478 %11316
      %13489 = OpVectorShuffle %v3float %13488 %13488 0 1 2
      %13490 = OpExtInst %v3float %1 NMin %13489 %474
      %13491 = OpVectorShuffle %v4float %13488 %13490 4 5 6 3
               OpStore %out_var_SV_Target0 %13491
               OpStore %out_var_SV_Target1 %13482
               OpStore %out_var_SV_Target2 %13487
               OpStore %out_var_SV_Target3 %13402
               OpStore %out_var_SV_Target4 %13401
               OpStore %out_var_SV_Target5 %13400
               OpStore %out_var_SV_Target6 %13441
               OpReturn
               OpFunctionEnd
