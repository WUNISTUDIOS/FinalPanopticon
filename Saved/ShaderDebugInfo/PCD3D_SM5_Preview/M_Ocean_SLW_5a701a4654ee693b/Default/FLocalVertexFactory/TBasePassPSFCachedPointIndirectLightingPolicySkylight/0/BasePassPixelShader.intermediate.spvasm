; SPIR-V
; Version: 1.3
; Generator: Google spiregg; 0
; Bound: 13772
; Schema: 0
               OpCapability Shader
               OpCapability SampledBuffer
               OpCapability StorageImageReadWithoutFormat
               OpExtension "SPV_GOOGLE_hlsl_functionality1"
               OpExtension "SPV_GOOGLE_user_type"
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %MainPS "MainPS" %in_var_TEXCOORD10_centroid %in_var_TEXCOORD11_centroid %in_var_PRIMITIVE_ID %in_var_TEXCOORD9 %gl_FragCoord %gl_FrontFacing %out_var_SV_Target0 %out_var_SV_Target1 %out_var_SV_Target2 %out_var_SV_Target3 %out_var_SV_Target4 %out_var_SV_Target5 %out_var_SV_Target6
               OpExecutionMode %MainPS OriginUpperLeft
               OpExecutionMode %MainPS EarlyFragmentTests

               ; Debug Information
               OpSource HLSL 620
               OpName %type_View "type.View"  ; id %16
               OpMemberName %type_View 0 "View_TranslatedWorldToView"
               OpMemberName %type_View 1 "View_ViewToClip"
               OpMemberName %type_View 2 "View_SVPositionToTranslatedWorld"
               OpMemberName %type_View 3 "View_ViewTilePosition"
               OpMemberName %type_View 4 "View_ViewForward"
               OpMemberName %type_View 5 "View_InvDeviceZToWorldZTransform"
               OpMemberName %type_View 6 "View_ScreenPositionScaleBias"
               OpMemberName %type_View 7 "View_RelativeWorldCameraOrigin"
               OpMemberName %type_View 8 "View_RelativePreViewTranslation"
               OpMemberName %type_View 9 "View_ViewRectMin"
               OpMemberName %type_View 10 "View_ViewSizeAndInvSize"
               OpMemberName %type_View 11 "View_LightProbeSizeRatioAndInvSizeRatio"
               OpMemberName %type_View 12 "View_BufferSizeAndInvSize"
               OpMemberName %type_View 13 "View_PreExposure"
               OpMemberName %type_View 14 "View_OneOverPreExposure"
               OpMemberName %type_View 15 "View_DiffuseOverrideParameter"
               OpMemberName %type_View 16 "View_SpecularOverrideParameter"
               OpMemberName %type_View 17 "View_RoughnessOverrideParameter"
               OpMemberName %type_View 18 "View_OutOfBoundsMask"
               OpMemberName %type_View 19 "View_GameTime"
               OpMemberName %type_View 20 "View_StateFrameIndexMod8"
               OpMemberName %type_View 21 "View_UnlitViewmodeMask"
               OpMemberName %type_View 22 "View_DirectionalLightColor"
               OpMemberName %type_View 23 "View_DirectionalLightDirection"
               OpMemberName %type_View 24 "View_PrecomputedIndirectLightingColorScale"
               OpMemberName %type_View 25 "View_RenderingReflectionCaptureMask"
               OpMemberName %type_View 26 "View_SkyLightApplyPrecomputedBentNormalShadowingFlag"
               OpMemberName %type_View 27 "View_SkyLightColor"
               OpMemberName %type_View 28 "View_GlobalVolumeTranslatedCenterAndExtent"
               OpMemberName %type_View 29 "View_GlobalVolumeTranslatedWorldToUVAddAndMul"
               OpMemberName %type_View 30 "View_GlobalDistanceFieldClipmapSizeInPages"
               OpMemberName %type_View 31 "View_GlobalDistanceFieldInvPageAtlasSize"
               OpMemberName %type_View 32 "View_GlobalVolumeTexelSize"
               OpMemberName %type_View 33 "View_NumGlobalSDFClipmaps"
               OpMemberName %type_View 34 "View_bCheckerboardSubsurfaceProfileRendering"
               OpMemberName %type_View 35 "View_VolumetricLightmapWorldToUVScale"
               OpMemberName %type_View 36 "View_VolumetricLightmapWorldToUVAdd"
               OpMemberName %type_View 37 "View_VolumetricLightmapIndirectionTextureSize"
               OpMemberName %type_View 38 "View_VolumetricLightmapBrickSize"
               OpMemberName %type_View 39 "View_VolumetricLightmapBrickTexelSize"
               OpMemberName %type_View 40 "View_IndirectLightingCacheShowFlag"
               OpMemberName %type_View 41 "View_MinRoughness"
               OpMemberName %type_View 42 "View_bShadingEnergyConservation"
               OpMemberName %type_View 43 "View_bShadingEnergyPreservation"
               OpName %View "View"  ; id %17
               OpName %type_3d_image "type.3d.image"  ; id %18
               OpName %View_VolumetricLightmapIndirectionTexture "View_VolumetricLightmapIndirectionTexture"  ; id %19
               OpName %type_3d_image_0 "type.3d.image"  ; id %20
               OpName %View_DirectionalLightShadowingBrickTexture "View_DirectionalLightShadowingBrickTexture"  ; id %21
               OpName %View_GlobalDistanceFieldPageAtlasTexture "View_GlobalDistanceFieldPageAtlasTexture"  ; id %22
               OpName %View_GlobalDistanceFieldPageTableTexture "View_GlobalDistanceFieldPageTableTexture"  ; id %23
               OpName %type_2d_image "type.2d.image"  ; id %24
               OpName %type_sampler "type.sampler"  ; id %25
               OpName %View_PerlinNoise3DTexture "View_PerlinNoise3DTexture"  ; id %26
               OpName %View_PerlinNoise3DTextureSampler "View_PerlinNoise3DTextureSampler"  ; id %27
               OpName %View_SharedBilinearClampedSampler "View_SharedBilinearClampedSampler"  ; id %28
               OpName %View_SharedTrilinearWrappedSampler "View_SharedTrilinearWrappedSampler"  ; id %29
               OpName %type_StructuredBuffer_v4float "type.StructuredBuffer.v4float"  ; id %30
               OpName %View_SkyIrradianceEnvironmentMap "View_SkyIrradianceEnvironmentMap"  ; id %31
               OpName %View_ShadingEnergyGGXSpecTexture "View_ShadingEnergyGGXSpecTexture"  ; id %32
               OpName %View_ShadingEnergySampler "View_ShadingEnergySampler"  ; id %33
               OpName %View_SimpleVolumeEnvTexture "View_SimpleVolumeEnvTexture"  ; id %34
               OpName %View_SimpleVolumeEnvTextureSampler "View_SimpleVolumeEnvTextureSampler"  ; id %35
               OpName %type_SingleLayerWater "type.SingleLayerWater"  ; id %36
               OpMemberName %type_SingleLayerWater 0 "SingleLayerWater_SceneWithoutSingleLayerWaterMinMaxUV"
               OpMemberName %type_SingleLayerWater 1 "SingleLayerWater_DistortionParams"
               OpMemberName %type_SingleLayerWater 2 "SingleLayerWater_SceneWithoutSingleLayerWaterTextureSize"
               OpMemberName %type_SingleLayerWater 3 "SingleLayerWater_bMainDirectionalLightVSMFiltering"
               OpMemberName %type_SingleLayerWater 4 "SingleLayerWater_bSeparateMainDirLightLuminance"
               OpName %SingleLayerWater "SingleLayerWater"  ; id %37
               OpName %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture "SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture"  ; id %38
               OpName %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture "SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture"  ; id %39
               OpName %Scene_GPUScene_GPUScenePrimitiveSceneData "Scene_GPUScene_GPUScenePrimitiveSceneData"  ; id %40
               OpName %type_OpaqueBasePass "type.OpaqueBasePass"  ; id %41
               OpMemberName %type_OpaqueBasePass 0 "OpaqueBasePass_Shared_Forward_NumLocalLights"
               OpMemberName %type_OpaqueBasePass 1 "OpaqueBasePass_Shared_Forward_HasDirectionalLight"
               OpMemberName %type_OpaqueBasePass 2 "OpaqueBasePass_Shared_Forward_CulledGridSize"
               OpMemberName %type_OpaqueBasePass 3 "OpaqueBasePass_Shared_Forward_LightGridPixelSizeShift"
               OpMemberName %type_OpaqueBasePass 4 "OpaqueBasePass_Shared_Forward_LightGridZParams"
               OpMemberName %type_OpaqueBasePass 5 "OpaqueBasePass_Shared_Forward_DirectionalLightDirection"
               OpMemberName %type_OpaqueBasePass 6 "OpaqueBasePass_Shared_Forward_DirectionalLightSourceRadius"
               OpMemberName %type_OpaqueBasePass 7 "OpaqueBasePass_Shared_Forward_DirectionalLightColor"
               OpMemberName %type_OpaqueBasePass 8 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowMapChannelMask"
               OpMemberName %type_OpaqueBasePass 9 "OpaqueBasePass_Shared_Forward_DirectionalLightDistanceFadeMAD"
               OpMemberName %type_OpaqueBasePass 10 "OpaqueBasePass_Shared_Forward_NumDirectionalLightCascades"
               OpMemberName %type_OpaqueBasePass 11 "OpaqueBasePass_Shared_Forward_DirectionalLightVSM"
               OpMemberName %type_OpaqueBasePass 12 "OpaqueBasePass_Shared_Forward_CascadeEndDepths"
               OpMemberName %type_OpaqueBasePass 13 "OpaqueBasePass_Shared_Forward_DirectionalLightTranslatedWorldToShadowMatrix"
               OpMemberName %type_OpaqueBasePass 14 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapMinMax"
               OpMemberName %type_OpaqueBasePass 15 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlasBufferSize"
               OpMemberName %type_OpaqueBasePass 16 "OpaqueBasePass_Shared_Forward_DirectLightingShowFlag"
               OpMemberName %type_OpaqueBasePass 17 "OpaqueBasePass_Shared_UseBasePassSkylight"
               OpMemberName %type_OpaqueBasePass 18 "OpaqueBasePass_Strata_FirstSliceStoringStrataSSSDataWithoutMRT"
               OpMemberName %type_OpaqueBasePass 19 "OpaqueBasePass_UseForwardScreenSpaceShadowMask"
               OpName %OpaqueBasePass "OpaqueBasePass"  ; id %42
               OpName %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas"  ; id %43
               OpName %OpaqueBasePass_Shared_Forward_ShadowmapSampler "OpaqueBasePass_Shared_Forward_ShadowmapSampler"  ; id %44
               OpName %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer "OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer"  ; id %45
               OpName %type_StructuredBuffer_uint "type.StructuredBuffer.uint"  ; id %46
               OpName %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid "OpaqueBasePass_Shared_Forward_NumCulledLightsGrid"  ; id %47
               OpName %type_buffer_image "type.buffer.image"  ; id %48
               OpName %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit "OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit"  ; id %49
               OpName %type_2d_image_array "type.2d.image.array"  ; id %50
               OpName %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs "OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs"  ; id %51
               OpName %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture "OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture"  ; id %52
               OpName %OpaqueBasePass_PreIntegratedGFTexture "OpaqueBasePass_PreIntegratedGFTexture"  ; id %53
               OpName %type_IndirectLightingCache "type.IndirectLightingCache"  ; id %54
               OpMemberName %type_IndirectLightingCache 0 "IndirectLightingCache_PointSkyBentNormal"
               OpMemberName %type_IndirectLightingCache 1 "IndirectLightingCache_DirectionalLightShadowing"
               OpMemberName %type_IndirectLightingCache 2 "IndirectLightingCache_IndirectLightingSHCoefficients0"
               OpMemberName %type_IndirectLightingCache 3 "IndirectLightingCache_IndirectLightingSHCoefficients1"
               OpMemberName %type_IndirectLightingCache 4 "IndirectLightingCache_IndirectLightingSHCoefficients2"
               OpName %IndirectLightingCache "IndirectLightingCache"  ; id %55
               OpName %type_ByteAddressBuffer "type.ByteAddressBuffer"  ; id %56
               OpName %VirtualShadowMap_ProjectionData "VirtualShadowMap_ProjectionData"  ; id %57
               OpName %VirtualShadowMap_PageTable "VirtualShadowMap_PageTable"  ; id %58
               OpName %type_2d_image_array_0 "type.2d.image.array"  ; id %59
               OpName %VirtualShadowMap_PhysicalPagePool "VirtualShadowMap_PhysicalPagePool"  ; id %60
               OpName %type_MaterialCollection0 "type.MaterialCollection0"  ; id %61
               OpMemberName %type_MaterialCollection0 0 "MaterialCollection0_Vectors"
               OpName %MaterialCollection0 "MaterialCollection0"  ; id %62
               OpName %type_Material "type.Material"  ; id %63
               OpMemberName %type_Material 0 "Material_PreshaderBuffer"
               OpName %Material "Material"  ; id %64
               OpName %in_var_TEXCOORD10_centroid "in.var.TEXCOORD10_centroid"  ; id %3
               OpName %in_var_TEXCOORD11_centroid "in.var.TEXCOORD11_centroid"  ; id %4
               OpName %in_var_PRIMITIVE_ID "in.var.PRIMITIVE_ID"  ; id %5
               OpName %in_var_TEXCOORD9 "in.var.TEXCOORD9"  ; id %6
               OpName %out_var_SV_Target0 "out.var.SV_Target0"  ; id %9
               OpName %out_var_SV_Target1 "out.var.SV_Target1"  ; id %10
               OpName %out_var_SV_Target2 "out.var.SV_Target2"  ; id %11
               OpName %out_var_SV_Target3 "out.var.SV_Target3"  ; id %12
               OpName %out_var_SV_Target4 "out.var.SV_Target4"  ; id %13
               OpName %out_var_SV_Target5 "out.var.SV_Target5"  ; id %14
               OpName %out_var_SV_Target6 "out.var.SV_Target6"  ; id %15
               OpName %MainPS "MainPS"  ; id %2
               OpName %type_sampled_image "type.sampled.image"  ; id %65
               OpName %type_sampled_image_0 "type.sampled.image"  ; id %66

               ; Annotations
               OpDecorateString %in_var_TEXCOORD10_centroid UserSemantic "TEXCOORD10_centroid"
               OpDecorateString %in_var_TEXCOORD11_centroid UserSemantic "TEXCOORD11_centroid"
               OpDecorateString %in_var_PRIMITIVE_ID UserSemantic "PRIMITIVE_ID"
               OpDecorate %in_var_PRIMITIVE_ID Flat
               OpDecorateString %in_var_TEXCOORD9 UserSemantic "TEXCOORD9"
               OpDecorate %gl_FragCoord BuiltIn FragCoord
               OpDecorateString %gl_FragCoord UserSemantic "SV_Position"
               OpDecorate %gl_FrontFacing BuiltIn FrontFacing
               OpDecorateString %gl_FrontFacing UserSemantic "SV_IsFrontFace"
               OpDecorate %gl_FrontFacing Flat
               OpDecorateString %out_var_SV_Target0 UserSemantic "SV_Target0"
               OpDecorateString %out_var_SV_Target1 UserSemantic "SV_Target1"
               OpDecorateString %out_var_SV_Target2 UserSemantic "SV_Target2"
               OpDecorateString %out_var_SV_Target3 UserSemantic "SV_Target3"
               OpDecorateString %out_var_SV_Target4 UserSemantic "SV_Target4"
               OpDecorateString %out_var_SV_Target5 UserSemantic "SV_Target5"
               OpDecorateString %out_var_SV_Target6 UserSemantic "SV_Target6"
               OpDecorate %in_var_TEXCOORD10_centroid Location 0
               OpDecorate %in_var_TEXCOORD11_centroid Location 1
               OpDecorate %in_var_PRIMITIVE_ID Location 2
               OpDecorate %in_var_TEXCOORD9 Location 3
               OpDecorate %out_var_SV_Target0 Location 0
               OpDecorate %out_var_SV_Target1 Location 1
               OpDecorate %out_var_SV_Target2 Location 2
               OpDecorate %out_var_SV_Target3 Location 3
               OpDecorate %out_var_SV_Target4 Location 4
               OpDecorate %out_var_SV_Target5 Location 5
               OpDecorate %out_var_SV_Target6 Location 6
               OpDecorate %View DescriptorSet 0
               OpDecorate %View Binding 0
               OpDecorate %View_VolumetricLightmapIndirectionTexture DescriptorSet 0
               OpDecorate %View_VolumetricLightmapIndirectionTexture Binding 1
               OpDecorate %View_DirectionalLightShadowingBrickTexture DescriptorSet 0
               OpDecorate %View_DirectionalLightShadowingBrickTexture Binding 2
               OpDecorate %View_GlobalDistanceFieldPageAtlasTexture DescriptorSet 0
               OpDecorate %View_GlobalDistanceFieldPageAtlasTexture Binding 3
               OpDecorate %View_GlobalDistanceFieldPageTableTexture DescriptorSet 0
               OpDecorate %View_GlobalDistanceFieldPageTableTexture Binding 4
               OpDecorate %View_PerlinNoise3DTexture DescriptorSet 0
               OpDecorate %View_PerlinNoise3DTexture Binding 7
               OpDecorate %View_PerlinNoise3DTextureSampler DescriptorSet 0
               OpDecorate %View_PerlinNoise3DTextureSampler Binding 8
               OpDecorate %View_SharedBilinearClampedSampler DescriptorSet 0
               OpDecorate %View_SharedBilinearClampedSampler Binding 10
               OpDecorate %View_SharedTrilinearWrappedSampler DescriptorSet 0
               OpDecorate %View_SharedTrilinearWrappedSampler Binding 11
               OpDecorate %View_SkyIrradianceEnvironmentMap DescriptorSet 0
               OpDecorate %View_SkyIrradianceEnvironmentMap Binding 15
               OpDecorate %View_ShadingEnergyGGXSpecTexture DescriptorSet 0
               OpDecorate %View_ShadingEnergyGGXSpecTexture Binding 24
               OpDecorate %View_ShadingEnergySampler DescriptorSet 0
               OpDecorate %View_ShadingEnergySampler Binding 27
               OpDecorate %View_SimpleVolumeEnvTexture DescriptorSet 0
               OpDecorate %View_SimpleVolumeEnvTexture Binding 30
               OpDecorate %View_SimpleVolumeEnvTextureSampler DescriptorSet 0
               OpDecorate %View_SimpleVolumeEnvTextureSampler Binding 31
               OpDecorate %SingleLayerWater DescriptorSet 0
               OpDecorate %SingleLayerWater Binding 35
               OpDecorate %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture DescriptorSet 0
               OpDecorate %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture Binding 36
               OpDecorate %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture DescriptorSet 0
               OpDecorate %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture Binding 37
               OpDecorate %Scene_GPUScene_GPUScenePrimitiveSceneData DescriptorSet 0
               OpDecorate %Scene_GPUScene_GPUScenePrimitiveSceneData Binding 39
               OpDecorate %OpaqueBasePass DescriptorSet 0
               OpDecorate %OpaqueBasePass Binding 40
               OpDecorate %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas Binding 41
               OpDecorate %OpaqueBasePass_Shared_Forward_ShadowmapSampler DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_ShadowmapSampler Binding 42
               OpDecorate %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer Binding 43
               OpDecorate %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid Binding 44
               OpDecorate %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit Binding 45
               OpDecorate %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs DescriptorSet 0
               OpDecorate %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs Binding 46
               OpDecorate %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture DescriptorSet 0
               OpDecorate %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture Binding 47
               OpDecorate %OpaqueBasePass_PreIntegratedGFTexture DescriptorSet 0
               OpDecorate %OpaqueBasePass_PreIntegratedGFTexture Binding 48
               OpDecorate %IndirectLightingCache DescriptorSet 0
               OpDecorate %IndirectLightingCache Binding 49
               OpDecorate %VirtualShadowMap_ProjectionData DescriptorSet 0
               OpDecorate %VirtualShadowMap_ProjectionData Binding 50
               OpDecorate %VirtualShadowMap_PageTable DescriptorSet 0
               OpDecorate %VirtualShadowMap_PageTable Binding 51
               OpDecorate %VirtualShadowMap_PhysicalPagePool DescriptorSet 0
               OpDecorate %VirtualShadowMap_PhysicalPagePool Binding 52
               OpDecorate %MaterialCollection0 DescriptorSet 0
               OpDecorate %MaterialCollection0 Binding 53
               OpDecorate %Material DescriptorSet 0
               OpDecorate %Material Binding 54
               OpDecorate %_arr_v4float_uint_6 ArrayStride 16
               OpMemberDecorate %type_View 0 Offset 192
               OpMemberDecorate %type_View 0 MatrixStride 16
               OpMemberDecorate %type_View 0 ColMajor
               OpMemberDecorate %type_View 1 Offset 448
               OpMemberDecorate %type_View 1 MatrixStride 16
               OpMemberDecorate %type_View 1 ColMajor
               OpMemberDecorate %type_View 2 Offset 704
               OpMemberDecorate %type_View 2 MatrixStride 16
               OpMemberDecorate %type_View 2 ColMajor
               OpMemberDecorate %type_View 3 Offset 960
               OpMemberDecorate %type_View 4 Offset 992
               OpMemberDecorate %type_View 5 Offset 1072
               OpMemberDecorate %type_View 6 Offset 1088
               OpMemberDecorate %type_View 7 Offset 1104
               OpMemberDecorate %type_View 8 Offset 1152
               OpMemberDecorate %type_View 9 Offset 1984
               OpMemberDecorate %type_View 10 Offset 2000
               OpMemberDecorate %type_View 11 Offset 2032
               OpMemberDecorate %type_View 12 Offset 2048
               OpMemberDecorate %type_View 13 Offset 2120
               OpMemberDecorate %type_View 14 Offset 2124
               OpMemberDecorate %type_View 15 Offset 2128
               OpMemberDecorate %type_View 16 Offset 2144
               OpMemberDecorate %type_View 17 Offset 2176
               OpMemberDecorate %type_View 18 Offset 2192
               OpMemberDecorate %type_View 19 Offset 2228
               OpMemberDecorate %type_View 20 Offset 2260
               OpMemberDecorate %type_View 21 Offset 2280
               OpMemberDecorate %type_View 22 Offset 2288
               OpMemberDecorate %type_View 23 Offset 2304
               OpMemberDecorate %type_View 24 Offset 2480
               OpMemberDecorate %type_View 25 Offset 2876
               OpMemberDecorate %type_View 26 Offset 2916
               OpMemberDecorate %type_View 27 Offset 2928
               OpMemberDecorate %type_View 28 Offset 3120
               OpMemberDecorate %type_View 29 Offset 3216
               OpMemberDecorate %type_View 30 Offset 3512
               OpMemberDecorate %type_View 31 Offset 3520
               OpMemberDecorate %type_View 32 Offset 3552
               OpMemberDecorate %type_View 33 Offset 3560
               OpMemberDecorate %type_View 34 Offset 3592
               OpMemberDecorate %type_View 35 Offset 3696
               OpMemberDecorate %type_View 36 Offset 3712
               OpMemberDecorate %type_View 37 Offset 3728
               OpMemberDecorate %type_View 38 Offset 3740
               OpMemberDecorate %type_View 39 Offset 3744
               OpMemberDecorate %type_View 40 Offset 3756
               OpMemberDecorate %type_View 41 Offset 3896
               OpMemberDecorate %type_View 42 Offset 5160
               OpMemberDecorate %type_View 43 Offset 5164
               OpDecorate %type_View Block
               OpDecorateString %View UserTypeGOOGLE "cbuffer"
               OpDecorateString %View_VolumetricLightmapIndirectionTexture UserTypeGOOGLE "texture3d:<uint4>"
               OpDecorateString %View_DirectionalLightShadowingBrickTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_GlobalDistanceFieldPageAtlasTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_GlobalDistanceFieldPageTableTexture UserTypeGOOGLE "texture3d:<uint>"
               OpDecorateString %View_PerlinNoise3DTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorate %_runtimearr_v4float ArrayStride 16
               OpMemberDecorate %type_StructuredBuffer_v4float 0 Offset 0
               OpMemberDecorate %type_StructuredBuffer_v4float 0 NonWritable
               OpDecorate %type_StructuredBuffer_v4float BufferBlock
               OpDecorateString %View_SkyIrradianceEnvironmentMap UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorateString %View_ShadingEnergyGGXSpecTexture UserTypeGOOGLE "texture2d:<float2>"
               OpDecorateString %View_SimpleVolumeEnvTexture UserTypeGOOGLE "texture3d:<float>"
               OpMemberDecorate %type_SingleLayerWater 0 Offset 64
               OpMemberDecorate %type_SingleLayerWater 1 Offset 80
               OpMemberDecorate %type_SingleLayerWater 2 Offset 96
               OpMemberDecorate %type_SingleLayerWater 3 Offset 112
               OpMemberDecorate %type_SingleLayerWater 4 Offset 116
               OpDecorate %type_SingleLayerWater Block
               OpDecorateString %SingleLayerWater UserTypeGOOGLE "cbuffer"
               OpDecorateString %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %Scene_GPUScene_GPUScenePrimitiveSceneData UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorate %_arr_mat4v4float_uint_4 ArrayStride 64
               OpDecorate %_arr_v4float_uint_4 ArrayStride 16
               OpMemberDecorate %type_OpaqueBasePass 0 Offset 0
               OpMemberDecorate %type_OpaqueBasePass 1 Offset 8
               OpMemberDecorate %type_OpaqueBasePass 2 Offset 16
               OpMemberDecorate %type_OpaqueBasePass 3 Offset 32
               OpMemberDecorate %type_OpaqueBasePass 4 Offset 48
               OpMemberDecorate %type_OpaqueBasePass 5 Offset 64
               OpMemberDecorate %type_OpaqueBasePass 6 Offset 76
               OpMemberDecorate %type_OpaqueBasePass 7 Offset 80
               OpMemberDecorate %type_OpaqueBasePass 8 Offset 96
               OpMemberDecorate %type_OpaqueBasePass 9 Offset 104
               OpMemberDecorate %type_OpaqueBasePass 10 Offset 112
               OpMemberDecorate %type_OpaqueBasePass 11 Offset 116
               OpMemberDecorate %type_OpaqueBasePass 12 Offset 128
               OpMemberDecorate %type_OpaqueBasePass 13 Offset 144
               OpMemberDecorate %type_OpaqueBasePass 13 MatrixStride 16
               OpMemberDecorate %type_OpaqueBasePass 13 ColMajor
               OpMemberDecorate %type_OpaqueBasePass 14 Offset 400
               OpMemberDecorate %type_OpaqueBasePass 15 Offset 464
               OpMemberDecorate %type_OpaqueBasePass 16 Offset 592
               OpMemberDecorate %type_OpaqueBasePass 17 Offset 2240
               OpMemberDecorate %type_OpaqueBasePass 18 Offset 2276
               OpMemberDecorate %type_OpaqueBasePass 19 Offset 2304
               OpDecorate %type_OpaqueBasePass Block
               OpDecorateString %OpaqueBasePass UserTypeGOOGLE "cbuffer"
               OpDecorateString %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %type_StructuredBuffer_uint 0 Offset 0
               OpMemberDecorate %type_StructuredBuffer_uint 0 NonWritable
               OpDecorate %type_StructuredBuffer_uint BufferBlock
               OpDecorateString %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid UserTypeGOOGLE "structuredbuffer:<uint>"
               OpDecorateString %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit UserTypeGOOGLE "buffer:<uint>"
               OpDecorateString %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs UserTypeGOOGLE "rwtexture2darray:<uint>"
               OpDecorateString %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %OpaqueBasePass_PreIntegratedGFTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorate %_arr_v4float_uint_3 ArrayStride 16
               OpMemberDecorate %type_IndirectLightingCache 0 Offset 64
               OpMemberDecorate %type_IndirectLightingCache 1 Offset 80
               OpMemberDecorate %type_IndirectLightingCache 2 Offset 96
               OpMemberDecorate %type_IndirectLightingCache 3 Offset 144
               OpMemberDecorate %type_IndirectLightingCache 4 Offset 192
               OpDecorate %type_IndirectLightingCache Block
               OpDecorateString %IndirectLightingCache UserTypeGOOGLE "cbuffer"
               OpMemberDecorate %type_ByteAddressBuffer 0 Offset 0
               OpMemberDecorate %type_ByteAddressBuffer 0 NonWritable
               OpDecorate %type_ByteAddressBuffer BufferBlock
               OpDecorateString %VirtualShadowMap_ProjectionData UserTypeGOOGLE "byteaddressbuffer"
               OpDecorateString %VirtualShadowMap_PageTable UserTypeGOOGLE "structuredbuffer:<uint>"
               OpDecorateString %VirtualShadowMap_PhysicalPagePool UserTypeGOOGLE "texture2darray:<uint>"
               OpDecorate %_arr_v4float_uint_5 ArrayStride 16
               OpMemberDecorate %type_MaterialCollection0 0 Offset 0
               OpDecorate %type_MaterialCollection0 Block
               OpDecorateString %MaterialCollection0 UserTypeGOOGLE "cbuffer"
               OpDecorate %_arr_v4float_uint_109 ArrayStride 16
               OpMemberDecorate %type_Material 0 Offset 0
               OpDecorate %type_Material Block
               OpDecorateString %Material UserTypeGOOGLE "cbuffer"

               ; Types, variables and constants
      %float = OpTypeFloat 32
%float_3_14159274 = OpConstant %float 3.14159274
%float_64512 = OpConstant %float 64512
    %v3float = OpTypeVector %float 3
    %v4float = OpTypeVector %float 4
%mat4v4float = OpTypeMatrix %v4float 4
    %v2float = OpTypeVector %float 2
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
        %int = OpTypeInt 32 1
     %uint_2 = OpConstant %uint 2
     %uint_8 = OpConstant %uint 8
     %uint_6 = OpConstant %uint 6
      %v2int = OpTypeVector %int 2
    %uint_32 = OpConstant %uint 32
      %v4int = OpTypeVector %int 4
    %float_1 = OpConstant %float 1
       %bool = OpTypeBool
     %uint_3 = OpConstant %uint 3
      %int_0 = OpConstant %int 0
      %int_2 = OpConstant %int 2
      %int_1 = OpConstant %int 1
     %uint_0 = OpConstant %uint 0
    %float_0 = OpConstant %float 0
         %99 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
      %false = OpConstantFalse %bool
      %int_6 = OpConstant %int 6
     %int_96 = OpConstant %int 96
        %103 = OpConstantComposite %v3float %float_0 %float_0 %float_0
      %int_4 = OpConstant %int 4
   %uint_512 = OpConstant %uint 512
   %uint_256 = OpConstant %uint 256
     %uint_4 = OpConstant %uint 4
      %int_3 = OpConstant %int 3
     %int_13 = OpConstant %int 13
    %uint_14 = OpConstant %uint 14
    %uint_31 = OpConstant %uint 31
     %uint_1 = OpConstant %uint 1
     %int_11 = OpConstant %int 11
     %int_24 = OpConstant %int 24
     %int_17 = OpConstant %int 17
     %int_20 = OpConstant %int 20
     %int_10 = OpConstant %int 10
        %118 = OpConstantComposite %v4float %float_1 %float_1 %float_1 %float_1
       %true = OpConstantTrue %bool
     %int_16 = OpConstant %int 16
     %int_21 = OpConstant %int 21
     %int_75 = OpConstant %int 75
     %int_76 = OpConstant %int 76
     %int_15 = OpConstant %int 15
        %125 = OpConstantComposite %v2float %float_0 %float_0
     %int_47 = OpConstant %int 47
     %int_65 = OpConstant %int 65
        %128 = OpConstantComposite %v3float %float_1 %float_1 %float_1
     %int_81 = OpConstant %int 81
     %int_27 = OpConstant %int 27
     %int_29 = OpConstant %int 29
     %int_12 = OpConstant %int 12
%float_0_577000022 = OpConstant %float 0.577000022
        %134 = OpConstantComposite %v3float %float_0_577000022 %float_0_577000022 %float_0_577000022
        %135 = OpConstantComposite %v3float %float_1 %float_1 %float_0
        %136 = OpConstantComposite %v3float %float_0 %float_1 %float_1
  %float_0_5 = OpConstant %float 0.5
        %138 = OpConstantComposite %v3float %float_0_5 %float_0_5 %float_0_5
     %int_41 = OpConstant %int 41
%float_0_0500000007 = OpConstant %float 0.0500000007
        %141 = OpConstantComposite %v3float %float_1 %float_0 %float_1
     %int_18 = OpConstant %int 18
     %int_19 = OpConstant %int 19
     %int_51 = OpConstant %int 51
      %int_9 = OpConstant %int 9
%float_0_00392156886 = OpConstant %float 0.00392156886
     %int_73 = OpConstant %int 73
     %int_25 = OpConstant %int 25
     %int_48 = OpConstant %int 48
        %150 = OpConstantComposite %v2float %float_0_5 %float_0_5
    %float_2 = OpConstant %float 2
   %float_n2 = OpConstant %float -2
        %153 = OpConstantComposite %v2float %float_2 %float_n2
   %float_47 = OpConstant %float 47
   %float_17 = OpConstant %float 17
%float_0_0671105608 = OpConstant %float 0.0671105608
%float_0_00583714992 = OpConstant %float 0.00583714992
%float_52_9829178 = OpConstant %float 52.9829178
     %int_28 = OpConstant %int 28
     %uint_5 = OpConstant %uint 5
%uint_4294967288 = OpConstant %uint 4294967288
     %uint_7 = OpConstant %uint 7
    %uint_11 = OpConstant %uint 11
        %164 = OpConstantComposite %v3float %float_64512 %float_64512 %float_64512
%uint_2139095040 = OpConstant %uint 2139095040
   %uint_128 = OpConstant %uint 128
    %int_108 = OpConstant %int 108
%float_0_449999988 = OpConstant %float 0.449999988
%float_0_300000012 = OpConstant %float 0.300000012
%float_0_589999974 = OpConstant %float 0.589999974
%float_0_109999999 = OpConstant %float 0.109999999
        %172 = OpConstantComposite %v3float %float_0_300000012 %float_0_589999974 %float_0_109999999
%float_2_04040003 = OpConstant %float 2.04040003
%float_0_332399994 = OpConstant %float 0.332399994
        %175 = OpConstantComposite %v3float %float_0_332399994 %float_0_332399994 %float_0_332399994
%float_n4_79510021 = OpConstant %float -4.79510021
%float_0_641700029 = OpConstant %float 0.641700029
        %178 = OpConstantComposite %v3float %float_0_641700029 %float_0_641700029 %float_0_641700029
%float_2_75519991 = OpConstant %float 2.75519991
%float_0_690299988 = OpConstant %float 0.690299988
        %181 = OpConstantComposite %v3float %float_0_690299988 %float_0_690299988 %float_0_690299988
     %int_n1 = OpConstant %int -1
     %v2uint = OpTypeVector %uint 2
     %int_37 = OpConstant %int 37
%float_2097152 = OpConstant %float 2097152
   %float_50 = OpConstant %float 50
%float_9_99999996en13 = OpConstant %float 9.99999996e-13
%float_0_0199999996 = OpConstant %float 0.0199999996
%float_9_99999975en06 = OpConstant %float 9.99999975e-06
        %190 = OpConstantComposite %v3float %float_9_99999975en06 %float_9_99999975en06 %float_9_99999975en06
     %int_85 = OpConstant %int 85
     %int_59 = OpConstant %int 59
%float_0_0399999991 = OpConstant %float 0.0399999991
    %uint_16 = OpConstant %uint 16
    %uint_64 = OpConstant %uint 64
    %uint_40 = OpConstant %uint 40
     %uint_9 = OpConstant %uint 9
    %uint_10 = OpConstant %uint 10
  %uint_4095 = OpConstant %uint 4095
    %uint_12 = OpConstant %uint 12
   %uint_255 = OpConstant %uint 255
    %uint_20 = OpConstant %uint 20
    %uint_19 = OpConstant %uint 19
    %uint_24 = OpConstant %uint 24
%uint_1047552 = OpConstant %uint 1047552
  %uint_1023 = OpConstant %uint 1023
    %uint_63 = OpConstant %uint 63
   %uint_127 = OpConstant %uint 127
    %uint_26 = OpConstant %uint 26
    %uint_22 = OpConstant %uint 22
%uint_4294963200 = OpConstant %uint 4294963200
  %float_100 = OpConstant %float 100
  %float_128 = OpConstant %float 128
%float_0_00390625 = OpConstant %float 0.00390625
   %float_16 = OpConstant %float 16
     %int_23 = OpConstant %int 23
     %int_22 = OpConstant %int 22
     %int_30 = OpConstant %int 30
     %int_31 = OpConstant %int 31
     %int_33 = OpConstant %int 33
     %int_35 = OpConstant %int 35
     %int_26 = OpConstant %int 26
     %int_39 = OpConstant %int 39
     %int_40 = OpConstant %int 40
     %int_42 = OpConstant %int 42
     %int_43 = OpConstant %int 43
     %int_32 = OpConstant %int 32
     %int_45 = OpConstant %int 45
     %int_34 = OpConstant %int 34
     %int_46 = OpConstant %int 46
     %int_52 = OpConstant %int 52
     %int_38 = OpConstant %int 38
     %int_54 = OpConstant %int 54
     %int_56 = OpConstant %int 56
     %int_57 = OpConstant %int 57
     %int_58 = OpConstant %int 58
     %int_60 = OpConstant %int 60
     %int_61 = OpConstant %int 61
     %int_62 = OpConstant %int 62
     %int_63 = OpConstant %int 63
     %int_64 = OpConstant %int 64
     %int_49 = OpConstant %int 49
     %int_67 = OpConstant %int 67
     %int_68 = OpConstant %int 68
     %int_53 = OpConstant %int 53
     %int_70 = OpConstant %int 70
     %int_71 = OpConstant %int 71
     %int_72 = OpConstant %int 72
     %int_74 = OpConstant %int 74
     %int_77 = OpConstant %int 77
     %int_78 = OpConstant %int 78
     %int_79 = OpConstant %int 79
     %int_80 = OpConstant %int 80
     %int_86 = OpConstant %int 86
     %int_87 = OpConstant %int 87
     %int_88 = OpConstant %int 88
     %int_89 = OpConstant %int 89
     %int_90 = OpConstant %int 90
     %int_91 = OpConstant %int 91
     %int_92 = OpConstant %int 92
     %int_93 = OpConstant %int 93
     %int_94 = OpConstant %int 94
     %int_95 = OpConstant %int 95
     %int_97 = OpConstant %int 97
     %int_82 = OpConstant %int 82
     %int_83 = OpConstant %int 83
    %int_103 = OpConstant %int 103
    %int_104 = OpConstant %int 104
    %int_106 = OpConstant %int 106
    %int_107 = OpConstant %int 107
    %int_105 = OpConstant %int 105
%mat3v3float = OpTypeMatrix %v3float 3
%_arr_v3float_uint_4 = OpTypeArray %v3float %uint_4
    %uint_15 = OpConstant %uint 15
%float_100000 = OpConstant %float 100000
   %float_n1 = OpConstant %float -1
        %277 = OpConstantComposite %v2float %float_1 %float_0
%float_1_20000005 = OpConstant %float 1.20000005
        %279 = OpConstantComposite %v3float %float_1_20000005 %float_1_20000005 %float_1_20000005
        %280 = OpConstantComposite %v3float %float_n1 %float_n1 %float_n1
%float_0_100000001 = OpConstant %float 0.100000001
        %282 = OpConstantComposite %v3float %float_0_100000001 %float_0_100000001 %float_0_100000001
%float_6_28318548 = OpConstant %float 6.28318548
%float_0_00100000005 = OpConstant %float 0.00100000005
%float_0_00200000009 = OpConstant %float 0.00200000009
%float_0_800000012 = OpConstant %float 0.800000012
    %float_4 = OpConstant %float 4
 %float_0_75 = OpConstant %float 0.75
%float_10000 = OpConstant %float 10000
        %290 = OpConstantComposite %v3float %float_10000 %float_10000 %float_10000
    %float_8 = OpConstant %float 8
        %292 = OpConstantComposite %v3float %float_0 %float_0 %float_1
%float_9_99999975en05 = OpConstant %float 9.99999975e-05
    %uint_41 = OpConstant %uint 41
    %uint_18 = OpConstant %uint 18
 %uint_65535 = OpConstant %uint 65535
    %uint_17 = OpConstant %uint 17
    %uint_25 = OpConstant %uint 25
%uint_16777215 = OpConstant %uint 16777215
 %uint_32768 = OpConstant %uint 32768
  %float_127 = OpConstant %float 127
    %float_3 = OpConstant %float 3
%float_0_99000001 = OpConstant %float 0.99000001
        %304 = OpConstantComposite %v3float %float_0_99000001 %float_0_99000001 %float_0_99000001
%float_0_0799999982 = OpConstant %float 0.0799999982
    %float_6 = OpConstant %float 6
        %307 = OpConstantComposite %v2uint %uint_31 %uint_31
 %float_4000 = OpConstant %float 4000
%float_0_000230000005 = OpConstant %float 0.000230000005
%float_n0_000230000005 = OpConstant %float -0.000230000005
        %311 = OpConstantComposite %v2float %float_0_000230000005 %float_n0_000230000005
%float_1_54999995 = OpConstant %float 1.54999995
  %float_255 = OpConstant %float 255
        %314 = OpConstantComposite %v2float %float_1 %float_1
 %float_1023 = OpConstant %float 1023
 %float_2047 = OpConstant %float 2047
  %uint_2047 = OpConstant %uint 2047
   %float_63 = OpConstant %float 63
%uint_1072693248 = OpConstant %uint 1072693248
%uint_4292870144 = OpConstant %uint 4292870144
%uint_2096128 = OpConstant %uint 2096128
 %float_0_25 = OpConstant %float 0.25
        %323 = OpConstantComposite %v3float %float_0_25 %float_0_25 %float_0_25
        %324 = OpConstantComposite %v3float %float_0 %float_0_5 %float_0_5
%uint_4294967292 = OpConstant %uint 4294967292
 %float_1024 = OpConstant %float 1024
        %327 = OpConstantComposite %v2float %float_1024 %float_1024
        %328 = OpConstantComposite %v2float %float_2047 %float_2047
%float_4_76837158en07 = OpConstant %float 4.76837158e-07
%float_0_333299994 = OpConstant %float 0.333299994
%float_0_488602996 = OpConstant %float 0.488602996
%float_1_09254801 = OpConstant %float 1.09254801
%float_0_315391988 = OpConstant %float 0.315391988
  %uint_2048 = OpConstant %uint 2048
  %uint_4096 = OpConstant %uint 4096
  %uint_8192 = OpConstant %uint 8192
%float_0_400000006 = OpConstant %float 0.400000006
        %338 = OpConstantComposite %v3float %float_2 %float_0 %float_n2
        %339 = OpConstantComposite %v3float %float_n1 %float_2 %float_n1
        %340 = OpConstantComposite %v3float %float_0 %float_0 %float_0_00100000005
%float_0_899999976 = OpConstant %float 0.899999976
        %342 = OpConstantComposite %v2uint %uint_128 %uint_128
        %343 = OpConstantComposite %v2uint %uint_127 %uint_127
%uint_4294967295 = OpConstant %uint 4294967295
%float_9_99999997en07 = OpConstant %float 9.99999997e-07
        %346 = OpConstantComposite %v3float %float_9_99999997en07 %float_9_99999997en07 %float_9_99999997en07
%float_0_200000003 = OpConstant %float 0.200000003
%uint_2147483647 = OpConstant %uint 2147483647
     %v3uint = OpTypeVector %uint 3
        %350 = OpConstantComposite %v3uint %uint_2147483647 %uint_2147483647 %uint_2147483647
%float_0_600000024 = OpConstant %float 0.600000024
        %352 = OpConstantComposite %v3float %float_1 %float_0 %float_0
        %353 = OpConstantComposite %v3float %float_0 %float_1 %float_0
        %354 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_100
        %355 = OpConstantComposite %v3uint %uint_8 %uint_8 %uint_8
    %float_7 = OpConstant %float 7
        %357 = OpConstantComposite %v3float %float_9_99999996en13 %float_9_99999996en13 %float_9_99999996en13
   %uint_336 = OpConstant %uint 336
    %uint_96 = OpConstant %uint 96
   %uint_112 = OpConstant %uint 112
   %uint_144 = OpConstant %uint 144
   %uint_160 = OpConstant %uint 160
   %uint_176 = OpConstant %uint 176
   %uint_268 = OpConstant %uint 268
   %uint_272 = OpConstant %uint 272
   %uint_288 = OpConstant %uint 288
   %uint_300 = OpConstant %uint 300
   %uint_304 = OpConstant %uint 304
   %uint_312 = OpConstant %uint 312
   %uint_316 = OpConstant %uint 316
 %uint_16384 = OpConstant %uint 16384
        %372 = OpConstantComposite %v2int %int_32 %int_32
        %373 = OpConstantComposite %v2int %int_31 %int_31
%float_0_0350000001 = OpConstant %float 0.0350000001
   %float_20 = OpConstant %float 20
%float_1_57079637 = OpConstant %float 1.57079637
   %float_10 = OpConstant %float 10
%float_1_19000006 = OpConstant %float 1.19000006
%float_0_360000014 = OpConstant %float 0.360000014
%float_n3_6500001 = OpConstant %float -3.6500001
%int_532487669 = OpConstant %int 532487669
   %float_15 = OpConstant %float 15
        %383 = OpConstantComposite %v4float %float_15 %float_15 %float_15 %float_15
        %384 = OpConstantComposite %v4float %float_10 %float_10 %float_10 %float_10
   %float_19 = OpConstant %float 19
  %float_101 = OpConstant %float 101
        %387 = OpConstantComposite %v3float %float_19 %float_47 %float_101
        %388 = OpConstantComposite %v3uint %uint_32768 %uint_16384 %uint_8192
%float_6_10351562en05 = OpConstant %float 6.10351562e-05
%float_0_000122070312 = OpConstant %float 0.000122070312
%float_0_000244140625 = OpConstant %float 0.000244140625
        %392 = OpConstantComposite %v3float %float_6_10351562en05 %float_0_000122070312 %float_0_000244140625
%float_0_2588 = OpConstant %float 0.2588
 %uint_21845 = OpConstant %uint 21845
%uint_134217728 = OpConstant %uint 134217728
 %float_n0_5 = OpConstant %float -0.5
%uint_4294967294 = OpConstant %uint 4294967294
%float_0_00313066994 = OpConstant %float 0.00313066994
%float_12_9200001 = OpConstant %float 12.9200001
%float_0_416666657 = OpConstant %float 0.416666657
%float_1_05499995 = OpConstant %float 1.05499995
%uint_1664525 = OpConstant %uint 1664525
        %403 = OpConstantComposite %v3uint %uint_1664525 %uint_1664525 %uint_1664525
%uint_1013904223 = OpConstant %uint 1013904223
        %405 = OpConstantComposite %v3uint %uint_1013904223 %uint_1013904223 %uint_1013904223
        %406 = OpConstantComposite %v3uint %uint_16 %uint_16 %uint_16
        %407 = OpConstantComposite %v3uint %uint_31 %uint_31 %uint_31
%float_0_055555556 = OpConstant %float 0.055555556
%float_2_20000005 = OpConstant %float 2.20000005
 %float_34_5 = OpConstant %float 34.5
 %float_24_5 = OpConstant %float 24.5
%float_73_1999969 = OpConstant %float 73.1999969
%float_8_89999962 = OpConstant %float 8.89999962
%float_3_5999999 = OpConstant %float 3.5999999
%float_1_00010002 = OpConstant %float 1.00010002
%int_2129859010 = OpConstant %int 2129859010
%float_0_140000001 = OpConstant %float 0.140000001
%_arr_v4float_uint_6 = OpTypeArray %v4float %uint_6
  %type_View = OpTypeStruct %mat4v4float %mat4v4float %mat4v4float %v3float %v3float %v4float %v4float %v3float %v3float %v4float %v4float %v4float %v4float %float %float %v4float %v4float %v2float %float %float %uint %float %v4float %v3float %v3float %float %float %v4float %_arr_v4float_uint_6 %_arr_v4float_uint_6 %int %v3float %float %uint %float %v3float %v3float %v3float %float %v3float %float %float %uint %uint
%_ptr_Uniform_type_View = OpTypePointer Uniform %type_View
%type_3d_image = OpTypeImage %uint 3D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_3d_image = OpTypePointer UniformConstant %type_3d_image
%type_3d_image_0 = OpTypeImage %float 3D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_3d_image_0 = OpTypePointer UniformConstant %type_3d_image_0
%type_2d_image = OpTypeImage %float 2D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_2d_image = OpTypePointer UniformConstant %type_2d_image
%type_sampler = OpTypeSampler
%_ptr_UniformConstant_type_sampler = OpTypePointer UniformConstant %type_sampler
%_runtimearr_v4float = OpTypeRuntimeArray %v4float
%type_StructuredBuffer_v4float = OpTypeStruct %_runtimearr_v4float
%_ptr_Uniform_type_StructuredBuffer_v4float = OpTypePointer Uniform %type_StructuredBuffer_v4float
      %v3int = OpTypeVector %int 3
%type_SingleLayerWater = OpTypeStruct %v4float %v4float %v2float %uint %uint
%_ptr_Uniform_type_SingleLayerWater = OpTypePointer Uniform %type_SingleLayerWater
%_arr_mat4v4float_uint_4 = OpTypeArray %mat4v4float %uint_4
%_arr_v4float_uint_4 = OpTypeArray %v4float %uint_4
%type_OpaqueBasePass = OpTypeStruct %uint %uint %v3int %uint %v3float %v3float %float %v3float %uint %v2float %uint %int %v4float %_arr_mat4v4float_uint_4 %_arr_v4float_uint_4 %v4float %uint %uint %int %int
%_ptr_Uniform_type_OpaqueBasePass = OpTypePointer Uniform %type_OpaqueBasePass
%_runtimearr_uint = OpTypeRuntimeArray %uint
%type_StructuredBuffer_uint = OpTypeStruct %_runtimearr_uint
%_ptr_Uniform_type_StructuredBuffer_uint = OpTypePointer Uniform %type_StructuredBuffer_uint
%type_buffer_image = OpTypeImage %uint Buffer 2 0 0 1 R32ui
%_ptr_UniformConstant_type_buffer_image = OpTypePointer UniformConstant %type_buffer_image
%type_2d_image_array = OpTypeImage %uint 2D 2 1 0 2 R32ui
%_ptr_UniformConstant_type_2d_image_array = OpTypePointer UniformConstant %type_2d_image_array
%_arr_v4float_uint_3 = OpTypeArray %v4float %uint_3
%type_IndirectLightingCache = OpTypeStruct %v4float %float %_arr_v4float_uint_3 %_arr_v4float_uint_3 %v4float
%_ptr_Uniform_type_IndirectLightingCache = OpTypePointer Uniform %type_IndirectLightingCache
%type_ByteAddressBuffer = OpTypeStruct %_runtimearr_uint
%_ptr_Uniform_type_ByteAddressBuffer = OpTypePointer Uniform %type_ByteAddressBuffer
%type_2d_image_array_0 = OpTypeImage %uint 2D 2 1 0 1 Unknown
%_ptr_UniformConstant_type_2d_image_array_0 = OpTypePointer UniformConstant %type_2d_image_array_0
%_arr_v4float_uint_5 = OpTypeArray %v4float %uint_5
%type_MaterialCollection0 = OpTypeStruct %_arr_v4float_uint_5
%_ptr_Uniform_type_MaterialCollection0 = OpTypePointer Uniform %type_MaterialCollection0
   %uint_109 = OpConstant %uint 109
%_arr_v4float_uint_109 = OpTypeArray %v4float %uint_109
%type_Material = OpTypeStruct %_arr_v4float_uint_109
%_ptr_Uniform_type_Material = OpTypePointer Uniform %type_Material
%_ptr_Input_v4float = OpTypePointer Input %v4float
%_ptr_Input_uint = OpTypePointer Input %uint
%_ptr_Input_v3float = OpTypePointer Input %v3float
%_ptr_Input_bool = OpTypePointer Input %bool
%_ptr_Output_v4float = OpTypePointer Output %v4float
%_ptr_Output_uint = OpTypePointer Output %uint
       %void = OpTypeVoid
        %443 = OpTypeFunction %void
%_ptr_Function_v3float = OpTypePointer Function %v3float
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %v4bool = OpTypeVector %bool 4
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
%_ptr_Uniform_float = OpTypePointer Uniform %float
     %v3bool = OpTypeVector %bool 3
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
%_ptr_Uniform_int = OpTypePointer Uniform %int
%_ptr_Uniform_v3float = OpTypePointer Uniform %v3float
%type_sampled_image = OpTypeSampledImage %type_2d_image
%_ptr_Uniform_mat4v4float = OpTypePointer Uniform %mat4v4float
     %v2bool = OpTypeVector %bool 2
%type_sampled_image_0 = OpTypeSampledImage %type_3d_image_0
%_ptr_Uniform_v3int = OpTypePointer Uniform %v3int
%_ptr_Function__arr_v3float_uint_4 = OpTypePointer Function %_arr_v3float_uint_4
       %View = OpVariable %_ptr_Uniform_type_View Uniform
%View_VolumetricLightmapIndirectionTexture = OpVariable %_ptr_UniformConstant_type_3d_image UniformConstant
%View_DirectionalLightShadowingBrickTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_GlobalDistanceFieldPageAtlasTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_GlobalDistanceFieldPageTableTexture = OpVariable %_ptr_UniformConstant_type_3d_image UniformConstant
%View_PerlinNoise3DTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_PerlinNoise3DTextureSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SharedBilinearClampedSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SharedTrilinearWrappedSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SkyIrradianceEnvironmentMap = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%View_ShadingEnergyGGXSpecTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%View_ShadingEnergySampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SimpleVolumeEnvTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_SimpleVolumeEnvTextureSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%SingleLayerWater = OpVariable %_ptr_Uniform_type_SingleLayerWater Uniform
%SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%Scene_GPUScene_GPUScenePrimitiveSceneData = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%OpaqueBasePass = OpVariable %_ptr_Uniform_type_OpaqueBasePass Uniform
%OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%OpaqueBasePass_Shared_Forward_ShadowmapSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%OpaqueBasePass_Shared_Forward_NumCulledLightsGrid = OpVariable %_ptr_Uniform_type_StructuredBuffer_uint Uniform
%OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit = OpVariable %_ptr_UniformConstant_type_buffer_image UniformConstant
%OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs = OpVariable %_ptr_UniformConstant_type_2d_image_array UniformConstant
%OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%OpaqueBasePass_PreIntegratedGFTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%IndirectLightingCache = OpVariable %_ptr_Uniform_type_IndirectLightingCache Uniform
%VirtualShadowMap_ProjectionData = OpVariable %_ptr_Uniform_type_ByteAddressBuffer Uniform
%VirtualShadowMap_PageTable = OpVariable %_ptr_Uniform_type_StructuredBuffer_uint Uniform
%VirtualShadowMap_PhysicalPagePool = OpVariable %_ptr_UniformConstant_type_2d_image_array_0 UniformConstant
%MaterialCollection0 = OpVariable %_ptr_Uniform_type_MaterialCollection0 Uniform
   %Material = OpVariable %_ptr_Uniform_type_Material Uniform
%in_var_TEXCOORD10_centroid = OpVariable %_ptr_Input_v4float Input
%in_var_TEXCOORD11_centroid = OpVariable %_ptr_Input_v4float Input
%in_var_PRIMITIVE_ID = OpVariable %_ptr_Input_uint Input
%in_var_TEXCOORD9 = OpVariable %_ptr_Input_v3float Input
%gl_FragCoord = OpVariable %_ptr_Input_v4float Input
%gl_FrontFacing = OpVariable %_ptr_Input_bool Input
%out_var_SV_Target0 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target1 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target2 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target3 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target4 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target5 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target6 = OpVariable %_ptr_Output_uint Output
        %457 = OpUndef %v3float
        %458 = OpConstantNull %uint
        %459 = OpConstantNull %v4float
        %460 = OpConstantNull %v3float
        %461 = OpConstantNull %float
%float_0_03125 = OpConstant %float 0.03125
        %463 = OpConstantComposite %v3float %float_0_03125 %float_0_03125 %float_0_03125
%float_32_6650009 = OpConstant %float 32.6650009
%float_11_8149996 = OpConstant %float 11.8149996
        %466 = OpConstantComposite %v2float %float_32_6650009 %float_11_8149996
        %467 = OpConstantComposite %v2float %float_0_0671105608 %float_0_00583714992
%float_0_00787401572 = OpConstant %float 0.00787401572
%float_n0_488602996 = OpConstant %float -0.488602996
%float_n1_09254801 = OpConstant %float -1.09254801
%float_2_09439516 = OpConstant %float 2.09439516
%float_0_785398185 = OpConstant %float 0.785398185
%float_16384 = OpConstant %float 16384
%float_0_318309873 = OpConstant %float 0.318309873
   %float_n0 = OpConstant %float -0
%float_n0_156582996 = OpConstant %float -0.156582996
%float_n0_0699428469 = OpConstant %float -0.0699428469
%float_0_997551024 = OpConstant %float 0.997551024
%float_1_41421354 = OpConstant %float 1.41421354
%float_2_50662827 = OpConstant %float 2.50662827
%float_0_0465205647 = OpConstant %float 0.0465205647
%float_0_953479409 = OpConstant %float 0.953479409
%float_12_566371 = OpConstant %float 12.566371
%float_0_0795774683 = OpConstant %float 0.0795774683
%float_32256 = OpConstant %float 32256
        %486 = OpConstantComposite %v3float %float_32256 %float_32256 %float_32256
%uint_4294967293 = OpConstant %uint 4294967293
%uint_4294902015 = OpConstant %uint 4294902015
%float_0_0454545468 = OpConstant %float 0.0454545468
%float_0_0625 = OpConstant %float 0.0625
%float_0_909090936 = OpConstant %float 0.909090936
%float_0_875 = OpConstant %float 0.875
%uint_4287627263 = OpConstant %uint 4287627263
%uint_4169138175 = OpConstant %uint 4169138175
%uint_4294901760 = OpConstant %uint 4294901760
%uint_4294967263 = OpConstant %uint 4294967263
%uint_4294901759 = OpConstant %uint 4294901759
        %498 = OpConstantComposite %v3float %float_0_0454545468 %float_0_0454545468 %float_0_0625
        %499 = OpConstantComposite %v3float %float_0_909090936 %float_0_909090936 %float_0_875
        %500 = OpConstantComposite %v3float %float_0_318309873 %float_0_318309873 %float_0_318309873
%uint_4194303 = OpConstant %uint 4194303
        %502 = OpConstantComposite %v3uint %uint_1 %uint_1 %uint_1
%uint_16711680 = OpConstant %uint 16711680
    %uint_72 = OpConstant %uint 72
        %505 = OpConstantComposite %v3float %float_n1 %float_n1 %float_n0
%float_9_53674316en07 = OpConstant %float 9.53674316e-07
%float_n2_097152e_11 = OpConstant %float -2.097152e+11
%float_0_000100000005 = OpConstant %float 0.000100000005
        %509 = OpConstantComposite %v3float %float_0_000100000005 %float_0_000100000005 %float_0_000100000005
%float_0_000200000009 = OpConstant %float 0.000200000009
        %511 = OpConstantComposite %v3float %float_0_000200000009 %float_0_000200000009 %float_0_000200000009
%float_0_429042608 = OpConstant %float 0.429042608
        %513 = OpConstantComposite %v3float %float_n0_5 %float_n0_5 %float_n0_5
%float_4194_3042 = OpConstant %float 4194.3042
%float_0_0333333351 = OpConstant %float 0.0333333351
%float_3_125 = OpConstant %float 3.125
%float_0_636619747 = OpConstant %float 0.636619747
%float_0_00158730161 = OpConstant %float 0.00158730161
%uint_1048576 = OpConstant %uint 1048576
%float_0_0158730168 = OpConstant %float 0.0158730168
%float_0_999600053 = OpConstant %float 0.999600053
        %522 = OpConstantComposite %v3float %float_0_999600053 %float_0_999600053 %float_0_999600053
%float_1_52590219en05 = OpConstant %float 1.52590219e-05
        %524 = OpConstantComposite %v3float %float_1_52590219en05 %float_1_52590219en05 %float_1_52590219en05
%float_0_0666666701 = OpConstant %float 0.0666666701
        %526 = OpConstantComposite %v3float %float_0_0666666701 %float_0_0666666701 %float_0_0666666701
        %527 = OpConstantComposite %v3float %float_0_0625 %float_0_0625 %float_0_0625
        %528 = OpConstantComposite %v3float %float_0_00787401572 %float_0_00787401572 %float_0_00787401572
        %529 = OpConstantComposite %v2float %float_n0_5 %float_n0_5
%float_n6_28318548 = OpConstant %float -6.28318548
%float_0_139885694 = OpConstant %float 0.139885694
%float_n0_800000012 = OpConstant %float -0.800000012
%float_n3_98000002 = OpConstant %float -3.98000002
%float_n16_7800007 = OpConstant %float -16.7800007
%float_n0_75 = OpConstant %float -0.75
  %float_n59 = OpConstant %float -59
%float_n21_2000008 = OpConstant %float -21.2000008
%float_n0_0549999997 = OpConstant %float -0.0549999997
 %float_n127 = OpConstant %float -127
        %540 = OpUndef %v3float
        %541 = OpUndef %v3uint
        %542 = OpUndef %v4float
        %543 = OpUndef %v3float
        %544 = OpUndef %mat4v4float
        %545 = OpConstantComposite %v4float %float_0 %461 %461 %461
%float_0_886227548 = OpConstant %float 0.886227548
   %float_66 = OpConstant %float 66
  %float_120 = OpConstant %float 120
  %float_148 = OpConstant %float 148
  %float_167 = OpConstant %float 167
        %551 = OpUndef %float
        %552 = OpUndef %v3uint
        %553 = OpUndef %v4float
        %554 = OpUndef %v3float
        %555 = OpUndef %v2float
        %556 = OpConstantComposite %v3float %461 %461 %461
        %557 = OpConstantComposite %v3bool %true %true %true
        %558 = OpConstantComposite %v3bool %false %false %false
        %559 = OpConstantComposite %v2float %461 %float_0
  %uint_8194 = OpConstant %uint 8194
%float_1_53787023en05 = OpConstant %float 1.53787023e-05
        %562 = OpConstantComposite %v2float %461 %461
%uint_2130706432 = OpConstant %uint 2130706432
    %uint_23 = OpConstant %uint 23
    %uint_27 = OpConstant %uint 27
    %uint_33 = OpConstant %uint 33
    %uint_28 = OpConstant %uint 28
    %uint_29 = OpConstant %uint 29
    %uint_30 = OpConstant %uint 30
    %uint_35 = OpConstant %uint 35
    %uint_36 = OpConstant %uint 36
    %uint_37 = OpConstant %uint 37
    %uint_38 = OpConstant %uint 38
    %uint_39 = OpConstant %uint 39
    %uint_13 = OpConstant %uint 13
    %uint_42 = OpConstant %uint 42
    %uint_43 = OpConstant %uint 43
    %uint_21 = OpConstant %uint 21
    %uint_34 = OpConstant %uint 34

               ; Function MainPS
     %MainPS = OpFunction %void None %443
        %580 = OpLabel
        %581 = OpVariable %_ptr_Function__arr_v3float_uint_4 Function
        %582 = OpVariable %_ptr_Function__arr_v3float_uint_4 Function
        %583 = OpLoad %v4float %in_var_TEXCOORD11_centroid
        %584 = OpLoad %uint %in_var_PRIMITIVE_ID
        %585 = OpLoad %v3float %in_var_TEXCOORD9
        %586 = OpLoad %v4float %gl_FragCoord
        %587 = OpCompositeExtract %float %586 3
        %588 = OpFDiv %float %float_1 %587
        %589 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_0
        %590 = OpLoad %mat4v4float %589
        %591 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_1
        %592 = OpLoad %mat4v4float %591
        %593 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_2
        %594 = OpLoad %mat4v4float %593
        %595 = OpAccessChain %_ptr_Uniform_v3float %View %uint_3
        %596 = OpLoad %v3float %595
        %597 = OpAccessChain %_ptr_Uniform_v3float %View %uint_4
        %598 = OpLoad %v3float %597
        %599 = OpAccessChain %_ptr_Uniform_v4float %View %uint_6
        %600 = OpLoad %v4float %599
        %601 = OpAccessChain %_ptr_Uniform_v3float %View %uint_7
        %602 = OpLoad %v3float %601
        %603 = OpAccessChain %_ptr_Uniform_v3float %View %uint_8
        %604 = OpLoad %v3float %603
        %605 = OpAccessChain %_ptr_Uniform_v4float %View %uint_9
        %606 = OpLoad %v4float %605
        %607 = OpAccessChain %_ptr_Uniform_v4float %View %uint_10
        %608 = OpLoad %v4float %607
        %609 = OpAccessChain %_ptr_Uniform_v4float %View %uint_12
        %610 = OpLoad %v4float %609
        %611 = OpAccessChain %_ptr_Uniform_float %View %uint_14
        %612 = OpLoad %float %611
        %613 = OpAccessChain %_ptr_Uniform_v4float %View %uint_15
        %614 = OpLoad %v4float %613
        %615 = OpAccessChain %_ptr_Uniform_v4float %View %uint_16
        %616 = OpLoad %v4float %615
        %617 = OpAccessChain %_ptr_Uniform_v2float %View %uint_17
        %618 = OpLoad %v2float %617
        %619 = OpAccessChain %_ptr_Uniform_v4float %View %uint_22
        %620 = OpLoad %v4float %619
        %621 = OpAccessChain %_ptr_Uniform_v3float %View %uint_23
        %622 = OpLoad %v3float %621
        %623 = OpAccessChain %_ptr_Uniform_v4float %View %uint_27
        %624 = OpLoad %v4float %623
        %625 = OpFNegate %v3float %596
        %626 = OpVectorShuffle %v3float %583 %583 0 1 2
        %627 = OpVectorShuffle %v2float %586 %586 0 1
        %628 = OpVectorShuffle %v2float %606 %606 0 1
        %629 = OpFSub %v2float %627 %628
        %630 = OpVectorShuffle %v2float %608 %608 2 3
        %631 = OpExtInst %v2float %1 Fma %629 %630 %529
        %632 = OpFMul %v2float %631 %153
        %633 = OpCompositeExtract %float %632 0
        %634 = OpCompositeExtract %float %632 1
        %635 = OpCompositeConstruct %v4float %633 %634 %551 %float_1
        %636 = OpVectorTimesScalar %v4float %635 %588
        %637 = OpCompositeExtract %float %586 0
        %638 = OpCompositeExtract %float %586 1
        %639 = OpCompositeExtract %float %586 2
        %640 = OpCompositeConstruct %v4float %637 %638 %639 %float_1
        %641 = OpMatrixTimesVector %v4float %594 %640
        %642 = OpVectorShuffle %v3float %641 %641 0 1 2
        %643 = OpCompositeExtract %float %641 3
        %644 = OpCompositeConstruct %v3float %643 %643 %643
        %645 = OpFDiv %v3float %642 %644
        %646 = OpFSub %v3float %645 %604
        %647 = OpFSub %v3float %585 %604
        %648 = OpVectorShuffle %v2float %636 %636 0 1
        %649 = OpCompositeExtract %float %636 3
        %650 = OpCompositeConstruct %v2float %649 %649
        %651 = OpFDiv %v2float %648 %650
        %652 = OpVectorShuffle %v2float %600 %600 0 1
        %653 = OpVectorShuffle %v2float %600 %600 3 2
        %654 = OpExtInst %v2float %1 Fma %651 %652 %653
        %655 = OpCompositeExtract %float %592 3 3
        %656 = OpFOrdGreaterThanEqual %bool %655 %float_1
               OpSelectionMerge %657 None
               OpBranchConditional %656 %658 %659
        %659 = OpLabel
        %660 = OpFNegate %v3float %645
        %661 = OpExtInst %v3float %1 Normalize %660
               OpBranch %657
        %658 = OpLabel
        %662 = OpFNegate %v3float %598
               OpBranch %657
        %657 = OpLabel
        %663 = OpPhi %v3float %661 %659 %662 %658
        %664 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_4
        %665 = OpLoad %v4float %664
        %666 = OpCompositeExtract %float %665 0
        %667 = OpCompositeExtract %float %665 1
        %668 = OpCompositeExtract %float %665 2
        %669 = OpCompositeConstruct %v3float %666 %667 %668
        %670 = OpFMul %v3float %596 %505
        %671 = OpFNegate %v3float %646
        %672 = OpExtInst %v3float %1 Fma %671 %135 %669
        %673 = OpCompositeExtract %float %670 0
        %674 = OpCompositeExtract %float %672 0
        %675 = OpFMul %float %674 %float_4_76837158en07
        %676 = OpExtInst %float %1 Fma %674 %float_9_53674316en07 %673
        %677 = OpCompositeExtract %float %670 1
        %678 = OpCompositeExtract %float %672 1
        %679 = OpFMul %float %678 %float_4_76837158en07
        %680 = OpExtInst %float %1 Fma %678 %float_9_53674316en07 %677
        %681 = OpFMul %float %677 %680
        %682 = OpFMul %float %678 %679
        %683 = OpCompositeExtract %float %670 2
        %684 = OpCompositeExtract %float %672 2
        %685 = OpFMul %float %684 %float_4_76837158en07
        %686 = OpExtInst %float %1 Fma %684 %float_9_53674316en07 %683
        %687 = OpExtInst %float %1 Fma %673 %676 %681
        %688 = OpExtInst %float %1 Fma %674 %675 %682
        %689 = OpExtInst %float %1 Fma %683 %686 %687
        %690 = OpExtInst %float %1 Fma %684 %685 %688
        %691 = OpExtInst %float %1 Fma %690 %float_4_76837158en07 %689
        %692 = OpExtInst %float %1 Sqrt %691
        %693 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_1
        %694 = OpLoad %v4float %693
        %695 = OpCompositeExtract %float %694 0
        %696 = OpExtInst %float %1 NMax %float_9_99999975en06 %695
        %697 = OpFDiv %float %float_1 %696
        %698 = OpFMul %float %692 %697
        %699 = OpExtInst %float %1 Fma %698 %float_n2_097152e_11 %float_100000
        %700 = OpExtInst %float %1 FClamp %699 %float_0 %float_1
        %701 = OpExtInst %float %1 FMix %float_1 %float_0 %700
        %702 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_86 %int_2
        %703 = OpLoad %float %702
        %704 = OpCompositeConstruct %v3float %703 %703 %703
        %705 = OpFMul %v3float %646 %704
        %706 = OpVectorTimesScalar %v3float %705 %float_4_76837158en07
        %707 = OpFAdd %v3float %706 %138
        %708 = OpExtInst %v3float %1 Fma %596 %704 %707
        %709 = OpExtInst %v3float %1 Floor %708
        %710 = OpFNegate %v3float %709
        %711 = OpExtInst %v3float %1 Fma %596 %704 %710
        %712 = OpVectorTimesScalar %v3float %711 %float_2097152
        %713 = OpExtInst %v3float %1 Fma %646 %704 %712
        %714 = OpVectorTimesScalar %v3float %713 %float_1
               OpBranch %715
        %715 = OpLabel
        %716 = OpPhi %v3float %714 %657 %717 %718
        %719 = OpPhi %float %float_1 %657 %720 %718
        %721 = OpPhi %float %float_0 %657 %722 %718
        %723 = OpPhi %uint %uint_0 %657 %724 %718
        %725 = OpULessThan %bool %723 %uint_6
               OpLoopMerge %726 %718 DontUnroll
               OpBranchConditional %725 %718 %726
        %718 = OpLabel
        %727 = OpFMul %v3float %716 %526
        %728 = OpExtInst %v3float %1 Fract %727
        %729 = OpVectorTimesScalar %v3float %728 %float_15
        %730 = OpExtInst %v3float %1 Fract %729
        %731 = OpFSub %v3float %729 %730
        %732 = OpCompositeExtract %float %730 0
        %733 = OpCompositeExtract %float %730 1
        %734 = OpCompositeExtract %float %730 2
        %735 = OpCompositeConstruct %v4float %732 %733 %734 %float_0
        %736 = OpFMul %v4float %735 %735
        %737 = OpFMul %v4float %736 %735
        %738 = OpVectorTimesScalar %v4float %735 %float_6
        %739 = OpFSub %v4float %738 %383
        %740 = OpExtInst %v4float %1 Fma %735 %739 %384
        %741 = OpFMul %v4float %737 %740
        %742 = OpVectorShuffle %v3float %741 %741 0 1 2
        %743 = OpFAdd %v3float %731 %742
        %744 = OpLoad %type_3d_image_0 %View_PerlinNoise3DTexture
        %745 = OpLoad %type_sampler %View_PerlinNoise3DTextureSampler
        %746 = OpExtInst %v3float %1 Fma %743 %527 %463
        %747 = OpSampledImage %type_sampled_image_0 %744 %745
        %748 = OpImageSampleExplicitLod %v4float %747 %746 Lod %float_0
        %749 = OpVectorShuffle %v3float %748 %748 0 1 2
        %750 = OpVectorTimesScalar %v3float %749 %float_255
        %751 = OpExtInst %v3float %1 Fma %750 %528 %280
        %752 = OpCompositeExtract %float %748 3
        %753 = OpExtInst %float %1 Fma %752 %float_255 %float_n127
        %754 = OpDot %float %729 %751
        %755 = OpFSub %float %754 %753
        %756 = OpExtInst %float %1 FAbs %755
        %722 = OpExtInst %float %1 Fma %756 %719 %721
        %717 = OpVectorTimesScalar %v3float %716 %float_2
        %720 = OpFMul %float %719 %float_0_5
        %724 = OpIAdd %uint %723 %uint_1
               OpBranch %715
        %726 = OpLabel
        %757 = OpExtInst %float %1 FMix %float_n1 %float_1 %721
        %758 = OpExtInst %float %1 FClamp %757 %float_0 %float_1
        %759 = OpExtInst %v3float %1 Fma %596 %135 %670
        %760 = OpFMul %v3float %646 %505
        %761 = OpExtInst %v3float %1 Fma %602 %135 %760
        %762 = OpVectorTimesScalar %v3float %759 %float_2097152
        %763 = OpFAdd %v3float %762 %761
        %764 = OpExtInst %float %1 Length %763
        %765 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_0
        %766 = OpLoad %v4float %765
        %767 = OpCompositeExtract %float %766 0
        %768 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_85 %int_1
        %769 = OpLoad %float %768
        %770 = OpFMul %float %767 %769
        %771 = OpExtInst %float %1 NMax %float_9_99999975en06 %770
        %772 = OpFDiv %float %float_1 %771
        %773 = OpFNegate %float %764
        %774 = OpExtInst %float %1 Fma %773 %772 %float_1
        %775 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_86 %int_1
        %776 = OpLoad %float %775
        %777 = OpFMul %float %774 %776
        %778 = OpExtInst %float %1 FClamp %777 %float_0 %float_1
        %779 = OpExtInst %float %1 FMix %758 %float_1 %778
        %780 = OpFAdd %v3float %596 %625
        %781 = OpVectorTimesScalar %v3float %780 %float_2097152
        %782 = OpFAdd %v3float %781 %645
               OpBranch %783
        %783 = OpLabel
        %784 = OpPhi %v3uint %541 %726 %785 %786
        %787 = OpPhi %uint %uint_0 %726 %788 %786
        %789 = OpPhi %float %float_0 %726 %790 %786
        %791 = OpAccessChain %_ptr_Uniform_uint %View %uint_33
        %792 = OpLoad %uint %791
        %793 = OpULessThan %bool %787 %792
               OpLoopMerge %794 %786 None
               OpBranchConditional %793 %795 %794
        %795 = OpLabel
        %796 = OpAccessChain %_ptr_Uniform_v4float %View %uint_28 %787
        %797 = OpLoad %v4float %796
        %798 = OpVectorShuffle %v3float %797 %797 0 1 2
        %799 = OpVectorShuffle %v3float %797 %797 3 3 3
        %800 = OpFSub %v3float %782 %798
        %801 = OpFAdd %v3float %800 %799
        %802 = OpExtInst %v3float %1 NMax %801 %103
        %803 = OpFAdd %v3float %798 %799
        %804 = OpFSub %v3float %803 %782
        %805 = OpExtInst %v3float %1 NMax %804 %103
        %806 = OpExtInst %v3float %1 NMin %802 %805
        %807 = OpCompositeExtract %float %806 0
        %808 = OpCompositeExtract %float %806 1
        %809 = OpCompositeExtract %float %806 2
        %810 = OpExtInst %float %1 NMin %808 %809
        %811 = OpExtInst %float %1 NMin %807 %810
        %812 = OpAccessChain %_ptr_Uniform_float %View %uint_28 %787 %int_3
        %813 = OpLoad %float %812
        %814 = OpAccessChain %_ptr_Uniform_float %View %uint_32
        %815 = OpLoad %float %814
        %816 = OpFMul %float %813 %815
        %790 = OpFMul %float %float_8 %816
        %817 = OpFOrdGreaterThan %bool %811 %816
               OpSelectionMerge %818 None
               OpBranchConditional %817 %819 %818
        %819 = OpLabel
        %820 = OpAccessChain %_ptr_Uniform_v4float %View %uint_29 %787
        %821 = OpLoad %v4float %820
        %822 = OpVectorShuffle %v3float %821 %821 3 3 3
        %823 = OpVectorShuffle %v3float %821 %821 0 1 2
        %824 = OpExtInst %v3float %1 Fma %782 %822 %823
        %825 = OpExtInst %v3float %1 Fract %824
        %826 = OpExtInst %v3float %1 Fract %825
        %827 = OpExtInst %v3float %1 FClamp %826 %103 %128
        %828 = OpAccessChain %_ptr_Uniform_int %View %uint_30
        %829 = OpLoad %int %828
        %830 = OpConvertSToF %float %829
        %831 = OpVectorTimesScalar %v3float %827 %830
        %832 = OpBitcast %uint %829
        %833 = OpIMul %uint %787 %832
        %834 = OpBitcast %int %833
        %835 = OpCompositeConstruct %v3int %int_0 %int_0 %834
        %836 = OpConvertSToF %v3float %835
        %837 = OpFAdd %v3float %831 %836
        %838 = OpCompositeExtract %float %837 0
        %839 = OpCompositeExtract %float %837 1
        %840 = OpCompositeExtract %float %837 2
        %841 = OpConvertFToS %int %838
        %842 = OpConvertFToS %int %839
        %843 = OpConvertFToS %int %840
        %844 = OpCompositeConstruct %v4int %841 %842 %843 %int_0
        %845 = OpVectorShuffle %v3int %844 %844 0 1 2
        %846 = OpLoad %type_3d_image %View_GlobalDistanceFieldPageTableTexture
        %847 = OpImageFetch %v4uint %846 %845 Lod %int_0
        %848 = OpCompositeExtract %uint %847 0
        %849 = OpBitwiseAnd %uint %848 %uint_16777215
        %850 = OpULessThan %bool %848 %uint_4294967295
               OpSelectionMerge %851 None
               OpBranchConditional %850 %852 %851
        %852 = OpLabel
        %853 = OpBitwiseAnd %uint %849 %uint_127
        %854 = OpCompositeInsert %v3uint %853 %784 0
        %855 = OpShiftRightLogical %uint %849 %uint_7
        %856 = OpBitwiseAnd %uint %855 %uint_127
        %857 = OpCompositeInsert %v3uint %856 %854 1
        %858 = OpShiftRightLogical %uint %849 %uint_14
        %859 = OpCompositeInsert %v3uint %858 %857 2
        %860 = OpVectorTimesScalar %v3float %826 %830
        %861 = OpExtInst %v3float %1 Fract %860
        %862 = OpIMul %v3uint %859 %355
        %863 = OpConvertUToF %v3float %862
        %864 = OpVectorTimesScalar %v3float %861 %float_7
        %865 = OpFAdd %v3float %863 %864
        %866 = OpFAdd %v3float %865 %138
        %867 = OpAccessChain %_ptr_Uniform_v3float %View %uint_31
        %868 = OpLoad %v3float %867
        %869 = OpFMul %v3float %866 %868
        %870 = OpLoad %type_3d_image_0 %View_GlobalDistanceFieldPageAtlasTexture
        %871 = OpLoad %type_sampler %View_SharedTrilinearWrappedSampler
        %872 = OpSampledImage %type_sampled_image_0 %870 %871
        %873 = OpImageSampleExplicitLod %v4float %872 %869 Lod %float_0
        %874 = OpCompositeExtract %float %873 0
        %875 = OpFOrdLessThan %bool %874 %float_1
               OpSelectionMerge %876 None
               OpBranchConditional %875 %877 %876
        %877 = OpLabel
        %878 = OpExtInst %float %1 Fma %874 %float_2 %float_n1
        %879 = OpFMul %float %878 %790
               OpBranch %794
        %876 = OpLabel
               OpBranch %851
        %851 = OpLabel
        %880 = OpPhi %v3uint %784 %819 %859 %876
               OpBranch %818
        %818 = OpLabel
        %785 = OpPhi %v3uint %784 %795 %880 %851
               OpBranch %786
        %786 = OpLabel
        %788 = OpIAdd %uint %787 %uint_1
               OpBranch %783
        %794 = OpLabel
        %881 = OpPhi %float %789 %783 %879 %877
        %882 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_0
        %883 = OpLoad %float %882
        %884 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_1
        %885 = OpLoad %float %884
        %886 = OpFNegate %float %885
        %887 = OpExtInst %float %1 Fma %881 %883 %886
        %888 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_88 %int_0
        %889 = OpLoad %float %888
        %890 = OpFMul %float %887 %889
        %891 = OpExtInst %float %1 Fma %890 %float_n1 %float_1
        %892 = OpExtInst %float %1 FClamp %891 %float_0 %float_1
               OpBranch %893
        %893 = OpLabel
        %894 = OpPhi %v3uint %541 %794 %895 %896
        %897 = OpPhi %uint %uint_0 %794 %898 %896
        %899 = OpULessThan %bool %897 %792
               OpLoopMerge %900 %896 None
               OpBranchConditional %899 %901 %900
        %901 = OpLabel
        %902 = OpAccessChain %_ptr_Uniform_v4float %View %uint_28 %897
        %903 = OpAccessChain %_ptr_Uniform_float %View %uint_28 %897 %int_3
        %904 = OpLoad %float %903
        %905 = OpAccessChain %_ptr_Uniform_float %View %uint_32
        %906 = OpLoad %float %905
        %907 = OpFMul %float %904 %906
        %908 = OpLoad %v4float %902
        %909 = OpVectorShuffle %v3float %908 %908 0 1 2
        %910 = OpVectorShuffle %v3float %908 %908 3 3 3
        %911 = OpFSub %v3float %782 %909
        %912 = OpFAdd %v3float %911 %910
        %913 = OpExtInst %v3float %1 NMax %912 %103
        %914 = OpFAdd %v3float %909 %910
        %915 = OpFSub %v3float %914 %782
        %916 = OpExtInst %v3float %1 NMax %915 %103
        %917 = OpExtInst %v3float %1 NMin %913 %916
        %918 = OpCompositeExtract %float %917 0
        %919 = OpCompositeExtract %float %917 1
        %920 = OpCompositeExtract %float %917 2
        %921 = OpExtInst %float %1 NMin %919 %920
        %922 = OpExtInst %float %1 NMin %918 %921
        %923 = OpFOrdGreaterThanEqual %bool %922 %907
               OpSelectionMerge %924 None
               OpBranchConditional %923 %925 %924
        %925 = OpLabel
        %926 = OpAccessChain %_ptr_Uniform_v4float %View %uint_29 %897
        %927 = OpLoad %v4float %926
        %928 = OpVectorShuffle %v3float %927 %927 3 3 3
        %929 = OpVectorShuffle %v3float %927 %927 0 1 2
        %930 = OpExtInst %v3float %1 Fma %782 %928 %929
        %931 = OpExtInst %v3float %1 Fract %930
        %932 = OpExtInst %v3float %1 Fract %931
        %933 = OpExtInst %v3float %1 FClamp %932 %103 %128
        %934 = OpAccessChain %_ptr_Uniform_int %View %uint_30
        %935 = OpLoad %int %934
        %936 = OpConvertSToF %float %935
        %937 = OpVectorTimesScalar %v3float %933 %936
        %938 = OpBitcast %uint %935
        %939 = OpIMul %uint %897 %938
        %940 = OpBitcast %int %939
        %941 = OpCompositeConstruct %v3int %int_0 %int_0 %940
        %942 = OpConvertSToF %v3float %941
        %943 = OpFAdd %v3float %937 %942
        %944 = OpCompositeExtract %float %943 0
        %945 = OpCompositeExtract %float %943 1
        %946 = OpCompositeExtract %float %943 2
        %947 = OpConvertFToS %int %944
        %948 = OpConvertFToS %int %945
        %949 = OpConvertFToS %int %946
        %950 = OpCompositeConstruct %v4int %947 %948 %949 %int_0
        %951 = OpVectorShuffle %v3int %950 %950 0 1 2
        %952 = OpLoad %type_3d_image %View_GlobalDistanceFieldPageTableTexture
        %953 = OpImageFetch %v4uint %952 %951 Lod %int_0
        %954 = OpCompositeExtract %uint %953 0
        %955 = OpBitwiseAnd %uint %954 %uint_16777215
        %956 = OpULessThan %bool %954 %uint_4294967295
               OpSelectionMerge %957 None
               OpBranchConditional %956 %958 %957
        %958 = OpLabel
        %959 = OpBitwiseAnd %uint %955 %uint_127
        %960 = OpCompositeInsert %v3uint %959 %894 0
        %961 = OpShiftRightLogical %uint %955 %uint_7
        %962 = OpBitwiseAnd %uint %961 %uint_127
        %963 = OpCompositeInsert %v3uint %962 %960 1
        %964 = OpShiftRightLogical %uint %955 %uint_14
        %965 = OpCompositeInsert %v3uint %964 %963 2
        %966 = OpVectorTimesScalar %v3float %932 %936
        %967 = OpExtInst %v3float %1 Fract %966
        %968 = OpIMul %v3uint %965 %355
        %969 = OpConvertUToF %v3float %968
        %970 = OpVectorTimesScalar %v3float %967 %float_7
        %971 = OpFAdd %v3float %969 %970
        %972 = OpFAdd %v3float %971 %138
        %973 = OpAccessChain %_ptr_Uniform_v3float %View %uint_31
        %974 = OpLoad %v3float %973
        %975 = OpFMul %v3float %972 %974
        %976 = OpLoad %type_3d_image_0 %View_GlobalDistanceFieldPageAtlasTexture
        %977 = OpLoad %type_sampler %View_SharedTrilinearWrappedSampler
        %978 = OpSampledImage %type_sampled_image_0 %976 %977
        %979 = OpImageSampleExplicitLod %v4float %978 %975 Lod %float_0
        %980 = OpCompositeExtract %float %979 0
        %981 = OpFOrdLessThan %bool %980 %float_0_899999976
               OpSelectionMerge %982 None
               OpBranchConditional %981 %983 %982
        %983 = OpLabel
        %984 = OpFMul %float %float_0_5 %906
        %985 = OpCompositeConstruct %v3float %984 %float_0 %float_0
        %986 = OpFAdd %v3float %932 %985
        %987 = OpExtInst %v3float %1 Fract %986
        %988 = OpExtInst %v3float %1 FClamp %987 %103 %128
        %989 = OpVectorTimesScalar %v3float %988 %936
        %990 = OpFAdd %v3float %989 %942
        %991 = OpCompositeExtract %float %990 0
        %992 = OpCompositeExtract %float %990 1
        %993 = OpCompositeExtract %float %990 2
        %994 = OpConvertFToS %int %991
        %995 = OpConvertFToS %int %992
        %996 = OpConvertFToS %int %993
        %997 = OpCompositeConstruct %v4int %994 %995 %996 %int_0
        %998 = OpVectorShuffle %v3int %997 %997 0 1 2
        %999 = OpImageFetch %v4uint %952 %998 Lod %int_0
       %1000 = OpCompositeExtract %uint %999 0
       %1001 = OpBitwiseAnd %uint %1000 %uint_16777215
       %1002 = OpULessThan %bool %1000 %uint_4294967295
               OpSelectionMerge %1003 None
               OpBranchConditional %1002 %1004 %1003
       %1004 = OpLabel
       %1005 = OpBitwiseAnd %uint %1001 %uint_127
       %1006 = OpCompositeInsert %v3uint %1005 %541 0
       %1007 = OpShiftRightLogical %uint %1001 %uint_7
       %1008 = OpBitwiseAnd %uint %1007 %uint_127
       %1009 = OpCompositeInsert %v3uint %1008 %1006 1
       %1010 = OpShiftRightLogical %uint %1001 %uint_14
       %1011 = OpCompositeInsert %v3uint %1010 %1009 2
       %1012 = OpVectorTimesScalar %v3float %987 %936
       %1013 = OpExtInst %v3float %1 Fract %1012
       %1014 = OpIMul %v3uint %1011 %355
       %1015 = OpConvertUToF %v3float %1014
       %1016 = OpVectorTimesScalar %v3float %1013 %float_7
       %1017 = OpFAdd %v3float %1015 %1016
       %1018 = OpFAdd %v3float %1017 %138
       %1019 = OpFMul %v3float %1018 %974
       %1020 = OpSampledImage %type_sampled_image_0 %976 %977
       %1021 = OpImageSampleExplicitLod %v4float %1020 %1019 Lod %float_0
       %1022 = OpCompositeExtract %float %1021 0
               OpBranch %1003
       %1003 = OpLabel
       %1023 = OpPhi %float %float_1 %983 %1022 %1004
       %1024 = OpFMul %float %906 %float_n0_5
       %1025 = OpCompositeConstruct %v3float %1024 %float_0 %float_0
       %1026 = OpFAdd %v3float %932 %1025
       %1027 = OpExtInst %v3float %1 Fract %1026
       %1028 = OpExtInst %v3float %1 FClamp %1027 %103 %128
       %1029 = OpVectorTimesScalar %v3float %1028 %936
       %1030 = OpFAdd %v3float %1029 %942
       %1031 = OpCompositeExtract %float %1030 0
       %1032 = OpCompositeExtract %float %1030 1
       %1033 = OpCompositeExtract %float %1030 2
       %1034 = OpConvertFToS %int %1031
       %1035 = OpConvertFToS %int %1032
       %1036 = OpConvertFToS %int %1033
       %1037 = OpCompositeConstruct %v4int %1034 %1035 %1036 %int_0
       %1038 = OpVectorShuffle %v3int %1037 %1037 0 1 2
       %1039 = OpImageFetch %v4uint %952 %1038 Lod %int_0
       %1040 = OpCompositeExtract %uint %1039 0
       %1041 = OpBitwiseAnd %uint %1040 %uint_16777215
       %1042 = OpULessThan %bool %1040 %uint_4294967295
               OpSelectionMerge %1043 None
               OpBranchConditional %1042 %1044 %1043
       %1044 = OpLabel
       %1045 = OpBitwiseAnd %uint %1041 %uint_127
       %1046 = OpCompositeInsert %v3uint %1045 %541 0
       %1047 = OpShiftRightLogical %uint %1041 %uint_7
       %1048 = OpBitwiseAnd %uint %1047 %uint_127
       %1049 = OpCompositeInsert %v3uint %1048 %1046 1
       %1050 = OpShiftRightLogical %uint %1041 %uint_14
       %1051 = OpCompositeInsert %v3uint %1050 %1049 2
       %1052 = OpVectorTimesScalar %v3float %1027 %936
       %1053 = OpExtInst %v3float %1 Fract %1052
       %1054 = OpIMul %v3uint %1051 %355
       %1055 = OpConvertUToF %v3float %1054
       %1056 = OpVectorTimesScalar %v3float %1053 %float_7
       %1057 = OpFAdd %v3float %1055 %1056
       %1058 = OpFAdd %v3float %1057 %138
       %1059 = OpFMul %v3float %1058 %974
       %1060 = OpSampledImage %type_sampled_image_0 %976 %977
       %1061 = OpImageSampleExplicitLod %v4float %1060 %1059 Lod %float_0
       %1062 = OpCompositeExtract %float %1061 0
               OpBranch %1043
       %1043 = OpLabel
       %1063 = OpPhi %float %float_1 %1003 %1062 %1044
       %1064 = OpCompositeConstruct %v3float %float_0 %984 %float_0
       %1065 = OpFAdd %v3float %932 %1064
       %1066 = OpExtInst %v3float %1 Fract %1065
       %1067 = OpExtInst %v3float %1 FClamp %1066 %103 %128
       %1068 = OpVectorTimesScalar %v3float %1067 %936
       %1069 = OpFAdd %v3float %1068 %942
       %1070 = OpCompositeExtract %float %1069 0
       %1071 = OpCompositeExtract %float %1069 1
       %1072 = OpCompositeExtract %float %1069 2
       %1073 = OpConvertFToS %int %1070
       %1074 = OpConvertFToS %int %1071
       %1075 = OpConvertFToS %int %1072
       %1076 = OpCompositeConstruct %v4int %1073 %1074 %1075 %int_0
       %1077 = OpVectorShuffle %v3int %1076 %1076 0 1 2
       %1078 = OpImageFetch %v4uint %952 %1077 Lod %int_0
       %1079 = OpCompositeExtract %uint %1078 0
       %1080 = OpBitwiseAnd %uint %1079 %uint_16777215
       %1081 = OpULessThan %bool %1079 %uint_4294967295
               OpSelectionMerge %1082 None
               OpBranchConditional %1081 %1083 %1082
       %1083 = OpLabel
       %1084 = OpBitwiseAnd %uint %1080 %uint_127
       %1085 = OpCompositeInsert %v3uint %1084 %541 0
       %1086 = OpShiftRightLogical %uint %1080 %uint_7
       %1087 = OpBitwiseAnd %uint %1086 %uint_127
       %1088 = OpCompositeInsert %v3uint %1087 %1085 1
       %1089 = OpShiftRightLogical %uint %1080 %uint_14
       %1090 = OpCompositeInsert %v3uint %1089 %1088 2
       %1091 = OpVectorTimesScalar %v3float %1066 %936
       %1092 = OpExtInst %v3float %1 Fract %1091
       %1093 = OpIMul %v3uint %1090 %355
       %1094 = OpConvertUToF %v3float %1093
       %1095 = OpVectorTimesScalar %v3float %1092 %float_7
       %1096 = OpFAdd %v3float %1094 %1095
       %1097 = OpFAdd %v3float %1096 %138
       %1098 = OpFMul %v3float %1097 %974
       %1099 = OpSampledImage %type_sampled_image_0 %976 %977
       %1100 = OpImageSampleExplicitLod %v4float %1099 %1098 Lod %float_0
       %1101 = OpCompositeExtract %float %1100 0
               OpBranch %1082
       %1082 = OpLabel
       %1102 = OpPhi %float %float_1 %1043 %1101 %1083
       %1103 = OpCompositeConstruct %v3float %float_0 %1024 %float_0
       %1104 = OpFAdd %v3float %932 %1103
       %1105 = OpExtInst %v3float %1 Fract %1104
       %1106 = OpExtInst %v3float %1 FClamp %1105 %103 %128
       %1107 = OpVectorTimesScalar %v3float %1106 %936
       %1108 = OpFAdd %v3float %1107 %942
       %1109 = OpCompositeExtract %float %1108 0
       %1110 = OpCompositeExtract %float %1108 1
       %1111 = OpCompositeExtract %float %1108 2
       %1112 = OpConvertFToS %int %1109
       %1113 = OpConvertFToS %int %1110
       %1114 = OpConvertFToS %int %1111
       %1115 = OpCompositeConstruct %v4int %1112 %1113 %1114 %int_0
       %1116 = OpVectorShuffle %v3int %1115 %1115 0 1 2
       %1117 = OpImageFetch %v4uint %952 %1116 Lod %int_0
       %1118 = OpCompositeExtract %uint %1117 0
       %1119 = OpBitwiseAnd %uint %1118 %uint_16777215
       %1120 = OpULessThan %bool %1118 %uint_4294967295
               OpSelectionMerge %1121 None
               OpBranchConditional %1120 %1122 %1121
       %1122 = OpLabel
       %1123 = OpBitwiseAnd %uint %1119 %uint_127
       %1124 = OpCompositeInsert %v3uint %1123 %541 0
       %1125 = OpShiftRightLogical %uint %1119 %uint_7
       %1126 = OpBitwiseAnd %uint %1125 %uint_127
       %1127 = OpCompositeInsert %v3uint %1126 %1124 1
       %1128 = OpShiftRightLogical %uint %1119 %uint_14
       %1129 = OpCompositeInsert %v3uint %1128 %1127 2
       %1130 = OpVectorTimesScalar %v3float %1105 %936
       %1131 = OpExtInst %v3float %1 Fract %1130
       %1132 = OpIMul %v3uint %1129 %355
       %1133 = OpConvertUToF %v3float %1132
       %1134 = OpVectorTimesScalar %v3float %1131 %float_7
       %1135 = OpFAdd %v3float %1133 %1134
       %1136 = OpFAdd %v3float %1135 %138
       %1137 = OpFMul %v3float %1136 %974
       %1138 = OpSampledImage %type_sampled_image_0 %976 %977
       %1139 = OpImageSampleExplicitLod %v4float %1138 %1137 Lod %float_0
       %1140 = OpCompositeExtract %float %1139 0
               OpBranch %1121
       %1121 = OpLabel
       %1141 = OpPhi %float %float_1 %1082 %1140 %1122
       %1142 = OpFSub %float %1023 %1063
       %1143 = OpFSub %float %1102 %1141
       %1144 = OpCompositeConstruct %v3float %1142 %1143 %551
       %1145 = OpFMul %float %907 %float_16
       %1146 = OpFMul %float %float_128 %906
       %1147 = OpVectorTimesScalar %v3float %1144 %1145
       %1148 = OpFMul %float %904 %1146
       %1149 = OpCompositeConstruct %v3float %1148 %1148 %1148
       %1150 = OpFDiv %v3float %1147 %1149
               OpBranch %900
        %982 = OpLabel
               OpBranch %957
        %957 = OpLabel
       %1151 = OpPhi %v3uint %894 %925 %965 %982
               OpBranch %924
        %924 = OpLabel
        %895 = OpPhi %v3uint %894 %901 %1151 %957
               OpBranch %896
        %896 = OpLabel
        %898 = OpIAdd %uint %897 %uint_1
               OpBranch %893
        %900 = OpLabel
       %1152 = OpPhi %v3float %340 %893 %1150 %1121
       %1153 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_88 %int_2
       %1154 = OpLoad %float %1153
       %1155 = OpCompositeConstruct %v3float %1154 %1154 %1154
       %1156 = OpExtInst %v3float %1 Fma %1152 %1155 %647
       %1157 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_88 %int_3
       %1158 = OpLoad %float %1157
       %1159 = OpCompositeConstruct %v3float %1158 %1158 %1158
       %1160 = OpFMul %v3float %596 %1159
       %1161 = OpFMul %v3float %1156 %1159
       %1162 = OpAccessChain %_ptr_Uniform_float %View %uint_19
       %1163 = OpLoad %float %1162
       %1164 = OpCompositeExtract %float %766 2
       %1165 = OpCompositeExtract %float %766 3
       %1166 = OpExtInst %float %1 FMix %1163 %1164 %1165
       %1167 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_89 %int_1
       %1168 = OpLoad %float %1167
       %1169 = OpFMul %float %1166 %1168
       %1170 = OpCompositeConstruct %v2float %1169 %1169
       %1171 = OpFAdd %v2float %1170 %277
       %1172 = OpCompositeExtract %float %1160 0
       %1173 = OpCompositeExtract %float %1161 0
       %1174 = OpCompositeExtract %float %1160 1
       %1175 = OpCompositeExtract %float %1161 1
       %1176 = OpCompositeExtract %float %1171 0
       %1177 = OpCompositeConstruct %v3float %1172 %1174 %float_0
       %1178 = OpCompositeConstruct %v3float %1173 %1175 %1176
       %1179 = OpVectorTimesScalar %v3float %1178 %float_4_76837158en07
       %1180 = OpFAdd %v3float %1179 %138
       %1181 = OpFAdd %v3float %1177 %1180
       %1182 = OpExtInst %v3float %1 Floor %1181
       %1183 = OpFSub %v3float %1177 %1182
       %1184 = OpVectorTimesScalar %v3float %1183 %float_2097152
       %1185 = OpFAdd %v3float %1184 %1178
       %1186 = OpVectorTimesScalar %v3float %1185 %float_1
               OpBranch %1187
       %1187 = OpLabel
       %1188 = OpPhi %v3float %1186 %900 %1189 %1190
       %1191 = OpPhi %float %float_1 %900 %1192 %1190
       %1193 = OpPhi %float %float_0 %900 %1194 %1190
       %1195 = OpPhi %uint %uint_0 %900 %1196 %1190
       %1197 = OpULessThan %bool %1195 %uint_10
               OpLoopMerge %1198 %1190 DontUnroll
               OpBranchConditional %1197 %1190 %1198
       %1190 = OpLabel
       %1199 = OpExtInst %v3float %1 Fract %1188
       %1200 = OpExtInst %v3float %1 Floor %1188
       %1201 = OpDot %float %1200 %387
       %1202 = OpFAdd %float %1201 %float_19
       %1203 = OpFAdd %float %1201 %float_47
       %1204 = OpFAdd %float %1201 %float_66
       %1205 = OpFAdd %float %1201 %float_101
       %1206 = OpFAdd %float %1201 %float_120
       %1207 = OpFAdd %float %1201 %float_148
       %1208 = OpFAdd %float %1201 %float_167
       %1209 = OpConvertFToS %int %1201
       %1210 = OpCompositeConstruct %v3int %1209 %int_0 %int_0
       %1211 = OpBitcast %v3uint %1210
       %1212 = OpIMul %v3uint %1211 %403
       %1213 = OpIAdd %v3uint %1212 %405
       %1214 = OpCompositeExtract %uint %1213 1
       %1215 = OpCompositeExtract %uint %1213 2
       %1216 = OpIMul %uint %1214 %1215
       %1217 = OpCompositeExtract %uint %1213 0
       %1218 = OpIAdd %uint %1217 %1216
       %1219 = OpIMul %uint %1215 %1218
       %1220 = OpIAdd %uint %1214 %1219
       %1221 = OpIMul %uint %1218 %1220
       %1222 = OpIAdd %uint %1215 %1221
       %1223 = OpIMul %uint %1220 %1222
       %1224 = OpIAdd %uint %1218 %1223
       %1225 = OpCompositeInsert %v3uint %1224 %552 0
       %1226 = OpBitwiseAnd %v3uint %406 %407
       %1227 = OpShiftRightLogical %v3uint %1225 %1226
       %1228 = OpCompositeExtract %uint %1227 0
       %1229 = OpCompositeConstruct %v3uint %1228 %1228 %1228
       %1230 = OpBitwiseAnd %v3uint %1229 %388
       %1231 = OpConvertUToF %v3float %1230
       %1232 = OpExtInst %v3float %1 Fma %1231 %392 %280
       %1233 = OpDot %float %1232 %1199
       %1234 = OpConvertFToS %int %1202
       %1235 = OpFSub %v3float %1199 %352
       %1236 = OpCompositeConstruct %v3int %1234 %int_0 %int_0
       %1237 = OpBitcast %v3uint %1236
       %1238 = OpIMul %v3uint %1237 %403
       %1239 = OpIAdd %v3uint %1238 %405
       %1240 = OpCompositeExtract %uint %1239 1
       %1241 = OpCompositeExtract %uint %1239 2
       %1242 = OpIMul %uint %1240 %1241
       %1243 = OpCompositeExtract %uint %1239 0
       %1244 = OpIAdd %uint %1243 %1242
       %1245 = OpIMul %uint %1241 %1244
       %1246 = OpIAdd %uint %1240 %1245
       %1247 = OpIMul %uint %1244 %1246
       %1248 = OpIAdd %uint %1241 %1247
       %1249 = OpIMul %uint %1246 %1248
       %1250 = OpIAdd %uint %1244 %1249
       %1251 = OpCompositeInsert %v3uint %1250 %552 0
       %1252 = OpShiftRightLogical %v3uint %1251 %1226
       %1253 = OpCompositeExtract %uint %1252 0
       %1254 = OpCompositeConstruct %v3uint %1253 %1253 %1253
       %1255 = OpBitwiseAnd %v3uint %1254 %388
       %1256 = OpConvertUToF %v3float %1255
       %1257 = OpExtInst %v3float %1 Fma %1256 %392 %280
       %1258 = OpDot %float %1257 %1235
       %1259 = OpConvertFToS %int %1203
       %1260 = OpFSub %v3float %1199 %353
       %1261 = OpCompositeConstruct %v3int %1259 %int_0 %int_0
       %1262 = OpBitcast %v3uint %1261
       %1263 = OpIMul %v3uint %1262 %403
       %1264 = OpIAdd %v3uint %1263 %405
       %1265 = OpCompositeExtract %uint %1264 1
       %1266 = OpCompositeExtract %uint %1264 2
       %1267 = OpIMul %uint %1265 %1266
       %1268 = OpCompositeExtract %uint %1264 0
       %1269 = OpIAdd %uint %1268 %1267
       %1270 = OpIMul %uint %1266 %1269
       %1271 = OpIAdd %uint %1265 %1270
       %1272 = OpIMul %uint %1269 %1271
       %1273 = OpIAdd %uint %1266 %1272
       %1274 = OpIMul %uint %1271 %1273
       %1275 = OpIAdd %uint %1269 %1274
       %1276 = OpCompositeInsert %v3uint %1275 %552 0
       %1277 = OpShiftRightLogical %v3uint %1276 %1226
       %1278 = OpCompositeExtract %uint %1277 0
       %1279 = OpCompositeConstruct %v3uint %1278 %1278 %1278
       %1280 = OpBitwiseAnd %v3uint %1279 %388
       %1281 = OpConvertUToF %v3float %1280
       %1282 = OpExtInst %v3float %1 Fma %1281 %392 %280
       %1283 = OpDot %float %1282 %1260
       %1284 = OpConvertFToS %int %1204
       %1285 = OpFSub %v3float %1199 %135
       %1286 = OpCompositeConstruct %v3int %1284 %int_0 %int_0
       %1287 = OpBitcast %v3uint %1286
       %1288 = OpIMul %v3uint %1287 %403
       %1289 = OpIAdd %v3uint %1288 %405
       %1290 = OpCompositeExtract %uint %1289 1
       %1291 = OpCompositeExtract %uint %1289 2
       %1292 = OpIMul %uint %1290 %1291
       %1293 = OpCompositeExtract %uint %1289 0
       %1294 = OpIAdd %uint %1293 %1292
       %1295 = OpIMul %uint %1291 %1294
       %1296 = OpIAdd %uint %1290 %1295
       %1297 = OpIMul %uint %1294 %1296
       %1298 = OpIAdd %uint %1291 %1297
       %1299 = OpIMul %uint %1296 %1298
       %1300 = OpIAdd %uint %1294 %1299
       %1301 = OpCompositeInsert %v3uint %1300 %552 0
       %1302 = OpShiftRightLogical %v3uint %1301 %1226
       %1303 = OpCompositeExtract %uint %1302 0
       %1304 = OpCompositeConstruct %v3uint %1303 %1303 %1303
       %1305 = OpBitwiseAnd %v3uint %1304 %388
       %1306 = OpConvertUToF %v3float %1305
       %1307 = OpExtInst %v3float %1 Fma %1306 %392 %280
       %1308 = OpDot %float %1307 %1285
       %1309 = OpConvertFToS %int %1205
       %1310 = OpFSub %v3float %1199 %292
       %1311 = OpCompositeConstruct %v3int %1309 %int_0 %int_0
       %1312 = OpBitcast %v3uint %1311
       %1313 = OpIMul %v3uint %1312 %403
       %1314 = OpIAdd %v3uint %1313 %405
       %1315 = OpCompositeExtract %uint %1314 1
       %1316 = OpCompositeExtract %uint %1314 2
       %1317 = OpIMul %uint %1315 %1316
       %1318 = OpCompositeExtract %uint %1314 0
       %1319 = OpIAdd %uint %1318 %1317
       %1320 = OpIMul %uint %1316 %1319
       %1321 = OpIAdd %uint %1315 %1320
       %1322 = OpIMul %uint %1319 %1321
       %1323 = OpIAdd %uint %1316 %1322
       %1324 = OpIMul %uint %1321 %1323
       %1325 = OpIAdd %uint %1319 %1324
       %1326 = OpCompositeInsert %v3uint %1325 %552 0
       %1327 = OpShiftRightLogical %v3uint %1326 %1226
       %1328 = OpCompositeExtract %uint %1327 0
       %1329 = OpCompositeConstruct %v3uint %1328 %1328 %1328
       %1330 = OpBitwiseAnd %v3uint %1329 %388
       %1331 = OpConvertUToF %v3float %1330
       %1332 = OpExtInst %v3float %1 Fma %1331 %392 %280
       %1333 = OpDot %float %1332 %1310
       %1334 = OpConvertFToS %int %1206
       %1335 = OpFSub %v3float %1199 %141
       %1336 = OpCompositeConstruct %v3int %1334 %int_0 %int_0
       %1337 = OpBitcast %v3uint %1336
       %1338 = OpIMul %v3uint %1337 %403
       %1339 = OpIAdd %v3uint %1338 %405
       %1340 = OpCompositeExtract %uint %1339 1
       %1341 = OpCompositeExtract %uint %1339 2
       %1342 = OpIMul %uint %1340 %1341
       %1343 = OpCompositeExtract %uint %1339 0
       %1344 = OpIAdd %uint %1343 %1342
       %1345 = OpIMul %uint %1341 %1344
       %1346 = OpIAdd %uint %1340 %1345
       %1347 = OpIMul %uint %1344 %1346
       %1348 = OpIAdd %uint %1341 %1347
       %1349 = OpIMul %uint %1346 %1348
       %1350 = OpIAdd %uint %1344 %1349
       %1351 = OpCompositeInsert %v3uint %1350 %552 0
       %1352 = OpShiftRightLogical %v3uint %1351 %1226
       %1353 = OpCompositeExtract %uint %1352 0
       %1354 = OpCompositeConstruct %v3uint %1353 %1353 %1353
       %1355 = OpBitwiseAnd %v3uint %1354 %388
       %1356 = OpConvertUToF %v3float %1355
       %1357 = OpExtInst %v3float %1 Fma %1356 %392 %280
       %1358 = OpDot %float %1357 %1335
       %1359 = OpConvertFToS %int %1207
       %1360 = OpFSub %v3float %1199 %136
       %1361 = OpCompositeConstruct %v3int %1359 %int_0 %int_0
       %1362 = OpBitcast %v3uint %1361
       %1363 = OpIMul %v3uint %1362 %403
       %1364 = OpIAdd %v3uint %1363 %405
       %1365 = OpCompositeExtract %uint %1364 1
       %1366 = OpCompositeExtract %uint %1364 2
       %1367 = OpIMul %uint %1365 %1366
       %1368 = OpCompositeExtract %uint %1364 0
       %1369 = OpIAdd %uint %1368 %1367
       %1370 = OpIMul %uint %1366 %1369
       %1371 = OpIAdd %uint %1365 %1370
       %1372 = OpIMul %uint %1369 %1371
       %1373 = OpIAdd %uint %1366 %1372
       %1374 = OpIMul %uint %1371 %1373
       %1375 = OpIAdd %uint %1369 %1374
       %1376 = OpCompositeInsert %v3uint %1375 %552 0
       %1377 = OpShiftRightLogical %v3uint %1376 %1226
       %1378 = OpCompositeExtract %uint %1377 0
       %1379 = OpCompositeConstruct %v3uint %1378 %1378 %1378
       %1380 = OpBitwiseAnd %v3uint %1379 %388
       %1381 = OpConvertUToF %v3float %1380
       %1382 = OpExtInst %v3float %1 Fma %1381 %392 %280
       %1383 = OpDot %float %1382 %1360
       %1384 = OpConvertFToS %int %1208
       %1385 = OpFSub %v3float %1199 %128
       %1386 = OpCompositeConstruct %v3int %1384 %int_0 %int_0
       %1387 = OpBitcast %v3uint %1386
       %1388 = OpIMul %v3uint %1387 %403
       %1389 = OpIAdd %v3uint %1388 %405
       %1390 = OpCompositeExtract %uint %1389 1
       %1391 = OpCompositeExtract %uint %1389 2
       %1392 = OpIMul %uint %1390 %1391
       %1393 = OpCompositeExtract %uint %1389 0
       %1394 = OpIAdd %uint %1393 %1392
       %1395 = OpIMul %uint %1391 %1394
       %1396 = OpIAdd %uint %1390 %1395
       %1397 = OpIMul %uint %1394 %1396
       %1398 = OpIAdd %uint %1391 %1397
       %1399 = OpIMul %uint %1396 %1398
       %1400 = OpIAdd %uint %1394 %1399
       %1401 = OpCompositeInsert %v3uint %1400 %552 0
       %1402 = OpShiftRightLogical %v3uint %1401 %1226
       %1403 = OpCompositeExtract %uint %1402 0
       %1404 = OpCompositeConstruct %v3uint %1403 %1403 %1403
       %1405 = OpBitwiseAnd %v3uint %1404 %388
       %1406 = OpConvertUToF %v3float %1405
       %1407 = OpExtInst %v3float %1 Fma %1406 %392 %280
       %1408 = OpDot %float %1407 %1385
       %1409 = OpCompositeExtract %float %1199 0
       %1410 = OpCompositeExtract %float %1199 1
       %1411 = OpCompositeExtract %float %1199 2
       %1412 = OpCompositeConstruct %v4float %1409 %1410 %1411 %float_0
       %1413 = OpFMul %v4float %1412 %1412
       %1414 = OpFMul %v4float %1413 %1412
       %1415 = OpVectorTimesScalar %v4float %1412 %float_6
       %1416 = OpFSub %v4float %1415 %383
       %1417 = OpExtInst %v4float %1 Fma %1412 %1416 %384
       %1418 = OpFMul %v4float %1414 %1417
       %1419 = OpCompositeExtract %float %1418 0
       %1420 = OpExtInst %float %1 FMix %1233 %1258 %1419
       %1421 = OpExtInst %float %1 FMix %1283 %1308 %1419
       %1422 = OpCompositeExtract %float %1418 1
       %1423 = OpExtInst %float %1 FMix %1420 %1421 %1422
       %1424 = OpExtInst %float %1 FMix %1333 %1358 %1419
       %1425 = OpExtInst %float %1 FMix %1383 %1408 %1419
       %1426 = OpExtInst %float %1 FMix %1424 %1425 %1422
       %1427 = OpCompositeExtract %float %1418 2
       %1428 = OpExtInst %float %1 FMix %1423 %1426 %1427
       %1429 = OpExtInst %float %1 FAbs %1428
       %1194 = OpExtInst %float %1 Fma %1429 %1191 %1193
       %1189 = OpVectorTimesScalar %v3float %1188 %float_2
       %1192 = OpFMul %float %1191 %float_0_5
       %1196 = OpIAdd %uint %1195 %uint_1
               OpBranch %1187
       %1198 = OpLabel
       %1430 = OpExtInst %float %1 FMix %float_0 %float_1 %1193
       %1431 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_89 %int_2
       %1432 = OpLoad %float %1431
       %1433 = OpFNegate %float %892
       %1434 = OpExtInst %float %1 Fma %1433 %1432 %1430
       %1435 = OpExtInst %float %1 Fma %892 %1432 %float_1
       %1436 = OpExtInst %float %1 Fma %1433 %1432 %1435
       %1437 = OpFDiv %float %1434 %1436
       %1438 = OpExtInst %float %1 Fma %1437 %float_n1 %float_1
       %1439 = OpExtInst %float %1 FClamp %1438 %float_0 %float_1
       %1440 = OpFOrdLessThanEqual %bool %1439 %float_0
       %1441 = OpExtInst %float %1 Pow %1439 %float_2
       %1442 = OpSelect %float %1440 %float_0 %1441
       %1443 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_0
       %1444 = OpLoad %float %1443
       %1445 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_89 %int_3
       %1446 = OpLoad %float %1445
       %1447 = OpExtInst %float %1 FMix %1444 %1446 %1442
       %1448 = OpExtInst %float %1 FClamp %1447 %float_0 %float_1
       %1449 = OpFMul %float %892 %1448
       %1450 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_1
       %1451 = OpLoad %float %1450
       %1452 = OpCompositeConstruct %v3float %1451 %1451 %1451
       %1453 = OpFMul %v3float %596 %1452
       %1454 = OpFMul %v3float %647 %1452
       %1455 = OpVectorTimesScalar %v3float %1454 %float_4_76837158en07
       %1456 = OpFAdd %v3float %1455 %138
       %1457 = OpExtInst %v3float %1 Fma %596 %1452 %1456
       %1458 = OpExtInst %v3float %1 Floor %1457
       %1459 = OpFNegate %v3float %1458
       %1460 = OpExtInst %v3float %1 Fma %596 %1452 %1459
       %1461 = OpVectorTimesScalar %v3float %1460 %float_2097152
       %1462 = OpExtInst %v3float %1 Fma %647 %1452 %1461
       %1463 = OpVectorTimesScalar %v3float %1462 %float_1
               OpBranch %1464
       %1464 = OpLabel
       %1465 = OpPhi %v3float %543 %1198 %1466 %1467
       %1468 = OpPhi %v3float %1463 %1198 %1469 %1467
       %1470 = OpPhi %float %float_1 %1198 %1471 %1467
       %1472 = OpPhi %float %float_0 %1198 %1473 %1467
       %1474 = OpPhi %uint %uint_0 %1198 %1475 %1467
       %1476 = OpULessThan %bool %1474 %uint_1
               OpLoopMerge %1477 %1467 DontUnroll
               OpBranchConditional %1476 %1478 %1477
       %1478 = OpLabel
       %1479 = OpExtInst %v3float %1 Fract %1468
       %1480 = OpExtInst %v3float %1 Floor %1468
       %1481 = OpCompositeInsert %v3float %float_0 %1465 0
               OpBranch %1482
       %1482 = OpLabel
       %1483 = OpPhi %v4float %354 %1478 %1484 %1485
       %1466 = OpPhi %v3float %1481 %1478 %1486 %1485
       %1487 = OpCompositeExtract %float %1466 0
       %1488 = OpFOrdLessThanEqual %bool %1487 %float_1
               OpLoopMerge %1489 %1485 None
               OpBranchConditional %1488 %1490 %1489
       %1490 = OpLabel
       %1491 = OpCompositeInsert %v3float %float_0 %1466 1
               OpBranch %1492
       %1492 = OpLabel
       %1493 = OpPhi %v3float %1491 %1490 %1494 %1495
       %1484 = OpPhi %v4float %1483 %1490 %1496 %1495
       %1497 = OpCompositeExtract %float %1493 1
       %1498 = OpFOrdLessThanEqual %bool %1497 %float_1
               OpLoopMerge %1499 %1495 None
               OpBranchConditional %1498 %1500 %1499
       %1500 = OpLabel
       %1501 = OpCompositeInsert %v3float %float_0 %1493 2
               OpBranch %1502
       %1502 = OpLabel
       %1496 = OpPhi %v4float %1484 %1500 %1503 %1504
       %1505 = OpPhi %v3float %1501 %1500 %1506 %1504
       %1507 = OpCompositeExtract %float %1505 2
       %1508 = OpFOrdLessThanEqual %bool %1507 %float_1
               OpLoopMerge %1509 %1504 None
               OpBranchConditional %1508 %1504 %1509
       %1504 = OpLabel
       %1510 = OpFAdd %v3float %1480 %1505
       %1511 = OpVectorShuffle %v3float %540 %1510 3 4 5
       %1512 = OpConvertFToS %v3int %1511
       %1513 = OpBitcast %v3uint %1512
       %1514 = OpIMul %v3uint %1513 %403
       %1515 = OpIAdd %v3uint %1514 %405
       %1516 = OpCompositeExtract %uint %1515 1
       %1517 = OpCompositeExtract %uint %1515 2
       %1518 = OpIMul %uint %1516 %1517
       %1519 = OpCompositeExtract %uint %1515 0
       %1520 = OpIAdd %uint %1519 %1518
       %1521 = OpIMul %uint %1517 %1520
       %1522 = OpIAdd %uint %1516 %1521
       %1523 = OpIMul %uint %1520 %1522
       %1524 = OpIAdd %uint %1517 %1523
       %1525 = OpIMul %uint %1522 %1524
       %1526 = OpIAdd %uint %1520 %1525
       %1527 = OpCompositeInsert %v3uint %1526 %1515 0
       %1528 = OpIMul %uint %1524 %1526
       %1529 = OpIAdd %uint %1522 %1528
       %1530 = OpCompositeInsert %v3uint %1529 %1527 1
       %1531 = OpIMul %uint %1526 %1529
       %1532 = OpIAdd %uint %1524 %1531
       %1533 = OpCompositeInsert %v3uint %1532 %1530 2
       %1534 = OpBitwiseAnd %v3uint %406 %407
       %1535 = OpShiftRightLogical %v3uint %1533 %1534
       %1536 = OpConvertUToF %v3float %1535
       %1537 = OpExtInst %v3float %1 Fma %1536 %524 %513
       %1538 = OpExtInst %v3float %1 Normalize %1537
       %1539 = OpVectorTimesScalar %v3float %1538 %float_0_2588
       %1540 = OpFAdd %v3float %1505 %1539
       %1541 = OpFSub %v3float %1479 %1540
       %1542 = OpCompositeExtract %float %1496 3
       %1543 = OpDot %float %1541 %1541
       %1544 = OpExtInst %float %1 NMin %1542 %1543
       %1503 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %1544
       %1545 = OpFAdd %float %1507 %float_1
       %1506 = OpCompositeInsert %v3float %1545 %1505 2
               OpBranch %1502
       %1509 = OpLabel
               OpBranch %1495
       %1495 = OpLabel
       %1546 = OpCompositeExtract %float %1505 1
       %1547 = OpFAdd %float %1546 %float_1
       %1494 = OpCompositeInsert %v3float %1547 %1505 1
               OpBranch %1492
       %1499 = OpLabel
               OpBranch %1485
       %1485 = OpLabel
       %1548 = OpCompositeExtract %float %1493 0
       %1549 = OpFAdd %float %1548 %float_1
       %1486 = OpCompositeInsert %v3float %1549 %1493 0
               OpBranch %1482
       %1489 = OpLabel
       %1550 = OpCompositeExtract %float %1483 3
       %1551 = OpExtInst %float %1 Sqrt %1550
       %1552 = OpExtInst %float %1 Fma %1551 %float_2 %float_n1
       %1553 = OpExtInst %float %1 FAbs %1552
       %1473 = OpExtInst %float %1 Fma %1553 %1470 %1472
       %1469 = OpVectorTimesScalar %v3float %1468 %float_2
       %1471 = OpFMul %float %1470 %float_0_5
               OpBranch %1467
       %1467 = OpLabel
       %1475 = OpIAdd %uint %1474 %uint_1
               OpBranch %1464
       %1477 = OpLabel
       %1554 = OpExtInst %float %1 FMix %float_n1 %float_1 %1472
       %1555 = OpExtInst %float %1 FClamp %1554 %float_0 %float_1
       %1556 = OpFMul %v3float %1454 %279
       %1557 = OpVectorTimesScalar %v3float %1556 %float_4_76837158en07
       %1558 = OpFAdd %v3float %1557 %138
       %1559 = OpExtInst %v3float %1 Fma %1453 %279 %1558
       %1560 = OpExtInst %v3float %1 Floor %1559
       %1561 = OpFNegate %v3float %1560
       %1562 = OpExtInst %v3float %1 Fma %1453 %279 %1561
       %1563 = OpVectorTimesScalar %v3float %1562 %float_2097152
       %1564 = OpExtInst %v3float %1 Fma %1454 %279 %1563
       %1565 = OpVectorTimesScalar %v3float %1564 %float_1
               OpBranch %1566
       %1566 = OpLabel
       %1567 = OpPhi %v3float %543 %1477 %1568 %1569
       %1570 = OpPhi %v3float %1565 %1477 %1571 %1569
       %1572 = OpPhi %float %float_1 %1477 %1573 %1569
       %1574 = OpPhi %float %float_0 %1477 %1575 %1569
       %1576 = OpPhi %uint %uint_0 %1477 %1577 %1569
       %1578 = OpULessThan %bool %1576 %uint_1
               OpLoopMerge %1579 %1569 DontUnroll
               OpBranchConditional %1578 %1580 %1579
       %1580 = OpLabel
       %1581 = OpExtInst %v3float %1 Fract %1570
       %1582 = OpExtInst %v3float %1 Floor %1570
       %1583 = OpCompositeInsert %v3float %float_0 %1567 0
               OpBranch %1584
       %1584 = OpLabel
       %1585 = OpPhi %v4float %354 %1580 %1586 %1587
       %1568 = OpPhi %v3float %1583 %1580 %1588 %1587
       %1589 = OpCompositeExtract %float %1568 0
       %1590 = OpFOrdLessThanEqual %bool %1589 %float_1
               OpLoopMerge %1591 %1587 None
               OpBranchConditional %1590 %1592 %1591
       %1592 = OpLabel
       %1593 = OpCompositeInsert %v3float %float_0 %1568 1
               OpBranch %1594
       %1594 = OpLabel
       %1595 = OpPhi %v3float %1593 %1592 %1596 %1597
       %1586 = OpPhi %v4float %1585 %1592 %1598 %1597
       %1599 = OpCompositeExtract %float %1595 1
       %1600 = OpFOrdLessThanEqual %bool %1599 %float_1
               OpLoopMerge %1601 %1597 None
               OpBranchConditional %1600 %1602 %1601
       %1602 = OpLabel
       %1603 = OpCompositeInsert %v3float %float_0 %1595 2
               OpBranch %1604
       %1604 = OpLabel
       %1598 = OpPhi %v4float %1586 %1602 %1605 %1606
       %1607 = OpPhi %v3float %1603 %1602 %1608 %1606
       %1609 = OpCompositeExtract %float %1607 2
       %1610 = OpFOrdLessThanEqual %bool %1609 %float_1
               OpLoopMerge %1611 %1606 None
               OpBranchConditional %1610 %1606 %1611
       %1606 = OpLabel
       %1612 = OpFAdd %v3float %1582 %1607
       %1613 = OpVectorShuffle %v3float %540 %1612 3 4 5
       %1614 = OpConvertFToS %v3int %1613
       %1615 = OpBitcast %v3uint %1614
       %1616 = OpIMul %v3uint %1615 %403
       %1617 = OpIAdd %v3uint %1616 %405
       %1618 = OpCompositeExtract %uint %1617 1
       %1619 = OpCompositeExtract %uint %1617 2
       %1620 = OpIMul %uint %1618 %1619
       %1621 = OpCompositeExtract %uint %1617 0
       %1622 = OpIAdd %uint %1621 %1620
       %1623 = OpIMul %uint %1619 %1622
       %1624 = OpIAdd %uint %1618 %1623
       %1625 = OpIMul %uint %1622 %1624
       %1626 = OpIAdd %uint %1619 %1625
       %1627 = OpIMul %uint %1624 %1626
       %1628 = OpIAdd %uint %1622 %1627
       %1629 = OpCompositeInsert %v3uint %1628 %1617 0
       %1630 = OpIMul %uint %1626 %1628
       %1631 = OpIAdd %uint %1624 %1630
       %1632 = OpCompositeInsert %v3uint %1631 %1629 1
       %1633 = OpIMul %uint %1628 %1631
       %1634 = OpIAdd %uint %1626 %1633
       %1635 = OpCompositeInsert %v3uint %1634 %1632 2
       %1636 = OpBitwiseAnd %v3uint %406 %407
       %1637 = OpShiftRightLogical %v3uint %1635 %1636
       %1638 = OpConvertUToF %v3float %1637
       %1639 = OpExtInst %v3float %1 Fma %1638 %524 %513
       %1640 = OpExtInst %v3float %1 Normalize %1639
       %1641 = OpVectorTimesScalar %v3float %1640 %float_0_2588
       %1642 = OpFAdd %v3float %1607 %1641
       %1643 = OpFSub %v3float %1581 %1642
       %1644 = OpCompositeExtract %float %1598 3
       %1645 = OpDot %float %1643 %1643
       %1646 = OpExtInst %float %1 NMin %1644 %1645
       %1605 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %1646
       %1647 = OpFAdd %float %1609 %float_1
       %1608 = OpCompositeInsert %v3float %1647 %1607 2
               OpBranch %1604
       %1611 = OpLabel
               OpBranch %1597
       %1597 = OpLabel
       %1648 = OpCompositeExtract %float %1607 1
       %1649 = OpFAdd %float %1648 %float_1
       %1596 = OpCompositeInsert %v3float %1649 %1607 1
               OpBranch %1594
       %1601 = OpLabel
               OpBranch %1587
       %1587 = OpLabel
       %1650 = OpCompositeExtract %float %1595 0
       %1651 = OpFAdd %float %1650 %float_1
       %1588 = OpCompositeInsert %v3float %1651 %1595 0
               OpBranch %1584
       %1591 = OpLabel
       %1652 = OpCompositeExtract %float %1585 3
       %1653 = OpExtInst %float %1 Sqrt %1652
       %1654 = OpExtInst %float %1 Fma %1653 %float_2 %float_n1
       %1655 = OpExtInst %float %1 FAbs %1654
       %1575 = OpExtInst %float %1 Fma %1655 %1572 %1574
       %1571 = OpVectorTimesScalar %v3float %1570 %float_2
       %1573 = OpFMul %float %1572 %float_0_5
               OpBranch %1569
       %1569 = OpLabel
       %1577 = OpIAdd %uint %1576 %uint_1
               OpBranch %1566
       %1579 = OpLabel
       %1656 = OpExtInst %float %1 FMix %float_n1 %float_1 %1574
       %1657 = OpExtInst %float %1 FClamp %1656 %float_0 %float_1
       %1658 = OpFAdd %float %1555 %1657
       %1659 = OpFNegate %float %1658
       %1660 = OpExtInst %float %1 Fma %892 %1448 %1659
       %1661 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_2
       %1662 = OpLoad %float %1661
       %1663 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_0
       %1664 = OpLoad %float %1663
       %1665 = OpFSub %float %1664 %float_n1
       %1666 = OpExtInst %float %1 FAbs %1665
       %1667 = OpFOrdGreaterThan %bool %1666 %float_9_99999975en06
       %1668 = OpFOrdGreaterThanEqual %bool %1664 %float_n1
       %1669 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_1
       %1670 = OpLoad %float %1669
       %1671 = OpSelect %float %1668 %1664 %1670
       %1672 = OpSelect %float %1667 %1671 %1664
       %1673 = OpFSub %float %1672 %float_1
       %1674 = OpExtInst %float %1 FAbs %1673
       %1675 = OpFOrdGreaterThan %bool %1674 %float_9_99999975en06
       %1676 = OpFOrdGreaterThanEqual %bool %1672 %float_1
       %1677 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_2
       %1678 = OpLoad %float %1677
       %1679 = OpSelect %float %1676 %1678 %1664
       %1680 = OpSelect %float %1675 %1679 %1664
       %1681 = OpExtInst %float %1 FAbs %1680
       %1682 = OpFOrdGreaterThan %bool %1681 %float_9_99999975en06
       %1683 = OpFOrdGreaterThanEqual %bool %1680 %float_0
       %1684 = OpSelect %float %1683 %float_1 %float_n1
       %1685 = OpSelect %float %1682 %1684 %float_1
       %1686 = OpExtInst %float %1 NMax %1685 %float_n1
       %1687 = OpExtInst %float %1 NMin %1686 %float_1
       %1688 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_4 %int_3
       %1689 = OpLoad %float %1688
       %1690 = OpCompositeConstruct %v3float %1687 %1689 %float_0
       %1691 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_6
       %1692 = OpLoad %v4float %1691
       %1693 = OpVectorShuffle %v3float %1692 %1692 0 1 2
       %1694 = OpFAdd %v3float %1690 %1693
       %1695 = OpExtInst %v3float %1 NMax %1694 %280
       %1696 = OpExtInst %v3float %1 NMin %1695 %128
       %1697 = OpCompositeExtract %float %596 0
       %1698 = OpCompositeExtract %float %647 0
       %1699 = OpCompositeExtract %float %596 1
       %1700 = OpCompositeExtract %float %647 1
       %1701 = OpCompositeConstruct %v2float %1697 %1699
       %1702 = OpCompositeConstruct %v2float %1698 %1700
       %1703 = OpCompositeExtract %float %1696 0
       %1704 = OpCompositeExtract %float %1696 1
       %1705 = OpCompositeConstruct %v2float %1703 %1704
       %1706 = OpFMul %v2float %1701 %1705
       %1707 = OpFMul %v2float %1705 %1702
       %1708 = OpCompositeExtract %float %1706 0
       %1709 = OpCompositeExtract %float %1707 0
       %1710 = OpCompositeExtract %float %1706 1
       %1711 = OpCompositeExtract %float %1707 1
       %1712 = OpFAdd %float %1708 %1710
       %1713 = OpFAdd %float %1709 %1711
       %1714 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_9 %int_0
       %1715 = OpLoad %float %1714
       %1716 = OpFMul %float %1712 %1715
       %1717 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_9 %int_2
       %1718 = OpLoad %float %1717
       %1719 = OpFSub %float %1166 %1718
       %1720 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_9 %int_3
       %1721 = OpLoad %float %1720
       %1722 = OpCompositeConstruct %v3float %1721 %1721 %1721
       %1723 = OpFMul %v3float %596 %1722
       %1724 = OpFMul %v3float %1722 %647
       %1725 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_10 %int_0
       %1726 = OpLoad %float %1725
       %1727 = OpCompositeConstruct %v3float %1726 %1726 %1726
       %1728 = OpFMul %v3float %1723 %1727
       %1729 = OpFMul %v3float %1724 %1727
       %1730 = OpCompositeExtract %float %766 1
       %1731 = OpCompositeConstruct %v3float %1730 %1730 %1730
       %1732 = OpFMul %v3float %1728 %1731
       %1733 = OpFMul %v3float %1729 %1731
       %1734 = OpFMul %v3float %1733 %282
       %1735 = OpCompositeExtract %float %1734 0
       %1736 = OpCompositeExtract %float %1734 1
       %1737 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_10 %int_2
       %1738 = OpLoad %float %1737
       %1739 = OpFMul %float %1166 %1738
       %1740 = OpCompositeExtract %float %1734 2
       %1741 = OpCompositeConstruct %v2float %1739 %1739
       %1742 = OpCompositeConstruct %v2float %1740 %1740
       %1743 = OpFAdd %v2float %1741 %1742
       %1744 = OpCompositeExtract %float %1743 0
       %1745 = OpCompositeConstruct %v3float %1735 %1736 %1744
       %1746 = OpVectorTimesScalar %v3float %1745 %float_4_76837158en07
       %1747 = OpFAdd %v3float %1746 %138
       %1748 = OpExtInst %v3float %1 Fma %1732 %282 %1747
       %1749 = OpExtInst %v3float %1 Floor %1748
       %1750 = OpFNegate %v3float %1749
       %1751 = OpExtInst %v3float %1 Fma %1732 %282 %1750
       %1752 = OpVectorTimesScalar %v3float %1751 %float_2097152
       %1753 = OpFAdd %v3float %1752 %1745
       %1754 = OpVectorTimesScalar %v3float %1753 %float_1
               OpBranch %1755
       %1755 = OpLabel
       %1756 = OpPhi %v3float %1754 %1579 %1757 %1758
       %1759 = OpPhi %float %float_1 %1579 %1760 %1758
       %1761 = OpPhi %float %float_0 %1579 %1762 %1758
       %1763 = OpPhi %uint %uint_0 %1579 %1764 %1758
       %1765 = OpULessThan %bool %1763 %uint_6
               OpLoopMerge %1766 %1758 DontUnroll
               OpBranchConditional %1765 %1758 %1766
       %1758 = OpLabel
       %1767 = OpExtInst %v3float %1 Fract %1756
       %1768 = OpExtInst %v3float %1 Floor %1756
       %1769 = OpDot %float %1768 %387
       %1770 = OpFAdd %float %1769 %float_19
       %1771 = OpFAdd %float %1769 %float_47
       %1772 = OpFAdd %float %1769 %float_66
       %1773 = OpFAdd %float %1769 %float_101
       %1774 = OpFAdd %float %1769 %float_120
       %1775 = OpFAdd %float %1769 %float_148
       %1776 = OpFAdd %float %1769 %float_167
       %1777 = OpConvertFToS %int %1769
       %1778 = OpCompositeConstruct %v3int %1777 %int_0 %int_0
       %1779 = OpBitcast %v3uint %1778
       %1780 = OpIMul %v3uint %1779 %403
       %1781 = OpIAdd %v3uint %1780 %405
       %1782 = OpCompositeExtract %uint %1781 1
       %1783 = OpCompositeExtract %uint %1781 2
       %1784 = OpIMul %uint %1782 %1783
       %1785 = OpCompositeExtract %uint %1781 0
       %1786 = OpIAdd %uint %1785 %1784
       %1787 = OpIMul %uint %1783 %1786
       %1788 = OpIAdd %uint %1782 %1787
       %1789 = OpIMul %uint %1786 %1788
       %1790 = OpIAdd %uint %1783 %1789
       %1791 = OpIMul %uint %1788 %1790
       %1792 = OpIAdd %uint %1786 %1791
       %1793 = OpCompositeInsert %v3uint %1792 %552 0
       %1794 = OpBitwiseAnd %v3uint %406 %407
       %1795 = OpShiftRightLogical %v3uint %1793 %1794
       %1796 = OpCompositeExtract %uint %1795 0
       %1797 = OpCompositeConstruct %v3uint %1796 %1796 %1796
       %1798 = OpBitwiseAnd %v3uint %1797 %388
       %1799 = OpConvertUToF %v3float %1798
       %1800 = OpExtInst %v3float %1 Fma %1799 %392 %280
       %1801 = OpDot %float %1800 %1767
       %1802 = OpConvertFToS %int %1770
       %1803 = OpFSub %v3float %1767 %352
       %1804 = OpCompositeConstruct %v3int %1802 %int_0 %int_0
       %1805 = OpBitcast %v3uint %1804
       %1806 = OpIMul %v3uint %1805 %403
       %1807 = OpIAdd %v3uint %1806 %405
       %1808 = OpCompositeExtract %uint %1807 1
       %1809 = OpCompositeExtract %uint %1807 2
       %1810 = OpIMul %uint %1808 %1809
       %1811 = OpCompositeExtract %uint %1807 0
       %1812 = OpIAdd %uint %1811 %1810
       %1813 = OpIMul %uint %1809 %1812
       %1814 = OpIAdd %uint %1808 %1813
       %1815 = OpIMul %uint %1812 %1814
       %1816 = OpIAdd %uint %1809 %1815
       %1817 = OpIMul %uint %1814 %1816
       %1818 = OpIAdd %uint %1812 %1817
       %1819 = OpCompositeInsert %v3uint %1818 %552 0
       %1820 = OpShiftRightLogical %v3uint %1819 %1794
       %1821 = OpCompositeExtract %uint %1820 0
       %1822 = OpCompositeConstruct %v3uint %1821 %1821 %1821
       %1823 = OpBitwiseAnd %v3uint %1822 %388
       %1824 = OpConvertUToF %v3float %1823
       %1825 = OpExtInst %v3float %1 Fma %1824 %392 %280
       %1826 = OpDot %float %1825 %1803
       %1827 = OpConvertFToS %int %1771
       %1828 = OpFSub %v3float %1767 %353
       %1829 = OpCompositeConstruct %v3int %1827 %int_0 %int_0
       %1830 = OpBitcast %v3uint %1829
       %1831 = OpIMul %v3uint %1830 %403
       %1832 = OpIAdd %v3uint %1831 %405
       %1833 = OpCompositeExtract %uint %1832 1
       %1834 = OpCompositeExtract %uint %1832 2
       %1835 = OpIMul %uint %1833 %1834
       %1836 = OpCompositeExtract %uint %1832 0
       %1837 = OpIAdd %uint %1836 %1835
       %1838 = OpIMul %uint %1834 %1837
       %1839 = OpIAdd %uint %1833 %1838
       %1840 = OpIMul %uint %1837 %1839
       %1841 = OpIAdd %uint %1834 %1840
       %1842 = OpIMul %uint %1839 %1841
       %1843 = OpIAdd %uint %1837 %1842
       %1844 = OpCompositeInsert %v3uint %1843 %552 0
       %1845 = OpShiftRightLogical %v3uint %1844 %1794
       %1846 = OpCompositeExtract %uint %1845 0
       %1847 = OpCompositeConstruct %v3uint %1846 %1846 %1846
       %1848 = OpBitwiseAnd %v3uint %1847 %388
       %1849 = OpConvertUToF %v3float %1848
       %1850 = OpExtInst %v3float %1 Fma %1849 %392 %280
       %1851 = OpDot %float %1850 %1828
       %1852 = OpConvertFToS %int %1772
       %1853 = OpFSub %v3float %1767 %135
       %1854 = OpCompositeConstruct %v3int %1852 %int_0 %int_0
       %1855 = OpBitcast %v3uint %1854
       %1856 = OpIMul %v3uint %1855 %403
       %1857 = OpIAdd %v3uint %1856 %405
       %1858 = OpCompositeExtract %uint %1857 1
       %1859 = OpCompositeExtract %uint %1857 2
       %1860 = OpIMul %uint %1858 %1859
       %1861 = OpCompositeExtract %uint %1857 0
       %1862 = OpIAdd %uint %1861 %1860
       %1863 = OpIMul %uint %1859 %1862
       %1864 = OpIAdd %uint %1858 %1863
       %1865 = OpIMul %uint %1862 %1864
       %1866 = OpIAdd %uint %1859 %1865
       %1867 = OpIMul %uint %1864 %1866
       %1868 = OpIAdd %uint %1862 %1867
       %1869 = OpCompositeInsert %v3uint %1868 %552 0
       %1870 = OpShiftRightLogical %v3uint %1869 %1794
       %1871 = OpCompositeExtract %uint %1870 0
       %1872 = OpCompositeConstruct %v3uint %1871 %1871 %1871
       %1873 = OpBitwiseAnd %v3uint %1872 %388
       %1874 = OpConvertUToF %v3float %1873
       %1875 = OpExtInst %v3float %1 Fma %1874 %392 %280
       %1876 = OpDot %float %1875 %1853
       %1877 = OpConvertFToS %int %1773
       %1878 = OpFSub %v3float %1767 %292
       %1879 = OpCompositeConstruct %v3int %1877 %int_0 %int_0
       %1880 = OpBitcast %v3uint %1879
       %1881 = OpIMul %v3uint %1880 %403
       %1882 = OpIAdd %v3uint %1881 %405
       %1883 = OpCompositeExtract %uint %1882 1
       %1884 = OpCompositeExtract %uint %1882 2
       %1885 = OpIMul %uint %1883 %1884
       %1886 = OpCompositeExtract %uint %1882 0
       %1887 = OpIAdd %uint %1886 %1885
       %1888 = OpIMul %uint %1884 %1887
       %1889 = OpIAdd %uint %1883 %1888
       %1890 = OpIMul %uint %1887 %1889
       %1891 = OpIAdd %uint %1884 %1890
       %1892 = OpIMul %uint %1889 %1891
       %1893 = OpIAdd %uint %1887 %1892
       %1894 = OpCompositeInsert %v3uint %1893 %552 0
       %1895 = OpShiftRightLogical %v3uint %1894 %1794
       %1896 = OpCompositeExtract %uint %1895 0
       %1897 = OpCompositeConstruct %v3uint %1896 %1896 %1896
       %1898 = OpBitwiseAnd %v3uint %1897 %388
       %1899 = OpConvertUToF %v3float %1898
       %1900 = OpExtInst %v3float %1 Fma %1899 %392 %280
       %1901 = OpDot %float %1900 %1878
       %1902 = OpConvertFToS %int %1774
       %1903 = OpFSub %v3float %1767 %141
       %1904 = OpCompositeConstruct %v3int %1902 %int_0 %int_0
       %1905 = OpBitcast %v3uint %1904
       %1906 = OpIMul %v3uint %1905 %403
       %1907 = OpIAdd %v3uint %1906 %405
       %1908 = OpCompositeExtract %uint %1907 1
       %1909 = OpCompositeExtract %uint %1907 2
       %1910 = OpIMul %uint %1908 %1909
       %1911 = OpCompositeExtract %uint %1907 0
       %1912 = OpIAdd %uint %1911 %1910
       %1913 = OpIMul %uint %1909 %1912
       %1914 = OpIAdd %uint %1908 %1913
       %1915 = OpIMul %uint %1912 %1914
       %1916 = OpIAdd %uint %1909 %1915
       %1917 = OpIMul %uint %1914 %1916
       %1918 = OpIAdd %uint %1912 %1917
       %1919 = OpCompositeInsert %v3uint %1918 %552 0
       %1920 = OpShiftRightLogical %v3uint %1919 %1794
       %1921 = OpCompositeExtract %uint %1920 0
       %1922 = OpCompositeConstruct %v3uint %1921 %1921 %1921
       %1923 = OpBitwiseAnd %v3uint %1922 %388
       %1924 = OpConvertUToF %v3float %1923
       %1925 = OpExtInst %v3float %1 Fma %1924 %392 %280
       %1926 = OpDot %float %1925 %1903
       %1927 = OpConvertFToS %int %1775
       %1928 = OpFSub %v3float %1767 %136
       %1929 = OpCompositeConstruct %v3int %1927 %int_0 %int_0
       %1930 = OpBitcast %v3uint %1929
       %1931 = OpIMul %v3uint %1930 %403
       %1932 = OpIAdd %v3uint %1931 %405
       %1933 = OpCompositeExtract %uint %1932 1
       %1934 = OpCompositeExtract %uint %1932 2
       %1935 = OpIMul %uint %1933 %1934
       %1936 = OpCompositeExtract %uint %1932 0
       %1937 = OpIAdd %uint %1936 %1935
       %1938 = OpIMul %uint %1934 %1937
       %1939 = OpIAdd %uint %1933 %1938
       %1940 = OpIMul %uint %1937 %1939
       %1941 = OpIAdd %uint %1934 %1940
       %1942 = OpIMul %uint %1939 %1941
       %1943 = OpIAdd %uint %1937 %1942
       %1944 = OpCompositeInsert %v3uint %1943 %552 0
       %1945 = OpShiftRightLogical %v3uint %1944 %1794
       %1946 = OpCompositeExtract %uint %1945 0
       %1947 = OpCompositeConstruct %v3uint %1946 %1946 %1946
       %1948 = OpBitwiseAnd %v3uint %1947 %388
       %1949 = OpConvertUToF %v3float %1948
       %1950 = OpExtInst %v3float %1 Fma %1949 %392 %280
       %1951 = OpDot %float %1950 %1928
       %1952 = OpConvertFToS %int %1776
       %1953 = OpFSub %v3float %1767 %128
       %1954 = OpCompositeConstruct %v3int %1952 %int_0 %int_0
       %1955 = OpBitcast %v3uint %1954
       %1956 = OpIMul %v3uint %1955 %403
       %1957 = OpIAdd %v3uint %1956 %405
       %1958 = OpCompositeExtract %uint %1957 1
       %1959 = OpCompositeExtract %uint %1957 2
       %1960 = OpIMul %uint %1958 %1959
       %1961 = OpCompositeExtract %uint %1957 0
       %1962 = OpIAdd %uint %1961 %1960
       %1963 = OpIMul %uint %1959 %1962
       %1964 = OpIAdd %uint %1958 %1963
       %1965 = OpIMul %uint %1962 %1964
       %1966 = OpIAdd %uint %1959 %1965
       %1967 = OpIMul %uint %1964 %1966
       %1968 = OpIAdd %uint %1962 %1967
       %1969 = OpCompositeInsert %v3uint %1968 %552 0
       %1970 = OpShiftRightLogical %v3uint %1969 %1794
       %1971 = OpCompositeExtract %uint %1970 0
       %1972 = OpCompositeConstruct %v3uint %1971 %1971 %1971
       %1973 = OpBitwiseAnd %v3uint %1972 %388
       %1974 = OpConvertUToF %v3float %1973
       %1975 = OpExtInst %v3float %1 Fma %1974 %392 %280
       %1976 = OpDot %float %1975 %1953
       %1977 = OpCompositeExtract %float %1767 0
       %1978 = OpCompositeExtract %float %1767 1
       %1979 = OpCompositeExtract %float %1767 2
       %1980 = OpCompositeConstruct %v4float %1977 %1978 %1979 %float_0
       %1981 = OpFMul %v4float %1980 %1980
       %1982 = OpFMul %v4float %1981 %1980
       %1983 = OpVectorTimesScalar %v4float %1980 %float_6
       %1984 = OpFSub %v4float %1983 %383
       %1985 = OpExtInst %v4float %1 Fma %1980 %1984 %384
       %1986 = OpFMul %v4float %1982 %1985
       %1987 = OpCompositeExtract %float %1986 0
       %1988 = OpExtInst %float %1 FMix %1801 %1826 %1987
       %1989 = OpExtInst %float %1 FMix %1851 %1876 %1987
       %1990 = OpCompositeExtract %float %1986 1
       %1991 = OpExtInst %float %1 FMix %1988 %1989 %1990
       %1992 = OpExtInst %float %1 FMix %1901 %1926 %1987
       %1993 = OpExtInst %float %1 FMix %1951 %1976 %1987
       %1994 = OpExtInst %float %1 FMix %1992 %1993 %1990
       %1995 = OpCompositeExtract %float %1986 2
       %1996 = OpExtInst %float %1 FMix %1991 %1994 %1995
       %1762 = OpExtInst %float %1 Fma %1996 %1759 %1761
       %1757 = OpVectorTimesScalar %v3float %1756 %float_2
       %1760 = OpFMul %float %1759 %float_0_5
       %1764 = OpIAdd %uint %1763 %uint_1
               OpBranch %1755
       %1766 = OpLabel
       %1997 = OpExtInst %float %1 Fma %1761 %float_0_5 %float_0_5
       %1998 = OpExtInst %float %1 FMix %float_0 %float_1 %1997
       %1999 = OpExtInst %float %1 FClamp %1998 %float_0 %float_1
       %2000 = OpExtInst %float %1 FMix %1166 %1719 %1999
       %2001 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_10 %int_3
       %2002 = OpLoad %float %2001
       %2003 = OpFMul %float %2002 %2000
       %2004 = OpExtInst %float %1 Fma %1713 %1715 %2003
       %2005 = OpExtInst %float %1 Floor %1716
       %2006 = OpFNegate %float %2005
       %2007 = OpExtInst %float %1 Fma %1712 %1715 %2006
       %2008 = OpExtInst %float %1 Fma %2007 %float_2097152 %2004
       %2009 = OpExtInst %float %1 Floor %2008
       %2010 = OpFMul %float %2005 %float_n6_28318548
       %2011 = OpExtInst %float %1 Fma %1716 %float_6_28318548 %2010
       %2012 = OpFMul %float %2009 %float_n6_28318548
       %2013 = OpExtInst %float %1 Fma %2004 %float_6_28318548 %2012
       %2014 = OpExtInst %float %1 Fma %2011 %float_2097152 %2013
       %2015 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_12 %int_0
       %2016 = OpLoad %float %2015
       %2017 = OpCompositeConstruct %v3float %2016 %2016 %2016
       %2018 = OpFMul %v3float %596 %2017
       %2019 = OpFMul %v3float %2017 %647
       %2020 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_12 %int_1
       %2021 = OpLoad %float %2020
       %2022 = OpCompositeConstruct %v3float %2021 %2021 %2021
       %2023 = OpFMul %v3float %2018 %2022
       %2024 = OpFMul %v3float %2019 %2022
       %2025 = OpFMul %v3float %2024 %509
       %2026 = OpCompositeExtract %float %2025 0
       %2027 = OpCompositeExtract %float %2025 1
       %2028 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_12 %int_3
       %2029 = OpLoad %float %2028
       %2030 = OpFMul %float %1166 %2029
       %2031 = OpCompositeExtract %float %2025 2
       %2032 = OpCompositeConstruct %v2float %2030 %2030
       %2033 = OpCompositeConstruct %v2float %2031 %2031
       %2034 = OpFAdd %v2float %2032 %2033
       %2035 = OpCompositeExtract %float %2034 0
       %2036 = OpCompositeConstruct %v3float %2026 %2027 %2035
       %2037 = OpVectorTimesScalar %v3float %2036 %float_4_76837158en07
       %2038 = OpFAdd %v3float %2037 %138
       %2039 = OpExtInst %v3float %1 Fma %2023 %509 %2038
       %2040 = OpExtInst %v3float %1 Floor %2039
       %2041 = OpFNegate %v3float %2040
       %2042 = OpExtInst %v3float %1 Fma %2023 %509 %2041
       %2043 = OpVectorTimesScalar %v3float %2042 %float_2097152
       %2044 = OpFAdd %v3float %2043 %2036
       %2045 = OpVectorTimesScalar %v3float %2044 %float_1
               OpBranch %2046
       %2046 = OpLabel
       %2047 = OpPhi %v3float %2045 %1766 %2048 %2049
       %2050 = OpPhi %float %float_1 %1766 %2051 %2049
       %2052 = OpPhi %float %float_0 %1766 %2053 %2049
       %2054 = OpPhi %uint %uint_0 %1766 %2055 %2049
       %2056 = OpULessThan %bool %2054 %uint_10
               OpLoopMerge %2057 %2049 DontUnroll
               OpBranchConditional %2056 %2049 %2057
       %2049 = OpLabel
       %2058 = OpExtInst %v3float %1 Fract %2047
       %2059 = OpExtInst %v3float %1 Floor %2047
       %2060 = OpDot %float %2059 %387
       %2061 = OpFAdd %float %2060 %float_19
       %2062 = OpFAdd %float %2060 %float_47
       %2063 = OpFAdd %float %2060 %float_66
       %2064 = OpFAdd %float %2060 %float_101
       %2065 = OpFAdd %float %2060 %float_120
       %2066 = OpFAdd %float %2060 %float_148
       %2067 = OpFAdd %float %2060 %float_167
       %2068 = OpConvertFToS %int %2060
       %2069 = OpCompositeConstruct %v3int %2068 %int_0 %int_0
       %2070 = OpBitcast %v3uint %2069
       %2071 = OpIMul %v3uint %2070 %403
       %2072 = OpIAdd %v3uint %2071 %405
       %2073 = OpCompositeExtract %uint %2072 1
       %2074 = OpCompositeExtract %uint %2072 2
       %2075 = OpIMul %uint %2073 %2074
       %2076 = OpCompositeExtract %uint %2072 0
       %2077 = OpIAdd %uint %2076 %2075
       %2078 = OpIMul %uint %2074 %2077
       %2079 = OpIAdd %uint %2073 %2078
       %2080 = OpIMul %uint %2077 %2079
       %2081 = OpIAdd %uint %2074 %2080
       %2082 = OpIMul %uint %2079 %2081
       %2083 = OpIAdd %uint %2077 %2082
       %2084 = OpCompositeInsert %v3uint %2083 %552 0
       %2085 = OpBitwiseAnd %v3uint %406 %407
       %2086 = OpShiftRightLogical %v3uint %2084 %2085
       %2087 = OpCompositeExtract %uint %2086 0
       %2088 = OpCompositeConstruct %v3uint %2087 %2087 %2087
       %2089 = OpBitwiseAnd %v3uint %2088 %388
       %2090 = OpConvertUToF %v3float %2089
       %2091 = OpExtInst %v3float %1 Fma %2090 %392 %280
       %2092 = OpDot %float %2091 %2058
       %2093 = OpConvertFToS %int %2061
       %2094 = OpFSub %v3float %2058 %352
       %2095 = OpCompositeConstruct %v3int %2093 %int_0 %int_0
       %2096 = OpBitcast %v3uint %2095
       %2097 = OpIMul %v3uint %2096 %403
       %2098 = OpIAdd %v3uint %2097 %405
       %2099 = OpCompositeExtract %uint %2098 1
       %2100 = OpCompositeExtract %uint %2098 2
       %2101 = OpIMul %uint %2099 %2100
       %2102 = OpCompositeExtract %uint %2098 0
       %2103 = OpIAdd %uint %2102 %2101
       %2104 = OpIMul %uint %2100 %2103
       %2105 = OpIAdd %uint %2099 %2104
       %2106 = OpIMul %uint %2103 %2105
       %2107 = OpIAdd %uint %2100 %2106
       %2108 = OpIMul %uint %2105 %2107
       %2109 = OpIAdd %uint %2103 %2108
       %2110 = OpCompositeInsert %v3uint %2109 %552 0
       %2111 = OpShiftRightLogical %v3uint %2110 %2085
       %2112 = OpCompositeExtract %uint %2111 0
       %2113 = OpCompositeConstruct %v3uint %2112 %2112 %2112
       %2114 = OpBitwiseAnd %v3uint %2113 %388
       %2115 = OpConvertUToF %v3float %2114
       %2116 = OpExtInst %v3float %1 Fma %2115 %392 %280
       %2117 = OpDot %float %2116 %2094
       %2118 = OpConvertFToS %int %2062
       %2119 = OpFSub %v3float %2058 %353
       %2120 = OpCompositeConstruct %v3int %2118 %int_0 %int_0
       %2121 = OpBitcast %v3uint %2120
       %2122 = OpIMul %v3uint %2121 %403
       %2123 = OpIAdd %v3uint %2122 %405
       %2124 = OpCompositeExtract %uint %2123 1
       %2125 = OpCompositeExtract %uint %2123 2
       %2126 = OpIMul %uint %2124 %2125
       %2127 = OpCompositeExtract %uint %2123 0
       %2128 = OpIAdd %uint %2127 %2126
       %2129 = OpIMul %uint %2125 %2128
       %2130 = OpIAdd %uint %2124 %2129
       %2131 = OpIMul %uint %2128 %2130
       %2132 = OpIAdd %uint %2125 %2131
       %2133 = OpIMul %uint %2130 %2132
       %2134 = OpIAdd %uint %2128 %2133
       %2135 = OpCompositeInsert %v3uint %2134 %552 0
       %2136 = OpShiftRightLogical %v3uint %2135 %2085
       %2137 = OpCompositeExtract %uint %2136 0
       %2138 = OpCompositeConstruct %v3uint %2137 %2137 %2137
       %2139 = OpBitwiseAnd %v3uint %2138 %388
       %2140 = OpConvertUToF %v3float %2139
       %2141 = OpExtInst %v3float %1 Fma %2140 %392 %280
       %2142 = OpDot %float %2141 %2119
       %2143 = OpConvertFToS %int %2063
       %2144 = OpFSub %v3float %2058 %135
       %2145 = OpCompositeConstruct %v3int %2143 %int_0 %int_0
       %2146 = OpBitcast %v3uint %2145
       %2147 = OpIMul %v3uint %2146 %403
       %2148 = OpIAdd %v3uint %2147 %405
       %2149 = OpCompositeExtract %uint %2148 1
       %2150 = OpCompositeExtract %uint %2148 2
       %2151 = OpIMul %uint %2149 %2150
       %2152 = OpCompositeExtract %uint %2148 0
       %2153 = OpIAdd %uint %2152 %2151
       %2154 = OpIMul %uint %2150 %2153
       %2155 = OpIAdd %uint %2149 %2154
       %2156 = OpIMul %uint %2153 %2155
       %2157 = OpIAdd %uint %2150 %2156
       %2158 = OpIMul %uint %2155 %2157
       %2159 = OpIAdd %uint %2153 %2158
       %2160 = OpCompositeInsert %v3uint %2159 %552 0
       %2161 = OpShiftRightLogical %v3uint %2160 %2085
       %2162 = OpCompositeExtract %uint %2161 0
       %2163 = OpCompositeConstruct %v3uint %2162 %2162 %2162
       %2164 = OpBitwiseAnd %v3uint %2163 %388
       %2165 = OpConvertUToF %v3float %2164
       %2166 = OpExtInst %v3float %1 Fma %2165 %392 %280
       %2167 = OpDot %float %2166 %2144
       %2168 = OpConvertFToS %int %2064
       %2169 = OpFSub %v3float %2058 %292
       %2170 = OpCompositeConstruct %v3int %2168 %int_0 %int_0
       %2171 = OpBitcast %v3uint %2170
       %2172 = OpIMul %v3uint %2171 %403
       %2173 = OpIAdd %v3uint %2172 %405
       %2174 = OpCompositeExtract %uint %2173 1
       %2175 = OpCompositeExtract %uint %2173 2
       %2176 = OpIMul %uint %2174 %2175
       %2177 = OpCompositeExtract %uint %2173 0
       %2178 = OpIAdd %uint %2177 %2176
       %2179 = OpIMul %uint %2175 %2178
       %2180 = OpIAdd %uint %2174 %2179
       %2181 = OpIMul %uint %2178 %2180
       %2182 = OpIAdd %uint %2175 %2181
       %2183 = OpIMul %uint %2180 %2182
       %2184 = OpIAdd %uint %2178 %2183
       %2185 = OpCompositeInsert %v3uint %2184 %552 0
       %2186 = OpShiftRightLogical %v3uint %2185 %2085
       %2187 = OpCompositeExtract %uint %2186 0
       %2188 = OpCompositeConstruct %v3uint %2187 %2187 %2187
       %2189 = OpBitwiseAnd %v3uint %2188 %388
       %2190 = OpConvertUToF %v3float %2189
       %2191 = OpExtInst %v3float %1 Fma %2190 %392 %280
       %2192 = OpDot %float %2191 %2169
       %2193 = OpConvertFToS %int %2065
       %2194 = OpFSub %v3float %2058 %141
       %2195 = OpCompositeConstruct %v3int %2193 %int_0 %int_0
       %2196 = OpBitcast %v3uint %2195
       %2197 = OpIMul %v3uint %2196 %403
       %2198 = OpIAdd %v3uint %2197 %405
       %2199 = OpCompositeExtract %uint %2198 1
       %2200 = OpCompositeExtract %uint %2198 2
       %2201 = OpIMul %uint %2199 %2200
       %2202 = OpCompositeExtract %uint %2198 0
       %2203 = OpIAdd %uint %2202 %2201
       %2204 = OpIMul %uint %2200 %2203
       %2205 = OpIAdd %uint %2199 %2204
       %2206 = OpIMul %uint %2203 %2205
       %2207 = OpIAdd %uint %2200 %2206
       %2208 = OpIMul %uint %2205 %2207
       %2209 = OpIAdd %uint %2203 %2208
       %2210 = OpCompositeInsert %v3uint %2209 %552 0
       %2211 = OpShiftRightLogical %v3uint %2210 %2085
       %2212 = OpCompositeExtract %uint %2211 0
       %2213 = OpCompositeConstruct %v3uint %2212 %2212 %2212
       %2214 = OpBitwiseAnd %v3uint %2213 %388
       %2215 = OpConvertUToF %v3float %2214
       %2216 = OpExtInst %v3float %1 Fma %2215 %392 %280
       %2217 = OpDot %float %2216 %2194
       %2218 = OpConvertFToS %int %2066
       %2219 = OpFSub %v3float %2058 %136
       %2220 = OpCompositeConstruct %v3int %2218 %int_0 %int_0
       %2221 = OpBitcast %v3uint %2220
       %2222 = OpIMul %v3uint %2221 %403
       %2223 = OpIAdd %v3uint %2222 %405
       %2224 = OpCompositeExtract %uint %2223 1
       %2225 = OpCompositeExtract %uint %2223 2
       %2226 = OpIMul %uint %2224 %2225
       %2227 = OpCompositeExtract %uint %2223 0
       %2228 = OpIAdd %uint %2227 %2226
       %2229 = OpIMul %uint %2225 %2228
       %2230 = OpIAdd %uint %2224 %2229
       %2231 = OpIMul %uint %2228 %2230
       %2232 = OpIAdd %uint %2225 %2231
       %2233 = OpIMul %uint %2230 %2232
       %2234 = OpIAdd %uint %2228 %2233
       %2235 = OpCompositeInsert %v3uint %2234 %552 0
       %2236 = OpShiftRightLogical %v3uint %2235 %2085
       %2237 = OpCompositeExtract %uint %2236 0
       %2238 = OpCompositeConstruct %v3uint %2237 %2237 %2237
       %2239 = OpBitwiseAnd %v3uint %2238 %388
       %2240 = OpConvertUToF %v3float %2239
       %2241 = OpExtInst %v3float %1 Fma %2240 %392 %280
       %2242 = OpDot %float %2241 %2219
       %2243 = OpConvertFToS %int %2067
       %2244 = OpFSub %v3float %2058 %128
       %2245 = OpCompositeConstruct %v3int %2243 %int_0 %int_0
       %2246 = OpBitcast %v3uint %2245
       %2247 = OpIMul %v3uint %2246 %403
       %2248 = OpIAdd %v3uint %2247 %405
       %2249 = OpCompositeExtract %uint %2248 1
       %2250 = OpCompositeExtract %uint %2248 2
       %2251 = OpIMul %uint %2249 %2250
       %2252 = OpCompositeExtract %uint %2248 0
       %2253 = OpIAdd %uint %2252 %2251
       %2254 = OpIMul %uint %2250 %2253
       %2255 = OpIAdd %uint %2249 %2254
       %2256 = OpIMul %uint %2253 %2255
       %2257 = OpIAdd %uint %2250 %2256
       %2258 = OpIMul %uint %2255 %2257
       %2259 = OpIAdd %uint %2253 %2258
       %2260 = OpCompositeInsert %v3uint %2259 %552 0
       %2261 = OpShiftRightLogical %v3uint %2260 %2085
       %2262 = OpCompositeExtract %uint %2261 0
       %2263 = OpCompositeConstruct %v3uint %2262 %2262 %2262
       %2264 = OpBitwiseAnd %v3uint %2263 %388
       %2265 = OpConvertUToF %v3float %2264
       %2266 = OpExtInst %v3float %1 Fma %2265 %392 %280
       %2267 = OpDot %float %2266 %2244
       %2268 = OpCompositeExtract %float %2058 0
       %2269 = OpCompositeExtract %float %2058 1
       %2270 = OpCompositeExtract %float %2058 2
       %2271 = OpCompositeConstruct %v4float %2268 %2269 %2270 %float_0
       %2272 = OpFMul %v4float %2271 %2271
       %2273 = OpFMul %v4float %2272 %2271
       %2274 = OpVectorTimesScalar %v4float %2271 %float_6
       %2275 = OpFSub %v4float %2274 %383
       %2276 = OpExtInst %v4float %1 Fma %2271 %2275 %384
       %2277 = OpFMul %v4float %2273 %2276
       %2278 = OpCompositeExtract %float %2277 0
       %2279 = OpExtInst %float %1 FMix %2092 %2117 %2278
       %2280 = OpExtInst %float %1 FMix %2142 %2167 %2278
       %2281 = OpCompositeExtract %float %2277 1
       %2282 = OpExtInst %float %1 FMix %2279 %2280 %2281
       %2283 = OpExtInst %float %1 FMix %2192 %2217 %2278
       %2284 = OpExtInst %float %1 FMix %2242 %2267 %2278
       %2285 = OpExtInst %float %1 FMix %2283 %2284 %2281
       %2286 = OpCompositeExtract %float %2277 2
       %2287 = OpExtInst %float %1 FMix %2282 %2285 %2286
       %2288 = OpExtInst %float %1 FAbs %2287
       %2053 = OpExtInst %float %1 Fma %2288 %2050 %2052
       %2048 = OpVectorTimesScalar %v3float %2047 %float_2
       %2051 = OpFMul %float %2050 %float_0_5
       %2055 = OpIAdd %uint %2054 %uint_1
               OpBranch %2046
       %2057 = OpLabel
       %2289 = OpExtInst %float %1 FMix %float_0 %float_1 %2052
       %2290 = OpFMul %v3float %2024 %511
       %2291 = OpCompositeExtract %float %2290 0
       %2292 = OpCompositeExtract %float %2290 1
       %2293 = OpCompositeExtract %float %2290 2
       %2294 = OpCompositeConstruct %v2float %2293 %2293
       %2295 = OpFAdd %v2float %2032 %2294
       %2296 = OpCompositeExtract %float %2295 0
       %2297 = OpCompositeConstruct %v3float %2291 %2292 %2296
       %2298 = OpVectorTimesScalar %v3float %2297 %float_4_76837158en07
       %2299 = OpFAdd %v3float %2298 %138
       %2300 = OpExtInst %v3float %1 Fma %2023 %511 %2299
       %2301 = OpExtInst %v3float %1 Floor %2300
       %2302 = OpFNegate %v3float %2301
       %2303 = OpExtInst %v3float %1 Fma %2023 %511 %2302
       %2304 = OpVectorTimesScalar %v3float %2303 %float_2097152
       %2305 = OpFAdd %v3float %2304 %2297
       %2306 = OpVectorTimesScalar %v3float %2305 %float_1
               OpBranch %2307
       %2307 = OpLabel
       %2308 = OpPhi %v3float %2306 %2057 %2309 %2310
       %2311 = OpPhi %float %float_1 %2057 %2312 %2310
       %2313 = OpPhi %float %float_0 %2057 %2314 %2310
       %2315 = OpPhi %uint %uint_0 %2057 %2316 %2310
       %2317 = OpULessThan %bool %2315 %uint_10
               OpLoopMerge %2318 %2310 DontUnroll
               OpBranchConditional %2317 %2310 %2318
       %2310 = OpLabel
       %2319 = OpExtInst %v3float %1 Fract %2308
       %2320 = OpExtInst %v3float %1 Floor %2308
       %2321 = OpDot %float %2320 %387
       %2322 = OpFAdd %float %2321 %float_19
       %2323 = OpFAdd %float %2321 %float_47
       %2324 = OpFAdd %float %2321 %float_66
       %2325 = OpFAdd %float %2321 %float_101
       %2326 = OpFAdd %float %2321 %float_120
       %2327 = OpFAdd %float %2321 %float_148
       %2328 = OpFAdd %float %2321 %float_167
       %2329 = OpConvertFToS %int %2321
       %2330 = OpCompositeConstruct %v3int %2329 %int_0 %int_0
       %2331 = OpBitcast %v3uint %2330
       %2332 = OpIMul %v3uint %2331 %403
       %2333 = OpIAdd %v3uint %2332 %405
       %2334 = OpCompositeExtract %uint %2333 1
       %2335 = OpCompositeExtract %uint %2333 2
       %2336 = OpIMul %uint %2334 %2335
       %2337 = OpCompositeExtract %uint %2333 0
       %2338 = OpIAdd %uint %2337 %2336
       %2339 = OpIMul %uint %2335 %2338
       %2340 = OpIAdd %uint %2334 %2339
       %2341 = OpIMul %uint %2338 %2340
       %2342 = OpIAdd %uint %2335 %2341
       %2343 = OpIMul %uint %2340 %2342
       %2344 = OpIAdd %uint %2338 %2343
       %2345 = OpCompositeInsert %v3uint %2344 %552 0
       %2346 = OpBitwiseAnd %v3uint %406 %407
       %2347 = OpShiftRightLogical %v3uint %2345 %2346
       %2348 = OpCompositeExtract %uint %2347 0
       %2349 = OpCompositeConstruct %v3uint %2348 %2348 %2348
       %2350 = OpBitwiseAnd %v3uint %2349 %388
       %2351 = OpConvertUToF %v3float %2350
       %2352 = OpExtInst %v3float %1 Fma %2351 %392 %280
       %2353 = OpDot %float %2352 %2319
       %2354 = OpConvertFToS %int %2322
       %2355 = OpFSub %v3float %2319 %352
       %2356 = OpCompositeConstruct %v3int %2354 %int_0 %int_0
       %2357 = OpBitcast %v3uint %2356
       %2358 = OpIMul %v3uint %2357 %403
       %2359 = OpIAdd %v3uint %2358 %405
       %2360 = OpCompositeExtract %uint %2359 1
       %2361 = OpCompositeExtract %uint %2359 2
       %2362 = OpIMul %uint %2360 %2361
       %2363 = OpCompositeExtract %uint %2359 0
       %2364 = OpIAdd %uint %2363 %2362
       %2365 = OpIMul %uint %2361 %2364
       %2366 = OpIAdd %uint %2360 %2365
       %2367 = OpIMul %uint %2364 %2366
       %2368 = OpIAdd %uint %2361 %2367
       %2369 = OpIMul %uint %2366 %2368
       %2370 = OpIAdd %uint %2364 %2369
       %2371 = OpCompositeInsert %v3uint %2370 %552 0
       %2372 = OpShiftRightLogical %v3uint %2371 %2346
       %2373 = OpCompositeExtract %uint %2372 0
       %2374 = OpCompositeConstruct %v3uint %2373 %2373 %2373
       %2375 = OpBitwiseAnd %v3uint %2374 %388
       %2376 = OpConvertUToF %v3float %2375
       %2377 = OpExtInst %v3float %1 Fma %2376 %392 %280
       %2378 = OpDot %float %2377 %2355
       %2379 = OpConvertFToS %int %2323
       %2380 = OpFSub %v3float %2319 %353
       %2381 = OpCompositeConstruct %v3int %2379 %int_0 %int_0
       %2382 = OpBitcast %v3uint %2381
       %2383 = OpIMul %v3uint %2382 %403
       %2384 = OpIAdd %v3uint %2383 %405
       %2385 = OpCompositeExtract %uint %2384 1
       %2386 = OpCompositeExtract %uint %2384 2
       %2387 = OpIMul %uint %2385 %2386
       %2388 = OpCompositeExtract %uint %2384 0
       %2389 = OpIAdd %uint %2388 %2387
       %2390 = OpIMul %uint %2386 %2389
       %2391 = OpIAdd %uint %2385 %2390
       %2392 = OpIMul %uint %2389 %2391
       %2393 = OpIAdd %uint %2386 %2392
       %2394 = OpIMul %uint %2391 %2393
       %2395 = OpIAdd %uint %2389 %2394
       %2396 = OpCompositeInsert %v3uint %2395 %552 0
       %2397 = OpShiftRightLogical %v3uint %2396 %2346
       %2398 = OpCompositeExtract %uint %2397 0
       %2399 = OpCompositeConstruct %v3uint %2398 %2398 %2398
       %2400 = OpBitwiseAnd %v3uint %2399 %388
       %2401 = OpConvertUToF %v3float %2400
       %2402 = OpExtInst %v3float %1 Fma %2401 %392 %280
       %2403 = OpDot %float %2402 %2380
       %2404 = OpConvertFToS %int %2324
       %2405 = OpFSub %v3float %2319 %135
       %2406 = OpCompositeConstruct %v3int %2404 %int_0 %int_0
       %2407 = OpBitcast %v3uint %2406
       %2408 = OpIMul %v3uint %2407 %403
       %2409 = OpIAdd %v3uint %2408 %405
       %2410 = OpCompositeExtract %uint %2409 1
       %2411 = OpCompositeExtract %uint %2409 2
       %2412 = OpIMul %uint %2410 %2411
       %2413 = OpCompositeExtract %uint %2409 0
       %2414 = OpIAdd %uint %2413 %2412
       %2415 = OpIMul %uint %2411 %2414
       %2416 = OpIAdd %uint %2410 %2415
       %2417 = OpIMul %uint %2414 %2416
       %2418 = OpIAdd %uint %2411 %2417
       %2419 = OpIMul %uint %2416 %2418
       %2420 = OpIAdd %uint %2414 %2419
       %2421 = OpCompositeInsert %v3uint %2420 %552 0
       %2422 = OpShiftRightLogical %v3uint %2421 %2346
       %2423 = OpCompositeExtract %uint %2422 0
       %2424 = OpCompositeConstruct %v3uint %2423 %2423 %2423
       %2425 = OpBitwiseAnd %v3uint %2424 %388
       %2426 = OpConvertUToF %v3float %2425
       %2427 = OpExtInst %v3float %1 Fma %2426 %392 %280
       %2428 = OpDot %float %2427 %2405
       %2429 = OpConvertFToS %int %2325
       %2430 = OpFSub %v3float %2319 %292
       %2431 = OpCompositeConstruct %v3int %2429 %int_0 %int_0
       %2432 = OpBitcast %v3uint %2431
       %2433 = OpIMul %v3uint %2432 %403
       %2434 = OpIAdd %v3uint %2433 %405
       %2435 = OpCompositeExtract %uint %2434 1
       %2436 = OpCompositeExtract %uint %2434 2
       %2437 = OpIMul %uint %2435 %2436
       %2438 = OpCompositeExtract %uint %2434 0
       %2439 = OpIAdd %uint %2438 %2437
       %2440 = OpIMul %uint %2436 %2439
       %2441 = OpIAdd %uint %2435 %2440
       %2442 = OpIMul %uint %2439 %2441
       %2443 = OpIAdd %uint %2436 %2442
       %2444 = OpIMul %uint %2441 %2443
       %2445 = OpIAdd %uint %2439 %2444
       %2446 = OpCompositeInsert %v3uint %2445 %552 0
       %2447 = OpShiftRightLogical %v3uint %2446 %2346
       %2448 = OpCompositeExtract %uint %2447 0
       %2449 = OpCompositeConstruct %v3uint %2448 %2448 %2448
       %2450 = OpBitwiseAnd %v3uint %2449 %388
       %2451 = OpConvertUToF %v3float %2450
       %2452 = OpExtInst %v3float %1 Fma %2451 %392 %280
       %2453 = OpDot %float %2452 %2430
       %2454 = OpConvertFToS %int %2326
       %2455 = OpFSub %v3float %2319 %141
       %2456 = OpCompositeConstruct %v3int %2454 %int_0 %int_0
       %2457 = OpBitcast %v3uint %2456
       %2458 = OpIMul %v3uint %2457 %403
       %2459 = OpIAdd %v3uint %2458 %405
       %2460 = OpCompositeExtract %uint %2459 1
       %2461 = OpCompositeExtract %uint %2459 2
       %2462 = OpIMul %uint %2460 %2461
       %2463 = OpCompositeExtract %uint %2459 0
       %2464 = OpIAdd %uint %2463 %2462
       %2465 = OpIMul %uint %2461 %2464
       %2466 = OpIAdd %uint %2460 %2465
       %2467 = OpIMul %uint %2464 %2466
       %2468 = OpIAdd %uint %2461 %2467
       %2469 = OpIMul %uint %2466 %2468
       %2470 = OpIAdd %uint %2464 %2469
       %2471 = OpCompositeInsert %v3uint %2470 %552 0
       %2472 = OpShiftRightLogical %v3uint %2471 %2346
       %2473 = OpCompositeExtract %uint %2472 0
       %2474 = OpCompositeConstruct %v3uint %2473 %2473 %2473
       %2475 = OpBitwiseAnd %v3uint %2474 %388
       %2476 = OpConvertUToF %v3float %2475
       %2477 = OpExtInst %v3float %1 Fma %2476 %392 %280
       %2478 = OpDot %float %2477 %2455
       %2479 = OpConvertFToS %int %2327
       %2480 = OpFSub %v3float %2319 %136
       %2481 = OpCompositeConstruct %v3int %2479 %int_0 %int_0
       %2482 = OpBitcast %v3uint %2481
       %2483 = OpIMul %v3uint %2482 %403
       %2484 = OpIAdd %v3uint %2483 %405
       %2485 = OpCompositeExtract %uint %2484 1
       %2486 = OpCompositeExtract %uint %2484 2
       %2487 = OpIMul %uint %2485 %2486
       %2488 = OpCompositeExtract %uint %2484 0
       %2489 = OpIAdd %uint %2488 %2487
       %2490 = OpIMul %uint %2486 %2489
       %2491 = OpIAdd %uint %2485 %2490
       %2492 = OpIMul %uint %2489 %2491
       %2493 = OpIAdd %uint %2486 %2492
       %2494 = OpIMul %uint %2491 %2493
       %2495 = OpIAdd %uint %2489 %2494
       %2496 = OpCompositeInsert %v3uint %2495 %552 0
       %2497 = OpShiftRightLogical %v3uint %2496 %2346
       %2498 = OpCompositeExtract %uint %2497 0
       %2499 = OpCompositeConstruct %v3uint %2498 %2498 %2498
       %2500 = OpBitwiseAnd %v3uint %2499 %388
       %2501 = OpConvertUToF %v3float %2500
       %2502 = OpExtInst %v3float %1 Fma %2501 %392 %280
       %2503 = OpDot %float %2502 %2480
       %2504 = OpConvertFToS %int %2328
       %2505 = OpFSub %v3float %2319 %128
       %2506 = OpCompositeConstruct %v3int %2504 %int_0 %int_0
       %2507 = OpBitcast %v3uint %2506
       %2508 = OpIMul %v3uint %2507 %403
       %2509 = OpIAdd %v3uint %2508 %405
       %2510 = OpCompositeExtract %uint %2509 1
       %2511 = OpCompositeExtract %uint %2509 2
       %2512 = OpIMul %uint %2510 %2511
       %2513 = OpCompositeExtract %uint %2509 0
       %2514 = OpIAdd %uint %2513 %2512
       %2515 = OpIMul %uint %2511 %2514
       %2516 = OpIAdd %uint %2510 %2515
       %2517 = OpIMul %uint %2514 %2516
       %2518 = OpIAdd %uint %2511 %2517
       %2519 = OpIMul %uint %2516 %2518
       %2520 = OpIAdd %uint %2514 %2519
       %2521 = OpCompositeInsert %v3uint %2520 %552 0
       %2522 = OpShiftRightLogical %v3uint %2521 %2346
       %2523 = OpCompositeExtract %uint %2522 0
       %2524 = OpCompositeConstruct %v3uint %2523 %2523 %2523
       %2525 = OpBitwiseAnd %v3uint %2524 %388
       %2526 = OpConvertUToF %v3float %2525
       %2527 = OpExtInst %v3float %1 Fma %2526 %392 %280
       %2528 = OpDot %float %2527 %2505
       %2529 = OpCompositeExtract %float %2319 0
       %2530 = OpCompositeExtract %float %2319 1
       %2531 = OpCompositeExtract %float %2319 2
       %2532 = OpCompositeConstruct %v4float %2529 %2530 %2531 %float_0
       %2533 = OpFMul %v4float %2532 %2532
       %2534 = OpFMul %v4float %2533 %2532
       %2535 = OpVectorTimesScalar %v4float %2532 %float_6
       %2536 = OpFSub %v4float %2535 %383
       %2537 = OpExtInst %v4float %1 Fma %2532 %2536 %384
       %2538 = OpFMul %v4float %2534 %2537
       %2539 = OpCompositeExtract %float %2538 0
       %2540 = OpExtInst %float %1 FMix %2353 %2378 %2539
       %2541 = OpExtInst %float %1 FMix %2403 %2428 %2539
       %2542 = OpCompositeExtract %float %2538 1
       %2543 = OpExtInst %float %1 FMix %2540 %2541 %2542
       %2544 = OpExtInst %float %1 FMix %2453 %2478 %2539
       %2545 = OpExtInst %float %1 FMix %2503 %2528 %2539
       %2546 = OpExtInst %float %1 FMix %2544 %2545 %2542
       %2547 = OpCompositeExtract %float %2538 2
       %2548 = OpExtInst %float %1 FMix %2543 %2546 %2547
       %2549 = OpExtInst %float %1 FAbs %2548
       %2314 = OpExtInst %float %1 Fma %2549 %2311 %2313
       %2309 = OpVectorTimesScalar %v3float %2308 %float_2
       %2312 = OpFMul %float %2311 %float_0_5
       %2316 = OpIAdd %uint %2315 %uint_1
               OpBranch %2307
       %2318 = OpLabel
       %2550 = OpExtInst %float %1 FMix %float_0 %float_1 %2313
       %2551 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_13 %int_1
       %2552 = OpLoad %float %2551
       %2553 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_13 %int_0
       %2554 = OpLoad %float %2553
       %2555 = OpExtInst %float %1 Fma %2550 %2552 %2554
       %2556 = OpFMul %float %2289 %2555
       %2557 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_11 %int_3
       %2558 = OpLoad %float %2557
       %2559 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_13 %int_2
       %2560 = OpLoad %float %2559
       %2561 = OpExtInst %float %1 FMix %2558 %2560 %2556
       %2562 = OpExtInst %float %1 Sin %2014
       %2563 = OpFMul %float %2562 %2561
       %2564 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_15
       %2565 = OpLoad %v4float %2564
       %2566 = OpVectorShuffle %v3float %2565 %2565 0 1 2
       %2567 = OpFAdd %v3float %1690 %2566
       %2568 = OpExtInst %v3float %1 NMax %2567 %280
       %2569 = OpExtInst %v3float %1 NMin %2568 %128
       %2570 = OpCompositeExtract %float %2569 0
       %2571 = OpCompositeExtract %float %2569 1
       %2572 = OpCompositeConstruct %v2float %2570 %2571
       %2573 = OpFMul %v2float %1701 %2572
       %2574 = OpFMul %v2float %2572 %1702
       %2575 = OpCompositeExtract %float %2573 0
       %2576 = OpCompositeExtract %float %2574 0
       %2577 = OpCompositeExtract %float %2573 1
       %2578 = OpCompositeExtract %float %2574 1
       %2579 = OpFAdd %float %2575 %2577
       %2580 = OpFAdd %float %2576 %2578
       %2581 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_16 %int_1
       %2582 = OpLoad %float %2581
       %2583 = OpFMul %float %2579 %2582
       %2584 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_0
       %2585 = OpLoad %float %2584
       %2586 = OpFMul %float %2585 %2000
       %2587 = OpExtInst %float %1 Fma %2580 %2582 %2586
       %2588 = OpExtInst %float %1 Floor %2583
       %2589 = OpFNegate %float %2588
       %2590 = OpExtInst %float %1 Fma %2579 %2582 %2589
       %2591 = OpExtInst %float %1 Fma %2590 %float_2097152 %2587
       %2592 = OpExtInst %float %1 Floor %2591
       %2593 = OpFMul %float %2588 %float_n6_28318548
       %2594 = OpExtInst %float %1 Fma %2583 %float_6_28318548 %2593
       %2595 = OpFMul %float %2592 %float_n6_28318548
       %2596 = OpExtInst %float %1 Fma %2587 %float_6_28318548 %2595
       %2597 = OpExtInst %float %1 Fma %2594 %float_2097152 %2596
       %2598 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_2
       %2599 = OpLoad %float %2598
       %2600 = OpFMul %float %2561 %2599
       %2601 = OpExtInst %float %1 Sin %2597
       %2602 = OpFMul %float %2601 %2600
       %2603 = OpCompositeConstruct %v3float %551 %551 %2563
       %2604 = OpCompositeConstruct %v3float %551 %551 %2602
       %2605 = OpFAdd %v3float %2603 %2604
       %2606 = OpFSub %v3float %1690 %1693
       %2607 = OpExtInst %v3float %1 NMax %2606 %280
       %2608 = OpExtInst %v3float %1 NMin %2607 %128
       %2609 = OpCompositeExtract %float %2608 0
       %2610 = OpCompositeExtract %float %2608 1
       %2611 = OpCompositeConstruct %v2float %2609 %2610
       %2612 = OpFMul %v2float %1701 %2611
       %2613 = OpFMul %v2float %2611 %1702
       %2614 = OpCompositeExtract %float %2612 0
       %2615 = OpCompositeExtract %float %2613 0
       %2616 = OpCompositeExtract %float %2612 1
       %2617 = OpCompositeExtract %float %2613 1
       %2618 = OpFAdd %float %2614 %2616
       %2619 = OpFAdd %float %2615 %2617
       %2620 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_1
       %2621 = OpLoad %float %2620
       %2622 = OpFMul %float %2618 %2621
       %2623 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_3
       %2624 = OpLoad %float %2623
       %2625 = OpFMul %float %2624 %2000
       %2626 = OpExtInst %float %1 Fma %2619 %2621 %2625
       %2627 = OpExtInst %float %1 Floor %2622
       %2628 = OpFNegate %float %2627
       %2629 = OpExtInst %float %1 Fma %2618 %2621 %2628
       %2630 = OpExtInst %float %1 Fma %2629 %float_2097152 %2626
       %2631 = OpExtInst %float %1 Floor %2630
       %2632 = OpFMul %float %2627 %float_n6_28318548
       %2633 = OpExtInst %float %1 Fma %2622 %float_6_28318548 %2632
       %2634 = OpFMul %float %2631 %float_n6_28318548
       %2635 = OpExtInst %float %1 Fma %2626 %float_6_28318548 %2634
       %2636 = OpExtInst %float %1 Fma %2633 %float_2097152 %2635
       %2637 = OpFMul %float %2600 %2599
       %2638 = OpExtInst %float %1 Sin %2636
       %2639 = OpFMul %float %2638 %2637
       %2640 = OpCompositeConstruct %v3float %551 %551 %2639
       %2641 = OpFAdd %v3float %2605 %2640
       %2642 = OpFSub %v3float %1690 %2566
       %2643 = OpExtInst %v3float %1 NMax %2642 %280
       %2644 = OpExtInst %v3float %1 NMin %2643 %128
       %2645 = OpCompositeExtract %float %2644 0
       %2646 = OpCompositeExtract %float %2644 1
       %2647 = OpCompositeConstruct %v2float %2645 %2646
       %2648 = OpFMul %v2float %1701 %2647
       %2649 = OpFMul %v2float %2647 %1702
       %2650 = OpCompositeExtract %float %2648 0
       %2651 = OpCompositeExtract %float %2649 0
       %2652 = OpCompositeExtract %float %2648 1
       %2653 = OpCompositeExtract %float %2649 1
       %2654 = OpFAdd %float %2650 %2652
       %2655 = OpFAdd %float %2651 %2653
       %2656 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_19 %int_2
       %2657 = OpLoad %float %2656
       %2658 = OpFMul %float %2654 %2657
       %2659 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_20 %int_0
       %2660 = OpLoad %float %2659
       %2661 = OpFMul %float %2660 %2000
       %2662 = OpExtInst %float %1 Fma %2655 %2657 %2661
       %2663 = OpExtInst %float %1 Floor %2658
       %2664 = OpFNegate %float %2663
       %2665 = OpExtInst %float %1 Fma %2654 %2657 %2664
       %2666 = OpExtInst %float %1 Fma %2665 %float_2097152 %2662
       %2667 = OpExtInst %float %1 Floor %2666
       %2668 = OpFMul %float %2663 %float_n6_28318548
       %2669 = OpExtInst %float %1 Fma %2658 %float_6_28318548 %2668
       %2670 = OpFMul %float %2667 %float_n6_28318548
       %2671 = OpExtInst %float %1 Fma %2662 %float_6_28318548 %2670
       %2672 = OpExtInst %float %1 Fma %2669 %float_2097152 %2671
       %2673 = OpFMul %float %2637 %2599
       %2674 = OpExtInst %float %1 Sin %2672
       %2675 = OpFMul %float %2674 %2673
       %2676 = OpCompositeConstruct %v3float %551 %551 %2675
       %2677 = OpFAdd %v3float %2641 %2676
       %2678 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_20 %int_3
       %2679 = OpLoad %float %2678
       %2680 = OpFSub %float %2679 %float_n1
       %2681 = OpExtInst %float %1 FAbs %2680
       %2682 = OpFOrdGreaterThan %bool %2681 %float_9_99999975en06
       %2683 = OpFOrdGreaterThanEqual %bool %2679 %float_n1
       %2684 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_21 %int_0
       %2685 = OpLoad %float %2684
       %2686 = OpSelect %float %2683 %2679 %2685
       %2687 = OpSelect %float %2682 %2686 %2679
       %2688 = OpFSub %float %2687 %float_1
       %2689 = OpExtInst %float %1 FAbs %2688
       %2690 = OpFOrdGreaterThan %bool %2689 %float_9_99999975en06
       %2691 = OpFOrdGreaterThanEqual %bool %2687 %float_1
       %2692 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_21 %int_1
       %2693 = OpLoad %float %2692
       %2694 = OpSelect %float %2691 %2693 %2679
       %2695 = OpSelect %float %2690 %2694 %2679
       %2696 = OpExtInst %float %1 FAbs %2695
       %2697 = OpFOrdGreaterThan %bool %2696 %float_9_99999975en06
       %2698 = OpFOrdGreaterThanEqual %bool %2695 %float_0
       %2699 = OpSelect %float %2698 %float_1 %float_n1
       %2700 = OpSelect %float %2697 %2699 %float_1
       %2701 = OpExtInst %float %1 NMax %2700 %float_n1
       %2702 = OpExtInst %float %1 NMin %2701 %float_1
       %2703 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_22 %int_2
       %2704 = OpLoad %float %2703
       %2705 = OpCompositeConstruct %v3float %2702 %2704 %float_0
       %2706 = OpFAdd %v3float %2705 %1693
       %2707 = OpExtInst %v3float %1 NMax %2706 %280
       %2708 = OpExtInst %v3float %1 NMin %2707 %128
       %2709 = OpCompositeExtract %float %2708 0
       %2710 = OpCompositeExtract %float %2708 1
       %2711 = OpCompositeConstruct %v2float %2709 %2710
       %2712 = OpFMul %v2float %1701 %2711
       %2713 = OpFMul %v2float %2711 %1702
       %2714 = OpCompositeExtract %float %2712 0
       %2715 = OpCompositeExtract %float %2713 0
       %2716 = OpCompositeExtract %float %2712 1
       %2717 = OpCompositeExtract %float %2713 1
       %2718 = OpFAdd %float %2714 %2716
       %2719 = OpFAdd %float %2715 %2717
       %2720 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_24 %int_3
       %2721 = OpLoad %float %2720
       %2722 = OpFMul %float %2718 %2721
       %2723 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_25 %int_2
       %2724 = OpLoad %float %2723
       %2725 = OpFMul %float %2724 %2000
       %2726 = OpExtInst %float %1 Fma %2719 %2721 %2725
       %2727 = OpExtInst %float %1 Floor %2722
       %2728 = OpFNegate %float %2727
       %2729 = OpExtInst %float %1 Fma %2718 %2721 %2728
       %2730 = OpExtInst %float %1 Fma %2729 %float_2097152 %2726
       %2731 = OpExtInst %float %1 Floor %2730
       %2732 = OpFMul %float %2727 %float_n6_28318548
       %2733 = OpExtInst %float %1 Fma %2722 %float_6_28318548 %2732
       %2734 = OpFMul %float %2731 %float_n6_28318548
       %2735 = OpExtInst %float %1 Fma %2726 %float_6_28318548 %2734
       %2736 = OpExtInst %float %1 Fma %2733 %float_2097152 %2735
       %2737 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_25 %int_3
       %2738 = OpLoad %float %2737
       %2739 = OpFMul %float %2561 %2738
       %2740 = OpExtInst %float %1 Sin %2736
       %2741 = OpFMul %float %2740 %2739
       %2742 = OpFAdd %v3float %2705 %2566
       %2743 = OpExtInst %v3float %1 NMax %2742 %280
       %2744 = OpExtInst %v3float %1 NMin %2743 %128
       %2745 = OpCompositeExtract %float %2744 0
       %2746 = OpCompositeExtract %float %2744 1
       %2747 = OpCompositeConstruct %v2float %2745 %2746
       %2748 = OpFMul %v2float %1701 %2747
       %2749 = OpFMul %v2float %2747 %1702
       %2750 = OpCompositeExtract %float %2748 0
       %2751 = OpCompositeExtract %float %2749 0
       %2752 = OpCompositeExtract %float %2748 1
       %2753 = OpCompositeExtract %float %2749 1
       %2754 = OpFAdd %float %2750 %2752
       %2755 = OpFAdd %float %2751 %2753
       %2756 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_26 %int_1
       %2757 = OpLoad %float %2756
       %2758 = OpFMul %float %2754 %2757
       %2759 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_26 %int_3
       %2760 = OpLoad %float %2759
       %2761 = OpFMul %float %2760 %2000
       %2762 = OpExtInst %float %1 Fma %2755 %2757 %2761
       %2763 = OpExtInst %float %1 Floor %2758
       %2764 = OpFNegate %float %2763
       %2765 = OpExtInst %float %1 Fma %2754 %2757 %2764
       %2766 = OpExtInst %float %1 Fma %2765 %float_2097152 %2762
       %2767 = OpExtInst %float %1 Floor %2766
       %2768 = OpFMul %float %2763 %float_n6_28318548
       %2769 = OpExtInst %float %1 Fma %2758 %float_6_28318548 %2768
       %2770 = OpFMul %float %2767 %float_n6_28318548
       %2771 = OpExtInst %float %1 Fma %2762 %float_6_28318548 %2770
       %2772 = OpExtInst %float %1 Fma %2769 %float_2097152 %2771
       %2773 = OpFMul %float %2739 %2599
       %2774 = OpExtInst %float %1 Sin %2772
       %2775 = OpFMul %float %2774 %2773
       %2776 = OpCompositeConstruct %v3float %551 %551 %2741
       %2777 = OpCompositeConstruct %v3float %551 %551 %2775
       %2778 = OpFAdd %v3float %2776 %2777
       %2779 = OpFSub %v3float %2705 %1693
       %2780 = OpExtInst %v3float %1 NMax %2779 %280
       %2781 = OpExtInst %v3float %1 NMin %2780 %128
       %2782 = OpCompositeExtract %float %2781 0
       %2783 = OpCompositeExtract %float %2781 1
       %2784 = OpCompositeConstruct %v2float %2782 %2783
       %2785 = OpFMul %v2float %1701 %2784
       %2786 = OpFMul %v2float %2784 %1702
       %2787 = OpCompositeExtract %float %2785 0
       %2788 = OpCompositeExtract %float %2786 0
       %2789 = OpCompositeExtract %float %2785 1
       %2790 = OpCompositeExtract %float %2786 1
       %2791 = OpFAdd %float %2787 %2789
       %2792 = OpFAdd %float %2788 %2790
       %2793 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_27 %int_1
       %2794 = OpLoad %float %2793
       %2795 = OpFMul %float %2791 %2794
       %2796 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_27 %int_3
       %2797 = OpLoad %float %2796
       %2798 = OpFMul %float %2797 %2000
       %2799 = OpExtInst %float %1 Fma %2792 %2794 %2798
       %2800 = OpExtInst %float %1 Floor %2795
       %2801 = OpFNegate %float %2800
       %2802 = OpExtInst %float %1 Fma %2791 %2794 %2801
       %2803 = OpExtInst %float %1 Fma %2802 %float_2097152 %2799
       %2804 = OpExtInst %float %1 Floor %2803
       %2805 = OpFMul %float %2800 %float_n6_28318548
       %2806 = OpExtInst %float %1 Fma %2795 %float_6_28318548 %2805
       %2807 = OpFMul %float %2804 %float_n6_28318548
       %2808 = OpExtInst %float %1 Fma %2799 %float_6_28318548 %2807
       %2809 = OpExtInst %float %1 Fma %2806 %float_2097152 %2808
       %2810 = OpFMul %float %2773 %2599
       %2811 = OpExtInst %float %1 Sin %2809
       %2812 = OpFMul %float %2811 %2810
       %2813 = OpCompositeConstruct %v3float %551 %551 %2812
       %2814 = OpFAdd %v3float %2778 %2813
       %2815 = OpFSub %v3float %2705 %2566
       %2816 = OpExtInst %v3float %1 NMax %2815 %280
       %2817 = OpExtInst %v3float %1 NMin %2816 %128
       %2818 = OpCompositeExtract %float %2817 0
       %2819 = OpCompositeExtract %float %2817 1
       %2820 = OpCompositeConstruct %v2float %2818 %2819
       %2821 = OpFMul %v2float %1701 %2820
       %2822 = OpFMul %v2float %2820 %1702
       %2823 = OpCompositeExtract %float %2821 0
       %2824 = OpCompositeExtract %float %2822 0
       %2825 = OpCompositeExtract %float %2821 1
       %2826 = OpCompositeExtract %float %2822 1
       %2827 = OpFAdd %float %2823 %2825
       %2828 = OpFAdd %float %2824 %2826
       %2829 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_28 %int_1
       %2830 = OpLoad %float %2829
       %2831 = OpFMul %float %2827 %2830
       %2832 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_28 %int_3
       %2833 = OpLoad %float %2832
       %2834 = OpFMul %float %2833 %2000
       %2835 = OpExtInst %float %1 Fma %2828 %2830 %2834
       %2836 = OpExtInst %float %1 Floor %2831
       %2837 = OpFNegate %float %2836
       %2838 = OpExtInst %float %1 Fma %2827 %2830 %2837
       %2839 = OpExtInst %float %1 Fma %2838 %float_2097152 %2835
       %2840 = OpExtInst %float %1 Floor %2839
       %2841 = OpFMul %float %2836 %float_n6_28318548
       %2842 = OpExtInst %float %1 Fma %2831 %float_6_28318548 %2841
       %2843 = OpFMul %float %2840 %float_n6_28318548
       %2844 = OpExtInst %float %1 Fma %2835 %float_6_28318548 %2843
       %2845 = OpExtInst %float %1 Fma %2842 %float_2097152 %2844
       %2846 = OpFMul %float %2810 %2599
       %2847 = OpExtInst %float %1 Sin %2845
       %2848 = OpFMul %float %2847 %2846
       %2849 = OpCompositeConstruct %v3float %551 %551 %2848
       %2850 = OpFAdd %v3float %2814 %2849
       %2851 = OpFAdd %v3float %2677 %2850
       %2852 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_29 %int_0
       %2853 = OpLoad %float %2852
       %2854 = OpFSub %float %2853 %float_n1
       %2855 = OpExtInst %float %1 FAbs %2854
       %2856 = OpFOrdGreaterThan %bool %2855 %float_9_99999975en06
       %2857 = OpFOrdGreaterThanEqual %bool %2853 %float_n1
       %2858 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_29 %int_1
       %2859 = OpLoad %float %2858
       %2860 = OpSelect %float %2857 %2853 %2859
       %2861 = OpSelect %float %2856 %2860 %2853
       %2862 = OpFSub %float %2861 %float_1
       %2863 = OpExtInst %float %1 FAbs %2862
       %2864 = OpFOrdGreaterThan %bool %2863 %float_9_99999975en06
       %2865 = OpFOrdGreaterThanEqual %bool %2861 %float_1
       %2866 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_29 %int_2
       %2867 = OpLoad %float %2866
       %2868 = OpSelect %float %2865 %2867 %2853
       %2869 = OpSelect %float %2864 %2868 %2853
       %2870 = OpExtInst %float %1 FAbs %2869
       %2871 = OpFOrdGreaterThan %bool %2870 %float_9_99999975en06
       %2872 = OpFOrdGreaterThanEqual %bool %2869 %float_0
       %2873 = OpSelect %float %2872 %float_1 %float_n1
       %2874 = OpSelect %float %2871 %2873 %float_1
       %2875 = OpExtInst %float %1 NMax %2874 %float_n1
       %2876 = OpExtInst %float %1 NMin %2875 %float_1
       %2877 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_30 %int_3
       %2878 = OpLoad %float %2877
       %2879 = OpCompositeConstruct %v3float %2876 %2878 %float_0
       %2880 = OpFAdd %v3float %2879 %1693
       %2881 = OpExtInst %v3float %1 NMax %2880 %280
       %2882 = OpExtInst %v3float %1 NMin %2881 %128
       %2883 = OpCompositeExtract %float %2882 0
       %2884 = OpCompositeExtract %float %2882 1
       %2885 = OpCompositeConstruct %v2float %2883 %2884
       %2886 = OpFMul %v2float %1701 %2885
       %2887 = OpFMul %v2float %2885 %1702
       %2888 = OpCompositeExtract %float %2886 0
       %2889 = OpCompositeExtract %float %2887 0
       %2890 = OpCompositeExtract %float %2886 1
       %2891 = OpCompositeExtract %float %2887 1
       %2892 = OpFAdd %float %2888 %2890
       %2893 = OpFAdd %float %2889 %2891
       %2894 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_32 %int_2
       %2895 = OpLoad %float %2894
       %2896 = OpFMul %float %2892 %2895
       %2897 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_32 %int_3
       %2898 = OpLoad %float %2897
       %2899 = OpFMul %float %2898 %2000
       %2900 = OpExtInst %float %1 Fma %2893 %2895 %2899
       %2901 = OpExtInst %float %1 Floor %2896
       %2902 = OpFNegate %float %2901
       %2903 = OpExtInst %float %1 Fma %2892 %2895 %2902
       %2904 = OpExtInst %float %1 Fma %2903 %float_2097152 %2900
       %2905 = OpExtInst %float %1 Floor %2904
       %2906 = OpFMul %float %2901 %float_n6_28318548
       %2907 = OpExtInst %float %1 Fma %2896 %float_6_28318548 %2906
       %2908 = OpFMul %float %2905 %float_n6_28318548
       %2909 = OpExtInst %float %1 Fma %2900 %float_6_28318548 %2908
       %2910 = OpExtInst %float %1 Fma %2907 %float_2097152 %2909
       %2911 = OpExtInst %float %1 Sin %2910
       %2912 = OpFMul %float %2911 %2739
       %2913 = OpFAdd %v3float %2879 %2566
       %2914 = OpExtInst %v3float %1 NMax %2913 %280
       %2915 = OpExtInst %v3float %1 NMin %2914 %128
       %2916 = OpCompositeExtract %float %2915 0
       %2917 = OpCompositeExtract %float %2915 1
       %2918 = OpCompositeConstruct %v2float %2916 %2917
       %2919 = OpFMul %v2float %1701 %2918
       %2920 = OpFMul %v2float %2918 %1702
       %2921 = OpCompositeExtract %float %2919 0
       %2922 = OpCompositeExtract %float %2920 0
       %2923 = OpCompositeExtract %float %2919 1
       %2924 = OpCompositeExtract %float %2920 1
       %2925 = OpFAdd %float %2921 %2923
       %2926 = OpFAdd %float %2922 %2924
       %2927 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_33 %int_1
       %2928 = OpLoad %float %2927
       %2929 = OpFMul %float %2925 %2928
       %2930 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_33 %int_2
       %2931 = OpLoad %float %2930
       %2932 = OpFMul %float %2931 %2000
       %2933 = OpExtInst %float %1 Fma %2926 %2928 %2932
       %2934 = OpExtInst %float %1 Floor %2929
       %2935 = OpFNegate %float %2934
       %2936 = OpExtInst %float %1 Fma %2925 %2928 %2935
       %2937 = OpExtInst %float %1 Fma %2936 %float_2097152 %2933
       %2938 = OpExtInst %float %1 Floor %2937
       %2939 = OpFMul %float %2934 %float_n6_28318548
       %2940 = OpExtInst %float %1 Fma %2929 %float_6_28318548 %2939
       %2941 = OpFMul %float %2938 %float_n6_28318548
       %2942 = OpExtInst %float %1 Fma %2933 %float_6_28318548 %2941
       %2943 = OpExtInst %float %1 Fma %2940 %float_2097152 %2942
       %2944 = OpExtInst %float %1 Sin %2943
       %2945 = OpFMul %float %2944 %2773
       %2946 = OpCompositeConstruct %v3float %551 %551 %2912
       %2947 = OpCompositeConstruct %v3float %551 %551 %2945
       %2948 = OpFAdd %v3float %2946 %2947
       %2949 = OpFSub %v3float %2879 %1693
       %2950 = OpExtInst %v3float %1 NMax %2949 %280
       %2951 = OpExtInst %v3float %1 NMin %2950 %128
       %2952 = OpCompositeExtract %float %2951 0
       %2953 = OpCompositeExtract %float %2951 1
       %2954 = OpCompositeConstruct %v2float %2952 %2953
       %2955 = OpFMul %v2float %1701 %2954
       %2956 = OpFMul %v2float %2954 %1702
       %2957 = OpCompositeExtract %float %2955 0
       %2958 = OpCompositeExtract %float %2956 0
       %2959 = OpCompositeExtract %float %2955 1
       %2960 = OpCompositeExtract %float %2956 1
       %2961 = OpFAdd %float %2957 %2959
       %2962 = OpFAdd %float %2958 %2960
       %2963 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_0
       %2964 = OpLoad %float %2963
       %2965 = OpFMul %float %2961 %2964
       %2966 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_1
       %2967 = OpLoad %float %2966
       %2968 = OpFMul %float %2967 %2000
       %2969 = OpExtInst %float %1 Fma %2962 %2964 %2968
       %2970 = OpExtInst %float %1 Floor %2965
       %2971 = OpFNegate %float %2970
       %2972 = OpExtInst %float %1 Fma %2961 %2964 %2971
       %2973 = OpExtInst %float %1 Fma %2972 %float_2097152 %2969
       %2974 = OpExtInst %float %1 Floor %2973
       %2975 = OpFMul %float %2970 %float_n6_28318548
       %2976 = OpExtInst %float %1 Fma %2965 %float_6_28318548 %2975
       %2977 = OpFMul %float %2974 %float_n6_28318548
       %2978 = OpExtInst %float %1 Fma %2969 %float_6_28318548 %2977
       %2979 = OpExtInst %float %1 Fma %2976 %float_2097152 %2978
       %2980 = OpExtInst %float %1 Sin %2979
       %2981 = OpFMul %float %2980 %2810
       %2982 = OpCompositeConstruct %v3float %551 %551 %2981
       %2983 = OpFAdd %v3float %2948 %2982
       %2984 = OpFSub %v3float %2879 %2566
       %2985 = OpExtInst %v3float %1 NMax %2984 %280
       %2986 = OpExtInst %v3float %1 NMin %2985 %128
       %2987 = OpCompositeExtract %float %2986 0
       %2988 = OpCompositeExtract %float %2986 1
       %2989 = OpCompositeConstruct %v2float %2987 %2988
       %2990 = OpFMul %v2float %1701 %2989
       %2991 = OpFMul %v2float %2989 %1702
       %2992 = OpCompositeExtract %float %2990 0
       %2993 = OpCompositeExtract %float %2991 0
       %2994 = OpCompositeExtract %float %2990 1
       %2995 = OpCompositeExtract %float %2991 1
       %2996 = OpFAdd %float %2992 %2994
       %2997 = OpFAdd %float %2993 %2995
       %2998 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_3
       %2999 = OpLoad %float %2998
       %3000 = OpFMul %float %2996 %2999
       %3001 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_0
       %3002 = OpLoad %float %3001
       %3003 = OpFMul %float %3002 %2000
       %3004 = OpExtInst %float %1 Fma %2997 %2999 %3003
       %3005 = OpExtInst %float %1 Floor %3000
       %3006 = OpFNegate %float %3005
       %3007 = OpExtInst %float %1 Fma %2996 %2999 %3006
       %3008 = OpExtInst %float %1 Fma %3007 %float_2097152 %3004
       %3009 = OpExtInst %float %1 Floor %3008
       %3010 = OpFMul %float %3005 %float_n6_28318548
       %3011 = OpExtInst %float %1 Fma %3000 %float_6_28318548 %3010
       %3012 = OpFMul %float %3009 %float_n6_28318548
       %3013 = OpExtInst %float %1 Fma %3004 %float_6_28318548 %3012
       %3014 = OpExtInst %float %1 Fma %3011 %float_2097152 %3013
       %3015 = OpExtInst %float %1 Sin %3014
       %3016 = OpFMul %float %3015 %2846
       %3017 = OpCompositeConstruct %v3float %551 %551 %3016
       %3018 = OpFAdd %v3float %2983 %3017
       %3019 = OpFAdd %v3float %2851 %3018
       %3020 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_1
       %3021 = OpLoad %float %3020
       %3022 = OpFSub %float %3021 %float_n1
       %3023 = OpExtInst %float %1 FAbs %3022
       %3024 = OpFOrdGreaterThan %bool %3023 %float_9_99999975en06
       %3025 = OpFOrdGreaterThanEqual %bool %3021 %float_n1
       %3026 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_2
       %3027 = OpLoad %float %3026
       %3028 = OpSelect %float %3025 %3021 %3027
       %3029 = OpSelect %float %3024 %3028 %3021
       %3030 = OpFSub %float %3029 %float_1
       %3031 = OpExtInst %float %1 FAbs %3030
       %3032 = OpFOrdGreaterThan %bool %3031 %float_9_99999975en06
       %3033 = OpFOrdGreaterThanEqual %bool %3029 %float_1
       %3034 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_3
       %3035 = OpLoad %float %3034
       %3036 = OpSelect %float %3033 %3035 %3021
       %3037 = OpSelect %float %3032 %3036 %3021
       %3038 = OpExtInst %float %1 FAbs %3037
       %3039 = OpFOrdGreaterThan %bool %3038 %float_9_99999975en06
       %3040 = OpFOrdGreaterThanEqual %bool %3037 %float_0
       %3041 = OpSelect %float %3040 %float_1 %float_n1
       %3042 = OpSelect %float %3039 %3041 %float_1
       %3043 = OpExtInst %float %1 NMax %3042 %float_n1
       %3044 = OpExtInst %float %1 NMin %3043 %float_1
       %3045 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_37 %int_0
       %3046 = OpLoad %float %3045
       %3047 = OpCompositeConstruct %v3float %3044 %3046 %float_0
       %3048 = OpFAdd %v3float %3047 %1693
       %3049 = OpExtInst %v3float %1 NMax %3048 %280
       %3050 = OpExtInst %v3float %1 NMin %3049 %128
       %3051 = OpCompositeExtract %float %3050 0
       %3052 = OpCompositeExtract %float %3050 1
       %3053 = OpCompositeConstruct %v2float %3051 %3052
       %3054 = OpFMul %v2float %1701 %3053
       %3055 = OpFMul %v2float %3053 %1702
       %3056 = OpCompositeExtract %float %3054 0
       %3057 = OpCompositeExtract %float %3055 0
       %3058 = OpCompositeExtract %float %3054 1
       %3059 = OpCompositeExtract %float %3055 1
       %3060 = OpFAdd %float %3056 %3058
       %3061 = OpFAdd %float %3057 %3059
       %3062 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_38 %int_3
       %3063 = OpLoad %float %3062
       %3064 = OpFMul %float %3060 %3063
       %3065 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_0
       %3066 = OpLoad %float %3065
       %3067 = OpFMul %float %3066 %2000
       %3068 = OpExtInst %float %1 Fma %3061 %3063 %3067
       %3069 = OpExtInst %float %1 Floor %3064
       %3070 = OpFNegate %float %3069
       %3071 = OpExtInst %float %1 Fma %3060 %3063 %3070
       %3072 = OpExtInst %float %1 Fma %3071 %float_2097152 %3068
       %3073 = OpExtInst %float %1 Floor %3072
       %3074 = OpFMul %float %3069 %float_n6_28318548
       %3075 = OpExtInst %float %1 Fma %3064 %float_6_28318548 %3074
       %3076 = OpFMul %float %3073 %float_n6_28318548
       %3077 = OpExtInst %float %1 Fma %3068 %float_6_28318548 %3076
       %3078 = OpExtInst %float %1 Fma %3075 %float_2097152 %3077
       %3079 = OpExtInst %float %1 Sin %3078
       %3080 = OpFMul %float %3079 %2561
       %3081 = OpFAdd %v3float %3047 %2566
       %3082 = OpExtInst %v3float %1 NMax %3081 %280
       %3083 = OpExtInst %v3float %1 NMin %3082 %128
       %3084 = OpCompositeExtract %float %3083 0
       %3085 = OpCompositeExtract %float %3083 1
       %3086 = OpCompositeConstruct %v2float %3084 %3085
       %3087 = OpFMul %v2float %1701 %3086
       %3088 = OpFMul %v2float %3086 %1702
       %3089 = OpCompositeExtract %float %3087 0
       %3090 = OpCompositeExtract %float %3088 0
       %3091 = OpCompositeExtract %float %3087 1
       %3092 = OpCompositeExtract %float %3088 1
       %3093 = OpFAdd %float %3089 %3091
       %3094 = OpFAdd %float %3090 %3092
       %3095 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_2
       %3096 = OpLoad %float %3095
       %3097 = OpFMul %float %3093 %3096
       %3098 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_3
       %3099 = OpLoad %float %3098
       %3100 = OpFMul %float %3099 %2000
       %3101 = OpExtInst %float %1 Fma %3094 %3096 %3100
       %3102 = OpExtInst %float %1 Floor %3097
       %3103 = OpFNegate %float %3102
       %3104 = OpExtInst %float %1 Fma %3093 %3096 %3103
       %3105 = OpExtInst %float %1 Fma %3104 %float_2097152 %3101
       %3106 = OpExtInst %float %1 Floor %3105
       %3107 = OpFMul %float %3102 %float_n6_28318548
       %3108 = OpExtInst %float %1 Fma %3097 %float_6_28318548 %3107
       %3109 = OpFMul %float %3106 %float_n6_28318548
       %3110 = OpExtInst %float %1 Fma %3101 %float_6_28318548 %3109
       %3111 = OpExtInst %float %1 Fma %3108 %float_2097152 %3110
       %3112 = OpExtInst %float %1 Sin %3111
       %3113 = OpFMul %float %3112 %2600
       %3114 = OpCompositeConstruct %v3float %551 %551 %3080
       %3115 = OpCompositeConstruct %v3float %551 %551 %3113
       %3116 = OpFAdd %v3float %3114 %3115
       %3117 = OpFSub %v3float %3047 %1693
       %3118 = OpExtInst %v3float %1 NMax %3117 %280
       %3119 = OpExtInst %v3float %1 NMin %3118 %128
       %3120 = OpCompositeExtract %float %3119 0
       %3121 = OpCompositeExtract %float %3119 1
       %3122 = OpCompositeConstruct %v2float %3120 %3121
       %3123 = OpFMul %v2float %1701 %3122
       %3124 = OpFMul %v2float %3122 %1702
       %3125 = OpCompositeExtract %float %3123 0
       %3126 = OpCompositeExtract %float %3124 0
       %3127 = OpCompositeExtract %float %3123 1
       %3128 = OpCompositeExtract %float %3124 1
       %3129 = OpFAdd %float %3125 %3127
       %3130 = OpFAdd %float %3126 %3128
       %3131 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_1
       %3132 = OpLoad %float %3131
       %3133 = OpFMul %float %3129 %3132
       %3134 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_2
       %3135 = OpLoad %float %3134
       %3136 = OpFMul %float %3135 %2000
       %3137 = OpExtInst %float %1 Fma %3130 %3132 %3136
       %3138 = OpExtInst %float %1 Floor %3133
       %3139 = OpFNegate %float %3138
       %3140 = OpExtInst %float %1 Fma %3129 %3132 %3139
       %3141 = OpExtInst %float %1 Fma %3140 %float_2097152 %3137
       %3142 = OpExtInst %float %1 Floor %3141
       %3143 = OpFMul %float %3138 %float_n6_28318548
       %3144 = OpExtInst %float %1 Fma %3133 %float_6_28318548 %3143
       %3145 = OpFMul %float %3142 %float_n6_28318548
       %3146 = OpExtInst %float %1 Fma %3137 %float_6_28318548 %3145
       %3147 = OpExtInst %float %1 Fma %3144 %float_2097152 %3146
       %3148 = OpExtInst %float %1 Sin %3147
       %3149 = OpFMul %float %3148 %2637
       %3150 = OpCompositeConstruct %v3float %551 %551 %3149
       %3151 = OpFAdd %v3float %3116 %3150
       %3152 = OpFSub %v3float %3047 %2566
       %3153 = OpExtInst %v3float %1 NMax %3152 %280
       %3154 = OpExtInst %v3float %1 NMin %3153 %128
       %3155 = OpCompositeExtract %float %3154 0
       %3156 = OpCompositeExtract %float %3154 1
       %3157 = OpCompositeConstruct %v2float %3155 %3156
       %3158 = OpFMul %v2float %1701 %3157
       %3159 = OpFMul %v2float %3157 %1702
       %3160 = OpCompositeExtract %float %3158 0
       %3161 = OpCompositeExtract %float %3159 0
       %3162 = OpCompositeExtract %float %3158 1
       %3163 = OpCompositeExtract %float %3159 1
       %3164 = OpFAdd %float %3160 %3162
       %3165 = OpFAdd %float %3161 %3163
       %3166 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_41 %int_0
       %3167 = OpLoad %float %3166
       %3168 = OpFMul %float %3164 %3167
       %3169 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_41 %int_1
       %3170 = OpLoad %float %3169
       %3171 = OpFMul %float %3170 %2000
       %3172 = OpExtInst %float %1 Fma %3165 %3167 %3171
       %3173 = OpExtInst %float %1 Floor %3168
       %3174 = OpFNegate %float %3173
       %3175 = OpExtInst %float %1 Fma %3164 %3167 %3174
       %3176 = OpExtInst %float %1 Fma %3175 %float_2097152 %3172
       %3177 = OpExtInst %float %1 Floor %3176
       %3178 = OpFMul %float %3173 %float_n6_28318548
       %3179 = OpExtInst %float %1 Fma %3168 %float_6_28318548 %3178
       %3180 = OpFMul %float %3177 %float_n6_28318548
       %3181 = OpExtInst %float %1 Fma %3172 %float_6_28318548 %3180
       %3182 = OpExtInst %float %1 Fma %3179 %float_2097152 %3181
       %3183 = OpExtInst %float %1 Sin %3182
       %3184 = OpFMul %float %3183 %2673
       %3185 = OpCompositeConstruct %v3float %551 %551 %3184
       %3186 = OpFAdd %v3float %3151 %3185
       %3187 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_41 %int_2
       %3188 = OpLoad %float %3187
       %3189 = OpFSub %float %3188 %float_n1
       %3190 = OpExtInst %float %1 FAbs %3189
       %3191 = OpFOrdGreaterThan %bool %3190 %float_9_99999975en06
       %3192 = OpFOrdGreaterThanEqual %bool %3188 %float_n1
       %3193 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_41 %int_3
       %3194 = OpLoad %float %3193
       %3195 = OpSelect %float %3192 %3188 %3194
       %3196 = OpSelect %float %3191 %3195 %3188
       %3197 = OpFSub %float %3196 %float_1
       %3198 = OpExtInst %float %1 FAbs %3197
       %3199 = OpFOrdGreaterThan %bool %3198 %float_9_99999975en06
       %3200 = OpFOrdGreaterThanEqual %bool %3196 %float_1
       %3201 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_42 %int_0
       %3202 = OpLoad %float %3201
       %3203 = OpSelect %float %3200 %3202 %3188
       %3204 = OpSelect %float %3199 %3203 %3188
       %3205 = OpExtInst %float %1 FAbs %3204
       %3206 = OpFOrdGreaterThan %bool %3205 %float_9_99999975en06
       %3207 = OpFOrdGreaterThanEqual %bool %3204 %float_0
       %3208 = OpSelect %float %3207 %float_1 %float_n1
       %3209 = OpSelect %float %3206 %3208 %float_1
       %3210 = OpExtInst %float %1 NMax %3209 %float_n1
       %3211 = OpExtInst %float %1 NMin %3210 %float_1
       %3212 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_43 %int_1
       %3213 = OpLoad %float %3212
       %3214 = OpCompositeConstruct %v3float %3211 %3213 %float_0
       %3215 = OpFAdd %v3float %3214 %1693
       %3216 = OpExtInst %v3float %1 NMax %3215 %280
       %3217 = OpExtInst %v3float %1 NMin %3216 %128
       %3218 = OpCompositeExtract %float %3217 0
       %3219 = OpCompositeExtract %float %3217 1
       %3220 = OpCompositeConstruct %v2float %3218 %3219
       %3221 = OpFMul %v2float %1701 %3220
       %3222 = OpFMul %v2float %3220 %1702
       %3223 = OpCompositeExtract %float %3221 0
       %3224 = OpCompositeExtract %float %3222 0
       %3225 = OpCompositeExtract %float %3221 1
       %3226 = OpCompositeExtract %float %3222 1
       %3227 = OpFAdd %float %3223 %3225
       %3228 = OpFAdd %float %3224 %3226
       %3229 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_0
       %3230 = OpLoad %float %3229
       %3231 = OpFMul %float %3227 %3230
       %3232 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_1
       %3233 = OpLoad %float %3232
       %3234 = OpFMul %float %3233 %2000
       %3235 = OpExtInst %float %1 Fma %3228 %3230 %3234
       %3236 = OpExtInst %float %1 Floor %3231
       %3237 = OpFNegate %float %3236
       %3238 = OpExtInst %float %1 Fma %3227 %3230 %3237
       %3239 = OpExtInst %float %1 Fma %3238 %float_2097152 %3235
       %3240 = OpExtInst %float %1 Floor %3239
       %3241 = OpFMul %float %3236 %float_n6_28318548
       %3242 = OpExtInst %float %1 Fma %3231 %float_6_28318548 %3241
       %3243 = OpFMul %float %3240 %float_n6_28318548
       %3244 = OpExtInst %float %1 Fma %3235 %float_6_28318548 %3243
       %3245 = OpExtInst %float %1 Fma %3242 %float_2097152 %3244
       %3246 = OpExtInst %float %1 Sin %3245
       %3247 = OpFMul %float %3246 %2739
       %3248 = OpFAdd %v3float %3214 %2566
       %3249 = OpExtInst %v3float %1 NMax %3248 %280
       %3250 = OpExtInst %v3float %1 NMin %3249 %128
       %3251 = OpCompositeExtract %float %3250 0
       %3252 = OpCompositeExtract %float %3250 1
       %3253 = OpCompositeConstruct %v2float %3251 %3252
       %3254 = OpFMul %v2float %1701 %3253
       %3255 = OpFMul %v2float %3253 %1702
       %3256 = OpCompositeExtract %float %3254 0
       %3257 = OpCompositeExtract %float %3255 0
       %3258 = OpCompositeExtract %float %3254 1
       %3259 = OpCompositeExtract %float %3255 1
       %3260 = OpFAdd %float %3256 %3258
       %3261 = OpFAdd %float %3257 %3259
       %3262 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_3
       %3263 = OpLoad %float %3262
       %3264 = OpFMul %float %3260 %3263
       %3265 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_0
       %3266 = OpLoad %float %3265
       %3267 = OpFMul %float %3266 %2000
       %3268 = OpExtInst %float %1 Fma %3261 %3263 %3267
       %3269 = OpExtInst %float %1 Floor %3264
       %3270 = OpFNegate %float %3269
       %3271 = OpExtInst %float %1 Fma %3260 %3263 %3270
       %3272 = OpExtInst %float %1 Fma %3271 %float_2097152 %3268
       %3273 = OpExtInst %float %1 Floor %3272
       %3274 = OpFMul %float %3269 %float_n6_28318548
       %3275 = OpExtInst %float %1 Fma %3264 %float_6_28318548 %3274
       %3276 = OpFMul %float %3273 %float_n6_28318548
       %3277 = OpExtInst %float %1 Fma %3268 %float_6_28318548 %3276
       %3278 = OpExtInst %float %1 Fma %3275 %float_2097152 %3277
       %3279 = OpExtInst %float %1 Sin %3278
       %3280 = OpFMul %float %3279 %2773
       %3281 = OpCompositeConstruct %v3float %551 %551 %3247
       %3282 = OpCompositeConstruct %v3float %551 %551 %3280
       %3283 = OpFAdd %v3float %3281 %3282
       %3284 = OpFSub %v3float %3214 %1693
       %3285 = OpExtInst %v3float %1 NMax %3284 %280
       %3286 = OpExtInst %v3float %1 NMin %3285 %128
       %3287 = OpCompositeExtract %float %3286 0
       %3288 = OpCompositeExtract %float %3286 1
       %3289 = OpCompositeConstruct %v2float %3287 %3288
       %3290 = OpFMul %v2float %1701 %3289
       %3291 = OpFMul %v2float %3289 %1702
       %3292 = OpCompositeExtract %float %3290 0
       %3293 = OpCompositeExtract %float %3291 0
       %3294 = OpCompositeExtract %float %3290 1
       %3295 = OpCompositeExtract %float %3291 1
       %3296 = OpFAdd %float %3292 %3294
       %3297 = OpFAdd %float %3293 %3295
       %3298 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_2
       %3299 = OpLoad %float %3298
       %3300 = OpFMul %float %3296 %3299
       %3301 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_3
       %3302 = OpLoad %float %3301
       %3303 = OpFMul %float %3302 %2000
       %3304 = OpExtInst %float %1 Fma %3297 %3299 %3303
       %3305 = OpExtInst %float %1 Floor %3300
       %3306 = OpFNegate %float %3305
       %3307 = OpExtInst %float %1 Fma %3296 %3299 %3306
       %3308 = OpExtInst %float %1 Fma %3307 %float_2097152 %3304
       %3309 = OpExtInst %float %1 Floor %3308
       %3310 = OpFMul %float %3305 %float_n6_28318548
       %3311 = OpExtInst %float %1 Fma %3300 %float_6_28318548 %3310
       %3312 = OpFMul %float %3309 %float_n6_28318548
       %3313 = OpExtInst %float %1 Fma %3304 %float_6_28318548 %3312
       %3314 = OpExtInst %float %1 Fma %3311 %float_2097152 %3313
       %3315 = OpExtInst %float %1 Sin %3314
       %3316 = OpFMul %float %3315 %2810
       %3317 = OpCompositeConstruct %v3float %551 %551 %3316
       %3318 = OpFAdd %v3float %3283 %3317
       %3319 = OpFSub %v3float %3214 %2566
       %3320 = OpExtInst %v3float %1 NMax %3319 %280
       %3321 = OpExtInst %v3float %1 NMin %3320 %128
       %3322 = OpCompositeExtract %float %3321 0
       %3323 = OpCompositeExtract %float %3321 1
       %3324 = OpCompositeConstruct %v2float %3322 %3323
       %3325 = OpFMul %v2float %1701 %3324
       %3326 = OpFMul %v2float %3324 %1702
       %3327 = OpCompositeExtract %float %3325 0
       %3328 = OpCompositeExtract %float %3326 0
       %3329 = OpCompositeExtract %float %3325 1
       %3330 = OpCompositeExtract %float %3326 1
       %3331 = OpFAdd %float %3327 %3329
       %3332 = OpFAdd %float %3328 %3330
       %3333 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_47 %int_1
       %3334 = OpLoad %float %3333
       %3335 = OpFMul %float %3331 %3334
       %3336 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_47 %int_2
       %3337 = OpLoad %float %3336
       %3338 = OpFMul %float %3337 %2000
       %3339 = OpExtInst %float %1 Fma %3332 %3334 %3338
       %3340 = OpExtInst %float %1 Floor %3335
       %3341 = OpFNegate %float %3340
       %3342 = OpExtInst %float %1 Fma %3331 %3334 %3341
       %3343 = OpExtInst %float %1 Fma %3342 %float_2097152 %3339
       %3344 = OpExtInst %float %1 Floor %3343
       %3345 = OpFMul %float %3340 %float_n6_28318548
       %3346 = OpExtInst %float %1 Fma %3335 %float_6_28318548 %3345
       %3347 = OpFMul %float %3344 %float_n6_28318548
       %3348 = OpExtInst %float %1 Fma %3339 %float_6_28318548 %3347
       %3349 = OpExtInst %float %1 Fma %3346 %float_2097152 %3348
       %3350 = OpExtInst %float %1 Sin %3349
       %3351 = OpFMul %float %3350 %2846
       %3352 = OpCompositeConstruct %v3float %551 %551 %3351
       %3353 = OpFAdd %v3float %3318 %3352
       %3354 = OpFAdd %v3float %3186 %3353
       %3355 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_47 %int_3
       %3356 = OpLoad %float %3355
       %3357 = OpFSub %float %3356 %float_n1
       %3358 = OpExtInst %float %1 FAbs %3357
       %3359 = OpFOrdGreaterThan %bool %3358 %float_9_99999975en06
       %3360 = OpFOrdGreaterThanEqual %bool %3356 %float_n1
       %3361 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_48 %int_0
       %3362 = OpLoad %float %3361
       %3363 = OpSelect %float %3360 %3356 %3362
       %3364 = OpSelect %float %3359 %3363 %3356
       %3365 = OpFSub %float %3364 %float_1
       %3366 = OpExtInst %float %1 FAbs %3365
       %3367 = OpFOrdGreaterThan %bool %3366 %float_9_99999975en06
       %3368 = OpFOrdGreaterThanEqual %bool %3364 %float_1
       %3369 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_48 %int_1
       %3370 = OpLoad %float %3369
       %3371 = OpSelect %float %3368 %3370 %3356
       %3372 = OpSelect %float %3367 %3371 %3356
       %3373 = OpExtInst %float %1 FAbs %3372
       %3374 = OpFOrdGreaterThan %bool %3373 %float_9_99999975en06
       %3375 = OpFOrdGreaterThanEqual %bool %3372 %float_0
       %3376 = OpSelect %float %3375 %float_1 %float_n1
       %3377 = OpSelect %float %3374 %3376 %float_1
       %3378 = OpExtInst %float %1 NMax %3377 %float_n1
       %3379 = OpExtInst %float %1 NMin %3378 %float_1
       %3380 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_49 %int_2
       %3381 = OpLoad %float %3380
       %3382 = OpCompositeConstruct %v3float %3379 %3381 %float_0
       %3383 = OpFAdd %v3float %3382 %1693
       %3384 = OpExtInst %v3float %1 NMax %3383 %280
       %3385 = OpExtInst %v3float %1 NMin %3384 %128
       %3386 = OpCompositeExtract %float %3385 0
       %3387 = OpCompositeExtract %float %3385 1
       %3388 = OpCompositeConstruct %v2float %3386 %3387
       %3389 = OpFMul %v2float %1701 %3388
       %3390 = OpFMul %v2float %3388 %1702
       %3391 = OpCompositeExtract %float %3389 0
       %3392 = OpCompositeExtract %float %3390 0
       %3393 = OpCompositeExtract %float %3389 1
       %3394 = OpCompositeExtract %float %3390 1
       %3395 = OpFAdd %float %3391 %3393
       %3396 = OpFAdd %float %3392 %3394
       %3397 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_1
       %3398 = OpLoad %float %3397
       %3399 = OpFMul %float %3395 %3398
       %3400 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_2
       %3401 = OpLoad %float %3400
       %3402 = OpFMul %float %3401 %2000
       %3403 = OpExtInst %float %1 Fma %3396 %3398 %3402
       %3404 = OpExtInst %float %1 Floor %3399
       %3405 = OpFNegate %float %3404
       %3406 = OpExtInst %float %1 Fma %3395 %3398 %3405
       %3407 = OpExtInst %float %1 Fma %3406 %float_2097152 %3403
       %3408 = OpExtInst %float %1 Floor %3407
       %3409 = OpFMul %float %3404 %float_n6_28318548
       %3410 = OpExtInst %float %1 Fma %3399 %float_6_28318548 %3409
       %3411 = OpFMul %float %3408 %float_n6_28318548
       %3412 = OpExtInst %float %1 Fma %3403 %float_6_28318548 %3411
       %3413 = OpExtInst %float %1 Fma %3410 %float_2097152 %3412
       %3414 = OpExtInst %float %1 Sin %3413
       %3415 = OpFMul %float %3414 %2739
       %3416 = OpFAdd %v3float %3382 %2566
       %3417 = OpExtInst %v3float %1 NMax %3416 %280
       %3418 = OpExtInst %v3float %1 NMin %3417 %128
       %3419 = OpCompositeExtract %float %3418 0
       %3420 = OpCompositeExtract %float %3418 1
       %3421 = OpCompositeConstruct %v2float %3419 %3420
       %3422 = OpFMul %v2float %1701 %3421
       %3423 = OpFMul %v2float %3421 %1702
       %3424 = OpCompositeExtract %float %3422 0
       %3425 = OpCompositeExtract %float %3423 0
       %3426 = OpCompositeExtract %float %3422 1
       %3427 = OpCompositeExtract %float %3423 1
       %3428 = OpFAdd %float %3424 %3426
       %3429 = OpFAdd %float %3425 %3427
       %3430 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_0
       %3431 = OpLoad %float %3430
       %3432 = OpFMul %float %3428 %3431
       %3433 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_1
       %3434 = OpLoad %float %3433
       %3435 = OpFMul %float %3434 %2000
       %3436 = OpExtInst %float %1 Fma %3429 %3431 %3435
       %3437 = OpExtInst %float %1 Floor %3432
       %3438 = OpFNegate %float %3437
       %3439 = OpExtInst %float %1 Fma %3428 %3431 %3438
       %3440 = OpExtInst %float %1 Fma %3439 %float_2097152 %3436
       %3441 = OpExtInst %float %1 Floor %3440
       %3442 = OpFMul %float %3437 %float_n6_28318548
       %3443 = OpExtInst %float %1 Fma %3432 %float_6_28318548 %3442
       %3444 = OpFMul %float %3441 %float_n6_28318548
       %3445 = OpExtInst %float %1 Fma %3436 %float_6_28318548 %3444
       %3446 = OpExtInst %float %1 Fma %3443 %float_2097152 %3445
       %3447 = OpExtInst %float %1 Sin %3446
       %3448 = OpFMul %float %3447 %2773
       %3449 = OpCompositeConstruct %v3float %551 %551 %3415
       %3450 = OpCompositeConstruct %v3float %551 %551 %3448
       %3451 = OpFAdd %v3float %3449 %3450
       %3452 = OpFSub %v3float %3382 %1693
       %3453 = OpExtInst %v3float %1 NMax %3452 %280
       %3454 = OpExtInst %v3float %1 NMin %3453 %128
       %3455 = OpCompositeExtract %float %3454 0
       %3456 = OpCompositeExtract %float %3454 1
       %3457 = OpCompositeConstruct %v2float %3455 %3456
       %3458 = OpFMul %v2float %1701 %3457
       %3459 = OpFMul %v2float %3457 %1702
       %3460 = OpCompositeExtract %float %3458 0
       %3461 = OpCompositeExtract %float %3459 0
       %3462 = OpCompositeExtract %float %3458 1
       %3463 = OpCompositeExtract %float %3459 1
       %3464 = OpFAdd %float %3460 %3462
       %3465 = OpFAdd %float %3461 %3463
       %3466 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_3
       %3467 = OpLoad %float %3466
       %3468 = OpFMul %float %3464 %3467
       %3469 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_0
       %3470 = OpLoad %float %3469
       %3471 = OpFMul %float %3470 %2000
       %3472 = OpExtInst %float %1 Fma %3465 %3467 %3471
       %3473 = OpExtInst %float %1 Floor %3468
       %3474 = OpFNegate %float %3473
       %3475 = OpExtInst %float %1 Fma %3464 %3467 %3474
       %3476 = OpExtInst %float %1 Fma %3475 %float_2097152 %3472
       %3477 = OpExtInst %float %1 Floor %3476
       %3478 = OpFMul %float %3473 %float_n6_28318548
       %3479 = OpExtInst %float %1 Fma %3468 %float_6_28318548 %3478
       %3480 = OpFMul %float %3477 %float_n6_28318548
       %3481 = OpExtInst %float %1 Fma %3472 %float_6_28318548 %3480
       %3482 = OpExtInst %float %1 Fma %3479 %float_2097152 %3481
       %3483 = OpExtInst %float %1 Sin %3482
       %3484 = OpFMul %float %3483 %2810
       %3485 = OpCompositeConstruct %v3float %551 %551 %3484
       %3486 = OpFAdd %v3float %3451 %3485
       %3487 = OpFSub %v3float %3382 %2566
       %3488 = OpExtInst %v3float %1 NMax %3487 %280
       %3489 = OpExtInst %v3float %1 NMin %3488 %128
       %3490 = OpCompositeExtract %float %3489 0
       %3491 = OpCompositeExtract %float %3489 1
       %3492 = OpCompositeConstruct %v2float %3490 %3491
       %3493 = OpFMul %v2float %1701 %3492
       %3494 = OpFMul %v2float %3492 %1702
       %3495 = OpCompositeExtract %float %3493 0
       %3496 = OpCompositeExtract %float %3494 0
       %3497 = OpCompositeExtract %float %3493 1
       %3498 = OpCompositeExtract %float %3494 1
       %3499 = OpFAdd %float %3495 %3497
       %3500 = OpFAdd %float %3496 %3498
       %3501 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_2
       %3502 = OpLoad %float %3501
       %3503 = OpFMul %float %3499 %3502
       %3504 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_3
       %3505 = OpLoad %float %3504
       %3506 = OpFMul %float %3505 %2000
       %3507 = OpExtInst %float %1 Fma %3500 %3502 %3506
       %3508 = OpExtInst %float %1 Floor %3503
       %3509 = OpFNegate %float %3508
       %3510 = OpExtInst %float %1 Fma %3499 %3502 %3509
       %3511 = OpExtInst %float %1 Fma %3510 %float_2097152 %3507
       %3512 = OpExtInst %float %1 Floor %3511
       %3513 = OpFMul %float %3508 %float_n6_28318548
       %3514 = OpExtInst %float %1 Fma %3503 %float_6_28318548 %3513
       %3515 = OpFMul %float %3512 %float_n6_28318548
       %3516 = OpExtInst %float %1 Fma %3507 %float_6_28318548 %3515
       %3517 = OpExtInst %float %1 Fma %3514 %float_2097152 %3516
       %3518 = OpExtInst %float %1 Sin %3517
       %3519 = OpFMul %float %3518 %2846
       %3520 = OpCompositeConstruct %v3float %551 %551 %3519
       %3521 = OpFAdd %v3float %3486 %3520
       %3522 = OpFAdd %v3float %3354 %3521
       %3523 = OpFAdd %v3float %3019 %3522
       %3524 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_0
       %3525 = OpLoad %float %3524
       %3526 = OpCompositeConstruct %v3float %3525 %3525 %3525
       %3527 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_1
       %3528 = OpLoad %float %3527
       %3529 = OpFSub %float %3528 %float_n1
       %3530 = OpExtInst %float %1 FAbs %3529
       %3531 = OpFOrdGreaterThan %bool %3530 %float_9_99999975en06
       %3532 = OpFOrdGreaterThanEqual %bool %3528 %float_n1
       %3533 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_2
       %3534 = OpLoad %float %3533
       %3535 = OpSelect %float %3532 %3528 %3534
       %3536 = OpSelect %float %3531 %3535 %3528
       %3537 = OpFSub %float %3536 %float_1
       %3538 = OpExtInst %float %1 FAbs %3537
       %3539 = OpFOrdGreaterThan %bool %3538 %float_9_99999975en06
       %3540 = OpFOrdGreaterThanEqual %bool %3536 %float_1
       %3541 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_3
       %3542 = OpLoad %float %3541
       %3543 = OpSelect %float %3540 %3542 %3528
       %3544 = OpSelect %float %3539 %3543 %3528
       %3545 = OpExtInst %float %1 FAbs %3544
       %3546 = OpFOrdGreaterThan %bool %3545 %float_9_99999975en06
       %3547 = OpFOrdGreaterThanEqual %bool %3544 %float_0
       %3548 = OpSelect %float %3547 %float_1 %float_n1
       %3549 = OpSelect %float %3546 %3548 %float_1
       %3550 = OpExtInst %float %1 NMax %3549 %float_n1
       %3551 = OpExtInst %float %1 NMin %3550 %float_1
       %3552 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_56 %int_0
       %3553 = OpLoad %float %3552
       %3554 = OpCompositeConstruct %v3float %3551 %3553 %float_0
       %3555 = OpFAdd %v3float %3554 %1693
       %3556 = OpExtInst %v3float %1 NMax %3555 %280
       %3557 = OpExtInst %v3float %1 NMin %3556 %128
       %3558 = OpCompositeExtract %float %3557 0
       %3559 = OpCompositeExtract %float %3557 1
       %3560 = OpCompositeConstruct %v2float %3558 %3559
       %3561 = OpFMul %v2float %1701 %3560
       %3562 = OpFMul %v2float %3560 %1702
       %3563 = OpCompositeExtract %float %3561 0
       %3564 = OpCompositeExtract %float %3562 0
       %3565 = OpCompositeExtract %float %3561 1
       %3566 = OpCompositeExtract %float %3562 1
       %3567 = OpFAdd %float %3563 %3565
       %3568 = OpFAdd %float %3564 %3566
       %3569 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_1
       %3570 = OpLoad %float %3569
       %3571 = OpFMul %float %3570 %1730
       %3572 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_2
       %3573 = OpLoad %float %3572
       %3574 = OpFMul %float %3573 %3571
       %3575 = OpFDiv %float %float_2 %3574
       %3576 = OpFMul %float %3567 %3575
       %3577 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_3
       %3578 = OpLoad %float %3577
       %3579 = OpFMul %float %3575 %3578
       %3580 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_0
       %3581 = OpLoad %float %3580
       %3582 = OpCompositeConstruct %v3float %3581 %3581 %3581
       %3583 = OpFMul %v3float %596 %3582
       %3584 = OpFMul %v3float %3582 %647
       %3585 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_1
       %3586 = OpLoad %float %3585
       %3587 = OpCompositeConstruct %v3float %3586 %3586 %3586
       %3588 = OpFMul %v3float %3583 %3587
       %3589 = OpFMul %v3float %3584 %3587
       %3590 = OpFDiv %float %float_1 %1730
       %3591 = OpCompositeConstruct %v3float %3590 %3590 %3590
       %3592 = OpFMul %v3float %3589 %3591
       %3593 = OpCompositeExtract %float %3592 0
       %3594 = OpCompositeExtract %float %3592 1
       %3595 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_3
       %3596 = OpLoad %float %3595
       %3597 = OpFMul %float %1166 %3596
       %3598 = OpCompositeExtract %float %3592 2
       %3599 = OpCompositeConstruct %v2float %3597 %3597
       %3600 = OpCompositeConstruct %v2float %3598 %3598
       %3601 = OpFAdd %v2float %3599 %3600
       %3602 = OpCompositeExtract %float %3601 0
       %3603 = OpCompositeConstruct %v3float %3593 %3594 %3602
       %3604 = OpVectorTimesScalar %v3float %3603 %float_4_76837158en07
       %3605 = OpFAdd %v3float %3604 %138
       %3606 = OpExtInst %v3float %1 Fma %3588 %3591 %3605
       %3607 = OpExtInst %v3float %1 Floor %3606
       %3608 = OpFNegate %v3float %3607
       %3609 = OpExtInst %v3float %1 Fma %3588 %3591 %3608
       %3610 = OpVectorTimesScalar %v3float %3609 %float_2097152
       %3611 = OpFAdd %v3float %3610 %3603
       %3612 = OpVectorTimesScalar %v3float %3611 %float_1
               OpBranch %3613
       %3613 = OpLabel
       %3614 = OpPhi %v3float %3612 %2318 %3615 %3616
       %3617 = OpPhi %float %float_1 %2318 %3618 %3616
       %3619 = OpPhi %float %float_0 %2318 %3620 %3616
       %3621 = OpPhi %uint %uint_0 %2318 %3622 %3616
       %3623 = OpULessThan %bool %3621 %uint_6
               OpLoopMerge %3624 %3616 DontUnroll
               OpBranchConditional %3623 %3616 %3624
       %3616 = OpLabel
       %3625 = OpExtInst %v3float %1 Fract %3614
       %3626 = OpExtInst %v3float %1 Floor %3614
       %3627 = OpDot %float %3626 %387
       %3628 = OpFAdd %float %3627 %float_19
       %3629 = OpFAdd %float %3627 %float_47
       %3630 = OpFAdd %float %3627 %float_66
       %3631 = OpFAdd %float %3627 %float_101
       %3632 = OpFAdd %float %3627 %float_120
       %3633 = OpFAdd %float %3627 %float_148
       %3634 = OpFAdd %float %3627 %float_167
       %3635 = OpConvertFToS %int %3627
       %3636 = OpCompositeConstruct %v3int %3635 %int_0 %int_0
       %3637 = OpBitcast %v3uint %3636
       %3638 = OpIMul %v3uint %3637 %403
       %3639 = OpIAdd %v3uint %3638 %405
       %3640 = OpCompositeExtract %uint %3639 1
       %3641 = OpCompositeExtract %uint %3639 2
       %3642 = OpIMul %uint %3640 %3641
       %3643 = OpCompositeExtract %uint %3639 0
       %3644 = OpIAdd %uint %3643 %3642
       %3645 = OpIMul %uint %3641 %3644
       %3646 = OpIAdd %uint %3640 %3645
       %3647 = OpIMul %uint %3644 %3646
       %3648 = OpIAdd %uint %3641 %3647
       %3649 = OpIMul %uint %3646 %3648
       %3650 = OpIAdd %uint %3644 %3649
       %3651 = OpCompositeInsert %v3uint %3650 %552 0
       %3652 = OpBitwiseAnd %v3uint %406 %407
       %3653 = OpShiftRightLogical %v3uint %3651 %3652
       %3654 = OpCompositeExtract %uint %3653 0
       %3655 = OpCompositeConstruct %v3uint %3654 %3654 %3654
       %3656 = OpBitwiseAnd %v3uint %3655 %388
       %3657 = OpConvertUToF %v3float %3656
       %3658 = OpExtInst %v3float %1 Fma %3657 %392 %280
       %3659 = OpDot %float %3658 %3625
       %3660 = OpConvertFToS %int %3628
       %3661 = OpFSub %v3float %3625 %352
       %3662 = OpCompositeConstruct %v3int %3660 %int_0 %int_0
       %3663 = OpBitcast %v3uint %3662
       %3664 = OpIMul %v3uint %3663 %403
       %3665 = OpIAdd %v3uint %3664 %405
       %3666 = OpCompositeExtract %uint %3665 1
       %3667 = OpCompositeExtract %uint %3665 2
       %3668 = OpIMul %uint %3666 %3667
       %3669 = OpCompositeExtract %uint %3665 0
       %3670 = OpIAdd %uint %3669 %3668
       %3671 = OpIMul %uint %3667 %3670
       %3672 = OpIAdd %uint %3666 %3671
       %3673 = OpIMul %uint %3670 %3672
       %3674 = OpIAdd %uint %3667 %3673
       %3675 = OpIMul %uint %3672 %3674
       %3676 = OpIAdd %uint %3670 %3675
       %3677 = OpCompositeInsert %v3uint %3676 %552 0
       %3678 = OpShiftRightLogical %v3uint %3677 %3652
       %3679 = OpCompositeExtract %uint %3678 0
       %3680 = OpCompositeConstruct %v3uint %3679 %3679 %3679
       %3681 = OpBitwiseAnd %v3uint %3680 %388
       %3682 = OpConvertUToF %v3float %3681
       %3683 = OpExtInst %v3float %1 Fma %3682 %392 %280
       %3684 = OpDot %float %3683 %3661
       %3685 = OpConvertFToS %int %3629
       %3686 = OpFSub %v3float %3625 %353
       %3687 = OpCompositeConstruct %v3int %3685 %int_0 %int_0
       %3688 = OpBitcast %v3uint %3687
       %3689 = OpIMul %v3uint %3688 %403
       %3690 = OpIAdd %v3uint %3689 %405
       %3691 = OpCompositeExtract %uint %3690 1
       %3692 = OpCompositeExtract %uint %3690 2
       %3693 = OpIMul %uint %3691 %3692
       %3694 = OpCompositeExtract %uint %3690 0
       %3695 = OpIAdd %uint %3694 %3693
       %3696 = OpIMul %uint %3692 %3695
       %3697 = OpIAdd %uint %3691 %3696
       %3698 = OpIMul %uint %3695 %3697
       %3699 = OpIAdd %uint %3692 %3698
       %3700 = OpIMul %uint %3697 %3699
       %3701 = OpIAdd %uint %3695 %3700
       %3702 = OpCompositeInsert %v3uint %3701 %552 0
       %3703 = OpShiftRightLogical %v3uint %3702 %3652
       %3704 = OpCompositeExtract %uint %3703 0
       %3705 = OpCompositeConstruct %v3uint %3704 %3704 %3704
       %3706 = OpBitwiseAnd %v3uint %3705 %388
       %3707 = OpConvertUToF %v3float %3706
       %3708 = OpExtInst %v3float %1 Fma %3707 %392 %280
       %3709 = OpDot %float %3708 %3686
       %3710 = OpConvertFToS %int %3630
       %3711 = OpFSub %v3float %3625 %135
       %3712 = OpCompositeConstruct %v3int %3710 %int_0 %int_0
       %3713 = OpBitcast %v3uint %3712
       %3714 = OpIMul %v3uint %3713 %403
       %3715 = OpIAdd %v3uint %3714 %405
       %3716 = OpCompositeExtract %uint %3715 1
       %3717 = OpCompositeExtract %uint %3715 2
       %3718 = OpIMul %uint %3716 %3717
       %3719 = OpCompositeExtract %uint %3715 0
       %3720 = OpIAdd %uint %3719 %3718
       %3721 = OpIMul %uint %3717 %3720
       %3722 = OpIAdd %uint %3716 %3721
       %3723 = OpIMul %uint %3720 %3722
       %3724 = OpIAdd %uint %3717 %3723
       %3725 = OpIMul %uint %3722 %3724
       %3726 = OpIAdd %uint %3720 %3725
       %3727 = OpCompositeInsert %v3uint %3726 %552 0
       %3728 = OpShiftRightLogical %v3uint %3727 %3652
       %3729 = OpCompositeExtract %uint %3728 0
       %3730 = OpCompositeConstruct %v3uint %3729 %3729 %3729
       %3731 = OpBitwiseAnd %v3uint %3730 %388
       %3732 = OpConvertUToF %v3float %3731
       %3733 = OpExtInst %v3float %1 Fma %3732 %392 %280
       %3734 = OpDot %float %3733 %3711
       %3735 = OpConvertFToS %int %3631
       %3736 = OpFSub %v3float %3625 %292
       %3737 = OpCompositeConstruct %v3int %3735 %int_0 %int_0
       %3738 = OpBitcast %v3uint %3737
       %3739 = OpIMul %v3uint %3738 %403
       %3740 = OpIAdd %v3uint %3739 %405
       %3741 = OpCompositeExtract %uint %3740 1
       %3742 = OpCompositeExtract %uint %3740 2
       %3743 = OpIMul %uint %3741 %3742
       %3744 = OpCompositeExtract %uint %3740 0
       %3745 = OpIAdd %uint %3744 %3743
       %3746 = OpIMul %uint %3742 %3745
       %3747 = OpIAdd %uint %3741 %3746
       %3748 = OpIMul %uint %3745 %3747
       %3749 = OpIAdd %uint %3742 %3748
       %3750 = OpIMul %uint %3747 %3749
       %3751 = OpIAdd %uint %3745 %3750
       %3752 = OpCompositeInsert %v3uint %3751 %552 0
       %3753 = OpShiftRightLogical %v3uint %3752 %3652
       %3754 = OpCompositeExtract %uint %3753 0
       %3755 = OpCompositeConstruct %v3uint %3754 %3754 %3754
       %3756 = OpBitwiseAnd %v3uint %3755 %388
       %3757 = OpConvertUToF %v3float %3756
       %3758 = OpExtInst %v3float %1 Fma %3757 %392 %280
       %3759 = OpDot %float %3758 %3736
       %3760 = OpConvertFToS %int %3632
       %3761 = OpFSub %v3float %3625 %141
       %3762 = OpCompositeConstruct %v3int %3760 %int_0 %int_0
       %3763 = OpBitcast %v3uint %3762
       %3764 = OpIMul %v3uint %3763 %403
       %3765 = OpIAdd %v3uint %3764 %405
       %3766 = OpCompositeExtract %uint %3765 1
       %3767 = OpCompositeExtract %uint %3765 2
       %3768 = OpIMul %uint %3766 %3767
       %3769 = OpCompositeExtract %uint %3765 0
       %3770 = OpIAdd %uint %3769 %3768
       %3771 = OpIMul %uint %3767 %3770
       %3772 = OpIAdd %uint %3766 %3771
       %3773 = OpIMul %uint %3770 %3772
       %3774 = OpIAdd %uint %3767 %3773
       %3775 = OpIMul %uint %3772 %3774
       %3776 = OpIAdd %uint %3770 %3775
       %3777 = OpCompositeInsert %v3uint %3776 %552 0
       %3778 = OpShiftRightLogical %v3uint %3777 %3652
       %3779 = OpCompositeExtract %uint %3778 0
       %3780 = OpCompositeConstruct %v3uint %3779 %3779 %3779
       %3781 = OpBitwiseAnd %v3uint %3780 %388
       %3782 = OpConvertUToF %v3float %3781
       %3783 = OpExtInst %v3float %1 Fma %3782 %392 %280
       %3784 = OpDot %float %3783 %3761
       %3785 = OpConvertFToS %int %3633
       %3786 = OpFSub %v3float %3625 %136
       %3787 = OpCompositeConstruct %v3int %3785 %int_0 %int_0
       %3788 = OpBitcast %v3uint %3787
       %3789 = OpIMul %v3uint %3788 %403
       %3790 = OpIAdd %v3uint %3789 %405
       %3791 = OpCompositeExtract %uint %3790 1
       %3792 = OpCompositeExtract %uint %3790 2
       %3793 = OpIMul %uint %3791 %3792
       %3794 = OpCompositeExtract %uint %3790 0
       %3795 = OpIAdd %uint %3794 %3793
       %3796 = OpIMul %uint %3792 %3795
       %3797 = OpIAdd %uint %3791 %3796
       %3798 = OpIMul %uint %3795 %3797
       %3799 = OpIAdd %uint %3792 %3798
       %3800 = OpIMul %uint %3797 %3799
       %3801 = OpIAdd %uint %3795 %3800
       %3802 = OpCompositeInsert %v3uint %3801 %552 0
       %3803 = OpShiftRightLogical %v3uint %3802 %3652
       %3804 = OpCompositeExtract %uint %3803 0
       %3805 = OpCompositeConstruct %v3uint %3804 %3804 %3804
       %3806 = OpBitwiseAnd %v3uint %3805 %388
       %3807 = OpConvertUToF %v3float %3806
       %3808 = OpExtInst %v3float %1 Fma %3807 %392 %280
       %3809 = OpDot %float %3808 %3786
       %3810 = OpConvertFToS %int %3634
       %3811 = OpFSub %v3float %3625 %128
       %3812 = OpCompositeConstruct %v3int %3810 %int_0 %int_0
       %3813 = OpBitcast %v3uint %3812
       %3814 = OpIMul %v3uint %3813 %403
       %3815 = OpIAdd %v3uint %3814 %405
       %3816 = OpCompositeExtract %uint %3815 1
       %3817 = OpCompositeExtract %uint %3815 2
       %3818 = OpIMul %uint %3816 %3817
       %3819 = OpCompositeExtract %uint %3815 0
       %3820 = OpIAdd %uint %3819 %3818
       %3821 = OpIMul %uint %3817 %3820
       %3822 = OpIAdd %uint %3816 %3821
       %3823 = OpIMul %uint %3820 %3822
       %3824 = OpIAdd %uint %3817 %3823
       %3825 = OpIMul %uint %3822 %3824
       %3826 = OpIAdd %uint %3820 %3825
       %3827 = OpCompositeInsert %v3uint %3826 %552 0
       %3828 = OpShiftRightLogical %v3uint %3827 %3652
       %3829 = OpCompositeExtract %uint %3828 0
       %3830 = OpCompositeConstruct %v3uint %3829 %3829 %3829
       %3831 = OpBitwiseAnd %v3uint %3830 %388
       %3832 = OpConvertUToF %v3float %3831
       %3833 = OpExtInst %v3float %1 Fma %3832 %392 %280
       %3834 = OpDot %float %3833 %3811
       %3835 = OpCompositeExtract %float %3625 0
       %3836 = OpCompositeExtract %float %3625 1
       %3837 = OpCompositeExtract %float %3625 2
       %3838 = OpCompositeConstruct %v4float %3835 %3836 %3837 %float_0
       %3839 = OpFMul %v4float %3838 %3838
       %3840 = OpFMul %v4float %3839 %3838
       %3841 = OpVectorTimesScalar %v4float %3838 %float_6
       %3842 = OpFSub %v4float %3841 %383
       %3843 = OpExtInst %v4float %1 Fma %3838 %3842 %384
       %3844 = OpFMul %v4float %3840 %3843
       %3845 = OpCompositeExtract %float %3844 0
       %3846 = OpExtInst %float %1 FMix %3659 %3684 %3845
       %3847 = OpExtInst %float %1 FMix %3709 %3734 %3845
       %3848 = OpCompositeExtract %float %3844 1
       %3849 = OpExtInst %float %1 FMix %3846 %3847 %3848
       %3850 = OpExtInst %float %1 FMix %3759 %3784 %3845
       %3851 = OpExtInst %float %1 FMix %3809 %3834 %3845
       %3852 = OpExtInst %float %1 FMix %3850 %3851 %3848
       %3853 = OpCompositeExtract %float %3844 2
       %3854 = OpExtInst %float %1 FMix %3849 %3852 %3853
       %3620 = OpExtInst %float %1 Fma %3854 %3617 %3619
       %3615 = OpVectorTimesScalar %v3float %3614 %float_2
       %3618 = OpFMul %float %3617 %float_0_5
       %3622 = OpIAdd %uint %3621 %uint_1
               OpBranch %3613
       %3624 = OpLabel
       %3855 = OpExtInst %float %1 Fma %3619 %float_0_5 %float_0_5
       %3856 = OpExtInst %float %1 FMix %float_0 %float_1 %3855
       %3857 = OpExtInst %float %1 FClamp %3856 %float_0 %float_1
       %3858 = OpExtInst %float %1 FMix %1166 %1719 %3857
       %3859 = OpFMul %float %3579 %3858
       %3860 = OpExtInst %float %1 Fma %3568 %3575 %3859
       %3861 = OpExtInst %float %1 Floor %3576
       %3862 = OpFNegate %float %3861
       %3863 = OpExtInst %float %1 Fma %3567 %3575 %3862
       %3864 = OpExtInst %float %1 Fma %3863 %float_2097152 %3860
       %3865 = OpExtInst %float %1 Floor %3864
       %3866 = OpFMul %float %3861 %float_n6_28318548
       %3867 = OpExtInst %float %1 Fma %3576 %float_6_28318548 %3866
       %3868 = OpFMul %float %3865 %float_n6_28318548
       %3869 = OpExtInst %float %1 Fma %3860 %float_6_28318548 %3868
       %3870 = OpExtInst %float %1 Fma %3867 %float_2097152 %3869
       %3871 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_0
       %3872 = OpLoad %float %3871
       %3873 = OpFMul %float %3872 %1730
       %3874 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_1
       %3875 = OpLoad %float %3874
       %3876 = OpFMul %float %3875 %1730
       %3877 = OpFNegate %float %3876
       %3878 = OpExtInst %float %1 Fma %3872 %1730 %3877
       %3879 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_2
       %3880 = OpLoad %float %3879
       %3881 = OpCompositeConstruct %v3float %3880 %3880 %3880
       %3882 = OpFMul %v3float %596 %3881
       %3883 = OpFMul %v3float %3881 %647
       %3884 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_3
       %3885 = OpLoad %float %3884
       %3886 = OpCompositeConstruct %v3float %3885 %3885 %3885
       %3887 = OpFMul %v3float %3882 %3886
       %3888 = OpFMul %v3float %3883 %3886
       %3889 = OpFMul %v3float %3888 %3591
       %3890 = OpCompositeExtract %float %3889 0
       %3891 = OpCompositeExtract %float %3889 1
       %3892 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_60 %int_1
       %3893 = OpLoad %float %3892
       %3894 = OpFMul %float %1166 %3893
       %3895 = OpCompositeExtract %float %3889 2
       %3896 = OpCompositeConstruct %v2float %3894 %3894
       %3897 = OpCompositeConstruct %v2float %3895 %3895
       %3898 = OpFAdd %v2float %3896 %3897
       %3899 = OpCompositeExtract %float %3898 0
       %3900 = OpCompositeConstruct %v3float %3890 %3891 %3899
       %3901 = OpVectorTimesScalar %v3float %3900 %float_4_76837158en07
       %3902 = OpFAdd %v3float %3901 %138
       %3903 = OpExtInst %v3float %1 Fma %3887 %3591 %3902
       %3904 = OpExtInst %v3float %1 Floor %3903
       %3905 = OpFNegate %v3float %3904
       %3906 = OpExtInst %v3float %1 Fma %3887 %3591 %3905
       %3907 = OpVectorTimesScalar %v3float %3906 %float_2097152
       %3908 = OpFAdd %v3float %3907 %3900
       %3909 = OpVectorTimesScalar %v3float %3908 %float_1
               OpBranch %3910
       %3910 = OpLabel
       %3911 = OpPhi %v3float %3909 %3624 %3912 %3913
       %3914 = OpPhi %float %float_1 %3624 %3915 %3913
       %3916 = OpPhi %float %float_0 %3624 %3917 %3913
       %3918 = OpPhi %uint %uint_0 %3624 %3919 %3913
       %3920 = OpULessThan %bool %3918 %uint_10
               OpLoopMerge %3921 %3913 DontUnroll
               OpBranchConditional %3920 %3913 %3921
       %3913 = OpLabel
       %3922 = OpExtInst %v3float %1 Fract %3911
       %3923 = OpExtInst %v3float %1 Floor %3911
       %3924 = OpDot %float %3923 %387
       %3925 = OpFAdd %float %3924 %float_19
       %3926 = OpFAdd %float %3924 %float_47
       %3927 = OpFAdd %float %3924 %float_66
       %3928 = OpFAdd %float %3924 %float_101
       %3929 = OpFAdd %float %3924 %float_120
       %3930 = OpFAdd %float %3924 %float_148
       %3931 = OpFAdd %float %3924 %float_167
       %3932 = OpConvertFToS %int %3924
       %3933 = OpCompositeConstruct %v3int %3932 %int_0 %int_0
       %3934 = OpBitcast %v3uint %3933
       %3935 = OpIMul %v3uint %3934 %403
       %3936 = OpIAdd %v3uint %3935 %405
       %3937 = OpCompositeExtract %uint %3936 1
       %3938 = OpCompositeExtract %uint %3936 2
       %3939 = OpIMul %uint %3937 %3938
       %3940 = OpCompositeExtract %uint %3936 0
       %3941 = OpIAdd %uint %3940 %3939
       %3942 = OpIMul %uint %3938 %3941
       %3943 = OpIAdd %uint %3937 %3942
       %3944 = OpIMul %uint %3941 %3943
       %3945 = OpIAdd %uint %3938 %3944
       %3946 = OpIMul %uint %3943 %3945
       %3947 = OpIAdd %uint %3941 %3946
       %3948 = OpCompositeInsert %v3uint %3947 %552 0
       %3949 = OpBitwiseAnd %v3uint %406 %407
       %3950 = OpShiftRightLogical %v3uint %3948 %3949
       %3951 = OpCompositeExtract %uint %3950 0
       %3952 = OpCompositeConstruct %v3uint %3951 %3951 %3951
       %3953 = OpBitwiseAnd %v3uint %3952 %388
       %3954 = OpConvertUToF %v3float %3953
       %3955 = OpExtInst %v3float %1 Fma %3954 %392 %280
       %3956 = OpDot %float %3955 %3922
       %3957 = OpConvertFToS %int %3925
       %3958 = OpFSub %v3float %3922 %352
       %3959 = OpCompositeConstruct %v3int %3957 %int_0 %int_0
       %3960 = OpBitcast %v3uint %3959
       %3961 = OpIMul %v3uint %3960 %403
       %3962 = OpIAdd %v3uint %3961 %405
       %3963 = OpCompositeExtract %uint %3962 1
       %3964 = OpCompositeExtract %uint %3962 2
       %3965 = OpIMul %uint %3963 %3964
       %3966 = OpCompositeExtract %uint %3962 0
       %3967 = OpIAdd %uint %3966 %3965
       %3968 = OpIMul %uint %3964 %3967
       %3969 = OpIAdd %uint %3963 %3968
       %3970 = OpIMul %uint %3967 %3969
       %3971 = OpIAdd %uint %3964 %3970
       %3972 = OpIMul %uint %3969 %3971
       %3973 = OpIAdd %uint %3967 %3972
       %3974 = OpCompositeInsert %v3uint %3973 %552 0
       %3975 = OpShiftRightLogical %v3uint %3974 %3949
       %3976 = OpCompositeExtract %uint %3975 0
       %3977 = OpCompositeConstruct %v3uint %3976 %3976 %3976
       %3978 = OpBitwiseAnd %v3uint %3977 %388
       %3979 = OpConvertUToF %v3float %3978
       %3980 = OpExtInst %v3float %1 Fma %3979 %392 %280
       %3981 = OpDot %float %3980 %3958
       %3982 = OpConvertFToS %int %3926
       %3983 = OpFSub %v3float %3922 %353
       %3984 = OpCompositeConstruct %v3int %3982 %int_0 %int_0
       %3985 = OpBitcast %v3uint %3984
       %3986 = OpIMul %v3uint %3985 %403
       %3987 = OpIAdd %v3uint %3986 %405
       %3988 = OpCompositeExtract %uint %3987 1
       %3989 = OpCompositeExtract %uint %3987 2
       %3990 = OpIMul %uint %3988 %3989
       %3991 = OpCompositeExtract %uint %3987 0
       %3992 = OpIAdd %uint %3991 %3990
       %3993 = OpIMul %uint %3989 %3992
       %3994 = OpIAdd %uint %3988 %3993
       %3995 = OpIMul %uint %3992 %3994
       %3996 = OpIAdd %uint %3989 %3995
       %3997 = OpIMul %uint %3994 %3996
       %3998 = OpIAdd %uint %3992 %3997
       %3999 = OpCompositeInsert %v3uint %3998 %552 0
       %4000 = OpShiftRightLogical %v3uint %3999 %3949
       %4001 = OpCompositeExtract %uint %4000 0
       %4002 = OpCompositeConstruct %v3uint %4001 %4001 %4001
       %4003 = OpBitwiseAnd %v3uint %4002 %388
       %4004 = OpConvertUToF %v3float %4003
       %4005 = OpExtInst %v3float %1 Fma %4004 %392 %280
       %4006 = OpDot %float %4005 %3983
       %4007 = OpConvertFToS %int %3927
       %4008 = OpFSub %v3float %3922 %135
       %4009 = OpCompositeConstruct %v3int %4007 %int_0 %int_0
       %4010 = OpBitcast %v3uint %4009
       %4011 = OpIMul %v3uint %4010 %403
       %4012 = OpIAdd %v3uint %4011 %405
       %4013 = OpCompositeExtract %uint %4012 1
       %4014 = OpCompositeExtract %uint %4012 2
       %4015 = OpIMul %uint %4013 %4014
       %4016 = OpCompositeExtract %uint %4012 0
       %4017 = OpIAdd %uint %4016 %4015
       %4018 = OpIMul %uint %4014 %4017
       %4019 = OpIAdd %uint %4013 %4018
       %4020 = OpIMul %uint %4017 %4019
       %4021 = OpIAdd %uint %4014 %4020
       %4022 = OpIMul %uint %4019 %4021
       %4023 = OpIAdd %uint %4017 %4022
       %4024 = OpCompositeInsert %v3uint %4023 %552 0
       %4025 = OpShiftRightLogical %v3uint %4024 %3949
       %4026 = OpCompositeExtract %uint %4025 0
       %4027 = OpCompositeConstruct %v3uint %4026 %4026 %4026
       %4028 = OpBitwiseAnd %v3uint %4027 %388
       %4029 = OpConvertUToF %v3float %4028
       %4030 = OpExtInst %v3float %1 Fma %4029 %392 %280
       %4031 = OpDot %float %4030 %4008
       %4032 = OpConvertFToS %int %3928
       %4033 = OpFSub %v3float %3922 %292
       %4034 = OpCompositeConstruct %v3int %4032 %int_0 %int_0
       %4035 = OpBitcast %v3uint %4034
       %4036 = OpIMul %v3uint %4035 %403
       %4037 = OpIAdd %v3uint %4036 %405
       %4038 = OpCompositeExtract %uint %4037 1
       %4039 = OpCompositeExtract %uint %4037 2
       %4040 = OpIMul %uint %4038 %4039
       %4041 = OpCompositeExtract %uint %4037 0
       %4042 = OpIAdd %uint %4041 %4040
       %4043 = OpIMul %uint %4039 %4042
       %4044 = OpIAdd %uint %4038 %4043
       %4045 = OpIMul %uint %4042 %4044
       %4046 = OpIAdd %uint %4039 %4045
       %4047 = OpIMul %uint %4044 %4046
       %4048 = OpIAdd %uint %4042 %4047
       %4049 = OpCompositeInsert %v3uint %4048 %552 0
       %4050 = OpShiftRightLogical %v3uint %4049 %3949
       %4051 = OpCompositeExtract %uint %4050 0
       %4052 = OpCompositeConstruct %v3uint %4051 %4051 %4051
       %4053 = OpBitwiseAnd %v3uint %4052 %388
       %4054 = OpConvertUToF %v3float %4053
       %4055 = OpExtInst %v3float %1 Fma %4054 %392 %280
       %4056 = OpDot %float %4055 %4033
       %4057 = OpConvertFToS %int %3929
       %4058 = OpFSub %v3float %3922 %141
       %4059 = OpCompositeConstruct %v3int %4057 %int_0 %int_0
       %4060 = OpBitcast %v3uint %4059
       %4061 = OpIMul %v3uint %4060 %403
       %4062 = OpIAdd %v3uint %4061 %405
       %4063 = OpCompositeExtract %uint %4062 1
       %4064 = OpCompositeExtract %uint %4062 2
       %4065 = OpIMul %uint %4063 %4064
       %4066 = OpCompositeExtract %uint %4062 0
       %4067 = OpIAdd %uint %4066 %4065
       %4068 = OpIMul %uint %4064 %4067
       %4069 = OpIAdd %uint %4063 %4068
       %4070 = OpIMul %uint %4067 %4069
       %4071 = OpIAdd %uint %4064 %4070
       %4072 = OpIMul %uint %4069 %4071
       %4073 = OpIAdd %uint %4067 %4072
       %4074 = OpCompositeInsert %v3uint %4073 %552 0
       %4075 = OpShiftRightLogical %v3uint %4074 %3949
       %4076 = OpCompositeExtract %uint %4075 0
       %4077 = OpCompositeConstruct %v3uint %4076 %4076 %4076
       %4078 = OpBitwiseAnd %v3uint %4077 %388
       %4079 = OpConvertUToF %v3float %4078
       %4080 = OpExtInst %v3float %1 Fma %4079 %392 %280
       %4081 = OpDot %float %4080 %4058
       %4082 = OpConvertFToS %int %3930
       %4083 = OpFSub %v3float %3922 %136
       %4084 = OpCompositeConstruct %v3int %4082 %int_0 %int_0
       %4085 = OpBitcast %v3uint %4084
       %4086 = OpIMul %v3uint %4085 %403
       %4087 = OpIAdd %v3uint %4086 %405
       %4088 = OpCompositeExtract %uint %4087 1
       %4089 = OpCompositeExtract %uint %4087 2
       %4090 = OpIMul %uint %4088 %4089
       %4091 = OpCompositeExtract %uint %4087 0
       %4092 = OpIAdd %uint %4091 %4090
       %4093 = OpIMul %uint %4089 %4092
       %4094 = OpIAdd %uint %4088 %4093
       %4095 = OpIMul %uint %4092 %4094
       %4096 = OpIAdd %uint %4089 %4095
       %4097 = OpIMul %uint %4094 %4096
       %4098 = OpIAdd %uint %4092 %4097
       %4099 = OpCompositeInsert %v3uint %4098 %552 0
       %4100 = OpShiftRightLogical %v3uint %4099 %3949
       %4101 = OpCompositeExtract %uint %4100 0
       %4102 = OpCompositeConstruct %v3uint %4101 %4101 %4101
       %4103 = OpBitwiseAnd %v3uint %4102 %388
       %4104 = OpConvertUToF %v3float %4103
       %4105 = OpExtInst %v3float %1 Fma %4104 %392 %280
       %4106 = OpDot %float %4105 %4083
       %4107 = OpConvertFToS %int %3931
       %4108 = OpFSub %v3float %3922 %128
       %4109 = OpCompositeConstruct %v3int %4107 %int_0 %int_0
       %4110 = OpBitcast %v3uint %4109
       %4111 = OpIMul %v3uint %4110 %403
       %4112 = OpIAdd %v3uint %4111 %405
       %4113 = OpCompositeExtract %uint %4112 1
       %4114 = OpCompositeExtract %uint %4112 2
       %4115 = OpIMul %uint %4113 %4114
       %4116 = OpCompositeExtract %uint %4112 0
       %4117 = OpIAdd %uint %4116 %4115
       %4118 = OpIMul %uint %4114 %4117
       %4119 = OpIAdd %uint %4113 %4118
       %4120 = OpIMul %uint %4117 %4119
       %4121 = OpIAdd %uint %4114 %4120
       %4122 = OpIMul %uint %4119 %4121
       %4123 = OpIAdd %uint %4117 %4122
       %4124 = OpCompositeInsert %v3uint %4123 %552 0
       %4125 = OpShiftRightLogical %v3uint %4124 %3949
       %4126 = OpCompositeExtract %uint %4125 0
       %4127 = OpCompositeConstruct %v3uint %4126 %4126 %4126
       %4128 = OpBitwiseAnd %v3uint %4127 %388
       %4129 = OpConvertUToF %v3float %4128
       %4130 = OpExtInst %v3float %1 Fma %4129 %392 %280
       %4131 = OpDot %float %4130 %4108
       %4132 = OpCompositeExtract %float %3922 0
       %4133 = OpCompositeExtract %float %3922 1
       %4134 = OpCompositeExtract %float %3922 2
       %4135 = OpCompositeConstruct %v4float %4132 %4133 %4134 %float_0
       %4136 = OpFMul %v4float %4135 %4135
       %4137 = OpFMul %v4float %4136 %4135
       %4138 = OpVectorTimesScalar %v4float %4135 %float_6
       %4139 = OpFSub %v4float %4138 %383
       %4140 = OpExtInst %v4float %1 Fma %4135 %4139 %384
       %4141 = OpFMul %v4float %4137 %4140
       %4142 = OpCompositeExtract %float %4141 0
       %4143 = OpExtInst %float %1 FMix %3956 %3981 %4142
       %4144 = OpExtInst %float %1 FMix %4006 %4031 %4142
       %4145 = OpCompositeExtract %float %4141 1
       %4146 = OpExtInst %float %1 FMix %4143 %4144 %4145
       %4147 = OpExtInst %float %1 FMix %4056 %4081 %4142
       %4148 = OpExtInst %float %1 FMix %4106 %4131 %4142
       %4149 = OpExtInst %float %1 FMix %4147 %4148 %4145
       %4150 = OpCompositeExtract %float %4141 2
       %4151 = OpExtInst %float %1 FMix %4146 %4149 %4150
       %4152 = OpExtInst %float %1 FAbs %4151
       %3917 = OpExtInst %float %1 Fma %4152 %3914 %3916
       %3912 = OpVectorTimesScalar %v3float %3911 %float_2
       %3915 = OpFMul %float %3914 %float_0_5
       %3919 = OpIAdd %uint %3918 %uint_1
               OpBranch %3910
       %3921 = OpLabel
       %4153 = OpExtInst %float %1 FMix %float_0 %float_1 %3916
       %4154 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_60 %int_2
       %4155 = OpLoad %float %4154
       %4156 = OpCompositeConstruct %v3float %4155 %4155 %4155
       %4157 = OpFMul %v3float %596 %4156
       %4158 = OpFMul %v3float %4156 %647
       %4159 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_60 %int_3
       %4160 = OpLoad %float %4159
       %4161 = OpCompositeConstruct %v3float %4160 %4160 %4160
       %4162 = OpFMul %v3float %4157 %4161
       %4163 = OpFMul %v3float %4158 %4161
       %4164 = OpFMul %v3float %4163 %3591
       %4165 = OpCompositeExtract %float %4164 0
       %4166 = OpCompositeExtract %float %4164 1
       %4167 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_61 %int_1
       %4168 = OpLoad %float %4167
       %4169 = OpFMul %float %1166 %4168
       %4170 = OpCompositeExtract %float %4164 2
       %4171 = OpCompositeConstruct %v2float %4169 %4169
       %4172 = OpCompositeConstruct %v2float %4170 %4170
       %4173 = OpFAdd %v2float %4171 %4172
       %4174 = OpCompositeExtract %float %4173 0
       %4175 = OpCompositeConstruct %v3float %4165 %4166 %4174
       %4176 = OpVectorTimesScalar %v3float %4175 %float_4_76837158en07
       %4177 = OpFAdd %v3float %4176 %138
       %4178 = OpExtInst %v3float %1 Fma %4162 %3591 %4177
       %4179 = OpExtInst %v3float %1 Floor %4178
       %4180 = OpFNegate %v3float %4179
       %4181 = OpExtInst %v3float %1 Fma %4162 %3591 %4180
       %4182 = OpVectorTimesScalar %v3float %4181 %float_2097152
       %4183 = OpFAdd %v3float %4182 %4175
       %4184 = OpVectorTimesScalar %v3float %4183 %float_1
               OpBranch %4185
       %4185 = OpLabel
       %4186 = OpPhi %v3float %4184 %3921 %4187 %4188
       %4189 = OpPhi %float %float_1 %3921 %4190 %4188
       %4191 = OpPhi %float %float_0 %3921 %4192 %4188
       %4193 = OpPhi %uint %uint_0 %3921 %4194 %4188
       %4195 = OpULessThan %bool %4193 %uint_10
               OpLoopMerge %4196 %4188 DontUnroll
               OpBranchConditional %4195 %4188 %4196
       %4188 = OpLabel
       %4197 = OpExtInst %v3float %1 Fract %4186
       %4198 = OpExtInst %v3float %1 Floor %4186
       %4199 = OpDot %float %4198 %387
       %4200 = OpFAdd %float %4199 %float_19
       %4201 = OpFAdd %float %4199 %float_47
       %4202 = OpFAdd %float %4199 %float_66
       %4203 = OpFAdd %float %4199 %float_101
       %4204 = OpFAdd %float %4199 %float_120
       %4205 = OpFAdd %float %4199 %float_148
       %4206 = OpFAdd %float %4199 %float_167
       %4207 = OpConvertFToS %int %4199
       %4208 = OpCompositeConstruct %v3int %4207 %int_0 %int_0
       %4209 = OpBitcast %v3uint %4208
       %4210 = OpIMul %v3uint %4209 %403
       %4211 = OpIAdd %v3uint %4210 %405
       %4212 = OpCompositeExtract %uint %4211 1
       %4213 = OpCompositeExtract %uint %4211 2
       %4214 = OpIMul %uint %4212 %4213
       %4215 = OpCompositeExtract %uint %4211 0
       %4216 = OpIAdd %uint %4215 %4214
       %4217 = OpIMul %uint %4213 %4216
       %4218 = OpIAdd %uint %4212 %4217
       %4219 = OpIMul %uint %4216 %4218
       %4220 = OpIAdd %uint %4213 %4219
       %4221 = OpIMul %uint %4218 %4220
       %4222 = OpIAdd %uint %4216 %4221
       %4223 = OpCompositeInsert %v3uint %4222 %552 0
       %4224 = OpBitwiseAnd %v3uint %406 %407
       %4225 = OpShiftRightLogical %v3uint %4223 %4224
       %4226 = OpCompositeExtract %uint %4225 0
       %4227 = OpCompositeConstruct %v3uint %4226 %4226 %4226
       %4228 = OpBitwiseAnd %v3uint %4227 %388
       %4229 = OpConvertUToF %v3float %4228
       %4230 = OpExtInst %v3float %1 Fma %4229 %392 %280
       %4231 = OpDot %float %4230 %4197
       %4232 = OpConvertFToS %int %4200
       %4233 = OpFSub %v3float %4197 %352
       %4234 = OpCompositeConstruct %v3int %4232 %int_0 %int_0
       %4235 = OpBitcast %v3uint %4234
       %4236 = OpIMul %v3uint %4235 %403
       %4237 = OpIAdd %v3uint %4236 %405
       %4238 = OpCompositeExtract %uint %4237 1
       %4239 = OpCompositeExtract %uint %4237 2
       %4240 = OpIMul %uint %4238 %4239
       %4241 = OpCompositeExtract %uint %4237 0
       %4242 = OpIAdd %uint %4241 %4240
       %4243 = OpIMul %uint %4239 %4242
       %4244 = OpIAdd %uint %4238 %4243
       %4245 = OpIMul %uint %4242 %4244
       %4246 = OpIAdd %uint %4239 %4245
       %4247 = OpIMul %uint %4244 %4246
       %4248 = OpIAdd %uint %4242 %4247
       %4249 = OpCompositeInsert %v3uint %4248 %552 0
       %4250 = OpShiftRightLogical %v3uint %4249 %4224
       %4251 = OpCompositeExtract %uint %4250 0
       %4252 = OpCompositeConstruct %v3uint %4251 %4251 %4251
       %4253 = OpBitwiseAnd %v3uint %4252 %388
       %4254 = OpConvertUToF %v3float %4253
       %4255 = OpExtInst %v3float %1 Fma %4254 %392 %280
       %4256 = OpDot %float %4255 %4233
       %4257 = OpConvertFToS %int %4201
       %4258 = OpFSub %v3float %4197 %353
       %4259 = OpCompositeConstruct %v3int %4257 %int_0 %int_0
       %4260 = OpBitcast %v3uint %4259
       %4261 = OpIMul %v3uint %4260 %403
       %4262 = OpIAdd %v3uint %4261 %405
       %4263 = OpCompositeExtract %uint %4262 1
       %4264 = OpCompositeExtract %uint %4262 2
       %4265 = OpIMul %uint %4263 %4264
       %4266 = OpCompositeExtract %uint %4262 0
       %4267 = OpIAdd %uint %4266 %4265
       %4268 = OpIMul %uint %4264 %4267
       %4269 = OpIAdd %uint %4263 %4268
       %4270 = OpIMul %uint %4267 %4269
       %4271 = OpIAdd %uint %4264 %4270
       %4272 = OpIMul %uint %4269 %4271
       %4273 = OpIAdd %uint %4267 %4272
       %4274 = OpCompositeInsert %v3uint %4273 %552 0
       %4275 = OpShiftRightLogical %v3uint %4274 %4224
       %4276 = OpCompositeExtract %uint %4275 0
       %4277 = OpCompositeConstruct %v3uint %4276 %4276 %4276
       %4278 = OpBitwiseAnd %v3uint %4277 %388
       %4279 = OpConvertUToF %v3float %4278
       %4280 = OpExtInst %v3float %1 Fma %4279 %392 %280
       %4281 = OpDot %float %4280 %4258
       %4282 = OpConvertFToS %int %4202
       %4283 = OpFSub %v3float %4197 %135
       %4284 = OpCompositeConstruct %v3int %4282 %int_0 %int_0
       %4285 = OpBitcast %v3uint %4284
       %4286 = OpIMul %v3uint %4285 %403
       %4287 = OpIAdd %v3uint %4286 %405
       %4288 = OpCompositeExtract %uint %4287 1
       %4289 = OpCompositeExtract %uint %4287 2
       %4290 = OpIMul %uint %4288 %4289
       %4291 = OpCompositeExtract %uint %4287 0
       %4292 = OpIAdd %uint %4291 %4290
       %4293 = OpIMul %uint %4289 %4292
       %4294 = OpIAdd %uint %4288 %4293
       %4295 = OpIMul %uint %4292 %4294
       %4296 = OpIAdd %uint %4289 %4295
       %4297 = OpIMul %uint %4294 %4296
       %4298 = OpIAdd %uint %4292 %4297
       %4299 = OpCompositeInsert %v3uint %4298 %552 0
       %4300 = OpShiftRightLogical %v3uint %4299 %4224
       %4301 = OpCompositeExtract %uint %4300 0
       %4302 = OpCompositeConstruct %v3uint %4301 %4301 %4301
       %4303 = OpBitwiseAnd %v3uint %4302 %388
       %4304 = OpConvertUToF %v3float %4303
       %4305 = OpExtInst %v3float %1 Fma %4304 %392 %280
       %4306 = OpDot %float %4305 %4283
       %4307 = OpConvertFToS %int %4203
       %4308 = OpFSub %v3float %4197 %292
       %4309 = OpCompositeConstruct %v3int %4307 %int_0 %int_0
       %4310 = OpBitcast %v3uint %4309
       %4311 = OpIMul %v3uint %4310 %403
       %4312 = OpIAdd %v3uint %4311 %405
       %4313 = OpCompositeExtract %uint %4312 1
       %4314 = OpCompositeExtract %uint %4312 2
       %4315 = OpIMul %uint %4313 %4314
       %4316 = OpCompositeExtract %uint %4312 0
       %4317 = OpIAdd %uint %4316 %4315
       %4318 = OpIMul %uint %4314 %4317
       %4319 = OpIAdd %uint %4313 %4318
       %4320 = OpIMul %uint %4317 %4319
       %4321 = OpIAdd %uint %4314 %4320
       %4322 = OpIMul %uint %4319 %4321
       %4323 = OpIAdd %uint %4317 %4322
       %4324 = OpCompositeInsert %v3uint %4323 %552 0
       %4325 = OpShiftRightLogical %v3uint %4324 %4224
       %4326 = OpCompositeExtract %uint %4325 0
       %4327 = OpCompositeConstruct %v3uint %4326 %4326 %4326
       %4328 = OpBitwiseAnd %v3uint %4327 %388
       %4329 = OpConvertUToF %v3float %4328
       %4330 = OpExtInst %v3float %1 Fma %4329 %392 %280
       %4331 = OpDot %float %4330 %4308
       %4332 = OpConvertFToS %int %4204
       %4333 = OpFSub %v3float %4197 %141
       %4334 = OpCompositeConstruct %v3int %4332 %int_0 %int_0
       %4335 = OpBitcast %v3uint %4334
       %4336 = OpIMul %v3uint %4335 %403
       %4337 = OpIAdd %v3uint %4336 %405
       %4338 = OpCompositeExtract %uint %4337 1
       %4339 = OpCompositeExtract %uint %4337 2
       %4340 = OpIMul %uint %4338 %4339
       %4341 = OpCompositeExtract %uint %4337 0
       %4342 = OpIAdd %uint %4341 %4340
       %4343 = OpIMul %uint %4339 %4342
       %4344 = OpIAdd %uint %4338 %4343
       %4345 = OpIMul %uint %4342 %4344
       %4346 = OpIAdd %uint %4339 %4345
       %4347 = OpIMul %uint %4344 %4346
       %4348 = OpIAdd %uint %4342 %4347
       %4349 = OpCompositeInsert %v3uint %4348 %552 0
       %4350 = OpShiftRightLogical %v3uint %4349 %4224
       %4351 = OpCompositeExtract %uint %4350 0
       %4352 = OpCompositeConstruct %v3uint %4351 %4351 %4351
       %4353 = OpBitwiseAnd %v3uint %4352 %388
       %4354 = OpConvertUToF %v3float %4353
       %4355 = OpExtInst %v3float %1 Fma %4354 %392 %280
       %4356 = OpDot %float %4355 %4333
       %4357 = OpConvertFToS %int %4205
       %4358 = OpFSub %v3float %4197 %136
       %4359 = OpCompositeConstruct %v3int %4357 %int_0 %int_0
       %4360 = OpBitcast %v3uint %4359
       %4361 = OpIMul %v3uint %4360 %403
       %4362 = OpIAdd %v3uint %4361 %405
       %4363 = OpCompositeExtract %uint %4362 1
       %4364 = OpCompositeExtract %uint %4362 2
       %4365 = OpIMul %uint %4363 %4364
       %4366 = OpCompositeExtract %uint %4362 0
       %4367 = OpIAdd %uint %4366 %4365
       %4368 = OpIMul %uint %4364 %4367
       %4369 = OpIAdd %uint %4363 %4368
       %4370 = OpIMul %uint %4367 %4369
       %4371 = OpIAdd %uint %4364 %4370
       %4372 = OpIMul %uint %4369 %4371
       %4373 = OpIAdd %uint %4367 %4372
       %4374 = OpCompositeInsert %v3uint %4373 %552 0
       %4375 = OpShiftRightLogical %v3uint %4374 %4224
       %4376 = OpCompositeExtract %uint %4375 0
       %4377 = OpCompositeConstruct %v3uint %4376 %4376 %4376
       %4378 = OpBitwiseAnd %v3uint %4377 %388
       %4379 = OpConvertUToF %v3float %4378
       %4380 = OpExtInst %v3float %1 Fma %4379 %392 %280
       %4381 = OpDot %float %4380 %4358
       %4382 = OpConvertFToS %int %4206
       %4383 = OpFSub %v3float %4197 %128
       %4384 = OpCompositeConstruct %v3int %4382 %int_0 %int_0
       %4385 = OpBitcast %v3uint %4384
       %4386 = OpIMul %v3uint %4385 %403
       %4387 = OpIAdd %v3uint %4386 %405
       %4388 = OpCompositeExtract %uint %4387 1
       %4389 = OpCompositeExtract %uint %4387 2
       %4390 = OpIMul %uint %4388 %4389
       %4391 = OpCompositeExtract %uint %4387 0
       %4392 = OpIAdd %uint %4391 %4390
       %4393 = OpIMul %uint %4389 %4392
       %4394 = OpIAdd %uint %4388 %4393
       %4395 = OpIMul %uint %4392 %4394
       %4396 = OpIAdd %uint %4389 %4395
       %4397 = OpIMul %uint %4394 %4396
       %4398 = OpIAdd %uint %4392 %4397
       %4399 = OpCompositeInsert %v3uint %4398 %552 0
       %4400 = OpShiftRightLogical %v3uint %4399 %4224
       %4401 = OpCompositeExtract %uint %4400 0
       %4402 = OpCompositeConstruct %v3uint %4401 %4401 %4401
       %4403 = OpBitwiseAnd %v3uint %4402 %388
       %4404 = OpConvertUToF %v3float %4403
       %4405 = OpExtInst %v3float %1 Fma %4404 %392 %280
       %4406 = OpDot %float %4405 %4383
       %4407 = OpCompositeExtract %float %4197 0
       %4408 = OpCompositeExtract %float %4197 1
       %4409 = OpCompositeExtract %float %4197 2
       %4410 = OpCompositeConstruct %v4float %4407 %4408 %4409 %float_0
       %4411 = OpFMul %v4float %4410 %4410
       %4412 = OpFMul %v4float %4411 %4410
       %4413 = OpVectorTimesScalar %v4float %4410 %float_6
       %4414 = OpFSub %v4float %4413 %383
       %4415 = OpExtInst %v4float %1 Fma %4410 %4414 %384
       %4416 = OpFMul %v4float %4412 %4415
       %4417 = OpCompositeExtract %float %4416 0
       %4418 = OpExtInst %float %1 FMix %4231 %4256 %4417
       %4419 = OpExtInst %float %1 FMix %4281 %4306 %4417
       %4420 = OpCompositeExtract %float %4416 1
       %4421 = OpExtInst %float %1 FMix %4418 %4419 %4420
       %4422 = OpExtInst %float %1 FMix %4331 %4356 %4417
       %4423 = OpExtInst %float %1 FMix %4381 %4406 %4417
       %4424 = OpExtInst %float %1 FMix %4422 %4423 %4420
       %4425 = OpCompositeExtract %float %4416 2
       %4426 = OpExtInst %float %1 FMix %4421 %4424 %4425
       %4427 = OpExtInst %float %1 FAbs %4426
       %4192 = OpExtInst %float %1 Fma %4427 %4189 %4191
       %4187 = OpVectorTimesScalar %v3float %4186 %float_2
       %4190 = OpFMul %float %4189 %float_0_5
       %4194 = OpIAdd %uint %4193 %uint_1
               OpBranch %4185
       %4196 = OpLabel
       %4428 = OpExtInst %float %1 FMix %float_0 %float_1 %4191
       %4429 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_61 %int_3
       %4430 = OpLoad %float %4429
       %4431 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_61 %int_2
       %4432 = OpLoad %float %4431
       %4433 = OpExtInst %float %1 Fma %4428 %4430 %4432
       %4434 = OpFMul %float %4153 %4433
       %4435 = OpExtInst %float %1 FMix %3873 %3878 %4434
       %4436 = OpExtInst %float %1 Sin %3870
       %4437 = OpFMul %float %4436 %4435
       %4438 = OpFAdd %v3float %3554 %2566
       %4439 = OpExtInst %v3float %1 NMax %4438 %280
       %4440 = OpExtInst %v3float %1 NMin %4439 %128
       %4441 = OpCompositeExtract %float %4440 0
       %4442 = OpCompositeExtract %float %4440 1
       %4443 = OpCompositeConstruct %v2float %4441 %4442
       %4444 = OpFMul %v2float %1701 %4443
       %4445 = OpFMul %v2float %4443 %1702
       %4446 = OpCompositeExtract %float %4444 0
       %4447 = OpCompositeExtract %float %4445 0
       %4448 = OpCompositeExtract %float %4444 1
       %4449 = OpCompositeExtract %float %4445 1
       %4450 = OpFAdd %float %4446 %4448
       %4451 = OpFAdd %float %4447 %4449
       %4452 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_15 %int_3
       %4453 = OpLoad %float %4452
       %4454 = OpFMul %float %3574 %4453
       %4455 = OpFDiv %float %float_2 %4454
       %4456 = OpFMul %float %4450 %4455
       %4457 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_1
       %4458 = OpLoad %float %4457
       %4459 = OpFMul %float %4455 %4458
       %4460 = OpFMul %float %4459 %3858
       %4461 = OpExtInst %float %1 Fma %4451 %4455 %4460
       %4462 = OpExtInst %float %1 Floor %4456
       %4463 = OpFNegate %float %4462
       %4464 = OpExtInst %float %1 Fma %4450 %4455 %4463
       %4465 = OpExtInst %float %1 Fma %4464 %float_2097152 %4461
       %4466 = OpExtInst %float %1 Floor %4465
       %4467 = OpFMul %float %4462 %float_n6_28318548
       %4468 = OpExtInst %float %1 Fma %4456 %float_6_28318548 %4467
       %4469 = OpFMul %float %4466 %float_n6_28318548
       %4470 = OpExtInst %float %1 Fma %4461 %float_6_28318548 %4469
       %4471 = OpExtInst %float %1 Fma %4468 %float_2097152 %4470
       %4472 = OpFMul %float %4435 %2599
       %4473 = OpExtInst %float %1 Sin %4471
       %4474 = OpFMul %float %4473 %4472
       %4475 = OpCompositeConstruct %v3float %551 %551 %4437
       %4476 = OpCompositeConstruct %v3float %551 %551 %4474
       %4477 = OpFAdd %v3float %4475 %4476
       %4478 = OpFSub %v3float %3554 %1693
       %4479 = OpExtInst %v3float %1 NMax %4478 %280
       %4480 = OpExtInst %v3float %1 NMin %4479 %128
       %4481 = OpCompositeExtract %float %4480 0
       %4482 = OpCompositeExtract %float %4480 1
       %4483 = OpCompositeConstruct %v2float %4481 %4482
       %4484 = OpFMul %v2float %1701 %4483
       %4485 = OpFMul %v2float %4483 %1702
       %4486 = OpCompositeExtract %float %4484 0
       %4487 = OpCompositeExtract %float %4485 0
       %4488 = OpCompositeExtract %float %4484 1
       %4489 = OpCompositeExtract %float %4485 1
       %4490 = OpFAdd %float %4486 %4488
       %4491 = OpFAdd %float %4487 %4489
       %4492 = OpFMul %float %4454 %4453
       %4493 = OpFDiv %float %float_2 %4492
       %4494 = OpFMul %float %4490 %4493
       %4495 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_3
       %4496 = OpLoad %float %4495
       %4497 = OpFMul %float %4493 %4496
       %4498 = OpFMul %float %4497 %3858
       %4499 = OpExtInst %float %1 Fma %4491 %4493 %4498
       %4500 = OpExtInst %float %1 Floor %4494
       %4501 = OpFNegate %float %4500
       %4502 = OpExtInst %float %1 Fma %4490 %4493 %4501
       %4503 = OpExtInst %float %1 Fma %4502 %float_2097152 %4499
       %4504 = OpExtInst %float %1 Floor %4503
       %4505 = OpFMul %float %4500 %float_n6_28318548
       %4506 = OpExtInst %float %1 Fma %4494 %float_6_28318548 %4505
       %4507 = OpFMul %float %4504 %float_n6_28318548
       %4508 = OpExtInst %float %1 Fma %4499 %float_6_28318548 %4507
       %4509 = OpExtInst %float %1 Fma %4506 %float_2097152 %4508
       %4510 = OpFMul %float %4472 %2599
       %4511 = OpExtInst %float %1 Sin %4509
       %4512 = OpFMul %float %4511 %4510
       %4513 = OpCompositeConstruct %v3float %551 %551 %4512
       %4514 = OpFAdd %v3float %4477 %4513
       %4515 = OpFSub %v3float %3554 %2566
       %4516 = OpExtInst %v3float %1 NMax %4515 %280
       %4517 = OpExtInst %v3float %1 NMin %4516 %128
       %4518 = OpCompositeExtract %float %4517 0
       %4519 = OpCompositeExtract %float %4517 1
       %4520 = OpCompositeConstruct %v2float %4518 %4519
       %4521 = OpFMul %v2float %1701 %4520
       %4522 = OpFMul %v2float %4520 %1702
       %4523 = OpCompositeExtract %float %4521 0
       %4524 = OpCompositeExtract %float %4522 0
       %4525 = OpCompositeExtract %float %4521 1
       %4526 = OpCompositeExtract %float %4522 1
       %4527 = OpFAdd %float %4523 %4525
       %4528 = OpFAdd %float %4524 %4526
       %4529 = OpFMul %float %4492 %4453
       %4530 = OpFDiv %float %float_2 %4529
       %4531 = OpFMul %float %4527 %4530
       %4532 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_63 %int_1
       %4533 = OpLoad %float %4532
       %4534 = OpFMul %float %4530 %4533
       %4535 = OpFMul %float %4534 %3858
       %4536 = OpExtInst %float %1 Fma %4528 %4530 %4535
       %4537 = OpExtInst %float %1 Floor %4531
       %4538 = OpFNegate %float %4537
       %4539 = OpExtInst %float %1 Fma %4527 %4530 %4538
       %4540 = OpExtInst %float %1 Fma %4539 %float_2097152 %4536
       %4541 = OpExtInst %float %1 Floor %4540
       %4542 = OpFMul %float %4537 %float_n6_28318548
       %4543 = OpExtInst %float %1 Fma %4531 %float_6_28318548 %4542
       %4544 = OpFMul %float %4541 %float_n6_28318548
       %4545 = OpExtInst %float %1 Fma %4536 %float_6_28318548 %4544
       %4546 = OpExtInst %float %1 Fma %4543 %float_2097152 %4545
       %4547 = OpFMul %float %4510 %2599
       %4548 = OpExtInst %float %1 Sin %4546
       %4549 = OpFMul %float %4548 %4547
       %4550 = OpCompositeConstruct %v3float %551 %551 %4549
       %4551 = OpFAdd %v3float %4514 %4550
       %4552 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_0
       %4553 = OpLoad %float %4552
       %4554 = OpFSub %float %4553 %float_n1
       %4555 = OpExtInst %float %1 FAbs %4554
       %4556 = OpFOrdGreaterThan %bool %4555 %float_9_99999975en06
       %4557 = OpFOrdGreaterThanEqual %bool %4553 %float_n1
       %4558 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_1
       %4559 = OpLoad %float %4558
       %4560 = OpSelect %float %4557 %4553 %4559
       %4561 = OpSelect %float %4556 %4560 %4553
       %4562 = OpFSub %float %4561 %float_1
       %4563 = OpExtInst %float %1 FAbs %4562
       %4564 = OpFOrdGreaterThan %bool %4563 %float_9_99999975en06
       %4565 = OpFOrdGreaterThanEqual %bool %4561 %float_1
       %4566 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_2
       %4567 = OpLoad %float %4566
       %4568 = OpSelect %float %4565 %4567 %4553
       %4569 = OpSelect %float %4564 %4568 %4553
       %4570 = OpExtInst %float %1 FAbs %4569
       %4571 = OpFOrdGreaterThan %bool %4570 %float_9_99999975en06
       %4572 = OpFOrdGreaterThanEqual %bool %4569 %float_0
       %4573 = OpSelect %float %4572 %float_1 %float_n1
       %4574 = OpSelect %float %4571 %4573 %float_1
       %4575 = OpExtInst %float %1 NMax %4574 %float_n1
       %4576 = OpExtInst %float %1 NMin %4575 %float_1
       %4577 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_65 %int_3
       %4578 = OpLoad %float %4577
       %4579 = OpCompositeConstruct %v3float %4576 %4578 %float_0
       %4580 = OpFAdd %v3float %4579 %1693
       %4581 = OpExtInst %v3float %1 NMax %4580 %280
       %4582 = OpExtInst %v3float %1 NMin %4581 %128
       %4583 = OpCompositeExtract %float %4582 0
       %4584 = OpCompositeExtract %float %4582 1
       %4585 = OpCompositeConstruct %v2float %4583 %4584
       %4586 = OpFMul %v2float %1701 %4585
       %4587 = OpFMul %v2float %4585 %1702
       %4588 = OpCompositeExtract %float %4586 0
       %4589 = OpCompositeExtract %float %4587 0
       %4590 = OpCompositeExtract %float %4586 1
       %4591 = OpCompositeExtract %float %4587 1
       %4592 = OpFAdd %float %4588 %4590
       %4593 = OpFAdd %float %4589 %4591
       %4594 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_23 %int_3
       %4595 = OpLoad %float %4594
       %4596 = OpFMul %float %3571 %4595
       %4597 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_0
       %4598 = OpLoad %float %4597
       %4599 = OpFMul %float %4598 %4596
       %4600 = OpFDiv %float %float_2 %4599
       %4601 = OpFMul %float %4592 %4600
       %4602 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_1
       %4603 = OpLoad %float %4602
       %4604 = OpFMul %float %4600 %4603
       %4605 = OpFMul %float %4604 %3858
       %4606 = OpExtInst %float %1 Fma %4593 %4600 %4605
       %4607 = OpExtInst %float %1 Floor %4601
       %4608 = OpFNegate %float %4607
       %4609 = OpExtInst %float %1 Fma %4592 %4600 %4608
       %4610 = OpExtInst %float %1 Fma %4609 %float_2097152 %4606
       %4611 = OpExtInst %float %1 Floor %4610
       %4612 = OpFMul %float %4607 %float_n6_28318548
       %4613 = OpExtInst %float %1 Fma %4601 %float_6_28318548 %4612
       %4614 = OpFMul %float %4611 %float_n6_28318548
       %4615 = OpExtInst %float %1 Fma %4606 %float_6_28318548 %4614
       %4616 = OpExtInst %float %1 Fma %4613 %float_2097152 %4615
       %4617 = OpFMul %float %4435 %2738
       %4618 = OpExtInst %float %1 Sin %4616
       %4619 = OpFMul %float %4618 %4617
       %4620 = OpFAdd %v3float %4579 %2566
       %4621 = OpExtInst %v3float %1 NMax %4620 %280
       %4622 = OpExtInst %v3float %1 NMin %4621 %128
       %4623 = OpCompositeExtract %float %4622 0
       %4624 = OpCompositeExtract %float %4622 1
       %4625 = OpCompositeConstruct %v2float %4623 %4624
       %4626 = OpFMul %v2float %1701 %4625
       %4627 = OpFMul %v2float %4625 %1702
       %4628 = OpCompositeExtract %float %4626 0
       %4629 = OpCompositeExtract %float %4627 0
       %4630 = OpCompositeExtract %float %4626 1
       %4631 = OpCompositeExtract %float %4627 1
       %4632 = OpFAdd %float %4628 %4630
       %4633 = OpFAdd %float %4629 %4631
       %4634 = OpFMul %float %4599 %4453
       %4635 = OpFDiv %float %float_2 %4634
       %4636 = OpFMul %float %4632 %4635
       %4637 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_2
       %4638 = OpLoad %float %4637
       %4639 = OpFMul %float %4635 %4638
       %4640 = OpFMul %float %4639 %3858
       %4641 = OpExtInst %float %1 Fma %4633 %4635 %4640
       %4642 = OpExtInst %float %1 Floor %4636
       %4643 = OpFNegate %float %4642
       %4644 = OpExtInst %float %1 Fma %4632 %4635 %4643
       %4645 = OpExtInst %float %1 Fma %4644 %float_2097152 %4641
       %4646 = OpExtInst %float %1 Floor %4645
       %4647 = OpFMul %float %4642 %float_n6_28318548
       %4648 = OpExtInst %float %1 Fma %4636 %float_6_28318548 %4647
       %4649 = OpFMul %float %4646 %float_n6_28318548
       %4650 = OpExtInst %float %1 Fma %4641 %float_6_28318548 %4649
       %4651 = OpExtInst %float %1 Fma %4648 %float_2097152 %4650
       %4652 = OpFMul %float %4617 %2599
       %4653 = OpExtInst %float %1 Sin %4651
       %4654 = OpFMul %float %4653 %4652
       %4655 = OpCompositeConstruct %v3float %551 %551 %4619
       %4656 = OpCompositeConstruct %v3float %551 %551 %4654
       %4657 = OpFAdd %v3float %4655 %4656
       %4658 = OpFSub %v3float %4579 %1693
       %4659 = OpExtInst %v3float %1 NMax %4658 %280
       %4660 = OpExtInst %v3float %1 NMin %4659 %128
       %4661 = OpCompositeExtract %float %4660 0
       %4662 = OpCompositeExtract %float %4660 1
       %4663 = OpCompositeConstruct %v2float %4661 %4662
       %4664 = OpFMul %v2float %1701 %4663
       %4665 = OpFMul %v2float %4663 %1702
       %4666 = OpCompositeExtract %float %4664 0
       %4667 = OpCompositeExtract %float %4665 0
       %4668 = OpCompositeExtract %float %4664 1
       %4669 = OpCompositeExtract %float %4665 1
       %4670 = OpFAdd %float %4666 %4668
       %4671 = OpFAdd %float %4667 %4669
       %4672 = OpFMul %float %4634 %4453
       %4673 = OpFDiv %float %float_2 %4672
       %4674 = OpFMul %float %4670 %4673
       %4675 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_3
       %4676 = OpLoad %float %4675
       %4677 = OpFMul %float %4673 %4676
       %4678 = OpFMul %float %4677 %3858
       %4679 = OpExtInst %float %1 Fma %4671 %4673 %4678
       %4680 = OpExtInst %float %1 Floor %4674
       %4681 = OpFNegate %float %4680
       %4682 = OpExtInst %float %1 Fma %4670 %4673 %4681
       %4683 = OpExtInst %float %1 Fma %4682 %float_2097152 %4679
       %4684 = OpExtInst %float %1 Floor %4683
       %4685 = OpFMul %float %4680 %float_n6_28318548
       %4686 = OpExtInst %float %1 Fma %4674 %float_6_28318548 %4685
       %4687 = OpFMul %float %4684 %float_n6_28318548
       %4688 = OpExtInst %float %1 Fma %4679 %float_6_28318548 %4687
       %4689 = OpExtInst %float %1 Fma %4686 %float_2097152 %4688
       %4690 = OpFMul %float %4652 %2599
       %4691 = OpExtInst %float %1 Sin %4689
       %4692 = OpFMul %float %4691 %4690
       %4693 = OpCompositeConstruct %v3float %551 %551 %4692
       %4694 = OpFAdd %v3float %4657 %4693
       %4695 = OpFSub %v3float %4579 %2566
       %4696 = OpExtInst %v3float %1 NMax %4695 %280
       %4697 = OpExtInst %v3float %1 NMin %4696 %128
       %4698 = OpCompositeExtract %float %4697 0
       %4699 = OpCompositeExtract %float %4697 1
       %4700 = OpCompositeConstruct %v2float %4698 %4699
       %4701 = OpFMul %v2float %1701 %4700
       %4702 = OpFMul %v2float %4700 %1702
       %4703 = OpCompositeExtract %float %4701 0
       %4704 = OpCompositeExtract %float %4702 0
       %4705 = OpCompositeExtract %float %4701 1
       %4706 = OpCompositeExtract %float %4702 1
       %4707 = OpFAdd %float %4703 %4705
       %4708 = OpFAdd %float %4704 %4706
       %4709 = OpFMul %float %4672 %4453
       %4710 = OpFDiv %float %float_2 %4709
       %4711 = OpFMul %float %4707 %4710
       %4712 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_0
       %4713 = OpLoad %float %4712
       %4714 = OpFMul %float %4710 %4713
       %4715 = OpFMul %float %4714 %3858
       %4716 = OpExtInst %float %1 Fma %4708 %4710 %4715
       %4717 = OpExtInst %float %1 Floor %4711
       %4718 = OpFNegate %float %4717
       %4719 = OpExtInst %float %1 Fma %4707 %4710 %4718
       %4720 = OpExtInst %float %1 Fma %4719 %float_2097152 %4716
       %4721 = OpExtInst %float %1 Floor %4720
       %4722 = OpFMul %float %4717 %float_n6_28318548
       %4723 = OpExtInst %float %1 Fma %4711 %float_6_28318548 %4722
       %4724 = OpFMul %float %4721 %float_n6_28318548
       %4725 = OpExtInst %float %1 Fma %4716 %float_6_28318548 %4724
       %4726 = OpExtInst %float %1 Fma %4723 %float_2097152 %4725
       %4727 = OpFMul %float %4690 %2599
       %4728 = OpExtInst %float %1 Sin %4726
       %4729 = OpFMul %float %4728 %4727
       %4730 = OpCompositeConstruct %v3float %551 %551 %4729
       %4731 = OpFAdd %v3float %4694 %4730
       %4732 = OpFAdd %v3float %4551 %4731
       %4733 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_1
       %4734 = OpLoad %float %4733
       %4735 = OpFSub %float %4734 %float_n1
       %4736 = OpExtInst %float %1 FAbs %4735
       %4737 = OpFOrdGreaterThan %bool %4736 %float_9_99999975en06
       %4738 = OpFOrdGreaterThanEqual %bool %4734 %float_n1
       %4739 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_2
       %4740 = OpLoad %float %4739
       %4741 = OpSelect %float %4738 %4734 %4740
       %4742 = OpSelect %float %4737 %4741 %4734
       %4743 = OpFSub %float %4742 %float_1
       %4744 = OpExtInst %float %1 FAbs %4743
       %4745 = OpFOrdGreaterThan %bool %4744 %float_9_99999975en06
       %4746 = OpFOrdGreaterThanEqual %bool %4742 %float_1
       %4747 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_3
       %4748 = OpLoad %float %4747
       %4749 = OpSelect %float %4746 %4748 %4734
       %4750 = OpSelect %float %4745 %4749 %4734
       %4751 = OpExtInst %float %1 FAbs %4750
       %4752 = OpFOrdGreaterThan %bool %4751 %float_9_99999975en06
       %4753 = OpFOrdGreaterThanEqual %bool %4750 %float_0
       %4754 = OpSelect %float %4753 %float_1 %float_n1
       %4755 = OpSelect %float %4752 %4754 %float_1
       %4756 = OpExtInst %float %1 NMax %4755 %float_n1
       %4757 = OpExtInst %float %1 NMin %4756 %float_1
       %4758 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_70 %int_0
       %4759 = OpLoad %float %4758
       %4760 = OpCompositeConstruct %v3float %4757 %4759 %float_0
       %4761 = OpFAdd %v3float %4760 %1693
       %4762 = OpExtInst %v3float %1 NMax %4761 %280
       %4763 = OpExtInst %v3float %1 NMin %4762 %128
       %4764 = OpCompositeExtract %float %4763 0
       %4765 = OpCompositeExtract %float %4763 1
       %4766 = OpCompositeConstruct %v2float %4764 %4765
       %4767 = OpFMul %v2float %1701 %4766
       %4768 = OpFMul %v2float %4766 %1702
       %4769 = OpCompositeExtract %float %4767 0
       %4770 = OpCompositeExtract %float %4768 0
       %4771 = OpCompositeExtract %float %4767 1
       %4772 = OpCompositeExtract %float %4768 1
       %4773 = OpFAdd %float %4769 %4771
       %4774 = OpFAdd %float %4770 %4772
       %4775 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_71 %int_1
       %4776 = OpLoad %float %4775
       %4777 = OpFMul %float %4776 %4596
       %4778 = OpFDiv %float %float_2 %4777
       %4779 = OpFMul %float %4773 %4778
       %4780 = OpFMul %float %4778 %4603
       %4781 = OpFMul %float %4780 %3858
       %4782 = OpExtInst %float %1 Fma %4774 %4778 %4781
       %4783 = OpExtInst %float %1 Floor %4779
       %4784 = OpFNegate %float %4783
       %4785 = OpExtInst %float %1 Fma %4773 %4778 %4784
       %4786 = OpExtInst %float %1 Fma %4785 %float_2097152 %4782
       %4787 = OpExtInst %float %1 Floor %4786
       %4788 = OpFMul %float %4783 %float_n6_28318548
       %4789 = OpExtInst %float %1 Fma %4779 %float_6_28318548 %4788
       %4790 = OpFMul %float %4787 %float_n6_28318548
       %4791 = OpExtInst %float %1 Fma %4782 %float_6_28318548 %4790
       %4792 = OpExtInst %float %1 Fma %4789 %float_2097152 %4791
       %4793 = OpExtInst %float %1 Sin %4792
       %4794 = OpFMul %float %4793 %4617
       %4795 = OpFAdd %v3float %4760 %2566
       %4796 = OpExtInst %v3float %1 NMax %4795 %280
       %4797 = OpExtInst %v3float %1 NMin %4796 %128
       %4798 = OpCompositeExtract %float %4797 0
       %4799 = OpCompositeExtract %float %4797 1
       %4800 = OpCompositeConstruct %v2float %4798 %4799
       %4801 = OpFMul %v2float %1701 %4800
       %4802 = OpFMul %v2float %4800 %1702
       %4803 = OpCompositeExtract %float %4801 0
       %4804 = OpCompositeExtract %float %4802 0
       %4805 = OpCompositeExtract %float %4801 1
       %4806 = OpCompositeExtract %float %4802 1
       %4807 = OpFAdd %float %4803 %4805
       %4808 = OpFAdd %float %4804 %4806
       %4809 = OpFMul %float %4777 %4453
       %4810 = OpFDiv %float %float_2 %4809
       %4811 = OpFMul %float %4807 %4810
       %4812 = OpFMul %float %4810 %4638
       %4813 = OpFMul %float %4812 %3858
       %4814 = OpExtInst %float %1 Fma %4808 %4810 %4813
       %4815 = OpExtInst %float %1 Floor %4811
       %4816 = OpFNegate %float %4815
       %4817 = OpExtInst %float %1 Fma %4807 %4810 %4816
       %4818 = OpExtInst %float %1 Fma %4817 %float_2097152 %4814
       %4819 = OpExtInst %float %1 Floor %4818
       %4820 = OpFMul %float %4815 %float_n6_28318548
       %4821 = OpExtInst %float %1 Fma %4811 %float_6_28318548 %4820
       %4822 = OpFMul %float %4819 %float_n6_28318548
       %4823 = OpExtInst %float %1 Fma %4814 %float_6_28318548 %4822
       %4824 = OpExtInst %float %1 Fma %4821 %float_2097152 %4823
       %4825 = OpExtInst %float %1 Sin %4824
       %4826 = OpFMul %float %4825 %4652
       %4827 = OpCompositeConstruct %v3float %551 %551 %4794
       %4828 = OpCompositeConstruct %v3float %551 %551 %4826
       %4829 = OpFAdd %v3float %4827 %4828
       %4830 = OpFSub %v3float %4760 %1693
       %4831 = OpExtInst %v3float %1 NMax %4830 %280
       %4832 = OpExtInst %v3float %1 NMin %4831 %128
       %4833 = OpCompositeExtract %float %4832 0
       %4834 = OpCompositeExtract %float %4832 1
       %4835 = OpCompositeConstruct %v2float %4833 %4834
       %4836 = OpFMul %v2float %1701 %4835
       %4837 = OpFMul %v2float %4835 %1702
       %4838 = OpCompositeExtract %float %4836 0
       %4839 = OpCompositeExtract %float %4837 0
       %4840 = OpCompositeExtract %float %4836 1
       %4841 = OpCompositeExtract %float %4837 1
       %4842 = OpFAdd %float %4838 %4840
       %4843 = OpFAdd %float %4839 %4841
       %4844 = OpFMul %float %4809 %4453
       %4845 = OpFDiv %float %float_2 %4844
       %4846 = OpFMul %float %4842 %4845
       %4847 = OpFMul %float %4845 %4676
       %4848 = OpFMul %float %4847 %3858
       %4849 = OpExtInst %float %1 Fma %4843 %4845 %4848
       %4850 = OpExtInst %float %1 Floor %4846
       %4851 = OpFNegate %float %4850
       %4852 = OpExtInst %float %1 Fma %4842 %4845 %4851
       %4853 = OpExtInst %float %1 Fma %4852 %float_2097152 %4849
       %4854 = OpExtInst %float %1 Floor %4853
       %4855 = OpFMul %float %4850 %float_n6_28318548
       %4856 = OpExtInst %float %1 Fma %4846 %float_6_28318548 %4855
       %4857 = OpFMul %float %4854 %float_n6_28318548
       %4858 = OpExtInst %float %1 Fma %4849 %float_6_28318548 %4857
       %4859 = OpExtInst %float %1 Fma %4856 %float_2097152 %4858
       %4860 = OpExtInst %float %1 Sin %4859
       %4861 = OpFMul %float %4860 %4690
       %4862 = OpCompositeConstruct %v3float %551 %551 %4861
       %4863 = OpFAdd %v3float %4829 %4862
       %4864 = OpFSub %v3float %4760 %2566
       %4865 = OpExtInst %v3float %1 NMax %4864 %280
       %4866 = OpExtInst %v3float %1 NMin %4865 %128
       %4867 = OpCompositeExtract %float %4866 0
       %4868 = OpCompositeExtract %float %4866 1
       %4869 = OpCompositeConstruct %v2float %4867 %4868
       %4870 = OpFMul %v2float %1701 %4869
       %4871 = OpFMul %v2float %4869 %1702
       %4872 = OpCompositeExtract %float %4870 0
       %4873 = OpCompositeExtract %float %4871 0
       %4874 = OpCompositeExtract %float %4870 1
       %4875 = OpCompositeExtract %float %4871 1
       %4876 = OpFAdd %float %4872 %4874
       %4877 = OpFAdd %float %4873 %4875
       %4878 = OpFMul %float %4844 %4453
       %4879 = OpFDiv %float %float_2 %4878
       %4880 = OpFMul %float %4876 %4879
       %4881 = OpFMul %float %4879 %4713
       %4882 = OpFMul %float %4881 %3858
       %4883 = OpExtInst %float %1 Fma %4877 %4879 %4882
       %4884 = OpExtInst %float %1 Floor %4880
       %4885 = OpFNegate %float %4884
       %4886 = OpExtInst %float %1 Fma %4876 %4879 %4885
       %4887 = OpExtInst %float %1 Fma %4886 %float_2097152 %4883
       %4888 = OpExtInst %float %1 Floor %4887
       %4889 = OpFMul %float %4884 %float_n6_28318548
       %4890 = OpExtInst %float %1 Fma %4880 %float_6_28318548 %4889
       %4891 = OpFMul %float %4888 %float_n6_28318548
       %4892 = OpExtInst %float %1 Fma %4883 %float_6_28318548 %4891
       %4893 = OpExtInst %float %1 Fma %4890 %float_2097152 %4892
       %4894 = OpExtInst %float %1 Sin %4893
       %4895 = OpFMul %float %4894 %4727
       %4896 = OpCompositeConstruct %v3float %551 %551 %4895
       %4897 = OpFAdd %v3float %4863 %4896
       %4898 = OpFAdd %v3float %4732 %4897
       %4899 = OpFMul %float %3571 %float_0_800000012
       %4900 = OpFMul %float %3573 %4899
       %4901 = OpFDiv %float %float_2 %4900
       %4902 = OpFMul %float %3567 %4901
       %4903 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_71 %int_2
       %4904 = OpLoad %float %4903
       %4905 = OpFMul %float %4901 %4904
       %4906 = OpFMul %float %4905 %3858
       %4907 = OpExtInst %float %1 Fma %3568 %4901 %4906
       %4908 = OpExtInst %float %1 Floor %4902
       %4909 = OpFNegate %float %4908
       %4910 = OpExtInst %float %1 Fma %3567 %4901 %4909
       %4911 = OpExtInst %float %1 Fma %4910 %float_2097152 %4907
       %4912 = OpExtInst %float %1 Floor %4911
       %4913 = OpFMul %float %4908 %float_n6_28318548
       %4914 = OpExtInst %float %1 Fma %4902 %float_6_28318548 %4913
       %4915 = OpFMul %float %4912 %float_n6_28318548
       %4916 = OpExtInst %float %1 Fma %4907 %float_6_28318548 %4915
       %4917 = OpExtInst %float %1 Fma %4914 %float_2097152 %4916
       %4918 = OpFMul %float %4435 %float_0_800000012
       %4919 = OpExtInst %float %1 Sin %4917
       %4920 = OpFMul %float %4919 %4918
       %4921 = OpFMul %float %4900 %4453
       %4922 = OpFDiv %float %float_2 %4921
       %4923 = OpFMul %float %4450 %4922
       %4924 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_71 %int_3
       %4925 = OpLoad %float %4924
       %4926 = OpFMul %float %4922 %4925
       %4927 = OpFMul %float %4926 %3858
       %4928 = OpExtInst %float %1 Fma %4451 %4922 %4927
       %4929 = OpExtInst %float %1 Floor %4923
       %4930 = OpFNegate %float %4929
       %4931 = OpExtInst %float %1 Fma %4450 %4922 %4930
       %4932 = OpExtInst %float %1 Fma %4931 %float_2097152 %4928
       %4933 = OpExtInst %float %1 Floor %4932
       %4934 = OpFMul %float %4929 %float_n6_28318548
       %4935 = OpExtInst %float %1 Fma %4923 %float_6_28318548 %4934
       %4936 = OpFMul %float %4933 %float_n6_28318548
       %4937 = OpExtInst %float %1 Fma %4928 %float_6_28318548 %4936
       %4938 = OpExtInst %float %1 Fma %4935 %float_2097152 %4937
       %4939 = OpFMul %float %4918 %2599
       %4940 = OpExtInst %float %1 Sin %4938
       %4941 = OpFMul %float %4940 %4939
       %4942 = OpCompositeConstruct %v3float %551 %551 %4920
       %4943 = OpCompositeConstruct %v3float %551 %551 %4941
       %4944 = OpFAdd %v3float %4942 %4943
       %4945 = OpFMul %float %4921 %4453
       %4946 = OpFDiv %float %float_2 %4945
       %4947 = OpFMul %float %4490 %4946
       %4948 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_0
       %4949 = OpLoad %float %4948
       %4950 = OpFMul %float %4946 %4949
       %4951 = OpFMul %float %4950 %3858
       %4952 = OpExtInst %float %1 Fma %4491 %4946 %4951
       %4953 = OpExtInst %float %1 Floor %4947
       %4954 = OpFNegate %float %4953
       %4955 = OpExtInst %float %1 Fma %4490 %4946 %4954
       %4956 = OpExtInst %float %1 Fma %4955 %float_2097152 %4952
       %4957 = OpExtInst %float %1 Floor %4956
       %4958 = OpFMul %float %4953 %float_n6_28318548
       %4959 = OpExtInst %float %1 Fma %4947 %float_6_28318548 %4958
       %4960 = OpFMul %float %4957 %float_n6_28318548
       %4961 = OpExtInst %float %1 Fma %4952 %float_6_28318548 %4960
       %4962 = OpExtInst %float %1 Fma %4959 %float_2097152 %4961
       %4963 = OpFMul %float %4939 %2599
       %4964 = OpExtInst %float %1 Sin %4962
       %4965 = OpFMul %float %4964 %4963
       %4966 = OpCompositeConstruct %v3float %551 %551 %4965
       %4967 = OpFAdd %v3float %4944 %4966
       %4968 = OpFMul %float %4945 %4453
       %4969 = OpFDiv %float %float_2 %4968
       %4970 = OpFMul %float %4527 %4969
       %4971 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_1
       %4972 = OpLoad %float %4971
       %4973 = OpFMul %float %4969 %4972
       %4974 = OpFMul %float %4973 %3858
       %4975 = OpExtInst %float %1 Fma %4528 %4969 %4974
       %4976 = OpExtInst %float %1 Floor %4970
       %4977 = OpFNegate %float %4976
       %4978 = OpExtInst %float %1 Fma %4527 %4969 %4977
       %4979 = OpExtInst %float %1 Fma %4978 %float_2097152 %4975
       %4980 = OpExtInst %float %1 Floor %4979
       %4981 = OpFMul %float %4976 %float_n6_28318548
       %4982 = OpExtInst %float %1 Fma %4970 %float_6_28318548 %4981
       %4983 = OpFMul %float %4980 %float_n6_28318548
       %4984 = OpExtInst %float %1 Fma %4975 %float_6_28318548 %4983
       %4985 = OpExtInst %float %1 Fma %4982 %float_2097152 %4984
       %4986 = OpFMul %float %4963 %2599
       %4987 = OpExtInst %float %1 Sin %4985
       %4988 = OpFMul %float %4987 %4986
       %4989 = OpCompositeConstruct %v3float %551 %551 %4988
       %4990 = OpFAdd %v3float %4967 %4989
       %4991 = OpFMul %float %4899 %4595
       %4992 = OpFMul %float %4598 %4991
       %4993 = OpFDiv %float %float_2 %4992
       %4994 = OpFMul %float %4592 %4993
       %4995 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_2
       %4996 = OpLoad %float %4995
       %4997 = OpFMul %float %4993 %4996
       %4998 = OpFMul %float %4997 %3858
       %4999 = OpExtInst %float %1 Fma %4593 %4993 %4998
       %5000 = OpExtInst %float %1 Floor %4994
       %5001 = OpFNegate %float %5000
       %5002 = OpExtInst %float %1 Fma %4592 %4993 %5001
       %5003 = OpExtInst %float %1 Fma %5002 %float_2097152 %4999
       %5004 = OpExtInst %float %1 Floor %5003
       %5005 = OpFMul %float %5000 %float_n6_28318548
       %5006 = OpExtInst %float %1 Fma %4994 %float_6_28318548 %5005
       %5007 = OpFMul %float %5004 %float_n6_28318548
       %5008 = OpExtInst %float %1 Fma %4999 %float_6_28318548 %5007
       %5009 = OpExtInst %float %1 Fma %5006 %float_2097152 %5008
       %5010 = OpFMul %float %4918 %2738
       %5011 = OpExtInst %float %1 Sin %5009
       %5012 = OpFMul %float %5011 %5010
       %5013 = OpFMul %float %4992 %4453
       %5014 = OpFDiv %float %float_2 %5013
       %5015 = OpFMul %float %4632 %5014
       %5016 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_3
       %5017 = OpLoad %float %5016
       %5018 = OpFMul %float %5014 %5017
       %5019 = OpFMul %float %5018 %3858
       %5020 = OpExtInst %float %1 Fma %4633 %5014 %5019
       %5021 = OpExtInst %float %1 Floor %5015
       %5022 = OpFNegate %float %5021
       %5023 = OpExtInst %float %1 Fma %4632 %5014 %5022
       %5024 = OpExtInst %float %1 Fma %5023 %float_2097152 %5020
       %5025 = OpExtInst %float %1 Floor %5024
       %5026 = OpFMul %float %5021 %float_n6_28318548
       %5027 = OpExtInst %float %1 Fma %5015 %float_6_28318548 %5026
       %5028 = OpFMul %float %5025 %float_n6_28318548
       %5029 = OpExtInst %float %1 Fma %5020 %float_6_28318548 %5028
       %5030 = OpExtInst %float %1 Fma %5027 %float_2097152 %5029
       %5031 = OpFMul %float %5010 %2599
       %5032 = OpExtInst %float %1 Sin %5030
       %5033 = OpFMul %float %5032 %5031
       %5034 = OpCompositeConstruct %v3float %551 %551 %5012
       %5035 = OpCompositeConstruct %v3float %551 %551 %5033
       %5036 = OpFAdd %v3float %5034 %5035
       %5037 = OpFMul %float %5013 %4453
       %5038 = OpFDiv %float %float_2 %5037
       %5039 = OpFMul %float %4670 %5038
       %5040 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_0
       %5041 = OpLoad %float %5040
       %5042 = OpFMul %float %5038 %5041
       %5043 = OpFMul %float %5042 %3858
       %5044 = OpExtInst %float %1 Fma %4671 %5038 %5043
       %5045 = OpExtInst %float %1 Floor %5039
       %5046 = OpFNegate %float %5045
       %5047 = OpExtInst %float %1 Fma %4670 %5038 %5046
       %5048 = OpExtInst %float %1 Fma %5047 %float_2097152 %5044
       %5049 = OpExtInst %float %1 Floor %5048
       %5050 = OpFMul %float %5045 %float_n6_28318548
       %5051 = OpExtInst %float %1 Fma %5039 %float_6_28318548 %5050
       %5052 = OpFMul %float %5049 %float_n6_28318548
       %5053 = OpExtInst %float %1 Fma %5044 %float_6_28318548 %5052
       %5054 = OpExtInst %float %1 Fma %5051 %float_2097152 %5053
       %5055 = OpFMul %float %5031 %2599
       %5056 = OpExtInst %float %1 Sin %5054
       %5057 = OpFMul %float %5056 %5055
       %5058 = OpCompositeConstruct %v3float %551 %551 %5057
       %5059 = OpFAdd %v3float %5036 %5058
       %5060 = OpFMul %float %5037 %4453
       %5061 = OpFDiv %float %float_2 %5060
       %5062 = OpFMul %float %4707 %5061
       %5063 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_1
       %5064 = OpLoad %float %5063
       %5065 = OpFMul %float %5061 %5064
       %5066 = OpFMul %float %5065 %3858
       %5067 = OpExtInst %float %1 Fma %4708 %5061 %5066
       %5068 = OpExtInst %float %1 Floor %5062
       %5069 = OpFNegate %float %5068
       %5070 = OpExtInst %float %1 Fma %4707 %5061 %5069
       %5071 = OpExtInst %float %1 Fma %5070 %float_2097152 %5067
       %5072 = OpExtInst %float %1 Floor %5071
       %5073 = OpFMul %float %5068 %float_n6_28318548
       %5074 = OpExtInst %float %1 Fma %5062 %float_6_28318548 %5073
       %5075 = OpFMul %float %5072 %float_n6_28318548
       %5076 = OpExtInst %float %1 Fma %5067 %float_6_28318548 %5075
       %5077 = OpExtInst %float %1 Fma %5074 %float_2097152 %5076
       %5078 = OpFMul %float %5055 %2599
       %5079 = OpExtInst %float %1 Sin %5077
       %5080 = OpFMul %float %5079 %5078
       %5081 = OpCompositeConstruct %v3float %551 %551 %5080
       %5082 = OpFAdd %v3float %5059 %5081
       %5083 = OpFAdd %v3float %4990 %5082
       %5084 = OpFMul %float %4776 %4991
       %5085 = OpFDiv %float %float_2 %5084
       %5086 = OpFMul %float %4773 %5085
       %5087 = OpFMul %float %5085 %4996
       %5088 = OpFMul %float %5087 %3858
       %5089 = OpExtInst %float %1 Fma %4774 %5085 %5088
       %5090 = OpExtInst %float %1 Floor %5086
       %5091 = OpFNegate %float %5090
       %5092 = OpExtInst %float %1 Fma %4773 %5085 %5091
       %5093 = OpExtInst %float %1 Fma %5092 %float_2097152 %5089
       %5094 = OpExtInst %float %1 Floor %5093
       %5095 = OpFMul %float %5090 %float_n6_28318548
       %5096 = OpExtInst %float %1 Fma %5086 %float_6_28318548 %5095
       %5097 = OpFMul %float %5094 %float_n6_28318548
       %5098 = OpExtInst %float %1 Fma %5089 %float_6_28318548 %5097
       %5099 = OpExtInst %float %1 Fma %5096 %float_2097152 %5098
       %5100 = OpExtInst %float %1 Sin %5099
       %5101 = OpFMul %float %5100 %5010
       %5102 = OpFMul %float %5084 %4453
       %5103 = OpFDiv %float %float_2 %5102
       %5104 = OpFMul %float %4807 %5103
       %5105 = OpFMul %float %5103 %5017
       %5106 = OpFMul %float %5105 %3858
       %5107 = OpExtInst %float %1 Fma %4808 %5103 %5106
       %5108 = OpExtInst %float %1 Floor %5104
       %5109 = OpFNegate %float %5108
       %5110 = OpExtInst %float %1 Fma %4807 %5103 %5109
       %5111 = OpExtInst %float %1 Fma %5110 %float_2097152 %5107
       %5112 = OpExtInst %float %1 Floor %5111
       %5113 = OpFMul %float %5108 %float_n6_28318548
       %5114 = OpExtInst %float %1 Fma %5104 %float_6_28318548 %5113
       %5115 = OpFMul %float %5112 %float_n6_28318548
       %5116 = OpExtInst %float %1 Fma %5107 %float_6_28318548 %5115
       %5117 = OpExtInst %float %1 Fma %5114 %float_2097152 %5116
       %5118 = OpExtInst %float %1 Sin %5117
       %5119 = OpFMul %float %5118 %5031
       %5120 = OpCompositeConstruct %v3float %551 %551 %5101
       %5121 = OpCompositeConstruct %v3float %551 %551 %5119
       %5122 = OpFAdd %v3float %5120 %5121
       %5123 = OpFMul %float %5102 %4453
       %5124 = OpFDiv %float %float_2 %5123
       %5125 = OpFMul %float %4842 %5124
       %5126 = OpFMul %float %5124 %5041
       %5127 = OpFMul %float %5126 %3858
       %5128 = OpExtInst %float %1 Fma %4843 %5124 %5127
       %5129 = OpExtInst %float %1 Floor %5125
       %5130 = OpFNegate %float %5129
       %5131 = OpExtInst %float %1 Fma %4842 %5124 %5130
       %5132 = OpExtInst %float %1 Fma %5131 %float_2097152 %5128
       %5133 = OpExtInst %float %1 Floor %5132
       %5134 = OpFMul %float %5129 %float_n6_28318548
       %5135 = OpExtInst %float %1 Fma %5125 %float_6_28318548 %5134
       %5136 = OpFMul %float %5133 %float_n6_28318548
       %5137 = OpExtInst %float %1 Fma %5128 %float_6_28318548 %5136
       %5138 = OpExtInst %float %1 Fma %5135 %float_2097152 %5137
       %5139 = OpExtInst %float %1 Sin %5138
       %5140 = OpFMul %float %5139 %5055
       %5141 = OpCompositeConstruct %v3float %551 %551 %5140
       %5142 = OpFAdd %v3float %5122 %5141
       %5143 = OpFMul %float %5123 %4453
       %5144 = OpFDiv %float %float_2 %5143
       %5145 = OpFMul %float %4876 %5144
       %5146 = OpFMul %float %5144 %5064
       %5147 = OpFMul %float %5146 %3858
       %5148 = OpExtInst %float %1 Fma %4877 %5144 %5147
       %5149 = OpExtInst %float %1 Floor %5145
       %5150 = OpFNegate %float %5149
       %5151 = OpExtInst %float %1 Fma %4876 %5144 %5150
       %5152 = OpExtInst %float %1 Fma %5151 %float_2097152 %5148
       %5153 = OpExtInst %float %1 Floor %5152
       %5154 = OpFMul %float %5149 %float_n6_28318548
       %5155 = OpExtInst %float %1 Fma %5145 %float_6_28318548 %5154
       %5156 = OpFMul %float %5153 %float_n6_28318548
       %5157 = OpExtInst %float %1 Fma %5148 %float_6_28318548 %5156
       %5158 = OpExtInst %float %1 Fma %5155 %float_2097152 %5157
       %5159 = OpExtInst %float %1 Sin %5158
       %5160 = OpFMul %float %5159 %5078
       %5161 = OpCompositeConstruct %v3float %551 %551 %5160
       %5162 = OpFAdd %v3float %5142 %5161
       %5163 = OpFAdd %v3float %5083 %5162
       %5164 = OpFMul %float %3571 %float_4
       %5165 = OpFMul %float %3573 %5164
       %5166 = OpFDiv %float %float_2 %5165
       %5167 = OpFMul %float %3567 %5166
       %5168 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_2
       %5169 = OpLoad %float %5168
       %5170 = OpFMul %float %5166 %5169
       %5171 = OpFMul %float %5170 %3858
       %5172 = OpExtInst %float %1 Fma %3568 %5166 %5171
       %5173 = OpExtInst %float %1 Floor %5167
       %5174 = OpFNegate %float %5173
       %5175 = OpExtInst %float %1 Fma %3567 %5166 %5174
       %5176 = OpExtInst %float %1 Fma %5175 %float_2097152 %5172
       %5177 = OpExtInst %float %1 Floor %5176
       %5178 = OpFMul %float %5173 %float_n6_28318548
       %5179 = OpExtInst %float %1 Fma %5167 %float_6_28318548 %5178
       %5180 = OpFMul %float %5177 %float_n6_28318548
       %5181 = OpExtInst %float %1 Fma %5172 %float_6_28318548 %5180
       %5182 = OpExtInst %float %1 Fma %5179 %float_2097152 %5181
       %5183 = OpExtInst %float %1 Sin %5182
       %5184 = OpFMul %float %5183 %4918
       %5185 = OpFMul %float %5165 %4453
       %5186 = OpFDiv %float %float_2 %5185
       %5187 = OpFMul %float %4450 %5186
       %5188 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_3
       %5189 = OpLoad %float %5188
       %5190 = OpFMul %float %5186 %5189
       %5191 = OpFMul %float %5190 %3858
       %5192 = OpExtInst %float %1 Fma %4451 %5186 %5191
       %5193 = OpExtInst %float %1 Floor %5187
       %5194 = OpFNegate %float %5193
       %5195 = OpExtInst %float %1 Fma %4450 %5186 %5194
       %5196 = OpExtInst %float %1 Fma %5195 %float_2097152 %5192
       %5197 = OpExtInst %float %1 Floor %5196
       %5198 = OpFMul %float %5193 %float_n6_28318548
       %5199 = OpExtInst %float %1 Fma %5187 %float_6_28318548 %5198
       %5200 = OpFMul %float %5197 %float_n6_28318548
       %5201 = OpExtInst %float %1 Fma %5192 %float_6_28318548 %5200
       %5202 = OpExtInst %float %1 Fma %5199 %float_2097152 %5201
       %5203 = OpExtInst %float %1 Sin %5202
       %5204 = OpFMul %float %5203 %4939
       %5205 = OpCompositeConstruct %v3float %551 %551 %5184
       %5206 = OpCompositeConstruct %v3float %551 %551 %5204
       %5207 = OpFAdd %v3float %5205 %5206
       %5208 = OpFMul %float %5185 %4453
       %5209 = OpFDiv %float %float_2 %5208
       %5210 = OpFMul %float %4490 %5209
       %5211 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_74 %int_0
       %5212 = OpLoad %float %5211
       %5213 = OpFMul %float %5209 %5212
       %5214 = OpFMul %float %5213 %3858
       %5215 = OpExtInst %float %1 Fma %4491 %5209 %5214
       %5216 = OpExtInst %float %1 Floor %5210
       %5217 = OpFNegate %float %5216
       %5218 = OpExtInst %float %1 Fma %4490 %5209 %5217
       %5219 = OpExtInst %float %1 Fma %5218 %float_2097152 %5215
       %5220 = OpExtInst %float %1 Floor %5219
       %5221 = OpFMul %float %5216 %float_n6_28318548
       %5222 = OpExtInst %float %1 Fma %5210 %float_6_28318548 %5221
       %5223 = OpFMul %float %5220 %float_n6_28318548
       %5224 = OpExtInst %float %1 Fma %5215 %float_6_28318548 %5223
       %5225 = OpExtInst %float %1 Fma %5222 %float_2097152 %5224
       %5226 = OpExtInst %float %1 Sin %5225
       %5227 = OpFMul %float %5226 %4963
       %5228 = OpCompositeConstruct %v3float %551 %551 %5227
       %5229 = OpFAdd %v3float %5207 %5228
       %5230 = OpFMul %float %5208 %4453
       %5231 = OpFDiv %float %float_2 %5230
       %5232 = OpFMul %float %4527 %5231
       %5233 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_74 %int_1
       %5234 = OpLoad %float %5233
       %5235 = OpFMul %float %5231 %5234
       %5236 = OpFMul %float %5235 %3858
       %5237 = OpExtInst %float %1 Fma %4528 %5231 %5236
       %5238 = OpExtInst %float %1 Floor %5232
       %5239 = OpFNegate %float %5238
       %5240 = OpExtInst %float %1 Fma %4527 %5231 %5239
       %5241 = OpExtInst %float %1 Fma %5240 %float_2097152 %5237
       %5242 = OpExtInst %float %1 Floor %5241
       %5243 = OpFMul %float %5238 %float_n6_28318548
       %5244 = OpExtInst %float %1 Fma %5232 %float_6_28318548 %5243
       %5245 = OpFMul %float %5242 %float_n6_28318548
       %5246 = OpExtInst %float %1 Fma %5237 %float_6_28318548 %5245
       %5247 = OpExtInst %float %1 Fma %5244 %float_2097152 %5246
       %5248 = OpExtInst %float %1 Sin %5247
       %5249 = OpFMul %float %5248 %4986
       %5250 = OpCompositeConstruct %v3float %551 %551 %5249
       %5251 = OpFAdd %v3float %5229 %5250
       %5252 = OpFMul %float %5164 %4595
       %5253 = OpFMul %float %4598 %5252
       %5254 = OpFDiv %float %float_2 %5253
       %5255 = OpFMul %float %4592 %5254
       %5256 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_74 %int_2
       %5257 = OpLoad %float %5256
       %5258 = OpFMul %float %5254 %5257
       %5259 = OpFMul %float %5258 %3858
       %5260 = OpExtInst %float %1 Fma %4593 %5254 %5259
       %5261 = OpExtInst %float %1 Floor %5255
       %5262 = OpFNegate %float %5261
       %5263 = OpExtInst %float %1 Fma %4592 %5254 %5262
       %5264 = OpExtInst %float %1 Fma %5263 %float_2097152 %5260
       %5265 = OpExtInst %float %1 Floor %5264
       %5266 = OpFMul %float %5261 %float_n6_28318548
       %5267 = OpExtInst %float %1 Fma %5255 %float_6_28318548 %5266
       %5268 = OpFMul %float %5265 %float_n6_28318548
       %5269 = OpExtInst %float %1 Fma %5260 %float_6_28318548 %5268
       %5270 = OpExtInst %float %1 Fma %5267 %float_2097152 %5269
       %5271 = OpExtInst %float %1 Sin %5270
       %5272 = OpFMul %float %5271 %5010
       %5273 = OpFMul %float %5253 %4453
       %5274 = OpFDiv %float %float_2 %5273
       %5275 = OpFMul %float %4632 %5274
       %5276 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_74 %int_3
       %5277 = OpLoad %float %5276
       %5278 = OpFMul %float %5274 %5277
       %5279 = OpFMul %float %5278 %3858
       %5280 = OpExtInst %float %1 Fma %4633 %5274 %5279
       %5281 = OpExtInst %float %1 Floor %5275
       %5282 = OpFNegate %float %5281
       %5283 = OpExtInst %float %1 Fma %4632 %5274 %5282
       %5284 = OpExtInst %float %1 Fma %5283 %float_2097152 %5280
       %5285 = OpExtInst %float %1 Floor %5284
       %5286 = OpFMul %float %5281 %float_n6_28318548
       %5287 = OpExtInst %float %1 Fma %5275 %float_6_28318548 %5286
       %5288 = OpFMul %float %5285 %float_n6_28318548
       %5289 = OpExtInst %float %1 Fma %5280 %float_6_28318548 %5288
       %5290 = OpExtInst %float %1 Fma %5287 %float_2097152 %5289
       %5291 = OpExtInst %float %1 Sin %5290
       %5292 = OpFMul %float %5291 %5031
       %5293 = OpCompositeConstruct %v3float %551 %551 %5272
       %5294 = OpCompositeConstruct %v3float %551 %551 %5292
       %5295 = OpFAdd %v3float %5293 %5294
       %5296 = OpFMul %float %5273 %4453
       %5297 = OpFDiv %float %float_2 %5296
       %5298 = OpFMul %float %4670 %5297
       %5299 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_0
       %5300 = OpLoad %float %5299
       %5301 = OpFMul %float %5297 %5300
       %5302 = OpFMul %float %5301 %3858
       %5303 = OpExtInst %float %1 Fma %4671 %5297 %5302
       %5304 = OpExtInst %float %1 Floor %5298
       %5305 = OpFNegate %float %5304
       %5306 = OpExtInst %float %1 Fma %4670 %5297 %5305
       %5307 = OpExtInst %float %1 Fma %5306 %float_2097152 %5303
       %5308 = OpExtInst %float %1 Floor %5307
       %5309 = OpFMul %float %5304 %float_n6_28318548
       %5310 = OpExtInst %float %1 Fma %5298 %float_6_28318548 %5309
       %5311 = OpFMul %float %5308 %float_n6_28318548
       %5312 = OpExtInst %float %1 Fma %5303 %float_6_28318548 %5311
       %5313 = OpExtInst %float %1 Fma %5310 %float_2097152 %5312
       %5314 = OpExtInst %float %1 Sin %5313
       %5315 = OpFMul %float %5314 %5055
       %5316 = OpCompositeConstruct %v3float %551 %551 %5315
       %5317 = OpFAdd %v3float %5295 %5316
       %5318 = OpFMul %float %5296 %4453
       %5319 = OpFDiv %float %float_2 %5318
       %5320 = OpFMul %float %4707 %5319
       %5321 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_1
       %5322 = OpLoad %float %5321
       %5323 = OpFMul %float %5319 %5322
       %5324 = OpFMul %float %5323 %3858
       %5325 = OpExtInst %float %1 Fma %4708 %5319 %5324
       %5326 = OpExtInst %float %1 Floor %5320
       %5327 = OpFNegate %float %5326
       %5328 = OpExtInst %float %1 Fma %4707 %5319 %5327
       %5329 = OpExtInst %float %1 Fma %5328 %float_2097152 %5325
       %5330 = OpExtInst %float %1 Floor %5329
       %5331 = OpFMul %float %5326 %float_n6_28318548
       %5332 = OpExtInst %float %1 Fma %5320 %float_6_28318548 %5331
       %5333 = OpFMul %float %5330 %float_n6_28318548
       %5334 = OpExtInst %float %1 Fma %5325 %float_6_28318548 %5333
       %5335 = OpExtInst %float %1 Fma %5332 %float_2097152 %5334
       %5336 = OpExtInst %float %1 Sin %5335
       %5337 = OpFMul %float %5336 %5078
       %5338 = OpCompositeConstruct %v3float %551 %551 %5337
       %5339 = OpFAdd %v3float %5317 %5338
       %5340 = OpFAdd %v3float %5251 %5339
       %5341 = OpFMul %float %4776 %5252
       %5342 = OpFDiv %float %float_2 %5341
       %5343 = OpFMul %float %4773 %5342
       %5344 = OpFMul %float %5342 %5257
       %5345 = OpFMul %float %5344 %3858
       %5346 = OpExtInst %float %1 Fma %4774 %5342 %5345
       %5347 = OpExtInst %float %1 Floor %5343
       %5348 = OpFNegate %float %5347
       %5349 = OpExtInst %float %1 Fma %4773 %5342 %5348
       %5350 = OpExtInst %float %1 Fma %5349 %float_2097152 %5346
       %5351 = OpExtInst %float %1 Floor %5350
       %5352 = OpFMul %float %5347 %float_n6_28318548
       %5353 = OpExtInst %float %1 Fma %5343 %float_6_28318548 %5352
       %5354 = OpFMul %float %5351 %float_n6_28318548
       %5355 = OpExtInst %float %1 Fma %5346 %float_6_28318548 %5354
       %5356 = OpExtInst %float %1 Fma %5353 %float_2097152 %5355
       %5357 = OpExtInst %float %1 Sin %5356
       %5358 = OpFMul %float %5357 %5010
       %5359 = OpFMul %float %5341 %4453
       %5360 = OpFDiv %float %float_2 %5359
       %5361 = OpFMul %float %4807 %5360
       %5362 = OpFMul %float %5360 %5277
       %5363 = OpFMul %float %5362 %3858
       %5364 = OpExtInst %float %1 Fma %4808 %5360 %5363
       %5365 = OpExtInst %float %1 Floor %5361
       %5366 = OpFNegate %float %5365
       %5367 = OpExtInst %float %1 Fma %4807 %5360 %5366
       %5368 = OpExtInst %float %1 Fma %5367 %float_2097152 %5364
       %5369 = OpExtInst %float %1 Floor %5368
       %5370 = OpFMul %float %5365 %float_n6_28318548
       %5371 = OpExtInst %float %1 Fma %5361 %float_6_28318548 %5370
       %5372 = OpFMul %float %5369 %float_n6_28318548
       %5373 = OpExtInst %float %1 Fma %5364 %float_6_28318548 %5372
       %5374 = OpExtInst %float %1 Fma %5371 %float_2097152 %5373
       %5375 = OpExtInst %float %1 Sin %5374
       %5376 = OpFMul %float %5375 %5031
       %5377 = OpCompositeConstruct %v3float %551 %551 %5358
       %5378 = OpCompositeConstruct %v3float %551 %551 %5376
       %5379 = OpFAdd %v3float %5377 %5378
       %5380 = OpFMul %float %5359 %4453
       %5381 = OpFDiv %float %float_2 %5380
       %5382 = OpFMul %float %4842 %5381
       %5383 = OpFMul %float %5381 %5300
       %5384 = OpFMul %float %5383 %3858
       %5385 = OpExtInst %float %1 Fma %4843 %5381 %5384
       %5386 = OpExtInst %float %1 Floor %5382
       %5387 = OpFNegate %float %5386
       %5388 = OpExtInst %float %1 Fma %4842 %5381 %5387
       %5389 = OpExtInst %float %1 Fma %5388 %float_2097152 %5385
       %5390 = OpExtInst %float %1 Floor %5389
       %5391 = OpFMul %float %5386 %float_n6_28318548
       %5392 = OpExtInst %float %1 Fma %5382 %float_6_28318548 %5391
       %5393 = OpFMul %float %5390 %float_n6_28318548
       %5394 = OpExtInst %float %1 Fma %5385 %float_6_28318548 %5393
       %5395 = OpExtInst %float %1 Fma %5392 %float_2097152 %5394
       %5396 = OpExtInst %float %1 Sin %5395
       %5397 = OpFMul %float %5396 %5055
       %5398 = OpCompositeConstruct %v3float %551 %551 %5397
       %5399 = OpFAdd %v3float %5379 %5398
       %5400 = OpFMul %float %5380 %4453
       %5401 = OpFDiv %float %float_2 %5400
       %5402 = OpFMul %float %4876 %5401
       %5403 = OpFMul %float %5401 %5322
       %5404 = OpFMul %float %5403 %3858
       %5405 = OpExtInst %float %1 Fma %4877 %5401 %5404
       %5406 = OpExtInst %float %1 Floor %5402
       %5407 = OpFNegate %float %5406
       %5408 = OpExtInst %float %1 Fma %4876 %5401 %5407
       %5409 = OpExtInst %float %1 Fma %5408 %float_2097152 %5405
       %5410 = OpExtInst %float %1 Floor %5409
       %5411 = OpFMul %float %5406 %float_n6_28318548
       %5412 = OpExtInst %float %1 Fma %5402 %float_6_28318548 %5411
       %5413 = OpFMul %float %5410 %float_n6_28318548
       %5414 = OpExtInst %float %1 Fma %5405 %float_6_28318548 %5413
       %5415 = OpExtInst %float %1 Fma %5412 %float_2097152 %5414
       %5416 = OpExtInst %float %1 Sin %5415
       %5417 = OpFMul %float %5416 %5078
       %5418 = OpCompositeConstruct %v3float %551 %551 %5417
       %5419 = OpFAdd %v3float %5399 %5418
       %5420 = OpFAdd %v3float %5340 %5419
       %5421 = OpFMul %float %3571 %float_0_75
       %5422 = OpFMul %float %3573 %5421
       %5423 = OpFDiv %float %float_2 %5422
       %5424 = OpFMul %float %3567 %5423
       %5425 = OpFMul %float %5423 %4904
       %5426 = OpFMul %float %5425 %3858
       %5427 = OpExtInst %float %1 Fma %3568 %5423 %5426
       %5428 = OpExtInst %float %1 Floor %5424
       %5429 = OpFNegate %float %5428
       %5430 = OpExtInst %float %1 Fma %3567 %5423 %5429
       %5431 = OpExtInst %float %1 Fma %5430 %float_2097152 %5427
       %5432 = OpExtInst %float %1 Floor %5431
       %5433 = OpFMul %float %5428 %float_n6_28318548
       %5434 = OpExtInst %float %1 Fma %5424 %float_6_28318548 %5433
       %5435 = OpFMul %float %5432 %float_n6_28318548
       %5436 = OpExtInst %float %1 Fma %5427 %float_6_28318548 %5435
       %5437 = OpExtInst %float %1 Fma %5434 %float_2097152 %5436
       %5438 = OpFMul %float %4435 %float_0_5
       %5439 = OpExtInst %float %1 Sin %5437
       %5440 = OpFMul %float %5439 %5438
       %5441 = OpFMul %float %5422 %4453
       %5442 = OpFDiv %float %float_2 %5441
       %5443 = OpFMul %float %4450 %5442
       %5444 = OpFMul %float %5442 %4925
       %5445 = OpFMul %float %5444 %3858
       %5446 = OpExtInst %float %1 Fma %4451 %5442 %5445
       %5447 = OpExtInst %float %1 Floor %5443
       %5448 = OpFNegate %float %5447
       %5449 = OpExtInst %float %1 Fma %4450 %5442 %5448
       %5450 = OpExtInst %float %1 Fma %5449 %float_2097152 %5446
       %5451 = OpExtInst %float %1 Floor %5450
       %5452 = OpFMul %float %5447 %float_n6_28318548
       %5453 = OpExtInst %float %1 Fma %5443 %float_6_28318548 %5452
       %5454 = OpFMul %float %5451 %float_n6_28318548
       %5455 = OpExtInst %float %1 Fma %5446 %float_6_28318548 %5454
       %5456 = OpExtInst %float %1 Fma %5453 %float_2097152 %5455
       %5457 = OpFMul %float %5438 %2599
       %5458 = OpExtInst %float %1 Sin %5456
       %5459 = OpFMul %float %5458 %5457
       %5460 = OpCompositeConstruct %v3float %551 %551 %5440
       %5461 = OpCompositeConstruct %v3float %551 %551 %5459
       %5462 = OpFAdd %v3float %5460 %5461
       %5463 = OpFMul %float %5441 %4453
       %5464 = OpFDiv %float %float_2 %5463
       %5465 = OpFMul %float %4490 %5464
       %5466 = OpFMul %float %5464 %4949
       %5467 = OpFMul %float %5466 %3858
       %5468 = OpExtInst %float %1 Fma %4491 %5464 %5467
       %5469 = OpExtInst %float %1 Floor %5465
       %5470 = OpFNegate %float %5469
       %5471 = OpExtInst %float %1 Fma %4490 %5464 %5470
       %5472 = OpExtInst %float %1 Fma %5471 %float_2097152 %5468
       %5473 = OpExtInst %float %1 Floor %5472
       %5474 = OpFMul %float %5469 %float_n6_28318548
       %5475 = OpExtInst %float %1 Fma %5465 %float_6_28318548 %5474
       %5476 = OpFMul %float %5473 %float_n6_28318548
       %5477 = OpExtInst %float %1 Fma %5468 %float_6_28318548 %5476
       %5478 = OpExtInst %float %1 Fma %5475 %float_2097152 %5477
       %5479 = OpFMul %float %5457 %2599
       %5480 = OpExtInst %float %1 Sin %5478
       %5481 = OpFMul %float %5480 %5479
       %5482 = OpCompositeConstruct %v3float %551 %551 %5481
       %5483 = OpFAdd %v3float %5462 %5482
       %5484 = OpFMul %float %5463 %4453
       %5485 = OpFDiv %float %float_2 %5484
       %5486 = OpFMul %float %4527 %5485
       %5487 = OpFMul %float %5485 %4972
       %5488 = OpFMul %float %5487 %3858
       %5489 = OpExtInst %float %1 Fma %4528 %5485 %5488
       %5490 = OpExtInst %float %1 Floor %5486
       %5491 = OpFNegate %float %5490
       %5492 = OpExtInst %float %1 Fma %4527 %5485 %5491
       %5493 = OpExtInst %float %1 Fma %5492 %float_2097152 %5489
       %5494 = OpExtInst %float %1 Floor %5493
       %5495 = OpFMul %float %5490 %float_n6_28318548
       %5496 = OpExtInst %float %1 Fma %5486 %float_6_28318548 %5495
       %5497 = OpFMul %float %5494 %float_n6_28318548
       %5498 = OpExtInst %float %1 Fma %5489 %float_6_28318548 %5497
       %5499 = OpExtInst %float %1 Fma %5496 %float_2097152 %5498
       %5500 = OpFMul %float %5479 %2599
       %5501 = OpExtInst %float %1 Sin %5499
       %5502 = OpFMul %float %5501 %5500
       %5503 = OpCompositeConstruct %v3float %551 %551 %5502
       %5504 = OpFAdd %v3float %5483 %5503
       %5505 = OpFMul %float %5421 %4595
       %5506 = OpFMul %float %4598 %5505
       %5507 = OpFDiv %float %float_2 %5506
       %5508 = OpFMul %float %4592 %5507
       %5509 = OpFMul %float %5507 %4996
       %5510 = OpFMul %float %5509 %3858
       %5511 = OpExtInst %float %1 Fma %4593 %5507 %5510
       %5512 = OpExtInst %float %1 Floor %5508
       %5513 = OpFNegate %float %5512
       %5514 = OpExtInst %float %1 Fma %4592 %5507 %5513
       %5515 = OpExtInst %float %1 Fma %5514 %float_2097152 %5511
       %5516 = OpExtInst %float %1 Floor %5515
       %5517 = OpFMul %float %5512 %float_n6_28318548
       %5518 = OpExtInst %float %1 Fma %5508 %float_6_28318548 %5517
       %5519 = OpFMul %float %5516 %float_n6_28318548
       %5520 = OpExtInst %float %1 Fma %5511 %float_6_28318548 %5519
       %5521 = OpExtInst %float %1 Fma %5518 %float_2097152 %5520
       %5522 = OpFMul %float %5438 %2738
       %5523 = OpExtInst %float %1 Sin %5521
       %5524 = OpFMul %float %5523 %5522
       %5525 = OpFMul %float %5506 %4453
       %5526 = OpFDiv %float %float_2 %5525
       %5527 = OpFMul %float %4632 %5526
       %5528 = OpFMul %float %5526 %5017
       %5529 = OpFMul %float %5528 %3858
       %5530 = OpExtInst %float %1 Fma %4633 %5526 %5529
       %5531 = OpExtInst %float %1 Floor %5527
       %5532 = OpFNegate %float %5531
       %5533 = OpExtInst %float %1 Fma %4632 %5526 %5532
       %5534 = OpExtInst %float %1 Fma %5533 %float_2097152 %5530
       %5535 = OpExtInst %float %1 Floor %5534
       %5536 = OpFMul %float %5531 %float_n6_28318548
       %5537 = OpExtInst %float %1 Fma %5527 %float_6_28318548 %5536
       %5538 = OpFMul %float %5535 %float_n6_28318548
       %5539 = OpExtInst %float %1 Fma %5530 %float_6_28318548 %5538
       %5540 = OpExtInst %float %1 Fma %5537 %float_2097152 %5539
       %5541 = OpFMul %float %5522 %2599
       %5542 = OpExtInst %float %1 Sin %5540
       %5543 = OpFMul %float %5542 %5541
       %5544 = OpCompositeConstruct %v3float %551 %551 %5524
       %5545 = OpCompositeConstruct %v3float %551 %551 %5543
       %5546 = OpFAdd %v3float %5544 %5545
       %5547 = OpFMul %float %5525 %4453
       %5548 = OpFDiv %float %float_2 %5547
       %5549 = OpFMul %float %4670 %5548
       %5550 = OpFMul %float %5548 %5041
       %5551 = OpFMul %float %5550 %3858
       %5552 = OpExtInst %float %1 Fma %4671 %5548 %5551
       %5553 = OpExtInst %float %1 Floor %5549
       %5554 = OpFNegate %float %5553
       %5555 = OpExtInst %float %1 Fma %4670 %5548 %5554
       %5556 = OpExtInst %float %1 Fma %5555 %float_2097152 %5552
       %5557 = OpExtInst %float %1 Floor %5556
       %5558 = OpFMul %float %5553 %float_n6_28318548
       %5559 = OpExtInst %float %1 Fma %5549 %float_6_28318548 %5558
       %5560 = OpFMul %float %5557 %float_n6_28318548
       %5561 = OpExtInst %float %1 Fma %5552 %float_6_28318548 %5560
       %5562 = OpExtInst %float %1 Fma %5559 %float_2097152 %5561
       %5563 = OpFMul %float %5541 %2599
       %5564 = OpExtInst %float %1 Sin %5562
       %5565 = OpFMul %float %5564 %5563
       %5566 = OpCompositeConstruct %v3float %551 %551 %5565
       %5567 = OpFAdd %v3float %5546 %5566
       %5568 = OpFMul %float %5547 %4453
       %5569 = OpFDiv %float %float_2 %5568
       %5570 = OpFMul %float %4707 %5569
       %5571 = OpFMul %float %5569 %5064
       %5572 = OpFMul %float %5571 %3858
       %5573 = OpExtInst %float %1 Fma %4708 %5569 %5572
       %5574 = OpExtInst %float %1 Floor %5570
       %5575 = OpFNegate %float %5574
       %5576 = OpExtInst %float %1 Fma %4707 %5569 %5575
       %5577 = OpExtInst %float %1 Fma %5576 %float_2097152 %5573
       %5578 = OpExtInst %float %1 Floor %5577
       %5579 = OpFMul %float %5574 %float_n6_28318548
       %5580 = OpExtInst %float %1 Fma %5570 %float_6_28318548 %5579
       %5581 = OpFMul %float %5578 %float_n6_28318548
       %5582 = OpExtInst %float %1 Fma %5573 %float_6_28318548 %5581
       %5583 = OpExtInst %float %1 Fma %5580 %float_2097152 %5582
       %5584 = OpFMul %float %5563 %2599
       %5585 = OpExtInst %float %1 Sin %5583
       %5586 = OpFMul %float %5585 %5584
       %5587 = OpCompositeConstruct %v3float %551 %551 %5586
       %5588 = OpFAdd %v3float %5567 %5587
       %5589 = OpFAdd %v3float %5504 %5588
       %5590 = OpFMul %float %4776 %5505
       %5591 = OpFDiv %float %float_2 %5590
       %5592 = OpFMul %float %4773 %5591
       %5593 = OpFMul %float %5591 %4996
       %5594 = OpFMul %float %5593 %3858
       %5595 = OpExtInst %float %1 Fma %4774 %5591 %5594
       %5596 = OpExtInst %float %1 Floor %5592
       %5597 = OpFNegate %float %5596
       %5598 = OpExtInst %float %1 Fma %4773 %5591 %5597
       %5599 = OpExtInst %float %1 Fma %5598 %float_2097152 %5595
       %5600 = OpExtInst %float %1 Floor %5599
       %5601 = OpFMul %float %5596 %float_n6_28318548
       %5602 = OpExtInst %float %1 Fma %5592 %float_6_28318548 %5601
       %5603 = OpFMul %float %5600 %float_n6_28318548
       %5604 = OpExtInst %float %1 Fma %5595 %float_6_28318548 %5603
       %5605 = OpExtInst %float %1 Fma %5602 %float_2097152 %5604
       %5606 = OpExtInst %float %1 Sin %5605
       %5607 = OpFMul %float %5606 %5522
       %5608 = OpFMul %float %5590 %4453
       %5609 = OpFDiv %float %float_2 %5608
       %5610 = OpFMul %float %4807 %5609
       %5611 = OpFMul %float %5609 %5017
       %5612 = OpFMul %float %5611 %3858
       %5613 = OpExtInst %float %1 Fma %4808 %5609 %5612
       %5614 = OpExtInst %float %1 Floor %5610
       %5615 = OpFNegate %float %5614
       %5616 = OpExtInst %float %1 Fma %4807 %5609 %5615
       %5617 = OpExtInst %float %1 Fma %5616 %float_2097152 %5613
       %5618 = OpExtInst %float %1 Floor %5617
       %5619 = OpFMul %float %5614 %float_n6_28318548
       %5620 = OpExtInst %float %1 Fma %5610 %float_6_28318548 %5619
       %5621 = OpFMul %float %5618 %float_n6_28318548
       %5622 = OpExtInst %float %1 Fma %5613 %float_6_28318548 %5621
       %5623 = OpExtInst %float %1 Fma %5620 %float_2097152 %5622
       %5624 = OpExtInst %float %1 Sin %5623
       %5625 = OpFMul %float %5624 %5541
       %5626 = OpCompositeConstruct %v3float %551 %551 %5607
       %5627 = OpCompositeConstruct %v3float %551 %551 %5625
       %5628 = OpFAdd %v3float %5626 %5627
       %5629 = OpFMul %float %5608 %4453
       %5630 = OpFDiv %float %float_2 %5629
       %5631 = OpFMul %float %4842 %5630
       %5632 = OpFMul %float %5630 %5041
       %5633 = OpFMul %float %5632 %3858
       %5634 = OpExtInst %float %1 Fma %4843 %5630 %5633
       %5635 = OpExtInst %float %1 Floor %5631
       %5636 = OpFNegate %float %5635
       %5637 = OpExtInst %float %1 Fma %4842 %5630 %5636
       %5638 = OpExtInst %float %1 Fma %5637 %float_2097152 %5634
       %5639 = OpExtInst %float %1 Floor %5638
       %5640 = OpFMul %float %5635 %float_n6_28318548
       %5641 = OpExtInst %float %1 Fma %5631 %float_6_28318548 %5640
       %5642 = OpFMul %float %5639 %float_n6_28318548
       %5643 = OpExtInst %float %1 Fma %5634 %float_6_28318548 %5642
       %5644 = OpExtInst %float %1 Fma %5641 %float_2097152 %5643
       %5645 = OpExtInst %float %1 Sin %5644
       %5646 = OpFMul %float %5645 %5563
       %5647 = OpCompositeConstruct %v3float %551 %551 %5646
       %5648 = OpFAdd %v3float %5628 %5647
       %5649 = OpFMul %float %5629 %4453
       %5650 = OpFDiv %float %float_2 %5649
       %5651 = OpFMul %float %4876 %5650
       %5652 = OpFMul %float %5650 %5064
       %5653 = OpFMul %float %5652 %3858
       %5654 = OpExtInst %float %1 Fma %4877 %5650 %5653
       %5655 = OpExtInst %float %1 Floor %5651
       %5656 = OpFNegate %float %5655
       %5657 = OpExtInst %float %1 Fma %4876 %5650 %5656
       %5658 = OpExtInst %float %1 Fma %5657 %float_2097152 %5654
       %5659 = OpExtInst %float %1 Floor %5658
       %5660 = OpFMul %float %5655 %float_n6_28318548
       %5661 = OpExtInst %float %1 Fma %5651 %float_6_28318548 %5660
       %5662 = OpFMul %float %5659 %float_n6_28318548
       %5663 = OpExtInst %float %1 Fma %5654 %float_6_28318548 %5662
       %5664 = OpExtInst %float %1 Fma %5661 %float_2097152 %5663
       %5665 = OpExtInst %float %1 Sin %5664
       %5666 = OpFMul %float %5665 %5584
       %5667 = OpCompositeConstruct %v3float %551 %551 %5666
       %5668 = OpFAdd %v3float %5648 %5667
       %5669 = OpFAdd %v3float %5589 %5668
       %5670 = OpFAdd %v3float %5420 %5669
       %5671 = OpFAdd %v3float %5163 %5670
       %5672 = OpFAdd %v3float %4898 %5671
       %5673 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_2
       %5674 = OpLoad %float %5673
       %5675 = OpFSub %float %5674 %float_n1
       %5676 = OpExtInst %float %1 FAbs %5675
       %5677 = OpFOrdGreaterThan %bool %5676 %float_9_99999975en06
       %5678 = OpFOrdGreaterThanEqual %bool %5674 %float_n1
       %5679 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_3
       %5680 = OpLoad %float %5679
       %5681 = OpSelect %float %5678 %5674 %5680
       %5682 = OpSelect %float %5677 %5681 %5674
       %5683 = OpFSub %float %5682 %float_1
       %5684 = OpExtInst %float %1 FAbs %5683
       %5685 = OpFOrdGreaterThan %bool %5684 %float_9_99999975en06
       %5686 = OpFOrdGreaterThanEqual %bool %5682 %float_1
       %5687 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_76 %int_0
       %5688 = OpLoad %float %5687
       %5689 = OpSelect %float %5686 %5688 %5674
       %5690 = OpSelect %float %5685 %5689 %5674
       %5691 = OpExtInst %float %1 FAbs %5690
       %5692 = OpFOrdGreaterThan %bool %5691 %float_9_99999975en06
       %5693 = OpFOrdGreaterThanEqual %bool %5690 %float_0
       %5694 = OpSelect %float %5693 %float_1 %float_n1
       %5695 = OpSelect %float %5692 %5694 %float_1
       %5696 = OpExtInst %float %1 NMax %5695 %float_n1
       %5697 = OpExtInst %float %1 NMin %5696 %float_1
       %5698 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_77 %int_1
       %5699 = OpLoad %float %5698
       %5700 = OpCompositeConstruct %v3float %5697 %5699 %float_0
       %5701 = OpFAdd %v3float %5700 %1693
       %5702 = OpExtInst %v3float %1 NMax %5701 %280
       %5703 = OpExtInst %v3float %1 NMin %5702 %128
       %5704 = OpCompositeExtract %float %5703 0
       %5705 = OpCompositeExtract %float %5703 1
       %5706 = OpCompositeConstruct %v2float %5704 %5705
       %5707 = OpFMul %v2float %1701 %5706
       %5708 = OpFMul %v2float %5706 %1702
       %5709 = OpCompositeExtract %float %5707 0
       %5710 = OpCompositeExtract %float %5708 0
       %5711 = OpCompositeExtract %float %5707 1
       %5712 = OpCompositeExtract %float %5708 1
       %5713 = OpFAdd %float %5709 %5711
       %5714 = OpFAdd %float %5710 %5712
       %5715 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_2
       %5716 = OpLoad %float %5715
       %5717 = OpFMul %float %5716 %3571
       %5718 = OpFDiv %float %float_2 %5717
       %5719 = OpFMul %float %5713 %5718
       %5720 = OpFMul %float %5718 %3578
       %5721 = OpFAdd %v3float %647 %290
       %5722 = OpFMul %v3float %596 %3591
       %5723 = OpFMul %v3float %5721 %3591
       %5724 = OpFMul %v3float %5722 %3582
       %5725 = OpFMul %v3float %3582 %5723
       %5726 = OpFMul %v3float %5725 %3587
       %5727 = OpCompositeExtract %float %5726 0
       %5728 = OpCompositeExtract %float %5726 1
       %5729 = OpCompositeExtract %float %5726 2
       %5730 = OpCompositeConstruct %v2float %5729 %5729
       %5731 = OpFAdd %v2float %3599 %5730
       %5732 = OpCompositeExtract %float %5731 0
       %5733 = OpCompositeConstruct %v3float %5727 %5728 %5732
       %5734 = OpVectorTimesScalar %v3float %5733 %float_4_76837158en07
       %5735 = OpFAdd %v3float %5734 %138
       %5736 = OpExtInst %v3float %1 Fma %5724 %3587 %5735
       %5737 = OpExtInst %v3float %1 Floor %5736
       %5738 = OpFNegate %v3float %5737
       %5739 = OpExtInst %v3float %1 Fma %5724 %3587 %5738
       %5740 = OpVectorTimesScalar %v3float %5739 %float_2097152
       %5741 = OpFAdd %v3float %5740 %5733
       %5742 = OpVectorTimesScalar %v3float %5741 %float_1
               OpBranch %5743
       %5743 = OpLabel
       %5744 = OpPhi %v3float %5742 %4196 %5745 %5746
       %5747 = OpPhi %float %float_1 %4196 %5748 %5746
       %5749 = OpPhi %float %float_0 %4196 %5750 %5746
       %5751 = OpPhi %uint %uint_0 %4196 %5752 %5746
       %5753 = OpULessThan %bool %5751 %uint_6
               OpLoopMerge %5754 %5746 DontUnroll
               OpBranchConditional %5753 %5746 %5754
       %5746 = OpLabel
       %5755 = OpExtInst %v3float %1 Fract %5744
       %5756 = OpExtInst %v3float %1 Floor %5744
       %5757 = OpDot %float %5756 %387
       %5758 = OpFAdd %float %5757 %float_19
       %5759 = OpFAdd %float %5757 %float_47
       %5760 = OpFAdd %float %5757 %float_66
       %5761 = OpFAdd %float %5757 %float_101
       %5762 = OpFAdd %float %5757 %float_120
       %5763 = OpFAdd %float %5757 %float_148
       %5764 = OpFAdd %float %5757 %float_167
       %5765 = OpConvertFToS %int %5757
       %5766 = OpCompositeConstruct %v3int %5765 %int_0 %int_0
       %5767 = OpBitcast %v3uint %5766
       %5768 = OpIMul %v3uint %5767 %403
       %5769 = OpIAdd %v3uint %5768 %405
       %5770 = OpCompositeExtract %uint %5769 1
       %5771 = OpCompositeExtract %uint %5769 2
       %5772 = OpIMul %uint %5770 %5771
       %5773 = OpCompositeExtract %uint %5769 0
       %5774 = OpIAdd %uint %5773 %5772
       %5775 = OpIMul %uint %5771 %5774
       %5776 = OpIAdd %uint %5770 %5775
       %5777 = OpIMul %uint %5774 %5776
       %5778 = OpIAdd %uint %5771 %5777
       %5779 = OpIMul %uint %5776 %5778
       %5780 = OpIAdd %uint %5774 %5779
       %5781 = OpCompositeInsert %v3uint %5780 %552 0
       %5782 = OpBitwiseAnd %v3uint %406 %407
       %5783 = OpShiftRightLogical %v3uint %5781 %5782
       %5784 = OpCompositeExtract %uint %5783 0
       %5785 = OpCompositeConstruct %v3uint %5784 %5784 %5784
       %5786 = OpBitwiseAnd %v3uint %5785 %388
       %5787 = OpConvertUToF %v3float %5786
       %5788 = OpExtInst %v3float %1 Fma %5787 %392 %280
       %5789 = OpDot %float %5788 %5755
       %5790 = OpConvertFToS %int %5758
       %5791 = OpFSub %v3float %5755 %352
       %5792 = OpCompositeConstruct %v3int %5790 %int_0 %int_0
       %5793 = OpBitcast %v3uint %5792
       %5794 = OpIMul %v3uint %5793 %403
       %5795 = OpIAdd %v3uint %5794 %405
       %5796 = OpCompositeExtract %uint %5795 1
       %5797 = OpCompositeExtract %uint %5795 2
       %5798 = OpIMul %uint %5796 %5797
       %5799 = OpCompositeExtract %uint %5795 0
       %5800 = OpIAdd %uint %5799 %5798
       %5801 = OpIMul %uint %5797 %5800
       %5802 = OpIAdd %uint %5796 %5801
       %5803 = OpIMul %uint %5800 %5802
       %5804 = OpIAdd %uint %5797 %5803
       %5805 = OpIMul %uint %5802 %5804
       %5806 = OpIAdd %uint %5800 %5805
       %5807 = OpCompositeInsert %v3uint %5806 %552 0
       %5808 = OpShiftRightLogical %v3uint %5807 %5782
       %5809 = OpCompositeExtract %uint %5808 0
       %5810 = OpCompositeConstruct %v3uint %5809 %5809 %5809
       %5811 = OpBitwiseAnd %v3uint %5810 %388
       %5812 = OpConvertUToF %v3float %5811
       %5813 = OpExtInst %v3float %1 Fma %5812 %392 %280
       %5814 = OpDot %float %5813 %5791
       %5815 = OpConvertFToS %int %5759
       %5816 = OpFSub %v3float %5755 %353
       %5817 = OpCompositeConstruct %v3int %5815 %int_0 %int_0
       %5818 = OpBitcast %v3uint %5817
       %5819 = OpIMul %v3uint %5818 %403
       %5820 = OpIAdd %v3uint %5819 %405
       %5821 = OpCompositeExtract %uint %5820 1
       %5822 = OpCompositeExtract %uint %5820 2
       %5823 = OpIMul %uint %5821 %5822
       %5824 = OpCompositeExtract %uint %5820 0
       %5825 = OpIAdd %uint %5824 %5823
       %5826 = OpIMul %uint %5822 %5825
       %5827 = OpIAdd %uint %5821 %5826
       %5828 = OpIMul %uint %5825 %5827
       %5829 = OpIAdd %uint %5822 %5828
       %5830 = OpIMul %uint %5827 %5829
       %5831 = OpIAdd %uint %5825 %5830
       %5832 = OpCompositeInsert %v3uint %5831 %552 0
       %5833 = OpShiftRightLogical %v3uint %5832 %5782
       %5834 = OpCompositeExtract %uint %5833 0
       %5835 = OpCompositeConstruct %v3uint %5834 %5834 %5834
       %5836 = OpBitwiseAnd %v3uint %5835 %388
       %5837 = OpConvertUToF %v3float %5836
       %5838 = OpExtInst %v3float %1 Fma %5837 %392 %280
       %5839 = OpDot %float %5838 %5816
       %5840 = OpConvertFToS %int %5760
       %5841 = OpFSub %v3float %5755 %135
       %5842 = OpCompositeConstruct %v3int %5840 %int_0 %int_0
       %5843 = OpBitcast %v3uint %5842
       %5844 = OpIMul %v3uint %5843 %403
       %5845 = OpIAdd %v3uint %5844 %405
       %5846 = OpCompositeExtract %uint %5845 1
       %5847 = OpCompositeExtract %uint %5845 2
       %5848 = OpIMul %uint %5846 %5847
       %5849 = OpCompositeExtract %uint %5845 0
       %5850 = OpIAdd %uint %5849 %5848
       %5851 = OpIMul %uint %5847 %5850
       %5852 = OpIAdd %uint %5846 %5851
       %5853 = OpIMul %uint %5850 %5852
       %5854 = OpIAdd %uint %5847 %5853
       %5855 = OpIMul %uint %5852 %5854
       %5856 = OpIAdd %uint %5850 %5855
       %5857 = OpCompositeInsert %v3uint %5856 %552 0
       %5858 = OpShiftRightLogical %v3uint %5857 %5782
       %5859 = OpCompositeExtract %uint %5858 0
       %5860 = OpCompositeConstruct %v3uint %5859 %5859 %5859
       %5861 = OpBitwiseAnd %v3uint %5860 %388
       %5862 = OpConvertUToF %v3float %5861
       %5863 = OpExtInst %v3float %1 Fma %5862 %392 %280
       %5864 = OpDot %float %5863 %5841
       %5865 = OpConvertFToS %int %5761
       %5866 = OpFSub %v3float %5755 %292
       %5867 = OpCompositeConstruct %v3int %5865 %int_0 %int_0
       %5868 = OpBitcast %v3uint %5867
       %5869 = OpIMul %v3uint %5868 %403
       %5870 = OpIAdd %v3uint %5869 %405
       %5871 = OpCompositeExtract %uint %5870 1
       %5872 = OpCompositeExtract %uint %5870 2
       %5873 = OpIMul %uint %5871 %5872
       %5874 = OpCompositeExtract %uint %5870 0
       %5875 = OpIAdd %uint %5874 %5873
       %5876 = OpIMul %uint %5872 %5875
       %5877 = OpIAdd %uint %5871 %5876
       %5878 = OpIMul %uint %5875 %5877
       %5879 = OpIAdd %uint %5872 %5878
       %5880 = OpIMul %uint %5877 %5879
       %5881 = OpIAdd %uint %5875 %5880
       %5882 = OpCompositeInsert %v3uint %5881 %552 0
       %5883 = OpShiftRightLogical %v3uint %5882 %5782
       %5884 = OpCompositeExtract %uint %5883 0
       %5885 = OpCompositeConstruct %v3uint %5884 %5884 %5884
       %5886 = OpBitwiseAnd %v3uint %5885 %388
       %5887 = OpConvertUToF %v3float %5886
       %5888 = OpExtInst %v3float %1 Fma %5887 %392 %280
       %5889 = OpDot %float %5888 %5866
       %5890 = OpConvertFToS %int %5762
       %5891 = OpFSub %v3float %5755 %141
       %5892 = OpCompositeConstruct %v3int %5890 %int_0 %int_0
       %5893 = OpBitcast %v3uint %5892
       %5894 = OpIMul %v3uint %5893 %403
       %5895 = OpIAdd %v3uint %5894 %405
       %5896 = OpCompositeExtract %uint %5895 1
       %5897 = OpCompositeExtract %uint %5895 2
       %5898 = OpIMul %uint %5896 %5897
       %5899 = OpCompositeExtract %uint %5895 0
       %5900 = OpIAdd %uint %5899 %5898
       %5901 = OpIMul %uint %5897 %5900
       %5902 = OpIAdd %uint %5896 %5901
       %5903 = OpIMul %uint %5900 %5902
       %5904 = OpIAdd %uint %5897 %5903
       %5905 = OpIMul %uint %5902 %5904
       %5906 = OpIAdd %uint %5900 %5905
       %5907 = OpCompositeInsert %v3uint %5906 %552 0
       %5908 = OpShiftRightLogical %v3uint %5907 %5782
       %5909 = OpCompositeExtract %uint %5908 0
       %5910 = OpCompositeConstruct %v3uint %5909 %5909 %5909
       %5911 = OpBitwiseAnd %v3uint %5910 %388
       %5912 = OpConvertUToF %v3float %5911
       %5913 = OpExtInst %v3float %1 Fma %5912 %392 %280
       %5914 = OpDot %float %5913 %5891
       %5915 = OpConvertFToS %int %5763
       %5916 = OpFSub %v3float %5755 %136
       %5917 = OpCompositeConstruct %v3int %5915 %int_0 %int_0
       %5918 = OpBitcast %v3uint %5917
       %5919 = OpIMul %v3uint %5918 %403
       %5920 = OpIAdd %v3uint %5919 %405
       %5921 = OpCompositeExtract %uint %5920 1
       %5922 = OpCompositeExtract %uint %5920 2
       %5923 = OpIMul %uint %5921 %5922
       %5924 = OpCompositeExtract %uint %5920 0
       %5925 = OpIAdd %uint %5924 %5923
       %5926 = OpIMul %uint %5922 %5925
       %5927 = OpIAdd %uint %5921 %5926
       %5928 = OpIMul %uint %5925 %5927
       %5929 = OpIAdd %uint %5922 %5928
       %5930 = OpIMul %uint %5927 %5929
       %5931 = OpIAdd %uint %5925 %5930
       %5932 = OpCompositeInsert %v3uint %5931 %552 0
       %5933 = OpShiftRightLogical %v3uint %5932 %5782
       %5934 = OpCompositeExtract %uint %5933 0
       %5935 = OpCompositeConstruct %v3uint %5934 %5934 %5934
       %5936 = OpBitwiseAnd %v3uint %5935 %388
       %5937 = OpConvertUToF %v3float %5936
       %5938 = OpExtInst %v3float %1 Fma %5937 %392 %280
       %5939 = OpDot %float %5938 %5916
       %5940 = OpConvertFToS %int %5764
       %5941 = OpFSub %v3float %5755 %128
       %5942 = OpCompositeConstruct %v3int %5940 %int_0 %int_0
       %5943 = OpBitcast %v3uint %5942
       %5944 = OpIMul %v3uint %5943 %403
       %5945 = OpIAdd %v3uint %5944 %405
       %5946 = OpCompositeExtract %uint %5945 1
       %5947 = OpCompositeExtract %uint %5945 2
       %5948 = OpIMul %uint %5946 %5947
       %5949 = OpCompositeExtract %uint %5945 0
       %5950 = OpIAdd %uint %5949 %5948
       %5951 = OpIMul %uint %5947 %5950
       %5952 = OpIAdd %uint %5946 %5951
       %5953 = OpIMul %uint %5950 %5952
       %5954 = OpIAdd %uint %5947 %5953
       %5955 = OpIMul %uint %5952 %5954
       %5956 = OpIAdd %uint %5950 %5955
       %5957 = OpCompositeInsert %v3uint %5956 %552 0
       %5958 = OpShiftRightLogical %v3uint %5957 %5782
       %5959 = OpCompositeExtract %uint %5958 0
       %5960 = OpCompositeConstruct %v3uint %5959 %5959 %5959
       %5961 = OpBitwiseAnd %v3uint %5960 %388
       %5962 = OpConvertUToF %v3float %5961
       %5963 = OpExtInst %v3float %1 Fma %5962 %392 %280
       %5964 = OpDot %float %5963 %5941
       %5965 = OpCompositeExtract %float %5755 0
       %5966 = OpCompositeExtract %float %5755 1
       %5967 = OpCompositeExtract %float %5755 2
       %5968 = OpCompositeConstruct %v4float %5965 %5966 %5967 %float_0
       %5969 = OpFMul %v4float %5968 %5968
       %5970 = OpFMul %v4float %5969 %5968
       %5971 = OpVectorTimesScalar %v4float %5968 %float_6
       %5972 = OpFSub %v4float %5971 %383
       %5973 = OpExtInst %v4float %1 Fma %5968 %5972 %384
       %5974 = OpFMul %v4float %5970 %5973
       %5975 = OpCompositeExtract %float %5974 0
       %5976 = OpExtInst %float %1 FMix %5789 %5814 %5975
       %5977 = OpExtInst %float %1 FMix %5839 %5864 %5975
       %5978 = OpCompositeExtract %float %5974 1
       %5979 = OpExtInst %float %1 FMix %5976 %5977 %5978
       %5980 = OpExtInst %float %1 FMix %5889 %5914 %5975
       %5981 = OpExtInst %float %1 FMix %5939 %5964 %5975
       %5982 = OpExtInst %float %1 FMix %5980 %5981 %5978
       %5983 = OpCompositeExtract %float %5974 2
       %5984 = OpExtInst %float %1 FMix %5979 %5982 %5983
       %5750 = OpExtInst %float %1 Fma %5984 %5747 %5749
       %5745 = OpVectorTimesScalar %v3float %5744 %float_2
       %5748 = OpFMul %float %5747 %float_0_5
       %5752 = OpIAdd %uint %5751 %uint_1
               OpBranch %5743
       %5754 = OpLabel
       %5985 = OpExtInst %float %1 Fma %5749 %float_0_5 %float_0_5
       %5986 = OpExtInst %float %1 FMix %float_0 %float_1 %5985
       %5987 = OpExtInst %float %1 FClamp %5986 %float_0 %float_1
       %5988 = OpExtInst %float %1 FMix %1166 %1719 %5987
       %5989 = OpFMul %float %5720 %5988
       %5990 = OpExtInst %float %1 Fma %5714 %5718 %5989
       %5991 = OpExtInst %float %1 Floor %5719
       %5992 = OpFNegate %float %5991
       %5993 = OpExtInst %float %1 Fma %5713 %5718 %5992
       %5994 = OpExtInst %float %1 Fma %5993 %float_2097152 %5990
       %5995 = OpExtInst %float %1 Floor %5994
       %5996 = OpFMul %float %5991 %float_n6_28318548
       %5997 = OpExtInst %float %1 Fma %5719 %float_6_28318548 %5996
       %5998 = OpFMul %float %5995 %float_n6_28318548
       %5999 = OpExtInst %float %1 Fma %5990 %float_6_28318548 %5998
       %6000 = OpExtInst %float %1 Fma %5997 %float_2097152 %5999
       %6001 = OpFMul %v3float %5722 %3881
       %6002 = OpFMul %v3float %3881 %5723
       %6003 = OpFMul %v3float %6002 %3886
       %6004 = OpCompositeExtract %float %6003 0
       %6005 = OpCompositeExtract %float %6003 1
       %6006 = OpCompositeExtract %float %6003 2
       %6007 = OpCompositeConstruct %v2float %6006 %6006
       %6008 = OpFAdd %v2float %3896 %6007
       %6009 = OpCompositeExtract %float %6008 0
       %6010 = OpCompositeConstruct %v3float %6004 %6005 %6009
       %6011 = OpVectorTimesScalar %v3float %6010 %float_4_76837158en07
       %6012 = OpFAdd %v3float %6011 %138
       %6013 = OpExtInst %v3float %1 Fma %6001 %3886 %6012
       %6014 = OpExtInst %v3float %1 Floor %6013
       %6015 = OpFNegate %v3float %6014
       %6016 = OpExtInst %v3float %1 Fma %6001 %3886 %6015
       %6017 = OpVectorTimesScalar %v3float %6016 %float_2097152
       %6018 = OpFAdd %v3float %6017 %6010
       %6019 = OpVectorTimesScalar %v3float %6018 %float_1
               OpBranch %6020
       %6020 = OpLabel
       %6021 = OpPhi %v3float %6019 %5754 %6022 %6023
       %6024 = OpPhi %float %float_1 %5754 %6025 %6023
       %6026 = OpPhi %float %float_0 %5754 %6027 %6023
       %6028 = OpPhi %uint %uint_0 %5754 %6029 %6023
       %6030 = OpULessThan %bool %6028 %uint_10
               OpLoopMerge %6031 %6023 DontUnroll
               OpBranchConditional %6030 %6023 %6031
       %6023 = OpLabel
       %6032 = OpExtInst %v3float %1 Fract %6021
       %6033 = OpExtInst %v3float %1 Floor %6021
       %6034 = OpDot %float %6033 %387
       %6035 = OpFAdd %float %6034 %float_19
       %6036 = OpFAdd %float %6034 %float_47
       %6037 = OpFAdd %float %6034 %float_66
       %6038 = OpFAdd %float %6034 %float_101
       %6039 = OpFAdd %float %6034 %float_120
       %6040 = OpFAdd %float %6034 %float_148
       %6041 = OpFAdd %float %6034 %float_167
       %6042 = OpConvertFToS %int %6034
       %6043 = OpCompositeConstruct %v3int %6042 %int_0 %int_0
       %6044 = OpBitcast %v3uint %6043
       %6045 = OpIMul %v3uint %6044 %403
       %6046 = OpIAdd %v3uint %6045 %405
       %6047 = OpCompositeExtract %uint %6046 1
       %6048 = OpCompositeExtract %uint %6046 2
       %6049 = OpIMul %uint %6047 %6048
       %6050 = OpCompositeExtract %uint %6046 0
       %6051 = OpIAdd %uint %6050 %6049
       %6052 = OpIMul %uint %6048 %6051
       %6053 = OpIAdd %uint %6047 %6052
       %6054 = OpIMul %uint %6051 %6053
       %6055 = OpIAdd %uint %6048 %6054
       %6056 = OpIMul %uint %6053 %6055
       %6057 = OpIAdd %uint %6051 %6056
       %6058 = OpCompositeInsert %v3uint %6057 %552 0
       %6059 = OpBitwiseAnd %v3uint %406 %407
       %6060 = OpShiftRightLogical %v3uint %6058 %6059
       %6061 = OpCompositeExtract %uint %6060 0
       %6062 = OpCompositeConstruct %v3uint %6061 %6061 %6061
       %6063 = OpBitwiseAnd %v3uint %6062 %388
       %6064 = OpConvertUToF %v3float %6063
       %6065 = OpExtInst %v3float %1 Fma %6064 %392 %280
       %6066 = OpDot %float %6065 %6032
       %6067 = OpConvertFToS %int %6035
       %6068 = OpFSub %v3float %6032 %352
       %6069 = OpCompositeConstruct %v3int %6067 %int_0 %int_0
       %6070 = OpBitcast %v3uint %6069
       %6071 = OpIMul %v3uint %6070 %403
       %6072 = OpIAdd %v3uint %6071 %405
       %6073 = OpCompositeExtract %uint %6072 1
       %6074 = OpCompositeExtract %uint %6072 2
       %6075 = OpIMul %uint %6073 %6074
       %6076 = OpCompositeExtract %uint %6072 0
       %6077 = OpIAdd %uint %6076 %6075
       %6078 = OpIMul %uint %6074 %6077
       %6079 = OpIAdd %uint %6073 %6078
       %6080 = OpIMul %uint %6077 %6079
       %6081 = OpIAdd %uint %6074 %6080
       %6082 = OpIMul %uint %6079 %6081
       %6083 = OpIAdd %uint %6077 %6082
       %6084 = OpCompositeInsert %v3uint %6083 %552 0
       %6085 = OpShiftRightLogical %v3uint %6084 %6059
       %6086 = OpCompositeExtract %uint %6085 0
       %6087 = OpCompositeConstruct %v3uint %6086 %6086 %6086
       %6088 = OpBitwiseAnd %v3uint %6087 %388
       %6089 = OpConvertUToF %v3float %6088
       %6090 = OpExtInst %v3float %1 Fma %6089 %392 %280
       %6091 = OpDot %float %6090 %6068
       %6092 = OpConvertFToS %int %6036
       %6093 = OpFSub %v3float %6032 %353
       %6094 = OpCompositeConstruct %v3int %6092 %int_0 %int_0
       %6095 = OpBitcast %v3uint %6094
       %6096 = OpIMul %v3uint %6095 %403
       %6097 = OpIAdd %v3uint %6096 %405
       %6098 = OpCompositeExtract %uint %6097 1
       %6099 = OpCompositeExtract %uint %6097 2
       %6100 = OpIMul %uint %6098 %6099
       %6101 = OpCompositeExtract %uint %6097 0
       %6102 = OpIAdd %uint %6101 %6100
       %6103 = OpIMul %uint %6099 %6102
       %6104 = OpIAdd %uint %6098 %6103
       %6105 = OpIMul %uint %6102 %6104
       %6106 = OpIAdd %uint %6099 %6105
       %6107 = OpIMul %uint %6104 %6106
       %6108 = OpIAdd %uint %6102 %6107
       %6109 = OpCompositeInsert %v3uint %6108 %552 0
       %6110 = OpShiftRightLogical %v3uint %6109 %6059
       %6111 = OpCompositeExtract %uint %6110 0
       %6112 = OpCompositeConstruct %v3uint %6111 %6111 %6111
       %6113 = OpBitwiseAnd %v3uint %6112 %388
       %6114 = OpConvertUToF %v3float %6113
       %6115 = OpExtInst %v3float %1 Fma %6114 %392 %280
       %6116 = OpDot %float %6115 %6093
       %6117 = OpConvertFToS %int %6037
       %6118 = OpFSub %v3float %6032 %135
       %6119 = OpCompositeConstruct %v3int %6117 %int_0 %int_0
       %6120 = OpBitcast %v3uint %6119
       %6121 = OpIMul %v3uint %6120 %403
       %6122 = OpIAdd %v3uint %6121 %405
       %6123 = OpCompositeExtract %uint %6122 1
       %6124 = OpCompositeExtract %uint %6122 2
       %6125 = OpIMul %uint %6123 %6124
       %6126 = OpCompositeExtract %uint %6122 0
       %6127 = OpIAdd %uint %6126 %6125
       %6128 = OpIMul %uint %6124 %6127
       %6129 = OpIAdd %uint %6123 %6128
       %6130 = OpIMul %uint %6127 %6129
       %6131 = OpIAdd %uint %6124 %6130
       %6132 = OpIMul %uint %6129 %6131
       %6133 = OpIAdd %uint %6127 %6132
       %6134 = OpCompositeInsert %v3uint %6133 %552 0
       %6135 = OpShiftRightLogical %v3uint %6134 %6059
       %6136 = OpCompositeExtract %uint %6135 0
       %6137 = OpCompositeConstruct %v3uint %6136 %6136 %6136
       %6138 = OpBitwiseAnd %v3uint %6137 %388
       %6139 = OpConvertUToF %v3float %6138
       %6140 = OpExtInst %v3float %1 Fma %6139 %392 %280
       %6141 = OpDot %float %6140 %6118
       %6142 = OpConvertFToS %int %6038
       %6143 = OpFSub %v3float %6032 %292
       %6144 = OpCompositeConstruct %v3int %6142 %int_0 %int_0
       %6145 = OpBitcast %v3uint %6144
       %6146 = OpIMul %v3uint %6145 %403
       %6147 = OpIAdd %v3uint %6146 %405
       %6148 = OpCompositeExtract %uint %6147 1
       %6149 = OpCompositeExtract %uint %6147 2
       %6150 = OpIMul %uint %6148 %6149
       %6151 = OpCompositeExtract %uint %6147 0
       %6152 = OpIAdd %uint %6151 %6150
       %6153 = OpIMul %uint %6149 %6152
       %6154 = OpIAdd %uint %6148 %6153
       %6155 = OpIMul %uint %6152 %6154
       %6156 = OpIAdd %uint %6149 %6155
       %6157 = OpIMul %uint %6154 %6156
       %6158 = OpIAdd %uint %6152 %6157
       %6159 = OpCompositeInsert %v3uint %6158 %552 0
       %6160 = OpShiftRightLogical %v3uint %6159 %6059
       %6161 = OpCompositeExtract %uint %6160 0
       %6162 = OpCompositeConstruct %v3uint %6161 %6161 %6161
       %6163 = OpBitwiseAnd %v3uint %6162 %388
       %6164 = OpConvertUToF %v3float %6163
       %6165 = OpExtInst %v3float %1 Fma %6164 %392 %280
       %6166 = OpDot %float %6165 %6143
       %6167 = OpConvertFToS %int %6039
       %6168 = OpFSub %v3float %6032 %141
       %6169 = OpCompositeConstruct %v3int %6167 %int_0 %int_0
       %6170 = OpBitcast %v3uint %6169
       %6171 = OpIMul %v3uint %6170 %403
       %6172 = OpIAdd %v3uint %6171 %405
       %6173 = OpCompositeExtract %uint %6172 1
       %6174 = OpCompositeExtract %uint %6172 2
       %6175 = OpIMul %uint %6173 %6174
       %6176 = OpCompositeExtract %uint %6172 0
       %6177 = OpIAdd %uint %6176 %6175
       %6178 = OpIMul %uint %6174 %6177
       %6179 = OpIAdd %uint %6173 %6178
       %6180 = OpIMul %uint %6177 %6179
       %6181 = OpIAdd %uint %6174 %6180
       %6182 = OpIMul %uint %6179 %6181
       %6183 = OpIAdd %uint %6177 %6182
       %6184 = OpCompositeInsert %v3uint %6183 %552 0
       %6185 = OpShiftRightLogical %v3uint %6184 %6059
       %6186 = OpCompositeExtract %uint %6185 0
       %6187 = OpCompositeConstruct %v3uint %6186 %6186 %6186
       %6188 = OpBitwiseAnd %v3uint %6187 %388
       %6189 = OpConvertUToF %v3float %6188
       %6190 = OpExtInst %v3float %1 Fma %6189 %392 %280
       %6191 = OpDot %float %6190 %6168
       %6192 = OpConvertFToS %int %6040
       %6193 = OpFSub %v3float %6032 %136
       %6194 = OpCompositeConstruct %v3int %6192 %int_0 %int_0
       %6195 = OpBitcast %v3uint %6194
       %6196 = OpIMul %v3uint %6195 %403
       %6197 = OpIAdd %v3uint %6196 %405
       %6198 = OpCompositeExtract %uint %6197 1
       %6199 = OpCompositeExtract %uint %6197 2
       %6200 = OpIMul %uint %6198 %6199
       %6201 = OpCompositeExtract %uint %6197 0
       %6202 = OpIAdd %uint %6201 %6200
       %6203 = OpIMul %uint %6199 %6202
       %6204 = OpIAdd %uint %6198 %6203
       %6205 = OpIMul %uint %6202 %6204
       %6206 = OpIAdd %uint %6199 %6205
       %6207 = OpIMul %uint %6204 %6206
       %6208 = OpIAdd %uint %6202 %6207
       %6209 = OpCompositeInsert %v3uint %6208 %552 0
       %6210 = OpShiftRightLogical %v3uint %6209 %6059
       %6211 = OpCompositeExtract %uint %6210 0
       %6212 = OpCompositeConstruct %v3uint %6211 %6211 %6211
       %6213 = OpBitwiseAnd %v3uint %6212 %388
       %6214 = OpConvertUToF %v3float %6213
       %6215 = OpExtInst %v3float %1 Fma %6214 %392 %280
       %6216 = OpDot %float %6215 %6193
       %6217 = OpConvertFToS %int %6041
       %6218 = OpFSub %v3float %6032 %128
       %6219 = OpCompositeConstruct %v3int %6217 %int_0 %int_0
       %6220 = OpBitcast %v3uint %6219
       %6221 = OpIMul %v3uint %6220 %403
       %6222 = OpIAdd %v3uint %6221 %405
       %6223 = OpCompositeExtract %uint %6222 1
       %6224 = OpCompositeExtract %uint %6222 2
       %6225 = OpIMul %uint %6223 %6224
       %6226 = OpCompositeExtract %uint %6222 0
       %6227 = OpIAdd %uint %6226 %6225
       %6228 = OpIMul %uint %6224 %6227
       %6229 = OpIAdd %uint %6223 %6228
       %6230 = OpIMul %uint %6227 %6229
       %6231 = OpIAdd %uint %6224 %6230
       %6232 = OpIMul %uint %6229 %6231
       %6233 = OpIAdd %uint %6227 %6232
       %6234 = OpCompositeInsert %v3uint %6233 %552 0
       %6235 = OpShiftRightLogical %v3uint %6234 %6059
       %6236 = OpCompositeExtract %uint %6235 0
       %6237 = OpCompositeConstruct %v3uint %6236 %6236 %6236
       %6238 = OpBitwiseAnd %v3uint %6237 %388
       %6239 = OpConvertUToF %v3float %6238
       %6240 = OpExtInst %v3float %1 Fma %6239 %392 %280
       %6241 = OpDot %float %6240 %6218
       %6242 = OpCompositeExtract %float %6032 0
       %6243 = OpCompositeExtract %float %6032 1
       %6244 = OpCompositeExtract %float %6032 2
       %6245 = OpCompositeConstruct %v4float %6242 %6243 %6244 %float_0
       %6246 = OpFMul %v4float %6245 %6245
       %6247 = OpFMul %v4float %6246 %6245
       %6248 = OpVectorTimesScalar %v4float %6245 %float_6
       %6249 = OpFSub %v4float %6248 %383
       %6250 = OpExtInst %v4float %1 Fma %6245 %6249 %384
       %6251 = OpFMul %v4float %6247 %6250
       %6252 = OpCompositeExtract %float %6251 0
       %6253 = OpExtInst %float %1 FMix %6066 %6091 %6252
       %6254 = OpExtInst %float %1 FMix %6116 %6141 %6252
       %6255 = OpCompositeExtract %float %6251 1
       %6256 = OpExtInst %float %1 FMix %6253 %6254 %6255
       %6257 = OpExtInst %float %1 FMix %6166 %6191 %6252
       %6258 = OpExtInst %float %1 FMix %6216 %6241 %6252
       %6259 = OpExtInst %float %1 FMix %6257 %6258 %6255
       %6260 = OpCompositeExtract %float %6251 2
       %6261 = OpExtInst %float %1 FMix %6256 %6259 %6260
       %6262 = OpExtInst %float %1 FAbs %6261
       %6027 = OpExtInst %float %1 Fma %6262 %6024 %6026
       %6022 = OpVectorTimesScalar %v3float %6021 %float_2
       %6025 = OpFMul %float %6024 %float_0_5
       %6029 = OpIAdd %uint %6028 %uint_1
               OpBranch %6020
       %6031 = OpLabel
       %6263 = OpExtInst %float %1 FMix %float_0 %float_1 %6026
       %6264 = OpFMul %v3float %5722 %4156
       %6265 = OpFMul %v3float %4156 %5723
       %6266 = OpFMul %v3float %6265 %4161
       %6267 = OpCompositeExtract %float %6266 0
       %6268 = OpCompositeExtract %float %6266 1
       %6269 = OpCompositeExtract %float %6266 2
       %6270 = OpCompositeConstruct %v2float %6269 %6269
       %6271 = OpFAdd %v2float %4171 %6270
       %6272 = OpCompositeExtract %float %6271 0
       %6273 = OpCompositeConstruct %v3float %6267 %6268 %6272
       %6274 = OpVectorTimesScalar %v3float %6273 %float_4_76837158en07
       %6275 = OpFAdd %v3float %6274 %138
       %6276 = OpExtInst %v3float %1 Fma %6264 %4161 %6275
       %6277 = OpExtInst %v3float %1 Floor %6276
       %6278 = OpFNegate %v3float %6277
       %6279 = OpExtInst %v3float %1 Fma %6264 %4161 %6278
       %6280 = OpVectorTimesScalar %v3float %6279 %float_2097152
       %6281 = OpFAdd %v3float %6280 %6273
       %6282 = OpVectorTimesScalar %v3float %6281 %float_1
               OpBranch %6283
       %6283 = OpLabel
       %6284 = OpPhi %v3float %6282 %6031 %6285 %6286
       %6287 = OpPhi %float %float_1 %6031 %6288 %6286
       %6289 = OpPhi %float %float_0 %6031 %6290 %6286
       %6291 = OpPhi %uint %uint_0 %6031 %6292 %6286
       %6293 = OpULessThan %bool %6291 %uint_10
               OpLoopMerge %6294 %6286 DontUnroll
               OpBranchConditional %6293 %6286 %6294
       %6286 = OpLabel
       %6295 = OpExtInst %v3float %1 Fract %6284
       %6296 = OpExtInst %v3float %1 Floor %6284
       %6297 = OpDot %float %6296 %387
       %6298 = OpFAdd %float %6297 %float_19
       %6299 = OpFAdd %float %6297 %float_47
       %6300 = OpFAdd %float %6297 %float_66
       %6301 = OpFAdd %float %6297 %float_101
       %6302 = OpFAdd %float %6297 %float_120
       %6303 = OpFAdd %float %6297 %float_148
       %6304 = OpFAdd %float %6297 %float_167
       %6305 = OpConvertFToS %int %6297
       %6306 = OpCompositeConstruct %v3int %6305 %int_0 %int_0
       %6307 = OpBitcast %v3uint %6306
       %6308 = OpIMul %v3uint %6307 %403
       %6309 = OpIAdd %v3uint %6308 %405
       %6310 = OpCompositeExtract %uint %6309 1
       %6311 = OpCompositeExtract %uint %6309 2
       %6312 = OpIMul %uint %6310 %6311
       %6313 = OpCompositeExtract %uint %6309 0
       %6314 = OpIAdd %uint %6313 %6312
       %6315 = OpIMul %uint %6311 %6314
       %6316 = OpIAdd %uint %6310 %6315
       %6317 = OpIMul %uint %6314 %6316
       %6318 = OpIAdd %uint %6311 %6317
       %6319 = OpIMul %uint %6316 %6318
       %6320 = OpIAdd %uint %6314 %6319
       %6321 = OpCompositeInsert %v3uint %6320 %552 0
       %6322 = OpBitwiseAnd %v3uint %406 %407
       %6323 = OpShiftRightLogical %v3uint %6321 %6322
       %6324 = OpCompositeExtract %uint %6323 0
       %6325 = OpCompositeConstruct %v3uint %6324 %6324 %6324
       %6326 = OpBitwiseAnd %v3uint %6325 %388
       %6327 = OpConvertUToF %v3float %6326
       %6328 = OpExtInst %v3float %1 Fma %6327 %392 %280
       %6329 = OpDot %float %6328 %6295
       %6330 = OpConvertFToS %int %6298
       %6331 = OpFSub %v3float %6295 %352
       %6332 = OpCompositeConstruct %v3int %6330 %int_0 %int_0
       %6333 = OpBitcast %v3uint %6332
       %6334 = OpIMul %v3uint %6333 %403
       %6335 = OpIAdd %v3uint %6334 %405
       %6336 = OpCompositeExtract %uint %6335 1
       %6337 = OpCompositeExtract %uint %6335 2
       %6338 = OpIMul %uint %6336 %6337
       %6339 = OpCompositeExtract %uint %6335 0
       %6340 = OpIAdd %uint %6339 %6338
       %6341 = OpIMul %uint %6337 %6340
       %6342 = OpIAdd %uint %6336 %6341
       %6343 = OpIMul %uint %6340 %6342
       %6344 = OpIAdd %uint %6337 %6343
       %6345 = OpIMul %uint %6342 %6344
       %6346 = OpIAdd %uint %6340 %6345
       %6347 = OpCompositeInsert %v3uint %6346 %552 0
       %6348 = OpShiftRightLogical %v3uint %6347 %6322
       %6349 = OpCompositeExtract %uint %6348 0
       %6350 = OpCompositeConstruct %v3uint %6349 %6349 %6349
       %6351 = OpBitwiseAnd %v3uint %6350 %388
       %6352 = OpConvertUToF %v3float %6351
       %6353 = OpExtInst %v3float %1 Fma %6352 %392 %280
       %6354 = OpDot %float %6353 %6331
       %6355 = OpConvertFToS %int %6299
       %6356 = OpFSub %v3float %6295 %353
       %6357 = OpCompositeConstruct %v3int %6355 %int_0 %int_0
       %6358 = OpBitcast %v3uint %6357
       %6359 = OpIMul %v3uint %6358 %403
       %6360 = OpIAdd %v3uint %6359 %405
       %6361 = OpCompositeExtract %uint %6360 1
       %6362 = OpCompositeExtract %uint %6360 2
       %6363 = OpIMul %uint %6361 %6362
       %6364 = OpCompositeExtract %uint %6360 0
       %6365 = OpIAdd %uint %6364 %6363
       %6366 = OpIMul %uint %6362 %6365
       %6367 = OpIAdd %uint %6361 %6366
       %6368 = OpIMul %uint %6365 %6367
       %6369 = OpIAdd %uint %6362 %6368
       %6370 = OpIMul %uint %6367 %6369
       %6371 = OpIAdd %uint %6365 %6370
       %6372 = OpCompositeInsert %v3uint %6371 %552 0
       %6373 = OpShiftRightLogical %v3uint %6372 %6322
       %6374 = OpCompositeExtract %uint %6373 0
       %6375 = OpCompositeConstruct %v3uint %6374 %6374 %6374
       %6376 = OpBitwiseAnd %v3uint %6375 %388
       %6377 = OpConvertUToF %v3float %6376
       %6378 = OpExtInst %v3float %1 Fma %6377 %392 %280
       %6379 = OpDot %float %6378 %6356
       %6380 = OpConvertFToS %int %6300
       %6381 = OpFSub %v3float %6295 %135
       %6382 = OpCompositeConstruct %v3int %6380 %int_0 %int_0
       %6383 = OpBitcast %v3uint %6382
       %6384 = OpIMul %v3uint %6383 %403
       %6385 = OpIAdd %v3uint %6384 %405
       %6386 = OpCompositeExtract %uint %6385 1
       %6387 = OpCompositeExtract %uint %6385 2
       %6388 = OpIMul %uint %6386 %6387
       %6389 = OpCompositeExtract %uint %6385 0
       %6390 = OpIAdd %uint %6389 %6388
       %6391 = OpIMul %uint %6387 %6390
       %6392 = OpIAdd %uint %6386 %6391
       %6393 = OpIMul %uint %6390 %6392
       %6394 = OpIAdd %uint %6387 %6393
       %6395 = OpIMul %uint %6392 %6394
       %6396 = OpIAdd %uint %6390 %6395
       %6397 = OpCompositeInsert %v3uint %6396 %552 0
       %6398 = OpShiftRightLogical %v3uint %6397 %6322
       %6399 = OpCompositeExtract %uint %6398 0
       %6400 = OpCompositeConstruct %v3uint %6399 %6399 %6399
       %6401 = OpBitwiseAnd %v3uint %6400 %388
       %6402 = OpConvertUToF %v3float %6401
       %6403 = OpExtInst %v3float %1 Fma %6402 %392 %280
       %6404 = OpDot %float %6403 %6381
       %6405 = OpConvertFToS %int %6301
       %6406 = OpFSub %v3float %6295 %292
       %6407 = OpCompositeConstruct %v3int %6405 %int_0 %int_0
       %6408 = OpBitcast %v3uint %6407
       %6409 = OpIMul %v3uint %6408 %403
       %6410 = OpIAdd %v3uint %6409 %405
       %6411 = OpCompositeExtract %uint %6410 1
       %6412 = OpCompositeExtract %uint %6410 2
       %6413 = OpIMul %uint %6411 %6412
       %6414 = OpCompositeExtract %uint %6410 0
       %6415 = OpIAdd %uint %6414 %6413
       %6416 = OpIMul %uint %6412 %6415
       %6417 = OpIAdd %uint %6411 %6416
       %6418 = OpIMul %uint %6415 %6417
       %6419 = OpIAdd %uint %6412 %6418
       %6420 = OpIMul %uint %6417 %6419
       %6421 = OpIAdd %uint %6415 %6420
       %6422 = OpCompositeInsert %v3uint %6421 %552 0
       %6423 = OpShiftRightLogical %v3uint %6422 %6322
       %6424 = OpCompositeExtract %uint %6423 0
       %6425 = OpCompositeConstruct %v3uint %6424 %6424 %6424
       %6426 = OpBitwiseAnd %v3uint %6425 %388
       %6427 = OpConvertUToF %v3float %6426
       %6428 = OpExtInst %v3float %1 Fma %6427 %392 %280
       %6429 = OpDot %float %6428 %6406
       %6430 = OpConvertFToS %int %6302
       %6431 = OpFSub %v3float %6295 %141
       %6432 = OpCompositeConstruct %v3int %6430 %int_0 %int_0
       %6433 = OpBitcast %v3uint %6432
       %6434 = OpIMul %v3uint %6433 %403
       %6435 = OpIAdd %v3uint %6434 %405
       %6436 = OpCompositeExtract %uint %6435 1
       %6437 = OpCompositeExtract %uint %6435 2
       %6438 = OpIMul %uint %6436 %6437
       %6439 = OpCompositeExtract %uint %6435 0
       %6440 = OpIAdd %uint %6439 %6438
       %6441 = OpIMul %uint %6437 %6440
       %6442 = OpIAdd %uint %6436 %6441
       %6443 = OpIMul %uint %6440 %6442
       %6444 = OpIAdd %uint %6437 %6443
       %6445 = OpIMul %uint %6442 %6444
       %6446 = OpIAdd %uint %6440 %6445
       %6447 = OpCompositeInsert %v3uint %6446 %552 0
       %6448 = OpShiftRightLogical %v3uint %6447 %6322
       %6449 = OpCompositeExtract %uint %6448 0
       %6450 = OpCompositeConstruct %v3uint %6449 %6449 %6449
       %6451 = OpBitwiseAnd %v3uint %6450 %388
       %6452 = OpConvertUToF %v3float %6451
       %6453 = OpExtInst %v3float %1 Fma %6452 %392 %280
       %6454 = OpDot %float %6453 %6431
       %6455 = OpConvertFToS %int %6303
       %6456 = OpFSub %v3float %6295 %136
       %6457 = OpCompositeConstruct %v3int %6455 %int_0 %int_0
       %6458 = OpBitcast %v3uint %6457
       %6459 = OpIMul %v3uint %6458 %403
       %6460 = OpIAdd %v3uint %6459 %405
       %6461 = OpCompositeExtract %uint %6460 1
       %6462 = OpCompositeExtract %uint %6460 2
       %6463 = OpIMul %uint %6461 %6462
       %6464 = OpCompositeExtract %uint %6460 0
       %6465 = OpIAdd %uint %6464 %6463
       %6466 = OpIMul %uint %6462 %6465
       %6467 = OpIAdd %uint %6461 %6466
       %6468 = OpIMul %uint %6465 %6467
       %6469 = OpIAdd %uint %6462 %6468
       %6470 = OpIMul %uint %6467 %6469
       %6471 = OpIAdd %uint %6465 %6470
       %6472 = OpCompositeInsert %v3uint %6471 %552 0
       %6473 = OpShiftRightLogical %v3uint %6472 %6322
       %6474 = OpCompositeExtract %uint %6473 0
       %6475 = OpCompositeConstruct %v3uint %6474 %6474 %6474
       %6476 = OpBitwiseAnd %v3uint %6475 %388
       %6477 = OpConvertUToF %v3float %6476
       %6478 = OpExtInst %v3float %1 Fma %6477 %392 %280
       %6479 = OpDot %float %6478 %6456
       %6480 = OpConvertFToS %int %6304
       %6481 = OpFSub %v3float %6295 %128
       %6482 = OpCompositeConstruct %v3int %6480 %int_0 %int_0
       %6483 = OpBitcast %v3uint %6482
       %6484 = OpIMul %v3uint %6483 %403
       %6485 = OpIAdd %v3uint %6484 %405
       %6486 = OpCompositeExtract %uint %6485 1
       %6487 = OpCompositeExtract %uint %6485 2
       %6488 = OpIMul %uint %6486 %6487
       %6489 = OpCompositeExtract %uint %6485 0
       %6490 = OpIAdd %uint %6489 %6488
       %6491 = OpIMul %uint %6487 %6490
       %6492 = OpIAdd %uint %6486 %6491
       %6493 = OpIMul %uint %6490 %6492
       %6494 = OpIAdd %uint %6487 %6493
       %6495 = OpIMul %uint %6492 %6494
       %6496 = OpIAdd %uint %6490 %6495
       %6497 = OpCompositeInsert %v3uint %6496 %552 0
       %6498 = OpShiftRightLogical %v3uint %6497 %6322
       %6499 = OpCompositeExtract %uint %6498 0
       %6500 = OpCompositeConstruct %v3uint %6499 %6499 %6499
       %6501 = OpBitwiseAnd %v3uint %6500 %388
       %6502 = OpConvertUToF %v3float %6501
       %6503 = OpExtInst %v3float %1 Fma %6502 %392 %280
       %6504 = OpDot %float %6503 %6481
       %6505 = OpCompositeExtract %float %6295 0
       %6506 = OpCompositeExtract %float %6295 1
       %6507 = OpCompositeExtract %float %6295 2
       %6508 = OpCompositeConstruct %v4float %6505 %6506 %6507 %float_0
       %6509 = OpFMul %v4float %6508 %6508
       %6510 = OpFMul %v4float %6509 %6508
       %6511 = OpVectorTimesScalar %v4float %6508 %float_6
       %6512 = OpFSub %v4float %6511 %383
       %6513 = OpExtInst %v4float %1 Fma %6508 %6512 %384
       %6514 = OpFMul %v4float %6510 %6513
       %6515 = OpCompositeExtract %float %6514 0
       %6516 = OpExtInst %float %1 FMix %6329 %6354 %6515
       %6517 = OpExtInst %float %1 FMix %6379 %6404 %6515
       %6518 = OpCompositeExtract %float %6514 1
       %6519 = OpExtInst %float %1 FMix %6516 %6517 %6518
       %6520 = OpExtInst %float %1 FMix %6429 %6454 %6515
       %6521 = OpExtInst %float %1 FMix %6479 %6504 %6515
       %6522 = OpExtInst %float %1 FMix %6520 %6521 %6518
       %6523 = OpCompositeExtract %float %6514 2
       %6524 = OpExtInst %float %1 FMix %6519 %6522 %6523
       %6525 = OpExtInst %float %1 FAbs %6524
       %6290 = OpExtInst %float %1 Fma %6525 %6287 %6289
       %6285 = OpVectorTimesScalar %v3float %6284 %float_2
       %6288 = OpFMul %float %6287 %float_0_5
       %6292 = OpIAdd %uint %6291 %uint_1
               OpBranch %6283
       %6294 = OpLabel
       %6526 = OpExtInst %float %1 FMix %float_0 %float_1 %6289
       %6527 = OpExtInst %float %1 Fma %6526 %4430 %4432
       %6528 = OpFMul %float %6263 %6527
       %6529 = OpExtInst %float %1 FMix %3873 %3878 %6528
       %6530 = OpExtInst %float %1 Sin %6000
       %6531 = OpFMul %float %6530 %6529
       %6532 = OpFAdd %v3float %5700 %2566
       %6533 = OpExtInst %v3float %1 NMax %6532 %280
       %6534 = OpExtInst %v3float %1 NMin %6533 %128
       %6535 = OpCompositeExtract %float %6534 0
       %6536 = OpCompositeExtract %float %6534 1
       %6537 = OpCompositeConstruct %v2float %6535 %6536
       %6538 = OpFMul %v2float %1701 %6537
       %6539 = OpFMul %v2float %6537 %1702
       %6540 = OpCompositeExtract %float %6538 0
       %6541 = OpCompositeExtract %float %6539 0
       %6542 = OpCompositeExtract %float %6538 1
       %6543 = OpCompositeExtract %float %6539 1
       %6544 = OpFAdd %float %6540 %6542
       %6545 = OpFAdd %float %6541 %6543
       %6546 = OpFMul %float %5717 %4453
       %6547 = OpFDiv %float %float_2 %6546
       %6548 = OpFMul %float %6544 %6547
       %6549 = OpFMul %float %6547 %4458
       %6550 = OpFMul %float %6549 %5988
       %6551 = OpExtInst %float %1 Fma %6545 %6547 %6550
       %6552 = OpExtInst %float %1 Floor %6548
       %6553 = OpFNegate %float %6552
       %6554 = OpExtInst %float %1 Fma %6544 %6547 %6553
       %6555 = OpExtInst %float %1 Fma %6554 %float_2097152 %6551
       %6556 = OpExtInst %float %1 Floor %6555
       %6557 = OpFMul %float %6552 %float_n6_28318548
       %6558 = OpExtInst %float %1 Fma %6548 %float_6_28318548 %6557
       %6559 = OpFMul %float %6556 %float_n6_28318548
       %6560 = OpExtInst %float %1 Fma %6551 %float_6_28318548 %6559
       %6561 = OpExtInst %float %1 Fma %6558 %float_2097152 %6560
       %6562 = OpFMul %float %6529 %2599
       %6563 = OpExtInst %float %1 Sin %6561
       %6564 = OpFMul %float %6563 %6562
       %6565 = OpCompositeConstruct %v3float %551 %551 %6531
       %6566 = OpCompositeConstruct %v3float %551 %551 %6564
       %6567 = OpFAdd %v3float %6565 %6566
       %6568 = OpFSub %v3float %5700 %1693
       %6569 = OpExtInst %v3float %1 NMax %6568 %280
       %6570 = OpExtInst %v3float %1 NMin %6569 %128
       %6571 = OpCompositeExtract %float %6570 0
       %6572 = OpCompositeExtract %float %6570 1
       %6573 = OpCompositeConstruct %v2float %6571 %6572
       %6574 = OpFMul %v2float %1701 %6573
       %6575 = OpFMul %v2float %6573 %1702
       %6576 = OpCompositeExtract %float %6574 0
       %6577 = OpCompositeExtract %float %6575 0
       %6578 = OpCompositeExtract %float %6574 1
       %6579 = OpCompositeExtract %float %6575 1
       %6580 = OpFAdd %float %6576 %6578
       %6581 = OpFAdd %float %6577 %6579
       %6582 = OpFMul %float %6546 %4453
       %6583 = OpFDiv %float %float_2 %6582
       %6584 = OpFMul %float %6580 %6583
       %6585 = OpFMul %float %6583 %4496
       %6586 = OpFMul %float %6585 %5988
       %6587 = OpExtInst %float %1 Fma %6581 %6583 %6586
       %6588 = OpExtInst %float %1 Floor %6584
       %6589 = OpFNegate %float %6588
       %6590 = OpExtInst %float %1 Fma %6580 %6583 %6589
       %6591 = OpExtInst %float %1 Fma %6590 %float_2097152 %6587
       %6592 = OpExtInst %float %1 Floor %6591
       %6593 = OpFMul %float %6588 %float_n6_28318548
       %6594 = OpExtInst %float %1 Fma %6584 %float_6_28318548 %6593
       %6595 = OpFMul %float %6592 %float_n6_28318548
       %6596 = OpExtInst %float %1 Fma %6587 %float_6_28318548 %6595
       %6597 = OpExtInst %float %1 Fma %6594 %float_2097152 %6596
       %6598 = OpFMul %float %6562 %2599
       %6599 = OpExtInst %float %1 Sin %6597
       %6600 = OpFMul %float %6599 %6598
       %6601 = OpCompositeConstruct %v3float %551 %551 %6600
       %6602 = OpFAdd %v3float %6567 %6601
       %6603 = OpFSub %v3float %5700 %2566
       %6604 = OpExtInst %v3float %1 NMax %6603 %280
       %6605 = OpExtInst %v3float %1 NMin %6604 %128
       %6606 = OpCompositeExtract %float %6605 0
       %6607 = OpCompositeExtract %float %6605 1
       %6608 = OpCompositeConstruct %v2float %6606 %6607
       %6609 = OpFMul %v2float %1701 %6608
       %6610 = OpFMul %v2float %6608 %1702
       %6611 = OpCompositeExtract %float %6609 0
       %6612 = OpCompositeExtract %float %6610 0
       %6613 = OpCompositeExtract %float %6609 1
       %6614 = OpCompositeExtract %float %6610 1
       %6615 = OpFAdd %float %6611 %6613
       %6616 = OpFAdd %float %6612 %6614
       %6617 = OpFMul %float %6582 %4453
       %6618 = OpFDiv %float %float_2 %6617
       %6619 = OpFMul %float %6615 %6618
       %6620 = OpFMul %float %6618 %4533
       %6621 = OpFMul %float %6620 %5988
       %6622 = OpExtInst %float %1 Fma %6616 %6618 %6621
       %6623 = OpExtInst %float %1 Floor %6619
       %6624 = OpFNegate %float %6623
       %6625 = OpExtInst %float %1 Fma %6615 %6618 %6624
       %6626 = OpExtInst %float %1 Fma %6625 %float_2097152 %6622
       %6627 = OpExtInst %float %1 Floor %6626
       %6628 = OpFMul %float %6623 %float_n6_28318548
       %6629 = OpExtInst %float %1 Fma %6619 %float_6_28318548 %6628
       %6630 = OpFMul %float %6627 %float_n6_28318548
       %6631 = OpExtInst %float %1 Fma %6622 %float_6_28318548 %6630
       %6632 = OpExtInst %float %1 Fma %6629 %float_2097152 %6631
       %6633 = OpFMul %float %6598 %2599
       %6634 = OpExtInst %float %1 Sin %6632
       %6635 = OpFMul %float %6634 %6633
       %6636 = OpCompositeConstruct %v3float %551 %551 %6635
       %6637 = OpFAdd %v3float %6602 %6636
       %6638 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_3
       %6639 = OpLoad %float %6638
       %6640 = OpFSub %float %6639 %float_n1
       %6641 = OpExtInst %float %1 FAbs %6640
       %6642 = OpFOrdGreaterThan %bool %6641 %float_9_99999975en06
       %6643 = OpFOrdGreaterThanEqual %bool %6639 %float_n1
       %6644 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_0
       %6645 = OpLoad %float %6644
       %6646 = OpSelect %float %6643 %6639 %6645
       %6647 = OpSelect %float %6642 %6646 %6639
       %6648 = OpFSub %float %6647 %float_1
       %6649 = OpExtInst %float %1 FAbs %6648
       %6650 = OpFOrdGreaterThan %bool %6649 %float_9_99999975en06
       %6651 = OpFOrdGreaterThanEqual %bool %6647 %float_1
       %6652 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_1
       %6653 = OpLoad %float %6652
       %6654 = OpSelect %float %6651 %6653 %6639
       %6655 = OpSelect %float %6650 %6654 %6639
       %6656 = OpExtInst %float %1 FAbs %6655
       %6657 = OpFOrdGreaterThan %bool %6656 %float_9_99999975en06
       %6658 = OpFOrdGreaterThanEqual %bool %6655 %float_0
       %6659 = OpSelect %float %6658 %float_1 %float_n1
       %6660 = OpSelect %float %6657 %6659 %float_1
       %6661 = OpExtInst %float %1 NMax %6660 %float_n1
       %6662 = OpExtInst %float %1 NMin %6661 %float_1
       %6663 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_80 %int_2
       %6664 = OpLoad %float %6663
       %6665 = OpCompositeConstruct %v3float %6662 %6664 %float_0
       %6666 = OpFAdd %v3float %6665 %1693
       %6667 = OpExtInst %v3float %1 NMax %6666 %280
       %6668 = OpExtInst %v3float %1 NMin %6667 %128
       %6669 = OpCompositeExtract %float %6668 0
       %6670 = OpCompositeExtract %float %6668 1
       %6671 = OpCompositeConstruct %v2float %6669 %6670
       %6672 = OpFMul %v2float %1701 %6671
       %6673 = OpFMul %v2float %6671 %1702
       %6674 = OpCompositeExtract %float %6672 0
       %6675 = OpCompositeExtract %float %6673 0
       %6676 = OpCompositeExtract %float %6672 1
       %6677 = OpCompositeExtract %float %6673 1
       %6678 = OpFAdd %float %6674 %6676
       %6679 = OpFAdd %float %6675 %6677
       %6680 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_81 %int_3
       %6681 = OpLoad %float %6680
       %6682 = OpFMul %float %6681 %4596
       %6683 = OpFDiv %float %float_2 %6682
       %6684 = OpFMul %float %6678 %6683
       %6685 = OpFMul %float %6683 %4603
       %6686 = OpFMul %float %6685 %5988
       %6687 = OpExtInst %float %1 Fma %6679 %6683 %6686
       %6688 = OpExtInst %float %1 Floor %6684
       %6689 = OpFNegate %float %6688
       %6690 = OpExtInst %float %1 Fma %6678 %6683 %6689
       %6691 = OpExtInst %float %1 Fma %6690 %float_2097152 %6687
       %6692 = OpExtInst %float %1 Floor %6691
       %6693 = OpFMul %float %6688 %float_n6_28318548
       %6694 = OpExtInst %float %1 Fma %6684 %float_6_28318548 %6693
       %6695 = OpFMul %float %6692 %float_n6_28318548
       %6696 = OpExtInst %float %1 Fma %6687 %float_6_28318548 %6695
       %6697 = OpExtInst %float %1 Fma %6694 %float_2097152 %6696
       %6698 = OpFMul %float %6529 %2738
       %6699 = OpExtInst %float %1 Sin %6697
       %6700 = OpFMul %float %6699 %6698
       %6701 = OpFAdd %v3float %6665 %2566
       %6702 = OpExtInst %v3float %1 NMax %6701 %280
       %6703 = OpExtInst %v3float %1 NMin %6702 %128
       %6704 = OpCompositeExtract %float %6703 0
       %6705 = OpCompositeExtract %float %6703 1
       %6706 = OpCompositeConstruct %v2float %6704 %6705
       %6707 = OpFMul %v2float %1701 %6706
       %6708 = OpFMul %v2float %6706 %1702
       %6709 = OpCompositeExtract %float %6707 0
       %6710 = OpCompositeExtract %float %6708 0
       %6711 = OpCompositeExtract %float %6707 1
       %6712 = OpCompositeExtract %float %6708 1
       %6713 = OpFAdd %float %6709 %6711
       %6714 = OpFAdd %float %6710 %6712
       %6715 = OpFMul %float %6682 %4453
       %6716 = OpFDiv %float %float_2 %6715
       %6717 = OpFMul %float %6713 %6716
       %6718 = OpFMul %float %6716 %4638
       %6719 = OpFMul %float %6718 %5988
       %6720 = OpExtInst %float %1 Fma %6714 %6716 %6719
       %6721 = OpExtInst %float %1 Floor %6717
       %6722 = OpFNegate %float %6721
       %6723 = OpExtInst %float %1 Fma %6713 %6716 %6722
       %6724 = OpExtInst %float %1 Fma %6723 %float_2097152 %6720
       %6725 = OpExtInst %float %1 Floor %6724
       %6726 = OpFMul %float %6721 %float_n6_28318548
       %6727 = OpExtInst %float %1 Fma %6717 %float_6_28318548 %6726
       %6728 = OpFMul %float %6725 %float_n6_28318548
       %6729 = OpExtInst %float %1 Fma %6720 %float_6_28318548 %6728
       %6730 = OpExtInst %float %1 Fma %6727 %float_2097152 %6729
       %6731 = OpFMul %float %6698 %2599
       %6732 = OpExtInst %float %1 Sin %6730
       %6733 = OpFMul %float %6732 %6731
       %6734 = OpCompositeConstruct %v3float %551 %551 %6700
       %6735 = OpCompositeConstruct %v3float %551 %551 %6733
       %6736 = OpFAdd %v3float %6734 %6735
       %6737 = OpFSub %v3float %6665 %1693
       %6738 = OpExtInst %v3float %1 NMax %6737 %280
       %6739 = OpExtInst %v3float %1 NMin %6738 %128
       %6740 = OpCompositeExtract %float %6739 0
       %6741 = OpCompositeExtract %float %6739 1
       %6742 = OpCompositeConstruct %v2float %6740 %6741
       %6743 = OpFMul %v2float %1701 %6742
       %6744 = OpFMul %v2float %6742 %1702
       %6745 = OpCompositeExtract %float %6743 0
       %6746 = OpCompositeExtract %float %6744 0
       %6747 = OpCompositeExtract %float %6743 1
       %6748 = OpCompositeExtract %float %6744 1
       %6749 = OpFAdd %float %6745 %6747
       %6750 = OpFAdd %float %6746 %6748
       %6751 = OpFMul %float %6715 %4453
       %6752 = OpFDiv %float %float_2 %6751
       %6753 = OpFMul %float %6749 %6752
       %6754 = OpFMul %float %6752 %4676
       %6755 = OpFMul %float %6754 %5988
       %6756 = OpExtInst %float %1 Fma %6750 %6752 %6755
       %6757 = OpExtInst %float %1 Floor %6753
       %6758 = OpFNegate %float %6757
       %6759 = OpExtInst %float %1 Fma %6749 %6752 %6758
       %6760 = OpExtInst %float %1 Fma %6759 %float_2097152 %6756
       %6761 = OpExtInst %float %1 Floor %6760
       %6762 = OpFMul %float %6757 %float_n6_28318548
       %6763 = OpExtInst %float %1 Fma %6753 %float_6_28318548 %6762
       %6764 = OpFMul %float %6761 %float_n6_28318548
       %6765 = OpExtInst %float %1 Fma %6756 %float_6_28318548 %6764
       %6766 = OpExtInst %float %1 Fma %6763 %float_2097152 %6765
       %6767 = OpFMul %float %6731 %2599
       %6768 = OpExtInst %float %1 Sin %6766
       %6769 = OpFMul %float %6768 %6767
       %6770 = OpCompositeConstruct %v3float %551 %551 %6769
       %6771 = OpFAdd %v3float %6736 %6770
       %6772 = OpFSub %v3float %6665 %2566
       %6773 = OpExtInst %v3float %1 NMax %6772 %280
       %6774 = OpExtInst %v3float %1 NMin %6773 %128
       %6775 = OpCompositeExtract %float %6774 0
       %6776 = OpCompositeExtract %float %6774 1
       %6777 = OpCompositeConstruct %v2float %6775 %6776
       %6778 = OpFMul %v2float %1701 %6777
       %6779 = OpFMul %v2float %6777 %1702
       %6780 = OpCompositeExtract %float %6778 0
       %6781 = OpCompositeExtract %float %6779 0
       %6782 = OpCompositeExtract %float %6778 1
       %6783 = OpCompositeExtract %float %6779 1
       %6784 = OpFAdd %float %6780 %6782
       %6785 = OpFAdd %float %6781 %6783
       %6786 = OpFMul %float %6751 %4453
       %6787 = OpFDiv %float %float_2 %6786
       %6788 = OpFMul %float %6784 %6787
       %6789 = OpFMul %float %6787 %4713
       %6790 = OpFMul %float %6789 %5988
       %6791 = OpExtInst %float %1 Fma %6785 %6787 %6790
       %6792 = OpExtInst %float %1 Floor %6788
       %6793 = OpFNegate %float %6792
       %6794 = OpExtInst %float %1 Fma %6784 %6787 %6793
       %6795 = OpExtInst %float %1 Fma %6794 %float_2097152 %6791
       %6796 = OpExtInst %float %1 Floor %6795
       %6797 = OpFMul %float %6792 %float_n6_28318548
       %6798 = OpExtInst %float %1 Fma %6788 %float_6_28318548 %6797
       %6799 = OpFMul %float %6796 %float_n6_28318548
       %6800 = OpExtInst %float %1 Fma %6791 %float_6_28318548 %6799
       %6801 = OpExtInst %float %1 Fma %6798 %float_2097152 %6800
       %6802 = OpFMul %float %6767 %2599
       %6803 = OpExtInst %float %1 Sin %6801
       %6804 = OpFMul %float %6803 %6802
       %6805 = OpCompositeConstruct %v3float %551 %551 %6804
       %6806 = OpFAdd %v3float %6771 %6805
       %6807 = OpFAdd %v3float %6637 %6806
       %6808 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_82 %int_0
       %6809 = OpLoad %float %6808
       %6810 = OpFSub %float %6809 %float_n1
       %6811 = OpExtInst %float %1 FAbs %6810
       %6812 = OpFOrdGreaterThan %bool %6811 %float_9_99999975en06
       %6813 = OpFOrdGreaterThanEqual %bool %6809 %float_n1
       %6814 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_82 %int_1
       %6815 = OpLoad %float %6814
       %6816 = OpSelect %float %6813 %6809 %6815
       %6817 = OpSelect %float %6812 %6816 %6809
       %6818 = OpFSub %float %6817 %float_1
       %6819 = OpExtInst %float %1 FAbs %6818
       %6820 = OpFOrdGreaterThan %bool %6819 %float_9_99999975en06
       %6821 = OpFOrdGreaterThanEqual %bool %6817 %float_1
       %6822 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_82 %int_2
       %6823 = OpLoad %float %6822
       %6824 = OpSelect %float %6821 %6823 %6809
       %6825 = OpSelect %float %6820 %6824 %6809
       %6826 = OpExtInst %float %1 FAbs %6825
       %6827 = OpFOrdGreaterThan %bool %6826 %float_9_99999975en06
       %6828 = OpFOrdGreaterThanEqual %bool %6825 %float_0
       %6829 = OpSelect %float %6828 %float_1 %float_n1
       %6830 = OpSelect %float %6827 %6829 %float_1
       %6831 = OpExtInst %float %1 NMax %6830 %float_n1
       %6832 = OpExtInst %float %1 NMin %6831 %float_1
       %6833 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_83 %int_3
       %6834 = OpLoad %float %6833
       %6835 = OpCompositeConstruct %v3float %6832 %6834 %float_0
       %6836 = OpFAdd %v3float %6835 %1693
       %6837 = OpExtInst %v3float %1 NMax %6836 %280
       %6838 = OpExtInst %v3float %1 NMin %6837 %128
       %6839 = OpCompositeExtract %float %6838 0
       %6840 = OpCompositeExtract %float %6838 1
       %6841 = OpCompositeConstruct %v2float %6839 %6840
       %6842 = OpFMul %v2float %1701 %6841
       %6843 = OpFMul %v2float %6841 %1702
       %6844 = OpCompositeExtract %float %6842 0
       %6845 = OpCompositeExtract %float %6843 0
       %6846 = OpCompositeExtract %float %6842 1
       %6847 = OpCompositeExtract %float %6843 1
       %6848 = OpFAdd %float %6844 %6846
       %6849 = OpFAdd %float %6845 %6847
       %6850 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_85 %int_0
       %6851 = OpLoad %float %6850
       %6852 = OpFMul %float %6851 %4596
       %6853 = OpFDiv %float %float_2 %6852
       %6854 = OpFMul %float %6848 %6853
       %6855 = OpFMul %float %6853 %4603
       %6856 = OpFMul %float %6855 %5988
       %6857 = OpExtInst %float %1 Fma %6849 %6853 %6856
       %6858 = OpExtInst %float %1 Floor %6854
       %6859 = OpFNegate %float %6858
       %6860 = OpExtInst %float %1 Fma %6848 %6853 %6859
       %6861 = OpExtInst %float %1 Fma %6860 %float_2097152 %6857
       %6862 = OpExtInst %float %1 Floor %6861
       %6863 = OpFMul %float %6858 %float_n6_28318548
       %6864 = OpExtInst %float %1 Fma %6854 %float_6_28318548 %6863
       %6865 = OpFMul %float %6862 %float_n6_28318548
       %6866 = OpExtInst %float %1 Fma %6857 %float_6_28318548 %6865
       %6867 = OpExtInst %float %1 Fma %6864 %float_2097152 %6866
       %6868 = OpExtInst %float %1 Sin %6867
       %6869 = OpFMul %float %6868 %6698
       %6870 = OpFAdd %v3float %6835 %2566
       %6871 = OpExtInst %v3float %1 NMax %6870 %280
       %6872 = OpExtInst %v3float %1 NMin %6871 %128
       %6873 = OpCompositeExtract %float %6872 0
       %6874 = OpCompositeExtract %float %6872 1
       %6875 = OpCompositeConstruct %v2float %6873 %6874
       %6876 = OpFMul %v2float %1701 %6875
       %6877 = OpFMul %v2float %6875 %1702
       %6878 = OpCompositeExtract %float %6876 0
       %6879 = OpCompositeExtract %float %6877 0
       %6880 = OpCompositeExtract %float %6876 1
       %6881 = OpCompositeExtract %float %6877 1
       %6882 = OpFAdd %float %6878 %6880
       %6883 = OpFAdd %float %6879 %6881
       %6884 = OpFMul %float %6852 %4453
       %6885 = OpFDiv %float %float_2 %6884
       %6886 = OpFMul %float %6882 %6885
       %6887 = OpFMul %float %6885 %4638
       %6888 = OpFMul %float %6887 %5988
       %6889 = OpExtInst %float %1 Fma %6883 %6885 %6888
       %6890 = OpExtInst %float %1 Floor %6886
       %6891 = OpFNegate %float %6890
       %6892 = OpExtInst %float %1 Fma %6882 %6885 %6891
       %6893 = OpExtInst %float %1 Fma %6892 %float_2097152 %6889
       %6894 = OpExtInst %float %1 Floor %6893
       %6895 = OpFMul %float %6890 %float_n6_28318548
       %6896 = OpExtInst %float %1 Fma %6886 %float_6_28318548 %6895
       %6897 = OpFMul %float %6894 %float_n6_28318548
       %6898 = OpExtInst %float %1 Fma %6889 %float_6_28318548 %6897
       %6899 = OpExtInst %float %1 Fma %6896 %float_2097152 %6898
       %6900 = OpExtInst %float %1 Sin %6899
       %6901 = OpFMul %float %6900 %6731
       %6902 = OpCompositeConstruct %v3float %551 %551 %6869
       %6903 = OpCompositeConstruct %v3float %551 %551 %6901
       %6904 = OpFAdd %v3float %6902 %6903
       %6905 = OpFSub %v3float %6835 %1693
       %6906 = OpExtInst %v3float %1 NMax %6905 %280
       %6907 = OpExtInst %v3float %1 NMin %6906 %128
       %6908 = OpCompositeExtract %float %6907 0
       %6909 = OpCompositeExtract %float %6907 1
       %6910 = OpCompositeConstruct %v2float %6908 %6909
       %6911 = OpFMul %v2float %1701 %6910
       %6912 = OpFMul %v2float %6910 %1702
       %6913 = OpCompositeExtract %float %6911 0
       %6914 = OpCompositeExtract %float %6912 0
       %6915 = OpCompositeExtract %float %6911 1
       %6916 = OpCompositeExtract %float %6912 1
       %6917 = OpFAdd %float %6913 %6915
       %6918 = OpFAdd %float %6914 %6916
       %6919 = OpFMul %float %6884 %4453
       %6920 = OpFDiv %float %float_2 %6919
       %6921 = OpFMul %float %6917 %6920
       %6922 = OpFMul %float %6920 %4676
       %6923 = OpFMul %float %6922 %5988
       %6924 = OpExtInst %float %1 Fma %6918 %6920 %6923
       %6925 = OpExtInst %float %1 Floor %6921
       %6926 = OpFNegate %float %6925
       %6927 = OpExtInst %float %1 Fma %6917 %6920 %6926
       %6928 = OpExtInst %float %1 Fma %6927 %float_2097152 %6924
       %6929 = OpExtInst %float %1 Floor %6928
       %6930 = OpFMul %float %6925 %float_n6_28318548
       %6931 = OpExtInst %float %1 Fma %6921 %float_6_28318548 %6930
       %6932 = OpFMul %float %6929 %float_n6_28318548
       %6933 = OpExtInst %float %1 Fma %6924 %float_6_28318548 %6932
       %6934 = OpExtInst %float %1 Fma %6931 %float_2097152 %6933
       %6935 = OpExtInst %float %1 Sin %6934
       %6936 = OpFMul %float %6935 %6767
       %6937 = OpCompositeConstruct %v3float %551 %551 %6936
       %6938 = OpFAdd %v3float %6904 %6937
       %6939 = OpFSub %v3float %6835 %2566
       %6940 = OpExtInst %v3float %1 NMax %6939 %280
       %6941 = OpExtInst %v3float %1 NMin %6940 %128
       %6942 = OpCompositeExtract %float %6941 0
       %6943 = OpCompositeExtract %float %6941 1
       %6944 = OpCompositeConstruct %v2float %6942 %6943
       %6945 = OpFMul %v2float %1701 %6944
       %6946 = OpFMul %v2float %6944 %1702
       %6947 = OpCompositeExtract %float %6945 0
       %6948 = OpCompositeExtract %float %6946 0
       %6949 = OpCompositeExtract %float %6945 1
       %6950 = OpCompositeExtract %float %6946 1
       %6951 = OpFAdd %float %6947 %6949
       %6952 = OpFAdd %float %6948 %6950
       %6953 = OpFMul %float %6919 %4453
       %6954 = OpFDiv %float %float_2 %6953
       %6955 = OpFMul %float %6951 %6954
       %6956 = OpFMul %float %6954 %4713
       %6957 = OpFMul %float %6956 %5988
       %6958 = OpExtInst %float %1 Fma %6952 %6954 %6957
       %6959 = OpExtInst %float %1 Floor %6955
       %6960 = OpFNegate %float %6959
       %6961 = OpExtInst %float %1 Fma %6951 %6954 %6960
       %6962 = OpExtInst %float %1 Fma %6961 %float_2097152 %6958
       %6963 = OpExtInst %float %1 Floor %6962
       %6964 = OpFMul %float %6959 %float_n6_28318548
       %6965 = OpExtInst %float %1 Fma %6955 %float_6_28318548 %6964
       %6966 = OpFMul %float %6963 %float_n6_28318548
       %6967 = OpExtInst %float %1 Fma %6958 %float_6_28318548 %6966
       %6968 = OpExtInst %float %1 Fma %6965 %float_2097152 %6967
       %6969 = OpExtInst %float %1 Sin %6968
       %6970 = OpFMul %float %6969 %6802
       %6971 = OpCompositeConstruct %v3float %551 %551 %6970
       %6972 = OpFAdd %v3float %6938 %6971
       %6973 = OpFAdd %v3float %6807 %6972
       %6974 = OpFMul %float %3571 %float_8
       %6975 = OpFMul %float %5716 %6974
       %6976 = OpFDiv %float %float_2 %6975
       %6977 = OpFMul %float %5713 %6976
       %6978 = OpFMul %float %6976 %4904
       %6979 = OpFMul %float %6978 %5988
       %6980 = OpExtInst %float %1 Fma %5714 %6976 %6979
       %6981 = OpExtInst %float %1 Floor %6977
       %6982 = OpFNegate %float %6981
       %6983 = OpExtInst %float %1 Fma %5713 %6976 %6982
       %6984 = OpExtInst %float %1 Fma %6983 %float_2097152 %6980
       %6985 = OpExtInst %float %1 Floor %6984
       %6986 = OpFMul %float %6981 %float_n6_28318548
       %6987 = OpExtInst %float %1 Fma %6977 %float_6_28318548 %6986
       %6988 = OpFMul %float %6985 %float_n6_28318548
       %6989 = OpExtInst %float %1 Fma %6980 %float_6_28318548 %6988
       %6990 = OpExtInst %float %1 Fma %6987 %float_2097152 %6989
       %6991 = OpFMul %float %6529 %float_8
       %6992 = OpExtInst %float %1 Sin %6990
       %6993 = OpFMul %float %6992 %6991
       %6994 = OpFMul %float %6975 %4453
       %6995 = OpFDiv %float %float_2 %6994
       %6996 = OpFMul %float %6544 %6995
       %6997 = OpFMul %float %6995 %4925
       %6998 = OpFMul %float %6997 %5988
       %6999 = OpExtInst %float %1 Fma %6545 %6995 %6998
       %7000 = OpExtInst %float %1 Floor %6996
       %7001 = OpFNegate %float %7000
       %7002 = OpExtInst %float %1 Fma %6544 %6995 %7001
       %7003 = OpExtInst %float %1 Fma %7002 %float_2097152 %6999
       %7004 = OpExtInst %float %1 Floor %7003
       %7005 = OpFMul %float %7000 %float_n6_28318548
       %7006 = OpExtInst %float %1 Fma %6996 %float_6_28318548 %7005
       %7007 = OpFMul %float %7004 %float_n6_28318548
       %7008 = OpExtInst %float %1 Fma %6999 %float_6_28318548 %7007
       %7009 = OpExtInst %float %1 Fma %7006 %float_2097152 %7008
       %7010 = OpFMul %float %6991 %2599
       %7011 = OpExtInst %float %1 Sin %7009
       %7012 = OpFMul %float %7011 %7010
       %7013 = OpCompositeConstruct %v3float %551 %551 %6993
       %7014 = OpCompositeConstruct %v3float %551 %551 %7012
       %7015 = OpFAdd %v3float %7013 %7014
       %7016 = OpFMul %float %6994 %4453
       %7017 = OpFDiv %float %float_2 %7016
       %7018 = OpFMul %float %6580 %7017
       %7019 = OpFMul %float %7017 %4949
       %7020 = OpFMul %float %7019 %5988
       %7021 = OpExtInst %float %1 Fma %6581 %7017 %7020
       %7022 = OpExtInst %float %1 Floor %7018
       %7023 = OpFNegate %float %7022
       %7024 = OpExtInst %float %1 Fma %6580 %7017 %7023
       %7025 = OpExtInst %float %1 Fma %7024 %float_2097152 %7021
       %7026 = OpExtInst %float %1 Floor %7025
       %7027 = OpFMul %float %7022 %float_n6_28318548
       %7028 = OpExtInst %float %1 Fma %7018 %float_6_28318548 %7027
       %7029 = OpFMul %float %7026 %float_n6_28318548
       %7030 = OpExtInst %float %1 Fma %7021 %float_6_28318548 %7029
       %7031 = OpExtInst %float %1 Fma %7028 %float_2097152 %7030
       %7032 = OpFMul %float %7010 %2599
       %7033 = OpExtInst %float %1 Sin %7031
       %7034 = OpFMul %float %7033 %7032
       %7035 = OpCompositeConstruct %v3float %551 %551 %7034
       %7036 = OpFAdd %v3float %7015 %7035
       %7037 = OpFMul %float %7016 %4453
       %7038 = OpFDiv %float %float_2 %7037
       %7039 = OpFMul %float %6615 %7038
       %7040 = OpFMul %float %7038 %4972
       %7041 = OpFMul %float %7040 %5988
       %7042 = OpExtInst %float %1 Fma %6616 %7038 %7041
       %7043 = OpExtInst %float %1 Floor %7039
       %7044 = OpFNegate %float %7043
       %7045 = OpExtInst %float %1 Fma %6615 %7038 %7044
       %7046 = OpExtInst %float %1 Fma %7045 %float_2097152 %7042
       %7047 = OpExtInst %float %1 Floor %7046
       %7048 = OpFMul %float %7043 %float_n6_28318548
       %7049 = OpExtInst %float %1 Fma %7039 %float_6_28318548 %7048
       %7050 = OpFMul %float %7047 %float_n6_28318548
       %7051 = OpExtInst %float %1 Fma %7042 %float_6_28318548 %7050
       %7052 = OpExtInst %float %1 Fma %7049 %float_2097152 %7051
       %7053 = OpFMul %float %7032 %2599
       %7054 = OpExtInst %float %1 Sin %7052
       %7055 = OpFMul %float %7054 %7053
       %7056 = OpCompositeConstruct %v3float %551 %551 %7055
       %7057 = OpFAdd %v3float %7036 %7056
       %7058 = OpFMul %float %6974 %4595
       %7059 = OpFMul %float %6681 %7058
       %7060 = OpFDiv %float %float_2 %7059
       %7061 = OpFMul %float %6678 %7060
       %7062 = OpFMul %float %7060 %4996
       %7063 = OpFMul %float %7062 %5988
       %7064 = OpExtInst %float %1 Fma %6679 %7060 %7063
       %7065 = OpExtInst %float %1 Floor %7061
       %7066 = OpFNegate %float %7065
       %7067 = OpExtInst %float %1 Fma %6678 %7060 %7066
       %7068 = OpExtInst %float %1 Fma %7067 %float_2097152 %7064
       %7069 = OpExtInst %float %1 Floor %7068
       %7070 = OpFMul %float %7065 %float_n6_28318548
       %7071 = OpExtInst %float %1 Fma %7061 %float_6_28318548 %7070
       %7072 = OpFMul %float %7069 %float_n6_28318548
       %7073 = OpExtInst %float %1 Fma %7064 %float_6_28318548 %7072
       %7074 = OpExtInst %float %1 Fma %7071 %float_2097152 %7073
       %7075 = OpFMul %float %6991 %2738
       %7076 = OpExtInst %float %1 Sin %7074
       %7077 = OpFMul %float %7076 %7075
       %7078 = OpFMul %float %7059 %4453
       %7079 = OpFDiv %float %float_2 %7078
       %7080 = OpFMul %float %6713 %7079
       %7081 = OpFMul %float %7079 %5017
       %7082 = OpFMul %float %7081 %5988
       %7083 = OpExtInst %float %1 Fma %6714 %7079 %7082
       %7084 = OpExtInst %float %1 Floor %7080
       %7085 = OpFNegate %float %7084
       %7086 = OpExtInst %float %1 Fma %6713 %7079 %7085
       %7087 = OpExtInst %float %1 Fma %7086 %float_2097152 %7083
       %7088 = OpExtInst %float %1 Floor %7087
       %7089 = OpFMul %float %7084 %float_n6_28318548
       %7090 = OpExtInst %float %1 Fma %7080 %float_6_28318548 %7089
       %7091 = OpFMul %float %7088 %float_n6_28318548
       %7092 = OpExtInst %float %1 Fma %7083 %float_6_28318548 %7091
       %7093 = OpExtInst %float %1 Fma %7090 %float_2097152 %7092
       %7094 = OpFMul %float %7075 %2599
       %7095 = OpExtInst %float %1 Sin %7093
       %7096 = OpFMul %float %7095 %7094
       %7097 = OpCompositeConstruct %v3float %551 %551 %7077
       %7098 = OpCompositeConstruct %v3float %551 %551 %7096
       %7099 = OpFAdd %v3float %7097 %7098
       %7100 = OpFMul %float %7078 %4453
       %7101 = OpFDiv %float %float_2 %7100
       %7102 = OpFMul %float %6749 %7101
       %7103 = OpFMul %float %7101 %5041
       %7104 = OpFMul %float %7103 %5988
       %7105 = OpExtInst %float %1 Fma %6750 %7101 %7104
       %7106 = OpExtInst %float %1 Floor %7102
       %7107 = OpFNegate %float %7106
       %7108 = OpExtInst %float %1 Fma %6749 %7101 %7107
       %7109 = OpExtInst %float %1 Fma %7108 %float_2097152 %7105
       %7110 = OpExtInst %float %1 Floor %7109
       %7111 = OpFMul %float %7106 %float_n6_28318548
       %7112 = OpExtInst %float %1 Fma %7102 %float_6_28318548 %7111
       %7113 = OpFMul %float %7110 %float_n6_28318548
       %7114 = OpExtInst %float %1 Fma %7105 %float_6_28318548 %7113
       %7115 = OpExtInst %float %1 Fma %7112 %float_2097152 %7114
       %7116 = OpFMul %float %7094 %2599
       %7117 = OpExtInst %float %1 Sin %7115
       %7118 = OpFMul %float %7117 %7116
       %7119 = OpCompositeConstruct %v3float %551 %551 %7118
       %7120 = OpFAdd %v3float %7099 %7119
       %7121 = OpFMul %float %7100 %4453
       %7122 = OpFDiv %float %float_2 %7121
       %7123 = OpFMul %float %6784 %7122
       %7124 = OpFMul %float %7122 %5064
       %7125 = OpFMul %float %7124 %5988
       %7126 = OpExtInst %float %1 Fma %6785 %7122 %7125
       %7127 = OpExtInst %float %1 Floor %7123
       %7128 = OpFNegate %float %7127
       %7129 = OpExtInst %float %1 Fma %6784 %7122 %7128
       %7130 = OpExtInst %float %1 Fma %7129 %float_2097152 %7126
       %7131 = OpExtInst %float %1 Floor %7130
       %7132 = OpFMul %float %7127 %float_n6_28318548
       %7133 = OpExtInst %float %1 Fma %7123 %float_6_28318548 %7132
       %7134 = OpFMul %float %7131 %float_n6_28318548
       %7135 = OpExtInst %float %1 Fma %7126 %float_6_28318548 %7134
       %7136 = OpExtInst %float %1 Fma %7133 %float_2097152 %7135
       %7137 = OpFMul %float %7116 %2599
       %7138 = OpExtInst %float %1 Sin %7136
       %7139 = OpFMul %float %7138 %7137
       %7140 = OpCompositeConstruct %v3float %551 %551 %7139
       %7141 = OpFAdd %v3float %7120 %7140
       %7142 = OpFAdd %v3float %7057 %7141
       %7143 = OpFMul %float %6851 %7058
       %7144 = OpFDiv %float %float_2 %7143
       %7145 = OpFMul %float %6848 %7144
       %7146 = OpFMul %float %7144 %4996
       %7147 = OpFMul %float %7146 %5988
       %7148 = OpExtInst %float %1 Fma %6849 %7144 %7147
       %7149 = OpExtInst %float %1 Floor %7145
       %7150 = OpFNegate %float %7149
       %7151 = OpExtInst %float %1 Fma %6848 %7144 %7150
       %7152 = OpExtInst %float %1 Fma %7151 %float_2097152 %7148
       %7153 = OpExtInst %float %1 Floor %7152
       %7154 = OpFMul %float %7149 %float_n6_28318548
       %7155 = OpExtInst %float %1 Fma %7145 %float_6_28318548 %7154
       %7156 = OpFMul %float %7153 %float_n6_28318548
       %7157 = OpExtInst %float %1 Fma %7148 %float_6_28318548 %7156
       %7158 = OpExtInst %float %1 Fma %7155 %float_2097152 %7157
       %7159 = OpExtInst %float %1 Sin %7158
       %7160 = OpFMul %float %7159 %7075
       %7161 = OpFMul %float %7143 %4453
       %7162 = OpFDiv %float %float_2 %7161
       %7163 = OpFMul %float %6882 %7162
       %7164 = OpFMul %float %7162 %5017
       %7165 = OpFMul %float %7164 %5988
       %7166 = OpExtInst %float %1 Fma %6883 %7162 %7165
       %7167 = OpExtInst %float %1 Floor %7163
       %7168 = OpFNegate %float %7167
       %7169 = OpExtInst %float %1 Fma %6882 %7162 %7168
       %7170 = OpExtInst %float %1 Fma %7169 %float_2097152 %7166
       %7171 = OpExtInst %float %1 Floor %7170
       %7172 = OpFMul %float %7167 %float_n6_28318548
       %7173 = OpExtInst %float %1 Fma %7163 %float_6_28318548 %7172
       %7174 = OpFMul %float %7171 %float_n6_28318548
       %7175 = OpExtInst %float %1 Fma %7166 %float_6_28318548 %7174
       %7176 = OpExtInst %float %1 Fma %7173 %float_2097152 %7175
       %7177 = OpExtInst %float %1 Sin %7176
       %7178 = OpFMul %float %7177 %7094
       %7179 = OpCompositeConstruct %v3float %551 %551 %7160
       %7180 = OpCompositeConstruct %v3float %551 %551 %7178
       %7181 = OpFAdd %v3float %7179 %7180
       %7182 = OpFMul %float %7161 %4453
       %7183 = OpFDiv %float %float_2 %7182
       %7184 = OpFMul %float %6917 %7183
       %7185 = OpFMul %float %7183 %5041
       %7186 = OpFMul %float %7185 %5988
       %7187 = OpExtInst %float %1 Fma %6918 %7183 %7186
       %7188 = OpExtInst %float %1 Floor %7184
       %7189 = OpFNegate %float %7188
       %7190 = OpExtInst %float %1 Fma %6917 %7183 %7189
       %7191 = OpExtInst %float %1 Fma %7190 %float_2097152 %7187
       %7192 = OpExtInst %float %1 Floor %7191
       %7193 = OpFMul %float %7188 %float_n6_28318548
       %7194 = OpExtInst %float %1 Fma %7184 %float_6_28318548 %7193
       %7195 = OpFMul %float %7192 %float_n6_28318548
       %7196 = OpExtInst %float %1 Fma %7187 %float_6_28318548 %7195
       %7197 = OpExtInst %float %1 Fma %7194 %float_2097152 %7196
       %7198 = OpExtInst %float %1 Sin %7197
       %7199 = OpFMul %float %7198 %7116
       %7200 = OpCompositeConstruct %v3float %551 %551 %7199
       %7201 = OpFAdd %v3float %7181 %7200
       %7202 = OpFMul %float %7182 %4453
       %7203 = OpFDiv %float %float_2 %7202
       %7204 = OpFMul %float %6951 %7203
       %7205 = OpFMul %float %7203 %5064
       %7206 = OpFMul %float %7205 %5988
       %7207 = OpExtInst %float %1 Fma %6952 %7203 %7206
       %7208 = OpExtInst %float %1 Floor %7204
       %7209 = OpFNegate %float %7208
       %7210 = OpExtInst %float %1 Fma %6951 %7203 %7209
       %7211 = OpExtInst %float %1 Fma %7210 %float_2097152 %7207
       %7212 = OpExtInst %float %1 Floor %7211
       %7213 = OpFMul %float %7208 %float_n6_28318548
       %7214 = OpExtInst %float %1 Fma %7204 %float_6_28318548 %7213
       %7215 = OpFMul %float %7212 %float_n6_28318548
       %7216 = OpExtInst %float %1 Fma %7207 %float_6_28318548 %7215
       %7217 = OpExtInst %float %1 Fma %7214 %float_2097152 %7216
       %7218 = OpExtInst %float %1 Sin %7217
       %7219 = OpFMul %float %7218 %7137
       %7220 = OpCompositeConstruct %v3float %551 %551 %7219
       %7221 = OpFAdd %v3float %7201 %7220
       %7222 = OpFAdd %v3float %7142 %7221
       %7223 = OpFMul %float %5716 %5164
       %7224 = OpFDiv %float %float_2 %7223
       %7225 = OpFMul %float %5713 %7224
       %7226 = OpFMul %float %7224 %5169
       %7227 = OpFMul %float %7226 %5988
       %7228 = OpExtInst %float %1 Fma %5714 %7224 %7227
       %7229 = OpExtInst %float %1 Floor %7225
       %7230 = OpFNegate %float %7229
       %7231 = OpExtInst %float %1 Fma %5713 %7224 %7230
       %7232 = OpExtInst %float %1 Fma %7231 %float_2097152 %7228
       %7233 = OpExtInst %float %1 Floor %7232
       %7234 = OpFMul %float %7229 %float_n6_28318548
       %7235 = OpExtInst %float %1 Fma %7225 %float_6_28318548 %7234
       %7236 = OpFMul %float %7233 %float_n6_28318548
       %7237 = OpExtInst %float %1 Fma %7228 %float_6_28318548 %7236
       %7238 = OpExtInst %float %1 Fma %7235 %float_2097152 %7237
       %7239 = OpFMul %float %6529 %float_4
       %7240 = OpExtInst %float %1 Sin %7238
       %7241 = OpFMul %float %7240 %7239
       %7242 = OpFMul %float %7223 %4453
       %7243 = OpFDiv %float %float_2 %7242
       %7244 = OpFMul %float %6544 %7243
       %7245 = OpFMul %float %7243 %5189
       %7246 = OpFMul %float %7245 %5988
       %7247 = OpExtInst %float %1 Fma %6545 %7243 %7246
       %7248 = OpExtInst %float %1 Floor %7244
       %7249 = OpFNegate %float %7248
       %7250 = OpExtInst %float %1 Fma %6544 %7243 %7249
       %7251 = OpExtInst %float %1 Fma %7250 %float_2097152 %7247
       %7252 = OpExtInst %float %1 Floor %7251
       %7253 = OpFMul %float %7248 %float_n6_28318548
       %7254 = OpExtInst %float %1 Fma %7244 %float_6_28318548 %7253
       %7255 = OpFMul %float %7252 %float_n6_28318548
       %7256 = OpExtInst %float %1 Fma %7247 %float_6_28318548 %7255
       %7257 = OpExtInst %float %1 Fma %7254 %float_2097152 %7256
       %7258 = OpFMul %float %7239 %2599
       %7259 = OpExtInst %float %1 Sin %7257
       %7260 = OpFMul %float %7259 %7258
       %7261 = OpCompositeConstruct %v3float %551 %551 %7241
       %7262 = OpCompositeConstruct %v3float %551 %551 %7260
       %7263 = OpFAdd %v3float %7261 %7262
       %7264 = OpFMul %float %7242 %4453
       %7265 = OpFDiv %float %float_2 %7264
       %7266 = OpFMul %float %6580 %7265
       %7267 = OpFMul %float %7265 %5212
       %7268 = OpFMul %float %7267 %5988
       %7269 = OpExtInst %float %1 Fma %6581 %7265 %7268
       %7270 = OpExtInst %float %1 Floor %7266
       %7271 = OpFNegate %float %7270
       %7272 = OpExtInst %float %1 Fma %6580 %7265 %7271
       %7273 = OpExtInst %float %1 Fma %7272 %float_2097152 %7269
       %7274 = OpExtInst %float %1 Floor %7273
       %7275 = OpFMul %float %7270 %float_n6_28318548
       %7276 = OpExtInst %float %1 Fma %7266 %float_6_28318548 %7275
       %7277 = OpFMul %float %7274 %float_n6_28318548
       %7278 = OpExtInst %float %1 Fma %7269 %float_6_28318548 %7277
       %7279 = OpExtInst %float %1 Fma %7276 %float_2097152 %7278
       %7280 = OpFMul %float %7258 %2599
       %7281 = OpExtInst %float %1 Sin %7279
       %7282 = OpFMul %float %7281 %7280
       %7283 = OpCompositeConstruct %v3float %551 %551 %7282
       %7284 = OpFAdd %v3float %7263 %7283
       %7285 = OpFMul %float %7264 %4453
       %7286 = OpFDiv %float %float_2 %7285
       %7287 = OpFMul %float %6615 %7286
       %7288 = OpFMul %float %7286 %5234
       %7289 = OpFMul %float %7288 %5988
       %7290 = OpExtInst %float %1 Fma %6616 %7286 %7289
       %7291 = OpExtInst %float %1 Floor %7287
       %7292 = OpFNegate %float %7291
       %7293 = OpExtInst %float %1 Fma %6615 %7286 %7292
       %7294 = OpExtInst %float %1 Fma %7293 %float_2097152 %7290
       %7295 = OpExtInst %float %1 Floor %7294
       %7296 = OpFMul %float %7291 %float_n6_28318548
       %7297 = OpExtInst %float %1 Fma %7287 %float_6_28318548 %7296
       %7298 = OpFMul %float %7295 %float_n6_28318548
       %7299 = OpExtInst %float %1 Fma %7290 %float_6_28318548 %7298
       %7300 = OpExtInst %float %1 Fma %7297 %float_2097152 %7299
       %7301 = OpFMul %float %7280 %2599
       %7302 = OpExtInst %float %1 Sin %7300
       %7303 = OpFMul %float %7302 %7301
       %7304 = OpCompositeConstruct %v3float %551 %551 %7303
       %7305 = OpFAdd %v3float %7284 %7304
       %7306 = OpFMul %float %6681 %5252
       %7307 = OpFDiv %float %float_2 %7306
       %7308 = OpFMul %float %6678 %7307
       %7309 = OpFMul %float %7307 %5257
       %7310 = OpFMul %float %7309 %5988
       %7311 = OpExtInst %float %1 Fma %6679 %7307 %7310
       %7312 = OpExtInst %float %1 Floor %7308
       %7313 = OpFNegate %float %7312
       %7314 = OpExtInst %float %1 Fma %6678 %7307 %7313
       %7315 = OpExtInst %float %1 Fma %7314 %float_2097152 %7311
       %7316 = OpExtInst %float %1 Floor %7315
       %7317 = OpFMul %float %7312 %float_n6_28318548
       %7318 = OpExtInst %float %1 Fma %7308 %float_6_28318548 %7317
       %7319 = OpFMul %float %7316 %float_n6_28318548
       %7320 = OpExtInst %float %1 Fma %7311 %float_6_28318548 %7319
       %7321 = OpExtInst %float %1 Fma %7318 %float_2097152 %7320
       %7322 = OpFMul %float %7239 %2738
       %7323 = OpExtInst %float %1 Sin %7321
       %7324 = OpFMul %float %7323 %7322
       %7325 = OpFMul %float %7306 %4453
       %7326 = OpFDiv %float %float_2 %7325
       %7327 = OpFMul %float %6713 %7326
       %7328 = OpFMul %float %7326 %5277
       %7329 = OpFMul %float %7328 %5988
       %7330 = OpExtInst %float %1 Fma %6714 %7326 %7329
       %7331 = OpExtInst %float %1 Floor %7327
       %7332 = OpFNegate %float %7331
       %7333 = OpExtInst %float %1 Fma %6713 %7326 %7332
       %7334 = OpExtInst %float %1 Fma %7333 %float_2097152 %7330
       %7335 = OpExtInst %float %1 Floor %7334
       %7336 = OpFMul %float %7331 %float_n6_28318548
       %7337 = OpExtInst %float %1 Fma %7327 %float_6_28318548 %7336
       %7338 = OpFMul %float %7335 %float_n6_28318548
       %7339 = OpExtInst %float %1 Fma %7330 %float_6_28318548 %7338
       %7340 = OpExtInst %float %1 Fma %7337 %float_2097152 %7339
       %7341 = OpFMul %float %7322 %2599
       %7342 = OpExtInst %float %1 Sin %7340
       %7343 = OpFMul %float %7342 %7341
       %7344 = OpCompositeConstruct %v3float %551 %551 %7324
       %7345 = OpCompositeConstruct %v3float %551 %551 %7343
       %7346 = OpFAdd %v3float %7344 %7345
       %7347 = OpFMul %float %7325 %4453
       %7348 = OpFDiv %float %float_2 %7347
       %7349 = OpFMul %float %6749 %7348
       %7350 = OpFMul %float %7348 %5300
       %7351 = OpFMul %float %7350 %5988
       %7352 = OpExtInst %float %1 Fma %6750 %7348 %7351
       %7353 = OpExtInst %float %1 Floor %7349
       %7354 = OpFNegate %float %7353
       %7355 = OpExtInst %float %1 Fma %6749 %7348 %7354
       %7356 = OpExtInst %float %1 Fma %7355 %float_2097152 %7352
       %7357 = OpExtInst %float %1 Floor %7356
       %7358 = OpFMul %float %7353 %float_n6_28318548
       %7359 = OpExtInst %float %1 Fma %7349 %float_6_28318548 %7358
       %7360 = OpFMul %float %7357 %float_n6_28318548
       %7361 = OpExtInst %float %1 Fma %7352 %float_6_28318548 %7360
       %7362 = OpExtInst %float %1 Fma %7359 %float_2097152 %7361
       %7363 = OpFMul %float %7341 %2599
       %7364 = OpExtInst %float %1 Sin %7362
       %7365 = OpFMul %float %7364 %7363
       %7366 = OpCompositeConstruct %v3float %551 %551 %7365
       %7367 = OpFAdd %v3float %7346 %7366
       %7368 = OpFMul %float %7347 %4453
       %7369 = OpFDiv %float %float_2 %7368
       %7370 = OpFMul %float %6784 %7369
       %7371 = OpFMul %float %7369 %5322
       %7372 = OpFMul %float %7371 %5988
       %7373 = OpExtInst %float %1 Fma %6785 %7369 %7372
       %7374 = OpExtInst %float %1 Floor %7370
       %7375 = OpFNegate %float %7374
       %7376 = OpExtInst %float %1 Fma %6784 %7369 %7375
       %7377 = OpExtInst %float %1 Fma %7376 %float_2097152 %7373
       %7378 = OpExtInst %float %1 Floor %7377
       %7379 = OpFMul %float %7374 %float_n6_28318548
       %7380 = OpExtInst %float %1 Fma %7370 %float_6_28318548 %7379
       %7381 = OpFMul %float %7378 %float_n6_28318548
       %7382 = OpExtInst %float %1 Fma %7373 %float_6_28318548 %7381
       %7383 = OpExtInst %float %1 Fma %7380 %float_2097152 %7382
       %7384 = OpFMul %float %7363 %2599
       %7385 = OpExtInst %float %1 Sin %7383
       %7386 = OpFMul %float %7385 %7384
       %7387 = OpCompositeConstruct %v3float %551 %551 %7386
       %7388 = OpFAdd %v3float %7367 %7387
       %7389 = OpFAdd %v3float %7305 %7388
       %7390 = OpFMul %float %6851 %5252
       %7391 = OpFDiv %float %float_2 %7390
       %7392 = OpFMul %float %6848 %7391
       %7393 = OpFMul %float %7391 %5257
       %7394 = OpFMul %float %7393 %5988
       %7395 = OpExtInst %float %1 Fma %6849 %7391 %7394
       %7396 = OpExtInst %float %1 Floor %7392
       %7397 = OpFNegate %float %7396
       %7398 = OpExtInst %float %1 Fma %6848 %7391 %7397
       %7399 = OpExtInst %float %1 Fma %7398 %float_2097152 %7395
       %7400 = OpExtInst %float %1 Floor %7399
       %7401 = OpFMul %float %7396 %float_n6_28318548
       %7402 = OpExtInst %float %1 Fma %7392 %float_6_28318548 %7401
       %7403 = OpFMul %float %7400 %float_n6_28318548
       %7404 = OpExtInst %float %1 Fma %7395 %float_6_28318548 %7403
       %7405 = OpExtInst %float %1 Fma %7402 %float_2097152 %7404
       %7406 = OpExtInst %float %1 Sin %7405
       %7407 = OpFMul %float %7406 %7322
       %7408 = OpFMul %float %7390 %4453
       %7409 = OpFDiv %float %float_2 %7408
       %7410 = OpFMul %float %6882 %7409
       %7411 = OpFMul %float %7409 %5277
       %7412 = OpFMul %float %7411 %5988
       %7413 = OpExtInst %float %1 Fma %6883 %7409 %7412
       %7414 = OpExtInst %float %1 Floor %7410
       %7415 = OpFNegate %float %7414
       %7416 = OpExtInst %float %1 Fma %6882 %7409 %7415
       %7417 = OpExtInst %float %1 Fma %7416 %float_2097152 %7413
       %7418 = OpExtInst %float %1 Floor %7417
       %7419 = OpFMul %float %7414 %float_n6_28318548
       %7420 = OpExtInst %float %1 Fma %7410 %float_6_28318548 %7419
       %7421 = OpFMul %float %7418 %float_n6_28318548
       %7422 = OpExtInst %float %1 Fma %7413 %float_6_28318548 %7421
       %7423 = OpExtInst %float %1 Fma %7420 %float_2097152 %7422
       %7424 = OpExtInst %float %1 Sin %7423
       %7425 = OpFMul %float %7424 %7341
       %7426 = OpCompositeConstruct %v3float %551 %551 %7407
       %7427 = OpCompositeConstruct %v3float %551 %551 %7425
       %7428 = OpFAdd %v3float %7426 %7427
       %7429 = OpFMul %float %7408 %4453
       %7430 = OpFDiv %float %float_2 %7429
       %7431 = OpFMul %float %6917 %7430
       %7432 = OpFMul %float %7430 %5300
       %7433 = OpFMul %float %7432 %5988
       %7434 = OpExtInst %float %1 Fma %6918 %7430 %7433
       %7435 = OpExtInst %float %1 Floor %7431
       %7436 = OpFNegate %float %7435
       %7437 = OpExtInst %float %1 Fma %6917 %7430 %7436
       %7438 = OpExtInst %float %1 Fma %7437 %float_2097152 %7434
       %7439 = OpExtInst %float %1 Floor %7438
       %7440 = OpFMul %float %7435 %float_n6_28318548
       %7441 = OpExtInst %float %1 Fma %7431 %float_6_28318548 %7440
       %7442 = OpFMul %float %7439 %float_n6_28318548
       %7443 = OpExtInst %float %1 Fma %7434 %float_6_28318548 %7442
       %7444 = OpExtInst %float %1 Fma %7441 %float_2097152 %7443
       %7445 = OpExtInst %float %1 Sin %7444
       %7446 = OpFMul %float %7445 %7363
       %7447 = OpCompositeConstruct %v3float %551 %551 %7446
       %7448 = OpFAdd %v3float %7428 %7447
       %7449 = OpFMul %float %7429 %4453
       %7450 = OpFDiv %float %float_2 %7449
       %7451 = OpFMul %float %6951 %7450
       %7452 = OpFMul %float %7450 %5322
       %7453 = OpFMul %float %7452 %5988
       %7454 = OpExtInst %float %1 Fma %6952 %7450 %7453
       %7455 = OpExtInst %float %1 Floor %7451
       %7456 = OpFNegate %float %7455
       %7457 = OpExtInst %float %1 Fma %6951 %7450 %7456
       %7458 = OpExtInst %float %1 Fma %7457 %float_2097152 %7454
       %7459 = OpExtInst %float %1 Floor %7458
       %7460 = OpFMul %float %7455 %float_n6_28318548
       %7461 = OpExtInst %float %1 Fma %7451 %float_6_28318548 %7460
       %7462 = OpFMul %float %7459 %float_n6_28318548
       %7463 = OpExtInst %float %1 Fma %7454 %float_6_28318548 %7462
       %7464 = OpExtInst %float %1 Fma %7461 %float_2097152 %7463
       %7465 = OpExtInst %float %1 Sin %7464
       %7466 = OpFMul %float %7465 %7384
       %7467 = OpCompositeConstruct %v3float %551 %551 %7466
       %7468 = OpFAdd %v3float %7448 %7467
       %7469 = OpFAdd %v3float %7389 %7468
       %7470 = OpFMul %float %5716 %5421
       %7471 = OpFDiv %float %float_2 %7470
       %7472 = OpFMul %float %5713 %7471
       %7473 = OpFMul %float %7471 %4904
       %7474 = OpFMul %float %7473 %5988
       %7475 = OpExtInst %float %1 Fma %5714 %7471 %7474
       %7476 = OpExtInst %float %1 Floor %7472
       %7477 = OpFNegate %float %7476
       %7478 = OpExtInst %float %1 Fma %5713 %7471 %7477
       %7479 = OpExtInst %float %1 Fma %7478 %float_2097152 %7475
       %7480 = OpExtInst %float %1 Floor %7479
       %7481 = OpFMul %float %7476 %float_n6_28318548
       %7482 = OpExtInst %float %1 Fma %7472 %float_6_28318548 %7481
       %7483 = OpFMul %float %7480 %float_n6_28318548
       %7484 = OpExtInst %float %1 Fma %7475 %float_6_28318548 %7483
       %7485 = OpExtInst %float %1 Fma %7482 %float_2097152 %7484
       %7486 = OpFMul %float %6529 %float_0_5
       %7487 = OpExtInst %float %1 Sin %7485
       %7488 = OpFMul %float %7487 %7486
       %7489 = OpFMul %float %7470 %4453
       %7490 = OpFDiv %float %float_2 %7489
       %7491 = OpFMul %float %6544 %7490
       %7492 = OpFMul %float %7490 %4925
       %7493 = OpFMul %float %7492 %5988
       %7494 = OpExtInst %float %1 Fma %6545 %7490 %7493
       %7495 = OpExtInst %float %1 Floor %7491
       %7496 = OpFNegate %float %7495
       %7497 = OpExtInst %float %1 Fma %6544 %7490 %7496
       %7498 = OpExtInst %float %1 Fma %7497 %float_2097152 %7494
       %7499 = OpExtInst %float %1 Floor %7498
       %7500 = OpFMul %float %7495 %float_n6_28318548
       %7501 = OpExtInst %float %1 Fma %7491 %float_6_28318548 %7500
       %7502 = OpFMul %float %7499 %float_n6_28318548
       %7503 = OpExtInst %float %1 Fma %7494 %float_6_28318548 %7502
       %7504 = OpExtInst %float %1 Fma %7501 %float_2097152 %7503
       %7505 = OpFMul %float %7486 %2599
       %7506 = OpExtInst %float %1 Sin %7504
       %7507 = OpFMul %float %7506 %7505
       %7508 = OpCompositeConstruct %v3float %551 %551 %7488
       %7509 = OpCompositeConstruct %v3float %551 %551 %7507
       %7510 = OpFAdd %v3float %7508 %7509
       %7511 = OpFMul %float %7489 %4453
       %7512 = OpFDiv %float %float_2 %7511
       %7513 = OpFMul %float %6580 %7512
       %7514 = OpFMul %float %7512 %4949
       %7515 = OpFMul %float %7514 %5988
       %7516 = OpExtInst %float %1 Fma %6581 %7512 %7515
       %7517 = OpExtInst %float %1 Floor %7513
       %7518 = OpFNegate %float %7517
       %7519 = OpExtInst %float %1 Fma %6580 %7512 %7518
       %7520 = OpExtInst %float %1 Fma %7519 %float_2097152 %7516
       %7521 = OpExtInst %float %1 Floor %7520
       %7522 = OpFMul %float %7517 %float_n6_28318548
       %7523 = OpExtInst %float %1 Fma %7513 %float_6_28318548 %7522
       %7524 = OpFMul %float %7521 %float_n6_28318548
       %7525 = OpExtInst %float %1 Fma %7516 %float_6_28318548 %7524
       %7526 = OpExtInst %float %1 Fma %7523 %float_2097152 %7525
       %7527 = OpFMul %float %7505 %2599
       %7528 = OpExtInst %float %1 Sin %7526
       %7529 = OpFMul %float %7528 %7527
       %7530 = OpCompositeConstruct %v3float %551 %551 %7529
       %7531 = OpFAdd %v3float %7510 %7530
       %7532 = OpFMul %float %7511 %4453
       %7533 = OpFDiv %float %float_2 %7532
       %7534 = OpFMul %float %6615 %7533
       %7535 = OpFMul %float %7533 %4972
       %7536 = OpFMul %float %7535 %5988
       %7537 = OpExtInst %float %1 Fma %6616 %7533 %7536
       %7538 = OpExtInst %float %1 Floor %7534
       %7539 = OpFNegate %float %7538
       %7540 = OpExtInst %float %1 Fma %6615 %7533 %7539
       %7541 = OpExtInst %float %1 Fma %7540 %float_2097152 %7537
       %7542 = OpExtInst %float %1 Floor %7541
       %7543 = OpFMul %float %7538 %float_n6_28318548
       %7544 = OpExtInst %float %1 Fma %7534 %float_6_28318548 %7543
       %7545 = OpFMul %float %7542 %float_n6_28318548
       %7546 = OpExtInst %float %1 Fma %7537 %float_6_28318548 %7545
       %7547 = OpExtInst %float %1 Fma %7544 %float_2097152 %7546
       %7548 = OpFMul %float %7527 %2599
       %7549 = OpExtInst %float %1 Sin %7547
       %7550 = OpFMul %float %7549 %7548
       %7551 = OpCompositeConstruct %v3float %551 %551 %7550
       %7552 = OpFAdd %v3float %7531 %7551
       %7553 = OpFMul %float %6681 %5505
       %7554 = OpFDiv %float %float_2 %7553
       %7555 = OpFMul %float %6678 %7554
       %7556 = OpFMul %float %7554 %4996
       %7557 = OpFMul %float %7556 %5988
       %7558 = OpExtInst %float %1 Fma %6679 %7554 %7557
       %7559 = OpExtInst %float %1 Floor %7555
       %7560 = OpFNegate %float %7559
       %7561 = OpExtInst %float %1 Fma %6678 %7554 %7560
       %7562 = OpExtInst %float %1 Fma %7561 %float_2097152 %7558
       %7563 = OpExtInst %float %1 Floor %7562
       %7564 = OpFMul %float %7559 %float_n6_28318548
       %7565 = OpExtInst %float %1 Fma %7555 %float_6_28318548 %7564
       %7566 = OpFMul %float %7563 %float_n6_28318548
       %7567 = OpExtInst %float %1 Fma %7558 %float_6_28318548 %7566
       %7568 = OpExtInst %float %1 Fma %7565 %float_2097152 %7567
       %7569 = OpFMul %float %7486 %2738
       %7570 = OpExtInst %float %1 Sin %7568
       %7571 = OpFMul %float %7570 %7569
       %7572 = OpFMul %float %7553 %4453
       %7573 = OpFDiv %float %float_2 %7572
       %7574 = OpFMul %float %6713 %7573
       %7575 = OpFMul %float %7573 %5017
       %7576 = OpFMul %float %7575 %5988
       %7577 = OpExtInst %float %1 Fma %6714 %7573 %7576
       %7578 = OpExtInst %float %1 Floor %7574
       %7579 = OpFNegate %float %7578
       %7580 = OpExtInst %float %1 Fma %6713 %7573 %7579
       %7581 = OpExtInst %float %1 Fma %7580 %float_2097152 %7577
       %7582 = OpExtInst %float %1 Floor %7581
       %7583 = OpFMul %float %7578 %float_n6_28318548
       %7584 = OpExtInst %float %1 Fma %7574 %float_6_28318548 %7583
       %7585 = OpFMul %float %7582 %float_n6_28318548
       %7586 = OpExtInst %float %1 Fma %7577 %float_6_28318548 %7585
       %7587 = OpExtInst %float %1 Fma %7584 %float_2097152 %7586
       %7588 = OpFMul %float %7569 %2599
       %7589 = OpExtInst %float %1 Sin %7587
       %7590 = OpFMul %float %7589 %7588
       %7591 = OpCompositeConstruct %v3float %551 %551 %7571
       %7592 = OpCompositeConstruct %v3float %551 %551 %7590
       %7593 = OpFAdd %v3float %7591 %7592
       %7594 = OpFMul %float %7572 %4453
       %7595 = OpFDiv %float %float_2 %7594
       %7596 = OpFMul %float %6749 %7595
       %7597 = OpFMul %float %7595 %5041
       %7598 = OpFMul %float %7597 %5988
       %7599 = OpExtInst %float %1 Fma %6750 %7595 %7598
       %7600 = OpExtInst %float %1 Floor %7596
       %7601 = OpFNegate %float %7600
       %7602 = OpExtInst %float %1 Fma %6749 %7595 %7601
       %7603 = OpExtInst %float %1 Fma %7602 %float_2097152 %7599
       %7604 = OpExtInst %float %1 Floor %7603
       %7605 = OpFMul %float %7600 %float_n6_28318548
       %7606 = OpExtInst %float %1 Fma %7596 %float_6_28318548 %7605
       %7607 = OpFMul %float %7604 %float_n6_28318548
       %7608 = OpExtInst %float %1 Fma %7599 %float_6_28318548 %7607
       %7609 = OpExtInst %float %1 Fma %7606 %float_2097152 %7608
       %7610 = OpFMul %float %7588 %2599
       %7611 = OpExtInst %float %1 Sin %7609
       %7612 = OpFMul %float %7611 %7610
       %7613 = OpCompositeConstruct %v3float %551 %551 %7612
       %7614 = OpFAdd %v3float %7593 %7613
       %7615 = OpFMul %float %7594 %4453
       %7616 = OpFDiv %float %float_2 %7615
       %7617 = OpFMul %float %6784 %7616
       %7618 = OpFMul %float %7616 %5064
       %7619 = OpFMul %float %7618 %5988
       %7620 = OpExtInst %float %1 Fma %6785 %7616 %7619
       %7621 = OpExtInst %float %1 Floor %7617
       %7622 = OpFNegate %float %7621
       %7623 = OpExtInst %float %1 Fma %6784 %7616 %7622
       %7624 = OpExtInst %float %1 Fma %7623 %float_2097152 %7620
       %7625 = OpExtInst %float %1 Floor %7624
       %7626 = OpFMul %float %7621 %float_n6_28318548
       %7627 = OpExtInst %float %1 Fma %7617 %float_6_28318548 %7626
       %7628 = OpFMul %float %7625 %float_n6_28318548
       %7629 = OpExtInst %float %1 Fma %7620 %float_6_28318548 %7628
       %7630 = OpExtInst %float %1 Fma %7627 %float_2097152 %7629
       %7631 = OpFMul %float %7610 %2599
       %7632 = OpExtInst %float %1 Sin %7630
       %7633 = OpFMul %float %7632 %7631
       %7634 = OpCompositeConstruct %v3float %551 %551 %7633
       %7635 = OpFAdd %v3float %7614 %7634
       %7636 = OpFAdd %v3float %7552 %7635
       %7637 = OpFMul %float %6851 %5505
       %7638 = OpFDiv %float %float_2 %7637
       %7639 = OpFMul %float %6848 %7638
       %7640 = OpFMul %float %7638 %4996
       %7641 = OpFMul %float %7640 %5988
       %7642 = OpExtInst %float %1 Fma %6849 %7638 %7641
       %7643 = OpExtInst %float %1 Floor %7639
       %7644 = OpFNegate %float %7643
       %7645 = OpExtInst %float %1 Fma %6848 %7638 %7644
       %7646 = OpExtInst %float %1 Fma %7645 %float_2097152 %7642
       %7647 = OpExtInst %float %1 Floor %7646
       %7648 = OpFMul %float %7643 %float_n6_28318548
       %7649 = OpExtInst %float %1 Fma %7639 %float_6_28318548 %7648
       %7650 = OpFMul %float %7647 %float_n6_28318548
       %7651 = OpExtInst %float %1 Fma %7642 %float_6_28318548 %7650
       %7652 = OpExtInst %float %1 Fma %7649 %float_2097152 %7651
       %7653 = OpExtInst %float %1 Sin %7652
       %7654 = OpFMul %float %7653 %7569
       %7655 = OpFMul %float %7637 %4453
       %7656 = OpFDiv %float %float_2 %7655
       %7657 = OpFMul %float %6882 %7656
       %7658 = OpFMul %float %7656 %5017
       %7659 = OpFMul %float %7658 %5988
       %7660 = OpExtInst %float %1 Fma %6883 %7656 %7659
       %7661 = OpExtInst %float %1 Floor %7657
       %7662 = OpFNegate %float %7661
       %7663 = OpExtInst %float %1 Fma %6882 %7656 %7662
       %7664 = OpExtInst %float %1 Fma %7663 %float_2097152 %7660
       %7665 = OpExtInst %float %1 Floor %7664
       %7666 = OpFMul %float %7661 %float_n6_28318548
       %7667 = OpExtInst %float %1 Fma %7657 %float_6_28318548 %7666
       %7668 = OpFMul %float %7665 %float_n6_28318548
       %7669 = OpExtInst %float %1 Fma %7660 %float_6_28318548 %7668
       %7670 = OpExtInst %float %1 Fma %7667 %float_2097152 %7669
       %7671 = OpExtInst %float %1 Sin %7670
       %7672 = OpFMul %float %7671 %7588
       %7673 = OpCompositeConstruct %v3float %551 %551 %7654
       %7674 = OpCompositeConstruct %v3float %551 %551 %7672
       %7675 = OpFAdd %v3float %7673 %7674
       %7676 = OpFMul %float %7655 %4453
       %7677 = OpFDiv %float %float_2 %7676
       %7678 = OpFMul %float %6917 %7677
       %7679 = OpFMul %float %7677 %5041
       %7680 = OpFMul %float %7679 %5988
       %7681 = OpExtInst %float %1 Fma %6918 %7677 %7680
       %7682 = OpExtInst %float %1 Floor %7678
       %7683 = OpFNegate %float %7682
       %7684 = OpExtInst %float %1 Fma %6917 %7677 %7683
       %7685 = OpExtInst %float %1 Fma %7684 %float_2097152 %7681
       %7686 = OpExtInst %float %1 Floor %7685
       %7687 = OpFMul %float %7682 %float_n6_28318548
       %7688 = OpExtInst %float %1 Fma %7678 %float_6_28318548 %7687
       %7689 = OpFMul %float %7686 %float_n6_28318548
       %7690 = OpExtInst %float %1 Fma %7681 %float_6_28318548 %7689
       %7691 = OpExtInst %float %1 Fma %7688 %float_2097152 %7690
       %7692 = OpExtInst %float %1 Sin %7691
       %7693 = OpFMul %float %7692 %7610
       %7694 = OpCompositeConstruct %v3float %551 %551 %7693
       %7695 = OpFAdd %v3float %7675 %7694
       %7696 = OpFMul %float %7676 %4453
       %7697 = OpFDiv %float %float_2 %7696
       %7698 = OpFMul %float %6951 %7697
       %7699 = OpFMul %float %7697 %5064
       %7700 = OpFMul %float %7699 %5988
       %7701 = OpExtInst %float %1 Fma %6952 %7697 %7700
       %7702 = OpExtInst %float %1 Floor %7698
       %7703 = OpFNegate %float %7702
       %7704 = OpExtInst %float %1 Fma %6951 %7697 %7703
       %7705 = OpExtInst %float %1 Fma %7704 %float_2097152 %7701
       %7706 = OpExtInst %float %1 Floor %7705
       %7707 = OpFMul %float %7702 %float_n6_28318548
       %7708 = OpExtInst %float %1 Fma %7698 %float_6_28318548 %7707
       %7709 = OpFMul %float %7706 %float_n6_28318548
       %7710 = OpExtInst %float %1 Fma %7701 %float_6_28318548 %7709
       %7711 = OpExtInst %float %1 Fma %7708 %float_2097152 %7710
       %7712 = OpExtInst %float %1 Sin %7711
       %7713 = OpFMul %float %7712 %7631
       %7714 = OpCompositeConstruct %v3float %551 %551 %7713
       %7715 = OpFAdd %v3float %7695 %7714
       %7716 = OpFAdd %v3float %7636 %7715
       %7717 = OpFAdd %v3float %7469 %7716
       %7718 = OpFAdd %v3float %7222 %7717
       %7719 = OpFAdd %v3float %6973 %7718
       %7720 = OpFAdd %v3float %5672 %7719
       %7721 = OpExtInst %v3float %1 Fma %3523 %3526 %7720
       %7722 = OpCompositeExtract %float %7721 2
       %7723 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_3
       %7724 = OpLoad %float %7723
       %7725 = OpFNegate %float %7724
       %7726 = OpExtInst %float %1 Fma %7722 %1730 %7725
       %7727 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_2
       %7728 = OpLoad %float %7727
       %7729 = OpFMul %float %7726 %7728
       %7730 = OpExtInst %float %1 FClamp %7729 %float_0 %float_1
       %7731 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_3
       %7732 = OpLoad %float %7731
       %7733 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_92 %int_0
       %7734 = OpLoad %float %7733
       %7735 = OpFNegate %float %7734
       %7736 = OpExtInst %float %1 Fma %7730 %7732 %7735
       %7737 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_92 %int_3
       %7738 = OpLoad %float %7737
       %7739 = OpFMul %float %7736 %7738
       %7740 = OpExtInst %float %1 FClamp %7739 %float_0 %float_1
       %7741 = OpCompositeConstruct %v3float %7722 %7722 %7722
       %7742 = OpExtInst %v3float %1 Fma %7741 %626 %646
       %7743 = OpDPdx %v3float %596
       %7744 = OpVectorTimesScalar %v3float %7743 %float_2097152
       %7745 = OpDPdx %v3float %7742
       %7746 = OpFAdd %v3float %7744 %7745
       %7747 = OpDPdy %v3float %596
       %7748 = OpVectorTimesScalar %v3float %7747 %float_2097152
       %7749 = OpDPdy %v3float %7742
       %7750 = OpFAdd %v3float %7748 %7749
       %7751 = OpExtInst %v3float %1 Cross %7746 %7750
       %7752 = OpExtInst %v3float %1 Normalize %7751
       %7753 = OpDPdx %v3float %596
       %7754 = OpVectorTimesScalar %v3float %7753 %float_2097152
       %7755 = OpDPdx %v3float %646
       %7756 = OpFAdd %v3float %7754 %7755
       %7757 = OpDPdy %v3float %596
       %7758 = OpVectorTimesScalar %v3float %7757 %float_2097152
       %7759 = OpDPdy %v3float %646
       %7760 = OpFAdd %v3float %7758 %7759
       %7761 = OpExtInst %v3float %1 Cross %7756 %7760
       %7762 = OpExtInst %v3float %1 Normalize %7761
       %7763 = OpFSub %v3float %7752 %7762
       %7764 = OpFAdd %v3float %7763 %626
       %7765 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_1
       %7766 = OpLoad %float %7765
       %7767 = OpCompositeConstruct %v3float %7766 %7766 %7766
       %7768 = OpExtInst %v3float %1 FMix %7764 %292 %7767
       %7769 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_2
       %7770 = OpLoad %float %7769
       %7771 = OpCompositeConstruct %v3float %7770 %7770 %7770
       %7772 = OpExtInst %v3float %1 Fma %7768 %7771 %647
       %7773 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_3
       %7774 = OpLoad %float %7773
       %7775 = OpCompositeConstruct %v3float %7774 %7774 %7774
       %7776 = OpFMul %v3float %596 %7775
       %7777 = OpFMul %v3float %7772 %7775
       %7778 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_1
       %7779 = OpLoad %float %7778
       %7780 = OpFMul %float %1166 %7779
       %7781 = OpCompositeConstruct %v2float %7780 %7780
       %7782 = OpFAdd %v2float %7781 %277
       %7783 = OpCompositeExtract %float %7776 0
       %7784 = OpCompositeExtract %float %7777 0
       %7785 = OpCompositeExtract %float %7776 1
       %7786 = OpCompositeExtract %float %7777 1
       %7787 = OpCompositeExtract %float %7782 0
       %7788 = OpCompositeConstruct %v3float %7783 %7785 %float_0
       %7789 = OpCompositeConstruct %v3float %7784 %7786 %7787
       %7790 = OpVectorTimesScalar %v3float %7789 %float_4_76837158en07
       %7791 = OpFAdd %v3float %7790 %138
       %7792 = OpFAdd %v3float %7788 %7791
       %7793 = OpExtInst %v3float %1 Floor %7792
       %7794 = OpFSub %v3float %7788 %7793
       %7795 = OpVectorTimesScalar %v3float %7794 %float_2097152
       %7796 = OpFAdd %v3float %7795 %7789
       %7797 = OpVectorTimesScalar %v3float %7796 %float_1
               OpBranch %7798
       %7798 = OpLabel
       %7799 = OpPhi %v3float %7797 %6294 %7800 %7801
       %7802 = OpPhi %float %float_1 %6294 %7803 %7801
       %7804 = OpPhi %float %float_0 %6294 %7805 %7801
       %7806 = OpPhi %uint %uint_0 %6294 %7807 %7801
       %7808 = OpULessThan %bool %7806 %uint_10
               OpLoopMerge %7809 %7801 DontUnroll
               OpBranchConditional %7808 %7801 %7809
       %7801 = OpLabel
       %7810 = OpExtInst %v3float %1 Fract %7799
       %7811 = OpExtInst %v3float %1 Floor %7799
       %7812 = OpDot %float %7811 %387
       %7813 = OpFAdd %float %7812 %float_19
       %7814 = OpFAdd %float %7812 %float_47
       %7815 = OpFAdd %float %7812 %float_66
       %7816 = OpFAdd %float %7812 %float_101
       %7817 = OpFAdd %float %7812 %float_120
       %7818 = OpFAdd %float %7812 %float_148
       %7819 = OpFAdd %float %7812 %float_167
       %7820 = OpConvertFToS %int %7812
       %7821 = OpCompositeConstruct %v3int %7820 %int_0 %int_0
       %7822 = OpBitcast %v3uint %7821
       %7823 = OpIMul %v3uint %7822 %403
       %7824 = OpIAdd %v3uint %7823 %405
       %7825 = OpCompositeExtract %uint %7824 1
       %7826 = OpCompositeExtract %uint %7824 2
       %7827 = OpIMul %uint %7825 %7826
       %7828 = OpCompositeExtract %uint %7824 0
       %7829 = OpIAdd %uint %7828 %7827
       %7830 = OpIMul %uint %7826 %7829
       %7831 = OpIAdd %uint %7825 %7830
       %7832 = OpIMul %uint %7829 %7831
       %7833 = OpIAdd %uint %7826 %7832
       %7834 = OpIMul %uint %7831 %7833
       %7835 = OpIAdd %uint %7829 %7834
       %7836 = OpCompositeInsert %v3uint %7835 %552 0
       %7837 = OpBitwiseAnd %v3uint %406 %407
       %7838 = OpShiftRightLogical %v3uint %7836 %7837
       %7839 = OpCompositeExtract %uint %7838 0
       %7840 = OpCompositeConstruct %v3uint %7839 %7839 %7839
       %7841 = OpBitwiseAnd %v3uint %7840 %388
       %7842 = OpConvertUToF %v3float %7841
       %7843 = OpExtInst %v3float %1 Fma %7842 %392 %280
       %7844 = OpDot %float %7843 %7810
       %7845 = OpConvertFToS %int %7813
       %7846 = OpFSub %v3float %7810 %352
       %7847 = OpCompositeConstruct %v3int %7845 %int_0 %int_0
       %7848 = OpBitcast %v3uint %7847
       %7849 = OpIMul %v3uint %7848 %403
       %7850 = OpIAdd %v3uint %7849 %405
       %7851 = OpCompositeExtract %uint %7850 1
       %7852 = OpCompositeExtract %uint %7850 2
       %7853 = OpIMul %uint %7851 %7852
       %7854 = OpCompositeExtract %uint %7850 0
       %7855 = OpIAdd %uint %7854 %7853
       %7856 = OpIMul %uint %7852 %7855
       %7857 = OpIAdd %uint %7851 %7856
       %7858 = OpIMul %uint %7855 %7857
       %7859 = OpIAdd %uint %7852 %7858
       %7860 = OpIMul %uint %7857 %7859
       %7861 = OpIAdd %uint %7855 %7860
       %7862 = OpCompositeInsert %v3uint %7861 %552 0
       %7863 = OpShiftRightLogical %v3uint %7862 %7837
       %7864 = OpCompositeExtract %uint %7863 0
       %7865 = OpCompositeConstruct %v3uint %7864 %7864 %7864
       %7866 = OpBitwiseAnd %v3uint %7865 %388
       %7867 = OpConvertUToF %v3float %7866
       %7868 = OpExtInst %v3float %1 Fma %7867 %392 %280
       %7869 = OpDot %float %7868 %7846
       %7870 = OpConvertFToS %int %7814
       %7871 = OpFSub %v3float %7810 %353
       %7872 = OpCompositeConstruct %v3int %7870 %int_0 %int_0
       %7873 = OpBitcast %v3uint %7872
       %7874 = OpIMul %v3uint %7873 %403
       %7875 = OpIAdd %v3uint %7874 %405
       %7876 = OpCompositeExtract %uint %7875 1
       %7877 = OpCompositeExtract %uint %7875 2
       %7878 = OpIMul %uint %7876 %7877
       %7879 = OpCompositeExtract %uint %7875 0
       %7880 = OpIAdd %uint %7879 %7878
       %7881 = OpIMul %uint %7877 %7880
       %7882 = OpIAdd %uint %7876 %7881
       %7883 = OpIMul %uint %7880 %7882
       %7884 = OpIAdd %uint %7877 %7883
       %7885 = OpIMul %uint %7882 %7884
       %7886 = OpIAdd %uint %7880 %7885
       %7887 = OpCompositeInsert %v3uint %7886 %552 0
       %7888 = OpShiftRightLogical %v3uint %7887 %7837
       %7889 = OpCompositeExtract %uint %7888 0
       %7890 = OpCompositeConstruct %v3uint %7889 %7889 %7889
       %7891 = OpBitwiseAnd %v3uint %7890 %388
       %7892 = OpConvertUToF %v3float %7891
       %7893 = OpExtInst %v3float %1 Fma %7892 %392 %280
       %7894 = OpDot %float %7893 %7871
       %7895 = OpConvertFToS %int %7815
       %7896 = OpFSub %v3float %7810 %135
       %7897 = OpCompositeConstruct %v3int %7895 %int_0 %int_0
       %7898 = OpBitcast %v3uint %7897
       %7899 = OpIMul %v3uint %7898 %403
       %7900 = OpIAdd %v3uint %7899 %405
       %7901 = OpCompositeExtract %uint %7900 1
       %7902 = OpCompositeExtract %uint %7900 2
       %7903 = OpIMul %uint %7901 %7902
       %7904 = OpCompositeExtract %uint %7900 0
       %7905 = OpIAdd %uint %7904 %7903
       %7906 = OpIMul %uint %7902 %7905
       %7907 = OpIAdd %uint %7901 %7906
       %7908 = OpIMul %uint %7905 %7907
       %7909 = OpIAdd %uint %7902 %7908
       %7910 = OpIMul %uint %7907 %7909
       %7911 = OpIAdd %uint %7905 %7910
       %7912 = OpCompositeInsert %v3uint %7911 %552 0
       %7913 = OpShiftRightLogical %v3uint %7912 %7837
       %7914 = OpCompositeExtract %uint %7913 0
       %7915 = OpCompositeConstruct %v3uint %7914 %7914 %7914
       %7916 = OpBitwiseAnd %v3uint %7915 %388
       %7917 = OpConvertUToF %v3float %7916
       %7918 = OpExtInst %v3float %1 Fma %7917 %392 %280
       %7919 = OpDot %float %7918 %7896
       %7920 = OpConvertFToS %int %7816
       %7921 = OpFSub %v3float %7810 %292
       %7922 = OpCompositeConstruct %v3int %7920 %int_0 %int_0
       %7923 = OpBitcast %v3uint %7922
       %7924 = OpIMul %v3uint %7923 %403
       %7925 = OpIAdd %v3uint %7924 %405
       %7926 = OpCompositeExtract %uint %7925 1
       %7927 = OpCompositeExtract %uint %7925 2
       %7928 = OpIMul %uint %7926 %7927
       %7929 = OpCompositeExtract %uint %7925 0
       %7930 = OpIAdd %uint %7929 %7928
       %7931 = OpIMul %uint %7927 %7930
       %7932 = OpIAdd %uint %7926 %7931
       %7933 = OpIMul %uint %7930 %7932
       %7934 = OpIAdd %uint %7927 %7933
       %7935 = OpIMul %uint %7932 %7934
       %7936 = OpIAdd %uint %7930 %7935
       %7937 = OpCompositeInsert %v3uint %7936 %552 0
       %7938 = OpShiftRightLogical %v3uint %7937 %7837
       %7939 = OpCompositeExtract %uint %7938 0
       %7940 = OpCompositeConstruct %v3uint %7939 %7939 %7939
       %7941 = OpBitwiseAnd %v3uint %7940 %388
       %7942 = OpConvertUToF %v3float %7941
       %7943 = OpExtInst %v3float %1 Fma %7942 %392 %280
       %7944 = OpDot %float %7943 %7921
       %7945 = OpConvertFToS %int %7817
       %7946 = OpFSub %v3float %7810 %141
       %7947 = OpCompositeConstruct %v3int %7945 %int_0 %int_0
       %7948 = OpBitcast %v3uint %7947
       %7949 = OpIMul %v3uint %7948 %403
       %7950 = OpIAdd %v3uint %7949 %405
       %7951 = OpCompositeExtract %uint %7950 1
       %7952 = OpCompositeExtract %uint %7950 2
       %7953 = OpIMul %uint %7951 %7952
       %7954 = OpCompositeExtract %uint %7950 0
       %7955 = OpIAdd %uint %7954 %7953
       %7956 = OpIMul %uint %7952 %7955
       %7957 = OpIAdd %uint %7951 %7956
       %7958 = OpIMul %uint %7955 %7957
       %7959 = OpIAdd %uint %7952 %7958
       %7960 = OpIMul %uint %7957 %7959
       %7961 = OpIAdd %uint %7955 %7960
       %7962 = OpCompositeInsert %v3uint %7961 %552 0
       %7963 = OpShiftRightLogical %v3uint %7962 %7837
       %7964 = OpCompositeExtract %uint %7963 0
       %7965 = OpCompositeConstruct %v3uint %7964 %7964 %7964
       %7966 = OpBitwiseAnd %v3uint %7965 %388
       %7967 = OpConvertUToF %v3float %7966
       %7968 = OpExtInst %v3float %1 Fma %7967 %392 %280
       %7969 = OpDot %float %7968 %7946
       %7970 = OpConvertFToS %int %7818
       %7971 = OpFSub %v3float %7810 %136
       %7972 = OpCompositeConstruct %v3int %7970 %int_0 %int_0
       %7973 = OpBitcast %v3uint %7972
       %7974 = OpIMul %v3uint %7973 %403
       %7975 = OpIAdd %v3uint %7974 %405
       %7976 = OpCompositeExtract %uint %7975 1
       %7977 = OpCompositeExtract %uint %7975 2
       %7978 = OpIMul %uint %7976 %7977
       %7979 = OpCompositeExtract %uint %7975 0
       %7980 = OpIAdd %uint %7979 %7978
       %7981 = OpIMul %uint %7977 %7980
       %7982 = OpIAdd %uint %7976 %7981
       %7983 = OpIMul %uint %7980 %7982
       %7984 = OpIAdd %uint %7977 %7983
       %7985 = OpIMul %uint %7982 %7984
       %7986 = OpIAdd %uint %7980 %7985
       %7987 = OpCompositeInsert %v3uint %7986 %552 0
       %7988 = OpShiftRightLogical %v3uint %7987 %7837
       %7989 = OpCompositeExtract %uint %7988 0
       %7990 = OpCompositeConstruct %v3uint %7989 %7989 %7989
       %7991 = OpBitwiseAnd %v3uint %7990 %388
       %7992 = OpConvertUToF %v3float %7991
       %7993 = OpExtInst %v3float %1 Fma %7992 %392 %280
       %7994 = OpDot %float %7993 %7971
       %7995 = OpConvertFToS %int %7819
       %7996 = OpFSub %v3float %7810 %128
       %7997 = OpCompositeConstruct %v3int %7995 %int_0 %int_0
       %7998 = OpBitcast %v3uint %7997
       %7999 = OpIMul %v3uint %7998 %403
       %8000 = OpIAdd %v3uint %7999 %405
       %8001 = OpCompositeExtract %uint %8000 1
       %8002 = OpCompositeExtract %uint %8000 2
       %8003 = OpIMul %uint %8001 %8002
       %8004 = OpCompositeExtract %uint %8000 0
       %8005 = OpIAdd %uint %8004 %8003
       %8006 = OpIMul %uint %8002 %8005
       %8007 = OpIAdd %uint %8001 %8006
       %8008 = OpIMul %uint %8005 %8007
       %8009 = OpIAdd %uint %8002 %8008
       %8010 = OpIMul %uint %8007 %8009
       %8011 = OpIAdd %uint %8005 %8010
       %8012 = OpCompositeInsert %v3uint %8011 %552 0
       %8013 = OpShiftRightLogical %v3uint %8012 %7837
       %8014 = OpCompositeExtract %uint %8013 0
       %8015 = OpCompositeConstruct %v3uint %8014 %8014 %8014
       %8016 = OpBitwiseAnd %v3uint %8015 %388
       %8017 = OpConvertUToF %v3float %8016
       %8018 = OpExtInst %v3float %1 Fma %8017 %392 %280
       %8019 = OpDot %float %8018 %7996
       %8020 = OpCompositeExtract %float %7810 0
       %8021 = OpCompositeExtract %float %7810 1
       %8022 = OpCompositeExtract %float %7810 2
       %8023 = OpCompositeConstruct %v4float %8020 %8021 %8022 %float_0
       %8024 = OpFMul %v4float %8023 %8023
       %8025 = OpFMul %v4float %8024 %8023
       %8026 = OpVectorTimesScalar %v4float %8023 %float_6
       %8027 = OpFSub %v4float %8026 %383
       %8028 = OpExtInst %v4float %1 Fma %8023 %8027 %384
       %8029 = OpFMul %v4float %8025 %8028
       %8030 = OpCompositeExtract %float %8029 0
       %8031 = OpExtInst %float %1 FMix %7844 %7869 %8030
       %8032 = OpExtInst %float %1 FMix %7894 %7919 %8030
       %8033 = OpCompositeExtract %float %8029 1
       %8034 = OpExtInst %float %1 FMix %8031 %8032 %8033
       %8035 = OpExtInst %float %1 FMix %7944 %7969 %8030
       %8036 = OpExtInst %float %1 FMix %7994 %8019 %8030
       %8037 = OpExtInst %float %1 FMix %8035 %8036 %8033
       %8038 = OpCompositeExtract %float %8029 2
       %8039 = OpExtInst %float %1 FMix %8034 %8037 %8038
       %8040 = OpExtInst %float %1 FAbs %8039
       %7805 = OpExtInst %float %1 Fma %8040 %7802 %7804
       %7800 = OpVectorTimesScalar %v3float %7799 %float_2
       %7803 = OpFMul %float %7802 %float_0_5
       %7807 = OpIAdd %uint %7806 %uint_1
               OpBranch %7798
       %7809 = OpLabel
       %8041 = OpExtInst %float %1 FMix %float_0 %float_1 %7804
       %8042 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_2
       %8043 = OpLoad %float %8042
       %8044 = OpFNegate %float %7740
       %8045 = OpExtInst %float %1 Fma %8044 %8043 %8041
       %8046 = OpExtInst %float %1 Fma %7740 %8043 %float_1
       %8047 = OpExtInst %float %1 Fma %8044 %8043 %8046
       %8048 = OpFDiv %float %8045 %8047
       %8049 = OpExtInst %float %1 Fma %8048 %float_n1 %float_1
       %8050 = OpExtInst %float %1 FClamp %8049 %float_0 %float_1
       %8051 = OpFOrdLessThanEqual %bool %8050 %float_0
       %8052 = OpExtInst %float %1 Pow %8050 %float_2
       %8053 = OpSelect %float %8051 %float_0 %8052
       %8054 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_0
       %8055 = OpLoad %float %8054
       %8056 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_3
       %8057 = OpLoad %float %8056
       %8058 = OpExtInst %float %1 FMix %8055 %8057 %8053
       %8059 = OpExtInst %float %1 FClamp %8058 %float_0 %float_1
       %8060 = OpFMul %float %7740 %8059
       %8061 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_1
       %8062 = OpLoad %float %8061
       %8063 = OpCompositeConstruct %v3float %8062 %8062 %8062
       %8064 = OpFMul %v3float %596 %8063
       %8065 = OpFMul %v3float %647 %8063
       %8066 = OpVectorTimesScalar %v3float %8065 %float_4_76837158en07
       %8067 = OpFAdd %v3float %8066 %138
       %8068 = OpExtInst %v3float %1 Fma %596 %8063 %8067
       %8069 = OpExtInst %v3float %1 Floor %8068
       %8070 = OpFNegate %v3float %8069
       %8071 = OpExtInst %v3float %1 Fma %596 %8063 %8070
       %8072 = OpVectorTimesScalar %v3float %8071 %float_2097152
       %8073 = OpExtInst %v3float %1 Fma %647 %8063 %8072
       %8074 = OpVectorTimesScalar %v3float %8073 %float_1
               OpBranch %8075
       %8075 = OpLabel
       %8076 = OpPhi %v3float %543 %7809 %8077 %8078
       %8079 = OpPhi %v3float %8074 %7809 %8080 %8078
       %8081 = OpPhi %float %float_1 %7809 %8082 %8078
       %8083 = OpPhi %float %float_0 %7809 %8084 %8078
       %8085 = OpPhi %uint %uint_0 %7809 %8086 %8078
       %8087 = OpULessThan %bool %8085 %uint_1
               OpLoopMerge %8088 %8078 DontUnroll
               OpBranchConditional %8087 %8089 %8088
       %8089 = OpLabel
       %8090 = OpExtInst %v3float %1 Fract %8079
       %8091 = OpExtInst %v3float %1 Floor %8079
       %8092 = OpCompositeInsert %v3float %float_0 %8076 0
               OpBranch %8093
       %8093 = OpLabel
       %8094 = OpPhi %v4float %354 %8089 %8095 %8096
       %8077 = OpPhi %v3float %8092 %8089 %8097 %8096
       %8098 = OpCompositeExtract %float %8077 0
       %8099 = OpFOrdLessThanEqual %bool %8098 %float_1
               OpLoopMerge %8100 %8096 None
               OpBranchConditional %8099 %8101 %8100
       %8101 = OpLabel
       %8102 = OpCompositeInsert %v3float %float_0 %8077 1
               OpBranch %8103
       %8103 = OpLabel
       %8104 = OpPhi %v3float %8102 %8101 %8105 %8106
       %8095 = OpPhi %v4float %8094 %8101 %8107 %8106
       %8108 = OpCompositeExtract %float %8104 1
       %8109 = OpFOrdLessThanEqual %bool %8108 %float_1
               OpLoopMerge %8110 %8106 None
               OpBranchConditional %8109 %8111 %8110
       %8111 = OpLabel
       %8112 = OpCompositeInsert %v3float %float_0 %8104 2
               OpBranch %8113
       %8113 = OpLabel
       %8107 = OpPhi %v4float %8095 %8111 %8114 %8115
       %8116 = OpPhi %v3float %8112 %8111 %8117 %8115
       %8118 = OpCompositeExtract %float %8116 2
       %8119 = OpFOrdLessThanEqual %bool %8118 %float_1
               OpLoopMerge %8120 %8115 None
               OpBranchConditional %8119 %8115 %8120
       %8115 = OpLabel
       %8121 = OpFAdd %v3float %8091 %8116
       %8122 = OpVectorShuffle %v3float %540 %8121 3 4 5
       %8123 = OpConvertFToS %v3int %8122
       %8124 = OpBitcast %v3uint %8123
       %8125 = OpIMul %v3uint %8124 %403
       %8126 = OpIAdd %v3uint %8125 %405
       %8127 = OpCompositeExtract %uint %8126 1
       %8128 = OpCompositeExtract %uint %8126 2
       %8129 = OpIMul %uint %8127 %8128
       %8130 = OpCompositeExtract %uint %8126 0
       %8131 = OpIAdd %uint %8130 %8129
       %8132 = OpIMul %uint %8128 %8131
       %8133 = OpIAdd %uint %8127 %8132
       %8134 = OpIMul %uint %8131 %8133
       %8135 = OpIAdd %uint %8128 %8134
       %8136 = OpIMul %uint %8133 %8135
       %8137 = OpIAdd %uint %8131 %8136
       %8138 = OpCompositeInsert %v3uint %8137 %8126 0
       %8139 = OpIMul %uint %8135 %8137
       %8140 = OpIAdd %uint %8133 %8139
       %8141 = OpCompositeInsert %v3uint %8140 %8138 1
       %8142 = OpIMul %uint %8137 %8140
       %8143 = OpIAdd %uint %8135 %8142
       %8144 = OpCompositeInsert %v3uint %8143 %8141 2
       %8145 = OpBitwiseAnd %v3uint %406 %407
       %8146 = OpShiftRightLogical %v3uint %8144 %8145
       %8147 = OpConvertUToF %v3float %8146
       %8148 = OpExtInst %v3float %1 Fma %8147 %524 %513
       %8149 = OpExtInst %v3float %1 Normalize %8148
       %8150 = OpVectorTimesScalar %v3float %8149 %float_0_2588
       %8151 = OpFAdd %v3float %8116 %8150
       %8152 = OpFSub %v3float %8090 %8151
       %8153 = OpCompositeExtract %float %8107 3
       %8154 = OpDot %float %8152 %8152
       %8155 = OpExtInst %float %1 NMin %8153 %8154
       %8114 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %8155
       %8156 = OpFAdd %float %8118 %float_1
       %8117 = OpCompositeInsert %v3float %8156 %8116 2
               OpBranch %8113
       %8120 = OpLabel
               OpBranch %8106
       %8106 = OpLabel
       %8157 = OpCompositeExtract %float %8116 1
       %8158 = OpFAdd %float %8157 %float_1
       %8105 = OpCompositeInsert %v3float %8158 %8116 1
               OpBranch %8103
       %8110 = OpLabel
               OpBranch %8096
       %8096 = OpLabel
       %8159 = OpCompositeExtract %float %8104 0
       %8160 = OpFAdd %float %8159 %float_1
       %8097 = OpCompositeInsert %v3float %8160 %8104 0
               OpBranch %8093
       %8100 = OpLabel
       %8161 = OpCompositeExtract %float %8094 3
       %8162 = OpExtInst %float %1 Sqrt %8161
       %8163 = OpExtInst %float %1 Fma %8162 %float_2 %float_n1
       %8164 = OpExtInst %float %1 FAbs %8163
       %8084 = OpExtInst %float %1 Fma %8164 %8081 %8083
       %8080 = OpVectorTimesScalar %v3float %8079 %float_2
       %8082 = OpFMul %float %8081 %float_0_5
               OpBranch %8078
       %8078 = OpLabel
       %8086 = OpIAdd %uint %8085 %uint_1
               OpBranch %8075
       %8088 = OpLabel
       %8165 = OpExtInst %float %1 FMix %float_n1 %float_1 %8083
       %8166 = OpExtInst %float %1 FClamp %8165 %float_0 %float_1
       %8167 = OpFMul %v3float %8065 %279
       %8168 = OpVectorTimesScalar %v3float %8167 %float_4_76837158en07
       %8169 = OpFAdd %v3float %8168 %138
       %8170 = OpExtInst %v3float %1 Fma %8064 %279 %8169
       %8171 = OpExtInst %v3float %1 Floor %8170
       %8172 = OpFNegate %v3float %8171
       %8173 = OpExtInst %v3float %1 Fma %8064 %279 %8172
       %8174 = OpVectorTimesScalar %v3float %8173 %float_2097152
       %8175 = OpExtInst %v3float %1 Fma %8065 %279 %8174
       %8176 = OpVectorTimesScalar %v3float %8175 %float_1
               OpBranch %8177
       %8177 = OpLabel
       %8178 = OpPhi %v3float %543 %8088 %8179 %8180
       %8181 = OpPhi %v3float %8176 %8088 %8182 %8180
       %8183 = OpPhi %float %float_1 %8088 %8184 %8180
       %8185 = OpPhi %float %float_0 %8088 %8186 %8180
       %8187 = OpPhi %uint %uint_0 %8088 %8188 %8180
       %8189 = OpULessThan %bool %8187 %uint_1
               OpLoopMerge %8190 %8180 DontUnroll
               OpBranchConditional %8189 %8191 %8190
       %8191 = OpLabel
       %8192 = OpExtInst %v3float %1 Fract %8181
       %8193 = OpExtInst %v3float %1 Floor %8181
       %8194 = OpCompositeInsert %v3float %float_0 %8178 0
               OpBranch %8195
       %8195 = OpLabel
       %8196 = OpPhi %v4float %354 %8191 %8197 %8198
       %8179 = OpPhi %v3float %8194 %8191 %8199 %8198
       %8200 = OpCompositeExtract %float %8179 0
       %8201 = OpFOrdLessThanEqual %bool %8200 %float_1
               OpLoopMerge %8202 %8198 None
               OpBranchConditional %8201 %8203 %8202
       %8203 = OpLabel
       %8204 = OpCompositeInsert %v3float %float_0 %8179 1
               OpBranch %8205
       %8205 = OpLabel
       %8206 = OpPhi %v3float %8204 %8203 %8207 %8208
       %8197 = OpPhi %v4float %8196 %8203 %8209 %8208
       %8210 = OpCompositeExtract %float %8206 1
       %8211 = OpFOrdLessThanEqual %bool %8210 %float_1
               OpLoopMerge %8212 %8208 None
               OpBranchConditional %8211 %8213 %8212
       %8213 = OpLabel
       %8214 = OpCompositeInsert %v3float %float_0 %8206 2
               OpBranch %8215
       %8215 = OpLabel
       %8209 = OpPhi %v4float %8197 %8213 %8216 %8217
       %8218 = OpPhi %v3float %8214 %8213 %8219 %8217
       %8220 = OpCompositeExtract %float %8218 2
       %8221 = OpFOrdLessThanEqual %bool %8220 %float_1
               OpLoopMerge %8222 %8217 None
               OpBranchConditional %8221 %8217 %8222
       %8217 = OpLabel
       %8223 = OpFAdd %v3float %8193 %8218
       %8224 = OpVectorShuffle %v3float %540 %8223 3 4 5
       %8225 = OpConvertFToS %v3int %8224
       %8226 = OpBitcast %v3uint %8225
       %8227 = OpIMul %v3uint %8226 %403
       %8228 = OpIAdd %v3uint %8227 %405
       %8229 = OpCompositeExtract %uint %8228 1
       %8230 = OpCompositeExtract %uint %8228 2
       %8231 = OpIMul %uint %8229 %8230
       %8232 = OpCompositeExtract %uint %8228 0
       %8233 = OpIAdd %uint %8232 %8231
       %8234 = OpIMul %uint %8230 %8233
       %8235 = OpIAdd %uint %8229 %8234
       %8236 = OpIMul %uint %8233 %8235
       %8237 = OpIAdd %uint %8230 %8236
       %8238 = OpIMul %uint %8235 %8237
       %8239 = OpIAdd %uint %8233 %8238
       %8240 = OpCompositeInsert %v3uint %8239 %8228 0
       %8241 = OpIMul %uint %8237 %8239
       %8242 = OpIAdd %uint %8235 %8241
       %8243 = OpCompositeInsert %v3uint %8242 %8240 1
       %8244 = OpIMul %uint %8239 %8242
       %8245 = OpIAdd %uint %8237 %8244
       %8246 = OpCompositeInsert %v3uint %8245 %8243 2
       %8247 = OpBitwiseAnd %v3uint %406 %407
       %8248 = OpShiftRightLogical %v3uint %8246 %8247
       %8249 = OpConvertUToF %v3float %8248
       %8250 = OpExtInst %v3float %1 Fma %8249 %524 %513
       %8251 = OpExtInst %v3float %1 Normalize %8250
       %8252 = OpVectorTimesScalar %v3float %8251 %float_0_2588
       %8253 = OpFAdd %v3float %8218 %8252
       %8254 = OpFSub %v3float %8192 %8253
       %8255 = OpCompositeExtract %float %8209 3
       %8256 = OpDot %float %8254 %8254
       %8257 = OpExtInst %float %1 NMin %8255 %8256
       %8216 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %8257
       %8258 = OpFAdd %float %8220 %float_1
       %8219 = OpCompositeInsert %v3float %8258 %8218 2
               OpBranch %8215
       %8222 = OpLabel
               OpBranch %8208
       %8208 = OpLabel
       %8259 = OpCompositeExtract %float %8218 1
       %8260 = OpFAdd %float %8259 %float_1
       %8207 = OpCompositeInsert %v3float %8260 %8218 1
               OpBranch %8205
       %8212 = OpLabel
               OpBranch %8198
       %8198 = OpLabel
       %8261 = OpCompositeExtract %float %8206 0
       %8262 = OpFAdd %float %8261 %float_1
       %8199 = OpCompositeInsert %v3float %8262 %8206 0
               OpBranch %8195
       %8202 = OpLabel
       %8263 = OpCompositeExtract %float %8196 3
       %8264 = OpExtInst %float %1 Sqrt %8263
       %8265 = OpExtInst %float %1 Fma %8264 %float_2 %float_n1
       %8266 = OpExtInst %float %1 FAbs %8265
       %8186 = OpExtInst %float %1 Fma %8266 %8183 %8185
       %8182 = OpVectorTimesScalar %v3float %8181 %float_2
       %8184 = OpFMul %float %8183 %float_0_5
               OpBranch %8180
       %8180 = OpLabel
       %8188 = OpIAdd %uint %8187 %uint_1
               OpBranch %8177
       %8190 = OpLabel
       %8267 = OpExtInst %float %1 FMix %float_n1 %float_1 %8185
       %8268 = OpExtInst %float %1 FClamp %8267 %float_0 %float_1
       %8269 = OpFAdd %float %8166 %8268
       %8270 = OpFNegate %float %8269
       %8271 = OpExtInst %float %1 Fma %7740 %8059 %8270
       %8272 = OpExtInst %float %1 Fma %1660 %1662 %8271
       %8273 = OpFMul %float %779 %8272
       %8274 = OpExtInst %float %1 FClamp %8273 %float_0 %float_1
       %8275 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_3
       %8276 = OpLoad %float %8275
       %8277 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_2
       %8278 = OpLoad %float %8277
       %8279 = OpExtInst %float %1 FMix %8276 %8278 %8274
       %8280 = OpCompositeExtract %float %3523 2
       %8281 = OpCompositeConstruct %v3float %8280 %8280 %8280
       %8282 = OpExtInst %v3float %1 Fma %8281 %626 %646
       %8283 = OpDPdx %v3float %596
       %8284 = OpVectorTimesScalar %v3float %8283 %float_2097152
       %8285 = OpDPdx %v3float %8282
       %8286 = OpFAdd %v3float %8284 %8285
       %8287 = OpDPdy %v3float %596
       %8288 = OpVectorTimesScalar %v3float %8287 %float_2097152
       %8289 = OpDPdy %v3float %8282
       %8290 = OpFAdd %v3float %8288 %8289
       %8291 = OpExtInst %v3float %1 Cross %8286 %8290
       %8292 = OpExtInst %v3float %1 Normalize %8291
       %8293 = OpFSub %v3float %8292 %7762
       %8294 = OpFAdd %v3float %8293 %626
       %8295 = OpDot %float %7768 %663
       %8296 = OpExtInst %float %1 NMax %float_0 %8295
       %8297 = OpFSub %float %float_1 %8296
       %8298 = OpExtInst %float %1 FAbs %8297
       %8299 = OpExtInst %float %1 NMax %8298 %float_9_99999975en05
       %8300 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_0
       %8301 = OpLoad %float %8300
       %8302 = OpFOrdLessThanEqual %bool %8299 %float_0
       %8303 = OpExtInst %float %1 Pow %8299 %8301
       %8304 = OpSelect %float %8302 %float_0 %8303
       %8305 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_2
       %8306 = OpLoad %float %8305
       %8307 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_1
       %8308 = OpLoad %float %8307
       %8309 = OpExtInst %float %1 Fma %8304 %8306 %8308
       %8310 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_97 %int_0
       %8311 = OpLoad %float %8310
       %8312 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_3
       %8313 = OpLoad %float %8312
       %8314 = OpExtInst %float %1 FMix %8311 %8313 %8309
       %8315 = OpCompositeConstruct %v3float %8314 %8314 %8314
       %8316 = OpExtInst %v3float %1 FMix %7768 %292 %8315
       %8317 = OpCompositeConstruct %v3float %778 %778 %778
       %8318 = OpExtInst %v3float %1 FMix %8294 %8316 %8317
       %8319 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_97 %int_1
       %8320 = OpLoad %float %8319
       %8321 = OpExtInst %float %1 FMix %8320 %float_0 %778
       %8322 = OpCompositeConstruct %v3float %8321 %8321 %8321
       %8323 = OpExtInst %v3float %1 FMix %8318 %292 %8322
       %8324 = OpExtInst %float %1 Fma %1449 %1658 %1449
       %8325 = OpExtInst %float %1 Fma %8060 %8269 %8060
       %8326 = OpFAdd %float %8324 %8325
       %8327 = OpFMul %float %779 %8326
       %8328 = OpCompositeConstruct %v3float %8327 %8327 %8327
       %8329 = OpExtInst %v3float %1 Fma %8328 %626 %646
       %8330 = OpDPdx %v3float %596
       %8331 = OpVectorTimesScalar %v3float %8330 %float_2097152
       %8332 = OpDPdx %v3float %8329
       %8333 = OpFAdd %v3float %8331 %8332
       %8334 = OpDPdy %v3float %596
       %8335 = OpVectorTimesScalar %v3float %8334 %float_2097152
       %8336 = OpDPdy %v3float %8329
       %8337 = OpFAdd %v3float %8335 %8336
       %8338 = OpExtInst %v3float %1 Cross %8333 %8337
       %8339 = OpExtInst %v3float %1 Normalize %8338
       %8340 = OpFSub %v3float %8339 %7762
       %8341 = OpFAdd %v3float %8340 %626
       %8342 = OpCompositeConstruct %v3float %1449 %1449 %1449
       %8343 = OpExtInst %v3float %1 FMix %8323 %8341 %8342
       %8344 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_97 %int_2
       %8345 = OpLoad %float %8344
       %8346 = OpExtInst %float %1 FMix %8345 %float_1 %8274
       %8347 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_1
       %8348 = OpLoad %float %8347
       %8349 = OpExtInst %float %1 Pow %8299 %8348
       %8350 = OpSelect %float %8302 %float_0 %8349
       %8351 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_3
       %8352 = OpLoad %float %8351
       %8353 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_2
       %8354 = OpLoad %float %8353
       %8355 = OpExtInst %float %1 Fma %8350 %8352 %8354
       %8356 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_0
       %8357 = OpLoad %float %8356
       %8358 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_103 %int_3
       %8359 = OpLoad %float %8358
       %8360 = OpExtInst %float %1 FMix %8357 %8359 %8355
       %8361 = OpExtInst %float %1 FMix %8360 %float_1 %8274
       %8362 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_1
       %8363 = OpLoad %float %8362
       %8364 = OpExtInst %float %1 FMix %float_0 %8363 %8274
       %8365 = OpCompositeConstruct %v3float %8364 %8364 %8364
       %8366 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_107
       %8367 = OpLoad %v4float %8366
       %8368 = OpVectorShuffle %v3float %8367 %8367 0 1 2
       %8369 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_106
       %8370 = OpLoad %v4float %8369
       %8371 = OpVectorShuffle %v3float %8370 %8370 0 1 2
       %8372 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_2
       %8373 = OpLoad %float %8372
       %8374 = OpCompositeConstruct %v3float %8373 %8373 %8373
       %8375 = OpFAdd %v3float %8368 %8371
       %8376 = OpFDiv %v3float %8368 %8375
       %8377 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_107 %int_3
       %8378 = OpLoad %float %8377
       %8379 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_108 %int_0
       %8380 = OpLoad %float %8379
       %8381 = OpFSub %float %701 %float_0_333299994
       %8382 = OpFOrdLessThan %bool %8381 %float_0
               OpSelectionMerge %8383 None
               OpBranchConditional %8382 %8384 %8383
       %8384 = OpLabel
               OpKill
       %8383 = OpLabel
       %8385 = OpAccessChain %_ptr_Uniform_uint %View %uint_20
       %8386 = OpLoad %uint %8385
       %8387 = OpConvertUToF %float %8386
       %8388 = OpVectorTimesScalar %v2float %466 %8387
       %8389 = OpFAdd %v2float %627 %8388
       %8390 = OpDot %float %8389 %467
       %8391 = OpExtInst %float %1 Fract %8390
       %8392 = OpFMul %float %float_52_9829178 %8391
       %8393 = OpExtInst %float %1 Fract %8392
       %8394 = OpIMul %uint %584 %uint_41
       %8395 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %8394
       %8396 = OpLoad %v4float %8395
       %8397 = OpCompositeExtract %float %8396 0
       %8398 = OpBitcast %uint %8397
       %8399 = OpBitwiseAnd %uint %8398 %uint_512
       %8400 = OpINotEqual %bool %8399 %uint_0
       %8401 = OpSelect %uint %8400 %uint_32 %uint_0
       %8402 = OpBitwiseOr %uint %uint_1 %8401
       %8403 = OpLoad %v4float %8395
       %8404 = OpCompositeExtract %float %8403 0
       %8405 = OpBitcast %uint %8404
       %8406 = OpBitwiseAnd %uint %8405 %uint_256
       %8407 = OpINotEqual %bool %8406 %uint_0
       %8408 = OpSelect %uint %8407 %uint_64 %uint_0
       %8409 = OpBitwiseOr %uint %8402 %8408
       %8410 = OpBitwiseAnd %uint %8409 %uint_4294967288
       %8411 = OpBitwiseOr %uint %8410 %uint_4
       %8412 = OpVectorShuffle %v3float %8365 %459 0 1 2
       %8413 = OpExtInst %v3float %1 FClamp %8412 %103 %128
       %8414 = OpVectorShuffle %v3float %614 %614 3 3 3
       %8415 = OpVectorShuffle %v3float %614 %614 0 1 2
       %8416 = OpExtInst %v3float %1 Fma %8413 %8414 %8415
       %8417 = OpExtInst %float %1 FClamp %8361 %float_0 %float_1
       %8418 = OpCompositeExtract %float %616 3
       %8419 = OpCompositeExtract %float %616 0
       %8420 = OpExtInst %float %1 Fma %8417 %8418 %8419
       %8421 = OpCompositeInsert %v4float %8420 %545 1
       %8422 = OpCompositeExtract %float %618 1
       %8423 = OpCompositeExtract %float %618 0
       %8424 = OpExtInst %float %1 Fma %8279 %8422 %8423
       %8425 = OpAccessChain %_ptr_Uniform_float %View %uint_41
       %8426 = OpLoad %float %8425
       %8427 = OpExtInst %float %1 NMax %8426 %8424
       %8428 = OpExtInst %float %1 FClamp %8427 %float_0 %float_1
       %8429 = OpCompositeInsert %v4float %8428 %8421 2
       %8430 = OpExtInst %float %1 FClamp %8346 %float_0 %float_1
       %8431 = OpCompositeInsert %v4float %8430 %8429 3
       %8432 = OpVectorShuffle %v3float %8376 %459 0 1 2
       %8433 = OpExtInst %v3float %1 FClamp %8432 %103 %128
       %8434 = OpVectorShuffle %v4float %459 %8433 4 5 6 3
       %8435 = OpVectorShuffle %v3float %8375 %459 0 1 2
       %8436 = OpExtInst %v3float %1 FClamp %8435 %103 %164
       %8437 = OpCompositeInsert %v4float %float_0 %8434 3
       %8438 = OpVectorShuffle %v3float %8374 %459 0 1 2
       %8439 = OpExtInst %v3float %1 FClamp %8438 %103 %164
       %8440 = OpVectorShuffle %v3float %8416 %459 0 1 2
       %8441 = OpExtInst %v3float %1 Normalize %8343
       %8442 = OpDot %float %8441 %8441
       %8443 = OpBitcast %uint %8442
       %8444 = OpBitwiseAnd %uint %8443 %uint_2139095040
       %8445 = OpINotEqual %bool %8444 %uint_2139095040
       %8446 = OpLogicalNot %bool %8445
               OpSelectionMerge %8447 DontFlatten
               OpBranchConditional %8446 %8448 %8447
       %8448 = OpLabel
       %8449 = OpExtInst %v3float %1 Normalize %626
               OpBranch %8447
       %8447 = OpLabel
       %8450 = OpPhi %v3float %8343 %8383 %8449 %8448
       %8451 = OpPhi %v3float %8441 %8383 %8449 %8448
       %8452 = OpFSub %float %float_1 %8430
       %8453 = OpLoad %v4float %8395
       %8454 = OpCompositeExtract %float %8453 0
       %8455 = OpBitcast %uint %8454
       %8456 = OpBitwiseAnd %uint %8455 %uint_2
       %8457 = OpINotEqual %bool %8456 %uint_0
       %8458 = OpAccessChain %_ptr_Uniform_float %View %uint_40
       %8459 = OpLoad %float %8458
       %8460 = OpFOrdGreaterThan %bool %8459 %float_0
       %8461 = OpLogicalAnd %bool %8457 %8460
               OpSelectionMerge %8462 None
               OpBranchConditional %8461 %8463 %8462
       %8463 = OpLabel
       %8464 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_1
       %8465 = OpLoad %float %8464
               OpBranch %8462
       %8462 = OpLabel
       %8466 = OpPhi %float %float_1 %8447 %8465 %8463
       %8467 = OpLoad %v4float %8395
       %8468 = OpCompositeExtract %float %8467 0
       %8469 = OpBitcast %uint %8468
       %8470 = OpBitwiseAnd %uint %8469 %uint_4
       %8471 = OpINotEqual %bool %8470 %uint_0
               OpSelectionMerge %8472 DontFlatten
               OpBranchConditional %8471 %8473 %8472
       %8473 = OpLabel
       %8474 = OpVectorTimesScalar %v3float %596 %float_2097152
       %8475 = OpFAdd %v3float %8474 %646
       %8476 = OpAccessChain %_ptr_Uniform_v3float %View %uint_35
       %8477 = OpLoad %v3float %8476
       %8478 = OpAccessChain %_ptr_Uniform_v3float %View %uint_36
       %8479 = OpLoad %v3float %8478
       %8480 = OpExtInst %v3float %1 Fma %8475 %8477 %8479
       %8481 = OpExtInst %v3float %1 FClamp %8480 %103 %304
       %8482 = OpAccessChain %_ptr_Uniform_v3float %View %uint_37
       %8483 = OpLoad %v3float %8482
       %8484 = OpFMul %v3float %8481 %8483
       %8485 = OpCompositeExtract %float %8484 0
       %8486 = OpCompositeExtract %float %8484 1
       %8487 = OpCompositeExtract %float %8484 2
       %8488 = OpConvertFToS %int %8485
       %8489 = OpConvertFToS %int %8486
       %8490 = OpConvertFToS %int %8487
       %8491 = OpCompositeConstruct %v4int %8488 %8489 %8490 %int_0
       %8492 = OpVectorShuffle %v3int %8491 %8491 0 1 2
       %8493 = OpLoad %type_3d_image %View_VolumetricLightmapIndirectionTexture
       %8494 = OpImageFetch %v4uint %8493 %8492 Lod %int_0
       %8495 = OpConvertUToF %v4float %8494
       %8496 = OpAccessChain %_ptr_Uniform_float %View %uint_38
       %8497 = OpLoad %float %8496
       %8498 = OpFAdd %float %8497 %float_1
       %8499 = OpVectorShuffle %v3float %8495 %8495 0 1 2
       %8500 = OpVectorTimesScalar %v3float %8499 %8498
       %8501 = OpCompositeExtract %float %8495 3
       %8502 = OpCompositeConstruct %v3float %8501 %8501 %8501
       %8503 = OpFDiv %v3float %8484 %8502
       %8504 = OpExtInst %v3float %1 Fract %8503
       %8505 = OpVectorTimesScalar %v3float %8504 %8497
       %8506 = OpFAdd %v3float %8500 %8505
       %8507 = OpFAdd %v3float %8506 %138
       %8508 = OpAccessChain %_ptr_Uniform_v3float %View %uint_39
       %8509 = OpLoad %v3float %8508
       %8510 = OpFMul %v3float %8507 %8509
       %8511 = OpLoad %type_3d_image_0 %View_DirectionalLightShadowingBrickTexture
       %8512 = OpLoad %type_sampler %View_SharedBilinearClampedSampler
       %8513 = OpSampledImage %type_sampled_image_0 %8511 %8512
       %8514 = OpImageSampleExplicitLod %v4float %8513 %8510 Lod %float_0
       %8515 = OpCompositeExtract %float %8514 0
               OpBranch %8472
       %8472 = OpLabel
       %8516 = OpPhi %float %8466 %8462 %8515 %8473
       %8517 = OpCompositeConstruct %v4float %8516 %float_1 %float_1 %float_1
       %8518 = OpFOrdEqual %v4bool %8517 %99
       %8519 = OpAll %bool %8518
       %8520 = OpFOrdEqual %v4bool %8517 %118
       %8521 = OpAll %bool %8520
       %8522 = OpLogicalNot %bool %8519
       %8523 = OpLogicalNot %bool %8521
       %8524 = OpLogicalAnd %bool %8522 %8523
               OpSelectionMerge %8525 None
               OpBranchConditional %8524 %8526 %8527
       %8527 = OpLabel
               OpSelectionMerge %8528 None
               OpBranchConditional %8519 %8529 %8530
       %8530 = OpLabel
               OpSelectionMerge %8531 None
               OpBranchConditional %8521 %8532 %8531
       %8532 = OpLabel
       %8533 = OpBitwiseOr %uint %8411 %uint_0
       %8534 = OpBitwiseOr %uint %8533 %uint_0
               OpBranch %8531
       %8531 = OpLabel
       %8535 = OpPhi %uint %8411 %8530 %8534 %8532
               OpBranch %8528
       %8529 = OpLabel
       %8536 = OpBitwiseOr %uint %8411 %uint_0
       %8537 = OpBitwiseOr %uint %8536 %uint_16
               OpBranch %8528
       %8528 = OpLabel
       %8538 = OpPhi %uint %8535 %8531 %8537 %8529
               OpBranch %8525
       %8526 = OpLabel
       %8539 = OpBitwiseOr %uint %8411 %uint_8
               OpBranch %8525
       %8525 = OpLabel
       %8540 = OpPhi %uint %8538 %8528 %8539 %8526
       %8541 = OpFMul %float %float_0_0799999982 %8420
       %8542 = OpCompositeConstruct %v3float %8541 %8541 %8541
       %8543 = OpAccessChain %_ptr_Uniform_float %View %uint_15 %int_3
       %8544 = OpLoad %float %8543
       %8545 = OpVectorTimesScalar %v3float %8440 %8544
       %8546 = OpFAdd %v3float %8545 %8415
       %8547 = OpAccessChain %_ptr_Uniform_float %View %uint_16 %int_3
       %8548 = OpLoad %float %8547
       %8549 = OpVectorTimesScalar %v3float %8542 %8548
       %8550 = OpVectorShuffle %v3float %616 %616 0 1 2
       %8551 = OpFAdd %v3float %8549 %8550
       %8552 = OpAccessChain %_ptr_Uniform_float %View %uint_25
       %8553 = OpLoad %float %8552
       %8554 = OpFOrdNotEqual %bool %8553 %float_0
               OpSelectionMerge %8555 None
               OpBranchConditional %8554 %8556 %8555
       %8556 = OpLabel
       %8557 = OpVectorTimesScalar %v3float %8551 %float_0_449999988
       %8558 = OpFAdd %v3float %8546 %8557
               OpBranch %8555
       %8555 = OpLabel
       %8559 = OpPhi %v3float %8546 %8525 %8558 %8556
       %8560 = OpCompositeConstruct %v3bool %8554 %8554 %8554
       %8561 = OpSelect %v3float %8560 %103 %8551
               OpSelectionMerge %8562 None
               OpBranchConditional %8460 %8563 %8562
       %8563 = OpLabel
       %8564 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_0
       %8565 = OpLoad %v4float %8564
       %8566 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_3 %int_0
       %8567 = OpLoad %v4float %8566
       %8568 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_4 %uint_0
       %8569 = OpLoad %float %8568
       %8570 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_1
       %8571 = OpLoad %v4float %8570
       %8572 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_3 %int_1
       %8573 = OpLoad %v4float %8572
       %8574 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_4 %uint_1
       %8575 = OpLoad %float %8574
       %8576 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_2
       %8577 = OpLoad %v4float %8576
       %8578 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_3 %int_2
       %8579 = OpLoad %v4float %8578
       %8580 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_4 %uint_2
       %8581 = OpLoad %float %8580
       %8582 = OpCompositeExtract %float %8451 1
       %8583 = OpFMul %float %float_n0_488602996 %8582
       %8584 = OpCompositeInsert %v4float %8583 %553 1
       %8585 = OpCompositeExtract %float %8451 2
       %8586 = OpFMul %float %float_0_488602996 %8585
       %8587 = OpCompositeInsert %v4float %8586 %8584 2
       %8588 = OpCompositeExtract %float %8451 0
       %8589 = OpFMul %float %float_n0_488602996 %8588
       %8590 = OpCompositeInsert %v4float %8589 %8587 3
       %8591 = OpFMul %v3float %8451 %8451
       %8592 = OpFMul %float %float_1_09254801 %8588
       %8593 = OpFMul %float %8592 %8582
       %8594 = OpCompositeInsert %v4float %8593 %542 0
       %8595 = OpFMul %float %float_n1_09254801 %8582
       %8596 = OpFMul %float %8595 %8585
       %8597 = OpCompositeInsert %v4float %8596 %8594 1
       %8598 = OpCompositeExtract %float %8591 2
       %8599 = OpExtInst %float %1 Fma %float_3 %8598 %float_n1
       %8600 = OpFMul %float %float_0_315391988 %8599
       %8601 = OpCompositeInsert %v4float %8600 %8597 2
       %8602 = OpFMul %float %float_n1_09254801 %8588
       %8603 = OpFMul %float %8602 %8585
       %8604 = OpCompositeInsert %v4float %8603 %8601 3
       %8605 = OpCompositeExtract %float %8591 0
       %8606 = OpCompositeExtract %float %8591 1
       %8607 = OpFSub %float %8605 %8606
       %8608 = OpCompositeInsert %v4float %float_0_886227548 %8590 0
       %8609 = OpVectorShuffle %v3float %8608 %8608 1 2 3
       %8610 = OpVectorTimesScalar %v3float %8609 %float_2_09439516
       %8611 = OpVectorShuffle %v4float %8608 %8610 0 4 5 6
       %8612 = OpVectorTimesScalar %v4float %8604 %float_0_785398185
       %8613 = OpFMul %float %8607 %float_0_429042608
       %8614 = OpDot %float %8565 %8611
       %8615 = OpDot %float %8567 %8612
       %8616 = OpFAdd %float %8614 %8615
       %8617 = OpExtInst %float %1 Fma %8569 %8613 %8616
       %8618 = OpCompositeInsert %v3float %8617 %554 0
       %8619 = OpDot %float %8571 %8611
       %8620 = OpDot %float %8573 %8612
       %8621 = OpFAdd %float %8619 %8620
       %8622 = OpExtInst %float %1 Fma %8575 %8613 %8621
       %8623 = OpCompositeInsert %v3float %8622 %8618 1
       %8624 = OpDot %float %8577 %8611
       %8625 = OpDot %float %8579 %8612
       %8626 = OpFAdd %float %8624 %8625
       %8627 = OpExtInst %float %1 Fma %8581 %8613 %8626
       %8628 = OpCompositeInsert %v3float %8627 %8623 2
       %8629 = OpExtInst %v3float %1 NMax %103 %8628
               OpBranch %8562
       %8562 = OpLabel
       %8630 = OpPhi %v3float %103 %8555 %8629 %8563
       %8631 = OpAccessChain %_ptr_Uniform_v3float %View %uint_24
       %8632 = OpLoad %v3float %8631
       %8633 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_17
       %8634 = OpLoad %uint %8633
       %8635 = OpUGreaterThan %bool %8634 %uint_0
               OpSelectionMerge %8636 None
               OpBranchConditional %8635 %8637 %8636
       %8637 = OpLabel
       %8638 = OpAccessChain %_ptr_Uniform_float %View %uint_26
       %8639 = OpLoad %float %8638
       %8640 = OpFOrdNotEqual %bool %8639 %float_0
               OpSelectionMerge %8641 DontFlatten
               OpBranchConditional %8640 %8642 %8641
       %8642 = OpLabel
               OpSelectionMerge %8643 None
               OpBranchConditional %8460 %8644 %8643
       %8644 = OpLabel
       %8645 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_0
       %8646 = OpLoad %v4float %8645
       %8647 = OpVectorShuffle %v3float %8646 %8646 0 1 2
       %8648 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_0 %int_3
       %8649 = OpLoad %float %8648
               OpBranch %8643
       %8643 = OpLabel
       %8650 = OpPhi %v3float %8451 %8642 %8647 %8644
       %8651 = OpPhi %float %float_1 %8642 %8649 %8644
       %8652 = OpFSub %float %float_1 %8651
       %8653 = OpFSub %float %8651 %float_1
       %8654 = OpExtInst %float %1 Fma %8653 %8652 %float_1
       %8655 = OpCompositeConstruct %v3float %8654 %8654 %8654
       %8656 = OpExtInst %v3float %1 FMix %8650 %8451 %8655
       %8657 = OpDot %float %8650 %8451
       %8658 = OpExtInst %float %1 FClamp %8657 %float_0 %float_1
       %8659 = OpExtInst %float %1 FMix %8658 %float_1 %8654
               OpBranch %8641
       %8641 = OpLabel
       %8660 = OpPhi %float %float_1 %8637 %8659 %8643
       %8661 = OpPhi %float %float_1 %8637 %8651 %8643
       %8662 = OpPhi %v3float %8451 %8637 %8656 %8643
       %8663 = OpCompositeExtract %float %8662 0
       %8664 = OpCompositeExtract %float %8662 1
       %8665 = OpCompositeExtract %float %8662 2
       %8666 = OpCompositeConstruct %v4float %8663 %8664 %8665 %float_1
       %8667 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_0
       %8668 = OpLoad %v4float %8667
       %8669 = OpDot %float %8668 %8666
       %8670 = OpCompositeInsert %v3float %8669 %554 0
       %8671 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_1
       %8672 = OpLoad %v4float %8671
       %8673 = OpDot %float %8672 %8666
       %8674 = OpCompositeInsert %v3float %8673 %8670 1
       %8675 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_2
       %8676 = OpLoad %v4float %8675
       %8677 = OpDot %float %8676 %8666
       %8678 = OpCompositeInsert %v3float %8677 %8674 2
       %8679 = OpVectorShuffle %v4float %8666 %8666 0 1 2 2
       %8680 = OpVectorShuffle %v4float %8666 %8666 1 2 2 0
       %8681 = OpFMul %v4float %8679 %8680
       %8682 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_3
       %8683 = OpLoad %v4float %8682
       %8684 = OpDot %float %8683 %8681
       %8685 = OpCompositeInsert %v3float %8684 %554 0
       %8686 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_4
       %8687 = OpLoad %v4float %8686
       %8688 = OpDot %float %8687 %8681
       %8689 = OpCompositeInsert %v3float %8688 %8685 1
       %8690 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_5
       %8691 = OpLoad %v4float %8690
       %8692 = OpDot %float %8691 %8681
       %8693 = OpCompositeInsert %v3float %8692 %8689 2
       %8694 = OpFMul %float %8664 %8664
       %8695 = OpFNegate %float %8694
       %8696 = OpExtInst %float %1 Fma %8663 %8663 %8695
       %8697 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_6
       %8698 = OpLoad %v4float %8697
       %8699 = OpVectorShuffle %v3float %8698 %8698 0 1 2
       %8700 = OpVectorTimesScalar %v3float %8699 %8696
       %8701 = OpFAdd %v3float %8678 %8693
       %8702 = OpFAdd %v3float %8701 %8700
       %8703 = OpExtInst %v3float %1 NMax %103 %8702
       %8704 = OpVectorShuffle %v3float %624 %624 0 1 2
       %8705 = OpFMul %v3float %8703 %8704
       %8706 = OpFMul %float %8661 %8660
       %8707 = OpVectorTimesScalar %v3float %8705 %8706
               OpBranch %8636
       %8636 = OpLabel
       %8708 = OpPhi %v3float %103 %8562 %8707 %8641
       %8709 = OpExtInst %v3float %1 Fma %8630 %8632 %8708
       %8710 = OpFMul %v3float %8709 %8559
       %8711 = OpVectorTimesScalar %v3float %8440 %float_2_04040003
       %8712 = OpFSub %v3float %8711 %175
       %8713 = OpVectorTimesScalar %v3float %8440 %float_n4_79510021
       %8714 = OpFAdd %v3float %8713 %178
       %8715 = OpVectorTimesScalar %v3float %8440 %float_2_75519991
       %8716 = OpFAdd %v3float %8715 %181
       %8717 = OpVectorTimesScalar %v3float %8712 %float_1
       %8718 = OpFAdd %v3float %8717 %8714
       %8719 = OpVectorTimesScalar %v3float %8718 %float_1
       %8720 = OpFAdd %v3float %8719 %8716
       %8721 = OpVectorTimesScalar %v3float %8720 %float_1
       %8722 = OpExtInst %v3float %1 NMax %128 %8721
       %8723 = OpFMul %v3float %8710 %8722
       %8724 = OpVectorTimesScalar %v3float %8559 %8430
       %8725 = OpVectorTimesScalar %v3float %8723 %8430
       %8726 = OpAccessChain %_ptr_Uniform_v4float %View %uint_11
       %8727 = OpLoad %v4float %8726
       %8728 = OpVectorShuffle %v2float %8727 %8727 2 3
       %8729 = OpFMul %v2float %629 %8728
       %8730 = OpConvertFToU %v2uint %8729
       %8731 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_3
       %8732 = OpLoad %uint %8731
       %8733 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_4
       %8734 = OpLoad %v3float %8733
       %8735 = OpAccessChain %_ptr_Uniform_v3int %OpaqueBasePass %uint_2
       %8736 = OpLoad %v3int %8735
       %8737 = OpCompositeExtract %float %8734 0
       %8738 = OpCompositeExtract %float %8734 1
       %8739 = OpExtInst %float %1 Fma %588 %8737 %8738
       %8740 = OpExtInst %float %1 Log2 %8739
       %8741 = OpCompositeExtract %float %8734 2
       %8742 = OpFMul %float %8740 %8741
       %8743 = OpExtInst %float %1 NMax %float_0 %8742
       %8744 = OpConvertFToU %uint %8743
       %8745 = OpCompositeExtract %int %8736 2
       %8746 = OpISub %int %8745 %int_1
       %8747 = OpBitcast %uint %8746
       %8748 = OpExtInst %uint %1 UMin %8744 %8747
       %8749 = OpCompositeConstruct %v2uint %8732 %8732
       %8750 = OpBitwiseAnd %v2uint %8749 %307
       %8751 = OpShiftRightLogical %v2uint %8730 %8750
       %8752 = OpCompositeExtract %uint %8751 0
       %8753 = OpCompositeExtract %uint %8751 1
       %8754 = OpCompositeExtract %int %8736 1
       %8755 = OpBitcast %uint %8754
       %8756 = OpIMul %uint %8748 %8755
       %8757 = OpIAdd %uint %8756 %8753
       %8758 = OpCompositeExtract %int %8736 0
       %8759 = OpBitcast %uint %8758
       %8760 = OpIMul %uint %8757 %8759
       %8761 = OpIAdd %uint %8760 %8752
       %8762 = OpAccessChain %_ptr_Uniform_uint %SingleLayerWater %uint_3
       %8763 = OpLoad %uint %8762
       %8764 = OpINotEqual %bool %8763 %uint_0
       %8765 = OpAccessChain %_ptr_Uniform_uint %SingleLayerWater %uint_4
       %8766 = OpLoad %uint %8765
       %8767 = OpINotEqual %bool %8766 %uint_0
       %8768 = OpLogicalAnd %bool %true %8767
       %8769 = OpExtInst %v2float %1 Trunc %125
       %8770 = OpConvertFToS %v2int %8769
       %8771 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_19
       %8772 = OpLoad %int %8771
       %8773 = OpINotEqual %bool %8772 %int_0
               OpSelectionMerge %8774 DontFlatten
               OpBranchConditional %8773 %8775 %8774
       %8775 = OpLabel
       %8776 = OpCompositeExtract %int %8770 0
       %8777 = OpCompositeExtract %int %8770 1
       %8778 = OpCompositeConstruct %v3int %8776 %8777 %int_0
       %8779 = OpVectorShuffle %v2int %8778 %8778 0 1
       %8780 = OpLoad %type_2d_image %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture
       %8781 = OpImageFetch %v4float %8780 %8779 Lod %int_0
               OpBranch %8774
       %8774 = OpLabel
       %8782 = OpPhi %v4float %118 %8636 %8781 %8775
       %8783 = OpFMul %v4float %8782 %8782
       %8784 = OpLoad %v4float %8395
       %8785 = OpCompositeExtract %float %8784 0
       %8786 = OpBitcast %uint %8785
       %8787 = OpBitwiseAnd %uint %8786 %uint_2048
       %8788 = OpINotEqual %bool %8787 %uint_0
       %8789 = OpSelect %uint %8788 %uint_1 %uint_0
       %8790 = OpBitwiseAnd %uint %8786 %uint_4096
       %8791 = OpINotEqual %bool %8790 %uint_0
       %8792 = OpSelect %uint %8791 %uint_1 %uint_0
       %8793 = OpBitwiseAnd %uint %8786 %uint_8192
       %8794 = OpINotEqual %bool %8793 %uint_0
       %8795 = OpSelect %uint %8794 %uint_1 %uint_0
       %8796 = OpShiftLeftLogical %uint %8792 %uint_1
       %8797 = OpBitwiseOr %uint %8789 %8796
       %8798 = OpShiftLeftLogical %uint %8795 %uint_2
       %8799 = OpBitwiseOr %uint %8797 %8798
       %8800 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_1
       %8801 = OpLoad %uint %8800
       %8802 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_8
       %8803 = OpLoad %uint %8802
       %8804 = OpAccessChain %_ptr_Uniform_v2float %OpaqueBasePass %uint_9
       %8805 = OpLoad %v2float %8804
       %8806 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_7
       %8807 = OpLoad %v3float %8806
       %8808 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_5
       %8809 = OpLoad %v3float %8808
       %8810 = OpAccessChain %_ptr_Uniform_float %OpaqueBasePass %uint_6
       %8811 = OpLoad %float %8810
       %8812 = OpINotEqual %bool %8801 %uint_0
               OpSelectionMerge %8813 DontFlatten
               OpBranchConditional %8812 %8814 %8813
       %8814 = OpLabel
       %8815 = OpBitwiseAnd %uint %8803 %uint_2
       %8816 = OpShiftRightLogical %uint %8815 %uint_1
       %8817 = OpConvertUToF %float %8816
       %8818 = OpBitwiseAnd %uint %8803 %uint_4
       %8819 = OpShiftRightLogical %uint %8818 %uint_2
       %8820 = OpConvertUToF %float %8819
       %8821 = OpBitwiseAnd %uint %8803 %uint_8
       %8822 = OpShiftRightLogical %uint %8821 %uint_3
       %8823 = OpConvertUToF %float %8822
       %8824 = OpCompositeConstruct %v4float %551 %8817 %8820 %8823
       %8825 = OpShiftRightLogical %uint %8803 %uint_8
       %8826 = OpBitwiseAnd %uint %8825 %uint_7
       %8827 = OpCompositeInsert %v4float %float_1 %8824 0
       %8828 = OpCompositeInsert %v4float %float_1 %8517 0
       %8829 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_10
       %8830 = OpLoad %uint %8829
       %8831 = OpUGreaterThan %bool %8830 %uint_0
               OpSelectionMerge %8832 None
               OpBranchConditional %8831 %8833 %8832
       %8833 = OpLabel
       %8834 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_12
       %8835 = OpLoad %v4float %8834
       %8836 = OpCompositeConstruct %v4float %649 %649 %649 %649
       %8837 = OpFOrdGreaterThanEqual %v4bool %8836 %8835
       %8838 = OpSelect %v4float %8837 %118 %99
       %8839 = OpCompositeExtract %float %8838 0
       %8840 = OpCompositeExtract %float %8838 1
       %8841 = OpFAdd %float %8839 %8840
       %8842 = OpCompositeExtract %float %8838 2
       %8843 = OpFAdd %float %8841 %8842
       %8844 = OpCompositeExtract %float %8838 3
       %8845 = OpFAdd %float %8843 %8844
       %8846 = OpConvertFToU %uint %8845
       %8847 = OpULessThan %bool %8846 %8830
               OpSelectionMerge %8848 None
               OpBranchConditional %8847 %8849 %8848
       %8849 = OpLabel
       %8850 = OpCompositeExtract %float %645 0
       %8851 = OpCompositeExtract %float %645 1
       %8852 = OpCompositeExtract %float %645 2
       %8853 = OpCompositeConstruct %v4float %8850 %8851 %8852 %float_1
       %8854 = OpAccessChain %_ptr_Uniform_mat4v4float %OpaqueBasePass %uint_13 %8846
       %8855 = OpLoad %mat4v4float %8854
       %8856 = OpMatrixTimesVector %v4float %8855 %8853
       %8857 = OpVectorShuffle %v2float %8856 %8856 0 1
       %8858 = OpCompositeExtract %float %8856 3
       %8859 = OpCompositeConstruct %v2float %8858 %8858
       %8860 = OpFDiv %v2float %8857 %8859
       %8861 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_14 %8846
       %8862 = OpLoad %v4float %8861
       %8863 = OpVectorShuffle %v2float %8862 %8862 0 1
       %8864 = OpFOrdGreaterThanEqual %v2bool %8860 %8863
       %8865 = OpVectorShuffle %v2float %8862 %8862 2 3
       %8866 = OpFOrdLessThanEqual %v2bool %8860 %8865
       %8867 = OpCompositeExtract %bool %8864 0
       %8868 = OpCompositeExtract %bool %8866 0
       %8869 = OpLogicalAnd %bool %8867 %8868
       %8870 = OpCompositeExtract %bool %8864 1
       %8871 = OpCompositeExtract %bool %8866 1
       %8872 = OpLogicalAnd %bool %8870 %8871
       %8873 = OpCompositeConstruct %v2bool %8869 %8872
       %8874 = OpAll %bool %8873
               OpSelectionMerge %8875 None
               OpBranchConditional %8874 %8876 %8875
       %8876 = OpLabel
       %8877 = OpLoad %type_2d_image %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas
       %8878 = OpLoad %type_sampler %OpaqueBasePass_Shared_Forward_ShadowmapSampler
       %8879 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_15
       %8880 = OpLoad %v4float %8879
       %8881 = OpCompositeExtract %float %8856 2
       %8882 = OpFSub %float %float_1 %8881
       %8883 = OpVectorShuffle %v2float %8880 %8880 0 1
       %8884 = OpExtInst %v2float %1 Fma %8860 %8883 %529
       %8885 = OpExtInst %v2float %1 Fract %8884
       %8886 = OpExtInst %v2float %1 Floor %8884
       %8887 = OpFAdd %v2float %8886 %314
       %8888 = OpVectorShuffle %v2float %8880 %8880 2 3
       %8889 = OpFMul %v2float %8887 %8888
       %8890 = OpSampledImage %type_sampled_image %8877 %8878
       %8891 = OpImageGather %v4float %8890 %8889 %int_0 None
       %8892 = OpExtInst %float %1 Fma %8882 %float_4000 %float_n1
       %8893 = OpVectorTimesScalar %v4float %8891 %float_4000
       %8894 = OpCompositeConstruct %v4float %8892 %8892 %8892 %8892
       %8895 = OpFSub %v4float %8893 %8894
       %8896 = OpExtInst %v4float %1 FClamp %8895 %99 %118
       %8897 = OpVectorShuffle %v2float %8896 %8896 3 0
       %8898 = OpVectorShuffle %v2float %8896 %8896 2 1
       %8899 = OpVectorShuffle %v2float %8885 %8885 0 0
       %8900 = OpExtInst %v2float %1 FMix %8897 %8898 %8899
       %8901 = OpCompositeExtract %float %8900 0
       %8902 = OpCompositeExtract %float %8900 1
       %8903 = OpCompositeExtract %float %8885 1
       %8904 = OpExtInst %float %1 FMix %8901 %8902 %8903
               OpBranch %8875
       %8875 = OpLabel
       %8905 = OpPhi %float %float_1 %8849 %8904 %8876
               OpBranch %8848
       %8848 = OpLabel
       %8906 = OpPhi %float %float_1 %8833 %8905 %8875
               OpBranch %8832
       %8832 = OpLabel
       %8907 = OpPhi %float %float_1 %8814 %8906 %8848
       %8908 = OpLogicalNot %bool %8764
       %8909 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_11
       %8910 = OpLoad %int %8909
       %8911 = OpINotEqual %bool %8910 %int_n1
       %8912 = OpLogicalAnd %bool %8908 %8911
               OpSelectionMerge %8913 DontFlatten
               OpBranchConditional %8912 %8914 %8913
       %8914 = OpLabel
               OpSelectionMerge %8915 None
               OpSwitch %uint_0 %8916
       %8916 = OpLabel
       %8917 = OpExtInst %float %1 NMax %float_0 %float_0
       %8918 = OpBitcast %uint %8910
       %8919 = OpIMul %uint %8918 %uint_336
       %8920 = OpIAdd %uint %8919 %uint_96
       %8921 = OpShiftRightLogical %uint %8920 %uint_2
       %8922 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8921
       %8923 = OpLoad %uint %8922
       %8924 = OpIAdd %uint %8921 %uint_1
       %8925 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8924
       %8926 = OpLoad %uint %8925
       %8927 = OpIAdd %uint %8921 %uint_2
       %8928 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8927
       %8929 = OpLoad %uint %8928
       %8930 = OpIAdd %uint %8921 %uint_3
       %8931 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8930
       %8932 = OpLoad %uint %8931
       %8933 = OpCompositeConstruct %v4uint %8923 %8926 %8929 %8932
       %8934 = OpBitcast %v4float %8933
       %8935 = OpCompositeInsert %mat4v4float %8934 %544 2
       %8936 = OpIAdd %uint %8919 %uint_128
       %8937 = OpShiftRightLogical %uint %8936 %uint_2
       %8938 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8937
       %8939 = OpLoad %uint %8938
       %8940 = OpIAdd %uint %8937 %uint_1
       %8941 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8940
       %8942 = OpLoad %uint %8941
       %8943 = OpIAdd %uint %8937 %uint_2
       %8944 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8943
       %8945 = OpLoad %uint %8944
       %8946 = OpIAdd %uint %8937 %uint_3
       %8947 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8946
       %8948 = OpLoad %uint %8947
       %8949 = OpCompositeConstruct %v4uint %8939 %8942 %8945 %8948
       %8950 = OpBitcast %v4float %8949
       %8951 = OpCompositeInsert %mat4v4float %8950 %544 0
       %8952 = OpIAdd %uint %8919 %uint_144
       %8953 = OpShiftRightLogical %uint %8952 %uint_2
       %8954 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8953
       %8955 = OpLoad %uint %8954
       %8956 = OpIAdd %uint %8953 %uint_1
       %8957 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8956
       %8958 = OpLoad %uint %8957
       %8959 = OpIAdd %uint %8953 %uint_2
       %8960 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8959
       %8961 = OpLoad %uint %8960
       %8962 = OpIAdd %uint %8953 %uint_3
       %8963 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8962
       %8964 = OpLoad %uint %8963
       %8965 = OpCompositeConstruct %v4uint %8955 %8958 %8961 %8964
       %8966 = OpBitcast %v4float %8965
       %8967 = OpCompositeInsert %mat4v4float %8966 %8951 1
       %8968 = OpIAdd %uint %8919 %uint_160
       %8969 = OpShiftRightLogical %uint %8968 %uint_2
       %8970 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8969
       %8971 = OpLoad %uint %8970
       %8972 = OpIAdd %uint %8969 %uint_1
       %8973 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8972
       %8974 = OpLoad %uint %8973
       %8975 = OpIAdd %uint %8969 %uint_2
       %8976 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8975
       %8977 = OpLoad %uint %8976
       %8978 = OpIAdd %uint %8969 %uint_3
       %8979 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8978
       %8980 = OpLoad %uint %8979
       %8981 = OpCompositeConstruct %v4uint %8971 %8974 %8977 %8980
       %8982 = OpBitcast %v4float %8981
       %8983 = OpCompositeInsert %mat4v4float %8982 %8967 2
       %8984 = OpIAdd %uint %8919 %uint_176
       %8985 = OpShiftRightLogical %uint %8984 %uint_2
       %8986 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8985
       %8987 = OpLoad %uint %8986
       %8988 = OpIAdd %uint %8985 %uint_1
       %8989 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8988
       %8990 = OpLoad %uint %8989
       %8991 = OpIAdd %uint %8985 %uint_2
       %8992 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8991
       %8993 = OpLoad %uint %8992
       %8994 = OpIAdd %uint %8985 %uint_3
       %8995 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8994
       %8996 = OpLoad %uint %8995
       %8997 = OpCompositeConstruct %v4uint %8987 %8990 %8993 %8996
       %8998 = OpBitcast %v4float %8997
       %8999 = OpCompositeInsert %mat4v4float %8998 %8983 3
       %9000 = OpIAdd %uint %8919 %uint_256
       %9001 = OpShiftRightLogical %uint %9000 %uint_2
       %9002 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9001
       %9003 = OpLoad %uint %9002
       %9004 = OpIAdd %uint %9001 %uint_1
       %9005 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9004
       %9006 = OpLoad %uint %9005
       %9007 = OpIAdd %uint %9001 %uint_2
       %9008 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9007
       %9009 = OpLoad %uint %9008
       %9010 = OpCompositeConstruct %v3uint %9003 %9006 %9009
       %9011 = OpBitcast %v3float %9010
       %9012 = OpIAdd %uint %8919 %uint_268
       %9013 = OpShiftRightLogical %uint %9012 %uint_2
       %9014 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9013
       %9015 = OpLoad %uint %9014
       %9016 = OpIAdd %uint %8919 %uint_272
       %9017 = OpShiftRightLogical %uint %9016 %uint_2
       %9018 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9017
       %9019 = OpLoad %uint %9018
       %9020 = OpIAdd %uint %9017 %uint_1
       %9021 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9020
       %9022 = OpLoad %uint %9021
       %9023 = OpIAdd %uint %9017 %uint_2
       %9024 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9023
       %9025 = OpLoad %uint %9024
       %9026 = OpCompositeConstruct %v3uint %9019 %9022 %9025
       %9027 = OpBitcast %v3float %9026
       %9028 = OpIAdd %uint %8919 %uint_288
       %9029 = OpShiftRightLogical %uint %9028 %uint_2
       %9030 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9029
       %9031 = OpLoad %uint %9030
       %9032 = OpIAdd %uint %9029 %uint_1
       %9033 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9032
       %9034 = OpLoad %uint %9033
       %9035 = OpIAdd %uint %9029 %uint_2
       %9036 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9035
       %9037 = OpLoad %uint %9036
       %9038 = OpCompositeConstruct %v3uint %9031 %9034 %9037
       %9039 = OpBitcast %v3float %9038
       %9040 = OpIAdd %uint %8919 %uint_300
       %9041 = OpShiftRightLogical %uint %9040 %uint_2
       %9042 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9041
       %9043 = OpLoad %uint %9042
       %9044 = OpBitcast %float %9043
       %9045 = OpIAdd %uint %8919 %uint_312
       %9046 = OpShiftRightLogical %uint %9045 %uint_2
       %9047 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9046
       %9048 = OpLoad %uint %9047
       %9049 = OpBitcast %int %9048
       %9050 = OpIAdd %uint %8919 %uint_316
       %9051 = OpShiftRightLogical %uint %9050 %uint_2
       %9052 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9051
       %9053 = OpLoad %uint %9052
       %9054 = OpBitcast %int %9053
       %9055 = OpFNegate %v3float %9011
       %9056 = OpFNegate %v3float %9039
       %9057 = OpIEqual %bool %9015 %uint_0
               OpSelectionMerge %9058 None
               OpBranchConditional %9057 %9059 %9060
       %9060 = OpLabel
       %9061 = OpFAdd %v3float %596 %9011
       %9062 = OpFAdd %v3float %646 %9027
       %9063 = OpVectorTimesScalar %v3float %9061 %float_2097152
       %9064 = OpFAdd %v3float %9063 %9062
       %9065 = OpINotEqual %bool %9015 %uint_2
               OpSelectionMerge %9066 None
               OpBranchConditional %9065 %9067 %9066
       %9067 = OpLabel
               OpSelectionMerge %9068 None
               OpSwitch %uint_0 %9069
       %9069 = OpLabel
       %9070 = OpCompositeExtract %float %9064 0
       %9071 = OpExtInst %float %1 FAbs %9070
       %9072 = OpCompositeExtract %float %9064 1
       %9073 = OpExtInst %float %1 FAbs %9072
       %9074 = OpFOrdGreaterThanEqual %bool %9071 %9073
       %9075 = OpCompositeExtract %float %9064 2
       %9076 = OpExtInst %float %1 FAbs %9075
       %9077 = OpFOrdGreaterThanEqual %bool %9071 %9076
       %9078 = OpLogicalAnd %bool %9074 %9077
               OpSelectionMerge %9079 None
               OpBranchConditional %9078 %9080 %9081
       %9081 = OpLabel
       %9082 = OpFOrdGreaterThan %bool %9073 %9076
               OpSelectionMerge %9083 None
               OpBranchConditional %9082 %9084 %9085
       %9085 = OpLabel
       %9086 = OpFOrdGreaterThan %bool %9075 %float_0
       %9087 = OpSelect %uint %9086 %uint_4 %uint_5
               OpBranch %9068
       %9084 = OpLabel
       %9088 = OpFOrdGreaterThan %bool %9072 %float_0
       %9089 = OpSelect %uint %9088 %uint_2 %uint_3
               OpBranch %9068
       %9083 = OpLabel
               OpUnreachable
       %9080 = OpLabel
       %9090 = OpFOrdGreaterThan %bool %9070 %float_0
       %9091 = OpSelect %uint %9090 %uint_0 %uint_1
               OpBranch %9068
       %9079 = OpLabel
               OpUnreachable
       %9068 = OpLabel
       %9092 = OpPhi %uint %9087 %9085 %9089 %9084 %9091 %9080
       %9093 = OpIAdd %uint %8918 %9092
       %9094 = OpBitcast %int %9093
       %9095 = OpBitcast %uint %9094
       %9096 = OpIMul %uint %9095 %uint_336
       %9097 = OpIAdd %uint %9096 %uint_96
       %9098 = OpShiftRightLogical %uint %9097 %uint_2
       %9099 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9098
       %9100 = OpLoad %uint %9099
       %9101 = OpIAdd %uint %9098 %uint_1
       %9102 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9101
       %9103 = OpLoad %uint %9102
       %9104 = OpIAdd %uint %9098 %uint_2
       %9105 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9104
       %9106 = OpLoad %uint %9105
       %9107 = OpIAdd %uint %9098 %uint_3
       %9108 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9107
       %9109 = OpLoad %uint %9108
       %9110 = OpCompositeConstruct %v4uint %9100 %9103 %9106 %9109
       %9111 = OpBitcast %v4float %9110
       %9112 = OpCompositeInsert %mat4v4float %9111 %544 2
       %9113 = OpIAdd %uint %9096 %uint_128
       %9114 = OpShiftRightLogical %uint %9113 %uint_2
       %9115 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9114
       %9116 = OpLoad %uint %9115
       %9117 = OpIAdd %uint %9114 %uint_1
       %9118 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9117
       %9119 = OpLoad %uint %9118
       %9120 = OpIAdd %uint %9114 %uint_2
       %9121 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9120
       %9122 = OpLoad %uint %9121
       %9123 = OpIAdd %uint %9114 %uint_3
       %9124 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9123
       %9125 = OpLoad %uint %9124
       %9126 = OpCompositeConstruct %v4uint %9116 %9119 %9122 %9125
       %9127 = OpBitcast %v4float %9126
       %9128 = OpCompositeInsert %mat4v4float %9127 %544 0
       %9129 = OpIAdd %uint %9096 %uint_144
       %9130 = OpShiftRightLogical %uint %9129 %uint_2
       %9131 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9130
       %9132 = OpLoad %uint %9131
       %9133 = OpIAdd %uint %9130 %uint_1
       %9134 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9133
       %9135 = OpLoad %uint %9134
       %9136 = OpIAdd %uint %9130 %uint_2
       %9137 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9136
       %9138 = OpLoad %uint %9137
       %9139 = OpIAdd %uint %9130 %uint_3
       %9140 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9139
       %9141 = OpLoad %uint %9140
       %9142 = OpCompositeConstruct %v4uint %9132 %9135 %9138 %9141
       %9143 = OpBitcast %v4float %9142
       %9144 = OpCompositeInsert %mat4v4float %9143 %9128 1
       %9145 = OpIAdd %uint %9096 %uint_160
       %9146 = OpShiftRightLogical %uint %9145 %uint_2
       %9147 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9146
       %9148 = OpLoad %uint %9147
       %9149 = OpIAdd %uint %9146 %uint_1
       %9150 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9149
       %9151 = OpLoad %uint %9150
       %9152 = OpIAdd %uint %9146 %uint_2
       %9153 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9152
       %9154 = OpLoad %uint %9153
       %9155 = OpIAdd %uint %9146 %uint_3
       %9156 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9155
       %9157 = OpLoad %uint %9156
       %9158 = OpCompositeConstruct %v4uint %9148 %9151 %9154 %9157
       %9159 = OpBitcast %v4float %9158
       %9160 = OpCompositeInsert %mat4v4float %9159 %9144 2
       %9161 = OpIAdd %uint %9096 %uint_176
       %9162 = OpShiftRightLogical %uint %9161 %uint_2
       %9163 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9162
       %9164 = OpLoad %uint %9163
       %9165 = OpIAdd %uint %9162 %uint_1
       %9166 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9165
       %9167 = OpLoad %uint %9166
       %9168 = OpIAdd %uint %9162 %uint_2
       %9169 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9168
       %9170 = OpLoad %uint %9169
       %9171 = OpIAdd %uint %9162 %uint_3
       %9172 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9171
       %9173 = OpLoad %uint %9172
       %9174 = OpCompositeConstruct %v4uint %9164 %9167 %9170 %9173
       %9175 = OpBitcast %v4float %9174
       %9176 = OpCompositeInsert %mat4v4float %9175 %9160 3
               OpBranch %9066
       %9066 = OpLabel
       %9177 = OpPhi %mat4v4float %8935 %9060 %9112 %9068
       %9178 = OpPhi %int %8910 %9060 %9094 %9068
       %9179 = OpPhi %mat4v4float %8999 %9060 %9176 %9068
       %9180 = OpCompositeExtract %float %9064 0
       %9181 = OpCompositeExtract %float %9064 1
       %9182 = OpCompositeExtract %float %9064 2
       %9183 = OpCompositeConstruct %v4float %9180 %9181 %9182 %float_1
       %9184 = OpMatrixTimesVector %v4float %9179 %9183
       %9185 = OpCompositeExtract %float %9184 3
       %9186 = OpCompositeConstruct %v3float %9185 %9185 %9185
       %9187 = OpVectorShuffle %v3float %9184 %9184 0 1 2
       %9188 = OpFDiv %v3float %9187 %9186
       %9189 = OpVectorShuffle %v2float %9188 %459 0 1
               OpSelectionMerge %9190 None
               OpSwitch %uint_0 %9191
       %9191 = OpLabel
       %9192 = OpBitcast %uint %9178
       %9193 = OpVectorTimesScalar %v2float %9189 %float_128
       %9194 = OpConvertFToU %v2uint %9193
               OpSelectionMerge %9195 None
               OpSwitch %uint_0 %9196
       %9196 = OpLabel
       %9197 = OpBitcast %int %9192
       %9198 = OpBitcast %uint %9197
       %9199 = OpULessThan %bool %9198 %uint_8192
               OpSelectionMerge %9200 None
               OpBranchConditional %9199 %9201 %9200
       %9201 = OpLabel
               OpBranch %9195
       %9200 = OpLabel
       %9202 = OpISub %uint %9192 %uint_8192
       %9203 = OpIMul %uint %9202 %uint_21845
       %9204 = OpIAdd %uint %uint_8192 %9203
       %9205 = OpCompositeExtract %uint %9194 0
       %9206 = OpCompositeExtract %uint %9194 1
       %9207 = OpShiftLeftLogical %uint %9206 %uint_7
       %9208 = OpIAdd %uint %9205 %9207
       %9209 = OpIAdd %uint %9204 %9208
               OpBranch %9195
       %9195 = OpLabel
       %9210 = OpPhi %uint %9192 %9201 %9209 %9200
       %9211 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9210
       %9212 = OpLoad %uint %9211
       %9213 = OpBitwiseAnd %uint %9212 %uint_1023
       %9214 = OpShiftRightLogical %uint %9212 %uint_10
       %9215 = OpBitwiseAnd %uint %9214 %uint_1023
       %9216 = OpCompositeConstruct %v2uint %9213 %9215
       %9217 = OpShiftRightLogical %uint %9212 %uint_20
       %9218 = OpBitwiseAnd %uint %9217 %uint_63
       %9219 = OpBitwiseAnd %uint %9212 %uint_134217728
       %9220 = OpINotEqual %bool %9219 %uint_0
       %9221 = OpSelect %uint %9199 %uint_7 %9218
       %9222 = OpBitwiseAnd %uint %9221 %uint_31
       %9223 = OpShiftRightLogical %uint %uint_16384 %9222
       %9224 = OpConvertUToF %float %9223
       %9225 = OpVectorTimesScalar %v2float %9189 %9224
       %9226 = OpConvertFToU %v2uint %9225
       %9227 = OpIMul %v2uint %9216 %342
       %9228 = OpBitwiseAnd %v2uint %9226 %343
       %9229 = OpIAdd %v2uint %9227 %9228
               OpSelectionMerge %9230 None
               OpBranchConditional %9220 %9231 %9230
       %9231 = OpLabel
       %9232 = OpCompositeExtract %uint %9229 0
       %9233 = OpCompositeExtract %uint %9229 1
       %9234 = OpCompositeConstruct %v4uint %9232 %9233 %uint_0 %uint_0
       %9235 = OpBitcast %v4int %9234
       %9236 = OpVectorShuffle %v3int %9235 %9235 0 1 2
       %9237 = OpCompositeExtract %int %9235 3
       %9238 = OpLoad %type_2d_image_array_0 %VirtualShadowMap_PhysicalPagePool
       %9239 = OpImageFetch %v4uint %9238 %9236 Lod %9237
       %9240 = OpCompositeExtract %uint %9239 0
       %9241 = OpBitcast %float %9240
               OpBranch %9190
       %9230 = OpLabel
               OpBranch %9190
       %9190 = OpLabel
       %9242 = OpPhi %float %9241 %9231 %float_0 %9230
       %9243 = OpPhi %bool %true %9231 %false %9230
               OpSelectionMerge %9244 None
               OpBranchConditional %9243 %9245 %9244
       %9245 = OpLabel
       %9246 = OpFNegate %float %8917
       %9247 = OpCompositeExtract %float %9177 2 2
       %9248 = OpFMul %float %9246 %9247
       %9249 = OpFDiv %float %9248 %9185
       %9250 = OpFSub %float %9242 %9249
       %9251 = OpCompositeExtract %float %9188 2
       %9252 = OpFOrdGreaterThan %bool %9250 %9251
       %9253 = OpSelect %float %9252 %float_0 %float_1
               OpBranch %8915
       %9244 = OpLabel
               OpBranch %9058
       %9059 = OpLabel
       %9254 = OpFSub %v3float %596 %9055
       %9255 = OpFSub %v3float %646 %9056
       %9256 = OpVectorTimesScalar %v3float %9254 %float_2097152
       %9257 = OpFAdd %v3float %9256 %9255
       %9258 = OpExtInst %float %1 Length %9257
       %9259 = OpExtInst %float %1 Log2 %9258
       %9260 = OpFAdd %float %9259 %9044
       %9261 = OpExtInst %float %1 Floor %9260
       %9262 = OpConvertFToS %int %9261
       %9263 = OpISub %int %9262 %9049
       %9264 = OpExtInst %int %1 SMax %int_0 %9263
       %9265 = OpSLessThan %bool %9264 %9054
               OpSelectionMerge %9266 None
               OpBranchConditional %9265 %9267 %9266
       %9267 = OpLabel
       %9268 = OpIAdd %int %8910 %9264
       %9269 = OpBitcast %uint %9268
       %9270 = OpIMul %uint %9269 %uint_336
       %9271 = OpIAdd %uint %9270 %uint_96
       %9272 = OpShiftRightLogical %uint %9271 %uint_2
       %9273 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9272
       %9274 = OpLoad %uint %9273
       %9275 = OpIAdd %uint %9272 %uint_1
       %9276 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9275
       %9277 = OpLoad %uint %9276
       %9278 = OpIAdd %uint %9272 %uint_2
       %9279 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9278
       %9280 = OpLoad %uint %9279
       %9281 = OpIAdd %uint %9272 %uint_3
       %9282 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9281
       %9283 = OpLoad %uint %9282
       %9284 = OpCompositeConstruct %v4uint %9274 %9277 %9280 %9283
       %9285 = OpBitcast %v4float %9284
       %9286 = OpIAdd %uint %9270 %uint_112
       %9287 = OpShiftRightLogical %uint %9286 %uint_2
       %9288 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9287
       %9289 = OpIAdd %uint %9287 %uint_1
       %9290 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9289
       %9291 = OpIAdd %uint %9287 %uint_2
       %9292 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9291
       %9293 = OpIAdd %uint %9287 %uint_3
       %9294 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9293
       %9295 = OpIAdd %uint %9270 %uint_128
       %9296 = OpShiftRightLogical %uint %9295 %uint_2
       %9297 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9296
       %9298 = OpLoad %uint %9297
       %9299 = OpIAdd %uint %9296 %uint_1
       %9300 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9299
       %9301 = OpLoad %uint %9300
       %9302 = OpIAdd %uint %9296 %uint_2
       %9303 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9302
       %9304 = OpLoad %uint %9303
       %9305 = OpIAdd %uint %9296 %uint_3
       %9306 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9305
       %9307 = OpLoad %uint %9306
       %9308 = OpCompositeConstruct %v4uint %9298 %9301 %9304 %9307
       %9309 = OpBitcast %v4float %9308
       %9310 = OpCompositeInsert %mat4v4float %9309 %544 0
       %9311 = OpIAdd %uint %9270 %uint_144
       %9312 = OpShiftRightLogical %uint %9311 %uint_2
       %9313 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9312
       %9314 = OpLoad %uint %9313
       %9315 = OpIAdd %uint %9312 %uint_1
       %9316 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9315
       %9317 = OpLoad %uint %9316
       %9318 = OpIAdd %uint %9312 %uint_2
       %9319 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9318
       %9320 = OpLoad %uint %9319
       %9321 = OpIAdd %uint %9312 %uint_3
       %9322 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9321
       %9323 = OpLoad %uint %9322
       %9324 = OpCompositeConstruct %v4uint %9314 %9317 %9320 %9323
       %9325 = OpBitcast %v4float %9324
       %9326 = OpCompositeInsert %mat4v4float %9325 %9310 1
       %9327 = OpIAdd %uint %9270 %uint_160
       %9328 = OpShiftRightLogical %uint %9327 %uint_2
       %9329 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9328
       %9330 = OpLoad %uint %9329
       %9331 = OpIAdd %uint %9328 %uint_1
       %9332 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9331
       %9333 = OpLoad %uint %9332
       %9334 = OpIAdd %uint %9328 %uint_2
       %9335 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9334
       %9336 = OpLoad %uint %9335
       %9337 = OpIAdd %uint %9328 %uint_3
       %9338 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9337
       %9339 = OpLoad %uint %9338
       %9340 = OpCompositeConstruct %v4uint %9330 %9333 %9336 %9339
       %9341 = OpBitcast %v4float %9340
       %9342 = OpCompositeInsert %mat4v4float %9341 %9326 2
       %9343 = OpIAdd %uint %9270 %uint_176
       %9344 = OpShiftRightLogical %uint %9343 %uint_2
       %9345 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9344
       %9346 = OpLoad %uint %9345
       %9347 = OpIAdd %uint %9344 %uint_1
       %9348 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9347
       %9349 = OpLoad %uint %9348
       %9350 = OpIAdd %uint %9344 %uint_2
       %9351 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9350
       %9352 = OpLoad %uint %9351
       %9353 = OpIAdd %uint %9344 %uint_3
       %9354 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9353
       %9355 = OpLoad %uint %9354
       %9356 = OpCompositeConstruct %v4uint %9346 %9349 %9352 %9355
       %9357 = OpBitcast %v4float %9356
       %9358 = OpCompositeInsert %mat4v4float %9357 %9342 3
       %9359 = OpIAdd %uint %9270 %uint_256
       %9360 = OpShiftRightLogical %uint %9359 %uint_2
       %9361 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9360
       %9362 = OpLoad %uint %9361
       %9363 = OpIAdd %uint %9360 %uint_1
       %9364 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9363
       %9365 = OpLoad %uint %9364
       %9366 = OpIAdd %uint %9360 %uint_2
       %9367 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9366
       %9368 = OpLoad %uint %9367
       %9369 = OpCompositeConstruct %v3uint %9362 %9365 %9368
       %9370 = OpBitcast %v3float %9369
       %9371 = OpIAdd %uint %9270 %uint_272
       %9372 = OpShiftRightLogical %uint %9371 %uint_2
       %9373 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9372
       %9374 = OpLoad %uint %9373
       %9375 = OpIAdd %uint %9372 %uint_1
       %9376 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9375
       %9377 = OpLoad %uint %9376
       %9378 = OpIAdd %uint %9372 %uint_2
       %9379 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9378
       %9380 = OpLoad %uint %9379
       %9381 = OpCompositeConstruct %v3uint %9374 %9377 %9380
       %9382 = OpBitcast %v3float %9381
       %9383 = OpFAdd %v3float %596 %9370
       %9384 = OpFAdd %v3float %646 %9382
       %9385 = OpVectorTimesScalar %v3float %9383 %float_2097152
       %9386 = OpFAdd %v3float %9385 %9384
       %9387 = OpCompositeExtract %float %9386 0
       %9388 = OpCompositeExtract %float %9386 1
       %9389 = OpCompositeExtract %float %9386 2
       %9390 = OpCompositeConstruct %v4float %9387 %9388 %9389 %float_1
       %9391 = OpMatrixTimesVector %v4float %9358 %9390
       %9392 = OpVectorShuffle %v2float %9391 %9391 0 1
       %9393 = OpVectorTimesScalar %v2float %9392 %float_128
       %9394 = OpConvertFToU %v2uint %9393
               OpSelectionMerge %9395 None
               OpSwitch %uint_0 %9396
       %9396 = OpLabel
       %9397 = OpBitcast %int %9269
       %9398 = OpBitcast %uint %9397
       %9399 = OpULessThan %bool %9398 %uint_8192
               OpSelectionMerge %9400 None
               OpBranchConditional %9399 %9401 %9400
       %9401 = OpLabel
               OpBranch %9395
       %9400 = OpLabel
       %9402 = OpISub %uint %9269 %uint_8192
       %9403 = OpIMul %uint %9402 %uint_21845
       %9404 = OpIAdd %uint %uint_8192 %9403
       %9405 = OpCompositeExtract %uint %9394 0
       %9406 = OpCompositeExtract %uint %9394 1
       %9407 = OpShiftLeftLogical %uint %9406 %uint_7
       %9408 = OpIAdd %uint %9405 %9407
       %9409 = OpIAdd %uint %9404 %9408
               OpBranch %9395
       %9395 = OpLabel
       %9410 = OpPhi %uint %9269 %9401 %9409 %9400
       %9411 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9410
       %9412 = OpLoad %uint %9411
       %9413 = OpBitwiseAnd %uint %9412 %uint_1023
       %9414 = OpShiftRightLogical %uint %9412 %uint_10
       %9415 = OpBitwiseAnd %uint %9414 %uint_1023
       %9416 = OpCompositeConstruct %v2uint %9413 %9415
       %9417 = OpShiftRightLogical %uint %9412 %uint_20
       %9418 = OpBitwiseAnd %uint %9417 %uint_63
       %9419 = OpBitwiseAnd %uint %9412 %uint_134217728
       %9420 = OpINotEqual %bool %9419 %uint_0
       %9421 = OpIEqual %bool %9418 %uint_0
       %9422 = OpLogicalAnd %bool %9420 %9421
               OpSelectionMerge %9423 None
               OpBranchConditional %9420 %9424 %9423
       %9424 = OpLabel
       %9425 = OpIAdd %uint %9269 %9418
       %9426 = OpBitcast %int %9425
       %9427 = OpVectorTimesScalar %v2float %9392 %float_16384
       %9428 = OpConvertFToU %v2uint %9427
       %9429 = OpUGreaterThan %bool %9418 %uint_0
               OpSelectionMerge %9430 None
               OpBranchConditional %9429 %9431 %9430
       %9431 = OpLabel
       %9432 = OpIAdd %uint %9270 %uint_304
       %9433 = OpShiftRightLogical %uint %9432 %uint_2
       %9434 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9433
       %9435 = OpLoad %uint %9434
       %9436 = OpIAdd %uint %9433 %uint_1
       %9437 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9436
       %9438 = OpLoad %uint %9437
       %9439 = OpCompositeConstruct %v2uint %9435 %9438
       %9440 = OpBitcast %v2int %9439
       %9441 = OpBitcast %uint %9426
       %9442 = OpIMul %uint %9441 %uint_336
       %9443 = OpIAdd %uint %9442 %uint_304
       %9444 = OpShiftRightLogical %uint %9443 %uint_2
       %9445 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9444
       %9446 = OpLoad %uint %9445
       %9447 = OpIAdd %uint %9444 %uint_1
       %9448 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9447
       %9449 = OpLoad %uint %9448
       %9450 = OpCompositeConstruct %v2uint %9446 %9449
       %9451 = OpBitcast %v2int %9450
       %9452 = OpIMul %v2int %372 %9440
       %9453 = OpIMul %v2int %372 %9451
       %9454 = OpBitcast %v2uint %9452
       %9455 = OpISub %v2uint %9394 %9454
       %9456 = OpBitcast %int %9418
       %9457 = OpCompositeConstruct %v2int %9456 %9456
       %9458 = OpBitwiseAnd %v2int %9457 %373
       %9459 = OpShiftLeftLogical %v2int %9453 %9458
       %9460 = OpBitcast %v2uint %9459
       %9461 = OpIAdd %v2uint %9455 %9460
       %9462 = OpCompositeConstruct %v2uint %9418 %9418
       %9463 = OpBitwiseAnd %v2uint %9462 %307
       %9464 = OpShiftRightLogical %v2uint %9461 %9463
       %9465 = OpIMul %v2uint %9464 %342
       %9466 = OpIAdd %v2uint %9465 %343
       %9467 = OpLoad %uint %9288
       %9468 = OpLoad %uint %9290
       %9469 = OpLoad %uint %9292
       %9470 = OpLoad %uint %9294
       %9471 = OpCompositeConstruct %v4uint %9467 %9468 %9469 %9470
       %9472 = OpBitcast %v4float %9471
       %9473 = OpLoad %uint %9434
       %9474 = OpLoad %uint %9437
       %9475 = OpCompositeConstruct %v2uint %9473 %9474
       %9476 = OpBitcast %v2int %9475
       %9477 = OpIAdd %int %9268 %9456
       %9478 = OpBitcast %uint %9477
       %9479 = OpIMul %uint %9478 %uint_336
       %9480 = OpIAdd %uint %9479 %uint_112
       %9481 = OpShiftRightLogical %uint %9480 %uint_2
       %9482 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9481
       %9483 = OpLoad %uint %9482
       %9484 = OpIAdd %uint %9481 %uint_1
       %9485 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9484
       %9486 = OpLoad %uint %9485
       %9487 = OpIAdd %uint %9481 %uint_2
       %9488 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9487
       %9489 = OpLoad %uint %9488
       %9490 = OpIAdd %uint %9481 %uint_3
       %9491 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9490
       %9492 = OpLoad %uint %9491
       %9493 = OpCompositeConstruct %v4uint %9483 %9486 %9489 %9492
       %9494 = OpBitcast %v4float %9493
       %9495 = OpIAdd %uint %9479 %uint_304
       %9496 = OpShiftRightLogical %uint %9495 %uint_2
       %9497 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9496
       %9498 = OpLoad %uint %9497
       %9499 = OpIAdd %uint %9496 %uint_1
       %9500 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9499
       %9501 = OpLoad %uint %9500
       %9502 = OpCompositeConstruct %v2uint %9498 %9501
       %9503 = OpBitcast %v2int %9502
       %9504 = OpConvertSToF %v2float %9476
       %9505 = OpConvertSToF %v2float %9503
       %9506 = OpSGreaterThanEqual %bool %9456 %int_0
       %9507 = OpBitcast %uint %9456
       %9508 = OpBitwiseAnd %uint %9507 %uint_31
       %9509 = OpShiftLeftLogical %uint %uint_1 %9508
       %9510 = OpConvertUToF %float %9509
       %9511 = OpFDiv %float %float_1 %9510
       %9512 = OpSNegate %int %9456
       %9513 = OpBitcast %uint %9512
       %9514 = OpBitwiseAnd %uint %9513 %uint_31
       %9515 = OpShiftLeftLogical %uint %uint_1 %9514
       %9516 = OpConvertUToF %float %9515
       %9517 = OpSelect %float %9506 %9511 %9516
       %9518 = OpVectorTimesScalar %v2float %9504 %9517
       %9519 = OpFSub %v2float %9505 %9518
       %9520 = OpVectorTimesScalar %v2float %9519 %float_0_25
       %9521 = OpCompositeExtract %float %9472 2
       %9522 = OpCompositeExtract %float %9494 2
       %9523 = OpFNegate %float %9517
       %9524 = OpExtInst %float %1 Fma %9523 %9521 %9522
       %9525 = OpVectorTimesScalar %v2float %9392 %9517
       %9526 = OpVectorShuffle %v2float %9520 %460 0 1
       %9527 = OpFAdd %v2float %9525 %9526
       %9528 = OpVectorTimesScalar %v2float %9527 %float_16384
       %9529 = OpConvertFToU %v2uint %9528
       %9530 = OpExtInst %v2uint %1 UClamp %9529 %9465 %9466
               OpSelectionMerge %9531 None
               OpSwitch %uint_0 %9532
       %9532 = OpLabel
       %9533 = OpBitcast %int %9441
       %9534 = OpBitcast %uint %9533
       %9535 = OpULessThan %bool %9534 %uint_8192
               OpSelectionMerge %9536 None
               OpBranchConditional %9535 %9537 %9536
       %9537 = OpLabel
               OpBranch %9531
       %9536 = OpLabel
       %9538 = OpISub %uint %9441 %uint_8192
       %9539 = OpIMul %uint %9538 %uint_21845
       %9540 = OpIAdd %uint %uint_8192 %9539
       %9541 = OpCompositeExtract %uint %9464 0
       %9542 = OpCompositeExtract %uint %9464 1
       %9543 = OpShiftLeftLogical %uint %9542 %uint_7
       %9544 = OpIAdd %uint %9541 %9543
       %9545 = OpIAdd %uint %9540 %9544
               OpBranch %9531
       %9531 = OpLabel
       %9546 = OpPhi %uint %9441 %9537 %9545 %9536
       %9547 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9546
       %9548 = OpLoad %uint %9547
       %9549 = OpBitwiseAnd %uint %9548 %uint_1023
       %9550 = OpShiftRightLogical %uint %9548 %uint_10
       %9551 = OpBitwiseAnd %uint %9550 %uint_1023
       %9552 = OpCompositeConstruct %v2uint %9549 %9551
       %9553 = OpShiftRightLogical %uint %9548 %uint_20
       %9554 = OpBitwiseAnd %uint %9553 %uint_63
       %9555 = OpBitwiseAnd %uint %9548 %uint_134217728
       %9556 = OpINotEqual %bool %9555 %uint_0
       %9557 = OpIEqual %bool %9554 %uint_0
       %9558 = OpLogicalAnd %bool %9556 %9557
               OpBranch %9430
       %9430 = OpLabel
       %9559 = OpPhi %float %float_1 %9424 %9517 %9531
       %9560 = OpPhi %float %float_0 %9424 %9524 %9531
       %9561 = OpPhi %v2uint %9428 %9424 %9530 %9531
       %9562 = OpPhi %v2uint %9416 %9424 %9552 %9531
       %9563 = OpPhi %bool %9422 %9424 %9558 %9531
               OpSelectionMerge %9564 None
               OpBranchConditional %9563 %9565 %9564
       %9565 = OpLabel
       %9566 = OpIMul %v2uint %9562 %342
       %9567 = OpBitwiseAnd %v2uint %9561 %343
       %9568 = OpIAdd %v2uint %9566 %9567
       %9569 = OpCompositeExtract %uint %9568 0
       %9570 = OpCompositeExtract %uint %9568 1
       %9571 = OpCompositeConstruct %v4uint %9569 %9570 %uint_0 %uint_0
       %9572 = OpBitcast %v4int %9571
       %9573 = OpVectorShuffle %v3int %9572 %9572 0 1 2
       %9574 = OpCompositeExtract %int %9572 3
       %9575 = OpLoad %type_2d_image_array_0 %VirtualShadowMap_PhysicalPagePool
       %9576 = OpImageFetch %v4uint %9575 %9573 Lod %9574
       %9577 = OpCompositeExtract %uint %9576 0
       %9578 = OpBitcast %float %9577
       %9579 = OpFSub %float %9578 %9560
       %9580 = OpFDiv %float %9579 %9559
               OpBranch %9564
       %9564 = OpLabel
       %9581 = OpPhi %float %float_0 %9430 %9580 %9565
       %9582 = OpSelect %bool %9563 %true %false
               OpBranch %9423
       %9423 = OpLabel
       %9583 = OpPhi %float %float_0 %9395 %9581 %9564
       %9584 = OpPhi %bool %false %9395 %9582 %9564
               OpSelectionMerge %9585 None
               OpBranchConditional %9584 %9586 %9585
       %9586 = OpLabel
       %9587 = OpCompositeExtract %float %9285 2
       %9588 = OpExtInst %float %1 Fma %8917 %9587 %9583
       %9589 = OpCompositeExtract %float %9391 2
       %9590 = OpFOrdGreaterThan %bool %9588 %9589
       %9591 = OpSelect %float %9590 %float_0 %float_1
               OpBranch %8915
       %9585 = OpLabel
               OpBranch %9266
       %9266 = OpLabel
               OpBranch %9058
       %9058 = OpLabel
               OpBranch %8915
       %8915 = OpLabel
       %9592 = OpPhi %float %9253 %9245 %9591 %9586 %float_1 %9058
       %9593 = OpFMul %float %8907 %9592
               OpBranch %8913
       %8913 = OpLabel
       %9594 = OpPhi %float %8907 %8832 %9593 %8915
       %9595 = OpDot %float %8827 %118
       %9596 = OpDot %float %8828 %8827
       %9597 = OpExtInst %float %1 FMix %float_1 %9596 %9595
       %9598 = OpCompositeExtract %float %8805 0
       %9599 = OpCompositeExtract %float %8805 1
       %9600 = OpExtInst %float %1 Fma %649 %9598 %9599
       %9601 = OpExtInst %float %1 FClamp %9600 %float_0 %float_1
       %9602 = OpFMul %float %9601 %9601
       %9603 = OpExtInst %float %1 FMix %9594 %9597 %9602
       %9604 = OpExtInst %float %1 NMin %9603 %float_1
       %9605 = OpFAdd %float %9603 %9604
       %9606 = OpFOrdGreaterThan %bool %9605 %float_0
               OpSelectionMerge %9607 DontFlatten
               OpBranchConditional %9606 %9608 %9607
       %9608 = OpLabel
       %9609 = OpExtInst %float %1 NMax %8428 %8426
       %9610 = OpDot %float %8809 %8809
       %9611 = OpFAdd %float %9610 %float_1
       %9612 = OpFDiv %float %float_1 %9611
       %9613 = OpExtInst %float %1 InverseSqrt %9610
       %9614 = OpVectorTimesScalar %v3float %8809 %9613
       %9615 = OpDot %float %8451 %9614
       %9616 = OpFOrdGreaterThan %bool %8811 %float_0
               OpSelectionMerge %9617 None
               OpBranchConditional %9616 %9618 %9617
       %9618 = OpLabel
       %9619 = OpFMul %float %8811 %8811
       %9620 = OpFMul %float %9619 %9612
       %9621 = OpExtInst %float %1 FClamp %9620 %float_0 %float_1
       %9622 = OpExtInst %float %1 Sqrt %9621
       %9623 = OpFOrdLessThan %bool %9615 %9622
               OpSelectionMerge %9624 None
               OpBranchConditional %9623 %9625 %9624
       %9625 = OpLabel
       %9626 = OpFNegate %float %9622
       %9627 = OpExtInst %float %1 NMax %9615 %9626
       %9628 = OpFAdd %float %9622 %9627
       %9629 = OpFMul %float %9628 %9628
       %9630 = OpFMul %float %float_4 %9622
       %9631 = OpFDiv %float %9629 %9630
               OpBranch %9624
       %9624 = OpLabel
       %9632 = OpPhi %float %9615 %9618 %9631 %9625
               OpBranch %9617
       %9617 = OpLabel
       %9633 = OpPhi %float %9615 %9608 %9632 %9624
       %9634 = OpExtInst %float %1 FClamp %9633 %float_0 %float_1
       %9635 = OpExtInst %float %1 NMax %9609 %8426
       %9636 = OpFMul %float %8811 %9613
       %9637 = OpFNegate %float %9635
       %9638 = OpExtInst %float %1 Fma %9637 %9635 %float_1
       %9639 = OpFMul %float %9636 %9638
       %9640 = OpExtInst %float %1 FClamp %9639 %float_0 %float_1
       %9641 = OpExtInst %float %1 NMax %461 %8811
       %9642 = OpFNegate %float %9641
       %9643 = OpExtInst %float %1 Fma %9642 %float_0_0500000007 %float_1
       %9644 = OpExtInst %float %1 FClamp %9643 %float_0 %float_1
       %9645 = OpBitcast %uint %9644
       %9646 = OpShiftLeftLogical %uint %9645 %uint_1
       %9647 = OpBitwiseOr %uint %uint_0 %9646
       %9648 = OpDot %float %8451 %663
       %9649 = OpDot %float %663 %9614
       %9650 = OpExtInst %float %1 Fma %float_2 %9649 %float_2
       %9651 = OpExtInst %float %1 InverseSqrt %9650
       %9652 = OpFAdd %float %9615 %9648
       %9653 = OpFMul %float %9652 %9651
       %9654 = OpExtInst %float %1 FClamp %9653 %float_0 %float_1
       %9655 = OpExtInst %float %1 Fma %9651 %9649 %9651
       %9656 = OpExtInst %float %1 FClamp %9655 %float_0 %float_1
       %9657 = OpFOrdGreaterThan %bool %9640 %float_0
               OpSelectionMerge %9658 None
               OpBranchConditional %9657 %9659 %9658
       %9659 = OpLabel
       %9660 = OpFNegate %float %9640
       %9661 = OpExtInst %float %1 Fma %9660 %9640 %float_1
       %9662 = OpExtInst %float %1 Sqrt %9661
       %9663 = OpFMul %float %float_2 %9615
       %9664 = OpFNegate %float %9649
       %9665 = OpExtInst %float %1 Fma %9663 %9648 %9664
       %9666 = OpFOrdGreaterThanEqual %bool %9665 %9662
               OpSelectionMerge %9667 None
               OpBranchConditional %9666 %9668 %9669
       %9669 = OpLabel
       %9670 = OpFNegate %float %9665
       %9671 = OpExtInst %float %1 Fma %9670 %9665 %float_1
       %9672 = OpExtInst %float %1 InverseSqrt %9671
       %9673 = OpFMul %float %9640 %9672
       %9674 = OpExtInst %float %1 Fma %9670 %9615 %9648
       %9675 = OpFMul %float %9673 %9674
       %9676 = OpFMul %float %float_2 %9648
       %9677 = OpExtInst %float %1 Fma %9676 %9648 %float_n1
       %9678 = OpExtInst %float %1 Fma %9670 %9649 %9677
       %9679 = OpFMul %float %9673 %9678
       %9680 = OpFNegate %float %9615
       %9681 = OpExtInst %float %1 Fma %9680 %9615 %float_1
       %9682 = OpFNegate %float %9648
       %9683 = OpExtInst %float %1 Fma %9682 %9648 %9681
       %9684 = OpExtInst %float %1 Fma %9664 %9649 %9683
       %9685 = OpFMul %float %9663 %9648
       %9686 = OpExtInst %float %1 Fma %9685 %9649 %9684
       %9687 = OpExtInst %float %1 FClamp %9686 %float_0 %float_1
       %9688 = OpExtInst %float %1 Sqrt %9687
       %9689 = OpFMul %float %9673 %9688
       %9690 = OpFMul %float %9689 %float_2
       %9691 = OpFMul %float %9690 %9648
       %9692 = OpExtInst %float %1 Fma %9615 %9662 %9648
       %9693 = OpExtInst %float %1 Fma %9673 %9674 %9692
       %9694 = OpExtInst %float %1 Fma %9649 %9662 %float_1
       %9695 = OpExtInst %float %1 Fma %9673 %9678 %9694
       %9696 = OpFMul %float %9689 %9695
       %9697 = OpFMul %float %9693 %9695
       %9698 = OpFMul %float %9691 %9693
       %9699 = OpFMul %float %float_0_25 %9691
       %9700 = OpFMul %float %9699 %9693
       %9701 = OpExtInst %float %1 Fma %float_n0_5 %9696 %9700
       %9702 = OpFMul %float %9697 %9701
       %9703 = OpFMul %float %9696 %float_n2
       %9704 = OpExtInst %float %1 Fma %9691 %9693 %9703
       %9705 = OpFMul %float %9698 %9704
       %9706 = OpExtInst %float %1 Fma %9696 %9696 %9705
       %9707 = OpFMul %float %9695 %9695
       %9708 = OpExtInst %float %1 Fma %9649 %9662 %9695
       %9709 = OpExtInst %float %1 Fma %float_n0_5 %9708 %float_n0_5
       %9710 = OpFMul %float %9697 %9709
       %9711 = OpExtInst %float %1 Fma %9692 %9707 %9710
       %9712 = OpExtInst %float %1 Fma %9693 %9711 %9706
       %9713 = OpFMul %float %float_2 %9702
       %9714 = OpFMul %float %9702 %9702
       %9715 = OpExtInst %float %1 Fma %9712 %9712 %9714
       %9716 = OpFDiv %float %9713 %9715
       %9717 = OpFMul %float %9716 %9712
       %9718 = OpFNegate %float %9716
       %9719 = OpExtInst %float %1 Fma %9718 %9702 %float_1
       %9720 = OpFMul %float %9717 %9689
       %9721 = OpExtInst %float %1 Fma %9719 %9675 %9720
       %9722 = OpFMul %float %9717 %9691
       %9723 = OpExtInst %float %1 Fma %9719 %9679 %9722
       %9724 = OpExtInst %float %1 Fma %9615 %9662 %9721
       %9725 = OpExtInst %float %1 Fma %9649 %9662 %9723
       %9726 = OpExtInst %float %1 Fma %float_2 %9725 %float_2
       %9727 = OpExtInst %float %1 InverseSqrt %9726
       %9728 = OpFAdd %float %9724 %9648
       %9729 = OpFMul %float %9728 %9727
       %9730 = OpExtInst %float %1 FClamp %9729 %float_0 %float_1
       %9731 = OpExtInst %float %1 Fma %9727 %9725 %9727
       %9732 = OpExtInst %float %1 FClamp %9731 %float_0 %float_1
               OpBranch %9667
       %9668 = OpLabel
       %9733 = OpExtInst %float %1 FAbs %9648
               OpBranch %9667
       %9667 = OpLabel
       %9734 = OpPhi %float %9730 %9669 %float_1 %9668
       %9735 = OpPhi %float %9732 %9669 %9733 %9668
               OpBranch %9658
       %9658 = OpLabel
       %9736 = OpPhi %float %9654 %9617 %9734 %9667
       %9737 = OpPhi %float %9656 %9617 %9735 %9667
       %9738 = OpExtInst %float %1 FAbs %9648
       %9739 = OpFAdd %float %9738 %float_9_99999975en06
       %9740 = OpExtInst %float %1 FClamp %9739 %float_0 %float_1
       %9741 = OpFMul %float %9609 %9609
       %9742 = OpFMul %float %9741 %9741
       %9743 = OpShiftRightLogical %uint %9647 %uint_1
       %9744 = OpBitcast %float %9743
       %9745 = OpExtInst %float %1 FClamp %9648 %float_0 %float_1
       %9746 = OpExtInst %float %1 FClamp %9634 %float_0 %float_1
       %9747 = OpExtInst %float %1 FClamp %9656 %float_0 %float_1
       %9748 = OpExtInst %float %1 FClamp %9654 %float_0 %float_1
       %9749 = OpBitcast %int %9742
       %9750 = OpISub %int %int_2129859010 %9749
       %9751 = OpBitcast %float %9750
       %9752 = OpExtInst %float %1 Fma %float_2 %9751 %float_n1
       %9753 = OpExtInst %float %1 Log2 %9752
       %9754 = OpFMul %float %float_0_055555556 %9753
       %9755 = OpExtInst %float %1 FClamp %9754 %float_0 %float_1
       %9756 = OpFSub %float %float_1 %9747
       %9757 = OpFMul %float %9756 %9756
       %9758 = OpFMul %float %9757 %9757
       %9759 = OpExtInst %float %1 Fma %9758 %9756 %9747
       %9760 = OpFSub %float %float_1 %9745
       %9761 = OpFMul %float %9760 %9760
       %9762 = OpFMul %float %9761 %9761
       %9763 = OpFMul %float %9762 %9760
       %9764 = OpExtInst %float %1 Fma %float_n0_75 %9763 %float_1
       %9765 = OpFSub %float %float_1 %9746
       %9766 = OpFMul %float %9765 %9765
       %9767 = OpFMul %float %9766 %9766
       %9768 = OpFMul %float %9767 %9765
       %9769 = OpExtInst %float %1 Fma %float_n0_75 %9768 %float_1
       %9770 = OpFMul %float %9764 %9769
       %9771 = OpExtInst %float %1 Fma %float_2_20000005 %9755 %float_n0_5
       %9772 = OpExtInst %float %1 FClamp %9771 %float_0 %float_1
       %9773 = OpExtInst %float %1 FMix %9759 %9770 %9772
       %9774 = OpExtInst %float %1 Fma %float_34_5 %9755 %float_n59
       %9775 = OpExtInst %float %1 Fma %9774 %9755 %float_24_5
       %9776 = OpFMul %float %9775 %9747
       %9777 = OpExtInst %float %1 Fma %float_73_1999969 %9755 %float_n21_2000008
       %9778 = OpExtInst %float %1 NMax %9777 %float_8_89999962
       %9779 = OpFNegate %float %9778
       %9780 = OpBitcast %int %9748
       %9781 = OpShiftRightArithmetic %int %9780 %int_1
       %9782 = OpIAdd %int %int_532487669 %9781
       %9783 = OpBitcast %float %9782
       %9784 = OpFMul %float %9779 %9783
       %9785 = OpExtInst %float %1 Exp2 %9784
       %9786 = OpFMul %float %9776 %9785
       %9787 = OpExtInst %float %1 Fma %9786 %9744 %9773
       %9788 = OpFMul %float %float_0_318309873 %9787
       %9789 = OpVectorTimesScalar %v3float %8724 %9788
       %9790 = OpVectorTimesScalar %v3float %128 %9634
       %9791 = OpFMul %v3float %9789 %9790
       %9792 = OpBitwiseAnd %uint %9647 %uint_1
       %9793 = OpIEqual %bool %9792 %uint_1
               OpSelectionMerge %9794 None
               OpBranchConditional %9793 %9795 %9796
       %9796 = OpLabel
               OpSelectionMerge %9797 None
               OpBranchConditional %9657 %9798 %9797
       %9798 = OpLabel
       %9799 = OpFMul %float %float_0_25 %9640
       %9800 = OpShiftRightArithmetic %int %9749 %int_1
       %9801 = OpIAdd %int %int_532487669 %9800
       %9802 = OpBitcast %float %9801
       %9803 = OpExtInst %float %1 Fma %float_3 %9802 %9640
       %9804 = OpFMul %float %9799 %9803
       %9805 = OpFAdd %float %9737 %float_0_00100000005
       %9806 = OpFDiv %float %9804 %9805
       %9807 = OpExtInst %float %1 Fma %9741 %9741 %9806
       %9808 = OpFDiv %float %9742 %9807
               OpBranch %9797
       %9797 = OpLabel
       %9809 = OpPhi %float %float_1 %9796 %9808 %9798
       %9810 = OpFNegate %float %9736
       %9811 = OpExtInst %float %1 Fma %9736 %9742 %9810
       %9812 = OpExtInst %float %1 Fma %9811 %9736 %float_1
       %9813 = OpFMul %float %float_3_14159274 %9812
       %9814 = OpFMul %float %9813 %9812
       %9815 = OpFDiv %float %9742 %9814
       %9816 = OpFMul %float %9815 %9809
       %9817 = OpExtInst %float %1 Sqrt %9742
       %9818 = OpFSub %float %float_1 %9817
       %9819 = OpExtInst %float %1 Fma %9740 %9818 %9817
       %9820 = OpExtInst %float %1 Fma %9634 %9818 %9817
       %9821 = OpFMul %float %9740 %9820
       %9822 = OpExtInst %float %1 Fma %9634 %9819 %9821
       %9823 = OpFDiv %float %float_0_5 %9822
       %9824 = OpFSub %float %float_1 %9737
       %9825 = OpFMul %float %9824 %9824
       %9826 = OpFMul %float %9825 %9825
       %9827 = OpFMul %float %9826 %9824
       %9828 = OpCompositeExtract %float %8561 1
       %9829 = OpFMul %float %float_50 %9828
       %9830 = OpExtInst %float %1 FClamp %9829 %float_0 %float_1
       %9831 = OpFMul %float %9830 %9827
       %9832 = OpCompositeConstruct %v3float %9831 %9831 %9831
       %9833 = OpFNegate %float %9826
       %9834 = OpExtInst %float %1 Fma %9833 %9824 %float_1
       %9835 = OpVectorTimesScalar %v3float %8561 %9834
       %9836 = OpFAdd %v3float %9832 %9835
       %9837 = OpFMul %float %9816 %9823
       %9838 = OpVectorTimesScalar %v3float %9836 %9837
       %9839 = OpFMul %v3float %9790 %9838
               OpBranch %9794
       %9795 = OpLabel
               OpBranch %9794
       %9794 = OpLabel
       %9840 = OpPhi %v3float %9839 %9797 %103 %9795
       %9841 = OpCompositeExtract %float %8561 1
       %9842 = OpFMul %float %float_50 %9841
       %9843 = OpExtInst %float %1 FClamp %9842 %float_0 %float_1
       %9844 = OpCompositeConstruct %v3float %9843 %9843 %9843
       %9845 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
       %9846 = OpLoad %type_sampler %View_ShadingEnergySampler
       %9847 = OpCompositeConstruct %v2float %9740 %9609
       %9848 = OpSampledImage %type_sampled_image %9845 %9846
       %9849 = OpImageSampleExplicitLod %v4float %9848 %9847 Lod %float_0
       %9850 = OpAccessChain %_ptr_Uniform_uint %View %uint_42
       %9851 = OpLoad %uint %9850
       %9852 = OpINotEqual %bool %9851 %uint_0
       %9853 = OpCompositeConstruct %v3bool %9852 %9852 %9852
       %9854 = OpCompositeExtract %float %9849 0
       %9855 = OpFSub %float %float_1 %9854
       %9856 = OpFDiv %float %9855 %9854
       %9857 = OpVectorTimesScalar %v3float %8561 %9856
       %9858 = OpFAdd %v3float %128 %9857
       %9859 = OpSelect %v3float %9853 %9858 %128
       %9860 = OpVectorTimesScalar %v3float %8561 %9854
       %9861 = OpFSub %v3float %9844 %8561
       %9862 = OpCompositeExtract %float %9849 1
       %9863 = OpVectorTimesScalar %v3float %9861 %9862
       %9864 = OpFAdd %v3float %9860 %9863
       %9865 = OpFMul %v3float %9859 %9864
       %9866 = OpAccessChain %_ptr_Uniform_uint %View %uint_43
       %9867 = OpLoad %uint %9866
       %9868 = OpINotEqual %bool %9867 %uint_0
       %9869 = OpDot %float %9865 %172
       %9870 = OpFSub %float %float_1 %9869
       %9871 = OpSelect %float %9868 %9870 %float_1
       %9872 = OpVectorTimesScalar %v3float %9791 %9871
       %9873 = OpFMul %v3float %9840 %9859
       %9874 = OpVectorTimesScalar %v3float %9873 %float_1
       %9875 = OpVectorTimesScalar %v3float %8807 %9603
       %9876 = OpFMul %v3float %9874 %9875
       %9877 = OpExtInst %v3float %1 Fma %9872 %9875 %103
               OpBranch %9607
       %9607 = OpLabel
       %9878 = OpPhi %v3float %460 %8913 %9877 %9794
       %9879 = OpPhi %v3float %460 %8913 %9876 %9794
       %9880 = OpCompositeExtract %float %9878 0
       %9881 = OpCompositeExtract %float %9878 1
       %9882 = OpCompositeExtract %float %9878 2
       %9883 = OpCompositeConstruct %v4float %9880 %9881 %9882 %float_0
       %9884 = OpCompositeExtract %float %9879 0
       %9885 = OpCompositeExtract %float %9879 1
       %9886 = OpCompositeExtract %float %9879 2
       %9887 = OpCompositeConstruct %v4float %9884 %9885 %9886 %float_0
       %9888 = OpBitwiseAnd %uint %8826 %8799
       %9889 = OpINotEqual %bool %9888 %uint_0
               OpSelectionMerge %9890 Flatten
               OpBranchConditional %9889 %9891 %9890
       %9891 = OpLabel
       %9892 = OpVectorShuffle %v4float %9883 %9883 4 5 6 3
       %9893 = OpVectorShuffle %v4float %9887 %9887 4 5 6 3
               OpSelectionMerge %9894 None
               OpBranchConditional %8768 %9895 %9896
       %9896 = OpLabel
               OpBranch %9894
       %9895 = OpLabel
       %9897 = OpVectorShuffle %v3float %9883 %459 0 1 2
       %9898 = OpVectorShuffle %v3float %9887 %459 0 1 2
       %9899 = OpFAdd %v3float %9897 %9898
               OpBranch %9894
       %9894 = OpLabel
       %9900 = OpPhi %v3float %103 %9896 %9899 %9895
       %9901 = OpCompositeConstruct %v4bool %8768 %8768 %8768 %8768
       %9902 = OpSelect %v4float %9901 %99 %9892
       %9903 = OpSelect %v4float %9901 %99 %9893
               OpBranch %9890
       %9890 = OpLabel
       %9904 = OpPhi %v3float %103 %9607 %9900 %9894
       %9905 = OpPhi %v4float %99 %9607 %9902 %9894
       %9906 = OpPhi %v4float %99 %9607 %9903 %9894
               OpBranch %8813
       %8813 = OpLabel
       %9907 = OpPhi %v4float %8517 %8774 %8828 %9890
       %9908 = OpPhi %v3float %103 %8774 %9904 %9890
       %9909 = OpPhi %float %float_1 %8774 %9603 %9890
       %9910 = OpPhi %v4float %99 %8774 %9905 %9890
       %9911 = OpPhi %v4float %99 %8774 %9906 %9890
       %9912 = OpIMul %uint %8761 %uint_2
       %9913 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid %int_0 %9912
       %9914 = OpLoad %uint %9913
       %9915 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %int_0
       %9916 = OpLoad %uint %9915
       %9917 = OpExtInst %uint %1 UMin %9914 %9916
       %9918 = OpIAdd %uint %9912 %uint_1
       %9919 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid %int_0 %9918
       %9920 = OpLoad %uint %9919
       %9921 = OpExtInst %uint %1 UMin %9917 %9916
               OpBranch %9922
       %9922 = OpLabel
       %9923 = OpPhi %v4float %9910 %8813 %9924 %9925
       %9926 = OpPhi %v4float %9911 %8813 %9927 %9925
       %9928 = OpPhi %uint %uint_0 %8813 %9929 %9925
       %9930 = OpULessThan %bool %9928 %9921
               OpLoopMerge %9931 %9925 DontUnroll
               OpBranchConditional %9930 %9932 %9931
       %9932 = OpLabel
       %9933 = OpIAdd %uint %9920 %9928
       %9934 = OpLoad %type_buffer_image %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit
       %9935 = OpImageFetch %v4uint %9934 %9933 None
       %9936 = OpCompositeExtract %uint %9935 0
       %9937 = OpIMul %uint %9936 %uint_6
       %9938 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9937
       %9939 = OpLoad %v4float %9938
       %9940 = OpIAdd %uint %9937 %uint_1
       %9941 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9940
       %9942 = OpLoad %v4float %9941
       %9943 = OpIAdd %uint %9937 %uint_2
       %9944 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9943
       %9945 = OpLoad %v4float %9944
       %9946 = OpIAdd %uint %9937 %uint_3
       %9947 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9946
       %9948 = OpLoad %v4float %9947
       %9949 = OpIAdd %uint %9937 %uint_4
       %9950 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9949
       %9951 = OpLoad %v4float %9950
       %9952 = OpCompositeExtract %float %9945 3
       %9953 = OpBitcast %uint %9952
       %9954 = OpShiftRightLogical %uint %9953 %uint_16
       %9955 = OpBitwiseAnd %uint %9954 %uint_3
       %9956 = OpVectorShuffle %v3float %9939 %9939 0 1 2
       %9957 = OpCompositeExtract %float %9939 3
       %9958 = OpCompositeExtract %float %9942 1
       %9959 = OpBitcast %uint %9958
       %9960 = OpShiftRightLogical %uint %9959 %uint_0
       %9961 = OpBitwiseAnd %uint %9960 %uint_1023
       %9962 = OpConvertUToF %float %9961
       %9963 = OpShiftRightLogical %uint %9959 %uint_10
       %9964 = OpBitwiseAnd %uint %9963 %uint_1023
       %9965 = OpConvertUToF %float %9964
       %9966 = OpShiftRightLogical %uint %9959 %uint_20
       %9967 = OpBitwiseAnd %uint %9966 %uint_1023
       %9968 = OpConvertUToF %float %9967
       %9969 = OpCompositeConstruct %v3float %9962 %9965 %9968
       %9970 = OpCompositeExtract %float %9942 0
       %9971 = OpVectorTimesScalar %v3float %9969 %9970
       %9972 = OpCompositeExtract %float %9942 3
       %9973 = OpVectorShuffle %v3float %9945 %9945 0 1 2
       %9974 = OpCompositeExtract %float %9948 2
       %9975 = OpBitcast %uint %9974
       %9976 = OpBitwiseAnd %uint %9975 %uint_65535
       %9977 = OpExtInst %v2float %1 UnpackHalf2x16 %9976
       %9978 = OpCompositeExtract %float %9977 0
       %9979 = OpCompositeExtract %float %9948 3
       %9980 = OpBitcast %uint %9979
       %9981 = OpExtInst %v2float %1 UnpackHalf2x16 %9980
       %9982 = OpCompositeExtract %float %9981 0
       %9983 = OpVectorShuffle %v3float %9951 %9951 0 1 2
       %9984 = OpShiftRightLogical %uint %9975 %uint_16
       %9985 = OpExtInst %v2float %1 UnpackHalf2x16 %9984
       %9986 = OpCompositeExtract %float %9985 0
       %9987 = OpFOrdEqual %bool %9972 %float_0
       %9988 = OpCompositeExtract %float %9951 3
       %9989 = OpBitcast %uint %9988
       %9990 = OpBitwiseAnd %uint %9989 %uint_65535
       %9991 = OpExtInst %v2float %1 UnpackHalf2x16 %9990
       %9992 = OpCompositeExtract %float %9991 0
       %9993 = OpIEqual %bool %9955 %uint_2
       %9994 = OpBitwiseAnd %uint %9953 %uint_255
       %9995 = OpINotEqual %bool %9994 %uint_0
       %9996 = OpSelect %uint %9995 %uint_1 %uint_0
       %9997 = OpBitwiseAnd %uint %9953 %uint_1
       %9998 = OpConvertUToF %float %9997
       %9999 = OpBitwiseAnd %uint %9953 %uint_2
      %10000 = OpShiftRightLogical %uint %9999 %uint_1
      %10001 = OpConvertUToF %float %10000
      %10002 = OpBitwiseAnd %uint %9953 %uint_4
      %10003 = OpShiftRightLogical %uint %10002 %uint_2
      %10004 = OpConvertUToF %float %10003
      %10005 = OpBitwiseAnd %uint %9953 %uint_8
      %10006 = OpShiftRightLogical %uint %10005 %uint_3
      %10007 = OpConvertUToF %float %10006
      %10008 = OpCompositeConstruct %v4float %9998 %10001 %10004 %10007
      %10009 = OpShiftRightLogical %uint %9953 %uint_4
      %10010 = OpBitwiseAnd %uint %10009 %uint_1
      %10011 = OpConvertUToF %float %10010
      %10012 = OpBitwiseAnd %uint %10009 %uint_2
      %10013 = OpShiftRightLogical %uint %10012 %uint_1
      %10014 = OpConvertUToF %float %10013
      %10015 = OpBitwiseAnd %uint %10009 %uint_4
      %10016 = OpShiftRightLogical %uint %10015 %uint_2
      %10017 = OpConvertUToF %float %10016
      %10018 = OpBitwiseAnd %uint %10009 %uint_8
      %10019 = OpShiftRightLogical %uint %10018 %uint_3
      %10020 = OpConvertUToF %float %10019
      %10021 = OpCompositeConstruct %v4float %10011 %10014 %10017 %10020
      %10022 = OpShiftRightLogical %uint %9953 %uint_8
      %10023 = OpBitwiseAnd %uint %10022 %uint_7
      %10024 = OpDot %float %10021 %8783
      %10025 = OpFSub %v3float %9956 %645
      %10026 = OpDot %float %10025 %10025
      %10027 = OpExtInst %float %1 InverseSqrt %10026
      %10028 = OpVectorTimesScalar %v3float %10025 %10027
               OpSelectionMerge %10029 None
               OpBranchConditional %9987 %10030 %10031
      %10031 = OpLabel
      %10032 = OpVectorTimesScalar %v3float %10025 %9957
      %10033 = OpDot %float %10032 %10032
      %10034 = OpExtInst %float %1 FClamp %10033 %float_0 %float_1
      %10035 = OpFSub %float %float_1 %10034
      %10036 = OpExtInst %float %1 Pow %10035 %9972
               OpBranch %10029
      %10030 = OpLabel
      %10037 = OpFMul %float %9957 %9957
      %10038 = OpFMul %float %10026 %10037
      %10039 = OpFNegate %float %10038
      %10040 = OpExtInst %float %1 Fma %10039 %10038 %float_1
      %10041 = OpExtInst %float %1 FClamp %10040 %float_0 %float_1
      %10042 = OpFMul %float %10041 %10041
               OpBranch %10029
      %10029 = OpLabel
      %10043 = OpPhi %float %10036 %10031 %10042 %10030
               OpSelectionMerge %10044 None
               OpBranchConditional %9993 %10045 %10044
      %10045 = OpLabel
      %10046 = OpDot %float %10028 %9973
      %10047 = OpCompositeExtract %float %9948 0
      %10048 = OpFSub %float %10046 %10047
      %10049 = OpCompositeExtract %float %9948 1
      %10050 = OpFMul %float %10048 %10049
      %10051 = OpExtInst %float %1 FClamp %10050 %float_0 %float_1
      %10052 = OpFMul %float %10051 %10051
      %10053 = OpFMul %float %10043 %10052
               OpBranch %10044
      %10044 = OpLabel
      %10054 = OpPhi %float %10043 %10029 %10053 %10045
      %10055 = OpVectorTimesScalar %v3float %9971 %10054
      %10056 = OpFOrdGreaterThan %bool %10054 %float_0
               OpSelectionMerge %10057 DontFlatten
               OpBranchConditional %10056 %10058 %10057
      %10058 = OpLabel
      %10059 = OpINotEqual %bool %9996 %uint_0
               OpSelectionMerge %10060 DontFlatten
               OpBranchConditional %10059 %10061 %10060
      %10061 = OpLabel
      %10062 = OpDot %float %10008 %118
      %10063 = OpDot %float %9907 %10008
      %10064 = OpExtInst %float %1 FMix %float_1 %10063 %10062
      %10065 = OpFMul %float %10024 %10064
               OpBranch %10060
      %10060 = OpLabel
      %10066 = OpPhi %float %float_1 %10058 %10065 %10061
      %10067 = OpFAdd %float %10066 %10066
      %10068 = OpFOrdGreaterThan %bool %10067 %float_0
               OpSelectionMerge %10069 DontFlatten
               OpBranchConditional %10068 %10070 %10069
      %10070 = OpLabel
      %10071 = OpFMul %float %float_0_5 %9982
      %10072 = OpVectorTimesScalar %v3float %9983 %10071
      %10073 = OpFSub %v3float %10025 %10072
      %10074 = OpFAdd %v3float %10025 %10072
      %10075 = OpExtInst %float %1 NMax %8428 %8426
      %10076 = OpFOrdGreaterThan %bool %9982 %float_0
               OpSelectionMerge %10077 DontFlatten
               OpBranchConditional %10076 %10078 %10079
      %10079 = OpLabel
      %10080 = OpDot %float %10073 %10073
      %10081 = OpFAdd %float %10080 %float_1
      %10082 = OpFDiv %float %float_1 %10081
      %10083 = OpExtInst %float %1 InverseSqrt %10080
      %10084 = OpVectorTimesScalar %v3float %10073 %10083
      %10085 = OpDot %float %8451 %10084
               OpBranch %10077
      %10078 = OpLabel
      %10086 = OpDot %float %10073 %10073
      %10087 = OpDot %float %10074 %10074
      %10088 = OpExtInst %float %1 InverseSqrt %10086
      %10089 = OpExtInst %float %1 InverseSqrt %10087
      %10090 = OpFMul %float %10088 %10089
      %10091 = OpDot %float %10073 %10074
      %10092 = OpFMul %float %10091 %10090
      %10093 = OpExtInst %float %1 Fma %10092 %float_0_5 %float_0_5
      %10094 = OpExtInst %float %1 Fma %10088 %10089 %10093
      %10095 = OpFDiv %float %10090 %10094
      %10096 = OpDot %float %8451 %10073
      %10097 = OpDot %float %8451 %10074
      %10098 = OpFMul %float %10097 %10089
      %10099 = OpExtInst %float %1 Fma %10096 %10088 %10098
      %10100 = OpFMul %float %float_0_5 %10099
               OpBranch %10077
      %10077 = OpLabel
      %10101 = OpPhi %float %float_1 %10079 %10092 %10078
      %10102 = OpPhi %float %10085 %10079 %10100 %10078
      %10103 = OpPhi %float %10082 %10079 %10095 %10078
      %10104 = OpFOrdGreaterThan %bool %9978 %float_0
               OpSelectionMerge %10105 None
               OpBranchConditional %10104 %10106 %10105
      %10106 = OpLabel
      %10107 = OpFMul %float %9978 %9978
      %10108 = OpFMul %float %10107 %10103
      %10109 = OpExtInst %float %1 FClamp %10108 %float_0 %float_1
      %10110 = OpExtInst %float %1 Sqrt %10109
      %10111 = OpFOrdLessThan %bool %10102 %10110
               OpSelectionMerge %10112 None
               OpBranchConditional %10111 %10113 %10112
      %10113 = OpLabel
      %10114 = OpFNegate %float %10110
      %10115 = OpExtInst %float %1 NMax %10102 %10114
      %10116 = OpFAdd %float %10110 %10115
      %10117 = OpFMul %float %10116 %10116
      %10118 = OpFMul %float %float_4 %10110
      %10119 = OpFDiv %float %10117 %10118
               OpBranch %10112
      %10112 = OpLabel
      %10120 = OpPhi %float %10102 %10106 %10119 %10113
               OpBranch %10105
      %10105 = OpLabel
      %10121 = OpPhi %float %10102 %10077 %10120 %10112
      %10122 = OpExtInst %float %1 FClamp %10121 %float_0 %float_1
      %10123 = OpSelect %float %9987 %10103 %float_1
               OpSelectionMerge %10124 None
               OpBranchConditional %10076 %10125 %10124
      %10125 = OpLabel
      %10126 = OpFNegate %v3float %663
      %10127 = OpExtInst %v3float %1 Reflect %10126 %8451
      %10128 = OpFSub %v3float %10074 %10073
      %10129 = OpDot %float %10127 %10128
      %10130 = OpVectorTimesScalar %v3float %10127 %10129
      %10131 = OpFSub %v3float %10130 %10128
      %10132 = OpDot %float %10073 %10131
      %10133 = OpFMul %float %10129 %10129
      %10134 = OpFNegate %float %10133
      %10135 = OpExtInst %float %1 Fma %9982 %9982 %10134
      %10136 = OpFDiv %float %10132 %10135
      %10137 = OpExtInst %float %1 FClamp %10136 %float_0 %float_1
      %10138 = OpVectorTimesScalar %v3float %10128 %10137
      %10139 = OpFAdd %v3float %10073 %10138
               OpBranch %10124
      %10124 = OpLabel
      %10140 = OpPhi %v3float %10073 %10105 %10139 %10125
      %10141 = OpDot %float %10140 %10140
      %10142 = OpExtInst %float %1 InverseSqrt %10141
      %10143 = OpVectorTimesScalar %v3float %10140 %10142
      %10144 = OpExtInst %float %1 NMax %10075 %8426
      %10145 = OpFMul %float %9978 %10142
      %10146 = OpFNegate %float %10144
      %10147 = OpExtInst %float %1 Fma %10146 %10144 %float_1
      %10148 = OpFMul %float %10145 %10147
      %10149 = OpExtInst %float %1 FClamp %10148 %float_0 %float_1
      %10150 = OpFMul %float %9986 %10142
      %10151 = OpExtInst %float %1 FClamp %10150 %float_0 %float_1
      %10152 = OpExtInst %float %1 NMax %9982 %9978
      %10153 = OpFNegate %float %10152
      %10154 = OpExtInst %float %1 Fma %10153 %float_0_0500000007 %float_1
      %10155 = OpExtInst %float %1 FClamp %10154 %float_0 %float_1
      %10156 = OpBitcast %uint %10155
      %10157 = OpShiftLeftLogical %uint %10156 %uint_1
      %10158 = OpBitwiseOr %uint %uint_0 %10157
      %10159 = OpDot %float %8451 %10143
      %10160 = OpDot %float %8451 %663
      %10161 = OpDot %float %663 %10143
      %10162 = OpExtInst %float %1 Fma %float_2 %10161 %float_2
      %10163 = OpExtInst %float %1 InverseSqrt %10162
      %10164 = OpFAdd %float %10159 %10160
      %10165 = OpFMul %float %10164 %10163
      %10166 = OpExtInst %float %1 FClamp %10165 %float_0 %float_1
      %10167 = OpExtInst %float %1 Fma %10163 %10161 %10163
      %10168 = OpExtInst %float %1 FClamp %10167 %float_0 %float_1
      %10169 = OpFOrdGreaterThan %bool %10149 %float_0
               OpSelectionMerge %10170 None
               OpBranchConditional %10169 %10171 %10170
      %10171 = OpLabel
      %10172 = OpFNegate %float %10149
      %10173 = OpExtInst %float %1 Fma %10172 %10149 %float_1
      %10174 = OpExtInst %float %1 Sqrt %10173
      %10175 = OpFMul %float %float_2 %10159
      %10176 = OpFNegate %float %10161
      %10177 = OpExtInst %float %1 Fma %10175 %10160 %10176
      %10178 = OpFOrdGreaterThanEqual %bool %10177 %10174
               OpSelectionMerge %10179 None
               OpBranchConditional %10178 %10180 %10181
      %10181 = OpLabel
      %10182 = OpFNegate %float %10177
      %10183 = OpExtInst %float %1 Fma %10182 %10177 %float_1
      %10184 = OpExtInst %float %1 InverseSqrt %10183
      %10185 = OpFMul %float %10149 %10184
      %10186 = OpExtInst %float %1 Fma %10182 %10159 %10160
      %10187 = OpFMul %float %10185 %10186
      %10188 = OpFMul %float %float_2 %10160
      %10189 = OpExtInst %float %1 Fma %10188 %10160 %float_n1
      %10190 = OpExtInst %float %1 Fma %10182 %10161 %10189
      %10191 = OpFMul %float %10185 %10190
      %10192 = OpFNegate %float %10159
      %10193 = OpExtInst %float %1 Fma %10192 %10159 %float_1
      %10194 = OpFNegate %float %10160
      %10195 = OpExtInst %float %1 Fma %10194 %10160 %10193
      %10196 = OpExtInst %float %1 Fma %10176 %10161 %10195
      %10197 = OpFMul %float %10175 %10160
      %10198 = OpExtInst %float %1 Fma %10197 %10161 %10196
      %10199 = OpExtInst %float %1 FClamp %10198 %float_0 %float_1
      %10200 = OpExtInst %float %1 Sqrt %10199
      %10201 = OpFMul %float %10185 %10200
      %10202 = OpFMul %float %10201 %float_2
      %10203 = OpFMul %float %10202 %10160
      %10204 = OpExtInst %float %1 Fma %10159 %10174 %10160
      %10205 = OpExtInst %float %1 Fma %10185 %10186 %10204
      %10206 = OpExtInst %float %1 Fma %10161 %10174 %float_1
      %10207 = OpExtInst %float %1 Fma %10185 %10190 %10206
      %10208 = OpFMul %float %10201 %10207
      %10209 = OpFMul %float %10205 %10207
      %10210 = OpFMul %float %10203 %10205
      %10211 = OpFMul %float %float_0_25 %10203
      %10212 = OpFMul %float %10211 %10205
      %10213 = OpExtInst %float %1 Fma %float_n0_5 %10208 %10212
      %10214 = OpFMul %float %10209 %10213
      %10215 = OpFMul %float %10208 %float_n2
      %10216 = OpExtInst %float %1 Fma %10203 %10205 %10215
      %10217 = OpFMul %float %10210 %10216
      %10218 = OpExtInst %float %1 Fma %10208 %10208 %10217
      %10219 = OpFMul %float %10207 %10207
      %10220 = OpExtInst %float %1 Fma %10161 %10174 %10207
      %10221 = OpExtInst %float %1 Fma %float_n0_5 %10220 %float_n0_5
      %10222 = OpFMul %float %10209 %10221
      %10223 = OpExtInst %float %1 Fma %10204 %10219 %10222
      %10224 = OpExtInst %float %1 Fma %10205 %10223 %10218
      %10225 = OpFMul %float %float_2 %10214
      %10226 = OpFMul %float %10214 %10214
      %10227 = OpExtInst %float %1 Fma %10224 %10224 %10226
      %10228 = OpFDiv %float %10225 %10227
      %10229 = OpFMul %float %10228 %10224
      %10230 = OpFNegate %float %10228
      %10231 = OpExtInst %float %1 Fma %10230 %10214 %float_1
      %10232 = OpFMul %float %10229 %10201
      %10233 = OpExtInst %float %1 Fma %10231 %10187 %10232
      %10234 = OpFMul %float %10229 %10203
      %10235 = OpExtInst %float %1 Fma %10231 %10191 %10234
      %10236 = OpExtInst %float %1 Fma %10159 %10174 %10233
      %10237 = OpExtInst %float %1 Fma %10161 %10174 %10235
      %10238 = OpExtInst %float %1 Fma %float_2 %10237 %float_2
      %10239 = OpExtInst %float %1 InverseSqrt %10238
      %10240 = OpFAdd %float %10236 %10160
      %10241 = OpFMul %float %10240 %10239
      %10242 = OpExtInst %float %1 FClamp %10241 %float_0 %float_1
      %10243 = OpExtInst %float %1 Fma %10239 %10237 %10239
      %10244 = OpExtInst %float %1 FClamp %10243 %float_0 %float_1
               OpBranch %10179
      %10180 = OpLabel
      %10245 = OpExtInst %float %1 FAbs %10160
               OpBranch %10179
      %10179 = OpLabel
      %10246 = OpPhi %float %10242 %10181 %float_1 %10180
      %10247 = OpPhi %float %10244 %10181 %10245 %10180
               OpBranch %10170
      %10170 = OpLabel
      %10248 = OpPhi %float %10166 %10124 %10246 %10179
      %10249 = OpPhi %float %10168 %10124 %10247 %10179
      %10250 = OpExtInst %float %1 FAbs %10160
      %10251 = OpFAdd %float %10250 %float_9_99999975en06
      %10252 = OpExtInst %float %1 FClamp %10251 %float_0 %float_1
      %10253 = OpFMul %float %10075 %10075
      %10254 = OpFMul %float %10253 %10253
      %10255 = OpShiftRightLogical %uint %10158 %uint_1
      %10256 = OpBitcast %float %10255
      %10257 = OpExtInst %float %1 FClamp %10160 %float_0 %float_1
      %10258 = OpExtInst %float %1 FClamp %10122 %float_0 %float_1
      %10259 = OpExtInst %float %1 FClamp %10168 %float_0 %float_1
      %10260 = OpExtInst %float %1 FClamp %10166 %float_0 %float_1
      %10261 = OpBitcast %int %10254
      %10262 = OpISub %int %int_2129859010 %10261
      %10263 = OpBitcast %float %10262
      %10264 = OpExtInst %float %1 Fma %float_2 %10263 %float_n1
      %10265 = OpExtInst %float %1 Log2 %10264
      %10266 = OpFMul %float %float_0_055555556 %10265
      %10267 = OpExtInst %float %1 FClamp %10266 %float_0 %float_1
      %10268 = OpFSub %float %float_1 %10259
      %10269 = OpFMul %float %10268 %10268
      %10270 = OpFMul %float %10269 %10269
      %10271 = OpExtInst %float %1 Fma %10270 %10268 %10259
      %10272 = OpFSub %float %float_1 %10257
      %10273 = OpFMul %float %10272 %10272
      %10274 = OpFMul %float %10273 %10273
      %10275 = OpFMul %float %10274 %10272
      %10276 = OpExtInst %float %1 Fma %float_n0_75 %10275 %float_1
      %10277 = OpFSub %float %float_1 %10258
      %10278 = OpFMul %float %10277 %10277
      %10279 = OpFMul %float %10278 %10278
      %10280 = OpFMul %float %10279 %10277
      %10281 = OpExtInst %float %1 Fma %float_n0_75 %10280 %float_1
      %10282 = OpFMul %float %10276 %10281
      %10283 = OpExtInst %float %1 Fma %float_2_20000005 %10267 %float_n0_5
      %10284 = OpExtInst %float %1 FClamp %10283 %float_0 %float_1
      %10285 = OpExtInst %float %1 FMix %10271 %10282 %10284
      %10286 = OpExtInst %float %1 Fma %float_34_5 %10267 %float_n59
      %10287 = OpExtInst %float %1 Fma %10286 %10267 %float_24_5
      %10288 = OpFMul %float %10287 %10259
      %10289 = OpExtInst %float %1 Fma %float_73_1999969 %10267 %float_n21_2000008
      %10290 = OpExtInst %float %1 NMax %10289 %float_8_89999962
      %10291 = OpFNegate %float %10290
      %10292 = OpBitcast %int %10260
      %10293 = OpShiftRightArithmetic %int %10292 %int_1
      %10294 = OpIAdd %int %int_532487669 %10293
      %10295 = OpBitcast %float %10294
      %10296 = OpFMul %float %10291 %10295
      %10297 = OpExtInst %float %1 Exp2 %10296
      %10298 = OpFMul %float %10288 %10297
      %10299 = OpExtInst %float %1 Fma %10298 %10256 %10285
      %10300 = OpFMul %float %float_0_318309873 %10299
      %10301 = OpVectorTimesScalar %v3float %8724 %10300
      %10302 = OpFMul %float %10123 %10122
      %10303 = OpVectorTimesScalar %v3float %128 %10302
      %10304 = OpFMul %v3float %10301 %10303
      %10305 = OpBitwiseAnd %uint %10158 %uint_1
      %10306 = OpIEqual %bool %10305 %uint_1
               OpSelectionMerge %10307 None
               OpBranchConditional %10306 %10308 %10309
      %10309 = OpLabel
      %10310 = OpFOrdGreaterThan %bool %10151 %float_0
               OpSelectionMerge %10311 None
               OpBranchConditional %10310 %10312 %10311
      %10312 = OpLabel
      %10313 = OpFMul %float %10151 %10151
      %10314 = OpExtInst %float %1 Fma %10249 %float_3_5999999 %float_0_400000006
      %10315 = OpFDiv %float %10313 %10314
      %10316 = OpExtInst %float %1 Fma %10253 %10253 %10315
      %10317 = OpExtInst %float %1 FClamp %10316 %float_0 %float_1
               OpBranch %10311
      %10311 = OpLabel
      %10318 = OpPhi %float %10254 %10309 %10317 %10312
               OpSelectionMerge %10319 None
               OpBranchConditional %10169 %10320 %10319
      %10320 = OpLabel
      %10321 = OpFMul %float %float_0_25 %10149
      %10322 = OpBitcast %int %10318
      %10323 = OpShiftRightArithmetic %int %10322 %int_1
      %10324 = OpIAdd %int %int_532487669 %10323
      %10325 = OpBitcast %float %10324
      %10326 = OpExtInst %float %1 Fma %float_3 %10325 %10149
      %10327 = OpFMul %float %10321 %10326
      %10328 = OpFAdd %float %10249 %float_0_00100000005
      %10329 = OpFDiv %float %10327 %10328
      %10330 = OpFAdd %float %10318 %10329
      %10331 = OpFDiv %float %10318 %10330
               OpBranch %10319
      %10319 = OpLabel
      %10332 = OpPhi %float %float_1 %10311 %10331 %10320
      %10333 = OpPhi %float %10318 %10311 %10330 %10320
      %10334 = OpFOrdLessThan %bool %10101 %float_1
               OpSelectionMerge %10335 None
               OpBranchConditional %10334 %10336 %10335
      %10336 = OpLabel
      %10337 = OpFSub %float %float_1_00010002 %10101
      %10338 = OpFAdd %float %float_1 %10101
      %10339 = OpFDiv %float %10337 %10338
      %10340 = OpExtInst %float %1 Sqrt %10339
      %10341 = OpFMul %float %float_0_25 %10340
      %10342 = OpBitcast %int %10333
      %10343 = OpShiftRightArithmetic %int %10342 %int_1
      %10344 = OpIAdd %int %int_532487669 %10343
      %10345 = OpBitcast %float %10344
      %10346 = OpExtInst %float %1 Fma %float_3 %10345 %10340
      %10347 = OpFMul %float %10341 %10346
      %10348 = OpFAdd %float %10249 %float_0_00100000005
      %10349 = OpFDiv %float %10347 %10348
      %10350 = OpFAdd %float %10333 %10349
      %10351 = OpFDiv %float %10333 %10350
      %10352 = OpExtInst %float %1 Sqrt %10351
      %10353 = OpFMul %float %10332 %10352
               OpBranch %10335
      %10335 = OpLabel
      %10354 = OpPhi %float %10332 %10319 %10353 %10336
      %10355 = OpFNegate %float %10248
      %10356 = OpExtInst %float %1 Fma %10248 %10318 %10355
      %10357 = OpExtInst %float %1 Fma %10356 %10248 %float_1
      %10358 = OpFMul %float %float_3_14159274 %10357
      %10359 = OpFMul %float %10358 %10357
      %10360 = OpFDiv %float %10318 %10359
      %10361 = OpFMul %float %10360 %10354
      %10362 = OpExtInst %float %1 Sqrt %10318
      %10363 = OpFSub %float %float_1 %10362
      %10364 = OpExtInst %float %1 Fma %10252 %10363 %10362
      %10365 = OpExtInst %float %1 Fma %10122 %10363 %10362
      %10366 = OpFMul %float %10252 %10365
      %10367 = OpExtInst %float %1 Fma %10122 %10364 %10366
      %10368 = OpFDiv %float %float_0_5 %10367
      %10369 = OpFSub %float %float_1 %10249
      %10370 = OpFMul %float %10369 %10369
      %10371 = OpFMul %float %10370 %10370
      %10372 = OpFMul %float %10371 %10369
      %10373 = OpCompositeExtract %float %8561 1
      %10374 = OpFMul %float %float_50 %10373
      %10375 = OpExtInst %float %1 FClamp %10374 %float_0 %float_1
      %10376 = OpFMul %float %10375 %10372
      %10377 = OpCompositeConstruct %v3float %10376 %10376 %10376
      %10378 = OpFNegate %float %10371
      %10379 = OpExtInst %float %1 Fma %10378 %10369 %float_1
      %10380 = OpVectorTimesScalar %v3float %8561 %10379
      %10381 = OpFAdd %v3float %10377 %10380
      %10382 = OpFMul %float %10361 %10368
      %10383 = OpVectorTimesScalar %v3float %10381 %10382
      %10384 = OpFMul %v3float %10303 %10383
               OpBranch %10307
      %10308 = OpLabel
               OpBranch %10307
      %10307 = OpLabel
      %10385 = OpPhi %v3float %10384 %10335 %103 %10308
      %10386 = OpCompositeExtract %float %8561 1
      %10387 = OpFMul %float %float_50 %10386
      %10388 = OpExtInst %float %1 FClamp %10387 %float_0 %float_1
      %10389 = OpCompositeConstruct %v3float %10388 %10388 %10388
      %10390 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
      %10391 = OpLoad %type_sampler %View_ShadingEnergySampler
      %10392 = OpCompositeConstruct %v2float %10252 %10075
      %10393 = OpSampledImage %type_sampled_image %10390 %10391
      %10394 = OpImageSampleExplicitLod %v4float %10393 %10392 Lod %float_0
      %10395 = OpAccessChain %_ptr_Uniform_uint %View %uint_42
      %10396 = OpLoad %uint %10395
      %10397 = OpINotEqual %bool %10396 %uint_0
      %10398 = OpCompositeConstruct %v3bool %10397 %10397 %10397
      %10399 = OpCompositeExtract %float %10394 0
      %10400 = OpFSub %float %float_1 %10399
      %10401 = OpFDiv %float %10400 %10399
      %10402 = OpVectorTimesScalar %v3float %8561 %10401
      %10403 = OpFAdd %v3float %128 %10402
      %10404 = OpSelect %v3float %10398 %10403 %128
      %10405 = OpVectorTimesScalar %v3float %8561 %10399
      %10406 = OpFSub %v3float %10389 %8561
      %10407 = OpCompositeExtract %float %10394 1
      %10408 = OpVectorTimesScalar %v3float %10406 %10407
      %10409 = OpFAdd %v3float %10405 %10408
      %10410 = OpFMul %v3float %10404 %10409
      %10411 = OpAccessChain %_ptr_Uniform_uint %View %uint_43
      %10412 = OpLoad %uint %10411
      %10413 = OpINotEqual %bool %10412 %uint_0
      %10414 = OpDot %float %10410 %172
      %10415 = OpFSub %float %float_1 %10414
      %10416 = OpSelect %float %10413 %10415 %float_1
      %10417 = OpVectorTimesScalar %v3float %10304 %10416
      %10418 = OpFMul %v3float %10385 %10404
      %10419 = OpVectorTimesScalar %v3float %10418 %9992
      %10420 = OpVectorTimesScalar %v3float %10055 %10066
      %10421 = OpFMul %v3float %10419 %10420
      %10422 = OpExtInst %v3float %1 Fma %10417 %10420 %103
               OpBranch %10069
      %10069 = OpLabel
      %10423 = OpPhi %v3float %460 %10060 %10422 %10307
      %10424 = OpPhi %v3float %460 %10060 %10421 %10307
               OpBranch %10057
      %10057 = OpLabel
      %10425 = OpPhi %v3float %460 %10044 %10423 %10069
      %10426 = OpPhi %v3float %460 %10044 %10424 %10069
      %10427 = OpCompositeExtract %float %10425 0
      %10428 = OpCompositeExtract %float %10425 1
      %10429 = OpCompositeExtract %float %10425 2
      %10430 = OpCompositeConstruct %v4float %10427 %10428 %10429 %float_0
      %10431 = OpCompositeExtract %float %10426 0
      %10432 = OpCompositeExtract %float %10426 1
      %10433 = OpCompositeExtract %float %10426 2
      %10434 = OpCompositeConstruct %v4float %10431 %10432 %10433 %float_0
      %10435 = OpBitwiseAnd %uint %10023 %8799
      %10436 = OpINotEqual %bool %10435 %uint_0
               OpSelectionMerge %10437 Flatten
               OpBranchConditional %10436 %10438 %10437
      %10438 = OpLabel
      %10439 = OpFAdd %v4float %9923 %10430
      %10440 = OpFAdd %v4float %9926 %10434
               OpBranch %10437
      %10437 = OpLabel
       %9924 = OpPhi %v4float %9923 %10057 %10439 %10438
       %9927 = OpPhi %v4float %9926 %10057 %10440 %10438
               OpBranch %9925
       %9925 = OpLabel
       %9929 = OpIAdd %uint %9928 %uint_1
               OpBranch %9922
       %9931 = OpLabel
      %10441 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_16
      %10442 = OpLoad %uint %10441
      %10443 = OpIEqual %bool %10442 %uint_0
      %10444 = OpCompositeConstruct %v4bool %10443 %10443 %10443 %10443
      %10445 = OpSelect %v4float %10444 %99 %9923
      %10446 = OpSelect %v4float %10444 %99 %9926
      %10447 = OpVectorShuffle %v3float %10445 %10445 0 1 2
      %10448 = OpVectorShuffle %v3float %10446 %10446 0 1 2
      %10449 = OpFAdd %v3float %10447 %10448
      %10450 = OpAccessChain %_ptr_Uniform_float %View %uint_18
      %10451 = OpLoad %float %10450
      %10452 = OpFOrdGreaterThan %bool %10451 %float_0
               OpSelectionMerge %10453 DontFlatten
               OpBranchConditional %10452 %10454 %10453
      %10454 = OpLabel
      %10455 = OpIAdd %uint %8394 %uint_1
      %10456 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10455
      %10457 = OpLoad %v4float %10456
      %10458 = OpVectorShuffle %v3float %10457 %10457 0 1 2
      %10459 = OpIAdd %uint %8394 %uint_18
      %10460 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10459
      %10461 = OpLoad %v4float %10460
      %10462 = OpIAdd %uint %8394 %uint_17
      %10463 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10462
      %10464 = OpLoad %v4float %10463
      %10465 = OpCompositeExtract %float %10464 3
      %10466 = OpVectorShuffle %v3float %10461 %10461 0 1 2
      %10467 = OpIAdd %uint %8394 %uint_24
      %10468 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10467
      %10469 = OpLoad %v4float %10468
      %10470 = OpCompositeExtract %float %10469 3
      %10471 = OpIAdd %uint %8394 %uint_25
      %10472 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10471
      %10473 = OpLoad %v4float %10472
      %10474 = OpCompositeExtract %float %10473 3
      %10475 = OpIAdd %uint %8394 %uint_31
      %10476 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10475
      %10477 = OpLoad %v4float %10476
      %10478 = OpCompositeExtract %float %10477 0
      %10479 = OpCompositeConstruct %v3float %10465 %10470 %10474
      %10480 = OpFSub %v3float %596 %10458
      %10481 = OpFSub %v3float %646 %10466
      %10482 = OpVectorTimesScalar %v3float %10480 %float_2097152
      %10483 = OpFAdd %v3float %10482 %10481
      %10484 = OpExtInst %v3float %1 FAbs %10483
      %10485 = OpFAdd %v3float %10479 %128
      %10486 = OpFOrdGreaterThan %v3bool %10484 %10485
      %10487 = OpAny %bool %10486
               OpSelectionMerge %10488 None
               OpBranchConditional %10487 %10489 %10490
      %10490 = OpLabel
      %10491 = OpFOrdGreaterThan %bool %10478 %float_0
               OpSelectionMerge %10492 None
               OpBranchConditional %10491 %10493 %10492
      %10493 = OpLabel
      %10494 = OpFSub %v3float %645 %585
      %10495 = OpExtInst %v3float %1 FAbs %10494
      %10496 = OpCompositeExtract %float %10495 0
      %10497 = OpCompositeExtract %float %10495 1
      %10498 = OpCompositeExtract %float %10495 2
      %10499 = OpExtInst %float %1 NMax %10497 %10498
      %10500 = OpExtInst %float %1 NMax %10496 %10499
      %10501 = OpFSub %float %10500 %10478
      %10502 = OpExtInst %float %1 FAbs %10501
      %10503 = OpFMul %float %10502 %float_20
      %10504 = OpExtInst %float %1 FClamp %10503 %float_0 %float_1
      %10505 = OpFSub %float %float_1 %10504
      %10506 = OpVectorTimesScalar %v3float %141 %10505
               OpBranch %10492
      %10492 = OpLabel
      %10507 = OpPhi %v3float %103 %10490 %10506 %10493
               OpBranch %10488
      %10489 = OpLabel
      %10508 = OpFMul %v3float %596 %134
      %10509 = OpFMul %v3float %646 %134
      %10510 = OpCompositeExtract %float %10508 0
      %10511 = OpCompositeExtract %float %10509 0
      %10512 = OpCompositeExtract %float %10508 1
      %10513 = OpCompositeExtract %float %10509 1
      %10514 = OpFAdd %float %10510 %10512
      %10515 = OpFAdd %float %10511 %10513
      %10516 = OpCompositeExtract %float %10508 2
      %10517 = OpCompositeExtract %float %10509 2
      %10518 = OpFAdd %float %10514 %10516
      %10519 = OpFAdd %float %10515 %10517
      %10520 = OpFMul %float %10518 %float_4194_3042
      %10521 = OpExtInst %float %1 Fract %10520
      %10522 = OpExtInst %float %1 Fma %10519 %float_0_00200000009 %10521
      %10523 = OpExtInst %float %1 Fract %10522
      %10524 = OpCompositeConstruct %v3float %10523 %10523 %10523
      %10525 = OpFOrdGreaterThan %v3bool %10524 %138
      %10526 = OpSelect %v3float %10525 %128 %103
      %10527 = OpExtInst %v3float %1 FMix %135 %136 %10526
               OpBranch %10488
      %10488 = OpLabel
      %10528 = OpPhi %v3float %103 %10492 %10527 %10489
      %10529 = OpPhi %v3float %10507 %10492 %10527 %10489
               OpBranch %10453
      %10453 = OpLabel
      %10530 = OpPhi %v3float %103 %9931 %10528 %10488
      %10531 = OpPhi %v3float %103 %9931 %10529 %10488
      %10532 = OpFAdd %v3float %10449 %8725
      %10533 = OpFAdd %v3float %10532 %10531
      %10534 = OpVectorShuffle %v3float %620 %620 0 1 2
      %10535 = OpVectorTimesScalar %v3float %10534 %float_3_14159274
      %10536 = OpVectorTimesScalar %v3float %8709 %float_3_14159274
      %10537 = OpDot %float %8451 %663
      %10538 = OpExtInst %float %1 NMax %float_0 %10537
      %10539 = OpLoad %type_2d_image %OpaqueBasePass_PreIntegratedGFTexture
      %10540 = OpLoad %type_sampler %View_SharedBilinearClampedSampler
      %10541 = OpCompositeConstruct %v2float %10538 %8428
      %10542 = OpSampledImage %type_sampled_image %10539 %10540
      %10543 = OpImageSampleExplicitLod %v4float %10542 %10541 Lod %float_0
      %10544 = OpCompositeExtract %float %10543 0
      %10545 = OpVectorTimesScalar %v3float %8561 %10544
      %10546 = OpCompositeExtract %float %8561 1
      %10547 = OpFMul %float %float_50 %10546
      %10548 = OpExtInst %float %1 FClamp %10547 %float_0 %float_1
      %10549 = OpCompositeExtract %float %10543 1
      %10550 = OpFMul %float %10548 %10549
      %10551 = OpCompositeConstruct %v3float %10550 %10550 %10550
      %10552 = OpFAdd %v3float %10545 %10551
      %10553 = OpLoad %type_2d_image %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture
      %10554 = OpAccessChain %_ptr_Uniform_v2float %SingleLayerWater %uint_2
      %10555 = OpLoad %v2float %10554
      %10556 = OpLoad %type_2d_image %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture
      %10557 = OpAccessChain %_ptr_Uniform_v4float %SingleLayerWater %uint_0
      %10558 = OpLoad %v4float %10557
      %10559 = OpVectorShuffle %v2float %10558 %10558 0 1
      %10560 = OpVectorShuffle %v2float %10558 %10558 2 3
      %10561 = OpAccessChain %_ptr_Uniform_v4float %SingleLayerWater %uint_1
      %10562 = OpLoad %v4float %10561
      %10563 = OpFOrdGreaterThan %bool %8452 %float_0
               OpSelectionMerge %10564 None
               OpBranchConditional %10563 %10565 %10564
      %10565 = OpLabel
      %10566 = OpExtInst %float %1 NMin %8541 %float_0_99000001
      %10567 = OpExtInst %float %1 Sqrt %10566
      %10568 = OpFSub %float %float_1 %10567
      %10569 = OpFDiv %float %float_2 %10568
      %10570 = OpFSub %float %10569 %float_1
      %10571 = OpExtInst %v2float %1 FClamp %654 %10559 %10560
      %10572 = OpSampledImage %type_sampled_image %10553 %10540
      %10573 = OpImageSampleExplicitLod %v4float %10572 %10571 Lod %float_0
      %10574 = OpCompositeExtract %float %10573 0
      %10575 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_0
      %10576 = OpLoad %float %10575
      %10577 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_1
      %10578 = OpLoad %float %10577
      %10579 = OpExtInst %float %1 Fma %10574 %10576 %10578
      %10580 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_2
      %10581 = OpLoad %float %10580
      %10582 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_3
      %10583 = OpLoad %float %10582
      %10584 = OpFNegate %float %10583
      %10585 = OpExtInst %float %1 Fma %10574 %10581 %10584
      %10586 = OpFDiv %float %float_1 %10585
      %10587 = OpFAdd %float %10579 %10586
      %10588 = OpCompositeExtract %v4float %590 0
      %10589 = OpVectorShuffle %v3float %10588 %10588 0 1 2
      %10590 = OpCompositeExtract %v4float %590 1
      %10591 = OpVectorShuffle %v3float %10590 %10590 0 1 2
      %10592 = OpCompositeExtract %v4float %590 2
      %10593 = OpVectorShuffle %v3float %10592 %10592 0 1 2
      %10594 = OpCompositeConstruct %mat3v3float %10589 %10591 %10593
      %10595 = OpMatrixTimesVector %v3float %10594 %8451
      %10596 = OpExtInst %v3float %1 Normalize %10595
      %10597 = OpVectorShuffle %v2float %10596 %10596 0 1
      %10598 = OpFSub %float %8378 %float_1
      %10599 = OpVectorTimesScalar %v2float %10597 %10598
      %10600 = OpVectorShuffle %v2float %608 %608 0 1
      %10601 = OpFMul %v2float %10599 %10600
      %10602 = OpVectorShuffle %v2float %610 %610 2 3
      %10603 = OpFMul %v2float %10601 %10602
      %10604 = OpCompositeExtract %float %10562 0
      %10605 = OpCompositeExtract %float %10562 1
      %10606 = OpFMul %float %10605 %10604
      %10607 = OpCompositeConstruct %v2float %10604 %10606
      %10608 = OpVectorShuffle %v2float %10562 %10562 2 3
      %10609 = OpFMul %v2float %10608 %311
      %10610 = OpFMul %v2float %10609 %10607
      %10611 = OpFMul %v2float %10603 %10610
      %10612 = OpFNegate %float %8380
      %10613 = OpFMul %float %8380 %float_n0_5
      %10614 = OpExtInst %float %1 FAbs %10613
      %10615 = OpExtInst %float %1 FClamp %10614 %float_0 %float_50
      %10616 = OpExtInst %float %1 NMax %float_1 %10615
      %10617 = OpFDiv %float %float_1 %10616
      %10618 = OpFSub %float %10587 %649
      %10619 = OpExtInst %float %1 Fma %10618 %10617 %10612
      %10620 = OpExtInst %float %1 FClamp %10619 %float_0 %float_1
      %10621 = OpVectorTimesScalar %v2float %10611 %10620
      %10622 = OpVectorTimesScalar %v2float %10621 %float_4
      %10623 = OpFMul %float %10618 %float_0_0333333351
      %10624 = OpExtInst %float %1 FClamp %10623 %float_0 %float_1
      %10625 = OpVectorTimesScalar %v2float %10622 %10624
      %10626 = OpFAdd %v2float %10571 %10625
      %10627 = OpExtInst %v2float %1 FClamp %10626 %10559 %10560
      %10628 = OpSampledImage %type_sampled_image %10553 %10540
      %10629 = OpImageGather %v4float %10628 %10627 %int_0 None
      %10630 = OpCompositeExtract %float %10629 0
      %10631 = OpExtInst %float %1 Fma %10630 %10576 %10578
      %10632 = OpExtInst %float %1 Fma %10630 %10581 %10584
      %10633 = OpFDiv %float %float_1 %10632
      %10634 = OpFAdd %float %10631 %10633
      %10635 = OpCompositeExtract %float %10629 1
      %10636 = OpExtInst %float %1 Fma %10635 %10576 %10578
      %10637 = OpExtInst %float %1 Fma %10635 %10581 %10584
      %10638 = OpFDiv %float %float_1 %10637
      %10639 = OpFAdd %float %10636 %10638
      %10640 = OpCompositeExtract %float %10629 2
      %10641 = OpExtInst %float %1 Fma %10640 %10576 %10578
      %10642 = OpExtInst %float %1 Fma %10640 %10581 %10584
      %10643 = OpFDiv %float %float_1 %10642
      %10644 = OpFAdd %float %10641 %10643
      %10645 = OpCompositeExtract %float %10629 3
      %10646 = OpExtInst %float %1 Fma %10645 %10576 %10578
      %10647 = OpExtInst %float %1 Fma %10645 %10581 %10584
      %10648 = OpFDiv %float %float_1 %10647
      %10649 = OpFAdd %float %10646 %10648
      %10650 = OpCompositeConstruct %v4float %10634 %10639 %10644 %10649
      %10651 = OpCompositeConstruct %v4float %649 %649 %649 %649
      %10652 = OpFOrdLessThan %v4bool %10650 %10651
      %10653 = OpAny %bool %10652
               OpSelectionMerge %10654 None
               OpBranchConditional %10653 %10655 %10656
      %10656 = OpLabel
      %10657 = OpFMul %v2float %10627 %10555
      %10658 = OpVectorTimesScalar %v2float %10657 %float_1
      %10659 = OpFSub %v2float %10658 %150
      %10660 = OpExtInst %v2float %1 Fract %10659
      %10661 = OpVectorShuffle %v4float %10629 %10629 3 2 0 1
      %10662 = OpCompositeExtract %float %10660 0
      %10663 = OpFSub %float %float_1 %10662
      %10664 = OpCompositeExtract %float %10660 1
      %10665 = OpFSub %float %float_1 %10664
      %10666 = OpFMul %float %10663 %10665
      %10667 = OpCompositeInsert %v4float %10666 %542 0
      %10668 = OpFMul %float %10662 %10665
      %10669 = OpCompositeInsert %v4float %10668 %10667 1
      %10670 = OpFMul %float %10663 %10664
      %10671 = OpCompositeInsert %v4float %10670 %10669 2
      %10672 = OpFMul %float %10662 %10664
      %10673 = OpCompositeInsert %v4float %10672 %10671 3
      %10674 = OpDot %float %10661 %10673
      %10675 = OpExtInst %float %1 Fma %10674 %10576 %10578
      %10676 = OpExtInst %float %1 Fma %10674 %10581 %10584
      %10677 = OpFDiv %float %float_1 %10676
      %10678 = OpFAdd %float %10675 %10677
               OpBranch %10654
      %10655 = OpLabel
               OpBranch %10654
      %10654 = OpLabel
      %10679 = OpPhi %float %10678 %10656 %10587 %10655
      %10680 = OpPhi %float %10674 %10656 %10574 %10655
      %10681 = OpCompositeConstruct %v2bool %10653 %10653
      %10682 = OpSelect %v2float %10681 %10571 %10627
      %10683 = OpExtInst %float %1 NMax %float_9_99999996en13 %10680
      %10684 = OpFSub %float %10679 %649
      %10685 = OpExtInst %float %1 NMax %float_0 %10684
      %10686 = OpVectorShuffle %v3float %8437 %8437 0 1 2
      %10687 = OpVectorShuffle %v3float %8436 %459 0 1 2
      %10688 = OpFMul %v3float %10686 %10687
      %10689 = OpVectorShuffle %v3float %8439 %459 0 1 2
      %10690 = OpFMul %float %10685 %float_0_0199999996
      %10691 = OpExtInst %float %1 FClamp %10690 %float_0 %float_1
      %10692 = OpCompositeConstruct %v3float %10691 %10691 %10691
      %10693 = OpExtInst %v3float %1 FMix %128 %10689 %10692
      %10694 = OpExtInst %v3float %1 NMax %10687 %190
      %10695 = OpFDiv %float %float_1 %10570
               OpSelectionMerge %10696 None
               OpSwitch %uint_0 %10697
      %10697 = OpLabel
      %10698 = OpDot %float %663 %8451
      %10699 = OpFMul %float %10695 %10695
      %10700 = OpFNegate %float %10698
      %10701 = OpExtInst %float %1 Fma %10700 %10698 %float_1
      %10702 = OpFNegate %float %10699
      %10703 = OpExtInst %float %1 Fma %10702 %10701 %float_1
      %10704 = OpFOrdLessThan %bool %10703 %float_0
               OpSelectionMerge %10705 None
               OpBranchConditional %10704 %10706 %10705
      %10706 = OpLabel
      %10707 = OpFNegate %v3float %663
      %10708 = OpExtInst %v3float %1 Reflect %10707 %8451
               OpBranch %10696
      %10705 = OpLabel
      %10709 = OpFOrdGreaterThanEqual %bool %10698 %float_0
      %10710 = OpSelect %float %10709 %float_1 %float_n1
      %10711 = OpFNegate %float %10710
      %10712 = OpExtInst %float %1 Sqrt %10703
      %10713 = OpFMul %float %10711 %10712
      %10714 = OpExtInst %float %1 Fma %10695 %10698 %10713
      %10715 = OpVectorTimesScalar %v3float %8451 %10714
      %10716 = OpVectorTimesScalar %v3float %663 %10695
      %10717 = OpFSub %v3float %10715 %10716
               OpBranch %10696
      %10696 = OpLabel
      %10718 = OpPhi %v3float %10708 %10706 %10717 %10705
      %10719 = OpPhi %bool %false %10706 %true %10705
               OpSelectionMerge %10720 None
               OpBranchConditional %10719 %10721 %10720
      %10721 = OpLabel
      %10722 = OpFNegate %v3float %622
      %10723 = OpDot %float %10722 %10718
      %10724 = OpExtInst %float %1 Fma %float_1_54999995 %float_0 %float_n0
      %10725 = OpExtInst %float %1 Fma %10724 %10723 %float_1
      %10726 = OpFNegate %float %10724
      %10727 = OpExtInst %float %1 Fma %10726 %10724 %float_1
      %10728 = OpFMul %float %float_12_566371 %10725
      %10729 = OpFMul %float %10728 %10725
      %10730 = OpFDiv %float %10727 %10729
               OpBranch %10720
      %10720 = OpLabel
      %10731 = OpPhi %float %float_0 %10696 %10730 %10721
      %10732 = OpCompositeConstruct %v4float %637 %638 %10683 %float_1
      %10733 = OpMatrixTimesVector %v4float %594 %10732
      %10734 = OpVectorShuffle %v3float %10733 %10733 0 1 2
      %10735 = OpCompositeExtract %float %10733 3
      %10736 = OpCompositeConstruct %v3float %10735 %10735 %10735
      %10737 = OpFDiv %v3float %10734 %10736
      %10738 = OpFSub %v3float %10737 %604
      %10739 = OpFSub %v3float %596 %596
      %10740 = OpFSub %v3float %646 %10738
      %10741 = OpVectorTimesScalar %v3float %10739 %float_2097152
      %10742 = OpFAdd %v3float %10741 %10740
      %10743 = OpCompositeExtract %float %10742 2
      %10744 = OpExtInst %float %1 NMax %float_0 %10743
      %10745 = OpFNegate %float %10744
      %10746 = OpVectorTimesScalar %v3float %10687 %10745
      %10747 = OpExtInst %v3float %1 Exp %10746
      %10748 = OpSampledImage %type_sampled_image %10556 %10540
      %10749 = OpImageSampleExplicitLod %v4float %10748 %10682 Lod %float_0
      %10750 = OpVectorShuffle %v3float %10749 %10749 0 1 2
      %10751 = OpVectorTimesScalar %v3float %10747 %612
      %10752 = OpFMul %v3float %10751 %10750
      %10753 = OpVectorTimesScalar %v3float %10535 %10731
      %10754 = OpVectorTimesScalar %v3float %10536 %float_0_0795774683
      %10755 = OpSelect %float %8768 %float_0 %float_1
      %10756 = OpSelect %float %8768 %float_1 %float_0
      %10757 = OpVectorTimesScalar %v3float %10687 %10685
      %10758 = OpFNegate %v3float %10757
      %10759 = OpExtInst %v3float %1 Exp %10758
      %10760 = OpVectorTimesScalar %v3float %10753 %9909
      %10761 = OpVectorTimesScalar %v3float %10760 %10755
      %10762 = OpFAdd %v3float %10754 %10761
      %10763 = OpFSub %v3float %128 %10759
      %10764 = OpFMul %v3float %10688 %10763
      %10765 = OpFDiv %v3float %10764 %10694
      %10766 = OpExtInst %v3float %1 FClamp %10765 %103 %128
      %10767 = OpFMul %v3float %10762 %10766
      %10768 = OpVectorTimesScalar %v3float %10760 %10756
      %10769 = OpFMul %v3float %10768 %10766
      %10770 = OpFSub %v3float %128 %10552
      %10771 = OpVectorShuffle %v3float %128 %10770 3 4 5
      %10772 = OpFMul %v3float %10769 %10771
      %10773 = OpVectorTimesScalar %v3float %10772 %8452
      %10774 = OpFAdd %v3float %9908 %10773
      %10775 = OpVectorShuffle %v3float %540 %128 3 4 5
      %10776 = OpFMul %v3float %10759 %10775
      %10777 = OpFMul %v3float %10752 %10693
      %10778 = OpFMul %v3float %10776 %10777
      %10779 = OpExtInst %v3float %1 Fma %10767 %10771 %10778
      %10780 = OpVectorTimesScalar %v3float %10779 %8452
               OpBranch %10564
      %10564 = OpLabel
      %10781 = OpPhi %v3float %9908 %10453 %10774 %10720
      %10782 = OpPhi %v3float %103 %10453 %10780 %10720
      %10783 = OpFAdd %v3float %10533 %10782
      %10784 = OpExtInst %v3float %1 Normalize %8450
      %10785 = OpConvertFToU %v2uint %627
      %10786 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %10787 = OpExtInst %v3float %1 FClamp %8440 %103 %128
      %10788 = OpExtInst %v3float %1 Fma %10787 %8414 %8415
      %10789 = OpCompositeInsert %v4float %float_0 %8431 0
      %10790 = OpExtInst %float %1 FClamp %8420 %float_0 %float_1
      %10791 = OpExtInst %float %1 Fma %10790 %8418 %8419
      %10792 = OpCompositeInsert %v4float %10791 %10789 1
      %10793 = OpExtInst %float %1 Fma %8428 %8422 %8423
      %10794 = OpExtInst %float %1 NMax %8426 %10793
      %10795 = OpExtInst %float %1 FClamp %10794 %float_0 %float_1
      %10796 = OpCompositeInsert %v4float %10795 %10792 2
      %10797 = OpExtInst %float %1 FClamp %8430 %float_0 %float_1
      %10798 = OpCompositeInsert %v4float %10797 %10796 3
      %10799 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
      %10800 = OpLoad %type_sampler %View_ShadingEnergySampler
      %10801 = OpAccessChain %_ptr_Uniform_uint %View %uint_42
      %10802 = OpLoad %uint %10801
      %10803 = OpINotEqual %bool %10802 %uint_0
      %10804 = OpCompositeConstruct %v3bool %10803 %10803 %10803
      %10805 = OpAny %bool %557
               OpSelectionMerge %10806 None
               OpBranchConditional %10805 %10807 %10806
      %10807 = OpLabel
               OpSelectionMerge %10808 None
               OpSwitch %uint_4 %10808 0 %10809 3 %10810 5 %10811 4 %10812
      %10812 = OpLabel
      %10813 = OpExtInst %v3float %1 Fma %103 %128 %103
      %10814 = OpExtInst %float %1 Fma %float_1 %10795 %461
               OpSelectionMerge %10815 None
               OpSwitch %uint_0 %10816
      %10816 = OpLabel
               OpSelectionMerge %10817 None
               OpSwitch %uint_4 %10817 0 %10818 3 %10819 5 %10820 4 %10821
      %10821 = OpLabel
      %10822 = OpVectorShuffle %v3float %10788 %459 0 1 2
               OpBranch %10817
      %10820 = OpLabel
      %10823 = OpVectorShuffle %v3float %10788 %459 0 1 2
               OpBranch %10817
      %10819 = OpLabel
      %10824 = OpVectorShuffle %v3float %10788 %459 0 1 2
               OpBranch %10817
      %10818 = OpLabel
      %10825 = OpVectorShuffle %v3float %10788 %459 0 1 2
      %10826 = OpVectorShuffle %v3float %10798 %10798 0 1 2
      %10827 = OpExtInst %float %1 NMax %10791 %10795
      %10828 = OpExtInst %float %1 NMax %float_0 %10827
      %10829 = OpFSub %float %10828 %float_0_0799999982
      %10830 = OpFMul %float %10829 %float_3_125
      %10831 = OpExtInst %float %1 FClamp %10830 %float_0 %float_1
      %10832 = OpCompositeConstruct %v3float %10831 %10831 %10831
      %10833 = OpExtInst %v3float %1 FMix %10825 %10826 %10832
               OpBranch %10817
      %10817 = OpLabel
      %10834 = OpPhi %v3float %457 %10816 %10822 %10821 %10823 %10820 %10824 %10819 %10833 %10818
      %10835 = OpPhi %bool %false %10816 %true %10821 %true %10820 %true %10819 %true %10818
               OpSelectionMerge %10836 None
               OpBranchConditional %10835 %10815 %10836
      %10836 = OpLabel
               OpBranch %10815
      %10815 = OpLabel
      %10837 = OpPhi %v3float %10834 %10817 %103 %10836
      %10838 = OpVectorTimesScalar %v3float %10837 %float_1
      %10839 = OpBitwiseAnd %uint %8540 %uint_4294967288
      %10840 = OpBitwiseOr %uint %10839 %uint_4
               OpBranch %10808
      %10811 = OpLabel
      %10841 = OpBitwiseOr %uint %8540 %uint_0
      %10842 = OpBitwiseAnd %uint %10841 %uint_4294967288
      %10843 = OpBitwiseOr %uint %10842 %uint_6
               OpBranch %10808
      %10810 = OpLabel
      %10844 = OpExtInst %v3float %1 Fma %103 %128 %103
               OpSelectionMerge %10845 None
               OpSwitch %uint_0 %10846
      %10846 = OpLabel
               OpSelectionMerge %10847 None
               OpSwitch %uint_4 %10847 0 %10848 3 %10849 5 %10850 4 %10851
      %10851 = OpLabel
      %10852 = OpVectorShuffle %v3float %10788 %459 0 1 2
               OpBranch %10847
      %10850 = OpLabel
      %10853 = OpVectorShuffle %v3float %10788 %459 0 1 2
               OpBranch %10847
      %10849 = OpLabel
      %10854 = OpVectorShuffle %v3float %10788 %459 0 1 2
               OpBranch %10847
      %10848 = OpLabel
      %10855 = OpVectorShuffle %v3float %10788 %459 0 1 2
      %10856 = OpVectorShuffle %v3float %10798 %10798 0 1 2
      %10857 = OpExtInst %float %1 NMax %10791 %10795
      %10858 = OpExtInst %float %1 NMax %float_0 %10857
      %10859 = OpFSub %float %10858 %float_0_0799999982
      %10860 = OpFMul %float %10859 %float_3_125
      %10861 = OpExtInst %float %1 FClamp %10860 %float_0 %float_1
      %10862 = OpCompositeConstruct %v3float %10861 %10861 %10861
      %10863 = OpExtInst %v3float %1 FMix %10855 %10856 %10862
               OpBranch %10847
      %10847 = OpLabel
      %10864 = OpPhi %v3float %457 %10846 %10852 %10851 %10853 %10850 %10854 %10849 %10863 %10848
      %10865 = OpPhi %bool %false %10846 %true %10851 %true %10850 %true %10849 %true %10848
               OpSelectionMerge %10866 None
               OpBranchConditional %10865 %10845 %10866
      %10866 = OpLabel
               OpBranch %10845
      %10845 = OpLabel
      %10867 = OpPhi %v3float %10864 %10847 %103 %10866
      %10868 = OpVectorTimesScalar %v3float %10867 %float_1
      %10869 = OpBitwiseAnd %uint %8540 %uint_4294967288
      %10870 = OpBitwiseOr %uint %10869 %uint_5
               OpBranch %10808
      %10809 = OpLabel
      %10871 = OpExtInst %v3float %1 Fma %103 %128 %103
      %10872 = OpAll %bool %557
      %10873 = OpLogicalAnd %bool %true %10872
      %10874 = OpLogicalAnd %bool %10873 %true
               OpSelectionMerge %10875 None
               OpSwitch %uint_0 %10876
      %10876 = OpLabel
               OpSelectionMerge %10877 None
               OpSwitch %uint_4 %10877 0 %10878 3 %10879 5 %10880 4 %10881
      %10881 = OpLabel
      %10882 = OpVectorShuffle %v3float %10788 %459 0 1 2
               OpBranch %10877
      %10880 = OpLabel
      %10883 = OpVectorShuffle %v3float %10788 %459 0 1 2
               OpBranch %10877
      %10879 = OpLabel
      %10884 = OpVectorShuffle %v3float %10788 %459 0 1 2
               OpBranch %10877
      %10878 = OpLabel
      %10885 = OpVectorShuffle %v3float %10788 %459 0 1 2
      %10886 = OpVectorShuffle %v3float %10798 %10798 0 1 2
      %10887 = OpExtInst %float %1 NMax %10791 %10795
      %10888 = OpExtInst %float %1 NMax %float_0 %10887
      %10889 = OpFSub %float %10888 %float_0_0799999982
      %10890 = OpFMul %float %10889 %float_3_125
      %10891 = OpExtInst %float %1 FClamp %10890 %float_0 %float_1
      %10892 = OpCompositeConstruct %v3float %10891 %10891 %10891
      %10893 = OpExtInst %v3float %1 FMix %10885 %10886 %10892
               OpBranch %10877
      %10877 = OpLabel
      %10894 = OpPhi %v3float %457 %10876 %10882 %10881 %10883 %10880 %10884 %10879 %10893 %10878
      %10895 = OpPhi %bool %false %10876 %true %10881 %true %10880 %true %10879 %true %10878
               OpSelectionMerge %10896 None
               OpBranchConditional %10895 %10875 %10896
      %10896 = OpLabel
               OpBranch %10875
      %10875 = OpLabel
      %10897 = OpPhi %v3float %10894 %10877 %103 %10896
      %10898 = OpVectorTimesScalar %v3float %10897 %float_1
               OpSelectionMerge %10899 None
               OpBranchConditional %false %10900 %10899
      %10900 = OpLabel
               OpSelectionMerge %10901 None
               OpBranchConditional %false %10902 %10901
      %10902 = OpLabel
      %10903 = OpExtInst %float %1 NMax %float_0_0399999991 %float_0_0399999991
      %10904 = OpExtInst %float %1 NMax %float_0_0399999991 %10903
      %10905 = OpFSub %float %10904 %float_0_0799999982
      %10906 = OpFMul %float %10905 %float_3_125
      %10907 = OpExtInst %float %1 FClamp %10906 %float_0 %float_1
      %10908 = OpExtInst %float %1 FMix %float_0 %float_0_0399999991 %10907
      %10909 = OpCompositeConstruct %v3float %10908 %10908 %10908
               OpBranch %10901
      %10901 = OpLabel
      %10910 = OpPhi %v3float %10898 %10900 %10909 %10902
      %10911 = OpPhi %float %461 %10900 %float_0 %10902
               OpBranch %10899
      %10899 = OpLabel
      %10912 = OpPhi %v3float %10898 %10875 %10910 %10901
      %10913 = OpPhi %float %461 %10875 %10911 %10901
      %10914 = OpBitwiseOr %uint %8540 %uint_0
      %10915 = OpBitwiseOr %uint %10914 %uint_0
               OpBranch %10808
      %10808 = OpLabel
      %10916 = OpPhi %v3float %103 %10807 %10813 %10815 %103 %10811 %10844 %10845 %10871 %10899
      %10917 = OpPhi %uint %458 %10807 %uint_2 %10815 %uint_1 %10811 %uint_1 %10845 %uint_1 %10899
      %10918 = OpPhi %bool %true %10807 %false %10815 %false %10811 %false %10845 %10874 %10899
      %10919 = OpPhi %bool %true %10807 %false %10815 %false %10811 %false %10845 %true %10899
      %10920 = OpPhi %v3float %460 %10807 %10838 %10815 %460 %10811 %10868 %10845 %10912 %10899
      %10921 = OpPhi %float %461 %10807 %10814 %10815 %float_1 %10811 %float_1 %10845 %10913 %10899
      %10922 = OpPhi %float %float_0 %10807 %float_1 %10815 %float_1 %10811 %float_1 %10845 %float_1 %10899
      %10923 = OpPhi %uint %8540 %10807 %10840 %10815 %10843 %10811 %10870 %10845 %10915 %10899
      %10924 = OpCompositeConstruct %_arr_v3float_uint_4 %10784 %460 %460 %460
               OpStore %581 %10924
      %10925 = OpAccessChain %_ptr_Function_v3float %581 %uint_0
      %10926 = OpLoad %v3float %10925
      %10927 = OpVectorTimesScalar %v3float %10926 %float_1
               OpBranch %10806
      %10806 = OpLabel
      %10928 = OpPhi %uint %uint_8192 %10564 %uint_8194 %10808
      %10929 = OpPhi %v3float %103 %10564 %10916 %10808
      %10930 = OpPhi %uint %458 %10564 %10917 %10808
      %10931 = OpPhi %uint %8540 %10564 %10923 %10808
      %10932 = OpPhi %bool %true %10564 %10918 %10808
      %10933 = OpPhi %bool %true %10564 %10919 %10808
      %10934 = OpPhi %v3float %460 %10564 %10920 %10808
      %10935 = OpPhi %float %461 %10564 %10921 %10808
      %10936 = OpPhi %v3float %460 %10564 %10927 %10808
      %10937 = OpPhi %float %float_0 %10564 %10922 %10808
      %10938 = OpSelect %uint %10805 %uint_1 %uint_0
      %10939 = OpFOrdGreaterThan %bool %10937 %float_0
      %10940 = OpCompositeConstruct %v3bool %10939 %10939 %10939
      %10941 = OpExtInst %v3float %1 Normalize %10936
      %10942 = OpSelect %v3float %10940 %10941 %103
      %10943 = OpFDiv %float %10935 %10937
      %10944 = OpSelect %float %10939 %10943 %float_0
      %10945 = OpCompositeConstruct %v3float %10937 %10937 %10937
      %10946 = OpFDiv %v3float %10934 %10945
      %10947 = OpSelect %v3float %10940 %10946 %103
               OpSelectionMerge %10948 None
               OpBranchConditional %10933 %10949 %10948
      %10949 = OpLabel
      %10950 = OpIEqual %bool %10938 %uint_1
      %10951 = OpLogicalAnd %bool %10932 %10950
      %10952 = OpSelect %uint %10951 %uint_2 %uint_3
      %10953 = OpSelect %uint %10951 %uint_1 %10952
      %10954 = OpBitwiseAnd %uint %10931 %uint_4294967288
      %10955 = OpBitwiseAnd %uint %10953 %uint_7
      %10956 = OpBitwiseOr %uint %10954 %10955
               OpSelectionMerge %10957 None
               OpBranchConditional %10951 %10958 %10957
      %10958 = OpLabel
      %10959 = OpShiftRightLogical %uint %10928 %uint_6
      %10960 = OpBitwiseAnd %uint %10959 %uint_1
      %10961 = OpINotEqual %bool %10960 %uint_0
               OpSelectionMerge %10962 None
               OpBranchConditional %10961 %10963 %10962
      %10963 = OpLabel
               OpBranch %10962
      %10962 = OpLabel
      %10964 = OpPhi %uint %uint_0 %10958 %uint_1 %10963
      %10965 = OpShiftRightLogical %uint %10928 %uint_9
      %10966 = OpBitwiseAnd %uint %10965 %uint_1
      %10967 = OpINotEqual %bool %10966 %uint_0
      %10968 = OpLogicalAnd %bool %10967 %true
               OpSelectionMerge %10969 None
               OpBranchConditional %10968 %10970 %10969
      %10970 = OpLabel
      %10971 = OpBitwiseOr %uint %10964 %uint_4
               OpBranch %10969
      %10969 = OpLabel
      %10972 = OpPhi %uint %10964 %10962 %10971 %10970
      %10973 = OpShiftRightLogical %uint %10928 %uint_10
      %10974 = OpBitwiseAnd %uint %10973 %uint_1
      %10975 = OpINotEqual %bool %10974 %uint_0
               OpSelectionMerge %10976 None
               OpBranchConditional %10975 %10977 %10976
      %10977 = OpLabel
      %10978 = OpBitwiseOr %uint %10972 %uint_8
               OpBranch %10976
      %10976 = OpLabel
      %10979 = OpPhi %uint %10972 %10969 %10978 %10977
      %10980 = OpShiftRightLogical %uint %10928 %uint_2
      %10981 = OpBitwiseAnd %uint %10980 %uint_7
      %10982 = OpIEqual %bool %10981 %uint_4
               OpSelectionMerge %10983 None
               OpBranchConditional %10982 %10984 %10983
      %10984 = OpLabel
      %10985 = OpBitwiseOr %uint %10979 %uint_16
               OpBranch %10983
      %10983 = OpLabel
      %10986 = OpPhi %uint %10979 %10976 %10985 %10984
      %10987 = OpIEqual %bool %10981 %uint_1
               OpSelectionMerge %10988 None
               OpBranchConditional %10987 %10989 %10988
      %10989 = OpLabel
      %10990 = OpBitwiseOr %uint %10986 %uint_32
               OpBranch %10988
      %10988 = OpLabel
      %10991 = OpPhi %uint %10986 %10983 %10990 %10989
      %10992 = OpIEqual %bool %10981 %uint_3
               OpSelectionMerge %10993 None
               OpBranchConditional %10992 %10994 %10993
      %10994 = OpLabel
      %10995 = OpBitwiseOr %uint %10991 %uint_64
               OpBranch %10993
      %10993 = OpLabel
      %10996 = OpPhi %uint %10991 %10988 %10995 %10994
      %10997 = OpBitwiseAnd %uint %10996 %uint_2
      %10998 = OpIEqual %bool %10997 %uint_2
      %10999 = OpIEqual %bool %10997 %uint_3
      %11000 = OpLogicalOr %bool %10998 %10999
               OpSelectionMerge %11001 None
               OpBranchConditional %11000 %11002 %11003
      %11003 = OpLabel
      %11004 = OpBitwiseAnd %uint %10996 %uint_4
      %11005 = OpIEqual %bool %11004 %uint_4
               OpSelectionMerge %11006 None
               OpBranchConditional %11005 %11007 %11008
      %11008 = OpLabel
      %11009 = OpBitwiseAnd %uint %10996 %uint_40
      %11010 = OpIEqual %bool %11009 %uint_40
               OpSelectionMerge %11011 None
               OpBranchConditional %11010 %11012 %11013
      %11013 = OpLabel
      %11014 = OpBitwiseAnd %uint %10996 %uint_32
      %11015 = OpIEqual %bool %11014 %uint_32
               OpSelectionMerge %11016 None
               OpBranchConditional %11015 %11017 %11018
      %11018 = OpLabel
      %11019 = OpBitwiseAnd %uint %10996 %uint_72
      %11020 = OpIEqual %bool %11019 %uint_64
      %11021 = OpSelect %uint %11020 %uint_4 %uint_0
      %11022 = OpSelect %uint %11020 %uint_0 %458
               OpBranch %11016
      %11017 = OpLabel
               OpBranch %11016
      %11016 = OpLabel
      %11023 = OpPhi %uint %11021 %11018 %uint_3 %11017
      %11024 = OpPhi %uint %11022 %11018 %uint_0 %11017
               OpBranch %11011
      %11012 = OpLabel
               OpBranch %11011
      %11011 = OpLabel
      %11025 = OpPhi %uint %11023 %11016 %uint_5 %11012
      %11026 = OpPhi %uint %11024 %11016 %uint_0 %11012
               OpBranch %11006
      %11007 = OpLabel
               OpBranch %11006
      %11006 = OpLabel
      %11027 = OpPhi %uint %11025 %11011 %uint_2 %11007
      %11028 = OpPhi %uint %11026 %11011 %458 %11007
               OpBranch %11001
      %11002 = OpLabel
               OpBranch %11001
      %11001 = OpLabel
      %11029 = OpPhi %uint %11027 %11006 %uint_1 %11002
      %11030 = OpPhi %uint %11028 %11006 %458 %11002
               OpBranch %10957
      %10957 = OpLabel
      %11031 = OpPhi %uint %uint_0 %10949 %11029 %11001
      %11032 = OpPhi %uint %458 %10949 %11030 %11001
               OpBranch %10948
      %10948 = OpLabel
      %11033 = OpPhi %uint %uint_0 %10806 %11031 %10957
      %11034 = OpPhi %uint %458 %10806 %11032 %10957
      %11035 = OpPhi %uint %10931 %10806 %10956 %10957
               OpSelectionMerge %11036 DontFlatten
               OpBranchConditional %10805 %11037 %11036
      %11037 = OpLabel
      %11038 = OpCompositeConstruct %_arr_v3float_uint_4 %10784 %460 %460 %460
               OpStore %582 %11038
      %11039 = OpShiftRightLogical %uint %10928 %uint_14
      %11040 = OpBitwiseAnd %uint %11039 %uint_3
      %11041 = OpAccessChain %_ptr_Function_v3float %582 %11040
      %11042 = OpLoad %v3float %11041
      %11043 = OpDot %float %11042 %663
      %11044 = OpShiftRightLogical %uint %10928 %uint_11
      %11045 = OpBitwiseAnd %uint %11044 %uint_7
               OpSelectionMerge %11046 None
               OpSwitch %11045 %11046 0 %11047 3 %11048 5 %11049
      %11049 = OpLabel
      %11050 = OpVectorShuffle %v3float %10788 %459 0 1 2
      %11051 = OpVectorTimesScalar %v3float %11050 %float_1
               OpBranch %11046
      %11048 = OpLabel
      %11052 = OpVectorShuffle %v3float %10788 %459 0 1 2
      %11053 = OpDot %float %663 %11042
      %11054 = OpVectorTimesScalar %v3float %11042 %11053
      %11055 = OpFSub %v3float %663 %11054
      %11056 = OpExtInst %v3float %1 Normalize %11055
      %11057 = OpExtInst %float %1 NMin %float_0 %float_1
      %11058 = OpDot %float %663 %11056
      %11059 = OpDot %float %11042 %11056
      %11060 = OpExtInst %float %1 FClamp %11059 %float_n1 %float_1
      %11061 = OpExtInst %float %1 FClamp %11043 %float_n1 %float_1
      %11062 = OpExtInst %float %1 FAbs %11061
      %11063 = OpExtInst %float %1 Fma %float_n0_156582996 %11062 %float_1_57079637
      %11064 = OpFSub %float %float_1 %11062
      %11065 = OpExtInst %float %1 Sqrt %11064
      %11066 = OpFMul %float %11063 %11065
      %11067 = OpFOrdGreaterThanEqual %bool %11061 %float_0
      %11068 = OpFNegate %float %11063
      %11069 = OpExtInst %float %1 Fma %11068 %11065 %float_3_14159274
      %11070 = OpSelect %float %11067 %11066 %11069
      %11071 = OpFSub %float %float_1_57079637 %11070
      %11072 = OpExtInst %float %1 FAbs %11060
      %11073 = OpExtInst %float %1 Fma %float_n0_156582996 %11072 %float_1_57079637
      %11074 = OpFSub %float %float_1 %11072
      %11075 = OpExtInst %float %1 Sqrt %11074
      %11076 = OpFMul %float %11073 %11075
      %11077 = OpFOrdGreaterThanEqual %bool %11060 %float_0
      %11078 = OpFNegate %float %11073
      %11079 = OpExtInst %float %1 Fma %11078 %11075 %float_3_14159274
      %11080 = OpSelect %float %11077 %11076 %11079
      %11081 = OpFSub %float %float_1_57079637 %11080
      %11082 = OpFSub %float %11071 %11081
      %11083 = OpExtInst %float %1 FAbs %11082
      %11084 = OpFMul %float %float_0_5 %11083
      %11085 = OpExtInst %float %1 Cos %11084
      %11086 = OpVectorTimesScalar %v3float %11042 %11060
      %11087 = OpFSub %v3float %11056 %11086
      %11088 = OpVectorTimesScalar %v3float %11042 %11061
      %11089 = OpFSub %v3float %663 %11088
      %11090 = OpDot %float %11087 %11089
      %11091 = OpDot %float %11087 %11087
      %11092 = OpDot %float %11089 %11089
      %11093 = OpExtInst %float %1 Fma %11091 %11092 %float_9_99999975en05
      %11094 = OpExtInst %float %1 InverseSqrt %11093
      %11095 = OpFMul %float %11090 %11094
      %11096 = OpExtInst %float %1 Fma %float_0_5 %11095 %float_0_5
      %11097 = OpExtInst %float %1 FClamp %11096 %float_0 %float_1
      %11098 = OpExtInst %float %1 Sqrt %11097
      %11099 = OpFDiv %float %float_1_19000006 %11085
      %11100 = OpExtInst %float %1 Fma %float_0_360000014 %11085 %11099
      %11101 = OpExtInst %float %1 Fma %float_0_00392156886 %float_0_00392156886 %float_0_200000003
      %11102 = OpExtInst %float %1 Fma %float_1_53787023en05 %float_0_5 %float_0_200000003
      %11103 = OpExtInst %float %1 Fma %float_1_53787023en05 %float_2 %float_0_200000003
      %11104 = OpFMul %float %float_0_997551024 %11098
      %11105 = OpFNegate %float %11061
      %11106 = OpExtInst %float %1 Fma %11105 %11061 %float_1
      %11107 = OpExtInst %float %1 Sqrt %11106
      %11108 = OpFMul %float %float_n0_0699428469 %11061
      %11109 = OpExtInst %float %1 Fma %11104 %11107 %11108
      %11110 = OpFMul %float %float_1_41421354 %11098
      %11111 = OpFMul %float %11101 %11110
      %11112 = OpFAdd %float %11060 %11061
      %11113 = OpExtInst %float %1 Fma %float_0_139885694 %11109 %11112
      %11114 = OpFMul %float %11113 %11113
      %11115 = OpFMul %float %float_n0_5 %11114
      %11116 = OpFMul %float %11111 %11111
      %11117 = OpFDiv %float %11115 %11116
      %11118 = OpExtInst %float %1 Exp %11117
      %11119 = OpFMul %float %float_2_50662827 %11111
      %11120 = OpFDiv %float %11118 %11119
      %11121 = OpFMul %float %float_0_25 %11098
      %11122 = OpExtInst %float %1 Fma %float_0_5 %11058 %float_0_5
      %11123 = OpExtInst %float %1 FClamp %11122 %float_0 %float_1
      %11124 = OpExtInst %float %1 Sqrt %11123
      %11125 = OpFSub %float %float_1 %11124
      %11126 = OpFMul %float %11125 %11125
      %11127 = OpFMul %float %11126 %11126
      %11128 = OpFMul %float %11127 %11125
      %11129 = OpExtInst %float %1 Fma %float_0_953479409 %11128 %float_0_0465205647
      %11130 = OpFMul %float %11120 %11121
      %11131 = OpFMul %float %11130 %11129
      %11132 = OpFMul %float %10791 %float_2
      %11133 = OpFMul %float %11131 %11132
      %11134 = OpFNegate %float %11058
      %11135 = OpExtInst %float %1 FClamp %11134 %float_0 %float_1
      %11136 = OpExtInst %float %1 FMix %float_1 %11057 %11135
      %11137 = OpFMul %float %11133 %11136
      %11138 = OpCompositeConstruct %v3float %11137 %11137 %11137
      %11139 = OpFSub %float %11112 %float_0_0350000001
      %11140 = OpFMul %float %11139 %11139
      %11141 = OpFMul %float %float_n0_5 %11140
      %11142 = OpFMul %float %11102 %11102
      %11143 = OpFDiv %float %11141 %11142
      %11144 = OpExtInst %float %1 Exp %11143
      %11145 = OpFMul %float %float_2_50662827 %11102
      %11146 = OpFDiv %float %11144 %11145
      %11147 = OpFDiv %float %float_1 %11100
      %11148 = OpExtInst %float %1 Fma %float_n0_800000012 %11095 %float_0_600000024
      %11149 = OpExtInst %float %1 Fma %11147 %11148 %float_1
      %11150 = OpFMul %float %11098 %11149
      %11151 = OpFNegate %float %11150
      %11152 = OpExtInst %float %1 Fma %11151 %11150 %float_1
      %11153 = OpExtInst %float %1 FClamp %11152 %float_0 %float_1
      %11154 = OpExtInst %float %1 Sqrt %11153
      %11155 = OpFNegate %float %11085
      %11156 = OpExtInst %float %1 Fma %11155 %11154 %float_1
      %11157 = OpFMul %float %11156 %11156
      %11158 = OpFMul %float %11157 %11157
      %11159 = OpFMul %float %11158 %11156
      %11160 = OpExtInst %float %1 Fma %float_0_953479409 %11159 %float_0_0465205647
      %11161 = OpFSub %float %float_1 %11160
      %11162 = OpFMul %float %11161 %11161
      %11163 = OpExtInst %v3float %1 FAbs %11052
      %11164 = OpFMul %float %11150 %11147
      %11165 = OpFNegate %float %11164
      %11166 = OpExtInst %float %1 Fma %11165 %11164 %float_1
      %11167 = OpExtInst %float %1 Sqrt %11166
      %11168 = OpFMul %float %float_0_5 %11167
      %11169 = OpFDiv %float %11168 %11085
      %11170 = OpCompositeConstruct %v3float %11169 %11169 %11169
      %11171 = OpExtInst %v3float %1 Pow %11163 %11170
      %11172 = OpExtInst %float %1 Fma %float_n3_6500001 %11095 %float_n3_98000002
      %11173 = OpExtInst %float %1 Exp %11172
      %11174 = OpFMul %float %11146 %11173
      %11175 = OpFMul %float %11174 %11162
      %11176 = OpVectorTimesScalar %v3float %11171 %11175
      %11177 = OpVectorTimesScalar %v3float %11176 %11057
      %11178 = OpFAdd %v3float %11138 %11177
      %11179 = OpFSub %float %11112 %float_0_140000001
      %11180 = OpFMul %float %11179 %11179
      %11181 = OpFMul %float %float_n0_5 %11180
      %11182 = OpFMul %float %11103 %11103
      %11183 = OpFDiv %float %11181 %11182
      %11184 = OpExtInst %float %1 Exp %11183
      %11185 = OpFMul %float %float_2_50662827 %11103
      %11186 = OpFDiv %float %11184 %11185
      %11187 = OpExtInst %float %1 Fma %11155 %float_0_5 %float_1
      %11188 = OpFMul %float %11187 %11187
      %11189 = OpFMul %float %11188 %11188
      %11190 = OpFMul %float %11189 %11187
      %11191 = OpExtInst %float %1 Fma %float_0_953479409 %11190 %float_0_0465205647
      %11192 = OpFSub %float %float_1 %11191
      %11193 = OpFMul %float %11192 %11192
      %11194 = OpFMul %float %11193 %11191
      %11195 = OpFDiv %float %float_0_800000012 %11085
      %11196 = OpCompositeConstruct %v3float %11195 %11195 %11195
      %11197 = OpExtInst %v3float %1 Pow %11163 %11196
      %11198 = OpExtInst %float %1 Fma %float_17 %11095 %float_n16_7800007
      %11199 = OpExtInst %float %1 Exp %11198
      %11200 = OpFMul %float %11186 %11199
      %11201 = OpFMul %float %11200 %11194
      %11202 = OpVectorTimesScalar %v3float %11197 %11201
      %11203 = OpFAdd %v3float %11178 %11202
      %11204 = OpVectorTimesScalar %v3float %11203 %float_1
      %11205 = OpVectorShuffle %v3float %540 %128 3 4 5
      %11206 = OpExtInst %v3float %1 Fma %460 %11205 %11204
      %11207 = OpFNegate %v3float %11206
      %11208 = OpExtInst %v3float %1 NMin %11207 %103
      %11209 = OpFNegate %v3float %11208
      %11210 = OpVectorTimesScalar %v3float %11209 %float_6_28318548
      %11211 = OpExtInst %v3float %1 NMin %128 %11210
               OpBranch %11046
      %11047 = OpLabel
      %11212 = OpVectorShuffle %v3float %10788 %459 0 1 2
      %11213 = OpVectorShuffle %v3float %10798 %10798 0 1 2
      %11214 = OpCompositeConstruct %v2float %11043 %float_0_00100000005
      %11215 = OpSampledImage %type_sampled_image %10799 %10800
      %11216 = OpImageSampleExplicitLod %v4float %11215 %11214 Lod %float_0
      %11217 = OpCompositeExtract %float %11216 0
      %11218 = OpFSub %float %float_1 %11217
      %11219 = OpFDiv %float %11218 %11217
      %11220 = OpVectorTimesScalar %v3float %11213 %11219
      %11221 = OpFAdd %v3float %128 %11220
      %11222 = OpSelect %v3float %10804 %11221 %128
      %11223 = OpVectorTimesScalar %v3float %11213 %11217
      %11224 = OpFNegate %v3float %11213
      %11225 = OpCompositeExtract %float %11216 1
      %11226 = OpVectorTimesScalar %v3float %11224 %11225
      %11227 = OpFAdd %v3float %11223 %11226
      %11228 = OpFMul %v3float %11222 %11227
      %11229 = OpAccessChain %_ptr_Uniform_uint %View %uint_43
      %11230 = OpLoad %uint %11229
      %11231 = OpINotEqual %bool %11230 %uint_0
      %11232 = OpDot %float %11228 %172
      %11233 = OpFSub %float %float_1 %11232
      %11234 = OpSelect %float %11231 %11233 %float_1
      %11235 = OpVectorTimesScalar %v3float %11212 %11234
      %11236 = OpShiftRightLogical %uint %10928 %uint_2
      %11237 = OpBitwiseAnd %uint %11236 %uint_7
      %11238 = OpIEqual %bool %11237 %uint_4
               OpSelectionMerge %11239 DontFlatten
               OpBranchConditional %11238 %11240 %11239
      %11240 = OpLabel
      %11241 = OpExtInst %float %1 NMax %461 %461
      %11242 = OpExtInst %float %1 NMax %461 %11241
      %11243 = OpFSub %float %11242 %float_0_0399999991
      %11244 = OpExtInst %float %1 NMax %float_0 %11243
      %11245 = OpFMul %float %11244 %float_3
      %11246 = OpExtInst %float %1 FClamp %11245 %float_0 %float_1
      %11247 = OpFMul %float %11246 %11246
      %11248 = OpCompositeExtract %float %10788 0
      %11249 = OpExtInst %float %1 FClamp %11043 %float_0 %float_1
      %11250 = OpExtInst %float %1 FAbs %11249
      %11251 = OpExtInst %float %1 Fma %float_n0_156582996 %11250 %float_1_57079637
      %11252 = OpFSub %float %float_1 %11250
      %11253 = OpExtInst %float %1 Sqrt %11252
      %11254 = OpFMul %float %11251 %11253
      %11255 = OpFMul %float %11254 %float_0_636619747
      %11256 = OpExtInst %float %1 FClamp %11255 %float_0 %float_1
      %11257 = OpCompositeConstruct %v3float %float_0 %11248 %11256
      %11258 = OpExtInst %v3float %1 Fma %499 %11257 %498
      %11259 = OpLoad %type_3d_image_0 %View_SimpleVolumeEnvTexture
      %11260 = OpLoad %type_sampler %View_SimpleVolumeEnvTextureSampler
      %11261 = OpSampledImage %type_sampled_image_0 %11259 %11260
      %11262 = OpImageSampleExplicitLod %v4float %11261 %11258 Lod %float_0
      %11263 = OpCompositeExtract %float %11262 0
      %11264 = OpExtInst %float %1 Fma %float_10 %float_0_00158730161 %float_1
      %11265 = OpExtInst %float %1 FClamp %11264 %float_0 %float_1
      %11266 = OpFMul %float %11263 %11265
      %11267 = OpCompositeExtract %float %10788 1
      %11268 = OpCompositeConstruct %v3float %float_0 %11267 %11256
      %11269 = OpExtInst %v3float %1 Fma %499 %11268 %498
      %11270 = OpSampledImage %type_sampled_image_0 %11259 %11260
      %11271 = OpImageSampleExplicitLod %v4float %11270 %11269 Lod %float_0
      %11272 = OpCompositeExtract %float %11271 0
      %11273 = OpFMul %float %11272 %11265
      %11274 = OpCompositeExtract %float %10788 2
      %11275 = OpCompositeConstruct %v3float %float_0 %11274 %11256
      %11276 = OpExtInst %v3float %1 Fma %499 %11275 %498
      %11277 = OpSampledImage %type_sampled_image_0 %11259 %11260
      %11278 = OpImageSampleExplicitLod %v4float %11277 %11276 Lod %float_0
      %11279 = OpCompositeExtract %float %11278 0
      %11280 = OpFMul %float %11279 %11265
      %11281 = OpCompositeConstruct %v3float %11266 %11273 %11280
      %11282 = OpCompositeExtract %float %11235 0
      %11283 = OpCompositeExtract %float %11235 1
      %11284 = OpCompositeExtract %float %11235 2
      %11285 = OpExtInst %float %1 NMax %11283 %11284
      %11286 = OpExtInst %float %1 NMax %11282 %11285
      %11287 = OpExtInst %float %1 NMax %11273 %11280
      %11288 = OpExtInst %float %1 NMax %11266 %11287
      %11289 = OpFOrdLessThan %bool %11286 %11288
               OpSelectionMerge %11290 None
               OpBranchConditional %11289 %11291 %11290
      %11291 = OpLabel
      %11292 = OpFDiv %float %11286 %11288
      %11293 = OpVectorTimesScalar %v3float %11281 %11292
               OpBranch %11290
      %11290 = OpLabel
      %11294 = OpPhi %v3float %11281 %11240 %11293 %11291
      %11295 = OpVectorTimesScalar %v3float %11294 %11234
      %11296 = OpCompositeConstruct %v3float %11247 %11247 %11247
      %11297 = OpExtInst %v3float %1 FMix %11235 %11295 %11296
               OpBranch %11239
      %11239 = OpLabel
      %11298 = OpPhi %v3float %11235 %11047 %11297 %11290
      %11299 = OpIEqual %bool %11237 %uint_1
               OpSelectionMerge %11300 DontFlatten
               OpBranchConditional %11299 %11301 %11300
      %11301 = OpLabel
      %11302 = OpExtInst %v3float %1 NMax %357 %556
      %11303 = OpFDiv %v3float %128 %11302
      %11304 = OpExtInst %v3float %1 NMax %346 %11303
      %11305 = OpExtInst %float %1 FAbs %float_1
      %11306 = OpExtInst %float %1 NMax %float_9_99999975en05 %11305
      %11307 = OpFDiv %float %float_1 %11306
      %11308 = OpFNegate %v3float %11304
      %11309 = OpVectorTimesScalar %v3float %11308 %11307
      %11310 = OpExtInst %v3float %1 Exp %11309
      %11311 = OpFMul %v3float %500 %11310
      %11312 = OpVectorTimesScalar %v3float %11311 %11234
               OpBranch %11300
      %11300 = OpLabel
      %11313 = OpPhi %v3float %460 %11239 %11312 %11301
      %11314 = OpShiftRightLogical %uint %10928 %uint_9
      %11315 = OpBitwiseAnd %uint %11314 %uint_1
      %11316 = OpINotEqual %bool %11315 %uint_0
               OpSelectionMerge %11317 DontFlatten
               OpBranchConditional %11316 %11318 %11317
      %11318 = OpLabel
      %11319 = OpVectorTimesScalar %v3float %11212 %float_1
      %11320 = OpVectorTimesScalar %v3float %11298 %float_1
               OpBranch %11046
      %11317 = OpLabel
               OpBranch %11046
      %11046 = OpLabel
      %11321 = OpPhi %v3float %460 %11037 %11051 %11049 %11211 %11048 %11320 %11318 %11298 %11317
      %11322 = OpPhi %v3float %460 %11037 %11042 %11049 %11056 %11048 %11042 %11318 %11042 %11317
      %11323 = OpPhi %v3float %460 %11037 %460 %11049 %460 %11048 %11313 %11318 %11313 %11317
      %11324 = OpPhi %v3float %460 %11037 %11050 %11049 %460 %11048 %11319 %11318 %11212 %11317
      %11325 = OpFOrdGreaterThan %v3bool %11323 %103
      %11326 = OpAny %bool %11325
               OpSelectionMerge %11327 None
               OpBranchConditional %8460 %11328 %11327
      %11328 = OpLabel
      %11329 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_0
      %11330 = OpLoad %v4float %11329
      %11331 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_3 %int_0
      %11332 = OpLoad %v4float %11331
      %11333 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_4 %uint_0
      %11334 = OpLoad %float %11333
      %11335 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_1
      %11336 = OpLoad %v4float %11335
      %11337 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_3 %int_1
      %11338 = OpLoad %v4float %11337
      %11339 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_4 %uint_1
      %11340 = OpLoad %float %11339
      %11341 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_2
      %11342 = OpLoad %v4float %11341
      %11343 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_3 %int_2
      %11344 = OpLoad %v4float %11343
      %11345 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_4 %uint_2
      %11346 = OpLoad %float %11345
      %11347 = OpCompositeExtract %float %11322 1
      %11348 = OpFMul %float %float_n0_488602996 %11347
      %11349 = OpCompositeInsert %v4float %11348 %553 1
      %11350 = OpCompositeExtract %float %11322 2
      %11351 = OpFMul %float %float_0_488602996 %11350
      %11352 = OpCompositeInsert %v4float %11351 %11349 2
      %11353 = OpCompositeExtract %float %11322 0
      %11354 = OpFMul %float %float_n0_488602996 %11353
      %11355 = OpCompositeInsert %v4float %11354 %11352 3
      %11356 = OpFMul %v3float %11322 %11322
      %11357 = OpFMul %float %float_1_09254801 %11353
      %11358 = OpFMul %float %11357 %11347
      %11359 = OpCompositeInsert %v4float %11358 %542 0
      %11360 = OpFMul %float %float_n1_09254801 %11347
      %11361 = OpFMul %float %11360 %11350
      %11362 = OpCompositeInsert %v4float %11361 %11359 1
      %11363 = OpCompositeExtract %float %11356 2
      %11364 = OpExtInst %float %1 Fma %float_3 %11363 %float_n1
      %11365 = OpFMul %float %float_0_315391988 %11364
      %11366 = OpCompositeInsert %v4float %11365 %11362 2
      %11367 = OpFMul %float %float_n1_09254801 %11353
      %11368 = OpFMul %float %11367 %11350
      %11369 = OpCompositeInsert %v4float %11368 %11366 3
      %11370 = OpCompositeExtract %float %11356 0
      %11371 = OpCompositeExtract %float %11356 1
      %11372 = OpFSub %float %11370 %11371
      %11373 = OpCompositeInsert %v4float %float_0_886227548 %11355 0
      %11374 = OpVectorShuffle %v3float %11373 %11373 1 2 3
      %11375 = OpVectorTimesScalar %v3float %11374 %float_2_09439516
      %11376 = OpVectorShuffle %v4float %11373 %11375 0 4 5 6
      %11377 = OpVectorTimesScalar %v4float %11369 %float_0_785398185
      %11378 = OpFMul %float %11372 %float_0_429042608
      %11379 = OpDot %float %11330 %11376
      %11380 = OpDot %float %11332 %11377
      %11381 = OpFAdd %float %11379 %11380
      %11382 = OpExtInst %float %1 Fma %11334 %11378 %11381
      %11383 = OpCompositeInsert %v3float %11382 %103 0
      %11384 = OpDot %float %11336 %11376
      %11385 = OpDot %float %11338 %11377
      %11386 = OpFAdd %float %11384 %11385
      %11387 = OpExtInst %float %1 Fma %11340 %11378 %11386
      %11388 = OpCompositeInsert %v3float %11387 %11383 1
      %11389 = OpDot %float %11342 %11376
      %11390 = OpDot %float %11344 %11377
      %11391 = OpFAdd %float %11389 %11390
      %11392 = OpExtInst %float %1 Fma %11346 %11378 %11391
      %11393 = OpCompositeInsert %v3float %11392 %11388 2
      %11394 = OpExtInst %v3float %1 NMax %103 %11393
               OpSelectionMerge %11395 None
               OpBranchConditional %11326 %11396 %11395
      %11396 = OpLabel
      %11397 = OpFNegate %v3float %11322
      %11398 = OpCompositeExtract %float %11397 1
      %11399 = OpFMul %float %float_n0_488602996 %11398
      %11400 = OpCompositeInsert %v4float %11399 %553 1
      %11401 = OpCompositeExtract %float %11397 2
      %11402 = OpFMul %float %float_0_488602996 %11401
      %11403 = OpCompositeInsert %v4float %11402 %11400 2
      %11404 = OpCompositeExtract %float %11397 0
      %11405 = OpFMul %float %float_n0_488602996 %11404
      %11406 = OpCompositeInsert %v4float %11405 %11403 3
      %11407 = OpFMul %v3float %11397 %11397
      %11408 = OpFMul %float %float_1_09254801 %11404
      %11409 = OpFMul %float %11408 %11398
      %11410 = OpCompositeInsert %v4float %11409 %542 0
      %11411 = OpFMul %float %float_n1_09254801 %11398
      %11412 = OpFMul %float %11411 %11401
      %11413 = OpCompositeInsert %v4float %11412 %11410 1
      %11414 = OpCompositeExtract %float %11407 2
      %11415 = OpExtInst %float %1 Fma %float_3 %11414 %float_n1
      %11416 = OpFMul %float %float_0_315391988 %11415
      %11417 = OpCompositeInsert %v4float %11416 %11413 2
      %11418 = OpFMul %float %float_n1_09254801 %11404
      %11419 = OpFMul %float %11418 %11401
      %11420 = OpCompositeInsert %v4float %11419 %11417 3
      %11421 = OpCompositeExtract %float %11407 0
      %11422 = OpCompositeExtract %float %11407 1
      %11423 = OpFSub %float %11421 %11422
      %11424 = OpCompositeInsert %v4float %float_0_886227548 %11406 0
      %11425 = OpVectorShuffle %v3float %11424 %11424 1 2 3
      %11426 = OpVectorTimesScalar %v3float %11425 %float_2_09439516
      %11427 = OpVectorShuffle %v4float %11424 %11426 0 4 5 6
      %11428 = OpVectorTimesScalar %v4float %11420 %float_0_785398185
      %11429 = OpFMul %float %11423 %float_0_429042608
      %11430 = OpDot %float %11330 %11427
      %11431 = OpDot %float %11332 %11428
      %11432 = OpFAdd %float %11430 %11431
      %11433 = OpExtInst %float %1 Fma %11334 %11429 %11432
      %11434 = OpCompositeInsert %v3float %11433 %554 0
      %11435 = OpDot %float %11336 %11427
      %11436 = OpDot %float %11338 %11428
      %11437 = OpFAdd %float %11435 %11436
      %11438 = OpExtInst %float %1 Fma %11340 %11429 %11437
      %11439 = OpCompositeInsert %v3float %11438 %11434 1
      %11440 = OpDot %float %11342 %11427
      %11441 = OpDot %float %11344 %11428
      %11442 = OpFAdd %float %11440 %11441
      %11443 = OpExtInst %float %1 Fma %11346 %11429 %11442
      %11444 = OpCompositeInsert %v3float %11443 %11439 2
      %11445 = OpExtInst %v3float %1 NMax %103 %11444
               OpBranch %11395
      %11395 = OpLabel
      %11446 = OpPhi %v3float %103 %11328 %11445 %11396
               OpBranch %11327
      %11327 = OpLabel
      %11447 = OpPhi %v3float %103 %11046 %11446 %11395
      %11448 = OpPhi %v3float %103 %11046 %11394 %11395
               OpSelectionMerge %11449 None
               OpBranchConditional %8635 %11450 %11449
      %11450 = OpLabel
      %11451 = OpAccessChain %_ptr_Uniform_float %View %uint_26
      %11452 = OpLoad %float %11451
      %11453 = OpFOrdNotEqual %bool %11452 %float_0
               OpSelectionMerge %11454 DontFlatten
               OpBranchConditional %11453 %11455 %11454
      %11455 = OpLabel
               OpSelectionMerge %11456 None
               OpBranchConditional %8460 %11457 %11456
      %11457 = OpLabel
      %11458 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_0
      %11459 = OpLoad %v4float %11458
      %11460 = OpVectorShuffle %v3float %11459 %11459 0 1 2
      %11461 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_0 %int_3
      %11462 = OpLoad %float %11461
               OpBranch %11456
      %11456 = OpLabel
      %11463 = OpPhi %v3float %11322 %11455 %11460 %11457
      %11464 = OpPhi %float %float_1 %11455 %11462 %11457
      %11465 = OpFSub %float %float_1 %11464
      %11466 = OpFSub %float %11464 %float_1
      %11467 = OpExtInst %float %1 Fma %11466 %11465 %float_1
      %11468 = OpCompositeConstruct %v3float %11467 %11467 %11467
      %11469 = OpExtInst %v3float %1 FMix %11463 %11322 %11468
      %11470 = OpDot %float %11463 %11322
      %11471 = OpExtInst %float %1 FClamp %11470 %float_0 %float_1
      %11472 = OpExtInst %float %1 FMix %11471 %float_1 %11467
               OpBranch %11454
      %11454 = OpLabel
      %11473 = OpPhi %float %float_1 %11450 %11472 %11456
      %11474 = OpPhi %float %float_1 %11450 %11464 %11456
      %11475 = OpPhi %v3float %11322 %11450 %11469 %11456
      %11476 = OpCompositeExtract %float %11475 0
      %11477 = OpCompositeExtract %float %11475 1
      %11478 = OpCompositeExtract %float %11475 2
      %11479 = OpCompositeConstruct %v4float %11476 %11477 %11478 %float_1
      %11480 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_0
      %11481 = OpLoad %v4float %11480
      %11482 = OpDot %float %11481 %11479
      %11483 = OpCompositeInsert %v3float %11482 %543 0
      %11484 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_1
      %11485 = OpLoad %v4float %11484
      %11486 = OpDot %float %11485 %11479
      %11487 = OpCompositeInsert %v3float %11486 %11483 1
      %11488 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_2
      %11489 = OpLoad %v4float %11488
      %11490 = OpDot %float %11489 %11479
      %11491 = OpCompositeInsert %v3float %11490 %11487 2
      %11492 = OpVectorShuffle %v4float %11479 %11479 0 1 2 2
      %11493 = OpVectorShuffle %v4float %11479 %11479 1 2 2 0
      %11494 = OpFMul %v4float %11492 %11493
      %11495 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_3
      %11496 = OpLoad %v4float %11495
      %11497 = OpDot %float %11496 %11494
      %11498 = OpCompositeInsert %v3float %11497 %543 0
      %11499 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_4
      %11500 = OpLoad %v4float %11499
      %11501 = OpDot %float %11500 %11494
      %11502 = OpCompositeInsert %v3float %11501 %11498 1
      %11503 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_5
      %11504 = OpLoad %v4float %11503
      %11505 = OpDot %float %11504 %11494
      %11506 = OpCompositeInsert %v3float %11505 %11502 2
      %11507 = OpFMul %float %11477 %11477
      %11508 = OpFNegate %float %11507
      %11509 = OpExtInst %float %1 Fma %11476 %11476 %11508
      %11510 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_6
      %11511 = OpLoad %v4float %11510
      %11512 = OpVectorShuffle %v3float %11511 %11511 0 1 2
      %11513 = OpVectorTimesScalar %v3float %11512 %11509
      %11514 = OpFAdd %v3float %11491 %11506
      %11515 = OpFAdd %v3float %11514 %11513
      %11516 = OpExtInst %v3float %1 NMax %103 %11515
      %11517 = OpVectorShuffle %v3float %624 %624 0 1 2
      %11518 = OpFMul %v3float %11516 %11517
      %11519 = OpFMul %float %11474 %11473
      %11520 = OpVectorTimesScalar %v3float %11518 %11519
               OpSelectionMerge %11521 None
               OpBranchConditional %11326 %11522 %11521
      %11522 = OpLabel
      %11523 = OpFNegate %v3float %11322
      %11524 = OpCompositeExtract %float %11523 0
      %11525 = OpCompositeExtract %float %11523 1
      %11526 = OpCompositeExtract %float %11523 2
      %11527 = OpCompositeConstruct %v4float %11524 %11525 %11526 %float_1
      %11528 = OpLoad %v4float %11480
      %11529 = OpDot %float %11528 %11527
      %11530 = OpCompositeInsert %v3float %11529 %554 0
      %11531 = OpLoad %v4float %11484
      %11532 = OpDot %float %11531 %11527
      %11533 = OpCompositeInsert %v3float %11532 %11530 1
      %11534 = OpLoad %v4float %11488
      %11535 = OpDot %float %11534 %11527
      %11536 = OpCompositeInsert %v3float %11535 %11533 2
      %11537 = OpVectorShuffle %v4float %11527 %11527 0 1 2 2
      %11538 = OpVectorShuffle %v4float %11527 %11527 1 2 2 0
      %11539 = OpFMul %v4float %11537 %11538
      %11540 = OpLoad %v4float %11495
      %11541 = OpDot %float %11540 %11539
      %11542 = OpCompositeInsert %v3float %11541 %554 0
      %11543 = OpLoad %v4float %11499
      %11544 = OpDot %float %11543 %11539
      %11545 = OpCompositeInsert %v3float %11544 %11542 1
      %11546 = OpLoad %v4float %11503
      %11547 = OpDot %float %11546 %11539
      %11548 = OpCompositeInsert %v3float %11547 %11545 2
      %11549 = OpFMul %float %11525 %11525
      %11550 = OpFNegate %float %11549
      %11551 = OpExtInst %float %1 Fma %11524 %11524 %11550
      %11552 = OpLoad %v4float %11510
      %11553 = OpVectorShuffle %v3float %11552 %11552 0 1 2
      %11554 = OpVectorTimesScalar %v3float %11553 %11551
      %11555 = OpFAdd %v3float %11536 %11548
      %11556 = OpFAdd %v3float %11555 %11554
      %11557 = OpExtInst %v3float %1 NMax %103 %11556
      %11558 = OpFMul %v3float %11557 %11517
      %11559 = OpVectorTimesScalar %v3float %11558 %11474
               OpBranch %11521
      %11521 = OpLabel
      %11560 = OpPhi %v3float %103 %11454 %11559 %11522
               OpBranch %11449
      %11449 = OpLabel
      %11561 = OpPhi %v3float %103 %11327 %11520 %11521
      %11562 = OpPhi %v3float %103 %11327 %11560 %11521
      %11563 = OpExtInst %v3float %1 Fma %11447 %8632 %11562
      %11564 = OpExtInst %v3float %1 Fma %11448 %8632 %11561
      %11565 = OpDot %float %11564 %172
      %11566 = OpVectorTimesScalar %v3float %11324 %float_2_04040003
      %11567 = OpFSub %v3float %11566 %175
      %11568 = OpVectorTimesScalar %v3float %11324 %float_n4_79510021
      %11569 = OpFAdd %v3float %11568 %178
      %11570 = OpVectorTimesScalar %v3float %11324 %float_2_75519991
      %11571 = OpFAdd %v3float %11570 %181
      %11572 = OpVectorTimesScalar %v3float %11567 %float_1
      %11573 = OpFAdd %v3float %11572 %11569
      %11574 = OpVectorTimesScalar %v3float %11573 %float_1
      %11575 = OpFAdd %v3float %11574 %11571
      %11576 = OpVectorTimesScalar %v3float %11575 %float_1
      %11577 = OpExtInst %v3float %1 NMax %128 %11576
      %11578 = OpExtInst %v3float %1 NMax %128 %522
      %11579 = OpCompositeExtract %float %11578 1
      %11580 = OpCompositeInsert %v2float %11579 %555 0
      %11581 = OpCompositeInsert %v2float %11565 %11580 1
      %11582 = OpFMul %v3float %11563 %11323
      %11583 = OpExtInst %v3float %1 Fma %11564 %11321 %11582
      %11584 = OpExtInst %v3float %1 Fma %11583 %11577 %10929
               OpBranch %11036
      %11036 = OpLabel
      %11585 = OpPhi %v3float %10929 %10948 %11584 %11449
      %11586 = OpPhi %float %float_0 %10948 %float_1 %11449
      %11587 = OpPhi %v2float %125 %10948 %11581 %11449
      %11588 = OpExtInst %float %1 NMax %float_1 %11586
      %11589 = OpFDiv %float %float_1 %11588
      %11590 = OpVectorTimesScalar %v2float %11587 %11589
      %11591 = OpCompositeExtract %float %11590 0
      %11592 = OpCompositeExtract %float %11590 1
      %11593 = OpBitwiseAnd %uint %11035 %uint_4294902015
      %11594 = OpFMul %float %11592 %11591
      %11595 = OpAccessChain %_ptr_Uniform_float %View %uint_13
      %11596 = OpLoad %float %11595
      %11597 = OpExtInst %float %1 Fma %11594 %11596 %float_0_00390625
      %11598 = OpExtInst %float %1 Log2 %11597
      %11599 = OpExtInst %float %1 Fma %11598 %float_0_0625 %float_0_5
      %11600 = OpFMul %float %11599 %float_255
      %11601 = OpExtInst %float %1 NMin %float_255 %11600
      %11602 = OpConvertFToU %uint %11601
      %11603 = OpBitwiseAnd %uint %11602 %uint_255
      %11604 = OpShiftLeftLogical %uint %11603 %uint_8
      %11605 = OpBitwiseOr %uint %11593 %11604
      %11606 = OpBitwiseAnd %uint %11605 %uint_7
      %11607 = OpIEqual %bool %11606 %uint_1
      %11608 = OpLogicalOr %bool %11607 %false
      %11609 = OpIEqual %bool %11606 %uint_4
      %11610 = OpIEqual %bool %11606 %uint_2
      %11611 = OpLogicalOr %bool %11610 %false
      %11612 = OpIEqual %bool %11606 %uint_5
      %11613 = OpIEqual %bool %11606 %uint_6
      %11614 = OpLogicalOr %bool %11612 %11613
      %11615 = OpLogicalNot %bool %11608
      %11616 = OpLogicalNot %bool %11611
      %11617 = OpLogicalAnd %bool %11615 %11616
      %11618 = OpLogicalNot %bool %11614
      %11619 = OpLogicalAnd %bool %11617 %11618
      %11620 = OpLogicalNot %bool %11609
      %11621 = OpLogicalAnd %bool %11619 %11620
               OpSelectionMerge %11622 None
               OpBranchConditional %11621 %11623 %11622
      %11623 = OpLabel
      %11624 = OpBitwiseAnd %uint %10938 %uint_15
      %11625 = OpShiftLeftLogical %uint %11624 %uint_16
      %11626 = OpBitwiseOr %uint %uint_0 %11625
      %11627 = OpBitwiseAnd %uint %11626 %uint_4287627263
      %11628 = OpBitwiseOr %uint %11627 %uint_1048576
      %11629 = OpBitwiseAnd %uint %11628 %uint_4169138175
      %11630 = OpBitwiseOr %uint %11629 %uint_0
      %11631 = OpBitwiseAnd %uint %11605 %uint_134217728
      %11632 = OpBitwiseOr %uint %11630 %11631
      %11633 = OpBitwiseAnd %uint %11632 %uint_4294901760
      %11634 = OpBitwiseAnd %uint %11605 %uint_65535
      %11635 = OpShiftLeftLogical %uint %11634 %uint_0
      %11636 = OpBitwiseOr %uint %11633 %11635
      %11637 = OpExtInst %v3float %1 FAbs %10784
      %11638 = OpDot %float %128 %11637
      %11639 = OpCompositeConstruct %v2float %11638 %11638
      %11640 = OpVectorShuffle %v2float %10784 %10784 0 1
      %11641 = OpFDiv %v2float %11640 %11639
      %11642 = OpVectorShuffle %v3float %10784 %11641 3 4 2
      %11643 = OpCompositeExtract %float %10784 2
      %11644 = OpFOrdLessThanEqual %bool %11643 %float_0
               OpSelectionMerge %11645 None
               OpBranchConditional %11644 %11646 %11645
      %11646 = OpLabel
      %11647 = OpVectorShuffle %v2float %11641 %460 1 0
      %11648 = OpExtInst %v2float %1 FAbs %11647
      %11649 = OpFSub %v2float %314 %11648
      %11650 = OpVectorShuffle %v2float %11641 %460 0 1
      %11651 = OpFOrdGreaterThanEqual %v2bool %11650 %125
      %11652 = OpCompositeExtract %bool %11651 0
      %11653 = OpSelect %float %11652 %float_1 %float_n1
      %11654 = OpCompositeExtract %bool %11651 1
      %11655 = OpSelect %float %11654 %float_1 %float_n1
      %11656 = OpCompositeConstruct %v2float %11653 %11655
      %11657 = OpFMul %v2float %11649 %11656
      %11658 = OpVectorShuffle %v3float %10784 %11657 3 4 2
               OpBranch %11645
      %11645 = OpLabel
      %11659 = OpPhi %v3float %11642 %11623 %11658 %11646
      %11660 = OpCompositeExtract %float %11659 0
      %11661 = OpCompositeExtract %float %11659 1
      %11662 = OpCompositeConstruct %v2float %11660 %float_0
      %11663 = OpExtInst %uint %1 PackHalf2x16 %11662
      %11664 = OpCompositeConstruct %v2float %11661 %float_0
      %11665 = OpExtInst %uint %1 PackHalf2x16 %11664
      %11666 = OpShiftLeftLogical %uint %11665 %uint_16
      %11667 = OpBitwiseOr %uint %11663 %11666
               OpBranch %11622
      %11622 = OpLabel
      %11668 = OpPhi %uint %uint_0 %11036 %11667 %11645
      %11669 = OpPhi %uint %uint_0 %11036 %11636 %11645
      %11670 = OpSelect %uint %11621 %uint_2 %uint_0
               OpSelectionMerge %11671 DontFlatten
               OpBranchConditional %10805 %11672 %11671
      %11672 = OpLabel
      %11673 = OpBitwiseAnd %uint %10928 %uint_4294967263
      %11674 = OpBitwiseOr %uint %11673 %uint_32
      %11675 = OpAny %bool %558
      %11676 = OpBitwiseAnd %uint %11674 %uint_4294901759
      %11677 = OpSelect %uint %11675 %uint_1 %uint_0
      %11678 = OpBitwiseAnd %uint %11677 %uint_1
      %11679 = OpShiftLeftLogical %uint %11678 %uint_16
      %11680 = OpBitwiseOr %uint %11676 %11679
      %11681 = OpLogicalAnd %bool %11608 %true
               OpSelectionMerge %11682 None
               OpBranchConditional %11681 %11683 %11684
      %11684 = OpLabel
      %11685 = OpLogicalAnd %bool %11611 %true
               OpSelectionMerge %11686 None
               OpBranchConditional %11685 %11687 %11688
      %11688 = OpLabel
               OpSelectionMerge %11689 None
               OpBranchConditional %11613 %11690 %11691
      %11691 = OpLabel
               OpSelectionMerge %11692 None
               OpBranchConditional %11612 %11693 %11694
      %11694 = OpLabel
               OpSelectionMerge %11695 None
               OpBranchConditional %11609 %11696 %11697
      %11697 = OpLabel
      %11698 = OpBitwiseAnd %uint %11680 %uint_4194303
      %11699 = OpExtInst %uint %1 PackHalf2x16 %277
      %11700 = OpShiftRightLogical %uint %11699 %uint_5
      %11701 = OpBitwiseAnd %uint %11700 %uint_1023
      %11702 = OpBitwiseAnd %uint %11701 %uint_1023
      %11703 = OpShiftLeftLogical %uint %11702 %uint_22
      %11704 = OpBitwiseOr %uint %11698 %11703
      %11705 = OpULessThan %bool %11670 %uint_3
               OpSelectionMerge %11706 None
               OpBranchConditional %11705 %11707 %11708
      %11708 = OpLabel
      %11709 = OpISub %uint %11670 %uint_3
      %11710 = OpCompositeExtract %uint %10785 0
      %11711 = OpCompositeExtract %uint %10785 1
      %11712 = OpCompositeConstruct %v3uint %11710 %11711 %11709
               OpImageWrite %10786 %11712 %11704 None
               OpBranch %11706
      %11707 = OpLabel
      %11713 = OpIEqual %bool %11670 %uint_0
      %11714 = OpSelect %uint %11713 %11704 %11669
      %11715 = OpIEqual %bool %11670 %uint_1
      %11716 = OpSelect %uint %11715 %11704 %11668
      %11717 = OpIEqual %bool %11670 %uint_2
      %11718 = OpSelect %uint %11717 %11704 %uint_0
               OpBranch %11706
      %11706 = OpLabel
      %11719 = OpPhi %uint %uint_0 %11708 %11718 %11707
      %11720 = OpPhi %uint %11668 %11708 %11716 %11707
      %11721 = OpPhi %uint %11669 %11708 %11714 %11707
      %11722 = OpIAdd %uint %11670 %uint_1
               OpBranch %11695
      %11696 = OpLabel
      %11723 = OpVectorShuffle %v3float %10788 %459 0 1 2
      %11724 = OpFSub %float %8393 %float_0_5
      %11725 = OpFMul %float %11724 %float_0_00787401572
      %11726 = OpFMul %float %11724 %float_0_0158730168
      %11727 = OpCompositeConstruct %v3float %11725 %11725 %11726
      %11728 = OpExtInst %v3float %1 FClamp %11723 %103 %128
      %11729 = OpCompositeExtract %float %11728 0
               OpSelectionMerge %11730 None
               OpSwitch %uint_0 %11731
      %11731 = OpLabel
      %11732 = OpFOrdLessThan %bool %11729 %float_0_00313066994
               OpSelectionMerge %11733 None
               OpBranchConditional %11732 %11734 %11733
      %11734 = OpLabel
      %11735 = OpFMul %float %11729 %float_12_9200001
               OpBranch %11730
      %11733 = OpLabel
      %11736 = OpExtInst %float %1 Pow %11729 %float_0_416666657
      %11737 = OpExtInst %float %1 Fma %11736 %float_1_05499995 %float_n0_0549999997
               OpBranch %11730
      %11730 = OpLabel
      %11738 = OpPhi %float %11735 %11734 %11737 %11733
      %11739 = OpCompositeExtract %float %11728 1
               OpSelectionMerge %11740 None
               OpSwitch %uint_0 %11741
      %11741 = OpLabel
      %11742 = OpFOrdLessThan %bool %11739 %float_0_00313066994
               OpSelectionMerge %11743 None
               OpBranchConditional %11742 %11744 %11743
      %11744 = OpLabel
      %11745 = OpFMul %float %11739 %float_12_9200001
               OpBranch %11740
      %11743 = OpLabel
      %11746 = OpExtInst %float %1 Pow %11739 %float_0_416666657
      %11747 = OpExtInst %float %1 Fma %11746 %float_1_05499995 %float_n0_0549999997
               OpBranch %11740
      %11740 = OpLabel
      %11748 = OpPhi %float %11745 %11744 %11747 %11743
      %11749 = OpCompositeExtract %float %11728 2
               OpSelectionMerge %11750 None
               OpSwitch %uint_0 %11751
      %11751 = OpLabel
      %11752 = OpFOrdLessThan %bool %11749 %float_0_00313066994
               OpSelectionMerge %11753 None
               OpBranchConditional %11752 %11754 %11753
      %11754 = OpLabel
      %11755 = OpFMul %float %11749 %float_12_9200001
               OpBranch %11750
      %11753 = OpLabel
      %11756 = OpExtInst %float %1 Pow %11749 %float_0_416666657
      %11757 = OpExtInst %float %1 Fma %11756 %float_1_05499995 %float_n0_0549999997
               OpBranch %11750
      %11750 = OpLabel
      %11758 = OpPhi %float %11755 %11754 %11757 %11753
      %11759 = OpCompositeConstruct %v3float %11738 %11748 %11758
      %11760 = OpBitcast %v3uint %11759
      %11761 = OpBitwiseAnd %v3uint %11760 %350
      %11762 = OpExtInst %v3uint %1 UMin %11761 %502
      %11763 = OpConvertUToF %v3float %11762
      %11764 = OpExtInst %v3float %1 Fma %11727 %11763 %11759
      %11765 = OpExtInst %v3float %1 FClamp %11764 %103 %128
      %11766 = OpCompositeExtract %float %11765 0
      %11767 = OpFMul %float %11766 %float_127
      %11768 = OpConvertFToU %uint %11767
      %11769 = OpShiftLeftLogical %uint %11768 %uint_0
      %11770 = OpCompositeExtract %float %11765 1
      %11771 = OpFMul %float %11770 %float_127
      %11772 = OpConvertFToU %uint %11771
      %11773 = OpShiftLeftLogical %uint %11772 %uint_7
      %11774 = OpCompositeExtract %float %11765 2
      %11775 = OpFMul %float %11774 %float_63
      %11776 = OpConvertFToU %uint %11775
      %11777 = OpShiftLeftLogical %uint %11776 %uint_14
      %11778 = OpBitwiseOr %uint %11769 %11773
      %11779 = OpBitwiseOr %uint %11778 %11777
      %11780 = OpBitwiseAnd %uint %11779 %uint_4095
      %11781 = OpShiftRightLogical %uint %11779 %uint_12
      %11782 = OpBitwiseAnd %uint %11781 %uint_255
      %11783 = OpExtInst %float %1 FClamp %10795 %float_0 %float_1
      %11784 = OpFMul %float %11783 %float_255
      %11785 = OpConvertFToU %uint %11784
      %11786 = OpCompositeConstruct %v3float %10797 %float_0 %10791
      %11787 = OpExtInst %v3float %1 FClamp %11786 %103 %128
      %11788 = OpBitcast %v3uint %11787
      %11789 = OpBitwiseAnd %v3uint %11788 %350
      %11790 = OpExtInst %v3uint %1 UMin %11789 %502
      %11791 = OpConvertUToF %v3float %11790
      %11792 = OpExtInst %v3float %1 Fma %11727 %11791 %11787
      %11793 = OpExtInst %v3float %1 FClamp %11792 %103 %128
      %11794 = OpCompositeExtract %float %11793 0
      %11795 = OpFMul %float %11794 %float_127
      %11796 = OpConvertFToU %uint %11795
      %11797 = OpShiftLeftLogical %uint %11796 %uint_0
      %11798 = OpCompositeExtract %float %11793 1
      %11799 = OpFMul %float %11798 %float_127
      %11800 = OpConvertFToU %uint %11799
      %11801 = OpShiftLeftLogical %uint %11800 %uint_7
      %11802 = OpCompositeExtract %float %11793 2
      %11803 = OpFMul %float %11802 %float_63
      %11804 = OpConvertFToU %uint %11803
      %11805 = OpShiftLeftLogical %uint %11804 %uint_14
      %11806 = OpBitwiseOr %uint %11797 %11801
      %11807 = OpBitwiseOr %uint %11806 %11805
      %11808 = OpBitwiseAnd %uint %11605 %uint_65535
      %11809 = OpShiftLeftLogical %uint %11808 %uint_0
      %11810 = OpBitwiseOr %uint %uint_0 %11809
      %11811 = OpShiftLeftLogical %uint %11782 %uint_8
      %11812 = OpBitwiseOr %uint %11811 %11785
      %11813 = OpBitwiseAnd %uint %11810 %uint_65535
      %11814 = OpShiftLeftLogical %uint %11812 %uint_16
      %11815 = OpBitwiseOr %uint %11813 %11814
      %11816 = OpULessThan %bool %11670 %uint_3
               OpSelectionMerge %11817 None
               OpBranchConditional %11816 %11818 %11819
      %11819 = OpLabel
      %11820 = OpISub %uint %11670 %uint_3
      %11821 = OpCompositeExtract %uint %10785 0
      %11822 = OpCompositeExtract %uint %10785 1
      %11823 = OpCompositeConstruct %v3uint %11821 %11822 %11820
               OpImageWrite %10786 %11823 %11815 None
               OpBranch %11817
      %11818 = OpLabel
      %11824 = OpIEqual %bool %11670 %uint_0
      %11825 = OpSelect %uint %11824 %11815 %11669
      %11826 = OpIEqual %bool %11670 %uint_1
      %11827 = OpSelect %uint %11826 %11815 %11668
      %11828 = OpIEqual %bool %11670 %uint_2
      %11829 = OpSelect %uint %11828 %11815 %uint_0
               OpBranch %11817
      %11817 = OpLabel
      %11830 = OpPhi %uint %uint_0 %11819 %11829 %11818
      %11831 = OpPhi %uint %11668 %11819 %11827 %11818
      %11832 = OpPhi %uint %11669 %11819 %11825 %11818
      %11833 = OpIAdd %uint %11670 %uint_1
      %11834 = OpShiftLeftLogical %uint %11780 %uint_20
      %11835 = OpBitwiseOr %uint %11834 %11807
      %11836 = OpULessThan %bool %11833 %uint_3
               OpSelectionMerge %11837 None
               OpBranchConditional %11836 %11838 %11839
      %11839 = OpLabel
      %11840 = OpIAdd %uint %11670 %uint_4294967294
      %11841 = OpCompositeExtract %uint %10785 0
      %11842 = OpCompositeExtract %uint %10785 1
      %11843 = OpCompositeConstruct %v3uint %11841 %11842 %11840
               OpImageWrite %10786 %11843 %11835 None
               OpBranch %11837
      %11838 = OpLabel
      %11844 = OpIEqual %bool %11833 %uint_0
      %11845 = OpSelect %uint %11844 %11835 %11832
      %11846 = OpIEqual %bool %11833 %uint_1
      %11847 = OpSelect %uint %11846 %11835 %11831
      %11848 = OpIEqual %bool %11833 %uint_2
      %11849 = OpSelect %uint %11848 %11835 %11830
               OpBranch %11837
      %11837 = OpLabel
      %11850 = OpPhi %uint %11830 %11839 %11849 %11838
      %11851 = OpPhi %uint %11831 %11839 %11847 %11838
      %11852 = OpPhi %uint %11832 %11839 %11845 %11838
      %11853 = OpIAdd %uint %11670 %uint_2
               OpBranch %11695
      %11695 = OpLabel
      %11854 = OpPhi %uint %11704 %11706 %uint_0 %11837
      %11855 = OpPhi %uint %11719 %11706 %11850 %11837
      %11856 = OpPhi %uint %11720 %11706 %11851 %11837
      %11857 = OpPhi %uint %11721 %11706 %11852 %11837
      %11858 = OpPhi %uint %11722 %11706 %11853 %11837
               OpBranch %11692
      %11693 = OpLabel
      %11859 = OpBitwiseAnd %uint %11605 %uint_65535
      %11860 = OpShiftLeftLogical %uint %11859 %uint_0
      %11861 = OpBitwiseOr %uint %uint_0 %11860
      %11862 = OpBitwiseAnd %uint %11861 %uint_65535
      %11863 = OpULessThan %bool %11670 %uint_3
               OpSelectionMerge %11864 None
               OpBranchConditional %11863 %11865 %11866
      %11866 = OpLabel
      %11867 = OpISub %uint %11670 %uint_3
      %11868 = OpCompositeExtract %uint %10785 0
      %11869 = OpCompositeExtract %uint %10785 1
      %11870 = OpCompositeConstruct %v3uint %11868 %11869 %11867
               OpImageWrite %10786 %11870 %11862 None
               OpBranch %11864
      %11865 = OpLabel
      %11871 = OpIEqual %bool %11670 %uint_0
      %11872 = OpSelect %uint %11871 %11862 %11669
      %11873 = OpIEqual %bool %11670 %uint_1
      %11874 = OpSelect %uint %11873 %11862 %11668
      %11875 = OpIEqual %bool %11670 %uint_2
      %11876 = OpSelect %uint %11875 %11862 %uint_0
               OpBranch %11864
      %11864 = OpLabel
      %11877 = OpPhi %uint %uint_0 %11866 %11876 %11865
      %11878 = OpPhi %uint %11668 %11866 %11874 %11865
      %11879 = OpPhi %uint %11669 %11866 %11872 %11865
      %11880 = OpIAdd %uint %11670 %uint_1
               OpBranch %11692
      %11692 = OpLabel
      %11881 = OpPhi %uint %11854 %11695 %11680 %11864
      %11882 = OpPhi %uint %11855 %11695 %11877 %11864
      %11883 = OpPhi %uint %11856 %11695 %11878 %11864
      %11884 = OpPhi %uint %11857 %11695 %11879 %11864
      %11885 = OpPhi %uint %11858 %11695 %11880 %11864
               OpBranch %11689
      %11690 = OpLabel
      %11886 = OpBitwiseAnd %uint %11605 %uint_65535
      %11887 = OpShiftLeftLogical %uint %11886 %uint_0
      %11888 = OpBitwiseOr %uint %uint_0 %11887
      %11889 = OpBitwiseAnd %uint %11888 %uint_65535
      %11890 = OpExtInst %float %1 FClamp %10791 %float_0 %float_1
      %11891 = OpFMul %float %11890 %float_255
      %11892 = OpConvertFToU %uint %11891
      %11893 = OpShiftLeftLogical %uint %11892 %uint_16
      %11894 = OpBitwiseOr %uint %uint_0 %11893
      %11895 = OpBitwiseOr %uint %11894 %uint_0
      %11896 = OpBitwiseOr %uint %11889 %11895
      %11897 = OpULessThan %bool %11670 %uint_3
               OpSelectionMerge %11898 None
               OpBranchConditional %11897 %11899 %11900
      %11900 = OpLabel
      %11901 = OpISub %uint %11670 %uint_3
      %11902 = OpCompositeExtract %uint %10785 0
      %11903 = OpCompositeExtract %uint %10785 1
      %11904 = OpCompositeConstruct %v3uint %11902 %11903 %11901
               OpImageWrite %10786 %11904 %11896 None
               OpBranch %11898
      %11899 = OpLabel
      %11905 = OpIEqual %bool %11670 %uint_0
      %11906 = OpSelect %uint %11905 %11896 %11669
      %11907 = OpIEqual %bool %11670 %uint_1
      %11908 = OpSelect %uint %11907 %11896 %11668
      %11909 = OpIEqual %bool %11670 %uint_2
      %11910 = OpSelect %uint %11909 %11896 %uint_0
               OpBranch %11898
      %11898 = OpLabel
      %11911 = OpPhi %uint %uint_0 %11900 %11910 %11899
      %11912 = OpPhi %uint %11668 %11900 %11908 %11899
      %11913 = OpPhi %uint %11669 %11900 %11906 %11899
      %11914 = OpIAdd %uint %11670 %uint_1
               OpBranch %11689
      %11689 = OpLabel
      %11915 = OpPhi %uint %11881 %11692 %11680 %11898
      %11916 = OpPhi %uint %11882 %11692 %11911 %11898
      %11917 = OpPhi %uint %11883 %11692 %11912 %11898
      %11918 = OpPhi %uint %11884 %11692 %11913 %11898
      %11919 = OpPhi %uint %11885 %11692 %11914 %11898
               OpBranch %11686
      %11687 = OpLabel
      %11920 = OpBitwiseAnd %uint %11680 %uint_4294967293
      %11921 = OpBitwiseOr %uint %11920 %uint_2
      %11922 = OpBitwiseAnd %uint %11605 %uint_65535
      %11923 = OpShiftLeftLogical %uint %11922 %uint_0
      %11924 = OpBitwiseOr %uint %uint_0 %11923
      %11925 = OpBitwiseAnd %uint %11924 %uint_65535
      %11926 = OpBitwiseAnd %uint %11033 %uint_7
      %11927 = OpShiftLeftLogical %uint %11926 %uint_16
      %11928 = OpBitwiseOr %uint %11925 %11927
      %11929 = OpIEqual %bool %11033 %uint_0
               OpSelectionMerge %11930 DontFlatten
               OpBranchConditional %11929 %11931 %11932
      %11932 = OpLabel
      %11933 = OpIEqual %bool %11033 %uint_1
               OpSelectionMerge %11934 None
               OpBranchConditional %11933 %11935 %11936
      %11936 = OpLabel
      %11937 = OpIEqual %bool %11033 %uint_2
               OpSelectionMerge %11938 None
               OpBranchConditional %11937 %11939 %11940
      %11940 = OpLabel
      %11941 = OpIEqual %bool %11033 %uint_3
      %11942 = OpIEqual %bool %11033 %uint_5
      %11943 = OpLogicalOr %bool %11941 %11942
               OpSelectionMerge %11944 None
               OpBranchConditional %11943 %11945 %11946
      %11946 = OpLabel
      %11947 = OpIEqual %bool %11033 %uint_4
               OpSelectionMerge %11948 None
               OpBranchConditional %11947 %11949 %11948
      %11949 = OpLabel
      %11950 = OpVectorShuffle %v3float %10788 %459 0 1 2
      %11951 = OpFSub %float %8393 %float_0_5
      %11952 = OpFMul %float %11951 %float_0_00787401572
      %11953 = OpFMul %float %11951 %float_0_0158730168
      %11954 = OpCompositeConstruct %v3float %11952 %11952 %11953
      %11955 = OpExtInst %v3float %1 FClamp %11950 %103 %128
      %11956 = OpCompositeExtract %float %11955 0
               OpSelectionMerge %11957 None
               OpSwitch %uint_0 %11958
      %11958 = OpLabel
      %11959 = OpFOrdLessThan %bool %11956 %float_0_00313066994
               OpSelectionMerge %11960 None
               OpBranchConditional %11959 %11961 %11960
      %11961 = OpLabel
      %11962 = OpFMul %float %11956 %float_12_9200001
               OpBranch %11957
      %11960 = OpLabel
      %11963 = OpExtInst %float %1 Pow %11956 %float_0_416666657
      %11964 = OpExtInst %float %1 Fma %11963 %float_1_05499995 %float_n0_0549999997
               OpBranch %11957
      %11957 = OpLabel
      %11965 = OpPhi %float %11962 %11961 %11964 %11960
      %11966 = OpCompositeExtract %float %11955 1
               OpSelectionMerge %11967 None
               OpSwitch %uint_0 %11968
      %11968 = OpLabel
      %11969 = OpFOrdLessThan %bool %11966 %float_0_00313066994
               OpSelectionMerge %11970 None
               OpBranchConditional %11969 %11971 %11970
      %11971 = OpLabel
      %11972 = OpFMul %float %11966 %float_12_9200001
               OpBranch %11967
      %11970 = OpLabel
      %11973 = OpExtInst %float %1 Pow %11966 %float_0_416666657
      %11974 = OpExtInst %float %1 Fma %11973 %float_1_05499995 %float_n0_0549999997
               OpBranch %11967
      %11967 = OpLabel
      %11975 = OpPhi %float %11972 %11971 %11974 %11970
      %11976 = OpCompositeExtract %float %11955 2
               OpSelectionMerge %11977 None
               OpSwitch %uint_0 %11978
      %11978 = OpLabel
      %11979 = OpFOrdLessThan %bool %11976 %float_0_00313066994
               OpSelectionMerge %11980 None
               OpBranchConditional %11979 %11981 %11980
      %11981 = OpLabel
      %11982 = OpFMul %float %11976 %float_12_9200001
               OpBranch %11977
      %11980 = OpLabel
      %11983 = OpExtInst %float %1 Pow %11976 %float_0_416666657
      %11984 = OpExtInst %float %1 Fma %11983 %float_1_05499995 %float_n0_0549999997
               OpBranch %11977
      %11977 = OpLabel
      %11985 = OpPhi %float %11982 %11981 %11984 %11980
      %11986 = OpCompositeConstruct %v3float %11965 %11975 %11985
      %11987 = OpBitcast %v3uint %11986
      %11988 = OpBitwiseAnd %v3uint %11987 %350
      %11989 = OpExtInst %v3uint %1 UMin %11988 %502
      %11990 = OpConvertUToF %v3float %11989
      %11991 = OpExtInst %v3float %1 Fma %11954 %11990 %11986
      %11992 = OpExtInst %v3float %1 FClamp %11991 %103 %128
      %11993 = OpCompositeExtract %float %11992 0
      %11994 = OpFMul %float %11993 %float_127
      %11995 = OpConvertFToU %uint %11994
      %11996 = OpShiftLeftLogical %uint %11995 %uint_0
      %11997 = OpCompositeExtract %float %11992 1
      %11998 = OpFMul %float %11997 %float_127
      %11999 = OpConvertFToU %uint %11998
      %12000 = OpShiftLeftLogical %uint %11999 %uint_7
      %12001 = OpCompositeExtract %float %11992 2
      %12002 = OpFMul %float %12001 %float_63
      %12003 = OpConvertFToU %uint %12002
      %12004 = OpShiftLeftLogical %uint %12003 %uint_14
      %12005 = OpBitwiseOr %uint %11996 %12000
      %12006 = OpBitwiseOr %uint %12005 %12004
      %12007 = OpVectorShuffle %v3float %10798 %10798 0 1 2
      %12008 = OpExtInst %v3float %1 FClamp %12007 %103 %128
      %12009 = OpCompositeExtract %float %12008 0
               OpSelectionMerge %12010 None
               OpSwitch %uint_0 %12011
      %12011 = OpLabel
      %12012 = OpFOrdLessThan %bool %12009 %float_0_00313066994
               OpSelectionMerge %12013 None
               OpBranchConditional %12012 %12014 %12013
      %12014 = OpLabel
      %12015 = OpFMul %float %12009 %float_12_9200001
               OpBranch %12010
      %12013 = OpLabel
      %12016 = OpExtInst %float %1 Pow %12009 %float_0_416666657
      %12017 = OpExtInst %float %1 Fma %12016 %float_1_05499995 %float_n0_0549999997
               OpBranch %12010
      %12010 = OpLabel
      %12018 = OpPhi %float %12015 %12014 %12017 %12013
      %12019 = OpCompositeExtract %float %12008 1
               OpSelectionMerge %12020 None
               OpSwitch %uint_0 %12021
      %12021 = OpLabel
      %12022 = OpFOrdLessThan %bool %12019 %float_0_00313066994
               OpSelectionMerge %12023 None
               OpBranchConditional %12022 %12024 %12023
      %12024 = OpLabel
      %12025 = OpFMul %float %12019 %float_12_9200001
               OpBranch %12020
      %12023 = OpLabel
      %12026 = OpExtInst %float %1 Pow %12019 %float_0_416666657
      %12027 = OpExtInst %float %1 Fma %12026 %float_1_05499995 %float_n0_0549999997
               OpBranch %12020
      %12020 = OpLabel
      %12028 = OpPhi %float %12025 %12024 %12027 %12023
      %12029 = OpCompositeExtract %float %12008 2
               OpSelectionMerge %12030 None
               OpSwitch %uint_0 %12031
      %12031 = OpLabel
      %12032 = OpFOrdLessThan %bool %12029 %float_0_00313066994
               OpSelectionMerge %12033 None
               OpBranchConditional %12032 %12034 %12033
      %12034 = OpLabel
      %12035 = OpFMul %float %12029 %float_12_9200001
               OpBranch %12030
      %12033 = OpLabel
      %12036 = OpExtInst %float %1 Pow %12029 %float_0_416666657
      %12037 = OpExtInst %float %1 Fma %12036 %float_1_05499995 %float_n0_0549999997
               OpBranch %12030
      %12030 = OpLabel
      %12038 = OpPhi %float %12035 %12034 %12037 %12033
      %12039 = OpCompositeConstruct %v3float %12018 %12028 %12038
      %12040 = OpBitcast %v3uint %12039
      %12041 = OpBitwiseAnd %v3uint %12040 %350
      %12042 = OpExtInst %v3uint %1 UMin %12041 %502
      %12043 = OpConvertUToF %v3float %12042
      %12044 = OpExtInst %v3float %1 Fma %11954 %12043 %12039
      %12045 = OpExtInst %v3float %1 FClamp %12044 %103 %128
      %12046 = OpCompositeExtract %float %12045 0
      %12047 = OpFMul %float %12046 %float_127
      %12048 = OpConvertFToU %uint %12047
      %12049 = OpShiftLeftLogical %uint %12048 %uint_0
      %12050 = OpCompositeExtract %float %12045 1
      %12051 = OpFMul %float %12050 %float_127
      %12052 = OpConvertFToU %uint %12051
      %12053 = OpShiftLeftLogical %uint %12052 %uint_7
      %12054 = OpCompositeExtract %float %12045 2
      %12055 = OpFMul %float %12054 %float_63
      %12056 = OpConvertFToU %uint %12055
      %12057 = OpShiftLeftLogical %uint %12056 %uint_14
      %12058 = OpBitwiseOr %uint %12049 %12053
      %12059 = OpBitwiseOr %uint %12058 %12057
      %12060 = OpBitwiseOr %uint %11928 %uint_0
      %12061 = OpULessThan %bool %11670 %uint_3
               OpSelectionMerge %12062 None
               OpBranchConditional %12061 %12063 %12064
      %12064 = OpLabel
      %12065 = OpISub %uint %11670 %uint_3
      %12066 = OpCompositeExtract %uint %10785 0
      %12067 = OpCompositeExtract %uint %10785 1
      %12068 = OpCompositeConstruct %v3uint %12066 %12067 %12065
               OpImageWrite %10786 %12068 %12060 None
               OpBranch %12062
      %12063 = OpLabel
      %12069 = OpIEqual %bool %11670 %uint_0
      %12070 = OpSelect %uint %12069 %12060 %11669
      %12071 = OpIEqual %bool %11670 %uint_1
      %12072 = OpSelect %uint %12071 %12060 %11668
      %12073 = OpIEqual %bool %11670 %uint_2
      %12074 = OpSelect %uint %12073 %12060 %uint_0
               OpBranch %12062
      %12062 = OpLabel
      %12075 = OpPhi %uint %uint_0 %12064 %12074 %12063
      %12076 = OpPhi %uint %11668 %12064 %12072 %12063
      %12077 = OpPhi %uint %11669 %12064 %12070 %12063
      %12078 = OpIAdd %uint %11670 %uint_1
      %12079 = OpBitwiseOr %uint %12006 %uint_0
      %12080 = OpULessThan %bool %12078 %uint_3
               OpSelectionMerge %12081 None
               OpBranchConditional %12080 %12082 %12083
      %12083 = OpLabel
      %12084 = OpIAdd %uint %11670 %uint_4294967294
      %12085 = OpCompositeExtract %uint %10785 0
      %12086 = OpCompositeExtract %uint %10785 1
      %12087 = OpCompositeConstruct %v3uint %12085 %12086 %12084
               OpImageWrite %10786 %12087 %12079 None
               OpBranch %12081
      %12082 = OpLabel
      %12088 = OpIEqual %bool %12078 %uint_0
      %12089 = OpSelect %uint %12088 %12079 %12077
      %12090 = OpIEqual %bool %12078 %uint_1
      %12091 = OpSelect %uint %12090 %12079 %12076
      %12092 = OpIEqual %bool %12078 %uint_2
      %12093 = OpSelect %uint %12092 %12079 %12075
               OpBranch %12081
      %12081 = OpLabel
      %12094 = OpPhi %uint %12075 %12083 %12093 %12082
      %12095 = OpPhi %uint %12076 %12083 %12091 %12082
      %12096 = OpPhi %uint %12077 %12083 %12089 %12082
      %12097 = OpIAdd %uint %11670 %uint_2
      %12098 = OpBitwiseOr %uint %12059 %uint_0
      %12099 = OpULessThan %bool %12097 %uint_3
               OpSelectionMerge %12100 None
               OpBranchConditional %12099 %12101 %12102
      %12102 = OpLabel
      %12103 = OpIAdd %uint %11670 %uint_4294967295
      %12104 = OpCompositeExtract %uint %10785 0
      %12105 = OpCompositeExtract %uint %10785 1
      %12106 = OpCompositeConstruct %v3uint %12104 %12105 %12103
               OpImageWrite %10786 %12106 %12098 None
               OpBranch %12100
      %12101 = OpLabel
      %12107 = OpIEqual %bool %12097 %uint_0
      %12108 = OpSelect %uint %12107 %12098 %12096
      %12109 = OpIEqual %bool %12097 %uint_1
      %12110 = OpSelect %uint %12109 %12098 %12095
      %12111 = OpIEqual %bool %12097 %uint_2
      %12112 = OpSelect %uint %12111 %12098 %12094
               OpBranch %12100
      %12100 = OpLabel
      %12113 = OpPhi %uint %12094 %12102 %12112 %12101
      %12114 = OpPhi %uint %12095 %12102 %12110 %12101
      %12115 = OpPhi %uint %12096 %12102 %12108 %12101
      %12116 = OpIAdd %uint %11670 %uint_3
               OpBranch %11948
      %11948 = OpLabel
      %12117 = OpPhi %uint %uint_0 %11946 %12113 %12100
      %12118 = OpPhi %uint %11668 %11946 %12114 %12100
      %12119 = OpPhi %uint %11669 %11946 %12115 %12100
      %12120 = OpPhi %uint %11670 %11946 %12116 %12100
      %12121 = OpSelect %uint %11947 %uint_0 %11921
               OpBranch %11944
      %11945 = OpLabel
      %12122 = OpExtInst %float %1 FAbs %461
      %12123 = OpFSub %float %float_1 %12122
      %12124 = OpVectorShuffle %v3float %10788 %459 0 1 2
      %12125 = OpFSub %float %8393 %float_0_5
      %12126 = OpFMul %float %12125 %float_0_00787401572
      %12127 = OpFMul %float %12125 %float_0_0158730168
      %12128 = OpCompositeConstruct %v3float %12126 %12126 %12127
      %12129 = OpExtInst %v3float %1 FClamp %12124 %103 %128
      %12130 = OpCompositeExtract %float %12129 0
               OpSelectionMerge %12131 None
               OpSwitch %uint_0 %12132
      %12132 = OpLabel
      %12133 = OpFOrdLessThan %bool %12130 %float_0_00313066994
               OpSelectionMerge %12134 None
               OpBranchConditional %12133 %12135 %12134
      %12135 = OpLabel
      %12136 = OpFMul %float %12130 %float_12_9200001
               OpBranch %12131
      %12134 = OpLabel
      %12137 = OpExtInst %float %1 Pow %12130 %float_0_416666657
      %12138 = OpExtInst %float %1 Fma %12137 %float_1_05499995 %float_n0_0549999997
               OpBranch %12131
      %12131 = OpLabel
      %12139 = OpPhi %float %12136 %12135 %12138 %12134
      %12140 = OpCompositeExtract %float %12129 1
               OpSelectionMerge %12141 None
               OpSwitch %uint_0 %12142
      %12142 = OpLabel
      %12143 = OpFOrdLessThan %bool %12140 %float_0_00313066994
               OpSelectionMerge %12144 None
               OpBranchConditional %12143 %12145 %12144
      %12145 = OpLabel
      %12146 = OpFMul %float %12140 %float_12_9200001
               OpBranch %12141
      %12144 = OpLabel
      %12147 = OpExtInst %float %1 Pow %12140 %float_0_416666657
      %12148 = OpExtInst %float %1 Fma %12147 %float_1_05499995 %float_n0_0549999997
               OpBranch %12141
      %12141 = OpLabel
      %12149 = OpPhi %float %12146 %12145 %12148 %12144
      %12150 = OpCompositeExtract %float %12129 2
               OpSelectionMerge %12151 None
               OpSwitch %uint_0 %12152
      %12152 = OpLabel
      %12153 = OpFOrdLessThan %bool %12150 %float_0_00313066994
               OpSelectionMerge %12154 None
               OpBranchConditional %12153 %12155 %12154
      %12155 = OpLabel
      %12156 = OpFMul %float %12150 %float_12_9200001
               OpBranch %12151
      %12154 = OpLabel
      %12157 = OpExtInst %float %1 Pow %12150 %float_0_416666657
      %12158 = OpExtInst %float %1 Fma %12157 %float_1_05499995 %float_n0_0549999997
               OpBranch %12151
      %12151 = OpLabel
      %12159 = OpPhi %float %12156 %12155 %12158 %12154
      %12160 = OpCompositeConstruct %v3float %12139 %12149 %12159
      %12161 = OpBitcast %v3uint %12160
      %12162 = OpBitwiseAnd %v3uint %12161 %350
      %12163 = OpExtInst %v3uint %1 UMin %12162 %502
      %12164 = OpConvertUToF %v3float %12163
      %12165 = OpExtInst %v3float %1 Fma %12128 %12164 %12160
      %12166 = OpExtInst %v3float %1 FClamp %12165 %103 %128
      %12167 = OpCompositeExtract %float %12166 0
      %12168 = OpFMul %float %12167 %float_127
      %12169 = OpConvertFToU %uint %12168
      %12170 = OpShiftLeftLogical %uint %12169 %uint_0
      %12171 = OpCompositeExtract %float %12166 1
      %12172 = OpFMul %float %12171 %float_127
      %12173 = OpConvertFToU %uint %12172
      %12174 = OpShiftLeftLogical %uint %12173 %uint_7
      %12175 = OpCompositeExtract %float %12166 2
      %12176 = OpFMul %float %12175 %float_63
      %12177 = OpConvertFToU %uint %12176
      %12178 = OpShiftLeftLogical %uint %12177 %uint_14
      %12179 = OpBitwiseOr %uint %12170 %12174
      %12180 = OpBitwiseOr %uint %12179 %12178
      %12181 = OpVectorShuffle %v3float %10798 %10798 0 1 2
      %12182 = OpExtInst %v3float %1 FClamp %12181 %103 %128
      %12183 = OpCompositeExtract %float %12182 0
               OpSelectionMerge %12184 None
               OpSwitch %uint_0 %12185
      %12185 = OpLabel
      %12186 = OpFOrdLessThan %bool %12183 %float_0_00313066994
               OpSelectionMerge %12187 None
               OpBranchConditional %12186 %12188 %12187
      %12188 = OpLabel
      %12189 = OpFMul %float %12183 %float_12_9200001
               OpBranch %12184
      %12187 = OpLabel
      %12190 = OpExtInst %float %1 Pow %12183 %float_0_416666657
      %12191 = OpExtInst %float %1 Fma %12190 %float_1_05499995 %float_n0_0549999997
               OpBranch %12184
      %12184 = OpLabel
      %12192 = OpPhi %float %12189 %12188 %12191 %12187
      %12193 = OpCompositeExtract %float %12182 1
               OpSelectionMerge %12194 None
               OpSwitch %uint_0 %12195
      %12195 = OpLabel
      %12196 = OpFOrdLessThan %bool %12193 %float_0_00313066994
               OpSelectionMerge %12197 None
               OpBranchConditional %12196 %12198 %12197
      %12198 = OpLabel
      %12199 = OpFMul %float %12193 %float_12_9200001
               OpBranch %12194
      %12197 = OpLabel
      %12200 = OpExtInst %float %1 Pow %12193 %float_0_416666657
      %12201 = OpExtInst %float %1 Fma %12200 %float_1_05499995 %float_n0_0549999997
               OpBranch %12194
      %12194 = OpLabel
      %12202 = OpPhi %float %12199 %12198 %12201 %12197
      %12203 = OpCompositeExtract %float %12182 2
               OpSelectionMerge %12204 None
               OpSwitch %uint_0 %12205
      %12205 = OpLabel
      %12206 = OpFOrdLessThan %bool %12203 %float_0_00313066994
               OpSelectionMerge %12207 None
               OpBranchConditional %12206 %12208 %12207
      %12208 = OpLabel
      %12209 = OpFMul %float %12203 %float_12_9200001
               OpBranch %12204
      %12207 = OpLabel
      %12210 = OpExtInst %float %1 Pow %12203 %float_0_416666657
      %12211 = OpExtInst %float %1 Fma %12210 %float_1_05499995 %float_n0_0549999997
               OpBranch %12204
      %12204 = OpLabel
      %12212 = OpPhi %float %12209 %12208 %12211 %12207
      %12213 = OpCompositeConstruct %v3float %12192 %12202 %12212
      %12214 = OpBitcast %v3uint %12213
      %12215 = OpBitwiseAnd %v3uint %12214 %350
      %12216 = OpExtInst %v3uint %1 UMin %12215 %502
      %12217 = OpConvertUToF %v3float %12216
      %12218 = OpExtInst %v3float %1 Fma %12128 %12217 %12213
      %12219 = OpExtInst %v3float %1 FClamp %12218 %103 %128
      %12220 = OpCompositeExtract %float %12219 0
      %12221 = OpFMul %float %12220 %float_127
      %12222 = OpConvertFToU %uint %12221
      %12223 = OpShiftLeftLogical %uint %12222 %uint_0
      %12224 = OpCompositeExtract %float %12219 1
      %12225 = OpFMul %float %12224 %float_127
      %12226 = OpConvertFToU %uint %12225
      %12227 = OpShiftLeftLogical %uint %12226 %uint_7
      %12228 = OpCompositeExtract %float %12219 2
      %12229 = OpFMul %float %12228 %float_63
      %12230 = OpConvertFToU %uint %12229
      %12231 = OpShiftLeftLogical %uint %12230 %uint_14
      %12232 = OpBitwiseOr %uint %12223 %12227
      %12233 = OpBitwiseOr %uint %12232 %12231
      %12234 = OpExtInst %float %1 FClamp %12123 %float_0 %float_1
      %12235 = OpExtInst %float %1 FClamp %12234 %float_0 %float_1
      %12236 = OpFMul %float %12235 %float_127
      %12237 = OpConvertFToU %uint %12236
      %12238 = OpExtInst %uint %1 PackHalf2x16 %559
      %12239 = OpShiftLeftLogical %uint %12238 %uint_15
      %12240 = OpBitwiseAnd %uint %12239 %uint_1072693248
      %12241 = OpShiftLeftLogical %uint %12238 %uint_5
      %12242 = OpBitwiseAnd %uint %12241 %uint_1047552
      %12243 = OpShiftRightLogical %uint %12238 %uint_5
      %12244 = OpBitwiseAnd %uint %12243 %uint_1023
      %12245 = OpBitwiseOr %uint %12240 %12242
      %12246 = OpBitwiseOr %uint %12245 %12244
      %12247 = OpBitwiseAnd %uint %12246 %uint_4095
      %12248 = OpShiftRightLogical %uint %12246 %uint_12
      %12249 = OpBitwiseAnd %uint %12248 %uint_4095
      %12250 = OpShiftRightLogical %uint %12246 %uint_24
      %12251 = OpBitwiseAnd %uint %12250 %uint_63
      %12252 = OpBitwiseAnd %uint %12237 %uint_127
      %12253 = OpShiftLeftLogical %uint %12252 %uint_19
      %12254 = OpBitwiseOr %uint %11928 %12253
      %12255 = OpShiftLeftLogical %uint %12251 %uint_26
      %12256 = OpBitwiseOr %uint %12254 %12255
      %12257 = OpULessThan %bool %11670 %uint_3
               OpSelectionMerge %12258 None
               OpBranchConditional %12257 %12259 %12260
      %12260 = OpLabel
      %12261 = OpISub %uint %11670 %uint_3
      %12262 = OpCompositeExtract %uint %10785 0
      %12263 = OpCompositeExtract %uint %10785 1
      %12264 = OpCompositeConstruct %v3uint %12262 %12263 %12261
               OpImageWrite %10786 %12264 %12256 None
               OpBranch %12258
      %12259 = OpLabel
      %12265 = OpIEqual %bool %11670 %uint_0
      %12266 = OpSelect %uint %12265 %12256 %11669
      %12267 = OpIEqual %bool %11670 %uint_1
      %12268 = OpSelect %uint %12267 %12256 %11668
      %12269 = OpIEqual %bool %11670 %uint_2
      %12270 = OpSelect %uint %12269 %12256 %uint_0
               OpBranch %12258
      %12258 = OpLabel
      %12271 = OpPhi %uint %uint_0 %12260 %12270 %12259
      %12272 = OpPhi %uint %11668 %12260 %12268 %12259
      %12273 = OpPhi %uint %11669 %12260 %12266 %12259
      %12274 = OpIAdd %uint %11670 %uint_1
      %12275 = OpShiftLeftLogical %uint %12247 %uint_20
      %12276 = OpBitwiseOr %uint %12180 %12275
      %12277 = OpULessThan %bool %12274 %uint_3
               OpSelectionMerge %12278 None
               OpBranchConditional %12277 %12279 %12280
      %12280 = OpLabel
      %12281 = OpIAdd %uint %11670 %uint_4294967294
      %12282 = OpCompositeExtract %uint %10785 0
      %12283 = OpCompositeExtract %uint %10785 1
      %12284 = OpCompositeConstruct %v3uint %12282 %12283 %12281
               OpImageWrite %10786 %12284 %12276 None
               OpBranch %12278
      %12279 = OpLabel
      %12285 = OpIEqual %bool %12274 %uint_0
      %12286 = OpSelect %uint %12285 %12276 %12273
      %12287 = OpIEqual %bool %12274 %uint_1
      %12288 = OpSelect %uint %12287 %12276 %12272
      %12289 = OpIEqual %bool %12274 %uint_2
      %12290 = OpSelect %uint %12289 %12276 %12271
               OpBranch %12278
      %12278 = OpLabel
      %12291 = OpPhi %uint %12271 %12280 %12290 %12279
      %12292 = OpPhi %uint %12272 %12280 %12288 %12279
      %12293 = OpPhi %uint %12273 %12280 %12286 %12279
      %12294 = OpIAdd %uint %11670 %uint_2
      %12295 = OpShiftLeftLogical %uint %12249 %uint_20
      %12296 = OpBitwiseOr %uint %12233 %12295
      %12297 = OpULessThan %bool %12294 %uint_3
               OpSelectionMerge %12298 None
               OpBranchConditional %12297 %12299 %12300
      %12300 = OpLabel
      %12301 = OpIAdd %uint %11670 %uint_4294967295
      %12302 = OpCompositeExtract %uint %10785 0
      %12303 = OpCompositeExtract %uint %10785 1
      %12304 = OpCompositeConstruct %v3uint %12302 %12303 %12301
               OpImageWrite %10786 %12304 %12296 None
               OpBranch %12298
      %12299 = OpLabel
      %12305 = OpIEqual %bool %12294 %uint_0
      %12306 = OpSelect %uint %12305 %12296 %12293
      %12307 = OpIEqual %bool %12294 %uint_1
      %12308 = OpSelect %uint %12307 %12296 %12292
      %12309 = OpIEqual %bool %12294 %uint_2
      %12310 = OpSelect %uint %12309 %12296 %12291
               OpBranch %12298
      %12298 = OpLabel
      %12311 = OpPhi %uint %12291 %12300 %12310 %12299
      %12312 = OpPhi %uint %12292 %12300 %12308 %12299
      %12313 = OpPhi %uint %12293 %12300 %12306 %12299
      %12314 = OpIAdd %uint %11670 %uint_3
               OpBranch %11944
      %11944 = OpLabel
      %12315 = OpPhi %uint %12121 %11948 %uint_0 %12298
      %12316 = OpPhi %uint %12117 %11948 %12311 %12298
      %12317 = OpPhi %uint %12118 %11948 %12312 %12298
      %12318 = OpPhi %uint %12119 %11948 %12313 %12298
      %12319 = OpPhi %uint %12120 %11948 %12314 %12298
               OpBranch %11938
      %11939 = OpLabel
      %12320 = OpVectorShuffle %v3float %10788 %459 0 1 2
      %12321 = OpFSub %float %8393 %float_0_5
      %12322 = OpFMul %float %12321 %float_0_00787401572
      %12323 = OpFMul %float %12321 %float_0_0158730168
      %12324 = OpCompositeConstruct %v3float %12322 %12322 %12323
      %12325 = OpExtInst %v3float %1 FClamp %12320 %103 %128
      %12326 = OpCompositeExtract %float %12325 0
               OpSelectionMerge %12327 None
               OpSwitch %uint_0 %12328
      %12328 = OpLabel
      %12329 = OpFOrdLessThan %bool %12326 %float_0_00313066994
               OpSelectionMerge %12330 None
               OpBranchConditional %12329 %12331 %12330
      %12331 = OpLabel
      %12332 = OpFMul %float %12326 %float_12_9200001
               OpBranch %12327
      %12330 = OpLabel
      %12333 = OpExtInst %float %1 Pow %12326 %float_0_416666657
      %12334 = OpExtInst %float %1 Fma %12333 %float_1_05499995 %float_n0_0549999997
               OpBranch %12327
      %12327 = OpLabel
      %12335 = OpPhi %float %12332 %12331 %12334 %12330
      %12336 = OpCompositeExtract %float %12325 1
               OpSelectionMerge %12337 None
               OpSwitch %uint_0 %12338
      %12338 = OpLabel
      %12339 = OpFOrdLessThan %bool %12336 %float_0_00313066994
               OpSelectionMerge %12340 None
               OpBranchConditional %12339 %12341 %12340
      %12341 = OpLabel
      %12342 = OpFMul %float %12336 %float_12_9200001
               OpBranch %12337
      %12340 = OpLabel
      %12343 = OpExtInst %float %1 Pow %12336 %float_0_416666657
      %12344 = OpExtInst %float %1 Fma %12343 %float_1_05499995 %float_n0_0549999997
               OpBranch %12337
      %12337 = OpLabel
      %12345 = OpPhi %float %12342 %12341 %12344 %12340
      %12346 = OpCompositeExtract %float %12325 2
               OpSelectionMerge %12347 None
               OpSwitch %uint_0 %12348
      %12348 = OpLabel
      %12349 = OpFOrdLessThan %bool %12346 %float_0_00313066994
               OpSelectionMerge %12350 None
               OpBranchConditional %12349 %12351 %12350
      %12351 = OpLabel
      %12352 = OpFMul %float %12346 %float_12_9200001
               OpBranch %12347
      %12350 = OpLabel
      %12353 = OpExtInst %float %1 Pow %12346 %float_0_416666657
      %12354 = OpExtInst %float %1 Fma %12353 %float_1_05499995 %float_n0_0549999997
               OpBranch %12347
      %12347 = OpLabel
      %12355 = OpPhi %float %12352 %12351 %12354 %12350
      %12356 = OpCompositeConstruct %v3float %12335 %12345 %12355
      %12357 = OpBitcast %v3uint %12356
      %12358 = OpBitwiseAnd %v3uint %12357 %350
      %12359 = OpExtInst %v3uint %1 UMin %12358 %502
      %12360 = OpConvertUToF %v3float %12359
      %12361 = OpExtInst %v3float %1 Fma %12324 %12360 %12356
      %12362 = OpExtInst %v3float %1 FClamp %12361 %103 %128
      %12363 = OpCompositeExtract %float %12362 0
      %12364 = OpFMul %float %12363 %float_127
      %12365 = OpConvertFToU %uint %12364
      %12366 = OpShiftLeftLogical %uint %12365 %uint_0
      %12367 = OpCompositeExtract %float %12362 1
      %12368 = OpFMul %float %12367 %float_127
      %12369 = OpConvertFToU %uint %12368
      %12370 = OpShiftLeftLogical %uint %12369 %uint_7
      %12371 = OpCompositeExtract %float %12362 2
      %12372 = OpFMul %float %12371 %float_63
      %12373 = OpConvertFToU %uint %12372
      %12374 = OpShiftLeftLogical %uint %12373 %uint_14
      %12375 = OpBitwiseOr %uint %12366 %12370
      %12376 = OpBitwiseOr %uint %12375 %12374
      %12377 = OpVectorShuffle %v3float %10798 %10798 0 1 2
      %12378 = OpExtInst %v3float %1 FClamp %12377 %103 %128
      %12379 = OpCompositeExtract %float %12378 0
               OpSelectionMerge %12380 None
               OpSwitch %uint_0 %12381
      %12381 = OpLabel
      %12382 = OpFOrdLessThan %bool %12379 %float_0_00313066994
               OpSelectionMerge %12383 None
               OpBranchConditional %12382 %12384 %12383
      %12384 = OpLabel
      %12385 = OpFMul %float %12379 %float_12_9200001
               OpBranch %12380
      %12383 = OpLabel
      %12386 = OpExtInst %float %1 Pow %12379 %float_0_416666657
      %12387 = OpExtInst %float %1 Fma %12386 %float_1_05499995 %float_n0_0549999997
               OpBranch %12380
      %12380 = OpLabel
      %12388 = OpPhi %float %12385 %12384 %12387 %12383
      %12389 = OpCompositeExtract %float %12378 1
               OpSelectionMerge %12390 None
               OpSwitch %uint_0 %12391
      %12391 = OpLabel
      %12392 = OpFOrdLessThan %bool %12389 %float_0_00313066994
               OpSelectionMerge %12393 None
               OpBranchConditional %12392 %12394 %12393
      %12394 = OpLabel
      %12395 = OpFMul %float %12389 %float_12_9200001
               OpBranch %12390
      %12393 = OpLabel
      %12396 = OpExtInst %float %1 Pow %12389 %float_0_416666657
      %12397 = OpExtInst %float %1 Fma %12396 %float_1_05499995 %float_n0_0549999997
               OpBranch %12390
      %12390 = OpLabel
      %12398 = OpPhi %float %12395 %12394 %12397 %12393
      %12399 = OpCompositeExtract %float %12378 2
               OpSelectionMerge %12400 None
               OpSwitch %uint_0 %12401
      %12401 = OpLabel
      %12402 = OpFOrdLessThan %bool %12399 %float_0_00313066994
               OpSelectionMerge %12403 None
               OpBranchConditional %12402 %12404 %12403
      %12404 = OpLabel
      %12405 = OpFMul %float %12399 %float_12_9200001
               OpBranch %12400
      %12403 = OpLabel
      %12406 = OpExtInst %float %1 Pow %12399 %float_0_416666657
      %12407 = OpExtInst %float %1 Fma %12406 %float_1_05499995 %float_n0_0549999997
               OpBranch %12400
      %12400 = OpLabel
      %12408 = OpPhi %float %12405 %12404 %12407 %12403
      %12409 = OpCompositeConstruct %v3float %12388 %12398 %12408
      %12410 = OpBitcast %v3uint %12409
      %12411 = OpBitwiseAnd %v3uint %12410 %350
      %12412 = OpExtInst %v3uint %1 UMin %12411 %502
      %12413 = OpConvertUToF %v3float %12412
      %12414 = OpExtInst %v3float %1 Fma %12324 %12413 %12409
      %12415 = OpExtInst %v3float %1 FClamp %12414 %103 %128
      %12416 = OpCompositeExtract %float %12415 0
      %12417 = OpFMul %float %12416 %float_127
      %12418 = OpConvertFToU %uint %12417
      %12419 = OpShiftLeftLogical %uint %12418 %uint_0
      %12420 = OpCompositeExtract %float %12415 1
      %12421 = OpFMul %float %12420 %float_127
      %12422 = OpConvertFToU %uint %12421
      %12423 = OpShiftLeftLogical %uint %12422 %uint_7
      %12424 = OpCompositeExtract %float %12415 2
      %12425 = OpFMul %float %12424 %float_63
      %12426 = OpConvertFToU %uint %12425
      %12427 = OpShiftLeftLogical %uint %12426 %uint_14
      %12428 = OpBitwiseOr %uint %12419 %12423
      %12429 = OpBitwiseOr %uint %12428 %12427
               OpSelectionMerge %12430 None
               OpSwitch %uint_0 %12431
      %12431 = OpLabel
               OpSelectionMerge %12432 None
               OpBranchConditional %true %12433 %12432
      %12433 = OpLabel
               OpBranch %12430
      %12432 = OpLabel
      %12434 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12430
      %12430 = OpLabel
      %12435 = OpPhi %float %float_0 %12433 %12434 %12432
               OpSelectionMerge %12436 None
               OpSwitch %uint_0 %12437
      %12437 = OpLabel
               OpSelectionMerge %12438 None
               OpBranchConditional %true %12439 %12438
      %12439 = OpLabel
               OpBranch %12436
      %12438 = OpLabel
      %12440 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12436
      %12436 = OpLabel
      %12441 = OpPhi %float %float_0 %12439 %12440 %12438
               OpSelectionMerge %12442 None
               OpSwitch %uint_0 %12443
      %12443 = OpLabel
               OpSelectionMerge %12444 None
               OpBranchConditional %true %12445 %12444
      %12445 = OpLabel
               OpBranch %12442
      %12444 = OpLabel
      %12446 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12442
      %12442 = OpLabel
      %12447 = OpPhi %float %float_0 %12445 %12446 %12444
      %12448 = OpCompositeConstruct %v3float %12435 %12441 %12447
      %12449 = OpBitcast %v3uint %12448
      %12450 = OpBitwiseAnd %v3uint %12449 %350
      %12451 = OpExtInst %v3uint %1 UMin %12450 %502
      %12452 = OpConvertUToF %v3float %12451
      %12453 = OpExtInst %v3float %1 Fma %12324 %12452 %12448
      %12454 = OpExtInst %v3float %1 FClamp %12453 %103 %128
      %12455 = OpCompositeExtract %float %12454 0
      %12456 = OpFMul %float %12455 %float_127
      %12457 = OpConvertFToU %uint %12456
      %12458 = OpShiftLeftLogical %uint %12457 %uint_0
      %12459 = OpCompositeExtract %float %12454 1
      %12460 = OpFMul %float %12459 %float_127
      %12461 = OpConvertFToU %uint %12460
      %12462 = OpShiftLeftLogical %uint %12461 %uint_7
      %12463 = OpCompositeExtract %float %12454 2
      %12464 = OpFMul %float %12463 %float_63
      %12465 = OpConvertFToU %uint %12464
      %12466 = OpShiftLeftLogical %uint %12465 %uint_14
      %12467 = OpBitwiseOr %uint %12458 %12462
      %12468 = OpBitwiseOr %uint %12467 %12466
      %12469 = OpBitwiseOr %uint %11928 %uint_0
      %12470 = OpULessThan %bool %11670 %uint_3
               OpSelectionMerge %12471 None
               OpBranchConditional %12470 %12472 %12473
      %12473 = OpLabel
      %12474 = OpISub %uint %11670 %uint_3
      %12475 = OpCompositeExtract %uint %10785 0
      %12476 = OpCompositeExtract %uint %10785 1
      %12477 = OpCompositeConstruct %v3uint %12475 %12476 %12474
               OpImageWrite %10786 %12477 %12469 None
               OpBranch %12471
      %12472 = OpLabel
      %12478 = OpIEqual %bool %11670 %uint_0
      %12479 = OpSelect %uint %12478 %12469 %11669
      %12480 = OpIEqual %bool %11670 %uint_1
      %12481 = OpSelect %uint %12480 %12469 %11668
      %12482 = OpIEqual %bool %11670 %uint_2
      %12483 = OpSelect %uint %12482 %12469 %uint_0
               OpBranch %12471
      %12471 = OpLabel
      %12484 = OpPhi %uint %uint_0 %12473 %12483 %12472
      %12485 = OpPhi %uint %11668 %12473 %12481 %12472
      %12486 = OpPhi %uint %11669 %12473 %12479 %12472
      %12487 = OpIAdd %uint %11670 %uint_1
      %12488 = OpBitwiseAnd %uint %12468 %uint_1047552
      %12489 = OpShiftLeftLogical %uint %12488 %uint_10
      %12490 = OpBitwiseOr %uint %12376 %12489
      %12491 = OpULessThan %bool %12487 %uint_3
               OpSelectionMerge %12492 None
               OpBranchConditional %12491 %12493 %12494
      %12494 = OpLabel
      %12495 = OpIAdd %uint %11670 %uint_4294967294
      %12496 = OpCompositeExtract %uint %10785 0
      %12497 = OpCompositeExtract %uint %10785 1
      %12498 = OpCompositeConstruct %v3uint %12496 %12497 %12495
               OpImageWrite %10786 %12498 %12490 None
               OpBranch %12492
      %12493 = OpLabel
      %12499 = OpIEqual %bool %12487 %uint_0
      %12500 = OpSelect %uint %12499 %12490 %12486
      %12501 = OpIEqual %bool %12487 %uint_1
      %12502 = OpSelect %uint %12501 %12490 %12485
      %12503 = OpIEqual %bool %12487 %uint_2
      %12504 = OpSelect %uint %12503 %12490 %12484
               OpBranch %12492
      %12492 = OpLabel
      %12505 = OpPhi %uint %12484 %12494 %12504 %12493
      %12506 = OpPhi %uint %12485 %12494 %12502 %12493
      %12507 = OpPhi %uint %12486 %12494 %12500 %12493
      %12508 = OpIAdd %uint %11670 %uint_2
      %12509 = OpBitwiseAnd %uint %12468 %uint_1023
      %12510 = OpShiftLeftLogical %uint %12509 %uint_20
      %12511 = OpBitwiseOr %uint %12429 %12510
      %12512 = OpULessThan %bool %12508 %uint_3
               OpSelectionMerge %12513 None
               OpBranchConditional %12512 %12514 %12515
      %12515 = OpLabel
      %12516 = OpIAdd %uint %11670 %uint_4294967295
      %12517 = OpCompositeExtract %uint %10785 0
      %12518 = OpCompositeExtract %uint %10785 1
      %12519 = OpCompositeConstruct %v3uint %12517 %12518 %12516
               OpImageWrite %10786 %12519 %12511 None
               OpBranch %12513
      %12514 = OpLabel
      %12520 = OpIEqual %bool %12508 %uint_0
      %12521 = OpSelect %uint %12520 %12511 %12507
      %12522 = OpIEqual %bool %12508 %uint_1
      %12523 = OpSelect %uint %12522 %12511 %12506
      %12524 = OpIEqual %bool %12508 %uint_2
      %12525 = OpSelect %uint %12524 %12511 %12505
               OpBranch %12513
      %12513 = OpLabel
      %12526 = OpPhi %uint %12505 %12515 %12525 %12514
      %12527 = OpPhi %uint %12506 %12515 %12523 %12514
      %12528 = OpPhi %uint %12507 %12515 %12521 %12514
      %12529 = OpIAdd %uint %11670 %uint_3
               OpBranch %11938
      %11938 = OpLabel
      %12530 = OpPhi %uint %12315 %11944 %uint_0 %12513
      %12531 = OpPhi %uint %12316 %11944 %12526 %12513
      %12532 = OpPhi %uint %12317 %11944 %12527 %12513
      %12533 = OpPhi %uint %12318 %11944 %12528 %12513
      %12534 = OpPhi %uint %12319 %11944 %12529 %12513
               OpBranch %11934
      %11935 = OpLabel
      %12535 = OpVectorShuffle %v3float %10788 %459 0 1 2
      %12536 = OpFSub %float %8393 %float_0_5
      %12537 = OpFMul %float %12536 %float_0_00787401572
      %12538 = OpFMul %float %12536 %float_0_0158730168
      %12539 = OpCompositeConstruct %v3float %12537 %12537 %12538
      %12540 = OpExtInst %v3float %1 FClamp %12535 %103 %128
      %12541 = OpCompositeExtract %float %12540 0
               OpSelectionMerge %12542 None
               OpSwitch %uint_0 %12543
      %12543 = OpLabel
      %12544 = OpFOrdLessThan %bool %12541 %float_0_00313066994
               OpSelectionMerge %12545 None
               OpBranchConditional %12544 %12546 %12545
      %12546 = OpLabel
      %12547 = OpFMul %float %12541 %float_12_9200001
               OpBranch %12542
      %12545 = OpLabel
      %12548 = OpExtInst %float %1 Pow %12541 %float_0_416666657
      %12549 = OpExtInst %float %1 Fma %12548 %float_1_05499995 %float_n0_0549999997
               OpBranch %12542
      %12542 = OpLabel
      %12550 = OpPhi %float %12547 %12546 %12549 %12545
      %12551 = OpCompositeExtract %float %12540 1
               OpSelectionMerge %12552 None
               OpSwitch %uint_0 %12553
      %12553 = OpLabel
      %12554 = OpFOrdLessThan %bool %12551 %float_0_00313066994
               OpSelectionMerge %12555 None
               OpBranchConditional %12554 %12556 %12555
      %12556 = OpLabel
      %12557 = OpFMul %float %12551 %float_12_9200001
               OpBranch %12552
      %12555 = OpLabel
      %12558 = OpExtInst %float %1 Pow %12551 %float_0_416666657
      %12559 = OpExtInst %float %1 Fma %12558 %float_1_05499995 %float_n0_0549999997
               OpBranch %12552
      %12552 = OpLabel
      %12560 = OpPhi %float %12557 %12556 %12559 %12555
      %12561 = OpCompositeExtract %float %12540 2
               OpSelectionMerge %12562 None
               OpSwitch %uint_0 %12563
      %12563 = OpLabel
      %12564 = OpFOrdLessThan %bool %12561 %float_0_00313066994
               OpSelectionMerge %12565 None
               OpBranchConditional %12564 %12566 %12565
      %12566 = OpLabel
      %12567 = OpFMul %float %12561 %float_12_9200001
               OpBranch %12562
      %12565 = OpLabel
      %12568 = OpExtInst %float %1 Pow %12561 %float_0_416666657
      %12569 = OpExtInst %float %1 Fma %12568 %float_1_05499995 %float_n0_0549999997
               OpBranch %12562
      %12562 = OpLabel
      %12570 = OpPhi %float %12567 %12566 %12569 %12565
      %12571 = OpCompositeConstruct %v3float %12550 %12560 %12570
      %12572 = OpBitcast %v3uint %12571
      %12573 = OpBitwiseAnd %v3uint %12572 %350
      %12574 = OpExtInst %v3uint %1 UMin %12573 %502
      %12575 = OpConvertUToF %v3float %12574
      %12576 = OpExtInst %v3float %1 Fma %12539 %12575 %12571
      %12577 = OpExtInst %v3float %1 FClamp %12576 %103 %128
      %12578 = OpCompositeExtract %float %12577 0
      %12579 = OpFMul %float %12578 %float_127
      %12580 = OpConvertFToU %uint %12579
      %12581 = OpShiftLeftLogical %uint %12580 %uint_0
      %12582 = OpCompositeExtract %float %12577 1
      %12583 = OpFMul %float %12582 %float_127
      %12584 = OpConvertFToU %uint %12583
      %12585 = OpShiftLeftLogical %uint %12584 %uint_7
      %12586 = OpCompositeExtract %float %12577 2
      %12587 = OpFMul %float %12586 %float_63
      %12588 = OpConvertFToU %uint %12587
      %12589 = OpShiftLeftLogical %uint %12588 %uint_14
      %12590 = OpBitwiseOr %uint %12581 %12585
      %12591 = OpBitwiseOr %uint %12590 %12589
      %12592 = OpExtInst %float %1 FClamp %10791 %float_0 %float_1
      %12593 = OpFMul %float %12592 %float_255
      %12594 = OpConvertFToU %uint %12593
      %12595 = OpShiftLeftLogical %uint %12594 %uint_8
      %12596 = OpExtInst %float %1 FClamp %10795 %float_0 %float_1
      %12597 = OpFMul %float %12596 %float_255
      %12598 = OpConvertFToU %uint %12597
      %12599 = OpShiftLeftLogical %uint %12598 %uint_16
      %12600 = OpBitwiseOr %uint %uint_0 %12595
      %12601 = OpBitwiseOr %uint %12600 %12599
      %12602 = OpBitwiseOr %uint %12601 %uint_0
      %12603 = OpBitwiseOr %uint %11928 %uint_0
      %12604 = OpULessThan %bool %11670 %uint_3
               OpSelectionMerge %12605 None
               OpBranchConditional %12604 %12606 %12607
      %12607 = OpLabel
      %12608 = OpISub %uint %11670 %uint_3
      %12609 = OpCompositeExtract %uint %10785 0
      %12610 = OpCompositeExtract %uint %10785 1
      %12611 = OpCompositeConstruct %v3uint %12609 %12610 %12608
               OpImageWrite %10786 %12611 %12603 None
               OpBranch %12605
      %12606 = OpLabel
      %12612 = OpIEqual %bool %11670 %uint_0
      %12613 = OpSelect %uint %12612 %12603 %11669
      %12614 = OpIEqual %bool %11670 %uint_1
      %12615 = OpSelect %uint %12614 %12603 %11668
      %12616 = OpIEqual %bool %11670 %uint_2
      %12617 = OpSelect %uint %12616 %12603 %uint_0
               OpBranch %12605
      %12605 = OpLabel
      %12618 = OpPhi %uint %uint_0 %12607 %12617 %12606
      %12619 = OpPhi %uint %11668 %12607 %12615 %12606
      %12620 = OpPhi %uint %11669 %12607 %12613 %12606
      %12621 = OpIAdd %uint %11670 %uint_1
      %12622 = OpBitwiseOr %uint %12591 %uint_0
      %12623 = OpULessThan %bool %12621 %uint_3
               OpSelectionMerge %12624 None
               OpBranchConditional %12623 %12625 %12626
      %12626 = OpLabel
      %12627 = OpIAdd %uint %11670 %uint_4294967294
      %12628 = OpCompositeExtract %uint %10785 0
      %12629 = OpCompositeExtract %uint %10785 1
      %12630 = OpCompositeConstruct %v3uint %12628 %12629 %12627
               OpImageWrite %10786 %12630 %12622 None
               OpBranch %12624
      %12625 = OpLabel
      %12631 = OpIEqual %bool %12621 %uint_0
      %12632 = OpSelect %uint %12631 %12622 %12620
      %12633 = OpIEqual %bool %12621 %uint_1
      %12634 = OpSelect %uint %12633 %12622 %12619
      %12635 = OpIEqual %bool %12621 %uint_2
      %12636 = OpSelect %uint %12635 %12622 %12618
               OpBranch %12624
      %12624 = OpLabel
      %12637 = OpPhi %uint %12618 %12626 %12636 %12625
      %12638 = OpPhi %uint %12619 %12626 %12634 %12625
      %12639 = OpPhi %uint %12620 %12626 %12632 %12625
      %12640 = OpIAdd %uint %11670 %uint_2
      %12641 = OpBitwiseOr %uint %12602 %uint_0
      %12642 = OpULessThan %bool %12640 %uint_3
               OpSelectionMerge %12643 None
               OpBranchConditional %12642 %12644 %12645
      %12645 = OpLabel
      %12646 = OpIAdd %uint %11670 %uint_4294967295
      %12647 = OpCompositeExtract %uint %10785 0
      %12648 = OpCompositeExtract %uint %10785 1
      %12649 = OpCompositeConstruct %v3uint %12647 %12648 %12646
               OpImageWrite %10786 %12649 %12641 None
               OpBranch %12643
      %12644 = OpLabel
      %12650 = OpIEqual %bool %12640 %uint_0
      %12651 = OpSelect %uint %12650 %12641 %12639
      %12652 = OpIEqual %bool %12640 %uint_1
      %12653 = OpSelect %uint %12652 %12641 %12638
      %12654 = OpIEqual %bool %12640 %uint_2
      %12655 = OpSelect %uint %12654 %12641 %12637
               OpBranch %12643
      %12643 = OpLabel
      %12656 = OpPhi %uint %12637 %12645 %12655 %12644
      %12657 = OpPhi %uint %12638 %12645 %12653 %12644
      %12658 = OpPhi %uint %12639 %12645 %12651 %12644
      %12659 = OpIAdd %uint %11670 %uint_3
               OpBranch %11934
      %11934 = OpLabel
      %12660 = OpPhi %uint %12530 %11938 %uint_0 %12643
      %12661 = OpPhi %uint %12531 %11938 %12656 %12643
      %12662 = OpPhi %uint %12532 %11938 %12657 %12643
      %12663 = OpPhi %uint %12533 %11938 %12658 %12643
      %12664 = OpPhi %uint %12534 %11938 %12659 %12643
               OpBranch %11930
      %11931 = OpLabel
      %12665 = OpBitwiseAnd %uint %11921 %uint_2047
      %12666 = OpShiftLeftLogical %uint %12665 %uint_19
      %12667 = OpBitwiseOr %uint %11928 %12666
      %12668 = OpULessThan %bool %11670 %uint_3
               OpSelectionMerge %12669 None
               OpBranchConditional %12668 %12670 %12671
      %12671 = OpLabel
      %12672 = OpISub %uint %11670 %uint_3
      %12673 = OpCompositeExtract %uint %10785 0
      %12674 = OpCompositeExtract %uint %10785 1
      %12675 = OpCompositeConstruct %v3uint %12673 %12674 %12672
               OpImageWrite %10786 %12675 %12667 None
               OpBranch %12669
      %12670 = OpLabel
      %12676 = OpIEqual %bool %11670 %uint_0
      %12677 = OpSelect %uint %12676 %12667 %11669
      %12678 = OpIEqual %bool %11670 %uint_1
      %12679 = OpSelect %uint %12678 %12667 %11668
      %12680 = OpIEqual %bool %11670 %uint_2
      %12681 = OpSelect %uint %12680 %12667 %uint_0
               OpBranch %12669
      %12669 = OpLabel
      %12682 = OpPhi %uint %uint_0 %12671 %12681 %12670
      %12683 = OpPhi %uint %11668 %12671 %12679 %12670
      %12684 = OpPhi %uint %11669 %12671 %12677 %12670
      %12685 = OpIAdd %uint %11670 %uint_1
               OpBranch %11930
      %11930 = OpLabel
      %12686 = OpPhi %uint %12660 %11934 %11921 %12669
      %12687 = OpPhi %uint %12661 %11934 %12682 %12669
      %12688 = OpPhi %uint %12662 %11934 %12683 %12669
      %12689 = OpPhi %uint %12663 %11934 %12684 %12669
      %12690 = OpPhi %uint %12664 %11934 %12685 %12669
               OpBranch %11686
      %11686 = OpLabel
      %12691 = OpPhi %uint %11915 %11689 %12686 %11930
      %12692 = OpPhi %uint %11916 %11689 %12687 %11930
      %12693 = OpPhi %uint %11917 %11689 %12688 %11930
      %12694 = OpPhi %uint %11918 %11689 %12689 %11930
      %12695 = OpPhi %uint %11919 %11689 %12690 %11930
               OpBranch %11682
      %11683 = OpLabel
      %12696 = OpVectorShuffle %v3float %10788 %459 0 1 2
      %12697 = OpFSub %float %8393 %float_0_5
      %12698 = OpFMul %float %12697 %float_0_00787401572
      %12699 = OpFMul %float %12697 %float_0_0158730168
      %12700 = OpCompositeConstruct %v3float %12698 %12698 %12699
      %12701 = OpExtInst %v3float %1 FClamp %12696 %103 %128
      %12702 = OpCompositeExtract %float %12701 0
               OpSelectionMerge %12703 None
               OpSwitch %uint_0 %12704
      %12704 = OpLabel
      %12705 = OpFOrdLessThan %bool %12702 %float_0_00313066994
               OpSelectionMerge %12706 None
               OpBranchConditional %12705 %12707 %12706
      %12707 = OpLabel
      %12708 = OpFMul %float %12702 %float_12_9200001
               OpBranch %12703
      %12706 = OpLabel
      %12709 = OpExtInst %float %1 Pow %12702 %float_0_416666657
      %12710 = OpExtInst %float %1 Fma %12709 %float_1_05499995 %float_n0_0549999997
               OpBranch %12703
      %12703 = OpLabel
      %12711 = OpPhi %float %12708 %12707 %12710 %12706
      %12712 = OpCompositeExtract %float %12701 1
               OpSelectionMerge %12713 None
               OpSwitch %uint_0 %12714
      %12714 = OpLabel
      %12715 = OpFOrdLessThan %bool %12712 %float_0_00313066994
               OpSelectionMerge %12716 None
               OpBranchConditional %12715 %12717 %12716
      %12717 = OpLabel
      %12718 = OpFMul %float %12712 %float_12_9200001
               OpBranch %12713
      %12716 = OpLabel
      %12719 = OpExtInst %float %1 Pow %12712 %float_0_416666657
      %12720 = OpExtInst %float %1 Fma %12719 %float_1_05499995 %float_n0_0549999997
               OpBranch %12713
      %12713 = OpLabel
      %12721 = OpPhi %float %12718 %12717 %12720 %12716
      %12722 = OpCompositeExtract %float %12701 2
               OpSelectionMerge %12723 None
               OpSwitch %uint_0 %12724
      %12724 = OpLabel
      %12725 = OpFOrdLessThan %bool %12722 %float_0_00313066994
               OpSelectionMerge %12726 None
               OpBranchConditional %12725 %12727 %12726
      %12727 = OpLabel
      %12728 = OpFMul %float %12722 %float_12_9200001
               OpBranch %12723
      %12726 = OpLabel
      %12729 = OpExtInst %float %1 Pow %12722 %float_0_416666657
      %12730 = OpExtInst %float %1 Fma %12729 %float_1_05499995 %float_n0_0549999997
               OpBranch %12723
      %12723 = OpLabel
      %12731 = OpPhi %float %12728 %12727 %12730 %12726
      %12732 = OpCompositeConstruct %v3float %12711 %12721 %12731
      %12733 = OpBitcast %v3uint %12732
      %12734 = OpBitwiseAnd %v3uint %12733 %350
      %12735 = OpExtInst %v3uint %1 UMin %12734 %502
      %12736 = OpConvertUToF %v3float %12735
      %12737 = OpExtInst %v3float %1 Fma %12700 %12736 %12732
      %12738 = OpExtInst %v3float %1 FClamp %12737 %103 %128
      %12739 = OpCompositeExtract %float %12738 0
      %12740 = OpFMul %float %12739 %float_127
      %12741 = OpConvertFToU %uint %12740
      %12742 = OpShiftLeftLogical %uint %12741 %uint_0
      %12743 = OpCompositeExtract %float %12738 1
      %12744 = OpFMul %float %12743 %float_127
      %12745 = OpConvertFToU %uint %12744
      %12746 = OpShiftLeftLogical %uint %12745 %uint_7
      %12747 = OpCompositeExtract %float %12738 2
      %12748 = OpFMul %float %12747 %float_63
      %12749 = OpConvertFToU %uint %12748
      %12750 = OpShiftLeftLogical %uint %12749 %uint_14
      %12751 = OpBitwiseOr %uint %12742 %12746
      %12752 = OpBitwiseOr %uint %12751 %12750
      %12753 = OpBitwiseAnd %uint %12752 %uint_4095
      %12754 = OpShiftRightLogical %uint %12752 %uint_12
      %12755 = OpBitwiseAnd %uint %12754 %uint_255
      %12756 = OpVectorShuffle %v3float %10798 %10798 0 1 2
      %12757 = OpExtInst %v3float %1 FClamp %12756 %103 %128
      %12758 = OpCompositeExtract %float %12757 0
               OpSelectionMerge %12759 None
               OpSwitch %uint_0 %12760
      %12760 = OpLabel
      %12761 = OpFOrdLessThan %bool %12758 %float_0_00313066994
               OpSelectionMerge %12762 None
               OpBranchConditional %12761 %12763 %12762
      %12763 = OpLabel
      %12764 = OpFMul %float %12758 %float_12_9200001
               OpBranch %12759
      %12762 = OpLabel
      %12765 = OpExtInst %float %1 Pow %12758 %float_0_416666657
      %12766 = OpExtInst %float %1 Fma %12765 %float_1_05499995 %float_n0_0549999997
               OpBranch %12759
      %12759 = OpLabel
      %12767 = OpPhi %float %12764 %12763 %12766 %12762
      %12768 = OpCompositeExtract %float %12757 1
               OpSelectionMerge %12769 None
               OpSwitch %uint_0 %12770
      %12770 = OpLabel
      %12771 = OpFOrdLessThan %bool %12768 %float_0_00313066994
               OpSelectionMerge %12772 None
               OpBranchConditional %12771 %12773 %12772
      %12773 = OpLabel
      %12774 = OpFMul %float %12768 %float_12_9200001
               OpBranch %12769
      %12772 = OpLabel
      %12775 = OpExtInst %float %1 Pow %12768 %float_0_416666657
      %12776 = OpExtInst %float %1 Fma %12775 %float_1_05499995 %float_n0_0549999997
               OpBranch %12769
      %12769 = OpLabel
      %12777 = OpPhi %float %12774 %12773 %12776 %12772
      %12778 = OpCompositeExtract %float %12757 2
               OpSelectionMerge %12779 None
               OpSwitch %uint_0 %12780
      %12780 = OpLabel
      %12781 = OpFOrdLessThan %bool %12778 %float_0_00313066994
               OpSelectionMerge %12782 None
               OpBranchConditional %12781 %12783 %12782
      %12783 = OpLabel
      %12784 = OpFMul %float %12778 %float_12_9200001
               OpBranch %12779
      %12782 = OpLabel
      %12785 = OpExtInst %float %1 Pow %12778 %float_0_416666657
      %12786 = OpExtInst %float %1 Fma %12785 %float_1_05499995 %float_n0_0549999997
               OpBranch %12779
      %12779 = OpLabel
      %12787 = OpPhi %float %12784 %12783 %12786 %12782
      %12788 = OpCompositeConstruct %v3float %12767 %12777 %12787
      %12789 = OpBitcast %v3uint %12788
      %12790 = OpBitwiseAnd %v3uint %12789 %350
      %12791 = OpExtInst %v3uint %1 UMin %12790 %502
      %12792 = OpConvertUToF %v3float %12791
      %12793 = OpExtInst %v3float %1 Fma %12700 %12792 %12788
      %12794 = OpExtInst %v3float %1 FClamp %12793 %103 %128
      %12795 = OpCompositeExtract %float %12794 0
      %12796 = OpFMul %float %12795 %float_127
      %12797 = OpConvertFToU %uint %12796
      %12798 = OpShiftLeftLogical %uint %12797 %uint_0
      %12799 = OpCompositeExtract %float %12794 1
      %12800 = OpFMul %float %12799 %float_127
      %12801 = OpConvertFToU %uint %12800
      %12802 = OpShiftLeftLogical %uint %12801 %uint_7
      %12803 = OpCompositeExtract %float %12794 2
      %12804 = OpFMul %float %12803 %float_63
      %12805 = OpConvertFToU %uint %12804
      %12806 = OpShiftLeftLogical %uint %12805 %uint_14
      %12807 = OpBitwiseOr %uint %12798 %12802
      %12808 = OpBitwiseOr %uint %12807 %12806
      %12809 = OpBitwiseAnd %uint %11605 %uint_65535
      %12810 = OpShiftLeftLogical %uint %12809 %uint_0
      %12811 = OpBitwiseOr %uint %uint_0 %12810
      %12812 = OpShiftLeftLogical %uint %12755 %uint_8
      %12813 = OpBitwiseOr %uint %12812 %uint_0
      %12814 = OpBitwiseAnd %uint %12811 %uint_65535
      %12815 = OpShiftLeftLogical %uint %12813 %uint_16
      %12816 = OpBitwiseOr %uint %12814 %12815
      %12817 = OpULessThan %bool %11670 %uint_3
               OpSelectionMerge %12818 None
               OpBranchConditional %12817 %12819 %12820
      %12820 = OpLabel
      %12821 = OpISub %uint %11670 %uint_3
      %12822 = OpCompositeExtract %uint %10785 0
      %12823 = OpCompositeExtract %uint %10785 1
      %12824 = OpCompositeConstruct %v3uint %12822 %12823 %12821
               OpImageWrite %10786 %12824 %12816 None
               OpBranch %12818
      %12819 = OpLabel
      %12825 = OpIEqual %bool %11670 %uint_0
      %12826 = OpSelect %uint %12825 %12816 %11669
      %12827 = OpIEqual %bool %11670 %uint_1
      %12828 = OpSelect %uint %12827 %12816 %11668
      %12829 = OpIEqual %bool %11670 %uint_2
      %12830 = OpSelect %uint %12829 %12816 %uint_0
               OpBranch %12818
      %12818 = OpLabel
      %12831 = OpPhi %uint %uint_0 %12820 %12830 %12819
      %12832 = OpPhi %uint %11668 %12820 %12828 %12819
      %12833 = OpPhi %uint %11669 %12820 %12826 %12819
      %12834 = OpIAdd %uint %11670 %uint_1
      %12835 = OpShiftLeftLogical %uint %12753 %uint_20
      %12836 = OpBitwiseOr %uint %12808 %12835
      %12837 = OpULessThan %bool %12834 %uint_3
               OpSelectionMerge %12838 None
               OpBranchConditional %12837 %12839 %12840
      %12840 = OpLabel
      %12841 = OpIAdd %uint %11670 %uint_4294967294
      %12842 = OpCompositeExtract %uint %10785 0
      %12843 = OpCompositeExtract %uint %10785 1
      %12844 = OpCompositeConstruct %v3uint %12842 %12843 %12841
               OpImageWrite %10786 %12844 %12836 None
               OpBranch %12838
      %12839 = OpLabel
      %12845 = OpIEqual %bool %12834 %uint_0
      %12846 = OpSelect %uint %12845 %12836 %12833
      %12847 = OpIEqual %bool %12834 %uint_1
      %12848 = OpSelect %uint %12847 %12836 %12832
      %12849 = OpIEqual %bool %12834 %uint_2
      %12850 = OpSelect %uint %12849 %12836 %12831
               OpBranch %12838
      %12838 = OpLabel
      %12851 = OpPhi %uint %12831 %12840 %12850 %12839
      %12852 = OpPhi %uint %12832 %12840 %12848 %12839
      %12853 = OpPhi %uint %12833 %12840 %12846 %12839
      %12854 = OpIAdd %uint %11670 %uint_2
               OpBranch %11682
      %11682 = OpLabel
      %12855 = OpPhi %uint %12691 %11686 %uint_0 %12838
      %12856 = OpPhi %uint %12692 %11686 %12851 %12838
      %12857 = OpPhi %uint %12693 %11686 %12852 %12838
      %12858 = OpPhi %uint %12694 %11686 %12853 %12838
      %12859 = OpPhi %uint %12695 %11686 %12854 %12838
      %12860 = OpLogicalNot %bool %11681
      %12861 = OpLogicalAnd %bool %12860 %11620
      %12862 = OpIEqual %bool %11033 %uint_0
      %12863 = OpLogicalAnd %bool %12861 %12862
               OpSelectionMerge %12864 None
               OpBranchConditional %12863 %12865 %12864
      %12865 = OpLabel
      %12866 = OpShiftRightLogical %uint %12855 %uint_11
      %12867 = OpBitwiseAnd %uint %12866 %uint_7
               OpSelectionMerge %12868 None
               OpSwitch %12867 %12868 0 %12869 3 %12870 5 %12871
      %12871 = OpLabel
               OpSelectionMerge %12872 None
               OpBranchConditional %true %12873 %12872
      %12873 = OpLabel
      %12874 = OpExtInst %v2float %1 FAbs %562
      %12875 = OpFSub %v2float %314 %12874
      %12876 = OpVectorShuffle %v3float %459 %12875 4 5 2
               OpBranch %12872
      %12872 = OpLabel
      %12877 = OpPhi %v3float %556 %12871 %12876 %12873
      %12878 = OpVectorShuffle %v2float %12877 %12877 0 1
               OpSelectionMerge %12879 None
               OpBranchConditional %true %12880 %12879
      %12880 = OpLabel
      %12881 = OpExtInst %v2float %1 FAbs %562
      %12882 = OpFSub %v2float %314 %12881
      %12883 = OpVectorShuffle %v3float %459 %12882 4 5 2
               OpBranch %12879
      %12879 = OpLabel
      %12884 = OpPhi %v3float %556 %12872 %12883 %12880
      %12885 = OpVectorShuffle %v2float %12884 %12884 0 1
      %12886 = OpVectorShuffle %v3float %10788 %459 0 1 2
      %12887 = OpExtInst %v3float %1 FClamp %12886 %103 %128
      %12888 = OpCompositeExtract %float %12887 0
               OpSelectionMerge %12889 None
               OpSwitch %uint_0 %12890
      %12890 = OpLabel
      %12891 = OpFOrdLessThan %bool %12888 %float_0_00313066994
               OpSelectionMerge %12892 None
               OpBranchConditional %12891 %12893 %12892
      %12893 = OpLabel
      %12894 = OpFMul %float %12888 %float_12_9200001
               OpBranch %12889
      %12892 = OpLabel
      %12895 = OpExtInst %float %1 Pow %12888 %float_0_416666657
      %12896 = OpExtInst %float %1 Fma %12895 %float_1_05499995 %float_n0_0549999997
               OpBranch %12889
      %12889 = OpLabel
      %12897 = OpPhi %float %12894 %12893 %12896 %12892
      %12898 = OpCompositeExtract %float %12887 1
               OpSelectionMerge %12899 None
               OpSwitch %uint_0 %12900
      %12900 = OpLabel
      %12901 = OpFOrdLessThan %bool %12898 %float_0_00313066994
               OpSelectionMerge %12902 None
               OpBranchConditional %12901 %12903 %12902
      %12903 = OpLabel
      %12904 = OpFMul %float %12898 %float_12_9200001
               OpBranch %12899
      %12902 = OpLabel
      %12905 = OpExtInst %float %1 Pow %12898 %float_0_416666657
      %12906 = OpExtInst %float %1 Fma %12905 %float_1_05499995 %float_n0_0549999997
               OpBranch %12899
      %12899 = OpLabel
      %12907 = OpPhi %float %12904 %12903 %12906 %12902
      %12908 = OpCompositeExtract %float %12887 2
               OpSelectionMerge %12909 None
               OpSwitch %uint_0 %12910
      %12910 = OpLabel
      %12911 = OpFOrdLessThan %bool %12908 %float_0_00313066994
               OpSelectionMerge %12912 None
               OpBranchConditional %12911 %12913 %12912
      %12913 = OpLabel
      %12914 = OpFMul %float %12908 %float_12_9200001
               OpBranch %12909
      %12912 = OpLabel
      %12915 = OpExtInst %float %1 Pow %12908 %float_0_416666657
      %12916 = OpExtInst %float %1 Fma %12915 %float_1_05499995 %float_n0_0549999997
               OpBranch %12909
      %12909 = OpLabel
      %12917 = OpPhi %float %12914 %12913 %12916 %12912
      %12918 = OpExtInst %float %1 FClamp %12897 %float_0 %float_1
      %12919 = OpFMul %float %12918 %float_255
      %12920 = OpConvertFToU %uint %12919
      %12921 = OpShiftLeftLogical %uint %12920 %uint_0
      %12922 = OpExtInst %float %1 FClamp %12907 %float_0 %float_1
      %12923 = OpFMul %float %12922 %float_255
      %12924 = OpConvertFToU %uint %12923
      %12925 = OpShiftLeftLogical %uint %12924 %uint_8
      %12926 = OpExtInst %float %1 FClamp %12917 %float_0 %float_1
      %12927 = OpFMul %float %12926 %float_255
      %12928 = OpConvertFToU %uint %12927
      %12929 = OpShiftLeftLogical %uint %12928 %uint_16
      %12930 = OpBitwiseOr %uint %12921 %12925
      %12931 = OpBitwiseOr %uint %12930 %12929
      %12932 = OpBitwiseOr %uint %12931 %uint_0
      %12933 = OpULessThan %bool %12859 %uint_3
               OpSelectionMerge %12934 None
               OpBranchConditional %12933 %12935 %12936
      %12936 = OpLabel
      %12937 = OpISub %uint %12859 %uint_3
      %12938 = OpCompositeExtract %uint %10785 0
      %12939 = OpCompositeExtract %uint %10785 1
      %12940 = OpCompositeConstruct %v3uint %12938 %12939 %12937
               OpImageWrite %10786 %12940 %12932 None
               OpBranch %12934
      %12935 = OpLabel
      %12941 = OpIEqual %bool %12859 %uint_0
      %12942 = OpSelect %uint %12941 %12932 %12858
      %12943 = OpIEqual %bool %12859 %uint_1
      %12944 = OpSelect %uint %12943 %12932 %12857
      %12945 = OpIEqual %bool %12859 %uint_2
      %12946 = OpSelect %uint %12945 %12932 %12856
               OpBranch %12934
      %12934 = OpLabel
      %12947 = OpPhi %uint %12856 %12936 %12946 %12935
      %12948 = OpPhi %uint %12857 %12936 %12944 %12935
      %12949 = OpPhi %uint %12858 %12936 %12942 %12935
      %12950 = OpIAdd %uint %12859 %uint_1
      %12951 = OpVectorTimesScalar %v2float %12878 %float_0_5
      %12952 = OpFAdd %v2float %12951 %150
      %12953 = OpVectorTimesScalar %v2float %12885 %float_0_5
      %12954 = OpFAdd %v2float %12953 %150
      %12955 = OpCompositeExtract %float %12952 0
      %12956 = OpCompositeExtract %float %12952 1
      %12957 = OpCompositeExtract %float %12954 0
      %12958 = OpCompositeExtract %float %12954 1
      %12959 = OpExtInst %float %1 FClamp %12955 %float_0 %float_1
      %12960 = OpFMul %float %12959 %float_255
      %12961 = OpConvertFToU %uint %12960
      %12962 = OpShiftLeftLogical %uint %12961 %uint_0
      %12963 = OpExtInst %float %1 FClamp %12956 %float_0 %float_1
      %12964 = OpFMul %float %12963 %float_255
      %12965 = OpConvertFToU %uint %12964
      %12966 = OpShiftLeftLogical %uint %12965 %uint_8
      %12967 = OpExtInst %float %1 FClamp %12957 %float_0 %float_1
      %12968 = OpFMul %float %12967 %float_255
      %12969 = OpConvertFToU %uint %12968
      %12970 = OpShiftLeftLogical %uint %12969 %uint_16
      %12971 = OpExtInst %float %1 FClamp %12958 %float_0 %float_1
      %12972 = OpFMul %float %12971 %float_255
      %12973 = OpConvertFToU %uint %12972
      %12974 = OpShiftLeftLogical %uint %12973 %uint_24
      %12975 = OpBitwiseOr %uint %12962 %12966
      %12976 = OpBitwiseOr %uint %12975 %12970
      %12977 = OpBitwiseOr %uint %12976 %12974
      %12978 = OpULessThan %bool %12950 %uint_3
               OpSelectionMerge %12979 None
               OpBranchConditional %12978 %12980 %12981
      %12981 = OpLabel
      %12982 = OpIAdd %uint %12859 %uint_4294967294
      %12983 = OpCompositeExtract %uint %10785 0
      %12984 = OpCompositeExtract %uint %10785 1
      %12985 = OpCompositeConstruct %v3uint %12983 %12984 %12982
               OpImageWrite %10786 %12985 %12977 None
               OpBranch %12979
      %12980 = OpLabel
      %12986 = OpIEqual %bool %12950 %uint_0
      %12987 = OpSelect %uint %12986 %12977 %12949
      %12988 = OpIEqual %bool %12950 %uint_1
      %12989 = OpSelect %uint %12988 %12977 %12948
      %12990 = OpIEqual %bool %12950 %uint_2
      %12991 = OpSelect %uint %12990 %12977 %12947
               OpBranch %12979
      %12979 = OpLabel
      %12992 = OpPhi %uint %12947 %12981 %12991 %12980
      %12993 = OpPhi %uint %12948 %12981 %12989 %12980
      %12994 = OpPhi %uint %12949 %12981 %12987 %12980
      %12995 = OpShiftRightLogical %uint %12855 %uint_2
      %12996 = OpBitwiseAnd %uint %12995 %uint_7
      %12997 = OpIEqual %bool %12996 %uint_3
               OpSelectionMerge %12998 None
               OpBranchConditional %12997 %12999 %12998
      %12999 = OpLabel
      %13000 = OpBitwiseAnd %uint %11034 %uint_4294967292
      %13001 = OpBitwiseOr %uint %13000 %uint_3
      %13002 = OpExtInst %float %1 Fma %10795 %float_255 %float_0_5
      %13003 = OpConvertFToU %uint %13002
      %13004 = OpBitwiseAnd %uint %13001 %uint_3
      %13005 = OpShiftLeftLogical %uint %13003 %uint_24
      %13006 = OpBitwiseOr %uint %13004 %13005
      %13007 = OpBitwiseOr %uint %13006 %uint_16711680
      %13008 = OpCompositeExtract %float %10788 0
      %13009 = OpCompositeExtract %float %10788 1
      %13010 = OpCompositeExtract %float %10788 2
      %13011 = OpCompositeConstruct %v4float %13008 %13009 %13010 %float_0
      %13012 = OpVectorShuffle %v3float %13011 %13011 0 1 2
      %13013 = OpExtInst %v3float %1 FClamp %13012 %103 %128
      %13014 = OpCompositeExtract %float %13013 0
               OpSelectionMerge %13015 None
               OpSwitch %uint_0 %13016
      %13016 = OpLabel
      %13017 = OpFOrdLessThan %bool %13014 %float_0_00313066994
               OpSelectionMerge %13018 None
               OpBranchConditional %13017 %13019 %13018
      %13019 = OpLabel
      %13020 = OpFMul %float %13014 %float_12_9200001
               OpBranch %13015
      %13018 = OpLabel
      %13021 = OpExtInst %float %1 Pow %13014 %float_0_416666657
      %13022 = OpExtInst %float %1 Fma %13021 %float_1_05499995 %float_n0_0549999997
               OpBranch %13015
      %13015 = OpLabel
      %13023 = OpPhi %float %13020 %13019 %13022 %13018
      %13024 = OpCompositeExtract %float %13013 1
               OpSelectionMerge %13025 None
               OpSwitch %uint_0 %13026
      %13026 = OpLabel
      %13027 = OpFOrdLessThan %bool %13024 %float_0_00313066994
               OpSelectionMerge %13028 None
               OpBranchConditional %13027 %13029 %13028
      %13029 = OpLabel
      %13030 = OpFMul %float %13024 %float_12_9200001
               OpBranch %13025
      %13028 = OpLabel
      %13031 = OpExtInst %float %1 Pow %13024 %float_0_416666657
      %13032 = OpExtInst %float %1 Fma %13031 %float_1_05499995 %float_n0_0549999997
               OpBranch %13025
      %13025 = OpLabel
      %13033 = OpPhi %float %13030 %13029 %13032 %13028
      %13034 = OpCompositeExtract %float %13013 2
               OpSelectionMerge %13035 None
               OpSwitch %uint_0 %13036
      %13036 = OpLabel
      %13037 = OpFOrdLessThan %bool %13034 %float_0_00313066994
               OpSelectionMerge %13038 None
               OpBranchConditional %13037 %13039 %13038
      %13039 = OpLabel
      %13040 = OpFMul %float %13034 %float_12_9200001
               OpBranch %13035
      %13038 = OpLabel
      %13041 = OpExtInst %float %1 Pow %13034 %float_0_416666657
      %13042 = OpExtInst %float %1 Fma %13041 %float_1_05499995 %float_n0_0549999997
               OpBranch %13035
      %13035 = OpLabel
      %13043 = OpPhi %float %13040 %13039 %13042 %13038
      %13044 = OpExtInst %float %1 FClamp %13023 %float_0 %float_1
      %13045 = OpFMul %float %13044 %float_255
      %13046 = OpConvertFToU %uint %13045
      %13047 = OpShiftLeftLogical %uint %13046 %uint_0
      %13048 = OpExtInst %float %1 FClamp %13033 %float_0 %float_1
      %13049 = OpFMul %float %13048 %float_255
      %13050 = OpConvertFToU %uint %13049
      %13051 = OpShiftLeftLogical %uint %13050 %uint_8
      %13052 = OpExtInst %float %1 FClamp %13043 %float_0 %float_1
      %13053 = OpFMul %float %13052 %float_255
      %13054 = OpConvertFToU %uint %13053
      %13055 = OpShiftLeftLogical %uint %13054 %uint_16
      %13056 = OpBitwiseOr %uint %13047 %13051
      %13057 = OpBitwiseOr %uint %13056 %13055
      %13058 = OpBitwiseOr %uint %13057 %uint_0
               OpBranch %12998
      %12998 = OpLabel
      %13059 = OpPhi %uint %458 %12979 %13058 %13035
      %13060 = OpPhi %uint %11034 %12979 %13007 %13035
               OpBranch %12868
      %12870 = OpLabel
      %13061 = OpCompositeExtract %float %10788 0
      %13062 = OpCompositeExtract %float %10788 1
      %13063 = OpCompositeExtract %float %10788 2
      %13064 = OpCompositeConstruct %v4float %13061 %13062 %13063 %float_0
      %13065 = OpVectorShuffle %v3float %13064 %13064 0 1 2
      %13066 = OpExtInst %v3float %1 FClamp %13065 %103 %128
      %13067 = OpCompositeExtract %float %13066 0
               OpSelectionMerge %13068 None
               OpSwitch %uint_0 %13069
      %13069 = OpLabel
      %13070 = OpFOrdLessThan %bool %13067 %float_0_00313066994
               OpSelectionMerge %13071 None
               OpBranchConditional %13070 %13072 %13071
      %13072 = OpLabel
      %13073 = OpFMul %float %13067 %float_12_9200001
               OpBranch %13068
      %13071 = OpLabel
      %13074 = OpExtInst %float %1 Pow %13067 %float_0_416666657
      %13075 = OpExtInst %float %1 Fma %13074 %float_1_05499995 %float_n0_0549999997
               OpBranch %13068
      %13068 = OpLabel
      %13076 = OpPhi %float %13073 %13072 %13075 %13071
      %13077 = OpCompositeExtract %float %13066 1
               OpSelectionMerge %13078 None
               OpSwitch %uint_0 %13079
      %13079 = OpLabel
      %13080 = OpFOrdLessThan %bool %13077 %float_0_00313066994
               OpSelectionMerge %13081 None
               OpBranchConditional %13080 %13082 %13081
      %13082 = OpLabel
      %13083 = OpFMul %float %13077 %float_12_9200001
               OpBranch %13078
      %13081 = OpLabel
      %13084 = OpExtInst %float %1 Pow %13077 %float_0_416666657
      %13085 = OpExtInst %float %1 Fma %13084 %float_1_05499995 %float_n0_0549999997
               OpBranch %13078
      %13078 = OpLabel
      %13086 = OpPhi %float %13083 %13082 %13085 %13081
      %13087 = OpCompositeExtract %float %13066 2
               OpSelectionMerge %13088 None
               OpSwitch %uint_0 %13089
      %13089 = OpLabel
      %13090 = OpFOrdLessThan %bool %13087 %float_0_00313066994
               OpSelectionMerge %13091 None
               OpBranchConditional %13090 %13092 %13091
      %13092 = OpLabel
      %13093 = OpFMul %float %13087 %float_12_9200001
               OpBranch %13088
      %13091 = OpLabel
      %13094 = OpExtInst %float %1 Pow %13087 %float_0_416666657
      %13095 = OpExtInst %float %1 Fma %13094 %float_1_05499995 %float_n0_0549999997
               OpBranch %13088
      %13088 = OpLabel
      %13096 = OpPhi %float %13093 %13092 %13095 %13091
      %13097 = OpExtInst %float %1 FClamp %13076 %float_0 %float_1
      %13098 = OpFMul %float %13097 %float_255
      %13099 = OpConvertFToU %uint %13098
      %13100 = OpShiftLeftLogical %uint %13099 %uint_0
      %13101 = OpExtInst %float %1 FClamp %13086 %float_0 %float_1
      %13102 = OpFMul %float %13101 %float_255
      %13103 = OpConvertFToU %uint %13102
      %13104 = OpShiftLeftLogical %uint %13103 %uint_8
      %13105 = OpExtInst %float %1 FClamp %13096 %float_0 %float_1
      %13106 = OpFMul %float %13105 %float_255
      %13107 = OpConvertFToU %uint %13106
      %13108 = OpShiftLeftLogical %uint %13107 %uint_16
      %13109 = OpBitwiseOr %uint %13100 %13104
      %13110 = OpBitwiseOr %uint %13109 %13108
      %13111 = OpBitwiseOr %uint %13110 %uint_0
      %13112 = OpULessThan %bool %12859 %uint_3
               OpSelectionMerge %13113 None
               OpBranchConditional %13112 %13114 %13115
      %13115 = OpLabel
      %13116 = OpISub %uint %12859 %uint_3
      %13117 = OpCompositeExtract %uint %10785 0
      %13118 = OpCompositeExtract %uint %10785 1
      %13119 = OpCompositeConstruct %v3uint %13117 %13118 %13116
               OpImageWrite %10786 %13119 %13111 None
               OpBranch %13113
      %13114 = OpLabel
      %13120 = OpIEqual %bool %12859 %uint_0
      %13121 = OpSelect %uint %13120 %13111 %12858
      %13122 = OpIEqual %bool %12859 %uint_1
      %13123 = OpSelect %uint %13122 %13111 %12857
      %13124 = OpIEqual %bool %12859 %uint_2
      %13125 = OpSelect %uint %13124 %13111 %12856
               OpBranch %13113
      %13113 = OpLabel
      %13126 = OpPhi %uint %12856 %13115 %13125 %13114
      %13127 = OpPhi %uint %12857 %13115 %13123 %13114
      %13128 = OpPhi %uint %12858 %13115 %13121 %13114
      %13129 = OpIAdd %uint %12859 %uint_1
      %13130 = OpExtInst %float %1 FClamp %10791 %float_0 %float_1
      %13131 = OpFMul %float %13130 %float_255
      %13132 = OpConvertFToU %uint %13131
      %13133 = OpShiftLeftLogical %uint %13132 %uint_8
      %13134 = OpExtInst %float %1 FClamp %10795 %float_0 %float_1
      %13135 = OpFMul %float %13134 %float_255
      %13136 = OpConvertFToU %uint %13135
      %13137 = OpShiftLeftLogical %uint %13136 %uint_16
      %13138 = OpExtInst %float %1 FClamp %10797 %float_0 %float_1
      %13139 = OpFMul %float %13138 %float_255
      %13140 = OpConvertFToU %uint %13139
      %13141 = OpShiftLeftLogical %uint %13140 %uint_24
      %13142 = OpBitwiseOr %uint %uint_0 %13133
      %13143 = OpBitwiseOr %uint %13142 %13137
      %13144 = OpBitwiseOr %uint %13143 %13141
      %13145 = OpULessThan %bool %13129 %uint_3
               OpSelectionMerge %13146 None
               OpBranchConditional %13145 %13147 %13148
      %13148 = OpLabel
      %13149 = OpIAdd %uint %12859 %uint_4294967294
      %13150 = OpCompositeExtract %uint %10785 0
      %13151 = OpCompositeExtract %uint %10785 1
      %13152 = OpCompositeConstruct %v3uint %13150 %13151 %13149
               OpImageWrite %10786 %13152 %13144 None
               OpBranch %13146
      %13147 = OpLabel
      %13153 = OpIEqual %bool %13129 %uint_0
      %13154 = OpSelect %uint %13153 %13144 %13128
      %13155 = OpIEqual %bool %13129 %uint_1
      %13156 = OpSelect %uint %13155 %13144 %13127
      %13157 = OpIEqual %bool %13129 %uint_2
      %13158 = OpSelect %uint %13157 %13144 %13126
               OpBranch %13146
      %13146 = OpLabel
      %13159 = OpPhi %uint %13126 %13148 %13158 %13147
      %13160 = OpPhi %uint %13127 %13148 %13156 %13147
      %13161 = OpPhi %uint %13128 %13148 %13154 %13147
               OpBranch %12868
      %12869 = OpLabel
      %13162 = OpVectorShuffle %v3float %10788 %459 0 1 2
      %13163 = OpFSub %float %8393 %float_0_5
      %13164 = OpFMul %float %13163 %float_0_00787401572
      %13165 = OpFMul %float %13163 %float_0_0158730168
      %13166 = OpCompositeConstruct %v3float %13164 %13164 %13165
      %13167 = OpExtInst %v3float %1 FClamp %13162 %103 %128
      %13168 = OpCompositeExtract %float %13167 0
               OpSelectionMerge %13169 None
               OpSwitch %uint_0 %13170
      %13170 = OpLabel
      %13171 = OpFOrdLessThan %bool %13168 %float_0_00313066994
               OpSelectionMerge %13172 None
               OpBranchConditional %13171 %13173 %13172
      %13173 = OpLabel
      %13174 = OpFMul %float %13168 %float_12_9200001
               OpBranch %13169
      %13172 = OpLabel
      %13175 = OpExtInst %float %1 Pow %13168 %float_0_416666657
      %13176 = OpExtInst %float %1 Fma %13175 %float_1_05499995 %float_n0_0549999997
               OpBranch %13169
      %13169 = OpLabel
      %13177 = OpPhi %float %13174 %13173 %13176 %13172
      %13178 = OpCompositeExtract %float %13167 1
               OpSelectionMerge %13179 None
               OpSwitch %uint_0 %13180
      %13180 = OpLabel
      %13181 = OpFOrdLessThan %bool %13178 %float_0_00313066994
               OpSelectionMerge %13182 None
               OpBranchConditional %13181 %13183 %13182
      %13183 = OpLabel
      %13184 = OpFMul %float %13178 %float_12_9200001
               OpBranch %13179
      %13182 = OpLabel
      %13185 = OpExtInst %float %1 Pow %13178 %float_0_416666657
      %13186 = OpExtInst %float %1 Fma %13185 %float_1_05499995 %float_n0_0549999997
               OpBranch %13179
      %13179 = OpLabel
      %13187 = OpPhi %float %13184 %13183 %13186 %13182
      %13188 = OpCompositeExtract %float %13167 2
               OpSelectionMerge %13189 None
               OpSwitch %uint_0 %13190
      %13190 = OpLabel
      %13191 = OpFOrdLessThan %bool %13188 %float_0_00313066994
               OpSelectionMerge %13192 None
               OpBranchConditional %13191 %13193 %13192
      %13193 = OpLabel
      %13194 = OpFMul %float %13188 %float_12_9200001
               OpBranch %13189
      %13192 = OpLabel
      %13195 = OpExtInst %float %1 Pow %13188 %float_0_416666657
      %13196 = OpExtInst %float %1 Fma %13195 %float_1_05499995 %float_n0_0549999997
               OpBranch %13189
      %13189 = OpLabel
      %13197 = OpPhi %float %13194 %13193 %13196 %13192
      %13198 = OpCompositeConstruct %v3float %13177 %13187 %13197
      %13199 = OpBitcast %v3uint %13198
      %13200 = OpBitwiseAnd %v3uint %13199 %350
      %13201 = OpExtInst %v3uint %1 UMin %13200 %502
      %13202 = OpConvertUToF %v3float %13201
      %13203 = OpExtInst %v3float %1 Fma %13166 %13202 %13198
      %13204 = OpExtInst %v3float %1 FClamp %13203 %103 %128
      %13205 = OpCompositeExtract %float %13204 0
      %13206 = OpFMul %float %13205 %float_127
      %13207 = OpConvertFToU %uint %13206
      %13208 = OpShiftLeftLogical %uint %13207 %uint_0
      %13209 = OpCompositeExtract %float %13204 1
      %13210 = OpFMul %float %13209 %float_127
      %13211 = OpConvertFToU %uint %13210
      %13212 = OpShiftLeftLogical %uint %13211 %uint_7
      %13213 = OpCompositeExtract %float %13204 2
      %13214 = OpFMul %float %13213 %float_63
      %13215 = OpConvertFToU %uint %13214
      %13216 = OpShiftLeftLogical %uint %13215 %uint_14
      %13217 = OpBitwiseOr %uint %13208 %13212
      %13218 = OpBitwiseOr %uint %13217 %13216
      %13219 = OpVectorShuffle %v3float %10798 %10798 0 1 2
      %13220 = OpExtInst %v3float %1 FClamp %13219 %103 %128
      %13221 = OpCompositeExtract %float %13220 0
               OpSelectionMerge %13222 None
               OpSwitch %uint_0 %13223
      %13223 = OpLabel
      %13224 = OpFOrdLessThan %bool %13221 %float_0_00313066994
               OpSelectionMerge %13225 None
               OpBranchConditional %13224 %13226 %13225
      %13226 = OpLabel
      %13227 = OpFMul %float %13221 %float_12_9200001
               OpBranch %13222
      %13225 = OpLabel
      %13228 = OpExtInst %float %1 Pow %13221 %float_0_416666657
      %13229 = OpExtInst %float %1 Fma %13228 %float_1_05499995 %float_n0_0549999997
               OpBranch %13222
      %13222 = OpLabel
      %13230 = OpPhi %float %13227 %13226 %13229 %13225
      %13231 = OpCompositeExtract %float %13220 1
               OpSelectionMerge %13232 None
               OpSwitch %uint_0 %13233
      %13233 = OpLabel
      %13234 = OpFOrdLessThan %bool %13231 %float_0_00313066994
               OpSelectionMerge %13235 None
               OpBranchConditional %13234 %13236 %13235
      %13236 = OpLabel
      %13237 = OpFMul %float %13231 %float_12_9200001
               OpBranch %13232
      %13235 = OpLabel
      %13238 = OpExtInst %float %1 Pow %13231 %float_0_416666657
      %13239 = OpExtInst %float %1 Fma %13238 %float_1_05499995 %float_n0_0549999997
               OpBranch %13232
      %13232 = OpLabel
      %13240 = OpPhi %float %13237 %13236 %13239 %13235
      %13241 = OpCompositeExtract %float %13220 2
               OpSelectionMerge %13242 None
               OpSwitch %uint_0 %13243
      %13243 = OpLabel
      %13244 = OpFOrdLessThan %bool %13241 %float_0_00313066994
               OpSelectionMerge %13245 None
               OpBranchConditional %13244 %13246 %13245
      %13246 = OpLabel
      %13247 = OpFMul %float %13241 %float_12_9200001
               OpBranch %13242
      %13245 = OpLabel
      %13248 = OpExtInst %float %1 Pow %13241 %float_0_416666657
      %13249 = OpExtInst %float %1 Fma %13248 %float_1_05499995 %float_n0_0549999997
               OpBranch %13242
      %13242 = OpLabel
      %13250 = OpPhi %float %13247 %13246 %13249 %13245
      %13251 = OpCompositeConstruct %v3float %13230 %13240 %13250
      %13252 = OpBitcast %v3uint %13251
      %13253 = OpBitwiseAnd %v3uint %13252 %350
      %13254 = OpExtInst %v3uint %1 UMin %13253 %502
      %13255 = OpConvertUToF %v3float %13254
      %13256 = OpExtInst %v3float %1 Fma %13166 %13255 %13251
      %13257 = OpExtInst %v3float %1 FClamp %13256 %103 %128
      %13258 = OpCompositeExtract %float %13257 0
      %13259 = OpFMul %float %13258 %float_127
      %13260 = OpConvertFToU %uint %13259
      %13261 = OpShiftLeftLogical %uint %13260 %uint_0
      %13262 = OpCompositeExtract %float %13257 1
      %13263 = OpFMul %float %13262 %float_127
      %13264 = OpConvertFToU %uint %13263
      %13265 = OpShiftLeftLogical %uint %13264 %uint_7
      %13266 = OpCompositeExtract %float %13257 2
      %13267 = OpFMul %float %13266 %float_63
      %13268 = OpConvertFToU %uint %13267
      %13269 = OpShiftLeftLogical %uint %13268 %uint_14
      %13270 = OpBitwiseOr %uint %13261 %13265
      %13271 = OpBitwiseOr %uint %13270 %13269
      %13272 = OpShiftLeftLogical %uint %13218 %uint_12
      %13273 = OpBitwiseAnd %uint %13272 %uint_4294963200
      %13274 = OpBitwiseAnd %uint %13271 %uint_4095
      %13275 = OpBitwiseOr %uint %13273 %13274
      %13276 = OpShiftRightLogical %uint %13271 %uint_12
      %13277 = OpBitwiseAnd %uint %13276 %uint_255
      %13278 = OpULessThan %bool %12859 %uint_3
               OpSelectionMerge %13279 None
               OpBranchConditional %13278 %13280 %13281
      %13281 = OpLabel
      %13282 = OpISub %uint %12859 %uint_3
      %13283 = OpCompositeExtract %uint %10785 0
      %13284 = OpCompositeExtract %uint %10785 1
      %13285 = OpCompositeConstruct %v3uint %13283 %13284 %13282
               OpImageWrite %10786 %13285 %13275 None
               OpBranch %13279
      %13280 = OpLabel
      %13286 = OpIEqual %bool %12859 %uint_0
      %13287 = OpSelect %uint %13286 %13275 %12858
      %13288 = OpIEqual %bool %12859 %uint_1
      %13289 = OpSelect %uint %13288 %13275 %12857
      %13290 = OpIEqual %bool %12859 %uint_2
      %13291 = OpSelect %uint %13290 %13275 %12856
               OpBranch %13279
      %13279 = OpLabel
      %13292 = OpPhi %uint %12856 %13281 %13291 %13280
      %13293 = OpPhi %uint %12857 %13281 %13289 %13280
      %13294 = OpPhi %uint %12858 %13281 %13287 %13280
      %13295 = OpIAdd %uint %12859 %uint_1
      %13296 = OpFAdd %float %10797 %float_1
      %13297 = OpFMul %float %13296 %float_0_5
      %13298 = OpExtInst %float %1 FClamp %13297 %float_0 %float_1
      %13299 = OpFMul %float %13298 %float_255
      %13300 = OpConvertFToU %uint %13299
      %13301 = OpShiftLeftLogical %uint %13300 %uint_16
      %13302 = OpBitwiseOr %uint %uint_0 %13301
      %13303 = OpBitwiseOr %uint %13302 %uint_2130706432
      %13304 = OpBitwiseOr %uint %13277 %13303
      %13305 = OpULessThan %bool %13295 %uint_3
               OpSelectionMerge %13306 None
               OpBranchConditional %13305 %13307 %13308
      %13308 = OpLabel
      %13309 = OpIAdd %uint %12859 %uint_4294967294
      %13310 = OpCompositeExtract %uint %10785 0
      %13311 = OpCompositeExtract %uint %10785 1
      %13312 = OpCompositeConstruct %v3uint %13310 %13311 %13309
               OpImageWrite %10786 %13312 %13304 None
               OpBranch %13306
      %13307 = OpLabel
      %13313 = OpIEqual %bool %13295 %uint_0
      %13314 = OpSelect %uint %13313 %13304 %13294
      %13315 = OpIEqual %bool %13295 %uint_1
      %13316 = OpSelect %uint %13315 %13304 %13293
      %13317 = OpIEqual %bool %13295 %uint_2
      %13318 = OpSelect %uint %13317 %13304 %13292
               OpBranch %13306
      %13306 = OpLabel
      %13319 = OpPhi %uint %13292 %13308 %13318 %13307
      %13320 = OpPhi %uint %13293 %13308 %13316 %13307
      %13321 = OpPhi %uint %13294 %13308 %13314 %13307
      %13322 = OpIAdd %uint %12859 %uint_2
      %13323 = OpShiftRightLogical %uint %12855 %uint_7
      %13324 = OpBitwiseAnd %uint %13323 %uint_1
      %13325 = OpINotEqual %bool %13324 %uint_0
      %13326 = OpShiftRightLogical %uint %12855 %uint_6
      %13327 = OpBitwiseAnd %uint %13326 %uint_1
      %13328 = OpINotEqual %bool %13327 %uint_0
      %13329 = OpLogicalOr %bool %13325 %13328
               OpSelectionMerge %13330 None
               OpBranchConditional %13329 %13331 %13330
      %13331 = OpLabel
      %13332 = OpExtInst %float %1 NMax %float_0 %float_0
      %13333 = OpExtInst %float %1 NMax %float_0 %13332
      %13334 = OpFOrdGreaterThan %bool %13333 %float_0
      %13335 = OpCompositeConstruct %v3bool %13334 %13334 %13334
      %13336 = OpSelect %v3float %13335 %103 %128
      %13337 = OpDot %float %13336 %338
      %13338 = OpDot %float %13336 %339
      %13339 = OpCompositeConstruct %v3float %551 %13337 %13338
      %13340 = OpExtInst %v3float %1 Fma %13339 %323 %324
      %13341 = OpCompositeExtract %float %13340 1
      %13342 = OpCompositeExtract %float %13340 2
      %13343 = OpExtInst %float %1 FClamp %13341 %float_0 %float_1
      %13344 = OpFMul %float %13343 %float_255
      %13345 = OpConvertFToU %uint %13344
      %13346 = OpShiftLeftLogical %uint %13345 %uint_0
      %13347 = OpExtInst %float %1 FClamp %13342 %float_0 %float_1
      %13348 = OpFMul %float %13347 %float_255
      %13349 = OpConvertFToU %uint %13348
      %13350 = OpShiftLeftLogical %uint %13349 %uint_8
      %13351 = OpBitwiseOr %uint %13346 %13350
      %13352 = OpBitwiseOr %uint %13351 %uint_0
      %13353 = OpBitwiseOr %uint %13352 %uint_0
      %13354 = OpBitwiseOr %uint %uint_0 %13353
      %13355 = OpULessThan %bool %13322 %uint_3
               OpSelectionMerge %13356 None
               OpBranchConditional %13355 %13357 %13358
      %13358 = OpLabel
      %13359 = OpIAdd %uint %12859 %uint_4294967295
      %13360 = OpCompositeExtract %uint %10785 0
      %13361 = OpCompositeExtract %uint %10785 1
      %13362 = OpCompositeConstruct %v3uint %13360 %13361 %13359
               OpImageWrite %10786 %13362 %13354 None
               OpBranch %13356
      %13357 = OpLabel
      %13363 = OpIEqual %bool %13322 %uint_0
      %13364 = OpSelect %uint %13363 %13354 %13321
      %13365 = OpIEqual %bool %13322 %uint_1
      %13366 = OpSelect %uint %13365 %13354 %13320
      %13367 = OpIEqual %bool %13322 %uint_2
      %13368 = OpSelect %uint %13367 %13354 %13319
               OpBranch %13356
      %13356 = OpLabel
      %13369 = OpPhi %uint %13319 %13358 %13368 %13357
      %13370 = OpPhi %uint %13320 %13358 %13366 %13357
      %13371 = OpPhi %uint %13321 %13358 %13364 %13357
      %13372 = OpIAdd %uint %12859 %uint_3
               OpBranch %13330
      %13330 = OpLabel
      %13373 = OpPhi %uint %13319 %13306 %13369 %13356
      %13374 = OpPhi %uint %13320 %13306 %13370 %13356
      %13375 = OpPhi %uint %13321 %13306 %13371 %13356
      %13376 = OpPhi %uint %13322 %13306 %13372 %13356
      %13377 = OpShiftRightLogical %uint %12855 %uint_2
      %13378 = OpBitwiseAnd %uint %13377 %uint_7
      %13379 = OpINotEqual %bool %13378 %uint_0
               OpSelectionMerge %13380 None
               OpBranchConditional %13379 %13381 %13380
      %13381 = OpLabel
      %13382 = OpINotEqual %bool %13378 %uint_4
               OpSelectionMerge %13383 None
               OpBranchConditional %13382 %13384 %13383
      %13384 = OpLabel
      %13385 = OpBitwiseAnd %uint %11034 %uint_4294967292
      %13386 = OpBitwiseAnd %uint %13378 %uint_3
      %13387 = OpBitwiseOr %uint %13385 %13386
      %13388 = OpIEqual %bool %13378 %uint_1
               OpSelectionMerge %13389 None
               OpBranchConditional %13388 %13390 %13391
      %13391 = OpLabel
      %13392 = OpIEqual %bool %13378 %uint_3
               OpSelectionMerge %13393 None
               OpBranchConditional %13392 %13394 %13395
      %13395 = OpLabel
      %13396 = OpBitwiseAnd %uint %13387 %uint_3
      %13397 = OpExtInst %uint %1 PackHalf2x16 %559
      %13398 = OpShiftRightLogical %uint %13397 %uint_5
      %13399 = OpBitwiseAnd %uint %13398 %uint_1023
      %13400 = OpShiftLeftLogical %uint %13399 %uint_22
      %13401 = OpShiftLeftLogical %uint %13399 %uint_12
      %13402 = OpBitwiseOr %uint %13400 %13401
      %13403 = OpShiftLeftLogical %uint %13399 %uint_2
      %13404 = OpBitwiseOr %uint %13402 %13403
      %13405 = OpBitwiseOr %uint %13396 %13404
               OpBranch %13393
      %13394 = OpLabel
      %13406 = OpExtInst %float %1 Fma %461 %float_255 %float_0_5
      %13407 = OpConvertFToU %uint %13406
      %13408 = OpBitwiseAnd %uint %13387 %uint_3
      %13409 = OpShiftLeftLogical %uint %13407 %uint_24
      %13410 = OpBitwiseOr %uint %13408 %13409
      %13411 = OpBitwiseOr %uint %13410 %uint_0
               OpBranch %13393
      %13393 = OpLabel
      %13412 = OpPhi %uint %13405 %13395 %13411 %13394
               OpBranch %13389
      %13390 = OpLabel
      %13413 = OpExtInst %float %1 FAbs %461
      %13414 = OpFSub %float %float_1 %13413
      %13415 = OpBitwiseAnd %uint %13387 %uint_3
      %13416 = OpExtInst %float %1 FClamp %13414 %float_0 %float_1
      %13417 = OpFMul %float %13416 %float_255
      %13418 = OpConvertFToU %uint %13417
      %13419 = OpShiftLeftLogical %uint %13418 %uint_2
      %13420 = OpBitwiseOr %uint %13415 %13419
               OpBranch %13389
      %13389 = OpLabel
      %13421 = OpPhi %uint %13412 %13393 %13420 %13390
      %13422 = OpCompositeExtract %float %10788 0
      %13423 = OpCompositeExtract %float %10788 1
      %13424 = OpCompositeExtract %float %10788 2
      %13425 = OpCompositeConstruct %v4float %13422 %13423 %13424 %float_0
      %13426 = OpVectorShuffle %v3float %13425 %13425 0 1 2
      %13427 = OpExtInst %v3float %1 FClamp %13426 %103 %128
      %13428 = OpCompositeExtract %float %13427 0
               OpSelectionMerge %13429 None
               OpSwitch %uint_0 %13430
      %13430 = OpLabel
      %13431 = OpFOrdLessThan %bool %13428 %float_0_00313066994
               OpSelectionMerge %13432 None
               OpBranchConditional %13431 %13433 %13432
      %13433 = OpLabel
      %13434 = OpFMul %float %13428 %float_12_9200001
               OpBranch %13429
      %13432 = OpLabel
      %13435 = OpExtInst %float %1 Pow %13428 %float_0_416666657
      %13436 = OpExtInst %float %1 Fma %13435 %float_1_05499995 %float_n0_0549999997
               OpBranch %13429
      %13429 = OpLabel
      %13437 = OpPhi %float %13434 %13433 %13436 %13432
      %13438 = OpCompositeExtract %float %13427 1
               OpSelectionMerge %13439 None
               OpSwitch %uint_0 %13440
      %13440 = OpLabel
      %13441 = OpFOrdLessThan %bool %13438 %float_0_00313066994
               OpSelectionMerge %13442 None
               OpBranchConditional %13441 %13443 %13442
      %13443 = OpLabel
      %13444 = OpFMul %float %13438 %float_12_9200001
               OpBranch %13439
      %13442 = OpLabel
      %13445 = OpExtInst %float %1 Pow %13438 %float_0_416666657
      %13446 = OpExtInst %float %1 Fma %13445 %float_1_05499995 %float_n0_0549999997
               OpBranch %13439
      %13439 = OpLabel
      %13447 = OpPhi %float %13444 %13443 %13446 %13442
      %13448 = OpCompositeExtract %float %13427 2
               OpSelectionMerge %13449 None
               OpSwitch %uint_0 %13450
      %13450 = OpLabel
      %13451 = OpFOrdLessThan %bool %13448 %float_0_00313066994
               OpSelectionMerge %13452 None
               OpBranchConditional %13451 %13453 %13452
      %13453 = OpLabel
      %13454 = OpFMul %float %13448 %float_12_9200001
               OpBranch %13449
      %13452 = OpLabel
      %13455 = OpExtInst %float %1 Pow %13448 %float_0_416666657
      %13456 = OpExtInst %float %1 Fma %13455 %float_1_05499995 %float_n0_0549999997
               OpBranch %13449
      %13449 = OpLabel
      %13457 = OpPhi %float %13454 %13453 %13456 %13452
      %13458 = OpExtInst %float %1 FClamp %13437 %float_0 %float_1
      %13459 = OpFMul %float %13458 %float_255
      %13460 = OpConvertFToU %uint %13459
      %13461 = OpShiftLeftLogical %uint %13460 %uint_0
      %13462 = OpExtInst %float %1 FClamp %13447 %float_0 %float_1
      %13463 = OpFMul %float %13462 %float_255
      %13464 = OpConvertFToU %uint %13463
      %13465 = OpShiftLeftLogical %uint %13464 %uint_8
      %13466 = OpExtInst %float %1 FClamp %13457 %float_0 %float_1
      %13467 = OpFMul %float %13466 %float_255
      %13468 = OpConvertFToU %uint %13467
      %13469 = OpShiftLeftLogical %uint %13468 %uint_16
      %13470 = OpBitwiseOr %uint %13461 %13465
      %13471 = OpBitwiseOr %uint %13470 %13469
      %13472 = OpBitwiseOr %uint %13471 %uint_0
               OpBranch %13383
      %13383 = OpLabel
      %13473 = OpPhi %uint %458 %13381 %13472 %13449
      %13474 = OpPhi %uint %11034 %13381 %13421 %13449
      %13475 = OpIEqual %bool %13378 %uint_3
      %13476 = OpIAdd %uint %13376 %uint_1
               OpSelectionMerge %13477 None
               OpBranchConditional %13475 %13478 %13479
      %13479 = OpLabel
      %13480 = OpShiftRightLogical %uint %12855 %uint_10
      %13481 = OpBitwiseAnd %uint %13480 %uint_1
      %13482 = OpINotEqual %bool %13481 %uint_0
      %13483 = OpIEqual %bool %13378 %uint_2
      %13484 = OpLogicalAnd %bool %13482 %13483
               OpSelectionMerge %13485 None
               OpBranchConditional %13484 %13486 %13485
      %13486 = OpLabel
      %13487 = OpExtInst %v3float %1 NMax %556 %103
      %13488 = OpVectorShuffle %v4float %459 %13487 4 5 6 3
               OpBranch %13485
      %13485 = OpLabel
      %13489 = OpPhi %v4float %459 %13479 %13488 %13486
      %13490 = OpCompositeExtract %float %13489 0
      %13491 = OpCompositeConstruct %v2float %13490 %float_0
      %13492 = OpExtInst %uint %1 PackHalf2x16 %13491
      %13493 = OpShiftLeftLogical %uint %13492 %uint_17
      %13494 = OpBitwiseAnd %uint %13493 %uint_4292870144
      %13495 = OpCompositeExtract %float %13489 1
      %13496 = OpCompositeConstruct %v2float %13495 %float_0
      %13497 = OpExtInst %uint %1 PackHalf2x16 %13496
      %13498 = OpShiftLeftLogical %uint %13497 %uint_6
      %13499 = OpBitwiseAnd %uint %13498 %uint_2096128
      %13500 = OpCompositeExtract %float %13489 2
      %13501 = OpCompositeConstruct %v2float %13500 %float_0
      %13502 = OpExtInst %uint %1 PackHalf2x16 %13501
      %13503 = OpShiftRightLogical %uint %13502 %uint_5
      %13504 = OpBitwiseAnd %uint %13503 %uint_1023
      %13505 = OpBitwiseOr %uint %13494 %13499
      %13506 = OpBitwiseOr %uint %13505 %13504
      %13507 = OpULessThan %bool %13376 %uint_3
               OpSelectionMerge %13508 None
               OpBranchConditional %13507 %13509 %13510
      %13510 = OpLabel
      %13511 = OpISub %uint %13376 %uint_3
      %13512 = OpCompositeExtract %uint %10785 0
      %13513 = OpCompositeExtract %uint %10785 1
      %13514 = OpCompositeConstruct %v3uint %13512 %13513 %13511
               OpImageWrite %10786 %13514 %13506 None
               OpBranch %13508
      %13509 = OpLabel
      %13515 = OpIEqual %bool %13376 %uint_0
      %13516 = OpSelect %uint %13515 %13506 %13375
      %13517 = OpIEqual %bool %13376 %uint_1
      %13518 = OpSelect %uint %13517 %13506 %13374
      %13519 = OpIEqual %bool %13376 %uint_2
      %13520 = OpSelect %uint %13519 %13506 %13373
               OpBranch %13508
      %13508 = OpLabel
      %13521 = OpPhi %uint %13373 %13510 %13520 %13509
      %13522 = OpPhi %uint %13374 %13510 %13518 %13509
      %13523 = OpPhi %uint %13375 %13510 %13516 %13509
               OpBranch %13477
      %13478 = OpLabel
      %13524 = OpExtInst %uint %1 PackHalf2x16 %559
      %13525 = OpShiftRightLogical %uint %13524 %uint_5
      %13526 = OpBitwiseAnd %uint %13525 %uint_1023
      %13527 = OpShiftLeftLogical %uint %13526 %uint_16
      %13528 = OpBitwiseOr %uint %uint_0 %13527
      %13529 = OpULessThan %bool %13376 %uint_3
               OpSelectionMerge %13530 None
               OpBranchConditional %13529 %13531 %13532
      %13532 = OpLabel
      %13533 = OpISub %uint %13376 %uint_3
      %13534 = OpCompositeExtract %uint %10785 0
      %13535 = OpCompositeExtract %uint %10785 1
      %13536 = OpCompositeConstruct %v3uint %13534 %13535 %13533
               OpImageWrite %10786 %13536 %13528 None
               OpBranch %13530
      %13531 = OpLabel
      %13537 = OpIEqual %bool %13376 %uint_0
      %13538 = OpSelect %uint %13537 %13528 %13375
      %13539 = OpIEqual %bool %13376 %uint_1
      %13540 = OpSelect %uint %13539 %13528 %13374
      %13541 = OpIEqual %bool %13376 %uint_2
      %13542 = OpSelect %uint %13541 %13528 %13373
               OpBranch %13530
      %13530 = OpLabel
      %13543 = OpPhi %uint %13373 %13532 %13542 %13531
      %13544 = OpPhi %uint %13374 %13532 %13540 %13531
      %13545 = OpPhi %uint %13375 %13532 %13538 %13531
               OpBranch %13477
      %13477 = OpLabel
      %13546 = OpPhi %uint %13521 %13508 %13543 %13530
      %13547 = OpPhi %uint %13522 %13508 %13544 %13530
      %13548 = OpPhi %uint %13523 %13508 %13545 %13530
               OpBranch %13380
      %13380 = OpLabel
      %13549 = OpPhi %uint %458 %13330 %13473 %13477
      %13550 = OpPhi %uint %11034 %13330 %13474 %13477
      %13551 = OpPhi %uint %13373 %13330 %13546 %13477
      %13552 = OpPhi %uint %13374 %13330 %13547 %13477
      %13553 = OpPhi %uint %13375 %13330 %13548 %13477
      %13554 = OpPhi %uint %13376 %13330 %13476 %13477
      %13555 = OpShiftRightLogical %uint %12855 %uint_9
      %13556 = OpBitwiseAnd %uint %13555 %uint_1
      %13557 = OpINotEqual %bool %13556 %uint_0
               OpSelectionMerge %13558 None
               OpBranchConditional %13557 %13559 %13558
      %13559 = OpLabel
               OpSelectionMerge %13560 None
               OpSwitch %uint_0 %13561
      %13561 = OpLabel
               OpSelectionMerge %13562 None
               OpBranchConditional %true %13563 %13562
      %13563 = OpLabel
               OpBranch %13560
      %13562 = OpLabel
      %13564 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13560
      %13560 = OpLabel
      %13565 = OpPhi %float %float_0 %13563 %13564 %13562
               OpSelectionMerge %13566 None
               OpSwitch %uint_0 %13567
      %13567 = OpLabel
               OpSelectionMerge %13568 None
               OpBranchConditional %true %13569 %13568
      %13569 = OpLabel
               OpBranch %13566
      %13568 = OpLabel
      %13570 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13566
      %13566 = OpLabel
      %13571 = OpPhi %float %float_0 %13569 %13570 %13568
               OpSelectionMerge %13572 None
               OpSwitch %uint_0 %13573
      %13573 = OpLabel
               OpSelectionMerge %13574 None
               OpBranchConditional %true %13575 %13574
      %13575 = OpLabel
               OpBranch %13572
      %13574 = OpLabel
      %13576 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13572
      %13572 = OpLabel
      %13577 = OpPhi %float %float_0 %13575 %13576 %13574
      %13578 = OpCompositeConstruct %v3float %13565 %13571 %13577
      %13579 = OpBitcast %v3uint %13578
      %13580 = OpBitwiseAnd %v3uint %13579 %350
      %13581 = OpExtInst %v3uint %1 UMin %13580 %502
      %13582 = OpConvertUToF %v3float %13581
      %13583 = OpExtInst %v3float %1 Fma %13166 %13582 %13578
      %13584 = OpExtInst %v3float %1 FClamp %13583 %103 %128
      %13585 = OpCompositeExtract %float %13584 0
      %13586 = OpFMul %float %13585 %float_127
      %13587 = OpConvertFToU %uint %13586
      %13588 = OpShiftLeftLogical %uint %13587 %uint_0
      %13589 = OpCompositeExtract %float %13584 1
      %13590 = OpFMul %float %13589 %float_127
      %13591 = OpConvertFToU %uint %13590
      %13592 = OpShiftLeftLogical %uint %13591 %uint_7
      %13593 = OpCompositeExtract %float %13584 2
      %13594 = OpFMul %float %13593 %float_63
      %13595 = OpConvertFToU %uint %13594
      %13596 = OpShiftLeftLogical %uint %13595 %uint_14
      %13597 = OpBitwiseOr %uint %13588 %13592
      %13598 = OpBitwiseOr %uint %13597 %13596
      %13599 = OpExtInst %float %1 Fma %13165 %float_0 %float_0
      %13600 = OpExtInst %float %1 FClamp %13599 %float_0 %float_1
      %13601 = OpFMul %float %13600 %float_63
      %13602 = OpConvertFToU %uint %13601
      %13603 = OpShiftLeftLogical %uint %13602 %uint_20
      %13604 = OpBitwiseOr %uint %13598 %13603
      %13605 = OpShiftLeftLogical %uint %13602 %uint_26
      %13606 = OpBitwiseOr %uint %13604 %13605
      %13607 = OpULessThan %bool %13554 %uint_3
               OpSelectionMerge %13608 None
               OpBranchConditional %13607 %13609 %13610
      %13610 = OpLabel
      %13611 = OpISub %uint %13554 %uint_3
      %13612 = OpCompositeExtract %uint %10785 0
      %13613 = OpCompositeExtract %uint %10785 1
      %13614 = OpCompositeConstruct %v3uint %13612 %13613 %13611
               OpImageWrite %10786 %13614 %13606 None
               OpBranch %13608
      %13609 = OpLabel
      %13615 = OpIEqual %bool %13554 %uint_0
      %13616 = OpSelect %uint %13615 %13606 %13553
      %13617 = OpIEqual %bool %13554 %uint_1
      %13618 = OpSelect %uint %13617 %13606 %13552
      %13619 = OpIEqual %bool %13554 %uint_2
      %13620 = OpSelect %uint %13619 %13606 %13551
               OpBranch %13608
      %13608 = OpLabel
      %13621 = OpPhi %uint %13551 %13610 %13620 %13609
      %13622 = OpPhi %uint %13552 %13610 %13618 %13609
      %13623 = OpPhi %uint %13553 %13610 %13616 %13609
      %13624 = OpIAdd %uint %13554 %uint_1
               OpBranch %13558
      %13558 = OpLabel
      %13625 = OpPhi %uint %13551 %13380 %13621 %13608
      %13626 = OpPhi %uint %13552 %13380 %13622 %13608
      %13627 = OpPhi %uint %13553 %13380 %13623 %13608
      %13628 = OpPhi %uint %13554 %13380 %13624 %13608
      %13629 = OpShiftRightLogical %uint %12855 %uint_16
      %13630 = OpBitwiseAnd %uint %13629 %uint_1
      %13631 = OpINotEqual %bool %13630 %uint_0
               OpSelectionMerge %13632 None
               OpBranchConditional %13631 %13633 %13632
      %13633 = OpLabel
               OpSelectionMerge %13634 None
               OpSwitch %uint_0 %13635
      %13635 = OpLabel
      %13636 = OpExtInst %float %1 Fma %float_1 %float_1_05499995 %float_n0_0549999997
               OpBranch %13634
      %13634 = OpLabel
               OpBranch %13637
      %13637 = OpLabel
               OpBranch %13638
      %13638 = OpLabel
      %13639 = OpExtInst %float %1 FClamp %13636 %float_0 %float_1
      %13640 = OpFMul %float %13639 %float_255
      %13641 = OpConvertFToU %uint %13640
      %13642 = OpShiftLeftLogical %uint %13641 %uint_0
      %13643 = OpShiftLeftLogical %uint %13641 %uint_8
      %13644 = OpShiftLeftLogical %uint %13641 %uint_16
      %13645 = OpBitwiseOr %uint %13642 %13643
      %13646 = OpBitwiseOr %uint %13645 %13644
      %13647 = OpBitwiseOr %uint %13646 %uint_0
      %13648 = OpULessThan %bool %13628 %uint_3
               OpSelectionMerge %13649 None
               OpBranchConditional %13648 %13650 %13651
      %13651 = OpLabel
      %13652 = OpISub %uint %13628 %uint_3
      %13653 = OpCompositeExtract %uint %10785 0
      %13654 = OpCompositeExtract %uint %10785 1
      %13655 = OpCompositeConstruct %v3uint %13653 %13654 %13652
               OpImageWrite %10786 %13655 %13647 None
               OpBranch %13649
      %13650 = OpLabel
      %13656 = OpIEqual %bool %13628 %uint_0
      %13657 = OpSelect %uint %13656 %13647 %13627
      %13658 = OpIEqual %bool %13628 %uint_1
      %13659 = OpSelect %uint %13658 %13647 %13626
      %13660 = OpIEqual %bool %13628 %uint_2
      %13661 = OpSelect %uint %13660 %13647 %13625
               OpBranch %13649
      %13649 = OpLabel
      %13662 = OpPhi %uint %13625 %13651 %13661 %13650
      %13663 = OpPhi %uint %13626 %13651 %13659 %13650
      %13664 = OpPhi %uint %13627 %13651 %13657 %13650
               OpBranch %13632
      %13632 = OpLabel
      %13665 = OpPhi %uint %13625 %13558 %13662 %13649
      %13666 = OpPhi %uint %13626 %13558 %13663 %13649
      %13667 = OpPhi %uint %13627 %13558 %13664 %13649
               OpBranch %12868
      %12868 = OpLabel
      %13668 = OpPhi %uint %458 %12865 %13059 %12998 %458 %13146 %13549 %13632
      %13669 = OpPhi %uint %11034 %12865 %13060 %12998 %11034 %13146 %13550 %13632
      %13670 = OpPhi %uint %12856 %12865 %12992 %12998 %13159 %13146 %13665 %13632
      %13671 = OpPhi %uint %12857 %12865 %12993 %12998 %13160 %13146 %13666 %13632
      %13672 = OpPhi %uint %12858 %12865 %12994 %12998 %13161 %13146 %13667 %13632
               OpBranch %12864
      %12864 = OpLabel
      %13673 = OpPhi %uint %458 %11682 %13668 %12868
      %13674 = OpPhi %uint %11034 %11682 %13669 %12868
      %13675 = OpPhi %uint %12856 %11682 %13670 %12868
      %13676 = OpPhi %uint %12857 %11682 %13671 %12868
      %13677 = OpPhi %uint %12858 %11682 %13672 %12868
               OpBranch %11671
      %11671 = OpLabel
      %13678 = OpPhi %uint %458 %11622 %13673 %12864
      %13679 = OpPhi %uint %11034 %11622 %13674 %12864
      %13680 = OpPhi %uint %uint_0 %11622 %13675 %12864
      %13681 = OpPhi %uint %11668 %11622 %13676 %12864
      %13682 = OpPhi %uint %11669 %11622 %13677 %12864
      %13683 = OpExtInst %v3float %1 FAbs %10942
      %13684 = OpDot %float %128 %13683
      %13685 = OpCompositeConstruct %v2float %13684 %13684
      %13686 = OpVectorShuffle %v2float %10942 %10942 0 1
      %13687 = OpFDiv %v2float %13686 %13685
      %13688 = OpVectorShuffle %v3float %10942 %13687 3 4 2
      %13689 = OpCompositeExtract %float %10942 2
      %13690 = OpFOrdLessThanEqual %bool %13689 %float_0
               OpSelectionMerge %13691 None
               OpBranchConditional %13690 %13692 %13691
      %13692 = OpLabel
      %13693 = OpVectorShuffle %v2float %13687 %460 1 0
      %13694 = OpExtInst %v2float %1 FAbs %13693
      %13695 = OpFSub %v2float %314 %13694
      %13696 = OpVectorShuffle %v2float %13687 %460 0 1
      %13697 = OpFOrdGreaterThanEqual %v2bool %13696 %125
      %13698 = OpCompositeExtract %bool %13697 0
      %13699 = OpSelect %float %13698 %float_1 %float_n1
      %13700 = OpCompositeExtract %bool %13697 1
      %13701 = OpSelect %float %13700 %float_1 %float_n1
      %13702 = OpCompositeConstruct %v2float %13699 %13701
      %13703 = OpFMul %v2float %13695 %13702
      %13704 = OpVectorShuffle %v3float %10942 %13703 3 4 2
               OpBranch %13691
      %13691 = OpLabel
      %13705 = OpPhi %v3float %13688 %11671 %13704 %13692
      %13706 = OpVectorShuffle %v2float %13705 %13705 0 1
      %13707 = OpVectorTimesScalar %v2float %13706 %float_1023
      %13708 = OpFAdd %v2float %13707 %327
      %13709 = OpExtInst %v2float %1 FClamp %13708 %125 %328
      %13710 = OpConvertFToU %v2uint %13709
      %13711 = OpCompositeExtract %uint %13710 0
      %13712 = OpCompositeExtract %uint %13710 1
      %13713 = OpShiftLeftLogical %uint %13712 %uint_11
      %13714 = OpBitwiseOr %uint %13711 %13713
      %13715 = OpShiftLeftLogical %uint %13714 %uint_10
      %13716 = OpExtInst %float %1 FClamp %10944 %float_0 %float_1
      %13717 = OpFMul %float %13716 %float_255
      %13718 = OpConvertFToU %uint %13717
      %13719 = OpShiftLeftLogical %uint %13718 %uint_2
      %13720 = OpBitwiseOr %uint %13715 %13719
      %13721 = OpBitwiseOr %uint %13720 %10930
      %13722 = OpBitwiseAnd %uint %13679 %uint_3
      %13723 = OpINotEqual %bool %13722 %uint_0
               OpSelectionMerge %13724 DontFlatten
               OpBranchConditional %13723 %13725 %13724
      %13725 = OpLabel
      %13726 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %13727 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_18
      %13728 = OpLoad %int %13727
      %13729 = OpBitcast %uint %13728
      %13730 = OpCompositeExtract %uint %10785 0
      %13731 = OpCompositeExtract %uint %10785 1
      %13732 = OpCompositeConstruct %v3uint %13730 %13731 %13729
               OpImageWrite %13726 %13732 %13679 None
      %13733 = OpIEqual %bool %13722 %uint_2
      %13734 = OpIEqual %bool %13722 %uint_3
      %13735 = OpLogicalOr %bool %13733 %13734
               OpSelectionMerge %13736 None
               OpBranchConditional %13735 %13737 %13736
      %13737 = OpLabel
      %13738 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %13739 = OpIAdd %uint %13729 %uint_1
      %13740 = OpCompositeConstruct %v3uint %13730 %13731 %13739
               OpImageWrite %13738 %13740 %13678 None
               OpBranch %13736
      %13736 = OpLabel
               OpBranch %13724
      %13724 = OpLabel
      %13741 = OpAccessChain %_ptr_Uniform_float %View %uint_21
      %13742 = OpLoad %float %13741
      %13743 = OpCompositeConstruct %v3float %13742 %13742 %13742
      %13744 = OpExtInst %v3float %1 FMix %10783 %10947 %13743
      %13745 = OpFAdd %v3float %11585 %10530
      %13746 = OpFAdd %v3float %13744 %13745
      %13747 = OpVectorTimesScalar %v3float %13746 %float_1
      %13748 = OpCompositeExtract %float %13747 0
      %13749 = OpCompositeExtract %float %13747 1
      %13750 = OpCompositeExtract %float %13747 2
      %13751 = OpCompositeConstruct %v4float %13748 %13749 %13750 %float_0
      %13752 = OpAccessChain %_ptr_Uniform_float %View %uint_34
      %13753 = OpLoad %float %13752
      %13754 = OpFOrdEqual %bool %13753 %float_0
               OpSelectionMerge %13755 None
               OpBranchConditional %13754 %13756 %13755
      %13756 = OpLabel
      %13757 = OpCompositeInsert %v4float %461 %13751 3
               OpBranch %13755
      %13755 = OpLabel
      %13758 = OpPhi %v4float %13751 %13724 %13757 %13756
      %13759 = OpCompositeInsert %v4float %8516 %99 0
      %13760 = OpCompositeInsert %v4float %float_1 %13759 1
      %13761 = OpCompositeInsert %v4float %float_1 %13760 2
      %13762 = OpCompositeInsert %v4float %float_1 %13761 3
      %13763 = OpVectorTimesScalar %v3float %10781 %11596
      %13764 = OpCompositeExtract %float %13763 0
      %13765 = OpCompositeExtract %float %13763 1
      %13766 = OpCompositeExtract %float %13763 2
      %13767 = OpCompositeConstruct %v4float %13764 %13765 %13766 %float_1
      %13768 = OpVectorTimesScalar %v4float %13758 %11596
      %13769 = OpVectorShuffle %v3float %13768 %13768 0 1 2
      %13770 = OpExtInst %v3float %1 NMin %13769 %486
      %13771 = OpVectorShuffle %v4float %13768 %13770 4 5 6 3
               OpStore %out_var_SV_Target0 %13771
               OpStore %out_var_SV_Target1 %13762
               OpStore %out_var_SV_Target2 %13767
               OpStore %out_var_SV_Target3 %13682
               OpStore %out_var_SV_Target4 %13681
               OpStore %out_var_SV_Target5 %13680
               OpStore %out_var_SV_Target6 %13721
               OpReturn
               OpFunctionEnd
