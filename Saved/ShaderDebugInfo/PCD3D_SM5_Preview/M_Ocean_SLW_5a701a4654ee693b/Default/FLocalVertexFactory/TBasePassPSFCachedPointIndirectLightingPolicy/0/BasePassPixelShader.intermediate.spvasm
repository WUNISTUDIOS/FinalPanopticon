; SPIR-V
; Version: 1.3
; Generator: Google spiregg; 0
; Bound: 13577
; Schema: 0
               OpCapability Shader
               OpCapability SampledBuffer
               OpCapability StorageImageReadWithoutFormat
               OpExtension "SPV_GOOGLE_hlsl_functionality1"
               OpExtension "SPV_GOOGLE_user_type"
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %MainPS "MainPS" %in_var_TEXCOORD10_centroid %in_var_TEXCOORD11_centroid %in_var_PRIMITIVE_ID %in_var_TEXCOORD9 %gl_FragCoord %gl_FrontFacing %out_var_SV_Target0 %out_var_SV_Target1 %out_var_SV_Target2 %out_var_SV_Target3 %out_var_SV_Target4 %out_var_SV_Target5 %out_var_SV_Target6
               OpExecutionMode %MainPS OriginUpperLeft
               OpExecutionMode %MainPS EarlyFragmentTests

               ; Debug Information
               OpSource HLSL 620
               OpName %type_View "type.View"  ; id %16
               OpMemberName %type_View 0 "View_TranslatedWorldToView"
               OpMemberName %type_View 1 "View_ViewToClip"
               OpMemberName %type_View 2 "View_SVPositionToTranslatedWorld"
               OpMemberName %type_View 3 "View_ViewTilePosition"
               OpMemberName %type_View 4 "View_ViewForward"
               OpMemberName %type_View 5 "View_InvDeviceZToWorldZTransform"
               OpMemberName %type_View 6 "View_ScreenPositionScaleBias"
               OpMemberName %type_View 7 "View_RelativeWorldCameraOrigin"
               OpMemberName %type_View 8 "View_RelativePreViewTranslation"
               OpMemberName %type_View 9 "View_ViewRectMin"
               OpMemberName %type_View 10 "View_ViewSizeAndInvSize"
               OpMemberName %type_View 11 "View_LightProbeSizeRatioAndInvSizeRatio"
               OpMemberName %type_View 12 "View_BufferSizeAndInvSize"
               OpMemberName %type_View 13 "View_PreExposure"
               OpMemberName %type_View 14 "View_OneOverPreExposure"
               OpMemberName %type_View 15 "View_DiffuseOverrideParameter"
               OpMemberName %type_View 16 "View_SpecularOverrideParameter"
               OpMemberName %type_View 17 "View_RoughnessOverrideParameter"
               OpMemberName %type_View 18 "View_OutOfBoundsMask"
               OpMemberName %type_View 19 "View_GameTime"
               OpMemberName %type_View 20 "View_StateFrameIndexMod8"
               OpMemberName %type_View 21 "View_UnlitViewmodeMask"
               OpMemberName %type_View 22 "View_DirectionalLightColor"
               OpMemberName %type_View 23 "View_DirectionalLightDirection"
               OpMemberName %type_View 24 "View_PrecomputedIndirectLightingColorScale"
               OpMemberName %type_View 25 "View_RenderingReflectionCaptureMask"
               OpMemberName %type_View 26 "View_GlobalVolumeTranslatedCenterAndExtent"
               OpMemberName %type_View 27 "View_GlobalVolumeTranslatedWorldToUVAddAndMul"
               OpMemberName %type_View 28 "View_GlobalDistanceFieldClipmapSizeInPages"
               OpMemberName %type_View 29 "View_GlobalDistanceFieldInvPageAtlasSize"
               OpMemberName %type_View 30 "View_GlobalVolumeTexelSize"
               OpMemberName %type_View 31 "View_NumGlobalSDFClipmaps"
               OpMemberName %type_View 32 "View_bCheckerboardSubsurfaceProfileRendering"
               OpMemberName %type_View 33 "View_VolumetricLightmapWorldToUVScale"
               OpMemberName %type_View 34 "View_VolumetricLightmapWorldToUVAdd"
               OpMemberName %type_View 35 "View_VolumetricLightmapIndirectionTextureSize"
               OpMemberName %type_View 36 "View_VolumetricLightmapBrickSize"
               OpMemberName %type_View 37 "View_VolumetricLightmapBrickTexelSize"
               OpMemberName %type_View 38 "View_IndirectLightingCacheShowFlag"
               OpMemberName %type_View 39 "View_MinRoughness"
               OpMemberName %type_View 40 "View_bShadingEnergyConservation"
               OpMemberName %type_View 41 "View_bShadingEnergyPreservation"
               OpName %View "View"  ; id %17
               OpName %type_3d_image "type.3d.image"  ; id %18
               OpName %View_VolumetricLightmapIndirectionTexture "View_VolumetricLightmapIndirectionTexture"  ; id %19
               OpName %type_3d_image_0 "type.3d.image"  ; id %20
               OpName %View_DirectionalLightShadowingBrickTexture "View_DirectionalLightShadowingBrickTexture"  ; id %21
               OpName %View_GlobalDistanceFieldPageAtlasTexture "View_GlobalDistanceFieldPageAtlasTexture"  ; id %22
               OpName %View_GlobalDistanceFieldPageTableTexture "View_GlobalDistanceFieldPageTableTexture"  ; id %23
               OpName %type_2d_image "type.2d.image"  ; id %24
               OpName %type_sampler "type.sampler"  ; id %25
               OpName %View_PerlinNoise3DTexture "View_PerlinNoise3DTexture"  ; id %26
               OpName %View_PerlinNoise3DTextureSampler "View_PerlinNoise3DTextureSampler"  ; id %27
               OpName %View_SharedBilinearClampedSampler "View_SharedBilinearClampedSampler"  ; id %28
               OpName %View_SharedTrilinearWrappedSampler "View_SharedTrilinearWrappedSampler"  ; id %29
               OpName %View_ShadingEnergyGGXSpecTexture "View_ShadingEnergyGGXSpecTexture"  ; id %30
               OpName %View_ShadingEnergySampler "View_ShadingEnergySampler"  ; id %31
               OpName %View_SimpleVolumeEnvTexture "View_SimpleVolumeEnvTexture"  ; id %32
               OpName %View_SimpleVolumeEnvTextureSampler "View_SimpleVolumeEnvTextureSampler"  ; id %33
               OpName %type_SingleLayerWater "type.SingleLayerWater"  ; id %34
               OpMemberName %type_SingleLayerWater 0 "SingleLayerWater_SceneWithoutSingleLayerWaterMinMaxUV"
               OpMemberName %type_SingleLayerWater 1 "SingleLayerWater_DistortionParams"
               OpMemberName %type_SingleLayerWater 2 "SingleLayerWater_SceneWithoutSingleLayerWaterTextureSize"
               OpMemberName %type_SingleLayerWater 3 "SingleLayerWater_bMainDirectionalLightVSMFiltering"
               OpMemberName %type_SingleLayerWater 4 "SingleLayerWater_bSeparateMainDirLightLuminance"
               OpName %SingleLayerWater "SingleLayerWater"  ; id %35
               OpName %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture "SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture"  ; id %36
               OpName %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture "SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture"  ; id %37
               OpName %type_StructuredBuffer_v4float "type.StructuredBuffer.v4float"  ; id %38
               OpName %Scene_GPUScene_GPUScenePrimitiveSceneData "Scene_GPUScene_GPUScenePrimitiveSceneData"  ; id %39
               OpName %type_OpaqueBasePass "type.OpaqueBasePass"  ; id %40
               OpMemberName %type_OpaqueBasePass 0 "OpaqueBasePass_Shared_Forward_NumLocalLights"
               OpMemberName %type_OpaqueBasePass 1 "OpaqueBasePass_Shared_Forward_HasDirectionalLight"
               OpMemberName %type_OpaqueBasePass 2 "OpaqueBasePass_Shared_Forward_CulledGridSize"
               OpMemberName %type_OpaqueBasePass 3 "OpaqueBasePass_Shared_Forward_LightGridPixelSizeShift"
               OpMemberName %type_OpaqueBasePass 4 "OpaqueBasePass_Shared_Forward_LightGridZParams"
               OpMemberName %type_OpaqueBasePass 5 "OpaqueBasePass_Shared_Forward_DirectionalLightDirection"
               OpMemberName %type_OpaqueBasePass 6 "OpaqueBasePass_Shared_Forward_DirectionalLightSourceRadius"
               OpMemberName %type_OpaqueBasePass 7 "OpaqueBasePass_Shared_Forward_DirectionalLightColor"
               OpMemberName %type_OpaqueBasePass 8 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowMapChannelMask"
               OpMemberName %type_OpaqueBasePass 9 "OpaqueBasePass_Shared_Forward_DirectionalLightDistanceFadeMAD"
               OpMemberName %type_OpaqueBasePass 10 "OpaqueBasePass_Shared_Forward_NumDirectionalLightCascades"
               OpMemberName %type_OpaqueBasePass 11 "OpaqueBasePass_Shared_Forward_DirectionalLightVSM"
               OpMemberName %type_OpaqueBasePass 12 "OpaqueBasePass_Shared_Forward_CascadeEndDepths"
               OpMemberName %type_OpaqueBasePass 13 "OpaqueBasePass_Shared_Forward_DirectionalLightTranslatedWorldToShadowMatrix"
               OpMemberName %type_OpaqueBasePass 14 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapMinMax"
               OpMemberName %type_OpaqueBasePass 15 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlasBufferSize"
               OpMemberName %type_OpaqueBasePass 16 "OpaqueBasePass_Shared_Forward_DirectLightingShowFlag"
               OpMemberName %type_OpaqueBasePass 17 "OpaqueBasePass_Strata_FirstSliceStoringStrataSSSDataWithoutMRT"
               OpMemberName %type_OpaqueBasePass 18 "OpaqueBasePass_UseForwardScreenSpaceShadowMask"
               OpName %OpaqueBasePass "OpaqueBasePass"  ; id %41
               OpName %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas"  ; id %42
               OpName %OpaqueBasePass_Shared_Forward_ShadowmapSampler "OpaqueBasePass_Shared_Forward_ShadowmapSampler"  ; id %43
               OpName %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer "OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer"  ; id %44
               OpName %type_StructuredBuffer_uint "type.StructuredBuffer.uint"  ; id %45
               OpName %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid "OpaqueBasePass_Shared_Forward_NumCulledLightsGrid"  ; id %46
               OpName %type_buffer_image "type.buffer.image"  ; id %47
               OpName %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit "OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit"  ; id %48
               OpName %type_2d_image_array "type.2d.image.array"  ; id %49
               OpName %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs "OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs"  ; id %50
               OpName %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture "OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture"  ; id %51
               OpName %OpaqueBasePass_PreIntegratedGFTexture "OpaqueBasePass_PreIntegratedGFTexture"  ; id %52
               OpName %type_IndirectLightingCache "type.IndirectLightingCache"  ; id %53
               OpMemberName %type_IndirectLightingCache 0 "IndirectLightingCache_DirectionalLightShadowing"
               OpMemberName %type_IndirectLightingCache 1 "IndirectLightingCache_IndirectLightingSHCoefficients0"
               OpMemberName %type_IndirectLightingCache 2 "IndirectLightingCache_IndirectLightingSHCoefficients1"
               OpMemberName %type_IndirectLightingCache 3 "IndirectLightingCache_IndirectLightingSHCoefficients2"
               OpName %IndirectLightingCache "IndirectLightingCache"  ; id %54
               OpName %type_ByteAddressBuffer "type.ByteAddressBuffer"  ; id %55
               OpName %VirtualShadowMap_ProjectionData "VirtualShadowMap_ProjectionData"  ; id %56
               OpName %VirtualShadowMap_PageTable "VirtualShadowMap_PageTable"  ; id %57
               OpName %type_2d_image_array_0 "type.2d.image.array"  ; id %58
               OpName %VirtualShadowMap_PhysicalPagePool "VirtualShadowMap_PhysicalPagePool"  ; id %59
               OpName %type_MaterialCollection0 "type.MaterialCollection0"  ; id %60
               OpMemberName %type_MaterialCollection0 0 "MaterialCollection0_Vectors"
               OpName %MaterialCollection0 "MaterialCollection0"  ; id %61
               OpName %type_Material "type.Material"  ; id %62
               OpMemberName %type_Material 0 "Material_PreshaderBuffer"
               OpName %Material "Material"  ; id %63
               OpName %in_var_TEXCOORD10_centroid "in.var.TEXCOORD10_centroid"  ; id %3
               OpName %in_var_TEXCOORD11_centroid "in.var.TEXCOORD11_centroid"  ; id %4
               OpName %in_var_PRIMITIVE_ID "in.var.PRIMITIVE_ID"  ; id %5
               OpName %in_var_TEXCOORD9 "in.var.TEXCOORD9"  ; id %6
               OpName %out_var_SV_Target0 "out.var.SV_Target0"  ; id %9
               OpName %out_var_SV_Target1 "out.var.SV_Target1"  ; id %10
               OpName %out_var_SV_Target2 "out.var.SV_Target2"  ; id %11
               OpName %out_var_SV_Target3 "out.var.SV_Target3"  ; id %12
               OpName %out_var_SV_Target4 "out.var.SV_Target4"  ; id %13
               OpName %out_var_SV_Target5 "out.var.SV_Target5"  ; id %14
               OpName %out_var_SV_Target6 "out.var.SV_Target6"  ; id %15
               OpName %MainPS "MainPS"  ; id %2
               OpName %type_sampled_image "type.sampled.image"  ; id %64
               OpName %type_sampled_image_0 "type.sampled.image"  ; id %65

               ; Annotations
               OpDecorateString %in_var_TEXCOORD10_centroid UserSemantic "TEXCOORD10_centroid"
               OpDecorateString %in_var_TEXCOORD11_centroid UserSemantic "TEXCOORD11_centroid"
               OpDecorateString %in_var_PRIMITIVE_ID UserSemantic "PRIMITIVE_ID"
               OpDecorate %in_var_PRIMITIVE_ID Flat
               OpDecorateString %in_var_TEXCOORD9 UserSemantic "TEXCOORD9"
               OpDecorate %gl_FragCoord BuiltIn FragCoord
               OpDecorateString %gl_FragCoord UserSemantic "SV_Position"
               OpDecorate %gl_FrontFacing BuiltIn FrontFacing
               OpDecorateString %gl_FrontFacing UserSemantic "SV_IsFrontFace"
               OpDecorate %gl_FrontFacing Flat
               OpDecorateString %out_var_SV_Target0 UserSemantic "SV_Target0"
               OpDecorateString %out_var_SV_Target1 UserSemantic "SV_Target1"
               OpDecorateString %out_var_SV_Target2 UserSemantic "SV_Target2"
               OpDecorateString %out_var_SV_Target3 UserSemantic "SV_Target3"
               OpDecorateString %out_var_SV_Target4 UserSemantic "SV_Target4"
               OpDecorateString %out_var_SV_Target5 UserSemantic "SV_Target5"
               OpDecorateString %out_var_SV_Target6 UserSemantic "SV_Target6"
               OpDecorate %in_var_TEXCOORD10_centroid Location 0
               OpDecorate %in_var_TEXCOORD11_centroid Location 1
               OpDecorate %in_var_PRIMITIVE_ID Location 2
               OpDecorate %in_var_TEXCOORD9 Location 3
               OpDecorate %out_var_SV_Target0 Location 0
               OpDecorate %out_var_SV_Target1 Location 1
               OpDecorate %out_var_SV_Target2 Location 2
               OpDecorate %out_var_SV_Target3 Location 3
               OpDecorate %out_var_SV_Target4 Location 4
               OpDecorate %out_var_SV_Target5 Location 5
               OpDecorate %out_var_SV_Target6 Location 6
               OpDecorate %View DescriptorSet 0
               OpDecorate %View Binding 0
               OpDecorate %View_VolumetricLightmapIndirectionTexture DescriptorSet 0
               OpDecorate %View_VolumetricLightmapIndirectionTexture Binding 1
               OpDecorate %View_DirectionalLightShadowingBrickTexture DescriptorSet 0
               OpDecorate %View_DirectionalLightShadowingBrickTexture Binding 2
               OpDecorate %View_GlobalDistanceFieldPageAtlasTexture DescriptorSet 0
               OpDecorate %View_GlobalDistanceFieldPageAtlasTexture Binding 3
               OpDecorate %View_GlobalDistanceFieldPageTableTexture DescriptorSet 0
               OpDecorate %View_GlobalDistanceFieldPageTableTexture Binding 4
               OpDecorate %View_PerlinNoise3DTexture DescriptorSet 0
               OpDecorate %View_PerlinNoise3DTexture Binding 7
               OpDecorate %View_PerlinNoise3DTextureSampler DescriptorSet 0
               OpDecorate %View_PerlinNoise3DTextureSampler Binding 8
               OpDecorate %View_SharedBilinearClampedSampler DescriptorSet 0
               OpDecorate %View_SharedBilinearClampedSampler Binding 10
               OpDecorate %View_SharedTrilinearWrappedSampler DescriptorSet 0
               OpDecorate %View_SharedTrilinearWrappedSampler Binding 11
               OpDecorate %View_ShadingEnergyGGXSpecTexture DescriptorSet 0
               OpDecorate %View_ShadingEnergyGGXSpecTexture Binding 23
               OpDecorate %View_ShadingEnergySampler DescriptorSet 0
               OpDecorate %View_ShadingEnergySampler Binding 26
               OpDecorate %View_SimpleVolumeEnvTexture DescriptorSet 0
               OpDecorate %View_SimpleVolumeEnvTexture Binding 29
               OpDecorate %View_SimpleVolumeEnvTextureSampler DescriptorSet 0
               OpDecorate %View_SimpleVolumeEnvTextureSampler Binding 30
               OpDecorate %SingleLayerWater DescriptorSet 0
               OpDecorate %SingleLayerWater Binding 34
               OpDecorate %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture DescriptorSet 0
               OpDecorate %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture Binding 35
               OpDecorate %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture DescriptorSet 0
               OpDecorate %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture Binding 36
               OpDecorate %Scene_GPUScene_GPUScenePrimitiveSceneData DescriptorSet 0
               OpDecorate %Scene_GPUScene_GPUScenePrimitiveSceneData Binding 38
               OpDecorate %OpaqueBasePass DescriptorSet 0
               OpDecorate %OpaqueBasePass Binding 39
               OpDecorate %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas Binding 40
               OpDecorate %OpaqueBasePass_Shared_Forward_ShadowmapSampler DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_ShadowmapSampler Binding 41
               OpDecorate %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer Binding 42
               OpDecorate %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid Binding 43
               OpDecorate %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit Binding 44
               OpDecorate %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs DescriptorSet 0
               OpDecorate %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs Binding 45
               OpDecorate %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture DescriptorSet 0
               OpDecorate %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture Binding 46
               OpDecorate %OpaqueBasePass_PreIntegratedGFTexture DescriptorSet 0
               OpDecorate %OpaqueBasePass_PreIntegratedGFTexture Binding 47
               OpDecorate %IndirectLightingCache DescriptorSet 0
               OpDecorate %IndirectLightingCache Binding 48
               OpDecorate %VirtualShadowMap_ProjectionData DescriptorSet 0
               OpDecorate %VirtualShadowMap_ProjectionData Binding 49
               OpDecorate %VirtualShadowMap_PageTable DescriptorSet 0
               OpDecorate %VirtualShadowMap_PageTable Binding 50
               OpDecorate %VirtualShadowMap_PhysicalPagePool DescriptorSet 0
               OpDecorate %VirtualShadowMap_PhysicalPagePool Binding 51
               OpDecorate %MaterialCollection0 DescriptorSet 0
               OpDecorate %MaterialCollection0 Binding 52
               OpDecorate %Material DescriptorSet 0
               OpDecorate %Material Binding 53
               OpDecorate %_arr_v4float_uint_6 ArrayStride 16
               OpMemberDecorate %type_View 0 Offset 192
               OpMemberDecorate %type_View 0 MatrixStride 16
               OpMemberDecorate %type_View 0 ColMajor
               OpMemberDecorate %type_View 1 Offset 448
               OpMemberDecorate %type_View 1 MatrixStride 16
               OpMemberDecorate %type_View 1 ColMajor
               OpMemberDecorate %type_View 2 Offset 704
               OpMemberDecorate %type_View 2 MatrixStride 16
               OpMemberDecorate %type_View 2 ColMajor
               OpMemberDecorate %type_View 3 Offset 960
               OpMemberDecorate %type_View 4 Offset 992
               OpMemberDecorate %type_View 5 Offset 1072
               OpMemberDecorate %type_View 6 Offset 1088
               OpMemberDecorate %type_View 7 Offset 1104
               OpMemberDecorate %type_View 8 Offset 1152
               OpMemberDecorate %type_View 9 Offset 1984
               OpMemberDecorate %type_View 10 Offset 2000
               OpMemberDecorate %type_View 11 Offset 2032
               OpMemberDecorate %type_View 12 Offset 2048
               OpMemberDecorate %type_View 13 Offset 2120
               OpMemberDecorate %type_View 14 Offset 2124
               OpMemberDecorate %type_View 15 Offset 2128
               OpMemberDecorate %type_View 16 Offset 2144
               OpMemberDecorate %type_View 17 Offset 2176
               OpMemberDecorate %type_View 18 Offset 2192
               OpMemberDecorate %type_View 19 Offset 2228
               OpMemberDecorate %type_View 20 Offset 2260
               OpMemberDecorate %type_View 21 Offset 2280
               OpMemberDecorate %type_View 22 Offset 2288
               OpMemberDecorate %type_View 23 Offset 2304
               OpMemberDecorate %type_View 24 Offset 2480
               OpMemberDecorate %type_View 25 Offset 2876
               OpMemberDecorate %type_View 26 Offset 3120
               OpMemberDecorate %type_View 27 Offset 3216
               OpMemberDecorate %type_View 28 Offset 3512
               OpMemberDecorate %type_View 29 Offset 3520
               OpMemberDecorate %type_View 30 Offset 3552
               OpMemberDecorate %type_View 31 Offset 3560
               OpMemberDecorate %type_View 32 Offset 3592
               OpMemberDecorate %type_View 33 Offset 3696
               OpMemberDecorate %type_View 34 Offset 3712
               OpMemberDecorate %type_View 35 Offset 3728
               OpMemberDecorate %type_View 36 Offset 3740
               OpMemberDecorate %type_View 37 Offset 3744
               OpMemberDecorate %type_View 38 Offset 3756
               OpMemberDecorate %type_View 39 Offset 3896
               OpMemberDecorate %type_View 40 Offset 5160
               OpMemberDecorate %type_View 41 Offset 5164
               OpDecorate %type_View Block
               OpDecorateString %View UserTypeGOOGLE "cbuffer"
               OpDecorateString %View_VolumetricLightmapIndirectionTexture UserTypeGOOGLE "texture3d:<uint4>"
               OpDecorateString %View_DirectionalLightShadowingBrickTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_GlobalDistanceFieldPageAtlasTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_GlobalDistanceFieldPageTableTexture UserTypeGOOGLE "texture3d:<uint>"
               OpDecorateString %View_PerlinNoise3DTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_ShadingEnergyGGXSpecTexture UserTypeGOOGLE "texture2d:<float2>"
               OpDecorateString %View_SimpleVolumeEnvTexture UserTypeGOOGLE "texture3d:<float>"
               OpMemberDecorate %type_SingleLayerWater 0 Offset 64
               OpMemberDecorate %type_SingleLayerWater 1 Offset 80
               OpMemberDecorate %type_SingleLayerWater 2 Offset 96
               OpMemberDecorate %type_SingleLayerWater 3 Offset 112
               OpMemberDecorate %type_SingleLayerWater 4 Offset 116
               OpDecorate %type_SingleLayerWater Block
               OpDecorateString %SingleLayerWater UserTypeGOOGLE "cbuffer"
               OpDecorateString %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorate %_runtimearr_v4float ArrayStride 16
               OpMemberDecorate %type_StructuredBuffer_v4float 0 Offset 0
               OpMemberDecorate %type_StructuredBuffer_v4float 0 NonWritable
               OpDecorate %type_StructuredBuffer_v4float BufferBlock
               OpDecorateString %Scene_GPUScene_GPUScenePrimitiveSceneData UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorate %_arr_mat4v4float_uint_4 ArrayStride 64
               OpDecorate %_arr_v4float_uint_4 ArrayStride 16
               OpMemberDecorate %type_OpaqueBasePass 0 Offset 0
               OpMemberDecorate %type_OpaqueBasePass 1 Offset 8
               OpMemberDecorate %type_OpaqueBasePass 2 Offset 16
               OpMemberDecorate %type_OpaqueBasePass 3 Offset 32
               OpMemberDecorate %type_OpaqueBasePass 4 Offset 48
               OpMemberDecorate %type_OpaqueBasePass 5 Offset 64
               OpMemberDecorate %type_OpaqueBasePass 6 Offset 76
               OpMemberDecorate %type_OpaqueBasePass 7 Offset 80
               OpMemberDecorate %type_OpaqueBasePass 8 Offset 96
               OpMemberDecorate %type_OpaqueBasePass 9 Offset 104
               OpMemberDecorate %type_OpaqueBasePass 10 Offset 112
               OpMemberDecorate %type_OpaqueBasePass 11 Offset 116
               OpMemberDecorate %type_OpaqueBasePass 12 Offset 128
               OpMemberDecorate %type_OpaqueBasePass 13 Offset 144
               OpMemberDecorate %type_OpaqueBasePass 13 MatrixStride 16
               OpMemberDecorate %type_OpaqueBasePass 13 ColMajor
               OpMemberDecorate %type_OpaqueBasePass 14 Offset 400
               OpMemberDecorate %type_OpaqueBasePass 15 Offset 464
               OpMemberDecorate %type_OpaqueBasePass 16 Offset 592
               OpMemberDecorate %type_OpaqueBasePass 17 Offset 2276
               OpMemberDecorate %type_OpaqueBasePass 18 Offset 2304
               OpDecorate %type_OpaqueBasePass Block
               OpDecorateString %OpaqueBasePass UserTypeGOOGLE "cbuffer"
               OpDecorateString %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %type_StructuredBuffer_uint 0 Offset 0
               OpMemberDecorate %type_StructuredBuffer_uint 0 NonWritable
               OpDecorate %type_StructuredBuffer_uint BufferBlock
               OpDecorateString %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid UserTypeGOOGLE "structuredbuffer:<uint>"
               OpDecorateString %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit UserTypeGOOGLE "buffer:<uint>"
               OpDecorateString %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs UserTypeGOOGLE "rwtexture2darray:<uint>"
               OpDecorateString %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %OpaqueBasePass_PreIntegratedGFTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorate %_arr_v4float_uint_3 ArrayStride 16
               OpMemberDecorate %type_IndirectLightingCache 0 Offset 80
               OpMemberDecorate %type_IndirectLightingCache 1 Offset 96
               OpMemberDecorate %type_IndirectLightingCache 2 Offset 144
               OpMemberDecorate %type_IndirectLightingCache 3 Offset 192
               OpDecorate %type_IndirectLightingCache Block
               OpDecorateString %IndirectLightingCache UserTypeGOOGLE "cbuffer"
               OpMemberDecorate %type_ByteAddressBuffer 0 Offset 0
               OpMemberDecorate %type_ByteAddressBuffer 0 NonWritable
               OpDecorate %type_ByteAddressBuffer BufferBlock
               OpDecorateString %VirtualShadowMap_ProjectionData UserTypeGOOGLE "byteaddressbuffer"
               OpDecorateString %VirtualShadowMap_PageTable UserTypeGOOGLE "structuredbuffer:<uint>"
               OpDecorateString %VirtualShadowMap_PhysicalPagePool UserTypeGOOGLE "texture2darray:<uint>"
               OpDecorate %_arr_v4float_uint_5 ArrayStride 16
               OpMemberDecorate %type_MaterialCollection0 0 Offset 0
               OpDecorate %type_MaterialCollection0 Block
               OpDecorateString %MaterialCollection0 UserTypeGOOGLE "cbuffer"
               OpDecorate %_arr_v4float_uint_109 ArrayStride 16
               OpMemberDecorate %type_Material 0 Offset 0
               OpDecorate %type_Material Block
               OpDecorateString %Material UserTypeGOOGLE "cbuffer"

               ; Types, variables and constants
      %float = OpTypeFloat 32
%float_3_14159274 = OpConstant %float 3.14159274
%float_64512 = OpConstant %float 64512
    %v3float = OpTypeVector %float 3
    %v4float = OpTypeVector %float 4
%mat4v4float = OpTypeMatrix %v4float 4
    %v2float = OpTypeVector %float 2
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
        %int = OpTypeInt 32 1
     %uint_2 = OpConstant %uint 2
     %uint_8 = OpConstant %uint 8
     %uint_6 = OpConstant %uint 6
      %v2int = OpTypeVector %int 2
    %uint_32 = OpConstant %uint 32
      %v4int = OpTypeVector %int 4
    %float_1 = OpConstant %float 1
       %bool = OpTypeBool
     %uint_3 = OpConstant %uint 3
      %int_0 = OpConstant %int 0
      %int_2 = OpConstant %int 2
      %int_1 = OpConstant %int 1
     %uint_0 = OpConstant %uint 0
    %float_0 = OpConstant %float 0
         %98 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
      %false = OpConstantFalse %bool
      %int_6 = OpConstant %int 6
     %int_96 = OpConstant %int 96
        %102 = OpConstantComposite %v3float %float_0 %float_0 %float_0
      %int_4 = OpConstant %int 4
   %uint_512 = OpConstant %uint 512
   %uint_256 = OpConstant %uint 256
     %uint_4 = OpConstant %uint 4
      %int_3 = OpConstant %int 3
     %int_13 = OpConstant %int 13
    %uint_14 = OpConstant %uint 14
    %uint_31 = OpConstant %uint 31
     %uint_1 = OpConstant %uint 1
     %int_11 = OpConstant %int 11
     %int_24 = OpConstant %int 24
     %int_17 = OpConstant %int 17
     %int_20 = OpConstant %int 20
     %int_10 = OpConstant %int 10
        %117 = OpConstantComposite %v4float %float_1 %float_1 %float_1 %float_1
       %true = OpConstantTrue %bool
     %int_16 = OpConstant %int 16
     %int_21 = OpConstant %int 21
     %int_75 = OpConstant %int 75
     %int_76 = OpConstant %int 76
     %int_15 = OpConstant %int 15
        %124 = OpConstantComposite %v2float %float_0 %float_0
     %int_47 = OpConstant %int 47
     %int_65 = OpConstant %int 65
        %127 = OpConstantComposite %v3float %float_1 %float_1 %float_1
     %int_81 = OpConstant %int 81
     %int_27 = OpConstant %int 27
     %int_29 = OpConstant %int 29
     %int_12 = OpConstant %int 12
%float_0_577000022 = OpConstant %float 0.577000022
        %133 = OpConstantComposite %v3float %float_0_577000022 %float_0_577000022 %float_0_577000022
        %134 = OpConstantComposite %v3float %float_1 %float_1 %float_0
        %135 = OpConstantComposite %v3float %float_0 %float_1 %float_1
  %float_0_5 = OpConstant %float 0.5
        %137 = OpConstantComposite %v3float %float_0_5 %float_0_5 %float_0_5
     %int_41 = OpConstant %int 41
%float_0_0500000007 = OpConstant %float 0.0500000007
        %140 = OpConstantComposite %v3float %float_1 %float_0 %float_1
     %int_18 = OpConstant %int 18
     %int_19 = OpConstant %int 19
     %int_51 = OpConstant %int 51
      %int_9 = OpConstant %int 9
%float_0_00392156886 = OpConstant %float 0.00392156886
     %int_73 = OpConstant %int 73
     %int_25 = OpConstant %int 25
     %int_48 = OpConstant %int 48
        %149 = OpConstantComposite %v2float %float_0_5 %float_0_5
    %float_2 = OpConstant %float 2
   %float_n2 = OpConstant %float -2
        %152 = OpConstantComposite %v2float %float_2 %float_n2
   %float_47 = OpConstant %float 47
   %float_17 = OpConstant %float 17
%float_0_0671105608 = OpConstant %float 0.0671105608
%float_0_00583714992 = OpConstant %float 0.00583714992
%float_52_9829178 = OpConstant %float 52.9829178
     %int_28 = OpConstant %int 28
     %uint_5 = OpConstant %uint 5
%uint_4294967288 = OpConstant %uint 4294967288
     %uint_7 = OpConstant %uint 7
    %uint_11 = OpConstant %uint 11
        %163 = OpConstantComposite %v3float %float_64512 %float_64512 %float_64512
%uint_2139095040 = OpConstant %uint 2139095040
   %uint_128 = OpConstant %uint 128
    %int_108 = OpConstant %int 108
%float_0_449999988 = OpConstant %float 0.449999988
%float_0_300000012 = OpConstant %float 0.300000012
%float_0_589999974 = OpConstant %float 0.589999974
%float_0_109999999 = OpConstant %float 0.109999999
        %171 = OpConstantComposite %v3float %float_0_300000012 %float_0_589999974 %float_0_109999999
%float_2_04040003 = OpConstant %float 2.04040003
%float_0_332399994 = OpConstant %float 0.332399994
        %174 = OpConstantComposite %v3float %float_0_332399994 %float_0_332399994 %float_0_332399994
%float_n4_79510021 = OpConstant %float -4.79510021
%float_0_641700029 = OpConstant %float 0.641700029
        %177 = OpConstantComposite %v3float %float_0_641700029 %float_0_641700029 %float_0_641700029
%float_2_75519991 = OpConstant %float 2.75519991
%float_0_690299988 = OpConstant %float 0.690299988
        %180 = OpConstantComposite %v3float %float_0_690299988 %float_0_690299988 %float_0_690299988
     %int_n1 = OpConstant %int -1
     %v2uint = OpTypeVector %uint 2
     %int_37 = OpConstant %int 37
%float_2097152 = OpConstant %float 2097152
   %float_50 = OpConstant %float 50
%float_9_99999996en13 = OpConstant %float 9.99999996e-13
%float_0_0199999996 = OpConstant %float 0.0199999996
%float_9_99999975en06 = OpConstant %float 9.99999975e-06
        %189 = OpConstantComposite %v3float %float_9_99999975en06 %float_9_99999975en06 %float_9_99999975en06
     %int_85 = OpConstant %int 85
     %int_59 = OpConstant %int 59
%float_0_0399999991 = OpConstant %float 0.0399999991
    %uint_16 = OpConstant %uint 16
    %uint_64 = OpConstant %uint 64
    %uint_40 = OpConstant %uint 40
     %uint_9 = OpConstant %uint 9
    %uint_10 = OpConstant %uint 10
  %uint_4095 = OpConstant %uint 4095
    %uint_12 = OpConstant %uint 12
   %uint_255 = OpConstant %uint 255
    %uint_20 = OpConstant %uint 20
    %uint_19 = OpConstant %uint 19
    %uint_24 = OpConstant %uint 24
%uint_1047552 = OpConstant %uint 1047552
  %uint_1023 = OpConstant %uint 1023
    %uint_63 = OpConstant %uint 63
   %uint_127 = OpConstant %uint 127
    %uint_26 = OpConstant %uint 26
    %uint_22 = OpConstant %uint 22
%uint_4294963200 = OpConstant %uint 4294963200
  %float_100 = OpConstant %float 100
  %float_128 = OpConstant %float 128
%float_0_00390625 = OpConstant %float 0.00390625
   %float_16 = OpConstant %float 16
     %int_23 = OpConstant %int 23
     %int_22 = OpConstant %int 22
     %int_30 = OpConstant %int 30
     %int_31 = OpConstant %int 31
     %int_33 = OpConstant %int 33
     %int_35 = OpConstant %int 35
     %int_26 = OpConstant %int 26
     %int_39 = OpConstant %int 39
     %int_40 = OpConstant %int 40
     %int_42 = OpConstant %int 42
     %int_43 = OpConstant %int 43
     %int_32 = OpConstant %int 32
     %int_45 = OpConstant %int 45
     %int_34 = OpConstant %int 34
     %int_46 = OpConstant %int 46
     %int_52 = OpConstant %int 52
     %int_38 = OpConstant %int 38
     %int_54 = OpConstant %int 54
     %int_56 = OpConstant %int 56
     %int_57 = OpConstant %int 57
     %int_58 = OpConstant %int 58
     %int_60 = OpConstant %int 60
     %int_61 = OpConstant %int 61
     %int_62 = OpConstant %int 62
     %int_63 = OpConstant %int 63
     %int_64 = OpConstant %int 64
     %int_49 = OpConstant %int 49
     %int_67 = OpConstant %int 67
     %int_68 = OpConstant %int 68
     %int_53 = OpConstant %int 53
     %int_70 = OpConstant %int 70
     %int_71 = OpConstant %int 71
     %int_72 = OpConstant %int 72
     %int_74 = OpConstant %int 74
     %int_77 = OpConstant %int 77
     %int_78 = OpConstant %int 78
     %int_79 = OpConstant %int 79
     %int_80 = OpConstant %int 80
     %int_86 = OpConstant %int 86
     %int_87 = OpConstant %int 87
     %int_88 = OpConstant %int 88
     %int_89 = OpConstant %int 89
     %int_90 = OpConstant %int 90
     %int_91 = OpConstant %int 91
     %int_92 = OpConstant %int 92
     %int_93 = OpConstant %int 93
     %int_94 = OpConstant %int 94
     %int_95 = OpConstant %int 95
     %int_97 = OpConstant %int 97
     %int_82 = OpConstant %int 82
     %int_83 = OpConstant %int 83
    %int_103 = OpConstant %int 103
    %int_104 = OpConstant %int 104
    %int_106 = OpConstant %int 106
    %int_107 = OpConstant %int 107
    %int_105 = OpConstant %int 105
%mat3v3float = OpTypeMatrix %v3float 3
%_arr_v3float_uint_4 = OpTypeArray %v3float %uint_4
    %uint_15 = OpConstant %uint 15
%float_100000 = OpConstant %float 100000
   %float_n1 = OpConstant %float -1
        %276 = OpConstantComposite %v2float %float_1 %float_0
%float_1_20000005 = OpConstant %float 1.20000005
        %278 = OpConstantComposite %v3float %float_1_20000005 %float_1_20000005 %float_1_20000005
        %279 = OpConstantComposite %v3float %float_n1 %float_n1 %float_n1
%float_0_100000001 = OpConstant %float 0.100000001
        %281 = OpConstantComposite %v3float %float_0_100000001 %float_0_100000001 %float_0_100000001
%float_6_28318548 = OpConstant %float 6.28318548
%float_0_00100000005 = OpConstant %float 0.00100000005
%float_0_00200000009 = OpConstant %float 0.00200000009
%float_0_800000012 = OpConstant %float 0.800000012
    %float_4 = OpConstant %float 4
 %float_0_75 = OpConstant %float 0.75
%float_10000 = OpConstant %float 10000
        %289 = OpConstantComposite %v3float %float_10000 %float_10000 %float_10000
    %float_8 = OpConstant %float 8
        %291 = OpConstantComposite %v3float %float_0 %float_0 %float_1
%float_9_99999975en05 = OpConstant %float 9.99999975e-05
    %uint_41 = OpConstant %uint 41
    %uint_18 = OpConstant %uint 18
 %uint_65535 = OpConstant %uint 65535
    %uint_17 = OpConstant %uint 17
    %uint_25 = OpConstant %uint 25
%uint_16777215 = OpConstant %uint 16777215
 %uint_32768 = OpConstant %uint 32768
  %float_127 = OpConstant %float 127
    %float_3 = OpConstant %float 3
%float_0_99000001 = OpConstant %float 0.99000001
        %303 = OpConstantComposite %v3float %float_0_99000001 %float_0_99000001 %float_0_99000001
%float_0_0799999982 = OpConstant %float 0.0799999982
    %float_6 = OpConstant %float 6
        %306 = OpConstantComposite %v2uint %uint_31 %uint_31
 %float_4000 = OpConstant %float 4000
%float_0_000230000005 = OpConstant %float 0.000230000005
%float_n0_000230000005 = OpConstant %float -0.000230000005
        %310 = OpConstantComposite %v2float %float_0_000230000005 %float_n0_000230000005
%float_1_54999995 = OpConstant %float 1.54999995
  %float_255 = OpConstant %float 255
        %313 = OpConstantComposite %v2float %float_1 %float_1
 %float_1023 = OpConstant %float 1023
 %float_2047 = OpConstant %float 2047
  %uint_2047 = OpConstant %uint 2047
   %float_63 = OpConstant %float 63
%uint_1072693248 = OpConstant %uint 1072693248
%uint_4292870144 = OpConstant %uint 4292870144
%uint_2096128 = OpConstant %uint 2096128
 %float_0_25 = OpConstant %float 0.25
        %322 = OpConstantComposite %v3float %float_0_25 %float_0_25 %float_0_25
        %323 = OpConstantComposite %v3float %float_0 %float_0_5 %float_0_5
%uint_4294967292 = OpConstant %uint 4294967292
 %float_1024 = OpConstant %float 1024
        %326 = OpConstantComposite %v2float %float_1024 %float_1024
        %327 = OpConstantComposite %v2float %float_2047 %float_2047
%float_4_76837158en07 = OpConstant %float 4.76837158e-07
%float_0_333299994 = OpConstant %float 0.333299994
%float_0_488602996 = OpConstant %float 0.488602996
%float_1_09254801 = OpConstant %float 1.09254801
%float_0_315391988 = OpConstant %float 0.315391988
  %uint_2048 = OpConstant %uint 2048
  %uint_4096 = OpConstant %uint 4096
  %uint_8192 = OpConstant %uint 8192
%float_0_400000006 = OpConstant %float 0.400000006
        %337 = OpConstantComposite %v3float %float_2 %float_0 %float_n2
        %338 = OpConstantComposite %v3float %float_n1 %float_2 %float_n1
        %339 = OpConstantComposite %v3float %float_0 %float_0 %float_0_00100000005
%float_0_899999976 = OpConstant %float 0.899999976
        %341 = OpConstantComposite %v2uint %uint_128 %uint_128
        %342 = OpConstantComposite %v2uint %uint_127 %uint_127
%uint_4294967295 = OpConstant %uint 4294967295
%float_9_99999997en07 = OpConstant %float 9.99999997e-07
        %345 = OpConstantComposite %v3float %float_9_99999997en07 %float_9_99999997en07 %float_9_99999997en07
%float_0_200000003 = OpConstant %float 0.200000003
%uint_2147483647 = OpConstant %uint 2147483647
     %v3uint = OpTypeVector %uint 3
        %349 = OpConstantComposite %v3uint %uint_2147483647 %uint_2147483647 %uint_2147483647
%float_0_600000024 = OpConstant %float 0.600000024
        %351 = OpConstantComposite %v3float %float_1 %float_0 %float_0
        %352 = OpConstantComposite %v3float %float_0 %float_1 %float_0
        %353 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_100
        %354 = OpConstantComposite %v3uint %uint_8 %uint_8 %uint_8
    %float_7 = OpConstant %float 7
        %356 = OpConstantComposite %v3float %float_9_99999996en13 %float_9_99999996en13 %float_9_99999996en13
   %uint_336 = OpConstant %uint 336
    %uint_96 = OpConstant %uint 96
   %uint_112 = OpConstant %uint 112
   %uint_144 = OpConstant %uint 144
   %uint_160 = OpConstant %uint 160
   %uint_176 = OpConstant %uint 176
   %uint_268 = OpConstant %uint 268
   %uint_272 = OpConstant %uint 272
   %uint_288 = OpConstant %uint 288
   %uint_300 = OpConstant %uint 300
   %uint_304 = OpConstant %uint 304
   %uint_312 = OpConstant %uint 312
   %uint_316 = OpConstant %uint 316
 %uint_16384 = OpConstant %uint 16384
        %371 = OpConstantComposite %v2int %int_32 %int_32
        %372 = OpConstantComposite %v2int %int_31 %int_31
%float_0_0350000001 = OpConstant %float 0.0350000001
   %float_20 = OpConstant %float 20
%float_1_57079637 = OpConstant %float 1.57079637
   %float_10 = OpConstant %float 10
%float_1_19000006 = OpConstant %float 1.19000006
%float_0_360000014 = OpConstant %float 0.360000014
%float_n3_6500001 = OpConstant %float -3.6500001
%int_532487669 = OpConstant %int 532487669
   %float_15 = OpConstant %float 15
        %382 = OpConstantComposite %v4float %float_15 %float_15 %float_15 %float_15
        %383 = OpConstantComposite %v4float %float_10 %float_10 %float_10 %float_10
   %float_19 = OpConstant %float 19
  %float_101 = OpConstant %float 101
        %386 = OpConstantComposite %v3float %float_19 %float_47 %float_101
        %387 = OpConstantComposite %v3uint %uint_32768 %uint_16384 %uint_8192
%float_6_10351562en05 = OpConstant %float 6.10351562e-05
%float_0_000122070312 = OpConstant %float 0.000122070312
%float_0_000244140625 = OpConstant %float 0.000244140625
        %391 = OpConstantComposite %v3float %float_6_10351562en05 %float_0_000122070312 %float_0_000244140625
%float_0_2588 = OpConstant %float 0.2588
 %uint_21845 = OpConstant %uint 21845
%uint_134217728 = OpConstant %uint 134217728
 %float_n0_5 = OpConstant %float -0.5
%uint_4294967294 = OpConstant %uint 4294967294
%float_0_00313066994 = OpConstant %float 0.00313066994
%float_12_9200001 = OpConstant %float 12.9200001
%float_0_416666657 = OpConstant %float 0.416666657
%float_1_05499995 = OpConstant %float 1.05499995
%uint_1664525 = OpConstant %uint 1664525
        %402 = OpConstantComposite %v3uint %uint_1664525 %uint_1664525 %uint_1664525
%uint_1013904223 = OpConstant %uint 1013904223
        %404 = OpConstantComposite %v3uint %uint_1013904223 %uint_1013904223 %uint_1013904223
        %405 = OpConstantComposite %v3uint %uint_16 %uint_16 %uint_16
        %406 = OpConstantComposite %v3uint %uint_31 %uint_31 %uint_31
%float_0_055555556 = OpConstant %float 0.055555556
%float_2_20000005 = OpConstant %float 2.20000005
 %float_34_5 = OpConstant %float 34.5
 %float_24_5 = OpConstant %float 24.5
%float_73_1999969 = OpConstant %float 73.1999969
%float_8_89999962 = OpConstant %float 8.89999962
%float_3_5999999 = OpConstant %float 3.5999999
%float_1_00010002 = OpConstant %float 1.00010002
%int_2129859010 = OpConstant %int 2129859010
%float_0_140000001 = OpConstant %float 0.140000001
%_arr_v4float_uint_6 = OpTypeArray %v4float %uint_6
  %type_View = OpTypeStruct %mat4v4float %mat4v4float %mat4v4float %v3float %v3float %v4float %v4float %v3float %v3float %v4float %v4float %v4float %v4float %float %float %v4float %v4float %v2float %float %float %uint %float %v4float %v3float %v3float %float %_arr_v4float_uint_6 %_arr_v4float_uint_6 %int %v3float %float %uint %float %v3float %v3float %v3float %float %v3float %float %float %uint %uint
%_ptr_Uniform_type_View = OpTypePointer Uniform %type_View
%type_3d_image = OpTypeImage %uint 3D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_3d_image = OpTypePointer UniformConstant %type_3d_image
%type_3d_image_0 = OpTypeImage %float 3D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_3d_image_0 = OpTypePointer UniformConstant %type_3d_image_0
%type_2d_image = OpTypeImage %float 2D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_2d_image = OpTypePointer UniformConstant %type_2d_image
%type_sampler = OpTypeSampler
%_ptr_UniformConstant_type_sampler = OpTypePointer UniformConstant %type_sampler
      %v3int = OpTypeVector %int 3
%type_SingleLayerWater = OpTypeStruct %v4float %v4float %v2float %uint %uint
%_ptr_Uniform_type_SingleLayerWater = OpTypePointer Uniform %type_SingleLayerWater
%_runtimearr_v4float = OpTypeRuntimeArray %v4float
%type_StructuredBuffer_v4float = OpTypeStruct %_runtimearr_v4float
%_ptr_Uniform_type_StructuredBuffer_v4float = OpTypePointer Uniform %type_StructuredBuffer_v4float
%_arr_mat4v4float_uint_4 = OpTypeArray %mat4v4float %uint_4
%_arr_v4float_uint_4 = OpTypeArray %v4float %uint_4
%type_OpaqueBasePass = OpTypeStruct %uint %uint %v3int %uint %v3float %v3float %float %v3float %uint %v2float %uint %int %v4float %_arr_mat4v4float_uint_4 %_arr_v4float_uint_4 %v4float %uint %int %int
%_ptr_Uniform_type_OpaqueBasePass = OpTypePointer Uniform %type_OpaqueBasePass
%_runtimearr_uint = OpTypeRuntimeArray %uint
%type_StructuredBuffer_uint = OpTypeStruct %_runtimearr_uint
%_ptr_Uniform_type_StructuredBuffer_uint = OpTypePointer Uniform %type_StructuredBuffer_uint
%type_buffer_image = OpTypeImage %uint Buffer 2 0 0 1 R32ui
%_ptr_UniformConstant_type_buffer_image = OpTypePointer UniformConstant %type_buffer_image
%type_2d_image_array = OpTypeImage %uint 2D 2 1 0 2 R32ui
%_ptr_UniformConstant_type_2d_image_array = OpTypePointer UniformConstant %type_2d_image_array
%_arr_v4float_uint_3 = OpTypeArray %v4float %uint_3
%type_IndirectLightingCache = OpTypeStruct %float %_arr_v4float_uint_3 %_arr_v4float_uint_3 %v4float
%_ptr_Uniform_type_IndirectLightingCache = OpTypePointer Uniform %type_IndirectLightingCache
%type_ByteAddressBuffer = OpTypeStruct %_runtimearr_uint
%_ptr_Uniform_type_ByteAddressBuffer = OpTypePointer Uniform %type_ByteAddressBuffer
%type_2d_image_array_0 = OpTypeImage %uint 2D 2 1 0 1 Unknown
%_ptr_UniformConstant_type_2d_image_array_0 = OpTypePointer UniformConstant %type_2d_image_array_0
%_arr_v4float_uint_5 = OpTypeArray %v4float %uint_5
%type_MaterialCollection0 = OpTypeStruct %_arr_v4float_uint_5
%_ptr_Uniform_type_MaterialCollection0 = OpTypePointer Uniform %type_MaterialCollection0
   %uint_109 = OpConstant %uint 109
%_arr_v4float_uint_109 = OpTypeArray %v4float %uint_109
%type_Material = OpTypeStruct %_arr_v4float_uint_109
%_ptr_Uniform_type_Material = OpTypePointer Uniform %type_Material
%_ptr_Input_v4float = OpTypePointer Input %v4float
%_ptr_Input_uint = OpTypePointer Input %uint
%_ptr_Input_v3float = OpTypePointer Input %v3float
%_ptr_Input_bool = OpTypePointer Input %bool
%_ptr_Output_v4float = OpTypePointer Output %v4float
%_ptr_Output_uint = OpTypePointer Output %uint
       %void = OpTypeVoid
        %442 = OpTypeFunction %void
%_ptr_Function_v3float = OpTypePointer Function %v3float
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %v4bool = OpTypeVector %bool 4
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
%_ptr_Uniform_float = OpTypePointer Uniform %float
     %v3bool = OpTypeVector %bool 3
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
%_ptr_Uniform_int = OpTypePointer Uniform %int
%_ptr_Uniform_v3float = OpTypePointer Uniform %v3float
%type_sampled_image = OpTypeSampledImage %type_2d_image
%_ptr_Uniform_mat4v4float = OpTypePointer Uniform %mat4v4float
     %v2bool = OpTypeVector %bool 2
%type_sampled_image_0 = OpTypeSampledImage %type_3d_image_0
%_ptr_Uniform_v3int = OpTypePointer Uniform %v3int
%_ptr_Function__arr_v3float_uint_4 = OpTypePointer Function %_arr_v3float_uint_4
       %View = OpVariable %_ptr_Uniform_type_View Uniform
%View_VolumetricLightmapIndirectionTexture = OpVariable %_ptr_UniformConstant_type_3d_image UniformConstant
%View_DirectionalLightShadowingBrickTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_GlobalDistanceFieldPageAtlasTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_GlobalDistanceFieldPageTableTexture = OpVariable %_ptr_UniformConstant_type_3d_image UniformConstant
%View_PerlinNoise3DTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_PerlinNoise3DTextureSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SharedBilinearClampedSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SharedTrilinearWrappedSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_ShadingEnergyGGXSpecTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%View_ShadingEnergySampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SimpleVolumeEnvTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_SimpleVolumeEnvTextureSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%SingleLayerWater = OpVariable %_ptr_Uniform_type_SingleLayerWater Uniform
%SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%Scene_GPUScene_GPUScenePrimitiveSceneData = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%OpaqueBasePass = OpVariable %_ptr_Uniform_type_OpaqueBasePass Uniform
%OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%OpaqueBasePass_Shared_Forward_ShadowmapSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%OpaqueBasePass_Shared_Forward_NumCulledLightsGrid = OpVariable %_ptr_Uniform_type_StructuredBuffer_uint Uniform
%OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit = OpVariable %_ptr_UniformConstant_type_buffer_image UniformConstant
%OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs = OpVariable %_ptr_UniformConstant_type_2d_image_array UniformConstant
%OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%OpaqueBasePass_PreIntegratedGFTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%IndirectLightingCache = OpVariable %_ptr_Uniform_type_IndirectLightingCache Uniform
%VirtualShadowMap_ProjectionData = OpVariable %_ptr_Uniform_type_ByteAddressBuffer Uniform
%VirtualShadowMap_PageTable = OpVariable %_ptr_Uniform_type_StructuredBuffer_uint Uniform
%VirtualShadowMap_PhysicalPagePool = OpVariable %_ptr_UniformConstant_type_2d_image_array_0 UniformConstant
%MaterialCollection0 = OpVariable %_ptr_Uniform_type_MaterialCollection0 Uniform
   %Material = OpVariable %_ptr_Uniform_type_Material Uniform
%in_var_TEXCOORD10_centroid = OpVariable %_ptr_Input_v4float Input
%in_var_TEXCOORD11_centroid = OpVariable %_ptr_Input_v4float Input
%in_var_PRIMITIVE_ID = OpVariable %_ptr_Input_uint Input
%in_var_TEXCOORD9 = OpVariable %_ptr_Input_v3float Input
%gl_FragCoord = OpVariable %_ptr_Input_v4float Input
%gl_FrontFacing = OpVariable %_ptr_Input_bool Input
%out_var_SV_Target0 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target1 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target2 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target3 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target4 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target5 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target6 = OpVariable %_ptr_Output_uint Output
        %456 = OpUndef %v3float
        %457 = OpConstantNull %uint
        %458 = OpConstantNull %v4float
        %459 = OpConstantNull %v3float
        %460 = OpConstantNull %float
%float_0_03125 = OpConstant %float 0.03125
        %462 = OpConstantComposite %v3float %float_0_03125 %float_0_03125 %float_0_03125
%float_32_6650009 = OpConstant %float 32.6650009
%float_11_8149996 = OpConstant %float 11.8149996
        %465 = OpConstantComposite %v2float %float_32_6650009 %float_11_8149996
        %466 = OpConstantComposite %v2float %float_0_0671105608 %float_0_00583714992
%float_0_00787401572 = OpConstant %float 0.00787401572
%float_n0_488602996 = OpConstant %float -0.488602996
%float_n1_09254801 = OpConstant %float -1.09254801
%float_2_09439516 = OpConstant %float 2.09439516
%float_0_785398185 = OpConstant %float 0.785398185
%float_16384 = OpConstant %float 16384
%float_0_318309873 = OpConstant %float 0.318309873
   %float_n0 = OpConstant %float -0
%float_n0_156582996 = OpConstant %float -0.156582996
%float_n0_0699428469 = OpConstant %float -0.0699428469
%float_0_997551024 = OpConstant %float 0.997551024
%float_1_41421354 = OpConstant %float 1.41421354
%float_2_50662827 = OpConstant %float 2.50662827
%float_0_0465205647 = OpConstant %float 0.0465205647
%float_0_953479409 = OpConstant %float 0.953479409
%float_12_566371 = OpConstant %float 12.566371
%float_0_0795774683 = OpConstant %float 0.0795774683
%float_32256 = OpConstant %float 32256
        %485 = OpConstantComposite %v3float %float_32256 %float_32256 %float_32256
%uint_4294967293 = OpConstant %uint 4294967293
%uint_4294902015 = OpConstant %uint 4294902015
%float_0_0454545468 = OpConstant %float 0.0454545468
%float_0_0625 = OpConstant %float 0.0625
%float_0_909090936 = OpConstant %float 0.909090936
%float_0_875 = OpConstant %float 0.875
%uint_4287627263 = OpConstant %uint 4287627263
%uint_4169138175 = OpConstant %uint 4169138175
%uint_4294901760 = OpConstant %uint 4294901760
%uint_4294967263 = OpConstant %uint 4294967263
%uint_4294901759 = OpConstant %uint 4294901759
        %497 = OpConstantComposite %v3float %float_0_0454545468 %float_0_0454545468 %float_0_0625
        %498 = OpConstantComposite %v3float %float_0_909090936 %float_0_909090936 %float_0_875
        %499 = OpConstantComposite %v3float %float_0_318309873 %float_0_318309873 %float_0_318309873
%uint_4194303 = OpConstant %uint 4194303
        %501 = OpConstantComposite %v3uint %uint_1 %uint_1 %uint_1
%uint_16711680 = OpConstant %uint 16711680
    %uint_72 = OpConstant %uint 72
        %504 = OpConstantComposite %v3float %float_n1 %float_n1 %float_n0
%float_9_53674316en07 = OpConstant %float 9.53674316e-07
%float_n2_097152e_11 = OpConstant %float -2.097152e+11
%float_0_000100000005 = OpConstant %float 0.000100000005
        %508 = OpConstantComposite %v3float %float_0_000100000005 %float_0_000100000005 %float_0_000100000005
%float_0_000200000009 = OpConstant %float 0.000200000009
        %510 = OpConstantComposite %v3float %float_0_000200000009 %float_0_000200000009 %float_0_000200000009
%float_0_429042608 = OpConstant %float 0.429042608
        %512 = OpConstantComposite %v3float %float_n0_5 %float_n0_5 %float_n0_5
%float_4194_3042 = OpConstant %float 4194.3042
%float_0_0333333351 = OpConstant %float 0.0333333351
%float_3_125 = OpConstant %float 3.125
%float_0_636619747 = OpConstant %float 0.636619747
%float_0_00158730161 = OpConstant %float 0.00158730161
%uint_1048576 = OpConstant %uint 1048576
%float_0_0158730168 = OpConstant %float 0.0158730168
%float_0_999600053 = OpConstant %float 0.999600053
        %521 = OpConstantComposite %v3float %float_0_999600053 %float_0_999600053 %float_0_999600053
%float_1_52590219en05 = OpConstant %float 1.52590219e-05
        %523 = OpConstantComposite %v3float %float_1_52590219en05 %float_1_52590219en05 %float_1_52590219en05
%float_0_0666666701 = OpConstant %float 0.0666666701
        %525 = OpConstantComposite %v3float %float_0_0666666701 %float_0_0666666701 %float_0_0666666701
        %526 = OpConstantComposite %v3float %float_0_0625 %float_0_0625 %float_0_0625
        %527 = OpConstantComposite %v3float %float_0_00787401572 %float_0_00787401572 %float_0_00787401572
        %528 = OpConstantComposite %v2float %float_n0_5 %float_n0_5
%float_n6_28318548 = OpConstant %float -6.28318548
%float_0_139885694 = OpConstant %float 0.139885694
%float_n0_800000012 = OpConstant %float -0.800000012
%float_n3_98000002 = OpConstant %float -3.98000002
%float_n16_7800007 = OpConstant %float -16.7800007
%float_n0_75 = OpConstant %float -0.75
  %float_n59 = OpConstant %float -59
%float_n21_2000008 = OpConstant %float -21.2000008
%float_n0_0549999997 = OpConstant %float -0.0549999997
 %float_n127 = OpConstant %float -127
        %539 = OpUndef %v3float
        %540 = OpUndef %v3uint
        %541 = OpUndef %v4float
        %542 = OpUndef %mat4v4float
        %543 = OpUndef %v3float
        %544 = OpConstantComposite %v4float %float_0 %460 %460 %460
%float_0_886227548 = OpConstant %float 0.886227548
   %float_66 = OpConstant %float 66
  %float_120 = OpConstant %float 120
  %float_148 = OpConstant %float 148
  %float_167 = OpConstant %float 167
        %550 = OpUndef %float
        %551 = OpUndef %v3uint
        %552 = OpUndef %v4float
        %553 = OpUndef %v3float
        %554 = OpUndef %v2float
        %555 = OpConstantComposite %v3float %460 %460 %460
        %556 = OpConstantComposite %v3bool %true %true %true
        %557 = OpConstantComposite %v3bool %false %false %false
        %558 = OpConstantComposite %v2float %460 %float_0
  %uint_8194 = OpConstant %uint 8194
%float_1_53787023en05 = OpConstant %float 1.53787023e-05
        %561 = OpConstantComposite %v2float %460 %460
%uint_2130706432 = OpConstant %uint 2130706432
    %uint_23 = OpConstant %uint 23
    %uint_30 = OpConstant %uint 30
    %uint_27 = OpConstant %uint 27
    %uint_28 = OpConstant %uint 28
    %uint_29 = OpConstant %uint 29
    %uint_39 = OpConstant %uint 39
    %uint_38 = OpConstant %uint 38
    %uint_33 = OpConstant %uint 33
    %uint_34 = OpConstant %uint 34
    %uint_35 = OpConstant %uint 35
    %uint_36 = OpConstant %uint 36
    %uint_37 = OpConstant %uint 37
    %uint_13 = OpConstant %uint 13
    %uint_21 = OpConstant %uint 21

               ; Function MainPS
     %MainPS = OpFunction %void None %442
        %577 = OpLabel
        %578 = OpVariable %_ptr_Function__arr_v3float_uint_4 Function
        %579 = OpVariable %_ptr_Function__arr_v3float_uint_4 Function
        %580 = OpLoad %v4float %in_var_TEXCOORD11_centroid
        %581 = OpLoad %uint %in_var_PRIMITIVE_ID
        %582 = OpLoad %v3float %in_var_TEXCOORD9
        %583 = OpLoad %v4float %gl_FragCoord
        %584 = OpCompositeExtract %float %583 3
        %585 = OpFDiv %float %float_1 %584
        %586 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_0
        %587 = OpLoad %mat4v4float %586
        %588 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_1
        %589 = OpLoad %mat4v4float %588
        %590 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_2
        %591 = OpLoad %mat4v4float %590
        %592 = OpAccessChain %_ptr_Uniform_v3float %View %uint_3
        %593 = OpLoad %v3float %592
        %594 = OpAccessChain %_ptr_Uniform_v3float %View %uint_4
        %595 = OpLoad %v3float %594
        %596 = OpAccessChain %_ptr_Uniform_v4float %View %uint_6
        %597 = OpLoad %v4float %596
        %598 = OpAccessChain %_ptr_Uniform_v3float %View %uint_7
        %599 = OpLoad %v3float %598
        %600 = OpAccessChain %_ptr_Uniform_v3float %View %uint_8
        %601 = OpLoad %v3float %600
        %602 = OpAccessChain %_ptr_Uniform_v4float %View %uint_9
        %603 = OpLoad %v4float %602
        %604 = OpAccessChain %_ptr_Uniform_v4float %View %uint_10
        %605 = OpLoad %v4float %604
        %606 = OpAccessChain %_ptr_Uniform_v4float %View %uint_12
        %607 = OpLoad %v4float %606
        %608 = OpAccessChain %_ptr_Uniform_float %View %uint_14
        %609 = OpLoad %float %608
        %610 = OpAccessChain %_ptr_Uniform_v4float %View %uint_15
        %611 = OpLoad %v4float %610
        %612 = OpAccessChain %_ptr_Uniform_v4float %View %uint_16
        %613 = OpLoad %v4float %612
        %614 = OpAccessChain %_ptr_Uniform_v2float %View %uint_17
        %615 = OpLoad %v2float %614
        %616 = OpAccessChain %_ptr_Uniform_v4float %View %uint_22
        %617 = OpLoad %v4float %616
        %618 = OpAccessChain %_ptr_Uniform_v3float %View %uint_23
        %619 = OpLoad %v3float %618
        %620 = OpFNegate %v3float %593
        %621 = OpVectorShuffle %v3float %580 %580 0 1 2
        %622 = OpVectorShuffle %v2float %583 %583 0 1
        %623 = OpVectorShuffle %v2float %603 %603 0 1
        %624 = OpFSub %v2float %622 %623
        %625 = OpVectorShuffle %v2float %605 %605 2 3
        %626 = OpExtInst %v2float %1 Fma %624 %625 %528
        %627 = OpFMul %v2float %626 %152
        %628 = OpCompositeExtract %float %627 0
        %629 = OpCompositeExtract %float %627 1
        %630 = OpCompositeConstruct %v4float %628 %629 %550 %float_1
        %631 = OpVectorTimesScalar %v4float %630 %585
        %632 = OpCompositeExtract %float %583 0
        %633 = OpCompositeExtract %float %583 1
        %634 = OpCompositeExtract %float %583 2
        %635 = OpCompositeConstruct %v4float %632 %633 %634 %float_1
        %636 = OpMatrixTimesVector %v4float %591 %635
        %637 = OpVectorShuffle %v3float %636 %636 0 1 2
        %638 = OpCompositeExtract %float %636 3
        %639 = OpCompositeConstruct %v3float %638 %638 %638
        %640 = OpFDiv %v3float %637 %639
        %641 = OpFSub %v3float %640 %601
        %642 = OpFSub %v3float %582 %601
        %643 = OpVectorShuffle %v2float %631 %631 0 1
        %644 = OpCompositeExtract %float %631 3
        %645 = OpCompositeConstruct %v2float %644 %644
        %646 = OpFDiv %v2float %643 %645
        %647 = OpVectorShuffle %v2float %597 %597 0 1
        %648 = OpVectorShuffle %v2float %597 %597 3 2
        %649 = OpExtInst %v2float %1 Fma %646 %647 %648
        %650 = OpCompositeExtract %float %589 3 3
        %651 = OpFOrdGreaterThanEqual %bool %650 %float_1
               OpSelectionMerge %652 None
               OpBranchConditional %651 %653 %654
        %654 = OpLabel
        %655 = OpFNegate %v3float %640
        %656 = OpExtInst %v3float %1 Normalize %655
               OpBranch %652
        %653 = OpLabel
        %657 = OpFNegate %v3float %595
               OpBranch %652
        %652 = OpLabel
        %658 = OpPhi %v3float %656 %654 %657 %653
        %659 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_4
        %660 = OpLoad %v4float %659
        %661 = OpCompositeExtract %float %660 0
        %662 = OpCompositeExtract %float %660 1
        %663 = OpCompositeExtract %float %660 2
        %664 = OpCompositeConstruct %v3float %661 %662 %663
        %665 = OpFMul %v3float %593 %504
        %666 = OpFNegate %v3float %641
        %667 = OpExtInst %v3float %1 Fma %666 %134 %664
        %668 = OpCompositeExtract %float %665 0
        %669 = OpCompositeExtract %float %667 0
        %670 = OpFMul %float %669 %float_4_76837158en07
        %671 = OpExtInst %float %1 Fma %669 %float_9_53674316en07 %668
        %672 = OpCompositeExtract %float %665 1
        %673 = OpCompositeExtract %float %667 1
        %674 = OpFMul %float %673 %float_4_76837158en07
        %675 = OpExtInst %float %1 Fma %673 %float_9_53674316en07 %672
        %676 = OpFMul %float %672 %675
        %677 = OpFMul %float %673 %674
        %678 = OpCompositeExtract %float %665 2
        %679 = OpCompositeExtract %float %667 2
        %680 = OpFMul %float %679 %float_4_76837158en07
        %681 = OpExtInst %float %1 Fma %679 %float_9_53674316en07 %678
        %682 = OpExtInst %float %1 Fma %668 %671 %676
        %683 = OpExtInst %float %1 Fma %669 %670 %677
        %684 = OpExtInst %float %1 Fma %678 %681 %682
        %685 = OpExtInst %float %1 Fma %679 %680 %683
        %686 = OpExtInst %float %1 Fma %685 %float_4_76837158en07 %684
        %687 = OpExtInst %float %1 Sqrt %686
        %688 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_1
        %689 = OpLoad %v4float %688
        %690 = OpCompositeExtract %float %689 0
        %691 = OpExtInst %float %1 NMax %float_9_99999975en06 %690
        %692 = OpFDiv %float %float_1 %691
        %693 = OpFMul %float %687 %692
        %694 = OpExtInst %float %1 Fma %693 %float_n2_097152e_11 %float_100000
        %695 = OpExtInst %float %1 FClamp %694 %float_0 %float_1
        %696 = OpExtInst %float %1 FMix %float_1 %float_0 %695
        %697 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_86 %int_2
        %698 = OpLoad %float %697
        %699 = OpCompositeConstruct %v3float %698 %698 %698
        %700 = OpFMul %v3float %641 %699
        %701 = OpVectorTimesScalar %v3float %700 %float_4_76837158en07
        %702 = OpFAdd %v3float %701 %137
        %703 = OpExtInst %v3float %1 Fma %593 %699 %702
        %704 = OpExtInst %v3float %1 Floor %703
        %705 = OpFNegate %v3float %704
        %706 = OpExtInst %v3float %1 Fma %593 %699 %705
        %707 = OpVectorTimesScalar %v3float %706 %float_2097152
        %708 = OpExtInst %v3float %1 Fma %641 %699 %707
        %709 = OpVectorTimesScalar %v3float %708 %float_1
               OpBranch %710
        %710 = OpLabel
        %711 = OpPhi %v3float %709 %652 %712 %713
        %714 = OpPhi %float %float_1 %652 %715 %713
        %716 = OpPhi %float %float_0 %652 %717 %713
        %718 = OpPhi %uint %uint_0 %652 %719 %713
        %720 = OpULessThan %bool %718 %uint_6
               OpLoopMerge %721 %713 DontUnroll
               OpBranchConditional %720 %713 %721
        %713 = OpLabel
        %722 = OpFMul %v3float %711 %525
        %723 = OpExtInst %v3float %1 Fract %722
        %724 = OpVectorTimesScalar %v3float %723 %float_15
        %725 = OpExtInst %v3float %1 Fract %724
        %726 = OpFSub %v3float %724 %725
        %727 = OpCompositeExtract %float %725 0
        %728 = OpCompositeExtract %float %725 1
        %729 = OpCompositeExtract %float %725 2
        %730 = OpCompositeConstruct %v4float %727 %728 %729 %float_0
        %731 = OpFMul %v4float %730 %730
        %732 = OpFMul %v4float %731 %730
        %733 = OpVectorTimesScalar %v4float %730 %float_6
        %734 = OpFSub %v4float %733 %382
        %735 = OpExtInst %v4float %1 Fma %730 %734 %383
        %736 = OpFMul %v4float %732 %735
        %737 = OpVectorShuffle %v3float %736 %736 0 1 2
        %738 = OpFAdd %v3float %726 %737
        %739 = OpLoad %type_3d_image_0 %View_PerlinNoise3DTexture
        %740 = OpLoad %type_sampler %View_PerlinNoise3DTextureSampler
        %741 = OpExtInst %v3float %1 Fma %738 %526 %462
        %742 = OpSampledImage %type_sampled_image_0 %739 %740
        %743 = OpImageSampleExplicitLod %v4float %742 %741 Lod %float_0
        %744 = OpVectorShuffle %v3float %743 %743 0 1 2
        %745 = OpVectorTimesScalar %v3float %744 %float_255
        %746 = OpExtInst %v3float %1 Fma %745 %527 %279
        %747 = OpCompositeExtract %float %743 3
        %748 = OpExtInst %float %1 Fma %747 %float_255 %float_n127
        %749 = OpDot %float %724 %746
        %750 = OpFSub %float %749 %748
        %751 = OpExtInst %float %1 FAbs %750
        %717 = OpExtInst %float %1 Fma %751 %714 %716
        %712 = OpVectorTimesScalar %v3float %711 %float_2
        %715 = OpFMul %float %714 %float_0_5
        %719 = OpIAdd %uint %718 %uint_1
               OpBranch %710
        %721 = OpLabel
        %752 = OpExtInst %float %1 FMix %float_n1 %float_1 %716
        %753 = OpExtInst %float %1 FClamp %752 %float_0 %float_1
        %754 = OpExtInst %v3float %1 Fma %593 %134 %665
        %755 = OpFMul %v3float %641 %504
        %756 = OpExtInst %v3float %1 Fma %599 %134 %755
        %757 = OpVectorTimesScalar %v3float %754 %float_2097152
        %758 = OpFAdd %v3float %757 %756
        %759 = OpExtInst %float %1 Length %758
        %760 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_0
        %761 = OpLoad %v4float %760
        %762 = OpCompositeExtract %float %761 0
        %763 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_85 %int_1
        %764 = OpLoad %float %763
        %765 = OpFMul %float %762 %764
        %766 = OpExtInst %float %1 NMax %float_9_99999975en06 %765
        %767 = OpFDiv %float %float_1 %766
        %768 = OpFNegate %float %759
        %769 = OpExtInst %float %1 Fma %768 %767 %float_1
        %770 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_86 %int_1
        %771 = OpLoad %float %770
        %772 = OpFMul %float %769 %771
        %773 = OpExtInst %float %1 FClamp %772 %float_0 %float_1
        %774 = OpExtInst %float %1 FMix %753 %float_1 %773
        %775 = OpFAdd %v3float %593 %620
        %776 = OpVectorTimesScalar %v3float %775 %float_2097152
        %777 = OpFAdd %v3float %776 %640
               OpBranch %778
        %778 = OpLabel
        %779 = OpPhi %v3uint %540 %721 %780 %781
        %782 = OpPhi %uint %uint_0 %721 %783 %781
        %784 = OpPhi %float %float_0 %721 %785 %781
        %786 = OpAccessChain %_ptr_Uniform_uint %View %uint_31
        %787 = OpLoad %uint %786
        %788 = OpULessThan %bool %782 %787
               OpLoopMerge %789 %781 None
               OpBranchConditional %788 %790 %789
        %790 = OpLabel
        %791 = OpAccessChain %_ptr_Uniform_v4float %View %uint_26 %782
        %792 = OpLoad %v4float %791
        %793 = OpVectorShuffle %v3float %792 %792 0 1 2
        %794 = OpVectorShuffle %v3float %792 %792 3 3 3
        %795 = OpFSub %v3float %777 %793
        %796 = OpFAdd %v3float %795 %794
        %797 = OpExtInst %v3float %1 NMax %796 %102
        %798 = OpFAdd %v3float %793 %794
        %799 = OpFSub %v3float %798 %777
        %800 = OpExtInst %v3float %1 NMax %799 %102
        %801 = OpExtInst %v3float %1 NMin %797 %800
        %802 = OpCompositeExtract %float %801 0
        %803 = OpCompositeExtract %float %801 1
        %804 = OpCompositeExtract %float %801 2
        %805 = OpExtInst %float %1 NMin %803 %804
        %806 = OpExtInst %float %1 NMin %802 %805
        %807 = OpAccessChain %_ptr_Uniform_float %View %uint_26 %782 %int_3
        %808 = OpLoad %float %807
        %809 = OpAccessChain %_ptr_Uniform_float %View %uint_30
        %810 = OpLoad %float %809
        %811 = OpFMul %float %808 %810
        %785 = OpFMul %float %float_8 %811
        %812 = OpFOrdGreaterThan %bool %806 %811
               OpSelectionMerge %813 None
               OpBranchConditional %812 %814 %813
        %814 = OpLabel
        %815 = OpAccessChain %_ptr_Uniform_v4float %View %uint_27 %782
        %816 = OpLoad %v4float %815
        %817 = OpVectorShuffle %v3float %816 %816 3 3 3
        %818 = OpVectorShuffle %v3float %816 %816 0 1 2
        %819 = OpExtInst %v3float %1 Fma %777 %817 %818
        %820 = OpExtInst %v3float %1 Fract %819
        %821 = OpExtInst %v3float %1 Fract %820
        %822 = OpExtInst %v3float %1 FClamp %821 %102 %127
        %823 = OpAccessChain %_ptr_Uniform_int %View %uint_28
        %824 = OpLoad %int %823
        %825 = OpConvertSToF %float %824
        %826 = OpVectorTimesScalar %v3float %822 %825
        %827 = OpBitcast %uint %824
        %828 = OpIMul %uint %782 %827
        %829 = OpBitcast %int %828
        %830 = OpCompositeConstruct %v3int %int_0 %int_0 %829
        %831 = OpConvertSToF %v3float %830
        %832 = OpFAdd %v3float %826 %831
        %833 = OpCompositeExtract %float %832 0
        %834 = OpCompositeExtract %float %832 1
        %835 = OpCompositeExtract %float %832 2
        %836 = OpConvertFToS %int %833
        %837 = OpConvertFToS %int %834
        %838 = OpConvertFToS %int %835
        %839 = OpCompositeConstruct %v4int %836 %837 %838 %int_0
        %840 = OpVectorShuffle %v3int %839 %839 0 1 2
        %841 = OpLoad %type_3d_image %View_GlobalDistanceFieldPageTableTexture
        %842 = OpImageFetch %v4uint %841 %840 Lod %int_0
        %843 = OpCompositeExtract %uint %842 0
        %844 = OpBitwiseAnd %uint %843 %uint_16777215
        %845 = OpULessThan %bool %843 %uint_4294967295
               OpSelectionMerge %846 None
               OpBranchConditional %845 %847 %846
        %847 = OpLabel
        %848 = OpBitwiseAnd %uint %844 %uint_127
        %849 = OpCompositeInsert %v3uint %848 %779 0
        %850 = OpShiftRightLogical %uint %844 %uint_7
        %851 = OpBitwiseAnd %uint %850 %uint_127
        %852 = OpCompositeInsert %v3uint %851 %849 1
        %853 = OpShiftRightLogical %uint %844 %uint_14
        %854 = OpCompositeInsert %v3uint %853 %852 2
        %855 = OpVectorTimesScalar %v3float %821 %825
        %856 = OpExtInst %v3float %1 Fract %855
        %857 = OpIMul %v3uint %854 %354
        %858 = OpConvertUToF %v3float %857
        %859 = OpVectorTimesScalar %v3float %856 %float_7
        %860 = OpFAdd %v3float %858 %859
        %861 = OpFAdd %v3float %860 %137
        %862 = OpAccessChain %_ptr_Uniform_v3float %View %uint_29
        %863 = OpLoad %v3float %862
        %864 = OpFMul %v3float %861 %863
        %865 = OpLoad %type_3d_image_0 %View_GlobalDistanceFieldPageAtlasTexture
        %866 = OpLoad %type_sampler %View_SharedTrilinearWrappedSampler
        %867 = OpSampledImage %type_sampled_image_0 %865 %866
        %868 = OpImageSampleExplicitLod %v4float %867 %864 Lod %float_0
        %869 = OpCompositeExtract %float %868 0
        %870 = OpFOrdLessThan %bool %869 %float_1
               OpSelectionMerge %871 None
               OpBranchConditional %870 %872 %871
        %872 = OpLabel
        %873 = OpExtInst %float %1 Fma %869 %float_2 %float_n1
        %874 = OpFMul %float %873 %785
               OpBranch %789
        %871 = OpLabel
               OpBranch %846
        %846 = OpLabel
        %875 = OpPhi %v3uint %779 %814 %854 %871
               OpBranch %813
        %813 = OpLabel
        %780 = OpPhi %v3uint %779 %790 %875 %846
               OpBranch %781
        %781 = OpLabel
        %783 = OpIAdd %uint %782 %uint_1
               OpBranch %778
        %789 = OpLabel
        %876 = OpPhi %float %784 %778 %874 %872
        %877 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_0
        %878 = OpLoad %float %877
        %879 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_1
        %880 = OpLoad %float %879
        %881 = OpFNegate %float %880
        %882 = OpExtInst %float %1 Fma %876 %878 %881
        %883 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_88 %int_0
        %884 = OpLoad %float %883
        %885 = OpFMul %float %882 %884
        %886 = OpExtInst %float %1 Fma %885 %float_n1 %float_1
        %887 = OpExtInst %float %1 FClamp %886 %float_0 %float_1
               OpBranch %888
        %888 = OpLabel
        %889 = OpPhi %v3uint %540 %789 %890 %891
        %892 = OpPhi %uint %uint_0 %789 %893 %891
        %894 = OpULessThan %bool %892 %787
               OpLoopMerge %895 %891 None
               OpBranchConditional %894 %896 %895
        %896 = OpLabel
        %897 = OpAccessChain %_ptr_Uniform_v4float %View %uint_26 %892
        %898 = OpAccessChain %_ptr_Uniform_float %View %uint_26 %892 %int_3
        %899 = OpLoad %float %898
        %900 = OpAccessChain %_ptr_Uniform_float %View %uint_30
        %901 = OpLoad %float %900
        %902 = OpFMul %float %899 %901
        %903 = OpLoad %v4float %897
        %904 = OpVectorShuffle %v3float %903 %903 0 1 2
        %905 = OpVectorShuffle %v3float %903 %903 3 3 3
        %906 = OpFSub %v3float %777 %904
        %907 = OpFAdd %v3float %906 %905
        %908 = OpExtInst %v3float %1 NMax %907 %102
        %909 = OpFAdd %v3float %904 %905
        %910 = OpFSub %v3float %909 %777
        %911 = OpExtInst %v3float %1 NMax %910 %102
        %912 = OpExtInst %v3float %1 NMin %908 %911
        %913 = OpCompositeExtract %float %912 0
        %914 = OpCompositeExtract %float %912 1
        %915 = OpCompositeExtract %float %912 2
        %916 = OpExtInst %float %1 NMin %914 %915
        %917 = OpExtInst %float %1 NMin %913 %916
        %918 = OpFOrdGreaterThanEqual %bool %917 %902
               OpSelectionMerge %919 None
               OpBranchConditional %918 %920 %919
        %920 = OpLabel
        %921 = OpAccessChain %_ptr_Uniform_v4float %View %uint_27 %892
        %922 = OpLoad %v4float %921
        %923 = OpVectorShuffle %v3float %922 %922 3 3 3
        %924 = OpVectorShuffle %v3float %922 %922 0 1 2
        %925 = OpExtInst %v3float %1 Fma %777 %923 %924
        %926 = OpExtInst %v3float %1 Fract %925
        %927 = OpExtInst %v3float %1 Fract %926
        %928 = OpExtInst %v3float %1 FClamp %927 %102 %127
        %929 = OpAccessChain %_ptr_Uniform_int %View %uint_28
        %930 = OpLoad %int %929
        %931 = OpConvertSToF %float %930
        %932 = OpVectorTimesScalar %v3float %928 %931
        %933 = OpBitcast %uint %930
        %934 = OpIMul %uint %892 %933
        %935 = OpBitcast %int %934
        %936 = OpCompositeConstruct %v3int %int_0 %int_0 %935
        %937 = OpConvertSToF %v3float %936
        %938 = OpFAdd %v3float %932 %937
        %939 = OpCompositeExtract %float %938 0
        %940 = OpCompositeExtract %float %938 1
        %941 = OpCompositeExtract %float %938 2
        %942 = OpConvertFToS %int %939
        %943 = OpConvertFToS %int %940
        %944 = OpConvertFToS %int %941
        %945 = OpCompositeConstruct %v4int %942 %943 %944 %int_0
        %946 = OpVectorShuffle %v3int %945 %945 0 1 2
        %947 = OpLoad %type_3d_image %View_GlobalDistanceFieldPageTableTexture
        %948 = OpImageFetch %v4uint %947 %946 Lod %int_0
        %949 = OpCompositeExtract %uint %948 0
        %950 = OpBitwiseAnd %uint %949 %uint_16777215
        %951 = OpULessThan %bool %949 %uint_4294967295
               OpSelectionMerge %952 None
               OpBranchConditional %951 %953 %952
        %953 = OpLabel
        %954 = OpBitwiseAnd %uint %950 %uint_127
        %955 = OpCompositeInsert %v3uint %954 %889 0
        %956 = OpShiftRightLogical %uint %950 %uint_7
        %957 = OpBitwiseAnd %uint %956 %uint_127
        %958 = OpCompositeInsert %v3uint %957 %955 1
        %959 = OpShiftRightLogical %uint %950 %uint_14
        %960 = OpCompositeInsert %v3uint %959 %958 2
        %961 = OpVectorTimesScalar %v3float %927 %931
        %962 = OpExtInst %v3float %1 Fract %961
        %963 = OpIMul %v3uint %960 %354
        %964 = OpConvertUToF %v3float %963
        %965 = OpVectorTimesScalar %v3float %962 %float_7
        %966 = OpFAdd %v3float %964 %965
        %967 = OpFAdd %v3float %966 %137
        %968 = OpAccessChain %_ptr_Uniform_v3float %View %uint_29
        %969 = OpLoad %v3float %968
        %970 = OpFMul %v3float %967 %969
        %971 = OpLoad %type_3d_image_0 %View_GlobalDistanceFieldPageAtlasTexture
        %972 = OpLoad %type_sampler %View_SharedTrilinearWrappedSampler
        %973 = OpSampledImage %type_sampled_image_0 %971 %972
        %974 = OpImageSampleExplicitLod %v4float %973 %970 Lod %float_0
        %975 = OpCompositeExtract %float %974 0
        %976 = OpFOrdLessThan %bool %975 %float_0_899999976
               OpSelectionMerge %977 None
               OpBranchConditional %976 %978 %977
        %978 = OpLabel
        %979 = OpFMul %float %float_0_5 %901
        %980 = OpCompositeConstruct %v3float %979 %float_0 %float_0
        %981 = OpFAdd %v3float %927 %980
        %982 = OpExtInst %v3float %1 Fract %981
        %983 = OpExtInst %v3float %1 FClamp %982 %102 %127
        %984 = OpVectorTimesScalar %v3float %983 %931
        %985 = OpFAdd %v3float %984 %937
        %986 = OpCompositeExtract %float %985 0
        %987 = OpCompositeExtract %float %985 1
        %988 = OpCompositeExtract %float %985 2
        %989 = OpConvertFToS %int %986
        %990 = OpConvertFToS %int %987
        %991 = OpConvertFToS %int %988
        %992 = OpCompositeConstruct %v4int %989 %990 %991 %int_0
        %993 = OpVectorShuffle %v3int %992 %992 0 1 2
        %994 = OpImageFetch %v4uint %947 %993 Lod %int_0
        %995 = OpCompositeExtract %uint %994 0
        %996 = OpBitwiseAnd %uint %995 %uint_16777215
        %997 = OpULessThan %bool %995 %uint_4294967295
               OpSelectionMerge %998 None
               OpBranchConditional %997 %999 %998
        %999 = OpLabel
       %1000 = OpBitwiseAnd %uint %996 %uint_127
       %1001 = OpCompositeInsert %v3uint %1000 %540 0
       %1002 = OpShiftRightLogical %uint %996 %uint_7
       %1003 = OpBitwiseAnd %uint %1002 %uint_127
       %1004 = OpCompositeInsert %v3uint %1003 %1001 1
       %1005 = OpShiftRightLogical %uint %996 %uint_14
       %1006 = OpCompositeInsert %v3uint %1005 %1004 2
       %1007 = OpVectorTimesScalar %v3float %982 %931
       %1008 = OpExtInst %v3float %1 Fract %1007
       %1009 = OpIMul %v3uint %1006 %354
       %1010 = OpConvertUToF %v3float %1009
       %1011 = OpVectorTimesScalar %v3float %1008 %float_7
       %1012 = OpFAdd %v3float %1010 %1011
       %1013 = OpFAdd %v3float %1012 %137
       %1014 = OpFMul %v3float %1013 %969
       %1015 = OpSampledImage %type_sampled_image_0 %971 %972
       %1016 = OpImageSampleExplicitLod %v4float %1015 %1014 Lod %float_0
       %1017 = OpCompositeExtract %float %1016 0
               OpBranch %998
        %998 = OpLabel
       %1018 = OpPhi %float %float_1 %978 %1017 %999
       %1019 = OpFMul %float %901 %float_n0_5
       %1020 = OpCompositeConstruct %v3float %1019 %float_0 %float_0
       %1021 = OpFAdd %v3float %927 %1020
       %1022 = OpExtInst %v3float %1 Fract %1021
       %1023 = OpExtInst %v3float %1 FClamp %1022 %102 %127
       %1024 = OpVectorTimesScalar %v3float %1023 %931
       %1025 = OpFAdd %v3float %1024 %937
       %1026 = OpCompositeExtract %float %1025 0
       %1027 = OpCompositeExtract %float %1025 1
       %1028 = OpCompositeExtract %float %1025 2
       %1029 = OpConvertFToS %int %1026
       %1030 = OpConvertFToS %int %1027
       %1031 = OpConvertFToS %int %1028
       %1032 = OpCompositeConstruct %v4int %1029 %1030 %1031 %int_0
       %1033 = OpVectorShuffle %v3int %1032 %1032 0 1 2
       %1034 = OpImageFetch %v4uint %947 %1033 Lod %int_0
       %1035 = OpCompositeExtract %uint %1034 0
       %1036 = OpBitwiseAnd %uint %1035 %uint_16777215
       %1037 = OpULessThan %bool %1035 %uint_4294967295
               OpSelectionMerge %1038 None
               OpBranchConditional %1037 %1039 %1038
       %1039 = OpLabel
       %1040 = OpBitwiseAnd %uint %1036 %uint_127
       %1041 = OpCompositeInsert %v3uint %1040 %540 0
       %1042 = OpShiftRightLogical %uint %1036 %uint_7
       %1043 = OpBitwiseAnd %uint %1042 %uint_127
       %1044 = OpCompositeInsert %v3uint %1043 %1041 1
       %1045 = OpShiftRightLogical %uint %1036 %uint_14
       %1046 = OpCompositeInsert %v3uint %1045 %1044 2
       %1047 = OpVectorTimesScalar %v3float %1022 %931
       %1048 = OpExtInst %v3float %1 Fract %1047
       %1049 = OpIMul %v3uint %1046 %354
       %1050 = OpConvertUToF %v3float %1049
       %1051 = OpVectorTimesScalar %v3float %1048 %float_7
       %1052 = OpFAdd %v3float %1050 %1051
       %1053 = OpFAdd %v3float %1052 %137
       %1054 = OpFMul %v3float %1053 %969
       %1055 = OpSampledImage %type_sampled_image_0 %971 %972
       %1056 = OpImageSampleExplicitLod %v4float %1055 %1054 Lod %float_0
       %1057 = OpCompositeExtract %float %1056 0
               OpBranch %1038
       %1038 = OpLabel
       %1058 = OpPhi %float %float_1 %998 %1057 %1039
       %1059 = OpCompositeConstruct %v3float %float_0 %979 %float_0
       %1060 = OpFAdd %v3float %927 %1059
       %1061 = OpExtInst %v3float %1 Fract %1060
       %1062 = OpExtInst %v3float %1 FClamp %1061 %102 %127
       %1063 = OpVectorTimesScalar %v3float %1062 %931
       %1064 = OpFAdd %v3float %1063 %937
       %1065 = OpCompositeExtract %float %1064 0
       %1066 = OpCompositeExtract %float %1064 1
       %1067 = OpCompositeExtract %float %1064 2
       %1068 = OpConvertFToS %int %1065
       %1069 = OpConvertFToS %int %1066
       %1070 = OpConvertFToS %int %1067
       %1071 = OpCompositeConstruct %v4int %1068 %1069 %1070 %int_0
       %1072 = OpVectorShuffle %v3int %1071 %1071 0 1 2
       %1073 = OpImageFetch %v4uint %947 %1072 Lod %int_0
       %1074 = OpCompositeExtract %uint %1073 0
       %1075 = OpBitwiseAnd %uint %1074 %uint_16777215
       %1076 = OpULessThan %bool %1074 %uint_4294967295
               OpSelectionMerge %1077 None
               OpBranchConditional %1076 %1078 %1077
       %1078 = OpLabel
       %1079 = OpBitwiseAnd %uint %1075 %uint_127
       %1080 = OpCompositeInsert %v3uint %1079 %540 0
       %1081 = OpShiftRightLogical %uint %1075 %uint_7
       %1082 = OpBitwiseAnd %uint %1081 %uint_127
       %1083 = OpCompositeInsert %v3uint %1082 %1080 1
       %1084 = OpShiftRightLogical %uint %1075 %uint_14
       %1085 = OpCompositeInsert %v3uint %1084 %1083 2
       %1086 = OpVectorTimesScalar %v3float %1061 %931
       %1087 = OpExtInst %v3float %1 Fract %1086
       %1088 = OpIMul %v3uint %1085 %354
       %1089 = OpConvertUToF %v3float %1088
       %1090 = OpVectorTimesScalar %v3float %1087 %float_7
       %1091 = OpFAdd %v3float %1089 %1090
       %1092 = OpFAdd %v3float %1091 %137
       %1093 = OpFMul %v3float %1092 %969
       %1094 = OpSampledImage %type_sampled_image_0 %971 %972
       %1095 = OpImageSampleExplicitLod %v4float %1094 %1093 Lod %float_0
       %1096 = OpCompositeExtract %float %1095 0
               OpBranch %1077
       %1077 = OpLabel
       %1097 = OpPhi %float %float_1 %1038 %1096 %1078
       %1098 = OpCompositeConstruct %v3float %float_0 %1019 %float_0
       %1099 = OpFAdd %v3float %927 %1098
       %1100 = OpExtInst %v3float %1 Fract %1099
       %1101 = OpExtInst %v3float %1 FClamp %1100 %102 %127
       %1102 = OpVectorTimesScalar %v3float %1101 %931
       %1103 = OpFAdd %v3float %1102 %937
       %1104 = OpCompositeExtract %float %1103 0
       %1105 = OpCompositeExtract %float %1103 1
       %1106 = OpCompositeExtract %float %1103 2
       %1107 = OpConvertFToS %int %1104
       %1108 = OpConvertFToS %int %1105
       %1109 = OpConvertFToS %int %1106
       %1110 = OpCompositeConstruct %v4int %1107 %1108 %1109 %int_0
       %1111 = OpVectorShuffle %v3int %1110 %1110 0 1 2
       %1112 = OpImageFetch %v4uint %947 %1111 Lod %int_0
       %1113 = OpCompositeExtract %uint %1112 0
       %1114 = OpBitwiseAnd %uint %1113 %uint_16777215
       %1115 = OpULessThan %bool %1113 %uint_4294967295
               OpSelectionMerge %1116 None
               OpBranchConditional %1115 %1117 %1116
       %1117 = OpLabel
       %1118 = OpBitwiseAnd %uint %1114 %uint_127
       %1119 = OpCompositeInsert %v3uint %1118 %540 0
       %1120 = OpShiftRightLogical %uint %1114 %uint_7
       %1121 = OpBitwiseAnd %uint %1120 %uint_127
       %1122 = OpCompositeInsert %v3uint %1121 %1119 1
       %1123 = OpShiftRightLogical %uint %1114 %uint_14
       %1124 = OpCompositeInsert %v3uint %1123 %1122 2
       %1125 = OpVectorTimesScalar %v3float %1100 %931
       %1126 = OpExtInst %v3float %1 Fract %1125
       %1127 = OpIMul %v3uint %1124 %354
       %1128 = OpConvertUToF %v3float %1127
       %1129 = OpVectorTimesScalar %v3float %1126 %float_7
       %1130 = OpFAdd %v3float %1128 %1129
       %1131 = OpFAdd %v3float %1130 %137
       %1132 = OpFMul %v3float %1131 %969
       %1133 = OpSampledImage %type_sampled_image_0 %971 %972
       %1134 = OpImageSampleExplicitLod %v4float %1133 %1132 Lod %float_0
       %1135 = OpCompositeExtract %float %1134 0
               OpBranch %1116
       %1116 = OpLabel
       %1136 = OpPhi %float %float_1 %1077 %1135 %1117
       %1137 = OpFSub %float %1018 %1058
       %1138 = OpFSub %float %1097 %1136
       %1139 = OpCompositeConstruct %v3float %1137 %1138 %550
       %1140 = OpFMul %float %902 %float_16
       %1141 = OpFMul %float %float_128 %901
       %1142 = OpVectorTimesScalar %v3float %1139 %1140
       %1143 = OpFMul %float %899 %1141
       %1144 = OpCompositeConstruct %v3float %1143 %1143 %1143
       %1145 = OpFDiv %v3float %1142 %1144
               OpBranch %895
        %977 = OpLabel
               OpBranch %952
        %952 = OpLabel
       %1146 = OpPhi %v3uint %889 %920 %960 %977
               OpBranch %919
        %919 = OpLabel
        %890 = OpPhi %v3uint %889 %896 %1146 %952
               OpBranch %891
        %891 = OpLabel
        %893 = OpIAdd %uint %892 %uint_1
               OpBranch %888
        %895 = OpLabel
       %1147 = OpPhi %v3float %339 %888 %1145 %1116
       %1148 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_88 %int_2
       %1149 = OpLoad %float %1148
       %1150 = OpCompositeConstruct %v3float %1149 %1149 %1149
       %1151 = OpExtInst %v3float %1 Fma %1147 %1150 %642
       %1152 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_88 %int_3
       %1153 = OpLoad %float %1152
       %1154 = OpCompositeConstruct %v3float %1153 %1153 %1153
       %1155 = OpFMul %v3float %593 %1154
       %1156 = OpFMul %v3float %1151 %1154
       %1157 = OpAccessChain %_ptr_Uniform_float %View %uint_19
       %1158 = OpLoad %float %1157
       %1159 = OpCompositeExtract %float %761 2
       %1160 = OpCompositeExtract %float %761 3
       %1161 = OpExtInst %float %1 FMix %1158 %1159 %1160
       %1162 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_89 %int_1
       %1163 = OpLoad %float %1162
       %1164 = OpFMul %float %1161 %1163
       %1165 = OpCompositeConstruct %v2float %1164 %1164
       %1166 = OpFAdd %v2float %1165 %276
       %1167 = OpCompositeExtract %float %1155 0
       %1168 = OpCompositeExtract %float %1156 0
       %1169 = OpCompositeExtract %float %1155 1
       %1170 = OpCompositeExtract %float %1156 1
       %1171 = OpCompositeExtract %float %1166 0
       %1172 = OpCompositeConstruct %v3float %1167 %1169 %float_0
       %1173 = OpCompositeConstruct %v3float %1168 %1170 %1171
       %1174 = OpVectorTimesScalar %v3float %1173 %float_4_76837158en07
       %1175 = OpFAdd %v3float %1174 %137
       %1176 = OpFAdd %v3float %1172 %1175
       %1177 = OpExtInst %v3float %1 Floor %1176
       %1178 = OpFSub %v3float %1172 %1177
       %1179 = OpVectorTimesScalar %v3float %1178 %float_2097152
       %1180 = OpFAdd %v3float %1179 %1173
       %1181 = OpVectorTimesScalar %v3float %1180 %float_1
               OpBranch %1182
       %1182 = OpLabel
       %1183 = OpPhi %v3float %1181 %895 %1184 %1185
       %1186 = OpPhi %float %float_1 %895 %1187 %1185
       %1188 = OpPhi %float %float_0 %895 %1189 %1185
       %1190 = OpPhi %uint %uint_0 %895 %1191 %1185
       %1192 = OpULessThan %bool %1190 %uint_10
               OpLoopMerge %1193 %1185 DontUnroll
               OpBranchConditional %1192 %1185 %1193
       %1185 = OpLabel
       %1194 = OpExtInst %v3float %1 Fract %1183
       %1195 = OpExtInst %v3float %1 Floor %1183
       %1196 = OpDot %float %1195 %386
       %1197 = OpFAdd %float %1196 %float_19
       %1198 = OpFAdd %float %1196 %float_47
       %1199 = OpFAdd %float %1196 %float_66
       %1200 = OpFAdd %float %1196 %float_101
       %1201 = OpFAdd %float %1196 %float_120
       %1202 = OpFAdd %float %1196 %float_148
       %1203 = OpFAdd %float %1196 %float_167
       %1204 = OpConvertFToS %int %1196
       %1205 = OpCompositeConstruct %v3int %1204 %int_0 %int_0
       %1206 = OpBitcast %v3uint %1205
       %1207 = OpIMul %v3uint %1206 %402
       %1208 = OpIAdd %v3uint %1207 %404
       %1209 = OpCompositeExtract %uint %1208 1
       %1210 = OpCompositeExtract %uint %1208 2
       %1211 = OpIMul %uint %1209 %1210
       %1212 = OpCompositeExtract %uint %1208 0
       %1213 = OpIAdd %uint %1212 %1211
       %1214 = OpIMul %uint %1210 %1213
       %1215 = OpIAdd %uint %1209 %1214
       %1216 = OpIMul %uint %1213 %1215
       %1217 = OpIAdd %uint %1210 %1216
       %1218 = OpIMul %uint %1215 %1217
       %1219 = OpIAdd %uint %1213 %1218
       %1220 = OpCompositeInsert %v3uint %1219 %551 0
       %1221 = OpBitwiseAnd %v3uint %405 %406
       %1222 = OpShiftRightLogical %v3uint %1220 %1221
       %1223 = OpCompositeExtract %uint %1222 0
       %1224 = OpCompositeConstruct %v3uint %1223 %1223 %1223
       %1225 = OpBitwiseAnd %v3uint %1224 %387
       %1226 = OpConvertUToF %v3float %1225
       %1227 = OpExtInst %v3float %1 Fma %1226 %391 %279
       %1228 = OpDot %float %1227 %1194
       %1229 = OpConvertFToS %int %1197
       %1230 = OpFSub %v3float %1194 %351
       %1231 = OpCompositeConstruct %v3int %1229 %int_0 %int_0
       %1232 = OpBitcast %v3uint %1231
       %1233 = OpIMul %v3uint %1232 %402
       %1234 = OpIAdd %v3uint %1233 %404
       %1235 = OpCompositeExtract %uint %1234 1
       %1236 = OpCompositeExtract %uint %1234 2
       %1237 = OpIMul %uint %1235 %1236
       %1238 = OpCompositeExtract %uint %1234 0
       %1239 = OpIAdd %uint %1238 %1237
       %1240 = OpIMul %uint %1236 %1239
       %1241 = OpIAdd %uint %1235 %1240
       %1242 = OpIMul %uint %1239 %1241
       %1243 = OpIAdd %uint %1236 %1242
       %1244 = OpIMul %uint %1241 %1243
       %1245 = OpIAdd %uint %1239 %1244
       %1246 = OpCompositeInsert %v3uint %1245 %551 0
       %1247 = OpShiftRightLogical %v3uint %1246 %1221
       %1248 = OpCompositeExtract %uint %1247 0
       %1249 = OpCompositeConstruct %v3uint %1248 %1248 %1248
       %1250 = OpBitwiseAnd %v3uint %1249 %387
       %1251 = OpConvertUToF %v3float %1250
       %1252 = OpExtInst %v3float %1 Fma %1251 %391 %279
       %1253 = OpDot %float %1252 %1230
       %1254 = OpConvertFToS %int %1198
       %1255 = OpFSub %v3float %1194 %352
       %1256 = OpCompositeConstruct %v3int %1254 %int_0 %int_0
       %1257 = OpBitcast %v3uint %1256
       %1258 = OpIMul %v3uint %1257 %402
       %1259 = OpIAdd %v3uint %1258 %404
       %1260 = OpCompositeExtract %uint %1259 1
       %1261 = OpCompositeExtract %uint %1259 2
       %1262 = OpIMul %uint %1260 %1261
       %1263 = OpCompositeExtract %uint %1259 0
       %1264 = OpIAdd %uint %1263 %1262
       %1265 = OpIMul %uint %1261 %1264
       %1266 = OpIAdd %uint %1260 %1265
       %1267 = OpIMul %uint %1264 %1266
       %1268 = OpIAdd %uint %1261 %1267
       %1269 = OpIMul %uint %1266 %1268
       %1270 = OpIAdd %uint %1264 %1269
       %1271 = OpCompositeInsert %v3uint %1270 %551 0
       %1272 = OpShiftRightLogical %v3uint %1271 %1221
       %1273 = OpCompositeExtract %uint %1272 0
       %1274 = OpCompositeConstruct %v3uint %1273 %1273 %1273
       %1275 = OpBitwiseAnd %v3uint %1274 %387
       %1276 = OpConvertUToF %v3float %1275
       %1277 = OpExtInst %v3float %1 Fma %1276 %391 %279
       %1278 = OpDot %float %1277 %1255
       %1279 = OpConvertFToS %int %1199
       %1280 = OpFSub %v3float %1194 %134
       %1281 = OpCompositeConstruct %v3int %1279 %int_0 %int_0
       %1282 = OpBitcast %v3uint %1281
       %1283 = OpIMul %v3uint %1282 %402
       %1284 = OpIAdd %v3uint %1283 %404
       %1285 = OpCompositeExtract %uint %1284 1
       %1286 = OpCompositeExtract %uint %1284 2
       %1287 = OpIMul %uint %1285 %1286
       %1288 = OpCompositeExtract %uint %1284 0
       %1289 = OpIAdd %uint %1288 %1287
       %1290 = OpIMul %uint %1286 %1289
       %1291 = OpIAdd %uint %1285 %1290
       %1292 = OpIMul %uint %1289 %1291
       %1293 = OpIAdd %uint %1286 %1292
       %1294 = OpIMul %uint %1291 %1293
       %1295 = OpIAdd %uint %1289 %1294
       %1296 = OpCompositeInsert %v3uint %1295 %551 0
       %1297 = OpShiftRightLogical %v3uint %1296 %1221
       %1298 = OpCompositeExtract %uint %1297 0
       %1299 = OpCompositeConstruct %v3uint %1298 %1298 %1298
       %1300 = OpBitwiseAnd %v3uint %1299 %387
       %1301 = OpConvertUToF %v3float %1300
       %1302 = OpExtInst %v3float %1 Fma %1301 %391 %279
       %1303 = OpDot %float %1302 %1280
       %1304 = OpConvertFToS %int %1200
       %1305 = OpFSub %v3float %1194 %291
       %1306 = OpCompositeConstruct %v3int %1304 %int_0 %int_0
       %1307 = OpBitcast %v3uint %1306
       %1308 = OpIMul %v3uint %1307 %402
       %1309 = OpIAdd %v3uint %1308 %404
       %1310 = OpCompositeExtract %uint %1309 1
       %1311 = OpCompositeExtract %uint %1309 2
       %1312 = OpIMul %uint %1310 %1311
       %1313 = OpCompositeExtract %uint %1309 0
       %1314 = OpIAdd %uint %1313 %1312
       %1315 = OpIMul %uint %1311 %1314
       %1316 = OpIAdd %uint %1310 %1315
       %1317 = OpIMul %uint %1314 %1316
       %1318 = OpIAdd %uint %1311 %1317
       %1319 = OpIMul %uint %1316 %1318
       %1320 = OpIAdd %uint %1314 %1319
       %1321 = OpCompositeInsert %v3uint %1320 %551 0
       %1322 = OpShiftRightLogical %v3uint %1321 %1221
       %1323 = OpCompositeExtract %uint %1322 0
       %1324 = OpCompositeConstruct %v3uint %1323 %1323 %1323
       %1325 = OpBitwiseAnd %v3uint %1324 %387
       %1326 = OpConvertUToF %v3float %1325
       %1327 = OpExtInst %v3float %1 Fma %1326 %391 %279
       %1328 = OpDot %float %1327 %1305
       %1329 = OpConvertFToS %int %1201
       %1330 = OpFSub %v3float %1194 %140
       %1331 = OpCompositeConstruct %v3int %1329 %int_0 %int_0
       %1332 = OpBitcast %v3uint %1331
       %1333 = OpIMul %v3uint %1332 %402
       %1334 = OpIAdd %v3uint %1333 %404
       %1335 = OpCompositeExtract %uint %1334 1
       %1336 = OpCompositeExtract %uint %1334 2
       %1337 = OpIMul %uint %1335 %1336
       %1338 = OpCompositeExtract %uint %1334 0
       %1339 = OpIAdd %uint %1338 %1337
       %1340 = OpIMul %uint %1336 %1339
       %1341 = OpIAdd %uint %1335 %1340
       %1342 = OpIMul %uint %1339 %1341
       %1343 = OpIAdd %uint %1336 %1342
       %1344 = OpIMul %uint %1341 %1343
       %1345 = OpIAdd %uint %1339 %1344
       %1346 = OpCompositeInsert %v3uint %1345 %551 0
       %1347 = OpShiftRightLogical %v3uint %1346 %1221
       %1348 = OpCompositeExtract %uint %1347 0
       %1349 = OpCompositeConstruct %v3uint %1348 %1348 %1348
       %1350 = OpBitwiseAnd %v3uint %1349 %387
       %1351 = OpConvertUToF %v3float %1350
       %1352 = OpExtInst %v3float %1 Fma %1351 %391 %279
       %1353 = OpDot %float %1352 %1330
       %1354 = OpConvertFToS %int %1202
       %1355 = OpFSub %v3float %1194 %135
       %1356 = OpCompositeConstruct %v3int %1354 %int_0 %int_0
       %1357 = OpBitcast %v3uint %1356
       %1358 = OpIMul %v3uint %1357 %402
       %1359 = OpIAdd %v3uint %1358 %404
       %1360 = OpCompositeExtract %uint %1359 1
       %1361 = OpCompositeExtract %uint %1359 2
       %1362 = OpIMul %uint %1360 %1361
       %1363 = OpCompositeExtract %uint %1359 0
       %1364 = OpIAdd %uint %1363 %1362
       %1365 = OpIMul %uint %1361 %1364
       %1366 = OpIAdd %uint %1360 %1365
       %1367 = OpIMul %uint %1364 %1366
       %1368 = OpIAdd %uint %1361 %1367
       %1369 = OpIMul %uint %1366 %1368
       %1370 = OpIAdd %uint %1364 %1369
       %1371 = OpCompositeInsert %v3uint %1370 %551 0
       %1372 = OpShiftRightLogical %v3uint %1371 %1221
       %1373 = OpCompositeExtract %uint %1372 0
       %1374 = OpCompositeConstruct %v3uint %1373 %1373 %1373
       %1375 = OpBitwiseAnd %v3uint %1374 %387
       %1376 = OpConvertUToF %v3float %1375
       %1377 = OpExtInst %v3float %1 Fma %1376 %391 %279
       %1378 = OpDot %float %1377 %1355
       %1379 = OpConvertFToS %int %1203
       %1380 = OpFSub %v3float %1194 %127
       %1381 = OpCompositeConstruct %v3int %1379 %int_0 %int_0
       %1382 = OpBitcast %v3uint %1381
       %1383 = OpIMul %v3uint %1382 %402
       %1384 = OpIAdd %v3uint %1383 %404
       %1385 = OpCompositeExtract %uint %1384 1
       %1386 = OpCompositeExtract %uint %1384 2
       %1387 = OpIMul %uint %1385 %1386
       %1388 = OpCompositeExtract %uint %1384 0
       %1389 = OpIAdd %uint %1388 %1387
       %1390 = OpIMul %uint %1386 %1389
       %1391 = OpIAdd %uint %1385 %1390
       %1392 = OpIMul %uint %1389 %1391
       %1393 = OpIAdd %uint %1386 %1392
       %1394 = OpIMul %uint %1391 %1393
       %1395 = OpIAdd %uint %1389 %1394
       %1396 = OpCompositeInsert %v3uint %1395 %551 0
       %1397 = OpShiftRightLogical %v3uint %1396 %1221
       %1398 = OpCompositeExtract %uint %1397 0
       %1399 = OpCompositeConstruct %v3uint %1398 %1398 %1398
       %1400 = OpBitwiseAnd %v3uint %1399 %387
       %1401 = OpConvertUToF %v3float %1400
       %1402 = OpExtInst %v3float %1 Fma %1401 %391 %279
       %1403 = OpDot %float %1402 %1380
       %1404 = OpCompositeExtract %float %1194 0
       %1405 = OpCompositeExtract %float %1194 1
       %1406 = OpCompositeExtract %float %1194 2
       %1407 = OpCompositeConstruct %v4float %1404 %1405 %1406 %float_0
       %1408 = OpFMul %v4float %1407 %1407
       %1409 = OpFMul %v4float %1408 %1407
       %1410 = OpVectorTimesScalar %v4float %1407 %float_6
       %1411 = OpFSub %v4float %1410 %382
       %1412 = OpExtInst %v4float %1 Fma %1407 %1411 %383
       %1413 = OpFMul %v4float %1409 %1412
       %1414 = OpCompositeExtract %float %1413 0
       %1415 = OpExtInst %float %1 FMix %1228 %1253 %1414
       %1416 = OpExtInst %float %1 FMix %1278 %1303 %1414
       %1417 = OpCompositeExtract %float %1413 1
       %1418 = OpExtInst %float %1 FMix %1415 %1416 %1417
       %1419 = OpExtInst %float %1 FMix %1328 %1353 %1414
       %1420 = OpExtInst %float %1 FMix %1378 %1403 %1414
       %1421 = OpExtInst %float %1 FMix %1419 %1420 %1417
       %1422 = OpCompositeExtract %float %1413 2
       %1423 = OpExtInst %float %1 FMix %1418 %1421 %1422
       %1424 = OpExtInst %float %1 FAbs %1423
       %1189 = OpExtInst %float %1 Fma %1424 %1186 %1188
       %1184 = OpVectorTimesScalar %v3float %1183 %float_2
       %1187 = OpFMul %float %1186 %float_0_5
       %1191 = OpIAdd %uint %1190 %uint_1
               OpBranch %1182
       %1193 = OpLabel
       %1425 = OpExtInst %float %1 FMix %float_0 %float_1 %1188
       %1426 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_89 %int_2
       %1427 = OpLoad %float %1426
       %1428 = OpFNegate %float %887
       %1429 = OpExtInst %float %1 Fma %1428 %1427 %1425
       %1430 = OpExtInst %float %1 Fma %887 %1427 %float_1
       %1431 = OpExtInst %float %1 Fma %1428 %1427 %1430
       %1432 = OpFDiv %float %1429 %1431
       %1433 = OpExtInst %float %1 Fma %1432 %float_n1 %float_1
       %1434 = OpExtInst %float %1 FClamp %1433 %float_0 %float_1
       %1435 = OpFOrdLessThanEqual %bool %1434 %float_0
       %1436 = OpExtInst %float %1 Pow %1434 %float_2
       %1437 = OpSelect %float %1435 %float_0 %1436
       %1438 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_0
       %1439 = OpLoad %float %1438
       %1440 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_89 %int_3
       %1441 = OpLoad %float %1440
       %1442 = OpExtInst %float %1 FMix %1439 %1441 %1437
       %1443 = OpExtInst %float %1 FClamp %1442 %float_0 %float_1
       %1444 = OpFMul %float %887 %1443
       %1445 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_1
       %1446 = OpLoad %float %1445
       %1447 = OpCompositeConstruct %v3float %1446 %1446 %1446
       %1448 = OpFMul %v3float %593 %1447
       %1449 = OpFMul %v3float %642 %1447
       %1450 = OpVectorTimesScalar %v3float %1449 %float_4_76837158en07
       %1451 = OpFAdd %v3float %1450 %137
       %1452 = OpExtInst %v3float %1 Fma %593 %1447 %1451
       %1453 = OpExtInst %v3float %1 Floor %1452
       %1454 = OpFNegate %v3float %1453
       %1455 = OpExtInst %v3float %1 Fma %593 %1447 %1454
       %1456 = OpVectorTimesScalar %v3float %1455 %float_2097152
       %1457 = OpExtInst %v3float %1 Fma %642 %1447 %1456
       %1458 = OpVectorTimesScalar %v3float %1457 %float_1
               OpBranch %1459
       %1459 = OpLabel
       %1460 = OpPhi %v3float %543 %1193 %1461 %1462
       %1463 = OpPhi %v3float %1458 %1193 %1464 %1462
       %1465 = OpPhi %float %float_1 %1193 %1466 %1462
       %1467 = OpPhi %float %float_0 %1193 %1468 %1462
       %1469 = OpPhi %uint %uint_0 %1193 %1470 %1462
       %1471 = OpULessThan %bool %1469 %uint_1
               OpLoopMerge %1472 %1462 DontUnroll
               OpBranchConditional %1471 %1473 %1472
       %1473 = OpLabel
       %1474 = OpExtInst %v3float %1 Fract %1463
       %1475 = OpExtInst %v3float %1 Floor %1463
       %1476 = OpCompositeInsert %v3float %float_0 %1460 0
               OpBranch %1477
       %1477 = OpLabel
       %1478 = OpPhi %v4float %353 %1473 %1479 %1480
       %1461 = OpPhi %v3float %1476 %1473 %1481 %1480
       %1482 = OpCompositeExtract %float %1461 0
       %1483 = OpFOrdLessThanEqual %bool %1482 %float_1
               OpLoopMerge %1484 %1480 None
               OpBranchConditional %1483 %1485 %1484
       %1485 = OpLabel
       %1486 = OpCompositeInsert %v3float %float_0 %1461 1
               OpBranch %1487
       %1487 = OpLabel
       %1488 = OpPhi %v3float %1486 %1485 %1489 %1490
       %1479 = OpPhi %v4float %1478 %1485 %1491 %1490
       %1492 = OpCompositeExtract %float %1488 1
       %1493 = OpFOrdLessThanEqual %bool %1492 %float_1
               OpLoopMerge %1494 %1490 None
               OpBranchConditional %1493 %1495 %1494
       %1495 = OpLabel
       %1496 = OpCompositeInsert %v3float %float_0 %1488 2
               OpBranch %1497
       %1497 = OpLabel
       %1491 = OpPhi %v4float %1479 %1495 %1498 %1499
       %1500 = OpPhi %v3float %1496 %1495 %1501 %1499
       %1502 = OpCompositeExtract %float %1500 2
       %1503 = OpFOrdLessThanEqual %bool %1502 %float_1
               OpLoopMerge %1504 %1499 None
               OpBranchConditional %1503 %1499 %1504
       %1499 = OpLabel
       %1505 = OpFAdd %v3float %1475 %1500
       %1506 = OpVectorShuffle %v3float %539 %1505 3 4 5
       %1507 = OpConvertFToS %v3int %1506
       %1508 = OpBitcast %v3uint %1507
       %1509 = OpIMul %v3uint %1508 %402
       %1510 = OpIAdd %v3uint %1509 %404
       %1511 = OpCompositeExtract %uint %1510 1
       %1512 = OpCompositeExtract %uint %1510 2
       %1513 = OpIMul %uint %1511 %1512
       %1514 = OpCompositeExtract %uint %1510 0
       %1515 = OpIAdd %uint %1514 %1513
       %1516 = OpIMul %uint %1512 %1515
       %1517 = OpIAdd %uint %1511 %1516
       %1518 = OpIMul %uint %1515 %1517
       %1519 = OpIAdd %uint %1512 %1518
       %1520 = OpIMul %uint %1517 %1519
       %1521 = OpIAdd %uint %1515 %1520
       %1522 = OpCompositeInsert %v3uint %1521 %1510 0
       %1523 = OpIMul %uint %1519 %1521
       %1524 = OpIAdd %uint %1517 %1523
       %1525 = OpCompositeInsert %v3uint %1524 %1522 1
       %1526 = OpIMul %uint %1521 %1524
       %1527 = OpIAdd %uint %1519 %1526
       %1528 = OpCompositeInsert %v3uint %1527 %1525 2
       %1529 = OpBitwiseAnd %v3uint %405 %406
       %1530 = OpShiftRightLogical %v3uint %1528 %1529
       %1531 = OpConvertUToF %v3float %1530
       %1532 = OpExtInst %v3float %1 Fma %1531 %523 %512
       %1533 = OpExtInst %v3float %1 Normalize %1532
       %1534 = OpVectorTimesScalar %v3float %1533 %float_0_2588
       %1535 = OpFAdd %v3float %1500 %1534
       %1536 = OpFSub %v3float %1474 %1535
       %1537 = OpCompositeExtract %float %1491 3
       %1538 = OpDot %float %1536 %1536
       %1539 = OpExtInst %float %1 NMin %1537 %1538
       %1498 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %1539
       %1540 = OpFAdd %float %1502 %float_1
       %1501 = OpCompositeInsert %v3float %1540 %1500 2
               OpBranch %1497
       %1504 = OpLabel
               OpBranch %1490
       %1490 = OpLabel
       %1541 = OpCompositeExtract %float %1500 1
       %1542 = OpFAdd %float %1541 %float_1
       %1489 = OpCompositeInsert %v3float %1542 %1500 1
               OpBranch %1487
       %1494 = OpLabel
               OpBranch %1480
       %1480 = OpLabel
       %1543 = OpCompositeExtract %float %1488 0
       %1544 = OpFAdd %float %1543 %float_1
       %1481 = OpCompositeInsert %v3float %1544 %1488 0
               OpBranch %1477
       %1484 = OpLabel
       %1545 = OpCompositeExtract %float %1478 3
       %1546 = OpExtInst %float %1 Sqrt %1545
       %1547 = OpExtInst %float %1 Fma %1546 %float_2 %float_n1
       %1548 = OpExtInst %float %1 FAbs %1547
       %1468 = OpExtInst %float %1 Fma %1548 %1465 %1467
       %1464 = OpVectorTimesScalar %v3float %1463 %float_2
       %1466 = OpFMul %float %1465 %float_0_5
               OpBranch %1462
       %1462 = OpLabel
       %1470 = OpIAdd %uint %1469 %uint_1
               OpBranch %1459
       %1472 = OpLabel
       %1549 = OpExtInst %float %1 FMix %float_n1 %float_1 %1467
       %1550 = OpExtInst %float %1 FClamp %1549 %float_0 %float_1
       %1551 = OpFMul %v3float %1449 %278
       %1552 = OpVectorTimesScalar %v3float %1551 %float_4_76837158en07
       %1553 = OpFAdd %v3float %1552 %137
       %1554 = OpExtInst %v3float %1 Fma %1448 %278 %1553
       %1555 = OpExtInst %v3float %1 Floor %1554
       %1556 = OpFNegate %v3float %1555
       %1557 = OpExtInst %v3float %1 Fma %1448 %278 %1556
       %1558 = OpVectorTimesScalar %v3float %1557 %float_2097152
       %1559 = OpExtInst %v3float %1 Fma %1449 %278 %1558
       %1560 = OpVectorTimesScalar %v3float %1559 %float_1
               OpBranch %1561
       %1561 = OpLabel
       %1562 = OpPhi %v3float %543 %1472 %1563 %1564
       %1565 = OpPhi %v3float %1560 %1472 %1566 %1564
       %1567 = OpPhi %float %float_1 %1472 %1568 %1564
       %1569 = OpPhi %float %float_0 %1472 %1570 %1564
       %1571 = OpPhi %uint %uint_0 %1472 %1572 %1564
       %1573 = OpULessThan %bool %1571 %uint_1
               OpLoopMerge %1574 %1564 DontUnroll
               OpBranchConditional %1573 %1575 %1574
       %1575 = OpLabel
       %1576 = OpExtInst %v3float %1 Fract %1565
       %1577 = OpExtInst %v3float %1 Floor %1565
       %1578 = OpCompositeInsert %v3float %float_0 %1562 0
               OpBranch %1579
       %1579 = OpLabel
       %1580 = OpPhi %v4float %353 %1575 %1581 %1582
       %1563 = OpPhi %v3float %1578 %1575 %1583 %1582
       %1584 = OpCompositeExtract %float %1563 0
       %1585 = OpFOrdLessThanEqual %bool %1584 %float_1
               OpLoopMerge %1586 %1582 None
               OpBranchConditional %1585 %1587 %1586
       %1587 = OpLabel
       %1588 = OpCompositeInsert %v3float %float_0 %1563 1
               OpBranch %1589
       %1589 = OpLabel
       %1590 = OpPhi %v3float %1588 %1587 %1591 %1592
       %1581 = OpPhi %v4float %1580 %1587 %1593 %1592
       %1594 = OpCompositeExtract %float %1590 1
       %1595 = OpFOrdLessThanEqual %bool %1594 %float_1
               OpLoopMerge %1596 %1592 None
               OpBranchConditional %1595 %1597 %1596
       %1597 = OpLabel
       %1598 = OpCompositeInsert %v3float %float_0 %1590 2
               OpBranch %1599
       %1599 = OpLabel
       %1593 = OpPhi %v4float %1581 %1597 %1600 %1601
       %1602 = OpPhi %v3float %1598 %1597 %1603 %1601
       %1604 = OpCompositeExtract %float %1602 2
       %1605 = OpFOrdLessThanEqual %bool %1604 %float_1
               OpLoopMerge %1606 %1601 None
               OpBranchConditional %1605 %1601 %1606
       %1601 = OpLabel
       %1607 = OpFAdd %v3float %1577 %1602
       %1608 = OpVectorShuffle %v3float %539 %1607 3 4 5
       %1609 = OpConvertFToS %v3int %1608
       %1610 = OpBitcast %v3uint %1609
       %1611 = OpIMul %v3uint %1610 %402
       %1612 = OpIAdd %v3uint %1611 %404
       %1613 = OpCompositeExtract %uint %1612 1
       %1614 = OpCompositeExtract %uint %1612 2
       %1615 = OpIMul %uint %1613 %1614
       %1616 = OpCompositeExtract %uint %1612 0
       %1617 = OpIAdd %uint %1616 %1615
       %1618 = OpIMul %uint %1614 %1617
       %1619 = OpIAdd %uint %1613 %1618
       %1620 = OpIMul %uint %1617 %1619
       %1621 = OpIAdd %uint %1614 %1620
       %1622 = OpIMul %uint %1619 %1621
       %1623 = OpIAdd %uint %1617 %1622
       %1624 = OpCompositeInsert %v3uint %1623 %1612 0
       %1625 = OpIMul %uint %1621 %1623
       %1626 = OpIAdd %uint %1619 %1625
       %1627 = OpCompositeInsert %v3uint %1626 %1624 1
       %1628 = OpIMul %uint %1623 %1626
       %1629 = OpIAdd %uint %1621 %1628
       %1630 = OpCompositeInsert %v3uint %1629 %1627 2
       %1631 = OpBitwiseAnd %v3uint %405 %406
       %1632 = OpShiftRightLogical %v3uint %1630 %1631
       %1633 = OpConvertUToF %v3float %1632
       %1634 = OpExtInst %v3float %1 Fma %1633 %523 %512
       %1635 = OpExtInst %v3float %1 Normalize %1634
       %1636 = OpVectorTimesScalar %v3float %1635 %float_0_2588
       %1637 = OpFAdd %v3float %1602 %1636
       %1638 = OpFSub %v3float %1576 %1637
       %1639 = OpCompositeExtract %float %1593 3
       %1640 = OpDot %float %1638 %1638
       %1641 = OpExtInst %float %1 NMin %1639 %1640
       %1600 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %1641
       %1642 = OpFAdd %float %1604 %float_1
       %1603 = OpCompositeInsert %v3float %1642 %1602 2
               OpBranch %1599
       %1606 = OpLabel
               OpBranch %1592
       %1592 = OpLabel
       %1643 = OpCompositeExtract %float %1602 1
       %1644 = OpFAdd %float %1643 %float_1
       %1591 = OpCompositeInsert %v3float %1644 %1602 1
               OpBranch %1589
       %1596 = OpLabel
               OpBranch %1582
       %1582 = OpLabel
       %1645 = OpCompositeExtract %float %1590 0
       %1646 = OpFAdd %float %1645 %float_1
       %1583 = OpCompositeInsert %v3float %1646 %1590 0
               OpBranch %1579
       %1586 = OpLabel
       %1647 = OpCompositeExtract %float %1580 3
       %1648 = OpExtInst %float %1 Sqrt %1647
       %1649 = OpExtInst %float %1 Fma %1648 %float_2 %float_n1
       %1650 = OpExtInst %float %1 FAbs %1649
       %1570 = OpExtInst %float %1 Fma %1650 %1567 %1569
       %1566 = OpVectorTimesScalar %v3float %1565 %float_2
       %1568 = OpFMul %float %1567 %float_0_5
               OpBranch %1564
       %1564 = OpLabel
       %1572 = OpIAdd %uint %1571 %uint_1
               OpBranch %1561
       %1574 = OpLabel
       %1651 = OpExtInst %float %1 FMix %float_n1 %float_1 %1569
       %1652 = OpExtInst %float %1 FClamp %1651 %float_0 %float_1
       %1653 = OpFAdd %float %1550 %1652
       %1654 = OpFNegate %float %1653
       %1655 = OpExtInst %float %1 Fma %887 %1443 %1654
       %1656 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_2
       %1657 = OpLoad %float %1656
       %1658 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_0
       %1659 = OpLoad %float %1658
       %1660 = OpFSub %float %1659 %float_n1
       %1661 = OpExtInst %float %1 FAbs %1660
       %1662 = OpFOrdGreaterThan %bool %1661 %float_9_99999975en06
       %1663 = OpFOrdGreaterThanEqual %bool %1659 %float_n1
       %1664 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_1
       %1665 = OpLoad %float %1664
       %1666 = OpSelect %float %1663 %1659 %1665
       %1667 = OpSelect %float %1662 %1666 %1659
       %1668 = OpFSub %float %1667 %float_1
       %1669 = OpExtInst %float %1 FAbs %1668
       %1670 = OpFOrdGreaterThan %bool %1669 %float_9_99999975en06
       %1671 = OpFOrdGreaterThanEqual %bool %1667 %float_1
       %1672 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_2
       %1673 = OpLoad %float %1672
       %1674 = OpSelect %float %1671 %1673 %1659
       %1675 = OpSelect %float %1670 %1674 %1659
       %1676 = OpExtInst %float %1 FAbs %1675
       %1677 = OpFOrdGreaterThan %bool %1676 %float_9_99999975en06
       %1678 = OpFOrdGreaterThanEqual %bool %1675 %float_0
       %1679 = OpSelect %float %1678 %float_1 %float_n1
       %1680 = OpSelect %float %1677 %1679 %float_1
       %1681 = OpExtInst %float %1 NMax %1680 %float_n1
       %1682 = OpExtInst %float %1 NMin %1681 %float_1
       %1683 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_4 %int_3
       %1684 = OpLoad %float %1683
       %1685 = OpCompositeConstruct %v3float %1682 %1684 %float_0
       %1686 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_6
       %1687 = OpLoad %v4float %1686
       %1688 = OpVectorShuffle %v3float %1687 %1687 0 1 2
       %1689 = OpFAdd %v3float %1685 %1688
       %1690 = OpExtInst %v3float %1 NMax %1689 %279
       %1691 = OpExtInst %v3float %1 NMin %1690 %127
       %1692 = OpCompositeExtract %float %593 0
       %1693 = OpCompositeExtract %float %642 0
       %1694 = OpCompositeExtract %float %593 1
       %1695 = OpCompositeExtract %float %642 1
       %1696 = OpCompositeConstruct %v2float %1692 %1694
       %1697 = OpCompositeConstruct %v2float %1693 %1695
       %1698 = OpCompositeExtract %float %1691 0
       %1699 = OpCompositeExtract %float %1691 1
       %1700 = OpCompositeConstruct %v2float %1698 %1699
       %1701 = OpFMul %v2float %1696 %1700
       %1702 = OpFMul %v2float %1700 %1697
       %1703 = OpCompositeExtract %float %1701 0
       %1704 = OpCompositeExtract %float %1702 0
       %1705 = OpCompositeExtract %float %1701 1
       %1706 = OpCompositeExtract %float %1702 1
       %1707 = OpFAdd %float %1703 %1705
       %1708 = OpFAdd %float %1704 %1706
       %1709 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_9 %int_0
       %1710 = OpLoad %float %1709
       %1711 = OpFMul %float %1707 %1710
       %1712 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_9 %int_2
       %1713 = OpLoad %float %1712
       %1714 = OpFSub %float %1161 %1713
       %1715 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_9 %int_3
       %1716 = OpLoad %float %1715
       %1717 = OpCompositeConstruct %v3float %1716 %1716 %1716
       %1718 = OpFMul %v3float %593 %1717
       %1719 = OpFMul %v3float %1717 %642
       %1720 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_10 %int_0
       %1721 = OpLoad %float %1720
       %1722 = OpCompositeConstruct %v3float %1721 %1721 %1721
       %1723 = OpFMul %v3float %1718 %1722
       %1724 = OpFMul %v3float %1719 %1722
       %1725 = OpCompositeExtract %float %761 1
       %1726 = OpCompositeConstruct %v3float %1725 %1725 %1725
       %1727 = OpFMul %v3float %1723 %1726
       %1728 = OpFMul %v3float %1724 %1726
       %1729 = OpFMul %v3float %1728 %281
       %1730 = OpCompositeExtract %float %1729 0
       %1731 = OpCompositeExtract %float %1729 1
       %1732 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_10 %int_2
       %1733 = OpLoad %float %1732
       %1734 = OpFMul %float %1161 %1733
       %1735 = OpCompositeExtract %float %1729 2
       %1736 = OpCompositeConstruct %v2float %1734 %1734
       %1737 = OpCompositeConstruct %v2float %1735 %1735
       %1738 = OpFAdd %v2float %1736 %1737
       %1739 = OpCompositeExtract %float %1738 0
       %1740 = OpCompositeConstruct %v3float %1730 %1731 %1739
       %1741 = OpVectorTimesScalar %v3float %1740 %float_4_76837158en07
       %1742 = OpFAdd %v3float %1741 %137
       %1743 = OpExtInst %v3float %1 Fma %1727 %281 %1742
       %1744 = OpExtInst %v3float %1 Floor %1743
       %1745 = OpFNegate %v3float %1744
       %1746 = OpExtInst %v3float %1 Fma %1727 %281 %1745
       %1747 = OpVectorTimesScalar %v3float %1746 %float_2097152
       %1748 = OpFAdd %v3float %1747 %1740
       %1749 = OpVectorTimesScalar %v3float %1748 %float_1
               OpBranch %1750
       %1750 = OpLabel
       %1751 = OpPhi %v3float %1749 %1574 %1752 %1753
       %1754 = OpPhi %float %float_1 %1574 %1755 %1753
       %1756 = OpPhi %float %float_0 %1574 %1757 %1753
       %1758 = OpPhi %uint %uint_0 %1574 %1759 %1753
       %1760 = OpULessThan %bool %1758 %uint_6
               OpLoopMerge %1761 %1753 DontUnroll
               OpBranchConditional %1760 %1753 %1761
       %1753 = OpLabel
       %1762 = OpExtInst %v3float %1 Fract %1751
       %1763 = OpExtInst %v3float %1 Floor %1751
       %1764 = OpDot %float %1763 %386
       %1765 = OpFAdd %float %1764 %float_19
       %1766 = OpFAdd %float %1764 %float_47
       %1767 = OpFAdd %float %1764 %float_66
       %1768 = OpFAdd %float %1764 %float_101
       %1769 = OpFAdd %float %1764 %float_120
       %1770 = OpFAdd %float %1764 %float_148
       %1771 = OpFAdd %float %1764 %float_167
       %1772 = OpConvertFToS %int %1764
       %1773 = OpCompositeConstruct %v3int %1772 %int_0 %int_0
       %1774 = OpBitcast %v3uint %1773
       %1775 = OpIMul %v3uint %1774 %402
       %1776 = OpIAdd %v3uint %1775 %404
       %1777 = OpCompositeExtract %uint %1776 1
       %1778 = OpCompositeExtract %uint %1776 2
       %1779 = OpIMul %uint %1777 %1778
       %1780 = OpCompositeExtract %uint %1776 0
       %1781 = OpIAdd %uint %1780 %1779
       %1782 = OpIMul %uint %1778 %1781
       %1783 = OpIAdd %uint %1777 %1782
       %1784 = OpIMul %uint %1781 %1783
       %1785 = OpIAdd %uint %1778 %1784
       %1786 = OpIMul %uint %1783 %1785
       %1787 = OpIAdd %uint %1781 %1786
       %1788 = OpCompositeInsert %v3uint %1787 %551 0
       %1789 = OpBitwiseAnd %v3uint %405 %406
       %1790 = OpShiftRightLogical %v3uint %1788 %1789
       %1791 = OpCompositeExtract %uint %1790 0
       %1792 = OpCompositeConstruct %v3uint %1791 %1791 %1791
       %1793 = OpBitwiseAnd %v3uint %1792 %387
       %1794 = OpConvertUToF %v3float %1793
       %1795 = OpExtInst %v3float %1 Fma %1794 %391 %279
       %1796 = OpDot %float %1795 %1762
       %1797 = OpConvertFToS %int %1765
       %1798 = OpFSub %v3float %1762 %351
       %1799 = OpCompositeConstruct %v3int %1797 %int_0 %int_0
       %1800 = OpBitcast %v3uint %1799
       %1801 = OpIMul %v3uint %1800 %402
       %1802 = OpIAdd %v3uint %1801 %404
       %1803 = OpCompositeExtract %uint %1802 1
       %1804 = OpCompositeExtract %uint %1802 2
       %1805 = OpIMul %uint %1803 %1804
       %1806 = OpCompositeExtract %uint %1802 0
       %1807 = OpIAdd %uint %1806 %1805
       %1808 = OpIMul %uint %1804 %1807
       %1809 = OpIAdd %uint %1803 %1808
       %1810 = OpIMul %uint %1807 %1809
       %1811 = OpIAdd %uint %1804 %1810
       %1812 = OpIMul %uint %1809 %1811
       %1813 = OpIAdd %uint %1807 %1812
       %1814 = OpCompositeInsert %v3uint %1813 %551 0
       %1815 = OpShiftRightLogical %v3uint %1814 %1789
       %1816 = OpCompositeExtract %uint %1815 0
       %1817 = OpCompositeConstruct %v3uint %1816 %1816 %1816
       %1818 = OpBitwiseAnd %v3uint %1817 %387
       %1819 = OpConvertUToF %v3float %1818
       %1820 = OpExtInst %v3float %1 Fma %1819 %391 %279
       %1821 = OpDot %float %1820 %1798
       %1822 = OpConvertFToS %int %1766
       %1823 = OpFSub %v3float %1762 %352
       %1824 = OpCompositeConstruct %v3int %1822 %int_0 %int_0
       %1825 = OpBitcast %v3uint %1824
       %1826 = OpIMul %v3uint %1825 %402
       %1827 = OpIAdd %v3uint %1826 %404
       %1828 = OpCompositeExtract %uint %1827 1
       %1829 = OpCompositeExtract %uint %1827 2
       %1830 = OpIMul %uint %1828 %1829
       %1831 = OpCompositeExtract %uint %1827 0
       %1832 = OpIAdd %uint %1831 %1830
       %1833 = OpIMul %uint %1829 %1832
       %1834 = OpIAdd %uint %1828 %1833
       %1835 = OpIMul %uint %1832 %1834
       %1836 = OpIAdd %uint %1829 %1835
       %1837 = OpIMul %uint %1834 %1836
       %1838 = OpIAdd %uint %1832 %1837
       %1839 = OpCompositeInsert %v3uint %1838 %551 0
       %1840 = OpShiftRightLogical %v3uint %1839 %1789
       %1841 = OpCompositeExtract %uint %1840 0
       %1842 = OpCompositeConstruct %v3uint %1841 %1841 %1841
       %1843 = OpBitwiseAnd %v3uint %1842 %387
       %1844 = OpConvertUToF %v3float %1843
       %1845 = OpExtInst %v3float %1 Fma %1844 %391 %279
       %1846 = OpDot %float %1845 %1823
       %1847 = OpConvertFToS %int %1767
       %1848 = OpFSub %v3float %1762 %134
       %1849 = OpCompositeConstruct %v3int %1847 %int_0 %int_0
       %1850 = OpBitcast %v3uint %1849
       %1851 = OpIMul %v3uint %1850 %402
       %1852 = OpIAdd %v3uint %1851 %404
       %1853 = OpCompositeExtract %uint %1852 1
       %1854 = OpCompositeExtract %uint %1852 2
       %1855 = OpIMul %uint %1853 %1854
       %1856 = OpCompositeExtract %uint %1852 0
       %1857 = OpIAdd %uint %1856 %1855
       %1858 = OpIMul %uint %1854 %1857
       %1859 = OpIAdd %uint %1853 %1858
       %1860 = OpIMul %uint %1857 %1859
       %1861 = OpIAdd %uint %1854 %1860
       %1862 = OpIMul %uint %1859 %1861
       %1863 = OpIAdd %uint %1857 %1862
       %1864 = OpCompositeInsert %v3uint %1863 %551 0
       %1865 = OpShiftRightLogical %v3uint %1864 %1789
       %1866 = OpCompositeExtract %uint %1865 0
       %1867 = OpCompositeConstruct %v3uint %1866 %1866 %1866
       %1868 = OpBitwiseAnd %v3uint %1867 %387
       %1869 = OpConvertUToF %v3float %1868
       %1870 = OpExtInst %v3float %1 Fma %1869 %391 %279
       %1871 = OpDot %float %1870 %1848
       %1872 = OpConvertFToS %int %1768
       %1873 = OpFSub %v3float %1762 %291
       %1874 = OpCompositeConstruct %v3int %1872 %int_0 %int_0
       %1875 = OpBitcast %v3uint %1874
       %1876 = OpIMul %v3uint %1875 %402
       %1877 = OpIAdd %v3uint %1876 %404
       %1878 = OpCompositeExtract %uint %1877 1
       %1879 = OpCompositeExtract %uint %1877 2
       %1880 = OpIMul %uint %1878 %1879
       %1881 = OpCompositeExtract %uint %1877 0
       %1882 = OpIAdd %uint %1881 %1880
       %1883 = OpIMul %uint %1879 %1882
       %1884 = OpIAdd %uint %1878 %1883
       %1885 = OpIMul %uint %1882 %1884
       %1886 = OpIAdd %uint %1879 %1885
       %1887 = OpIMul %uint %1884 %1886
       %1888 = OpIAdd %uint %1882 %1887
       %1889 = OpCompositeInsert %v3uint %1888 %551 0
       %1890 = OpShiftRightLogical %v3uint %1889 %1789
       %1891 = OpCompositeExtract %uint %1890 0
       %1892 = OpCompositeConstruct %v3uint %1891 %1891 %1891
       %1893 = OpBitwiseAnd %v3uint %1892 %387
       %1894 = OpConvertUToF %v3float %1893
       %1895 = OpExtInst %v3float %1 Fma %1894 %391 %279
       %1896 = OpDot %float %1895 %1873
       %1897 = OpConvertFToS %int %1769
       %1898 = OpFSub %v3float %1762 %140
       %1899 = OpCompositeConstruct %v3int %1897 %int_0 %int_0
       %1900 = OpBitcast %v3uint %1899
       %1901 = OpIMul %v3uint %1900 %402
       %1902 = OpIAdd %v3uint %1901 %404
       %1903 = OpCompositeExtract %uint %1902 1
       %1904 = OpCompositeExtract %uint %1902 2
       %1905 = OpIMul %uint %1903 %1904
       %1906 = OpCompositeExtract %uint %1902 0
       %1907 = OpIAdd %uint %1906 %1905
       %1908 = OpIMul %uint %1904 %1907
       %1909 = OpIAdd %uint %1903 %1908
       %1910 = OpIMul %uint %1907 %1909
       %1911 = OpIAdd %uint %1904 %1910
       %1912 = OpIMul %uint %1909 %1911
       %1913 = OpIAdd %uint %1907 %1912
       %1914 = OpCompositeInsert %v3uint %1913 %551 0
       %1915 = OpShiftRightLogical %v3uint %1914 %1789
       %1916 = OpCompositeExtract %uint %1915 0
       %1917 = OpCompositeConstruct %v3uint %1916 %1916 %1916
       %1918 = OpBitwiseAnd %v3uint %1917 %387
       %1919 = OpConvertUToF %v3float %1918
       %1920 = OpExtInst %v3float %1 Fma %1919 %391 %279
       %1921 = OpDot %float %1920 %1898
       %1922 = OpConvertFToS %int %1770
       %1923 = OpFSub %v3float %1762 %135
       %1924 = OpCompositeConstruct %v3int %1922 %int_0 %int_0
       %1925 = OpBitcast %v3uint %1924
       %1926 = OpIMul %v3uint %1925 %402
       %1927 = OpIAdd %v3uint %1926 %404
       %1928 = OpCompositeExtract %uint %1927 1
       %1929 = OpCompositeExtract %uint %1927 2
       %1930 = OpIMul %uint %1928 %1929
       %1931 = OpCompositeExtract %uint %1927 0
       %1932 = OpIAdd %uint %1931 %1930
       %1933 = OpIMul %uint %1929 %1932
       %1934 = OpIAdd %uint %1928 %1933
       %1935 = OpIMul %uint %1932 %1934
       %1936 = OpIAdd %uint %1929 %1935
       %1937 = OpIMul %uint %1934 %1936
       %1938 = OpIAdd %uint %1932 %1937
       %1939 = OpCompositeInsert %v3uint %1938 %551 0
       %1940 = OpShiftRightLogical %v3uint %1939 %1789
       %1941 = OpCompositeExtract %uint %1940 0
       %1942 = OpCompositeConstruct %v3uint %1941 %1941 %1941
       %1943 = OpBitwiseAnd %v3uint %1942 %387
       %1944 = OpConvertUToF %v3float %1943
       %1945 = OpExtInst %v3float %1 Fma %1944 %391 %279
       %1946 = OpDot %float %1945 %1923
       %1947 = OpConvertFToS %int %1771
       %1948 = OpFSub %v3float %1762 %127
       %1949 = OpCompositeConstruct %v3int %1947 %int_0 %int_0
       %1950 = OpBitcast %v3uint %1949
       %1951 = OpIMul %v3uint %1950 %402
       %1952 = OpIAdd %v3uint %1951 %404
       %1953 = OpCompositeExtract %uint %1952 1
       %1954 = OpCompositeExtract %uint %1952 2
       %1955 = OpIMul %uint %1953 %1954
       %1956 = OpCompositeExtract %uint %1952 0
       %1957 = OpIAdd %uint %1956 %1955
       %1958 = OpIMul %uint %1954 %1957
       %1959 = OpIAdd %uint %1953 %1958
       %1960 = OpIMul %uint %1957 %1959
       %1961 = OpIAdd %uint %1954 %1960
       %1962 = OpIMul %uint %1959 %1961
       %1963 = OpIAdd %uint %1957 %1962
       %1964 = OpCompositeInsert %v3uint %1963 %551 0
       %1965 = OpShiftRightLogical %v3uint %1964 %1789
       %1966 = OpCompositeExtract %uint %1965 0
       %1967 = OpCompositeConstruct %v3uint %1966 %1966 %1966
       %1968 = OpBitwiseAnd %v3uint %1967 %387
       %1969 = OpConvertUToF %v3float %1968
       %1970 = OpExtInst %v3float %1 Fma %1969 %391 %279
       %1971 = OpDot %float %1970 %1948
       %1972 = OpCompositeExtract %float %1762 0
       %1973 = OpCompositeExtract %float %1762 1
       %1974 = OpCompositeExtract %float %1762 2
       %1975 = OpCompositeConstruct %v4float %1972 %1973 %1974 %float_0
       %1976 = OpFMul %v4float %1975 %1975
       %1977 = OpFMul %v4float %1976 %1975
       %1978 = OpVectorTimesScalar %v4float %1975 %float_6
       %1979 = OpFSub %v4float %1978 %382
       %1980 = OpExtInst %v4float %1 Fma %1975 %1979 %383
       %1981 = OpFMul %v4float %1977 %1980
       %1982 = OpCompositeExtract %float %1981 0
       %1983 = OpExtInst %float %1 FMix %1796 %1821 %1982
       %1984 = OpExtInst %float %1 FMix %1846 %1871 %1982
       %1985 = OpCompositeExtract %float %1981 1
       %1986 = OpExtInst %float %1 FMix %1983 %1984 %1985
       %1987 = OpExtInst %float %1 FMix %1896 %1921 %1982
       %1988 = OpExtInst %float %1 FMix %1946 %1971 %1982
       %1989 = OpExtInst %float %1 FMix %1987 %1988 %1985
       %1990 = OpCompositeExtract %float %1981 2
       %1991 = OpExtInst %float %1 FMix %1986 %1989 %1990
       %1757 = OpExtInst %float %1 Fma %1991 %1754 %1756
       %1752 = OpVectorTimesScalar %v3float %1751 %float_2
       %1755 = OpFMul %float %1754 %float_0_5
       %1759 = OpIAdd %uint %1758 %uint_1
               OpBranch %1750
       %1761 = OpLabel
       %1992 = OpExtInst %float %1 Fma %1756 %float_0_5 %float_0_5
       %1993 = OpExtInst %float %1 FMix %float_0 %float_1 %1992
       %1994 = OpExtInst %float %1 FClamp %1993 %float_0 %float_1
       %1995 = OpExtInst %float %1 FMix %1161 %1714 %1994
       %1996 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_10 %int_3
       %1997 = OpLoad %float %1996
       %1998 = OpFMul %float %1997 %1995
       %1999 = OpExtInst %float %1 Fma %1708 %1710 %1998
       %2000 = OpExtInst %float %1 Floor %1711
       %2001 = OpFNegate %float %2000
       %2002 = OpExtInst %float %1 Fma %1707 %1710 %2001
       %2003 = OpExtInst %float %1 Fma %2002 %float_2097152 %1999
       %2004 = OpExtInst %float %1 Floor %2003
       %2005 = OpFMul %float %2000 %float_n6_28318548
       %2006 = OpExtInst %float %1 Fma %1711 %float_6_28318548 %2005
       %2007 = OpFMul %float %2004 %float_n6_28318548
       %2008 = OpExtInst %float %1 Fma %1999 %float_6_28318548 %2007
       %2009 = OpExtInst %float %1 Fma %2006 %float_2097152 %2008
       %2010 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_12 %int_0
       %2011 = OpLoad %float %2010
       %2012 = OpCompositeConstruct %v3float %2011 %2011 %2011
       %2013 = OpFMul %v3float %593 %2012
       %2014 = OpFMul %v3float %2012 %642
       %2015 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_12 %int_1
       %2016 = OpLoad %float %2015
       %2017 = OpCompositeConstruct %v3float %2016 %2016 %2016
       %2018 = OpFMul %v3float %2013 %2017
       %2019 = OpFMul %v3float %2014 %2017
       %2020 = OpFMul %v3float %2019 %508
       %2021 = OpCompositeExtract %float %2020 0
       %2022 = OpCompositeExtract %float %2020 1
       %2023 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_12 %int_3
       %2024 = OpLoad %float %2023
       %2025 = OpFMul %float %1161 %2024
       %2026 = OpCompositeExtract %float %2020 2
       %2027 = OpCompositeConstruct %v2float %2025 %2025
       %2028 = OpCompositeConstruct %v2float %2026 %2026
       %2029 = OpFAdd %v2float %2027 %2028
       %2030 = OpCompositeExtract %float %2029 0
       %2031 = OpCompositeConstruct %v3float %2021 %2022 %2030
       %2032 = OpVectorTimesScalar %v3float %2031 %float_4_76837158en07
       %2033 = OpFAdd %v3float %2032 %137
       %2034 = OpExtInst %v3float %1 Fma %2018 %508 %2033
       %2035 = OpExtInst %v3float %1 Floor %2034
       %2036 = OpFNegate %v3float %2035
       %2037 = OpExtInst %v3float %1 Fma %2018 %508 %2036
       %2038 = OpVectorTimesScalar %v3float %2037 %float_2097152
       %2039 = OpFAdd %v3float %2038 %2031
       %2040 = OpVectorTimesScalar %v3float %2039 %float_1
               OpBranch %2041
       %2041 = OpLabel
       %2042 = OpPhi %v3float %2040 %1761 %2043 %2044
       %2045 = OpPhi %float %float_1 %1761 %2046 %2044
       %2047 = OpPhi %float %float_0 %1761 %2048 %2044
       %2049 = OpPhi %uint %uint_0 %1761 %2050 %2044
       %2051 = OpULessThan %bool %2049 %uint_10
               OpLoopMerge %2052 %2044 DontUnroll
               OpBranchConditional %2051 %2044 %2052
       %2044 = OpLabel
       %2053 = OpExtInst %v3float %1 Fract %2042
       %2054 = OpExtInst %v3float %1 Floor %2042
       %2055 = OpDot %float %2054 %386
       %2056 = OpFAdd %float %2055 %float_19
       %2057 = OpFAdd %float %2055 %float_47
       %2058 = OpFAdd %float %2055 %float_66
       %2059 = OpFAdd %float %2055 %float_101
       %2060 = OpFAdd %float %2055 %float_120
       %2061 = OpFAdd %float %2055 %float_148
       %2062 = OpFAdd %float %2055 %float_167
       %2063 = OpConvertFToS %int %2055
       %2064 = OpCompositeConstruct %v3int %2063 %int_0 %int_0
       %2065 = OpBitcast %v3uint %2064
       %2066 = OpIMul %v3uint %2065 %402
       %2067 = OpIAdd %v3uint %2066 %404
       %2068 = OpCompositeExtract %uint %2067 1
       %2069 = OpCompositeExtract %uint %2067 2
       %2070 = OpIMul %uint %2068 %2069
       %2071 = OpCompositeExtract %uint %2067 0
       %2072 = OpIAdd %uint %2071 %2070
       %2073 = OpIMul %uint %2069 %2072
       %2074 = OpIAdd %uint %2068 %2073
       %2075 = OpIMul %uint %2072 %2074
       %2076 = OpIAdd %uint %2069 %2075
       %2077 = OpIMul %uint %2074 %2076
       %2078 = OpIAdd %uint %2072 %2077
       %2079 = OpCompositeInsert %v3uint %2078 %551 0
       %2080 = OpBitwiseAnd %v3uint %405 %406
       %2081 = OpShiftRightLogical %v3uint %2079 %2080
       %2082 = OpCompositeExtract %uint %2081 0
       %2083 = OpCompositeConstruct %v3uint %2082 %2082 %2082
       %2084 = OpBitwiseAnd %v3uint %2083 %387
       %2085 = OpConvertUToF %v3float %2084
       %2086 = OpExtInst %v3float %1 Fma %2085 %391 %279
       %2087 = OpDot %float %2086 %2053
       %2088 = OpConvertFToS %int %2056
       %2089 = OpFSub %v3float %2053 %351
       %2090 = OpCompositeConstruct %v3int %2088 %int_0 %int_0
       %2091 = OpBitcast %v3uint %2090
       %2092 = OpIMul %v3uint %2091 %402
       %2093 = OpIAdd %v3uint %2092 %404
       %2094 = OpCompositeExtract %uint %2093 1
       %2095 = OpCompositeExtract %uint %2093 2
       %2096 = OpIMul %uint %2094 %2095
       %2097 = OpCompositeExtract %uint %2093 0
       %2098 = OpIAdd %uint %2097 %2096
       %2099 = OpIMul %uint %2095 %2098
       %2100 = OpIAdd %uint %2094 %2099
       %2101 = OpIMul %uint %2098 %2100
       %2102 = OpIAdd %uint %2095 %2101
       %2103 = OpIMul %uint %2100 %2102
       %2104 = OpIAdd %uint %2098 %2103
       %2105 = OpCompositeInsert %v3uint %2104 %551 0
       %2106 = OpShiftRightLogical %v3uint %2105 %2080
       %2107 = OpCompositeExtract %uint %2106 0
       %2108 = OpCompositeConstruct %v3uint %2107 %2107 %2107
       %2109 = OpBitwiseAnd %v3uint %2108 %387
       %2110 = OpConvertUToF %v3float %2109
       %2111 = OpExtInst %v3float %1 Fma %2110 %391 %279
       %2112 = OpDot %float %2111 %2089
       %2113 = OpConvertFToS %int %2057
       %2114 = OpFSub %v3float %2053 %352
       %2115 = OpCompositeConstruct %v3int %2113 %int_0 %int_0
       %2116 = OpBitcast %v3uint %2115
       %2117 = OpIMul %v3uint %2116 %402
       %2118 = OpIAdd %v3uint %2117 %404
       %2119 = OpCompositeExtract %uint %2118 1
       %2120 = OpCompositeExtract %uint %2118 2
       %2121 = OpIMul %uint %2119 %2120
       %2122 = OpCompositeExtract %uint %2118 0
       %2123 = OpIAdd %uint %2122 %2121
       %2124 = OpIMul %uint %2120 %2123
       %2125 = OpIAdd %uint %2119 %2124
       %2126 = OpIMul %uint %2123 %2125
       %2127 = OpIAdd %uint %2120 %2126
       %2128 = OpIMul %uint %2125 %2127
       %2129 = OpIAdd %uint %2123 %2128
       %2130 = OpCompositeInsert %v3uint %2129 %551 0
       %2131 = OpShiftRightLogical %v3uint %2130 %2080
       %2132 = OpCompositeExtract %uint %2131 0
       %2133 = OpCompositeConstruct %v3uint %2132 %2132 %2132
       %2134 = OpBitwiseAnd %v3uint %2133 %387
       %2135 = OpConvertUToF %v3float %2134
       %2136 = OpExtInst %v3float %1 Fma %2135 %391 %279
       %2137 = OpDot %float %2136 %2114
       %2138 = OpConvertFToS %int %2058
       %2139 = OpFSub %v3float %2053 %134
       %2140 = OpCompositeConstruct %v3int %2138 %int_0 %int_0
       %2141 = OpBitcast %v3uint %2140
       %2142 = OpIMul %v3uint %2141 %402
       %2143 = OpIAdd %v3uint %2142 %404
       %2144 = OpCompositeExtract %uint %2143 1
       %2145 = OpCompositeExtract %uint %2143 2
       %2146 = OpIMul %uint %2144 %2145
       %2147 = OpCompositeExtract %uint %2143 0
       %2148 = OpIAdd %uint %2147 %2146
       %2149 = OpIMul %uint %2145 %2148
       %2150 = OpIAdd %uint %2144 %2149
       %2151 = OpIMul %uint %2148 %2150
       %2152 = OpIAdd %uint %2145 %2151
       %2153 = OpIMul %uint %2150 %2152
       %2154 = OpIAdd %uint %2148 %2153
       %2155 = OpCompositeInsert %v3uint %2154 %551 0
       %2156 = OpShiftRightLogical %v3uint %2155 %2080
       %2157 = OpCompositeExtract %uint %2156 0
       %2158 = OpCompositeConstruct %v3uint %2157 %2157 %2157
       %2159 = OpBitwiseAnd %v3uint %2158 %387
       %2160 = OpConvertUToF %v3float %2159
       %2161 = OpExtInst %v3float %1 Fma %2160 %391 %279
       %2162 = OpDot %float %2161 %2139
       %2163 = OpConvertFToS %int %2059
       %2164 = OpFSub %v3float %2053 %291
       %2165 = OpCompositeConstruct %v3int %2163 %int_0 %int_0
       %2166 = OpBitcast %v3uint %2165
       %2167 = OpIMul %v3uint %2166 %402
       %2168 = OpIAdd %v3uint %2167 %404
       %2169 = OpCompositeExtract %uint %2168 1
       %2170 = OpCompositeExtract %uint %2168 2
       %2171 = OpIMul %uint %2169 %2170
       %2172 = OpCompositeExtract %uint %2168 0
       %2173 = OpIAdd %uint %2172 %2171
       %2174 = OpIMul %uint %2170 %2173
       %2175 = OpIAdd %uint %2169 %2174
       %2176 = OpIMul %uint %2173 %2175
       %2177 = OpIAdd %uint %2170 %2176
       %2178 = OpIMul %uint %2175 %2177
       %2179 = OpIAdd %uint %2173 %2178
       %2180 = OpCompositeInsert %v3uint %2179 %551 0
       %2181 = OpShiftRightLogical %v3uint %2180 %2080
       %2182 = OpCompositeExtract %uint %2181 0
       %2183 = OpCompositeConstruct %v3uint %2182 %2182 %2182
       %2184 = OpBitwiseAnd %v3uint %2183 %387
       %2185 = OpConvertUToF %v3float %2184
       %2186 = OpExtInst %v3float %1 Fma %2185 %391 %279
       %2187 = OpDot %float %2186 %2164
       %2188 = OpConvertFToS %int %2060
       %2189 = OpFSub %v3float %2053 %140
       %2190 = OpCompositeConstruct %v3int %2188 %int_0 %int_0
       %2191 = OpBitcast %v3uint %2190
       %2192 = OpIMul %v3uint %2191 %402
       %2193 = OpIAdd %v3uint %2192 %404
       %2194 = OpCompositeExtract %uint %2193 1
       %2195 = OpCompositeExtract %uint %2193 2
       %2196 = OpIMul %uint %2194 %2195
       %2197 = OpCompositeExtract %uint %2193 0
       %2198 = OpIAdd %uint %2197 %2196
       %2199 = OpIMul %uint %2195 %2198
       %2200 = OpIAdd %uint %2194 %2199
       %2201 = OpIMul %uint %2198 %2200
       %2202 = OpIAdd %uint %2195 %2201
       %2203 = OpIMul %uint %2200 %2202
       %2204 = OpIAdd %uint %2198 %2203
       %2205 = OpCompositeInsert %v3uint %2204 %551 0
       %2206 = OpShiftRightLogical %v3uint %2205 %2080
       %2207 = OpCompositeExtract %uint %2206 0
       %2208 = OpCompositeConstruct %v3uint %2207 %2207 %2207
       %2209 = OpBitwiseAnd %v3uint %2208 %387
       %2210 = OpConvertUToF %v3float %2209
       %2211 = OpExtInst %v3float %1 Fma %2210 %391 %279
       %2212 = OpDot %float %2211 %2189
       %2213 = OpConvertFToS %int %2061
       %2214 = OpFSub %v3float %2053 %135
       %2215 = OpCompositeConstruct %v3int %2213 %int_0 %int_0
       %2216 = OpBitcast %v3uint %2215
       %2217 = OpIMul %v3uint %2216 %402
       %2218 = OpIAdd %v3uint %2217 %404
       %2219 = OpCompositeExtract %uint %2218 1
       %2220 = OpCompositeExtract %uint %2218 2
       %2221 = OpIMul %uint %2219 %2220
       %2222 = OpCompositeExtract %uint %2218 0
       %2223 = OpIAdd %uint %2222 %2221
       %2224 = OpIMul %uint %2220 %2223
       %2225 = OpIAdd %uint %2219 %2224
       %2226 = OpIMul %uint %2223 %2225
       %2227 = OpIAdd %uint %2220 %2226
       %2228 = OpIMul %uint %2225 %2227
       %2229 = OpIAdd %uint %2223 %2228
       %2230 = OpCompositeInsert %v3uint %2229 %551 0
       %2231 = OpShiftRightLogical %v3uint %2230 %2080
       %2232 = OpCompositeExtract %uint %2231 0
       %2233 = OpCompositeConstruct %v3uint %2232 %2232 %2232
       %2234 = OpBitwiseAnd %v3uint %2233 %387
       %2235 = OpConvertUToF %v3float %2234
       %2236 = OpExtInst %v3float %1 Fma %2235 %391 %279
       %2237 = OpDot %float %2236 %2214
       %2238 = OpConvertFToS %int %2062
       %2239 = OpFSub %v3float %2053 %127
       %2240 = OpCompositeConstruct %v3int %2238 %int_0 %int_0
       %2241 = OpBitcast %v3uint %2240
       %2242 = OpIMul %v3uint %2241 %402
       %2243 = OpIAdd %v3uint %2242 %404
       %2244 = OpCompositeExtract %uint %2243 1
       %2245 = OpCompositeExtract %uint %2243 2
       %2246 = OpIMul %uint %2244 %2245
       %2247 = OpCompositeExtract %uint %2243 0
       %2248 = OpIAdd %uint %2247 %2246
       %2249 = OpIMul %uint %2245 %2248
       %2250 = OpIAdd %uint %2244 %2249
       %2251 = OpIMul %uint %2248 %2250
       %2252 = OpIAdd %uint %2245 %2251
       %2253 = OpIMul %uint %2250 %2252
       %2254 = OpIAdd %uint %2248 %2253
       %2255 = OpCompositeInsert %v3uint %2254 %551 0
       %2256 = OpShiftRightLogical %v3uint %2255 %2080
       %2257 = OpCompositeExtract %uint %2256 0
       %2258 = OpCompositeConstruct %v3uint %2257 %2257 %2257
       %2259 = OpBitwiseAnd %v3uint %2258 %387
       %2260 = OpConvertUToF %v3float %2259
       %2261 = OpExtInst %v3float %1 Fma %2260 %391 %279
       %2262 = OpDot %float %2261 %2239
       %2263 = OpCompositeExtract %float %2053 0
       %2264 = OpCompositeExtract %float %2053 1
       %2265 = OpCompositeExtract %float %2053 2
       %2266 = OpCompositeConstruct %v4float %2263 %2264 %2265 %float_0
       %2267 = OpFMul %v4float %2266 %2266
       %2268 = OpFMul %v4float %2267 %2266
       %2269 = OpVectorTimesScalar %v4float %2266 %float_6
       %2270 = OpFSub %v4float %2269 %382
       %2271 = OpExtInst %v4float %1 Fma %2266 %2270 %383
       %2272 = OpFMul %v4float %2268 %2271
       %2273 = OpCompositeExtract %float %2272 0
       %2274 = OpExtInst %float %1 FMix %2087 %2112 %2273
       %2275 = OpExtInst %float %1 FMix %2137 %2162 %2273
       %2276 = OpCompositeExtract %float %2272 1
       %2277 = OpExtInst %float %1 FMix %2274 %2275 %2276
       %2278 = OpExtInst %float %1 FMix %2187 %2212 %2273
       %2279 = OpExtInst %float %1 FMix %2237 %2262 %2273
       %2280 = OpExtInst %float %1 FMix %2278 %2279 %2276
       %2281 = OpCompositeExtract %float %2272 2
       %2282 = OpExtInst %float %1 FMix %2277 %2280 %2281
       %2283 = OpExtInst %float %1 FAbs %2282
       %2048 = OpExtInst %float %1 Fma %2283 %2045 %2047
       %2043 = OpVectorTimesScalar %v3float %2042 %float_2
       %2046 = OpFMul %float %2045 %float_0_5
       %2050 = OpIAdd %uint %2049 %uint_1
               OpBranch %2041
       %2052 = OpLabel
       %2284 = OpExtInst %float %1 FMix %float_0 %float_1 %2047
       %2285 = OpFMul %v3float %2019 %510
       %2286 = OpCompositeExtract %float %2285 0
       %2287 = OpCompositeExtract %float %2285 1
       %2288 = OpCompositeExtract %float %2285 2
       %2289 = OpCompositeConstruct %v2float %2288 %2288
       %2290 = OpFAdd %v2float %2027 %2289
       %2291 = OpCompositeExtract %float %2290 0
       %2292 = OpCompositeConstruct %v3float %2286 %2287 %2291
       %2293 = OpVectorTimesScalar %v3float %2292 %float_4_76837158en07
       %2294 = OpFAdd %v3float %2293 %137
       %2295 = OpExtInst %v3float %1 Fma %2018 %510 %2294
       %2296 = OpExtInst %v3float %1 Floor %2295
       %2297 = OpFNegate %v3float %2296
       %2298 = OpExtInst %v3float %1 Fma %2018 %510 %2297
       %2299 = OpVectorTimesScalar %v3float %2298 %float_2097152
       %2300 = OpFAdd %v3float %2299 %2292
       %2301 = OpVectorTimesScalar %v3float %2300 %float_1
               OpBranch %2302
       %2302 = OpLabel
       %2303 = OpPhi %v3float %2301 %2052 %2304 %2305
       %2306 = OpPhi %float %float_1 %2052 %2307 %2305
       %2308 = OpPhi %float %float_0 %2052 %2309 %2305
       %2310 = OpPhi %uint %uint_0 %2052 %2311 %2305
       %2312 = OpULessThan %bool %2310 %uint_10
               OpLoopMerge %2313 %2305 DontUnroll
               OpBranchConditional %2312 %2305 %2313
       %2305 = OpLabel
       %2314 = OpExtInst %v3float %1 Fract %2303
       %2315 = OpExtInst %v3float %1 Floor %2303
       %2316 = OpDot %float %2315 %386
       %2317 = OpFAdd %float %2316 %float_19
       %2318 = OpFAdd %float %2316 %float_47
       %2319 = OpFAdd %float %2316 %float_66
       %2320 = OpFAdd %float %2316 %float_101
       %2321 = OpFAdd %float %2316 %float_120
       %2322 = OpFAdd %float %2316 %float_148
       %2323 = OpFAdd %float %2316 %float_167
       %2324 = OpConvertFToS %int %2316
       %2325 = OpCompositeConstruct %v3int %2324 %int_0 %int_0
       %2326 = OpBitcast %v3uint %2325
       %2327 = OpIMul %v3uint %2326 %402
       %2328 = OpIAdd %v3uint %2327 %404
       %2329 = OpCompositeExtract %uint %2328 1
       %2330 = OpCompositeExtract %uint %2328 2
       %2331 = OpIMul %uint %2329 %2330
       %2332 = OpCompositeExtract %uint %2328 0
       %2333 = OpIAdd %uint %2332 %2331
       %2334 = OpIMul %uint %2330 %2333
       %2335 = OpIAdd %uint %2329 %2334
       %2336 = OpIMul %uint %2333 %2335
       %2337 = OpIAdd %uint %2330 %2336
       %2338 = OpIMul %uint %2335 %2337
       %2339 = OpIAdd %uint %2333 %2338
       %2340 = OpCompositeInsert %v3uint %2339 %551 0
       %2341 = OpBitwiseAnd %v3uint %405 %406
       %2342 = OpShiftRightLogical %v3uint %2340 %2341
       %2343 = OpCompositeExtract %uint %2342 0
       %2344 = OpCompositeConstruct %v3uint %2343 %2343 %2343
       %2345 = OpBitwiseAnd %v3uint %2344 %387
       %2346 = OpConvertUToF %v3float %2345
       %2347 = OpExtInst %v3float %1 Fma %2346 %391 %279
       %2348 = OpDot %float %2347 %2314
       %2349 = OpConvertFToS %int %2317
       %2350 = OpFSub %v3float %2314 %351
       %2351 = OpCompositeConstruct %v3int %2349 %int_0 %int_0
       %2352 = OpBitcast %v3uint %2351
       %2353 = OpIMul %v3uint %2352 %402
       %2354 = OpIAdd %v3uint %2353 %404
       %2355 = OpCompositeExtract %uint %2354 1
       %2356 = OpCompositeExtract %uint %2354 2
       %2357 = OpIMul %uint %2355 %2356
       %2358 = OpCompositeExtract %uint %2354 0
       %2359 = OpIAdd %uint %2358 %2357
       %2360 = OpIMul %uint %2356 %2359
       %2361 = OpIAdd %uint %2355 %2360
       %2362 = OpIMul %uint %2359 %2361
       %2363 = OpIAdd %uint %2356 %2362
       %2364 = OpIMul %uint %2361 %2363
       %2365 = OpIAdd %uint %2359 %2364
       %2366 = OpCompositeInsert %v3uint %2365 %551 0
       %2367 = OpShiftRightLogical %v3uint %2366 %2341
       %2368 = OpCompositeExtract %uint %2367 0
       %2369 = OpCompositeConstruct %v3uint %2368 %2368 %2368
       %2370 = OpBitwiseAnd %v3uint %2369 %387
       %2371 = OpConvertUToF %v3float %2370
       %2372 = OpExtInst %v3float %1 Fma %2371 %391 %279
       %2373 = OpDot %float %2372 %2350
       %2374 = OpConvertFToS %int %2318
       %2375 = OpFSub %v3float %2314 %352
       %2376 = OpCompositeConstruct %v3int %2374 %int_0 %int_0
       %2377 = OpBitcast %v3uint %2376
       %2378 = OpIMul %v3uint %2377 %402
       %2379 = OpIAdd %v3uint %2378 %404
       %2380 = OpCompositeExtract %uint %2379 1
       %2381 = OpCompositeExtract %uint %2379 2
       %2382 = OpIMul %uint %2380 %2381
       %2383 = OpCompositeExtract %uint %2379 0
       %2384 = OpIAdd %uint %2383 %2382
       %2385 = OpIMul %uint %2381 %2384
       %2386 = OpIAdd %uint %2380 %2385
       %2387 = OpIMul %uint %2384 %2386
       %2388 = OpIAdd %uint %2381 %2387
       %2389 = OpIMul %uint %2386 %2388
       %2390 = OpIAdd %uint %2384 %2389
       %2391 = OpCompositeInsert %v3uint %2390 %551 0
       %2392 = OpShiftRightLogical %v3uint %2391 %2341
       %2393 = OpCompositeExtract %uint %2392 0
       %2394 = OpCompositeConstruct %v3uint %2393 %2393 %2393
       %2395 = OpBitwiseAnd %v3uint %2394 %387
       %2396 = OpConvertUToF %v3float %2395
       %2397 = OpExtInst %v3float %1 Fma %2396 %391 %279
       %2398 = OpDot %float %2397 %2375
       %2399 = OpConvertFToS %int %2319
       %2400 = OpFSub %v3float %2314 %134
       %2401 = OpCompositeConstruct %v3int %2399 %int_0 %int_0
       %2402 = OpBitcast %v3uint %2401
       %2403 = OpIMul %v3uint %2402 %402
       %2404 = OpIAdd %v3uint %2403 %404
       %2405 = OpCompositeExtract %uint %2404 1
       %2406 = OpCompositeExtract %uint %2404 2
       %2407 = OpIMul %uint %2405 %2406
       %2408 = OpCompositeExtract %uint %2404 0
       %2409 = OpIAdd %uint %2408 %2407
       %2410 = OpIMul %uint %2406 %2409
       %2411 = OpIAdd %uint %2405 %2410
       %2412 = OpIMul %uint %2409 %2411
       %2413 = OpIAdd %uint %2406 %2412
       %2414 = OpIMul %uint %2411 %2413
       %2415 = OpIAdd %uint %2409 %2414
       %2416 = OpCompositeInsert %v3uint %2415 %551 0
       %2417 = OpShiftRightLogical %v3uint %2416 %2341
       %2418 = OpCompositeExtract %uint %2417 0
       %2419 = OpCompositeConstruct %v3uint %2418 %2418 %2418
       %2420 = OpBitwiseAnd %v3uint %2419 %387
       %2421 = OpConvertUToF %v3float %2420
       %2422 = OpExtInst %v3float %1 Fma %2421 %391 %279
       %2423 = OpDot %float %2422 %2400
       %2424 = OpConvertFToS %int %2320
       %2425 = OpFSub %v3float %2314 %291
       %2426 = OpCompositeConstruct %v3int %2424 %int_0 %int_0
       %2427 = OpBitcast %v3uint %2426
       %2428 = OpIMul %v3uint %2427 %402
       %2429 = OpIAdd %v3uint %2428 %404
       %2430 = OpCompositeExtract %uint %2429 1
       %2431 = OpCompositeExtract %uint %2429 2
       %2432 = OpIMul %uint %2430 %2431
       %2433 = OpCompositeExtract %uint %2429 0
       %2434 = OpIAdd %uint %2433 %2432
       %2435 = OpIMul %uint %2431 %2434
       %2436 = OpIAdd %uint %2430 %2435
       %2437 = OpIMul %uint %2434 %2436
       %2438 = OpIAdd %uint %2431 %2437
       %2439 = OpIMul %uint %2436 %2438
       %2440 = OpIAdd %uint %2434 %2439
       %2441 = OpCompositeInsert %v3uint %2440 %551 0
       %2442 = OpShiftRightLogical %v3uint %2441 %2341
       %2443 = OpCompositeExtract %uint %2442 0
       %2444 = OpCompositeConstruct %v3uint %2443 %2443 %2443
       %2445 = OpBitwiseAnd %v3uint %2444 %387
       %2446 = OpConvertUToF %v3float %2445
       %2447 = OpExtInst %v3float %1 Fma %2446 %391 %279
       %2448 = OpDot %float %2447 %2425
       %2449 = OpConvertFToS %int %2321
       %2450 = OpFSub %v3float %2314 %140
       %2451 = OpCompositeConstruct %v3int %2449 %int_0 %int_0
       %2452 = OpBitcast %v3uint %2451
       %2453 = OpIMul %v3uint %2452 %402
       %2454 = OpIAdd %v3uint %2453 %404
       %2455 = OpCompositeExtract %uint %2454 1
       %2456 = OpCompositeExtract %uint %2454 2
       %2457 = OpIMul %uint %2455 %2456
       %2458 = OpCompositeExtract %uint %2454 0
       %2459 = OpIAdd %uint %2458 %2457
       %2460 = OpIMul %uint %2456 %2459
       %2461 = OpIAdd %uint %2455 %2460
       %2462 = OpIMul %uint %2459 %2461
       %2463 = OpIAdd %uint %2456 %2462
       %2464 = OpIMul %uint %2461 %2463
       %2465 = OpIAdd %uint %2459 %2464
       %2466 = OpCompositeInsert %v3uint %2465 %551 0
       %2467 = OpShiftRightLogical %v3uint %2466 %2341
       %2468 = OpCompositeExtract %uint %2467 0
       %2469 = OpCompositeConstruct %v3uint %2468 %2468 %2468
       %2470 = OpBitwiseAnd %v3uint %2469 %387
       %2471 = OpConvertUToF %v3float %2470
       %2472 = OpExtInst %v3float %1 Fma %2471 %391 %279
       %2473 = OpDot %float %2472 %2450
       %2474 = OpConvertFToS %int %2322
       %2475 = OpFSub %v3float %2314 %135
       %2476 = OpCompositeConstruct %v3int %2474 %int_0 %int_0
       %2477 = OpBitcast %v3uint %2476
       %2478 = OpIMul %v3uint %2477 %402
       %2479 = OpIAdd %v3uint %2478 %404
       %2480 = OpCompositeExtract %uint %2479 1
       %2481 = OpCompositeExtract %uint %2479 2
       %2482 = OpIMul %uint %2480 %2481
       %2483 = OpCompositeExtract %uint %2479 0
       %2484 = OpIAdd %uint %2483 %2482
       %2485 = OpIMul %uint %2481 %2484
       %2486 = OpIAdd %uint %2480 %2485
       %2487 = OpIMul %uint %2484 %2486
       %2488 = OpIAdd %uint %2481 %2487
       %2489 = OpIMul %uint %2486 %2488
       %2490 = OpIAdd %uint %2484 %2489
       %2491 = OpCompositeInsert %v3uint %2490 %551 0
       %2492 = OpShiftRightLogical %v3uint %2491 %2341
       %2493 = OpCompositeExtract %uint %2492 0
       %2494 = OpCompositeConstruct %v3uint %2493 %2493 %2493
       %2495 = OpBitwiseAnd %v3uint %2494 %387
       %2496 = OpConvertUToF %v3float %2495
       %2497 = OpExtInst %v3float %1 Fma %2496 %391 %279
       %2498 = OpDot %float %2497 %2475
       %2499 = OpConvertFToS %int %2323
       %2500 = OpFSub %v3float %2314 %127
       %2501 = OpCompositeConstruct %v3int %2499 %int_0 %int_0
       %2502 = OpBitcast %v3uint %2501
       %2503 = OpIMul %v3uint %2502 %402
       %2504 = OpIAdd %v3uint %2503 %404
       %2505 = OpCompositeExtract %uint %2504 1
       %2506 = OpCompositeExtract %uint %2504 2
       %2507 = OpIMul %uint %2505 %2506
       %2508 = OpCompositeExtract %uint %2504 0
       %2509 = OpIAdd %uint %2508 %2507
       %2510 = OpIMul %uint %2506 %2509
       %2511 = OpIAdd %uint %2505 %2510
       %2512 = OpIMul %uint %2509 %2511
       %2513 = OpIAdd %uint %2506 %2512
       %2514 = OpIMul %uint %2511 %2513
       %2515 = OpIAdd %uint %2509 %2514
       %2516 = OpCompositeInsert %v3uint %2515 %551 0
       %2517 = OpShiftRightLogical %v3uint %2516 %2341
       %2518 = OpCompositeExtract %uint %2517 0
       %2519 = OpCompositeConstruct %v3uint %2518 %2518 %2518
       %2520 = OpBitwiseAnd %v3uint %2519 %387
       %2521 = OpConvertUToF %v3float %2520
       %2522 = OpExtInst %v3float %1 Fma %2521 %391 %279
       %2523 = OpDot %float %2522 %2500
       %2524 = OpCompositeExtract %float %2314 0
       %2525 = OpCompositeExtract %float %2314 1
       %2526 = OpCompositeExtract %float %2314 2
       %2527 = OpCompositeConstruct %v4float %2524 %2525 %2526 %float_0
       %2528 = OpFMul %v4float %2527 %2527
       %2529 = OpFMul %v4float %2528 %2527
       %2530 = OpVectorTimesScalar %v4float %2527 %float_6
       %2531 = OpFSub %v4float %2530 %382
       %2532 = OpExtInst %v4float %1 Fma %2527 %2531 %383
       %2533 = OpFMul %v4float %2529 %2532
       %2534 = OpCompositeExtract %float %2533 0
       %2535 = OpExtInst %float %1 FMix %2348 %2373 %2534
       %2536 = OpExtInst %float %1 FMix %2398 %2423 %2534
       %2537 = OpCompositeExtract %float %2533 1
       %2538 = OpExtInst %float %1 FMix %2535 %2536 %2537
       %2539 = OpExtInst %float %1 FMix %2448 %2473 %2534
       %2540 = OpExtInst %float %1 FMix %2498 %2523 %2534
       %2541 = OpExtInst %float %1 FMix %2539 %2540 %2537
       %2542 = OpCompositeExtract %float %2533 2
       %2543 = OpExtInst %float %1 FMix %2538 %2541 %2542
       %2544 = OpExtInst %float %1 FAbs %2543
       %2309 = OpExtInst %float %1 Fma %2544 %2306 %2308
       %2304 = OpVectorTimesScalar %v3float %2303 %float_2
       %2307 = OpFMul %float %2306 %float_0_5
       %2311 = OpIAdd %uint %2310 %uint_1
               OpBranch %2302
       %2313 = OpLabel
       %2545 = OpExtInst %float %1 FMix %float_0 %float_1 %2308
       %2546 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_13 %int_1
       %2547 = OpLoad %float %2546
       %2548 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_13 %int_0
       %2549 = OpLoad %float %2548
       %2550 = OpExtInst %float %1 Fma %2545 %2547 %2549
       %2551 = OpFMul %float %2284 %2550
       %2552 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_11 %int_3
       %2553 = OpLoad %float %2552
       %2554 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_13 %int_2
       %2555 = OpLoad %float %2554
       %2556 = OpExtInst %float %1 FMix %2553 %2555 %2551
       %2557 = OpExtInst %float %1 Sin %2009
       %2558 = OpFMul %float %2557 %2556
       %2559 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_15
       %2560 = OpLoad %v4float %2559
       %2561 = OpVectorShuffle %v3float %2560 %2560 0 1 2
       %2562 = OpFAdd %v3float %1685 %2561
       %2563 = OpExtInst %v3float %1 NMax %2562 %279
       %2564 = OpExtInst %v3float %1 NMin %2563 %127
       %2565 = OpCompositeExtract %float %2564 0
       %2566 = OpCompositeExtract %float %2564 1
       %2567 = OpCompositeConstruct %v2float %2565 %2566
       %2568 = OpFMul %v2float %1696 %2567
       %2569 = OpFMul %v2float %2567 %1697
       %2570 = OpCompositeExtract %float %2568 0
       %2571 = OpCompositeExtract %float %2569 0
       %2572 = OpCompositeExtract %float %2568 1
       %2573 = OpCompositeExtract %float %2569 1
       %2574 = OpFAdd %float %2570 %2572
       %2575 = OpFAdd %float %2571 %2573
       %2576 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_16 %int_1
       %2577 = OpLoad %float %2576
       %2578 = OpFMul %float %2574 %2577
       %2579 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_0
       %2580 = OpLoad %float %2579
       %2581 = OpFMul %float %2580 %1995
       %2582 = OpExtInst %float %1 Fma %2575 %2577 %2581
       %2583 = OpExtInst %float %1 Floor %2578
       %2584 = OpFNegate %float %2583
       %2585 = OpExtInst %float %1 Fma %2574 %2577 %2584
       %2586 = OpExtInst %float %1 Fma %2585 %float_2097152 %2582
       %2587 = OpExtInst %float %1 Floor %2586
       %2588 = OpFMul %float %2583 %float_n6_28318548
       %2589 = OpExtInst %float %1 Fma %2578 %float_6_28318548 %2588
       %2590 = OpFMul %float %2587 %float_n6_28318548
       %2591 = OpExtInst %float %1 Fma %2582 %float_6_28318548 %2590
       %2592 = OpExtInst %float %1 Fma %2589 %float_2097152 %2591
       %2593 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_2
       %2594 = OpLoad %float %2593
       %2595 = OpFMul %float %2556 %2594
       %2596 = OpExtInst %float %1 Sin %2592
       %2597 = OpFMul %float %2596 %2595
       %2598 = OpCompositeConstruct %v3float %550 %550 %2558
       %2599 = OpCompositeConstruct %v3float %550 %550 %2597
       %2600 = OpFAdd %v3float %2598 %2599
       %2601 = OpFSub %v3float %1685 %1688
       %2602 = OpExtInst %v3float %1 NMax %2601 %279
       %2603 = OpExtInst %v3float %1 NMin %2602 %127
       %2604 = OpCompositeExtract %float %2603 0
       %2605 = OpCompositeExtract %float %2603 1
       %2606 = OpCompositeConstruct %v2float %2604 %2605
       %2607 = OpFMul %v2float %1696 %2606
       %2608 = OpFMul %v2float %2606 %1697
       %2609 = OpCompositeExtract %float %2607 0
       %2610 = OpCompositeExtract %float %2608 0
       %2611 = OpCompositeExtract %float %2607 1
       %2612 = OpCompositeExtract %float %2608 1
       %2613 = OpFAdd %float %2609 %2611
       %2614 = OpFAdd %float %2610 %2612
       %2615 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_1
       %2616 = OpLoad %float %2615
       %2617 = OpFMul %float %2613 %2616
       %2618 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_3
       %2619 = OpLoad %float %2618
       %2620 = OpFMul %float %2619 %1995
       %2621 = OpExtInst %float %1 Fma %2614 %2616 %2620
       %2622 = OpExtInst %float %1 Floor %2617
       %2623 = OpFNegate %float %2622
       %2624 = OpExtInst %float %1 Fma %2613 %2616 %2623
       %2625 = OpExtInst %float %1 Fma %2624 %float_2097152 %2621
       %2626 = OpExtInst %float %1 Floor %2625
       %2627 = OpFMul %float %2622 %float_n6_28318548
       %2628 = OpExtInst %float %1 Fma %2617 %float_6_28318548 %2627
       %2629 = OpFMul %float %2626 %float_n6_28318548
       %2630 = OpExtInst %float %1 Fma %2621 %float_6_28318548 %2629
       %2631 = OpExtInst %float %1 Fma %2628 %float_2097152 %2630
       %2632 = OpFMul %float %2595 %2594
       %2633 = OpExtInst %float %1 Sin %2631
       %2634 = OpFMul %float %2633 %2632
       %2635 = OpCompositeConstruct %v3float %550 %550 %2634
       %2636 = OpFAdd %v3float %2600 %2635
       %2637 = OpFSub %v3float %1685 %2561
       %2638 = OpExtInst %v3float %1 NMax %2637 %279
       %2639 = OpExtInst %v3float %1 NMin %2638 %127
       %2640 = OpCompositeExtract %float %2639 0
       %2641 = OpCompositeExtract %float %2639 1
       %2642 = OpCompositeConstruct %v2float %2640 %2641
       %2643 = OpFMul %v2float %1696 %2642
       %2644 = OpFMul %v2float %2642 %1697
       %2645 = OpCompositeExtract %float %2643 0
       %2646 = OpCompositeExtract %float %2644 0
       %2647 = OpCompositeExtract %float %2643 1
       %2648 = OpCompositeExtract %float %2644 1
       %2649 = OpFAdd %float %2645 %2647
       %2650 = OpFAdd %float %2646 %2648
       %2651 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_19 %int_2
       %2652 = OpLoad %float %2651
       %2653 = OpFMul %float %2649 %2652
       %2654 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_20 %int_0
       %2655 = OpLoad %float %2654
       %2656 = OpFMul %float %2655 %1995
       %2657 = OpExtInst %float %1 Fma %2650 %2652 %2656
       %2658 = OpExtInst %float %1 Floor %2653
       %2659 = OpFNegate %float %2658
       %2660 = OpExtInst %float %1 Fma %2649 %2652 %2659
       %2661 = OpExtInst %float %1 Fma %2660 %float_2097152 %2657
       %2662 = OpExtInst %float %1 Floor %2661
       %2663 = OpFMul %float %2658 %float_n6_28318548
       %2664 = OpExtInst %float %1 Fma %2653 %float_6_28318548 %2663
       %2665 = OpFMul %float %2662 %float_n6_28318548
       %2666 = OpExtInst %float %1 Fma %2657 %float_6_28318548 %2665
       %2667 = OpExtInst %float %1 Fma %2664 %float_2097152 %2666
       %2668 = OpFMul %float %2632 %2594
       %2669 = OpExtInst %float %1 Sin %2667
       %2670 = OpFMul %float %2669 %2668
       %2671 = OpCompositeConstruct %v3float %550 %550 %2670
       %2672 = OpFAdd %v3float %2636 %2671
       %2673 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_20 %int_3
       %2674 = OpLoad %float %2673
       %2675 = OpFSub %float %2674 %float_n1
       %2676 = OpExtInst %float %1 FAbs %2675
       %2677 = OpFOrdGreaterThan %bool %2676 %float_9_99999975en06
       %2678 = OpFOrdGreaterThanEqual %bool %2674 %float_n1
       %2679 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_21 %int_0
       %2680 = OpLoad %float %2679
       %2681 = OpSelect %float %2678 %2674 %2680
       %2682 = OpSelect %float %2677 %2681 %2674
       %2683 = OpFSub %float %2682 %float_1
       %2684 = OpExtInst %float %1 FAbs %2683
       %2685 = OpFOrdGreaterThan %bool %2684 %float_9_99999975en06
       %2686 = OpFOrdGreaterThanEqual %bool %2682 %float_1
       %2687 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_21 %int_1
       %2688 = OpLoad %float %2687
       %2689 = OpSelect %float %2686 %2688 %2674
       %2690 = OpSelect %float %2685 %2689 %2674
       %2691 = OpExtInst %float %1 FAbs %2690
       %2692 = OpFOrdGreaterThan %bool %2691 %float_9_99999975en06
       %2693 = OpFOrdGreaterThanEqual %bool %2690 %float_0
       %2694 = OpSelect %float %2693 %float_1 %float_n1
       %2695 = OpSelect %float %2692 %2694 %float_1
       %2696 = OpExtInst %float %1 NMax %2695 %float_n1
       %2697 = OpExtInst %float %1 NMin %2696 %float_1
       %2698 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_22 %int_2
       %2699 = OpLoad %float %2698
       %2700 = OpCompositeConstruct %v3float %2697 %2699 %float_0
       %2701 = OpFAdd %v3float %2700 %1688
       %2702 = OpExtInst %v3float %1 NMax %2701 %279
       %2703 = OpExtInst %v3float %1 NMin %2702 %127
       %2704 = OpCompositeExtract %float %2703 0
       %2705 = OpCompositeExtract %float %2703 1
       %2706 = OpCompositeConstruct %v2float %2704 %2705
       %2707 = OpFMul %v2float %1696 %2706
       %2708 = OpFMul %v2float %2706 %1697
       %2709 = OpCompositeExtract %float %2707 0
       %2710 = OpCompositeExtract %float %2708 0
       %2711 = OpCompositeExtract %float %2707 1
       %2712 = OpCompositeExtract %float %2708 1
       %2713 = OpFAdd %float %2709 %2711
       %2714 = OpFAdd %float %2710 %2712
       %2715 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_24 %int_3
       %2716 = OpLoad %float %2715
       %2717 = OpFMul %float %2713 %2716
       %2718 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_25 %int_2
       %2719 = OpLoad %float %2718
       %2720 = OpFMul %float %2719 %1995
       %2721 = OpExtInst %float %1 Fma %2714 %2716 %2720
       %2722 = OpExtInst %float %1 Floor %2717
       %2723 = OpFNegate %float %2722
       %2724 = OpExtInst %float %1 Fma %2713 %2716 %2723
       %2725 = OpExtInst %float %1 Fma %2724 %float_2097152 %2721
       %2726 = OpExtInst %float %1 Floor %2725
       %2727 = OpFMul %float %2722 %float_n6_28318548
       %2728 = OpExtInst %float %1 Fma %2717 %float_6_28318548 %2727
       %2729 = OpFMul %float %2726 %float_n6_28318548
       %2730 = OpExtInst %float %1 Fma %2721 %float_6_28318548 %2729
       %2731 = OpExtInst %float %1 Fma %2728 %float_2097152 %2730
       %2732 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_25 %int_3
       %2733 = OpLoad %float %2732
       %2734 = OpFMul %float %2556 %2733
       %2735 = OpExtInst %float %1 Sin %2731
       %2736 = OpFMul %float %2735 %2734
       %2737 = OpFAdd %v3float %2700 %2561
       %2738 = OpExtInst %v3float %1 NMax %2737 %279
       %2739 = OpExtInst %v3float %1 NMin %2738 %127
       %2740 = OpCompositeExtract %float %2739 0
       %2741 = OpCompositeExtract %float %2739 1
       %2742 = OpCompositeConstruct %v2float %2740 %2741
       %2743 = OpFMul %v2float %1696 %2742
       %2744 = OpFMul %v2float %2742 %1697
       %2745 = OpCompositeExtract %float %2743 0
       %2746 = OpCompositeExtract %float %2744 0
       %2747 = OpCompositeExtract %float %2743 1
       %2748 = OpCompositeExtract %float %2744 1
       %2749 = OpFAdd %float %2745 %2747
       %2750 = OpFAdd %float %2746 %2748
       %2751 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_26 %int_1
       %2752 = OpLoad %float %2751
       %2753 = OpFMul %float %2749 %2752
       %2754 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_26 %int_3
       %2755 = OpLoad %float %2754
       %2756 = OpFMul %float %2755 %1995
       %2757 = OpExtInst %float %1 Fma %2750 %2752 %2756
       %2758 = OpExtInst %float %1 Floor %2753
       %2759 = OpFNegate %float %2758
       %2760 = OpExtInst %float %1 Fma %2749 %2752 %2759
       %2761 = OpExtInst %float %1 Fma %2760 %float_2097152 %2757
       %2762 = OpExtInst %float %1 Floor %2761
       %2763 = OpFMul %float %2758 %float_n6_28318548
       %2764 = OpExtInst %float %1 Fma %2753 %float_6_28318548 %2763
       %2765 = OpFMul %float %2762 %float_n6_28318548
       %2766 = OpExtInst %float %1 Fma %2757 %float_6_28318548 %2765
       %2767 = OpExtInst %float %1 Fma %2764 %float_2097152 %2766
       %2768 = OpFMul %float %2734 %2594
       %2769 = OpExtInst %float %1 Sin %2767
       %2770 = OpFMul %float %2769 %2768
       %2771 = OpCompositeConstruct %v3float %550 %550 %2736
       %2772 = OpCompositeConstruct %v3float %550 %550 %2770
       %2773 = OpFAdd %v3float %2771 %2772
       %2774 = OpFSub %v3float %2700 %1688
       %2775 = OpExtInst %v3float %1 NMax %2774 %279
       %2776 = OpExtInst %v3float %1 NMin %2775 %127
       %2777 = OpCompositeExtract %float %2776 0
       %2778 = OpCompositeExtract %float %2776 1
       %2779 = OpCompositeConstruct %v2float %2777 %2778
       %2780 = OpFMul %v2float %1696 %2779
       %2781 = OpFMul %v2float %2779 %1697
       %2782 = OpCompositeExtract %float %2780 0
       %2783 = OpCompositeExtract %float %2781 0
       %2784 = OpCompositeExtract %float %2780 1
       %2785 = OpCompositeExtract %float %2781 1
       %2786 = OpFAdd %float %2782 %2784
       %2787 = OpFAdd %float %2783 %2785
       %2788 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_27 %int_1
       %2789 = OpLoad %float %2788
       %2790 = OpFMul %float %2786 %2789
       %2791 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_27 %int_3
       %2792 = OpLoad %float %2791
       %2793 = OpFMul %float %2792 %1995
       %2794 = OpExtInst %float %1 Fma %2787 %2789 %2793
       %2795 = OpExtInst %float %1 Floor %2790
       %2796 = OpFNegate %float %2795
       %2797 = OpExtInst %float %1 Fma %2786 %2789 %2796
       %2798 = OpExtInst %float %1 Fma %2797 %float_2097152 %2794
       %2799 = OpExtInst %float %1 Floor %2798
       %2800 = OpFMul %float %2795 %float_n6_28318548
       %2801 = OpExtInst %float %1 Fma %2790 %float_6_28318548 %2800
       %2802 = OpFMul %float %2799 %float_n6_28318548
       %2803 = OpExtInst %float %1 Fma %2794 %float_6_28318548 %2802
       %2804 = OpExtInst %float %1 Fma %2801 %float_2097152 %2803
       %2805 = OpFMul %float %2768 %2594
       %2806 = OpExtInst %float %1 Sin %2804
       %2807 = OpFMul %float %2806 %2805
       %2808 = OpCompositeConstruct %v3float %550 %550 %2807
       %2809 = OpFAdd %v3float %2773 %2808
       %2810 = OpFSub %v3float %2700 %2561
       %2811 = OpExtInst %v3float %1 NMax %2810 %279
       %2812 = OpExtInst %v3float %1 NMin %2811 %127
       %2813 = OpCompositeExtract %float %2812 0
       %2814 = OpCompositeExtract %float %2812 1
       %2815 = OpCompositeConstruct %v2float %2813 %2814
       %2816 = OpFMul %v2float %1696 %2815
       %2817 = OpFMul %v2float %2815 %1697
       %2818 = OpCompositeExtract %float %2816 0
       %2819 = OpCompositeExtract %float %2817 0
       %2820 = OpCompositeExtract %float %2816 1
       %2821 = OpCompositeExtract %float %2817 1
       %2822 = OpFAdd %float %2818 %2820
       %2823 = OpFAdd %float %2819 %2821
       %2824 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_28 %int_1
       %2825 = OpLoad %float %2824
       %2826 = OpFMul %float %2822 %2825
       %2827 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_28 %int_3
       %2828 = OpLoad %float %2827
       %2829 = OpFMul %float %2828 %1995
       %2830 = OpExtInst %float %1 Fma %2823 %2825 %2829
       %2831 = OpExtInst %float %1 Floor %2826
       %2832 = OpFNegate %float %2831
       %2833 = OpExtInst %float %1 Fma %2822 %2825 %2832
       %2834 = OpExtInst %float %1 Fma %2833 %float_2097152 %2830
       %2835 = OpExtInst %float %1 Floor %2834
       %2836 = OpFMul %float %2831 %float_n6_28318548
       %2837 = OpExtInst %float %1 Fma %2826 %float_6_28318548 %2836
       %2838 = OpFMul %float %2835 %float_n6_28318548
       %2839 = OpExtInst %float %1 Fma %2830 %float_6_28318548 %2838
       %2840 = OpExtInst %float %1 Fma %2837 %float_2097152 %2839
       %2841 = OpFMul %float %2805 %2594
       %2842 = OpExtInst %float %1 Sin %2840
       %2843 = OpFMul %float %2842 %2841
       %2844 = OpCompositeConstruct %v3float %550 %550 %2843
       %2845 = OpFAdd %v3float %2809 %2844
       %2846 = OpFAdd %v3float %2672 %2845
       %2847 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_29 %int_0
       %2848 = OpLoad %float %2847
       %2849 = OpFSub %float %2848 %float_n1
       %2850 = OpExtInst %float %1 FAbs %2849
       %2851 = OpFOrdGreaterThan %bool %2850 %float_9_99999975en06
       %2852 = OpFOrdGreaterThanEqual %bool %2848 %float_n1
       %2853 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_29 %int_1
       %2854 = OpLoad %float %2853
       %2855 = OpSelect %float %2852 %2848 %2854
       %2856 = OpSelect %float %2851 %2855 %2848
       %2857 = OpFSub %float %2856 %float_1
       %2858 = OpExtInst %float %1 FAbs %2857
       %2859 = OpFOrdGreaterThan %bool %2858 %float_9_99999975en06
       %2860 = OpFOrdGreaterThanEqual %bool %2856 %float_1
       %2861 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_29 %int_2
       %2862 = OpLoad %float %2861
       %2863 = OpSelect %float %2860 %2862 %2848
       %2864 = OpSelect %float %2859 %2863 %2848
       %2865 = OpExtInst %float %1 FAbs %2864
       %2866 = OpFOrdGreaterThan %bool %2865 %float_9_99999975en06
       %2867 = OpFOrdGreaterThanEqual %bool %2864 %float_0
       %2868 = OpSelect %float %2867 %float_1 %float_n1
       %2869 = OpSelect %float %2866 %2868 %float_1
       %2870 = OpExtInst %float %1 NMax %2869 %float_n1
       %2871 = OpExtInst %float %1 NMin %2870 %float_1
       %2872 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_30 %int_3
       %2873 = OpLoad %float %2872
       %2874 = OpCompositeConstruct %v3float %2871 %2873 %float_0
       %2875 = OpFAdd %v3float %2874 %1688
       %2876 = OpExtInst %v3float %1 NMax %2875 %279
       %2877 = OpExtInst %v3float %1 NMin %2876 %127
       %2878 = OpCompositeExtract %float %2877 0
       %2879 = OpCompositeExtract %float %2877 1
       %2880 = OpCompositeConstruct %v2float %2878 %2879
       %2881 = OpFMul %v2float %1696 %2880
       %2882 = OpFMul %v2float %2880 %1697
       %2883 = OpCompositeExtract %float %2881 0
       %2884 = OpCompositeExtract %float %2882 0
       %2885 = OpCompositeExtract %float %2881 1
       %2886 = OpCompositeExtract %float %2882 1
       %2887 = OpFAdd %float %2883 %2885
       %2888 = OpFAdd %float %2884 %2886
       %2889 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_32 %int_2
       %2890 = OpLoad %float %2889
       %2891 = OpFMul %float %2887 %2890
       %2892 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_32 %int_3
       %2893 = OpLoad %float %2892
       %2894 = OpFMul %float %2893 %1995
       %2895 = OpExtInst %float %1 Fma %2888 %2890 %2894
       %2896 = OpExtInst %float %1 Floor %2891
       %2897 = OpFNegate %float %2896
       %2898 = OpExtInst %float %1 Fma %2887 %2890 %2897
       %2899 = OpExtInst %float %1 Fma %2898 %float_2097152 %2895
       %2900 = OpExtInst %float %1 Floor %2899
       %2901 = OpFMul %float %2896 %float_n6_28318548
       %2902 = OpExtInst %float %1 Fma %2891 %float_6_28318548 %2901
       %2903 = OpFMul %float %2900 %float_n6_28318548
       %2904 = OpExtInst %float %1 Fma %2895 %float_6_28318548 %2903
       %2905 = OpExtInst %float %1 Fma %2902 %float_2097152 %2904
       %2906 = OpExtInst %float %1 Sin %2905
       %2907 = OpFMul %float %2906 %2734
       %2908 = OpFAdd %v3float %2874 %2561
       %2909 = OpExtInst %v3float %1 NMax %2908 %279
       %2910 = OpExtInst %v3float %1 NMin %2909 %127
       %2911 = OpCompositeExtract %float %2910 0
       %2912 = OpCompositeExtract %float %2910 1
       %2913 = OpCompositeConstruct %v2float %2911 %2912
       %2914 = OpFMul %v2float %1696 %2913
       %2915 = OpFMul %v2float %2913 %1697
       %2916 = OpCompositeExtract %float %2914 0
       %2917 = OpCompositeExtract %float %2915 0
       %2918 = OpCompositeExtract %float %2914 1
       %2919 = OpCompositeExtract %float %2915 1
       %2920 = OpFAdd %float %2916 %2918
       %2921 = OpFAdd %float %2917 %2919
       %2922 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_33 %int_1
       %2923 = OpLoad %float %2922
       %2924 = OpFMul %float %2920 %2923
       %2925 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_33 %int_2
       %2926 = OpLoad %float %2925
       %2927 = OpFMul %float %2926 %1995
       %2928 = OpExtInst %float %1 Fma %2921 %2923 %2927
       %2929 = OpExtInst %float %1 Floor %2924
       %2930 = OpFNegate %float %2929
       %2931 = OpExtInst %float %1 Fma %2920 %2923 %2930
       %2932 = OpExtInst %float %1 Fma %2931 %float_2097152 %2928
       %2933 = OpExtInst %float %1 Floor %2932
       %2934 = OpFMul %float %2929 %float_n6_28318548
       %2935 = OpExtInst %float %1 Fma %2924 %float_6_28318548 %2934
       %2936 = OpFMul %float %2933 %float_n6_28318548
       %2937 = OpExtInst %float %1 Fma %2928 %float_6_28318548 %2936
       %2938 = OpExtInst %float %1 Fma %2935 %float_2097152 %2937
       %2939 = OpExtInst %float %1 Sin %2938
       %2940 = OpFMul %float %2939 %2768
       %2941 = OpCompositeConstruct %v3float %550 %550 %2907
       %2942 = OpCompositeConstruct %v3float %550 %550 %2940
       %2943 = OpFAdd %v3float %2941 %2942
       %2944 = OpFSub %v3float %2874 %1688
       %2945 = OpExtInst %v3float %1 NMax %2944 %279
       %2946 = OpExtInst %v3float %1 NMin %2945 %127
       %2947 = OpCompositeExtract %float %2946 0
       %2948 = OpCompositeExtract %float %2946 1
       %2949 = OpCompositeConstruct %v2float %2947 %2948
       %2950 = OpFMul %v2float %1696 %2949
       %2951 = OpFMul %v2float %2949 %1697
       %2952 = OpCompositeExtract %float %2950 0
       %2953 = OpCompositeExtract %float %2951 0
       %2954 = OpCompositeExtract %float %2950 1
       %2955 = OpCompositeExtract %float %2951 1
       %2956 = OpFAdd %float %2952 %2954
       %2957 = OpFAdd %float %2953 %2955
       %2958 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_0
       %2959 = OpLoad %float %2958
       %2960 = OpFMul %float %2956 %2959
       %2961 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_1
       %2962 = OpLoad %float %2961
       %2963 = OpFMul %float %2962 %1995
       %2964 = OpExtInst %float %1 Fma %2957 %2959 %2963
       %2965 = OpExtInst %float %1 Floor %2960
       %2966 = OpFNegate %float %2965
       %2967 = OpExtInst %float %1 Fma %2956 %2959 %2966
       %2968 = OpExtInst %float %1 Fma %2967 %float_2097152 %2964
       %2969 = OpExtInst %float %1 Floor %2968
       %2970 = OpFMul %float %2965 %float_n6_28318548
       %2971 = OpExtInst %float %1 Fma %2960 %float_6_28318548 %2970
       %2972 = OpFMul %float %2969 %float_n6_28318548
       %2973 = OpExtInst %float %1 Fma %2964 %float_6_28318548 %2972
       %2974 = OpExtInst %float %1 Fma %2971 %float_2097152 %2973
       %2975 = OpExtInst %float %1 Sin %2974
       %2976 = OpFMul %float %2975 %2805
       %2977 = OpCompositeConstruct %v3float %550 %550 %2976
       %2978 = OpFAdd %v3float %2943 %2977
       %2979 = OpFSub %v3float %2874 %2561
       %2980 = OpExtInst %v3float %1 NMax %2979 %279
       %2981 = OpExtInst %v3float %1 NMin %2980 %127
       %2982 = OpCompositeExtract %float %2981 0
       %2983 = OpCompositeExtract %float %2981 1
       %2984 = OpCompositeConstruct %v2float %2982 %2983
       %2985 = OpFMul %v2float %1696 %2984
       %2986 = OpFMul %v2float %2984 %1697
       %2987 = OpCompositeExtract %float %2985 0
       %2988 = OpCompositeExtract %float %2986 0
       %2989 = OpCompositeExtract %float %2985 1
       %2990 = OpCompositeExtract %float %2986 1
       %2991 = OpFAdd %float %2987 %2989
       %2992 = OpFAdd %float %2988 %2990
       %2993 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_3
       %2994 = OpLoad %float %2993
       %2995 = OpFMul %float %2991 %2994
       %2996 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_0
       %2997 = OpLoad %float %2996
       %2998 = OpFMul %float %2997 %1995
       %2999 = OpExtInst %float %1 Fma %2992 %2994 %2998
       %3000 = OpExtInst %float %1 Floor %2995
       %3001 = OpFNegate %float %3000
       %3002 = OpExtInst %float %1 Fma %2991 %2994 %3001
       %3003 = OpExtInst %float %1 Fma %3002 %float_2097152 %2999
       %3004 = OpExtInst %float %1 Floor %3003
       %3005 = OpFMul %float %3000 %float_n6_28318548
       %3006 = OpExtInst %float %1 Fma %2995 %float_6_28318548 %3005
       %3007 = OpFMul %float %3004 %float_n6_28318548
       %3008 = OpExtInst %float %1 Fma %2999 %float_6_28318548 %3007
       %3009 = OpExtInst %float %1 Fma %3006 %float_2097152 %3008
       %3010 = OpExtInst %float %1 Sin %3009
       %3011 = OpFMul %float %3010 %2841
       %3012 = OpCompositeConstruct %v3float %550 %550 %3011
       %3013 = OpFAdd %v3float %2978 %3012
       %3014 = OpFAdd %v3float %2846 %3013
       %3015 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_1
       %3016 = OpLoad %float %3015
       %3017 = OpFSub %float %3016 %float_n1
       %3018 = OpExtInst %float %1 FAbs %3017
       %3019 = OpFOrdGreaterThan %bool %3018 %float_9_99999975en06
       %3020 = OpFOrdGreaterThanEqual %bool %3016 %float_n1
       %3021 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_2
       %3022 = OpLoad %float %3021
       %3023 = OpSelect %float %3020 %3016 %3022
       %3024 = OpSelect %float %3019 %3023 %3016
       %3025 = OpFSub %float %3024 %float_1
       %3026 = OpExtInst %float %1 FAbs %3025
       %3027 = OpFOrdGreaterThan %bool %3026 %float_9_99999975en06
       %3028 = OpFOrdGreaterThanEqual %bool %3024 %float_1
       %3029 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_3
       %3030 = OpLoad %float %3029
       %3031 = OpSelect %float %3028 %3030 %3016
       %3032 = OpSelect %float %3027 %3031 %3016
       %3033 = OpExtInst %float %1 FAbs %3032
       %3034 = OpFOrdGreaterThan %bool %3033 %float_9_99999975en06
       %3035 = OpFOrdGreaterThanEqual %bool %3032 %float_0
       %3036 = OpSelect %float %3035 %float_1 %float_n1
       %3037 = OpSelect %float %3034 %3036 %float_1
       %3038 = OpExtInst %float %1 NMax %3037 %float_n1
       %3039 = OpExtInst %float %1 NMin %3038 %float_1
       %3040 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_37 %int_0
       %3041 = OpLoad %float %3040
       %3042 = OpCompositeConstruct %v3float %3039 %3041 %float_0
       %3043 = OpFAdd %v3float %3042 %1688
       %3044 = OpExtInst %v3float %1 NMax %3043 %279
       %3045 = OpExtInst %v3float %1 NMin %3044 %127
       %3046 = OpCompositeExtract %float %3045 0
       %3047 = OpCompositeExtract %float %3045 1
       %3048 = OpCompositeConstruct %v2float %3046 %3047
       %3049 = OpFMul %v2float %1696 %3048
       %3050 = OpFMul %v2float %3048 %1697
       %3051 = OpCompositeExtract %float %3049 0
       %3052 = OpCompositeExtract %float %3050 0
       %3053 = OpCompositeExtract %float %3049 1
       %3054 = OpCompositeExtract %float %3050 1
       %3055 = OpFAdd %float %3051 %3053
       %3056 = OpFAdd %float %3052 %3054
       %3057 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_38 %int_3
       %3058 = OpLoad %float %3057
       %3059 = OpFMul %float %3055 %3058
       %3060 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_0
       %3061 = OpLoad %float %3060
       %3062 = OpFMul %float %3061 %1995
       %3063 = OpExtInst %float %1 Fma %3056 %3058 %3062
       %3064 = OpExtInst %float %1 Floor %3059
       %3065 = OpFNegate %float %3064
       %3066 = OpExtInst %float %1 Fma %3055 %3058 %3065
       %3067 = OpExtInst %float %1 Fma %3066 %float_2097152 %3063
       %3068 = OpExtInst %float %1 Floor %3067
       %3069 = OpFMul %float %3064 %float_n6_28318548
       %3070 = OpExtInst %float %1 Fma %3059 %float_6_28318548 %3069
       %3071 = OpFMul %float %3068 %float_n6_28318548
       %3072 = OpExtInst %float %1 Fma %3063 %float_6_28318548 %3071
       %3073 = OpExtInst %float %1 Fma %3070 %float_2097152 %3072
       %3074 = OpExtInst %float %1 Sin %3073
       %3075 = OpFMul %float %3074 %2556
       %3076 = OpFAdd %v3float %3042 %2561
       %3077 = OpExtInst %v3float %1 NMax %3076 %279
       %3078 = OpExtInst %v3float %1 NMin %3077 %127
       %3079 = OpCompositeExtract %float %3078 0
       %3080 = OpCompositeExtract %float %3078 1
       %3081 = OpCompositeConstruct %v2float %3079 %3080
       %3082 = OpFMul %v2float %1696 %3081
       %3083 = OpFMul %v2float %3081 %1697
       %3084 = OpCompositeExtract %float %3082 0
       %3085 = OpCompositeExtract %float %3083 0
       %3086 = OpCompositeExtract %float %3082 1
       %3087 = OpCompositeExtract %float %3083 1
       %3088 = OpFAdd %float %3084 %3086
       %3089 = OpFAdd %float %3085 %3087
       %3090 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_2
       %3091 = OpLoad %float %3090
       %3092 = OpFMul %float %3088 %3091
       %3093 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_3
       %3094 = OpLoad %float %3093
       %3095 = OpFMul %float %3094 %1995
       %3096 = OpExtInst %float %1 Fma %3089 %3091 %3095
       %3097 = OpExtInst %float %1 Floor %3092
       %3098 = OpFNegate %float %3097
       %3099 = OpExtInst %float %1 Fma %3088 %3091 %3098
       %3100 = OpExtInst %float %1 Fma %3099 %float_2097152 %3096
       %3101 = OpExtInst %float %1 Floor %3100
       %3102 = OpFMul %float %3097 %float_n6_28318548
       %3103 = OpExtInst %float %1 Fma %3092 %float_6_28318548 %3102
       %3104 = OpFMul %float %3101 %float_n6_28318548
       %3105 = OpExtInst %float %1 Fma %3096 %float_6_28318548 %3104
       %3106 = OpExtInst %float %1 Fma %3103 %float_2097152 %3105
       %3107 = OpExtInst %float %1 Sin %3106
       %3108 = OpFMul %float %3107 %2595
       %3109 = OpCompositeConstruct %v3float %550 %550 %3075
       %3110 = OpCompositeConstruct %v3float %550 %550 %3108
       %3111 = OpFAdd %v3float %3109 %3110
       %3112 = OpFSub %v3float %3042 %1688
       %3113 = OpExtInst %v3float %1 NMax %3112 %279
       %3114 = OpExtInst %v3float %1 NMin %3113 %127
       %3115 = OpCompositeExtract %float %3114 0
       %3116 = OpCompositeExtract %float %3114 1
       %3117 = OpCompositeConstruct %v2float %3115 %3116
       %3118 = OpFMul %v2float %1696 %3117
       %3119 = OpFMul %v2float %3117 %1697
       %3120 = OpCompositeExtract %float %3118 0
       %3121 = OpCompositeExtract %float %3119 0
       %3122 = OpCompositeExtract %float %3118 1
       %3123 = OpCompositeExtract %float %3119 1
       %3124 = OpFAdd %float %3120 %3122
       %3125 = OpFAdd %float %3121 %3123
       %3126 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_1
       %3127 = OpLoad %float %3126
       %3128 = OpFMul %float %3124 %3127
       %3129 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_2
       %3130 = OpLoad %float %3129
       %3131 = OpFMul %float %3130 %1995
       %3132 = OpExtInst %float %1 Fma %3125 %3127 %3131
       %3133 = OpExtInst %float %1 Floor %3128
       %3134 = OpFNegate %float %3133
       %3135 = OpExtInst %float %1 Fma %3124 %3127 %3134
       %3136 = OpExtInst %float %1 Fma %3135 %float_2097152 %3132
       %3137 = OpExtInst %float %1 Floor %3136
       %3138 = OpFMul %float %3133 %float_n6_28318548
       %3139 = OpExtInst %float %1 Fma %3128 %float_6_28318548 %3138
       %3140 = OpFMul %float %3137 %float_n6_28318548
       %3141 = OpExtInst %float %1 Fma %3132 %float_6_28318548 %3140
       %3142 = OpExtInst %float %1 Fma %3139 %float_2097152 %3141
       %3143 = OpExtInst %float %1 Sin %3142
       %3144 = OpFMul %float %3143 %2632
       %3145 = OpCompositeConstruct %v3float %550 %550 %3144
       %3146 = OpFAdd %v3float %3111 %3145
       %3147 = OpFSub %v3float %3042 %2561
       %3148 = OpExtInst %v3float %1 NMax %3147 %279
       %3149 = OpExtInst %v3float %1 NMin %3148 %127
       %3150 = OpCompositeExtract %float %3149 0
       %3151 = OpCompositeExtract %float %3149 1
       %3152 = OpCompositeConstruct %v2float %3150 %3151
       %3153 = OpFMul %v2float %1696 %3152
       %3154 = OpFMul %v2float %3152 %1697
       %3155 = OpCompositeExtract %float %3153 0
       %3156 = OpCompositeExtract %float %3154 0
       %3157 = OpCompositeExtract %float %3153 1
       %3158 = OpCompositeExtract %float %3154 1
       %3159 = OpFAdd %float %3155 %3157
       %3160 = OpFAdd %float %3156 %3158
       %3161 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_41 %int_0
       %3162 = OpLoad %float %3161
       %3163 = OpFMul %float %3159 %3162
       %3164 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_41 %int_1
       %3165 = OpLoad %float %3164
       %3166 = OpFMul %float %3165 %1995
       %3167 = OpExtInst %float %1 Fma %3160 %3162 %3166
       %3168 = OpExtInst %float %1 Floor %3163
       %3169 = OpFNegate %float %3168
       %3170 = OpExtInst %float %1 Fma %3159 %3162 %3169
       %3171 = OpExtInst %float %1 Fma %3170 %float_2097152 %3167
       %3172 = OpExtInst %float %1 Floor %3171
       %3173 = OpFMul %float %3168 %float_n6_28318548
       %3174 = OpExtInst %float %1 Fma %3163 %float_6_28318548 %3173
       %3175 = OpFMul %float %3172 %float_n6_28318548
       %3176 = OpExtInst %float %1 Fma %3167 %float_6_28318548 %3175
       %3177 = OpExtInst %float %1 Fma %3174 %float_2097152 %3176
       %3178 = OpExtInst %float %1 Sin %3177
       %3179 = OpFMul %float %3178 %2668
       %3180 = OpCompositeConstruct %v3float %550 %550 %3179
       %3181 = OpFAdd %v3float %3146 %3180
       %3182 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_41 %int_2
       %3183 = OpLoad %float %3182
       %3184 = OpFSub %float %3183 %float_n1
       %3185 = OpExtInst %float %1 FAbs %3184
       %3186 = OpFOrdGreaterThan %bool %3185 %float_9_99999975en06
       %3187 = OpFOrdGreaterThanEqual %bool %3183 %float_n1
       %3188 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_41 %int_3
       %3189 = OpLoad %float %3188
       %3190 = OpSelect %float %3187 %3183 %3189
       %3191 = OpSelect %float %3186 %3190 %3183
       %3192 = OpFSub %float %3191 %float_1
       %3193 = OpExtInst %float %1 FAbs %3192
       %3194 = OpFOrdGreaterThan %bool %3193 %float_9_99999975en06
       %3195 = OpFOrdGreaterThanEqual %bool %3191 %float_1
       %3196 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_42 %int_0
       %3197 = OpLoad %float %3196
       %3198 = OpSelect %float %3195 %3197 %3183
       %3199 = OpSelect %float %3194 %3198 %3183
       %3200 = OpExtInst %float %1 FAbs %3199
       %3201 = OpFOrdGreaterThan %bool %3200 %float_9_99999975en06
       %3202 = OpFOrdGreaterThanEqual %bool %3199 %float_0
       %3203 = OpSelect %float %3202 %float_1 %float_n1
       %3204 = OpSelect %float %3201 %3203 %float_1
       %3205 = OpExtInst %float %1 NMax %3204 %float_n1
       %3206 = OpExtInst %float %1 NMin %3205 %float_1
       %3207 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_43 %int_1
       %3208 = OpLoad %float %3207
       %3209 = OpCompositeConstruct %v3float %3206 %3208 %float_0
       %3210 = OpFAdd %v3float %3209 %1688
       %3211 = OpExtInst %v3float %1 NMax %3210 %279
       %3212 = OpExtInst %v3float %1 NMin %3211 %127
       %3213 = OpCompositeExtract %float %3212 0
       %3214 = OpCompositeExtract %float %3212 1
       %3215 = OpCompositeConstruct %v2float %3213 %3214
       %3216 = OpFMul %v2float %1696 %3215
       %3217 = OpFMul %v2float %3215 %1697
       %3218 = OpCompositeExtract %float %3216 0
       %3219 = OpCompositeExtract %float %3217 0
       %3220 = OpCompositeExtract %float %3216 1
       %3221 = OpCompositeExtract %float %3217 1
       %3222 = OpFAdd %float %3218 %3220
       %3223 = OpFAdd %float %3219 %3221
       %3224 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_0
       %3225 = OpLoad %float %3224
       %3226 = OpFMul %float %3222 %3225
       %3227 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_1
       %3228 = OpLoad %float %3227
       %3229 = OpFMul %float %3228 %1995
       %3230 = OpExtInst %float %1 Fma %3223 %3225 %3229
       %3231 = OpExtInst %float %1 Floor %3226
       %3232 = OpFNegate %float %3231
       %3233 = OpExtInst %float %1 Fma %3222 %3225 %3232
       %3234 = OpExtInst %float %1 Fma %3233 %float_2097152 %3230
       %3235 = OpExtInst %float %1 Floor %3234
       %3236 = OpFMul %float %3231 %float_n6_28318548
       %3237 = OpExtInst %float %1 Fma %3226 %float_6_28318548 %3236
       %3238 = OpFMul %float %3235 %float_n6_28318548
       %3239 = OpExtInst %float %1 Fma %3230 %float_6_28318548 %3238
       %3240 = OpExtInst %float %1 Fma %3237 %float_2097152 %3239
       %3241 = OpExtInst %float %1 Sin %3240
       %3242 = OpFMul %float %3241 %2734
       %3243 = OpFAdd %v3float %3209 %2561
       %3244 = OpExtInst %v3float %1 NMax %3243 %279
       %3245 = OpExtInst %v3float %1 NMin %3244 %127
       %3246 = OpCompositeExtract %float %3245 0
       %3247 = OpCompositeExtract %float %3245 1
       %3248 = OpCompositeConstruct %v2float %3246 %3247
       %3249 = OpFMul %v2float %1696 %3248
       %3250 = OpFMul %v2float %3248 %1697
       %3251 = OpCompositeExtract %float %3249 0
       %3252 = OpCompositeExtract %float %3250 0
       %3253 = OpCompositeExtract %float %3249 1
       %3254 = OpCompositeExtract %float %3250 1
       %3255 = OpFAdd %float %3251 %3253
       %3256 = OpFAdd %float %3252 %3254
       %3257 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_3
       %3258 = OpLoad %float %3257
       %3259 = OpFMul %float %3255 %3258
       %3260 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_0
       %3261 = OpLoad %float %3260
       %3262 = OpFMul %float %3261 %1995
       %3263 = OpExtInst %float %1 Fma %3256 %3258 %3262
       %3264 = OpExtInst %float %1 Floor %3259
       %3265 = OpFNegate %float %3264
       %3266 = OpExtInst %float %1 Fma %3255 %3258 %3265
       %3267 = OpExtInst %float %1 Fma %3266 %float_2097152 %3263
       %3268 = OpExtInst %float %1 Floor %3267
       %3269 = OpFMul %float %3264 %float_n6_28318548
       %3270 = OpExtInst %float %1 Fma %3259 %float_6_28318548 %3269
       %3271 = OpFMul %float %3268 %float_n6_28318548
       %3272 = OpExtInst %float %1 Fma %3263 %float_6_28318548 %3271
       %3273 = OpExtInst %float %1 Fma %3270 %float_2097152 %3272
       %3274 = OpExtInst %float %1 Sin %3273
       %3275 = OpFMul %float %3274 %2768
       %3276 = OpCompositeConstruct %v3float %550 %550 %3242
       %3277 = OpCompositeConstruct %v3float %550 %550 %3275
       %3278 = OpFAdd %v3float %3276 %3277
       %3279 = OpFSub %v3float %3209 %1688
       %3280 = OpExtInst %v3float %1 NMax %3279 %279
       %3281 = OpExtInst %v3float %1 NMin %3280 %127
       %3282 = OpCompositeExtract %float %3281 0
       %3283 = OpCompositeExtract %float %3281 1
       %3284 = OpCompositeConstruct %v2float %3282 %3283
       %3285 = OpFMul %v2float %1696 %3284
       %3286 = OpFMul %v2float %3284 %1697
       %3287 = OpCompositeExtract %float %3285 0
       %3288 = OpCompositeExtract %float %3286 0
       %3289 = OpCompositeExtract %float %3285 1
       %3290 = OpCompositeExtract %float %3286 1
       %3291 = OpFAdd %float %3287 %3289
       %3292 = OpFAdd %float %3288 %3290
       %3293 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_2
       %3294 = OpLoad %float %3293
       %3295 = OpFMul %float %3291 %3294
       %3296 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_3
       %3297 = OpLoad %float %3296
       %3298 = OpFMul %float %3297 %1995
       %3299 = OpExtInst %float %1 Fma %3292 %3294 %3298
       %3300 = OpExtInst %float %1 Floor %3295
       %3301 = OpFNegate %float %3300
       %3302 = OpExtInst %float %1 Fma %3291 %3294 %3301
       %3303 = OpExtInst %float %1 Fma %3302 %float_2097152 %3299
       %3304 = OpExtInst %float %1 Floor %3303
       %3305 = OpFMul %float %3300 %float_n6_28318548
       %3306 = OpExtInst %float %1 Fma %3295 %float_6_28318548 %3305
       %3307 = OpFMul %float %3304 %float_n6_28318548
       %3308 = OpExtInst %float %1 Fma %3299 %float_6_28318548 %3307
       %3309 = OpExtInst %float %1 Fma %3306 %float_2097152 %3308
       %3310 = OpExtInst %float %1 Sin %3309
       %3311 = OpFMul %float %3310 %2805
       %3312 = OpCompositeConstruct %v3float %550 %550 %3311
       %3313 = OpFAdd %v3float %3278 %3312
       %3314 = OpFSub %v3float %3209 %2561
       %3315 = OpExtInst %v3float %1 NMax %3314 %279
       %3316 = OpExtInst %v3float %1 NMin %3315 %127
       %3317 = OpCompositeExtract %float %3316 0
       %3318 = OpCompositeExtract %float %3316 1
       %3319 = OpCompositeConstruct %v2float %3317 %3318
       %3320 = OpFMul %v2float %1696 %3319
       %3321 = OpFMul %v2float %3319 %1697
       %3322 = OpCompositeExtract %float %3320 0
       %3323 = OpCompositeExtract %float %3321 0
       %3324 = OpCompositeExtract %float %3320 1
       %3325 = OpCompositeExtract %float %3321 1
       %3326 = OpFAdd %float %3322 %3324
       %3327 = OpFAdd %float %3323 %3325
       %3328 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_47 %int_1
       %3329 = OpLoad %float %3328
       %3330 = OpFMul %float %3326 %3329
       %3331 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_47 %int_2
       %3332 = OpLoad %float %3331
       %3333 = OpFMul %float %3332 %1995
       %3334 = OpExtInst %float %1 Fma %3327 %3329 %3333
       %3335 = OpExtInst %float %1 Floor %3330
       %3336 = OpFNegate %float %3335
       %3337 = OpExtInst %float %1 Fma %3326 %3329 %3336
       %3338 = OpExtInst %float %1 Fma %3337 %float_2097152 %3334
       %3339 = OpExtInst %float %1 Floor %3338
       %3340 = OpFMul %float %3335 %float_n6_28318548
       %3341 = OpExtInst %float %1 Fma %3330 %float_6_28318548 %3340
       %3342 = OpFMul %float %3339 %float_n6_28318548
       %3343 = OpExtInst %float %1 Fma %3334 %float_6_28318548 %3342
       %3344 = OpExtInst %float %1 Fma %3341 %float_2097152 %3343
       %3345 = OpExtInst %float %1 Sin %3344
       %3346 = OpFMul %float %3345 %2841
       %3347 = OpCompositeConstruct %v3float %550 %550 %3346
       %3348 = OpFAdd %v3float %3313 %3347
       %3349 = OpFAdd %v3float %3181 %3348
       %3350 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_47 %int_3
       %3351 = OpLoad %float %3350
       %3352 = OpFSub %float %3351 %float_n1
       %3353 = OpExtInst %float %1 FAbs %3352
       %3354 = OpFOrdGreaterThan %bool %3353 %float_9_99999975en06
       %3355 = OpFOrdGreaterThanEqual %bool %3351 %float_n1
       %3356 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_48 %int_0
       %3357 = OpLoad %float %3356
       %3358 = OpSelect %float %3355 %3351 %3357
       %3359 = OpSelect %float %3354 %3358 %3351
       %3360 = OpFSub %float %3359 %float_1
       %3361 = OpExtInst %float %1 FAbs %3360
       %3362 = OpFOrdGreaterThan %bool %3361 %float_9_99999975en06
       %3363 = OpFOrdGreaterThanEqual %bool %3359 %float_1
       %3364 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_48 %int_1
       %3365 = OpLoad %float %3364
       %3366 = OpSelect %float %3363 %3365 %3351
       %3367 = OpSelect %float %3362 %3366 %3351
       %3368 = OpExtInst %float %1 FAbs %3367
       %3369 = OpFOrdGreaterThan %bool %3368 %float_9_99999975en06
       %3370 = OpFOrdGreaterThanEqual %bool %3367 %float_0
       %3371 = OpSelect %float %3370 %float_1 %float_n1
       %3372 = OpSelect %float %3369 %3371 %float_1
       %3373 = OpExtInst %float %1 NMax %3372 %float_n1
       %3374 = OpExtInst %float %1 NMin %3373 %float_1
       %3375 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_49 %int_2
       %3376 = OpLoad %float %3375
       %3377 = OpCompositeConstruct %v3float %3374 %3376 %float_0
       %3378 = OpFAdd %v3float %3377 %1688
       %3379 = OpExtInst %v3float %1 NMax %3378 %279
       %3380 = OpExtInst %v3float %1 NMin %3379 %127
       %3381 = OpCompositeExtract %float %3380 0
       %3382 = OpCompositeExtract %float %3380 1
       %3383 = OpCompositeConstruct %v2float %3381 %3382
       %3384 = OpFMul %v2float %1696 %3383
       %3385 = OpFMul %v2float %3383 %1697
       %3386 = OpCompositeExtract %float %3384 0
       %3387 = OpCompositeExtract %float %3385 0
       %3388 = OpCompositeExtract %float %3384 1
       %3389 = OpCompositeExtract %float %3385 1
       %3390 = OpFAdd %float %3386 %3388
       %3391 = OpFAdd %float %3387 %3389
       %3392 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_1
       %3393 = OpLoad %float %3392
       %3394 = OpFMul %float %3390 %3393
       %3395 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_2
       %3396 = OpLoad %float %3395
       %3397 = OpFMul %float %3396 %1995
       %3398 = OpExtInst %float %1 Fma %3391 %3393 %3397
       %3399 = OpExtInst %float %1 Floor %3394
       %3400 = OpFNegate %float %3399
       %3401 = OpExtInst %float %1 Fma %3390 %3393 %3400
       %3402 = OpExtInst %float %1 Fma %3401 %float_2097152 %3398
       %3403 = OpExtInst %float %1 Floor %3402
       %3404 = OpFMul %float %3399 %float_n6_28318548
       %3405 = OpExtInst %float %1 Fma %3394 %float_6_28318548 %3404
       %3406 = OpFMul %float %3403 %float_n6_28318548
       %3407 = OpExtInst %float %1 Fma %3398 %float_6_28318548 %3406
       %3408 = OpExtInst %float %1 Fma %3405 %float_2097152 %3407
       %3409 = OpExtInst %float %1 Sin %3408
       %3410 = OpFMul %float %3409 %2734
       %3411 = OpFAdd %v3float %3377 %2561
       %3412 = OpExtInst %v3float %1 NMax %3411 %279
       %3413 = OpExtInst %v3float %1 NMin %3412 %127
       %3414 = OpCompositeExtract %float %3413 0
       %3415 = OpCompositeExtract %float %3413 1
       %3416 = OpCompositeConstruct %v2float %3414 %3415
       %3417 = OpFMul %v2float %1696 %3416
       %3418 = OpFMul %v2float %3416 %1697
       %3419 = OpCompositeExtract %float %3417 0
       %3420 = OpCompositeExtract %float %3418 0
       %3421 = OpCompositeExtract %float %3417 1
       %3422 = OpCompositeExtract %float %3418 1
       %3423 = OpFAdd %float %3419 %3421
       %3424 = OpFAdd %float %3420 %3422
       %3425 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_0
       %3426 = OpLoad %float %3425
       %3427 = OpFMul %float %3423 %3426
       %3428 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_1
       %3429 = OpLoad %float %3428
       %3430 = OpFMul %float %3429 %1995
       %3431 = OpExtInst %float %1 Fma %3424 %3426 %3430
       %3432 = OpExtInst %float %1 Floor %3427
       %3433 = OpFNegate %float %3432
       %3434 = OpExtInst %float %1 Fma %3423 %3426 %3433
       %3435 = OpExtInst %float %1 Fma %3434 %float_2097152 %3431
       %3436 = OpExtInst %float %1 Floor %3435
       %3437 = OpFMul %float %3432 %float_n6_28318548
       %3438 = OpExtInst %float %1 Fma %3427 %float_6_28318548 %3437
       %3439 = OpFMul %float %3436 %float_n6_28318548
       %3440 = OpExtInst %float %1 Fma %3431 %float_6_28318548 %3439
       %3441 = OpExtInst %float %1 Fma %3438 %float_2097152 %3440
       %3442 = OpExtInst %float %1 Sin %3441
       %3443 = OpFMul %float %3442 %2768
       %3444 = OpCompositeConstruct %v3float %550 %550 %3410
       %3445 = OpCompositeConstruct %v3float %550 %550 %3443
       %3446 = OpFAdd %v3float %3444 %3445
       %3447 = OpFSub %v3float %3377 %1688
       %3448 = OpExtInst %v3float %1 NMax %3447 %279
       %3449 = OpExtInst %v3float %1 NMin %3448 %127
       %3450 = OpCompositeExtract %float %3449 0
       %3451 = OpCompositeExtract %float %3449 1
       %3452 = OpCompositeConstruct %v2float %3450 %3451
       %3453 = OpFMul %v2float %1696 %3452
       %3454 = OpFMul %v2float %3452 %1697
       %3455 = OpCompositeExtract %float %3453 0
       %3456 = OpCompositeExtract %float %3454 0
       %3457 = OpCompositeExtract %float %3453 1
       %3458 = OpCompositeExtract %float %3454 1
       %3459 = OpFAdd %float %3455 %3457
       %3460 = OpFAdd %float %3456 %3458
       %3461 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_3
       %3462 = OpLoad %float %3461
       %3463 = OpFMul %float %3459 %3462
       %3464 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_0
       %3465 = OpLoad %float %3464
       %3466 = OpFMul %float %3465 %1995
       %3467 = OpExtInst %float %1 Fma %3460 %3462 %3466
       %3468 = OpExtInst %float %1 Floor %3463
       %3469 = OpFNegate %float %3468
       %3470 = OpExtInst %float %1 Fma %3459 %3462 %3469
       %3471 = OpExtInst %float %1 Fma %3470 %float_2097152 %3467
       %3472 = OpExtInst %float %1 Floor %3471
       %3473 = OpFMul %float %3468 %float_n6_28318548
       %3474 = OpExtInst %float %1 Fma %3463 %float_6_28318548 %3473
       %3475 = OpFMul %float %3472 %float_n6_28318548
       %3476 = OpExtInst %float %1 Fma %3467 %float_6_28318548 %3475
       %3477 = OpExtInst %float %1 Fma %3474 %float_2097152 %3476
       %3478 = OpExtInst %float %1 Sin %3477
       %3479 = OpFMul %float %3478 %2805
       %3480 = OpCompositeConstruct %v3float %550 %550 %3479
       %3481 = OpFAdd %v3float %3446 %3480
       %3482 = OpFSub %v3float %3377 %2561
       %3483 = OpExtInst %v3float %1 NMax %3482 %279
       %3484 = OpExtInst %v3float %1 NMin %3483 %127
       %3485 = OpCompositeExtract %float %3484 0
       %3486 = OpCompositeExtract %float %3484 1
       %3487 = OpCompositeConstruct %v2float %3485 %3486
       %3488 = OpFMul %v2float %1696 %3487
       %3489 = OpFMul %v2float %3487 %1697
       %3490 = OpCompositeExtract %float %3488 0
       %3491 = OpCompositeExtract %float %3489 0
       %3492 = OpCompositeExtract %float %3488 1
       %3493 = OpCompositeExtract %float %3489 1
       %3494 = OpFAdd %float %3490 %3492
       %3495 = OpFAdd %float %3491 %3493
       %3496 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_2
       %3497 = OpLoad %float %3496
       %3498 = OpFMul %float %3494 %3497
       %3499 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_3
       %3500 = OpLoad %float %3499
       %3501 = OpFMul %float %3500 %1995
       %3502 = OpExtInst %float %1 Fma %3495 %3497 %3501
       %3503 = OpExtInst %float %1 Floor %3498
       %3504 = OpFNegate %float %3503
       %3505 = OpExtInst %float %1 Fma %3494 %3497 %3504
       %3506 = OpExtInst %float %1 Fma %3505 %float_2097152 %3502
       %3507 = OpExtInst %float %1 Floor %3506
       %3508 = OpFMul %float %3503 %float_n6_28318548
       %3509 = OpExtInst %float %1 Fma %3498 %float_6_28318548 %3508
       %3510 = OpFMul %float %3507 %float_n6_28318548
       %3511 = OpExtInst %float %1 Fma %3502 %float_6_28318548 %3510
       %3512 = OpExtInst %float %1 Fma %3509 %float_2097152 %3511
       %3513 = OpExtInst %float %1 Sin %3512
       %3514 = OpFMul %float %3513 %2841
       %3515 = OpCompositeConstruct %v3float %550 %550 %3514
       %3516 = OpFAdd %v3float %3481 %3515
       %3517 = OpFAdd %v3float %3349 %3516
       %3518 = OpFAdd %v3float %3014 %3517
       %3519 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_0
       %3520 = OpLoad %float %3519
       %3521 = OpCompositeConstruct %v3float %3520 %3520 %3520
       %3522 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_1
       %3523 = OpLoad %float %3522
       %3524 = OpFSub %float %3523 %float_n1
       %3525 = OpExtInst %float %1 FAbs %3524
       %3526 = OpFOrdGreaterThan %bool %3525 %float_9_99999975en06
       %3527 = OpFOrdGreaterThanEqual %bool %3523 %float_n1
       %3528 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_2
       %3529 = OpLoad %float %3528
       %3530 = OpSelect %float %3527 %3523 %3529
       %3531 = OpSelect %float %3526 %3530 %3523
       %3532 = OpFSub %float %3531 %float_1
       %3533 = OpExtInst %float %1 FAbs %3532
       %3534 = OpFOrdGreaterThan %bool %3533 %float_9_99999975en06
       %3535 = OpFOrdGreaterThanEqual %bool %3531 %float_1
       %3536 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_3
       %3537 = OpLoad %float %3536
       %3538 = OpSelect %float %3535 %3537 %3523
       %3539 = OpSelect %float %3534 %3538 %3523
       %3540 = OpExtInst %float %1 FAbs %3539
       %3541 = OpFOrdGreaterThan %bool %3540 %float_9_99999975en06
       %3542 = OpFOrdGreaterThanEqual %bool %3539 %float_0
       %3543 = OpSelect %float %3542 %float_1 %float_n1
       %3544 = OpSelect %float %3541 %3543 %float_1
       %3545 = OpExtInst %float %1 NMax %3544 %float_n1
       %3546 = OpExtInst %float %1 NMin %3545 %float_1
       %3547 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_56 %int_0
       %3548 = OpLoad %float %3547
       %3549 = OpCompositeConstruct %v3float %3546 %3548 %float_0
       %3550 = OpFAdd %v3float %3549 %1688
       %3551 = OpExtInst %v3float %1 NMax %3550 %279
       %3552 = OpExtInst %v3float %1 NMin %3551 %127
       %3553 = OpCompositeExtract %float %3552 0
       %3554 = OpCompositeExtract %float %3552 1
       %3555 = OpCompositeConstruct %v2float %3553 %3554
       %3556 = OpFMul %v2float %1696 %3555
       %3557 = OpFMul %v2float %3555 %1697
       %3558 = OpCompositeExtract %float %3556 0
       %3559 = OpCompositeExtract %float %3557 0
       %3560 = OpCompositeExtract %float %3556 1
       %3561 = OpCompositeExtract %float %3557 1
       %3562 = OpFAdd %float %3558 %3560
       %3563 = OpFAdd %float %3559 %3561
       %3564 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_1
       %3565 = OpLoad %float %3564
       %3566 = OpFMul %float %3565 %1725
       %3567 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_2
       %3568 = OpLoad %float %3567
       %3569 = OpFMul %float %3568 %3566
       %3570 = OpFDiv %float %float_2 %3569
       %3571 = OpFMul %float %3562 %3570
       %3572 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_3
       %3573 = OpLoad %float %3572
       %3574 = OpFMul %float %3570 %3573
       %3575 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_0
       %3576 = OpLoad %float %3575
       %3577 = OpCompositeConstruct %v3float %3576 %3576 %3576
       %3578 = OpFMul %v3float %593 %3577
       %3579 = OpFMul %v3float %3577 %642
       %3580 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_1
       %3581 = OpLoad %float %3580
       %3582 = OpCompositeConstruct %v3float %3581 %3581 %3581
       %3583 = OpFMul %v3float %3578 %3582
       %3584 = OpFMul %v3float %3579 %3582
       %3585 = OpFDiv %float %float_1 %1725
       %3586 = OpCompositeConstruct %v3float %3585 %3585 %3585
       %3587 = OpFMul %v3float %3584 %3586
       %3588 = OpCompositeExtract %float %3587 0
       %3589 = OpCompositeExtract %float %3587 1
       %3590 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_3
       %3591 = OpLoad %float %3590
       %3592 = OpFMul %float %1161 %3591
       %3593 = OpCompositeExtract %float %3587 2
       %3594 = OpCompositeConstruct %v2float %3592 %3592
       %3595 = OpCompositeConstruct %v2float %3593 %3593
       %3596 = OpFAdd %v2float %3594 %3595
       %3597 = OpCompositeExtract %float %3596 0
       %3598 = OpCompositeConstruct %v3float %3588 %3589 %3597
       %3599 = OpVectorTimesScalar %v3float %3598 %float_4_76837158en07
       %3600 = OpFAdd %v3float %3599 %137
       %3601 = OpExtInst %v3float %1 Fma %3583 %3586 %3600
       %3602 = OpExtInst %v3float %1 Floor %3601
       %3603 = OpFNegate %v3float %3602
       %3604 = OpExtInst %v3float %1 Fma %3583 %3586 %3603
       %3605 = OpVectorTimesScalar %v3float %3604 %float_2097152
       %3606 = OpFAdd %v3float %3605 %3598
       %3607 = OpVectorTimesScalar %v3float %3606 %float_1
               OpBranch %3608
       %3608 = OpLabel
       %3609 = OpPhi %v3float %3607 %2313 %3610 %3611
       %3612 = OpPhi %float %float_1 %2313 %3613 %3611
       %3614 = OpPhi %float %float_0 %2313 %3615 %3611
       %3616 = OpPhi %uint %uint_0 %2313 %3617 %3611
       %3618 = OpULessThan %bool %3616 %uint_6
               OpLoopMerge %3619 %3611 DontUnroll
               OpBranchConditional %3618 %3611 %3619
       %3611 = OpLabel
       %3620 = OpExtInst %v3float %1 Fract %3609
       %3621 = OpExtInst %v3float %1 Floor %3609
       %3622 = OpDot %float %3621 %386
       %3623 = OpFAdd %float %3622 %float_19
       %3624 = OpFAdd %float %3622 %float_47
       %3625 = OpFAdd %float %3622 %float_66
       %3626 = OpFAdd %float %3622 %float_101
       %3627 = OpFAdd %float %3622 %float_120
       %3628 = OpFAdd %float %3622 %float_148
       %3629 = OpFAdd %float %3622 %float_167
       %3630 = OpConvertFToS %int %3622
       %3631 = OpCompositeConstruct %v3int %3630 %int_0 %int_0
       %3632 = OpBitcast %v3uint %3631
       %3633 = OpIMul %v3uint %3632 %402
       %3634 = OpIAdd %v3uint %3633 %404
       %3635 = OpCompositeExtract %uint %3634 1
       %3636 = OpCompositeExtract %uint %3634 2
       %3637 = OpIMul %uint %3635 %3636
       %3638 = OpCompositeExtract %uint %3634 0
       %3639 = OpIAdd %uint %3638 %3637
       %3640 = OpIMul %uint %3636 %3639
       %3641 = OpIAdd %uint %3635 %3640
       %3642 = OpIMul %uint %3639 %3641
       %3643 = OpIAdd %uint %3636 %3642
       %3644 = OpIMul %uint %3641 %3643
       %3645 = OpIAdd %uint %3639 %3644
       %3646 = OpCompositeInsert %v3uint %3645 %551 0
       %3647 = OpBitwiseAnd %v3uint %405 %406
       %3648 = OpShiftRightLogical %v3uint %3646 %3647
       %3649 = OpCompositeExtract %uint %3648 0
       %3650 = OpCompositeConstruct %v3uint %3649 %3649 %3649
       %3651 = OpBitwiseAnd %v3uint %3650 %387
       %3652 = OpConvertUToF %v3float %3651
       %3653 = OpExtInst %v3float %1 Fma %3652 %391 %279
       %3654 = OpDot %float %3653 %3620
       %3655 = OpConvertFToS %int %3623
       %3656 = OpFSub %v3float %3620 %351
       %3657 = OpCompositeConstruct %v3int %3655 %int_0 %int_0
       %3658 = OpBitcast %v3uint %3657
       %3659 = OpIMul %v3uint %3658 %402
       %3660 = OpIAdd %v3uint %3659 %404
       %3661 = OpCompositeExtract %uint %3660 1
       %3662 = OpCompositeExtract %uint %3660 2
       %3663 = OpIMul %uint %3661 %3662
       %3664 = OpCompositeExtract %uint %3660 0
       %3665 = OpIAdd %uint %3664 %3663
       %3666 = OpIMul %uint %3662 %3665
       %3667 = OpIAdd %uint %3661 %3666
       %3668 = OpIMul %uint %3665 %3667
       %3669 = OpIAdd %uint %3662 %3668
       %3670 = OpIMul %uint %3667 %3669
       %3671 = OpIAdd %uint %3665 %3670
       %3672 = OpCompositeInsert %v3uint %3671 %551 0
       %3673 = OpShiftRightLogical %v3uint %3672 %3647
       %3674 = OpCompositeExtract %uint %3673 0
       %3675 = OpCompositeConstruct %v3uint %3674 %3674 %3674
       %3676 = OpBitwiseAnd %v3uint %3675 %387
       %3677 = OpConvertUToF %v3float %3676
       %3678 = OpExtInst %v3float %1 Fma %3677 %391 %279
       %3679 = OpDot %float %3678 %3656
       %3680 = OpConvertFToS %int %3624
       %3681 = OpFSub %v3float %3620 %352
       %3682 = OpCompositeConstruct %v3int %3680 %int_0 %int_0
       %3683 = OpBitcast %v3uint %3682
       %3684 = OpIMul %v3uint %3683 %402
       %3685 = OpIAdd %v3uint %3684 %404
       %3686 = OpCompositeExtract %uint %3685 1
       %3687 = OpCompositeExtract %uint %3685 2
       %3688 = OpIMul %uint %3686 %3687
       %3689 = OpCompositeExtract %uint %3685 0
       %3690 = OpIAdd %uint %3689 %3688
       %3691 = OpIMul %uint %3687 %3690
       %3692 = OpIAdd %uint %3686 %3691
       %3693 = OpIMul %uint %3690 %3692
       %3694 = OpIAdd %uint %3687 %3693
       %3695 = OpIMul %uint %3692 %3694
       %3696 = OpIAdd %uint %3690 %3695
       %3697 = OpCompositeInsert %v3uint %3696 %551 0
       %3698 = OpShiftRightLogical %v3uint %3697 %3647
       %3699 = OpCompositeExtract %uint %3698 0
       %3700 = OpCompositeConstruct %v3uint %3699 %3699 %3699
       %3701 = OpBitwiseAnd %v3uint %3700 %387
       %3702 = OpConvertUToF %v3float %3701
       %3703 = OpExtInst %v3float %1 Fma %3702 %391 %279
       %3704 = OpDot %float %3703 %3681
       %3705 = OpConvertFToS %int %3625
       %3706 = OpFSub %v3float %3620 %134
       %3707 = OpCompositeConstruct %v3int %3705 %int_0 %int_0
       %3708 = OpBitcast %v3uint %3707
       %3709 = OpIMul %v3uint %3708 %402
       %3710 = OpIAdd %v3uint %3709 %404
       %3711 = OpCompositeExtract %uint %3710 1
       %3712 = OpCompositeExtract %uint %3710 2
       %3713 = OpIMul %uint %3711 %3712
       %3714 = OpCompositeExtract %uint %3710 0
       %3715 = OpIAdd %uint %3714 %3713
       %3716 = OpIMul %uint %3712 %3715
       %3717 = OpIAdd %uint %3711 %3716
       %3718 = OpIMul %uint %3715 %3717
       %3719 = OpIAdd %uint %3712 %3718
       %3720 = OpIMul %uint %3717 %3719
       %3721 = OpIAdd %uint %3715 %3720
       %3722 = OpCompositeInsert %v3uint %3721 %551 0
       %3723 = OpShiftRightLogical %v3uint %3722 %3647
       %3724 = OpCompositeExtract %uint %3723 0
       %3725 = OpCompositeConstruct %v3uint %3724 %3724 %3724
       %3726 = OpBitwiseAnd %v3uint %3725 %387
       %3727 = OpConvertUToF %v3float %3726
       %3728 = OpExtInst %v3float %1 Fma %3727 %391 %279
       %3729 = OpDot %float %3728 %3706
       %3730 = OpConvertFToS %int %3626
       %3731 = OpFSub %v3float %3620 %291
       %3732 = OpCompositeConstruct %v3int %3730 %int_0 %int_0
       %3733 = OpBitcast %v3uint %3732
       %3734 = OpIMul %v3uint %3733 %402
       %3735 = OpIAdd %v3uint %3734 %404
       %3736 = OpCompositeExtract %uint %3735 1
       %3737 = OpCompositeExtract %uint %3735 2
       %3738 = OpIMul %uint %3736 %3737
       %3739 = OpCompositeExtract %uint %3735 0
       %3740 = OpIAdd %uint %3739 %3738
       %3741 = OpIMul %uint %3737 %3740
       %3742 = OpIAdd %uint %3736 %3741
       %3743 = OpIMul %uint %3740 %3742
       %3744 = OpIAdd %uint %3737 %3743
       %3745 = OpIMul %uint %3742 %3744
       %3746 = OpIAdd %uint %3740 %3745
       %3747 = OpCompositeInsert %v3uint %3746 %551 0
       %3748 = OpShiftRightLogical %v3uint %3747 %3647
       %3749 = OpCompositeExtract %uint %3748 0
       %3750 = OpCompositeConstruct %v3uint %3749 %3749 %3749
       %3751 = OpBitwiseAnd %v3uint %3750 %387
       %3752 = OpConvertUToF %v3float %3751
       %3753 = OpExtInst %v3float %1 Fma %3752 %391 %279
       %3754 = OpDot %float %3753 %3731
       %3755 = OpConvertFToS %int %3627
       %3756 = OpFSub %v3float %3620 %140
       %3757 = OpCompositeConstruct %v3int %3755 %int_0 %int_0
       %3758 = OpBitcast %v3uint %3757
       %3759 = OpIMul %v3uint %3758 %402
       %3760 = OpIAdd %v3uint %3759 %404
       %3761 = OpCompositeExtract %uint %3760 1
       %3762 = OpCompositeExtract %uint %3760 2
       %3763 = OpIMul %uint %3761 %3762
       %3764 = OpCompositeExtract %uint %3760 0
       %3765 = OpIAdd %uint %3764 %3763
       %3766 = OpIMul %uint %3762 %3765
       %3767 = OpIAdd %uint %3761 %3766
       %3768 = OpIMul %uint %3765 %3767
       %3769 = OpIAdd %uint %3762 %3768
       %3770 = OpIMul %uint %3767 %3769
       %3771 = OpIAdd %uint %3765 %3770
       %3772 = OpCompositeInsert %v3uint %3771 %551 0
       %3773 = OpShiftRightLogical %v3uint %3772 %3647
       %3774 = OpCompositeExtract %uint %3773 0
       %3775 = OpCompositeConstruct %v3uint %3774 %3774 %3774
       %3776 = OpBitwiseAnd %v3uint %3775 %387
       %3777 = OpConvertUToF %v3float %3776
       %3778 = OpExtInst %v3float %1 Fma %3777 %391 %279
       %3779 = OpDot %float %3778 %3756
       %3780 = OpConvertFToS %int %3628
       %3781 = OpFSub %v3float %3620 %135
       %3782 = OpCompositeConstruct %v3int %3780 %int_0 %int_0
       %3783 = OpBitcast %v3uint %3782
       %3784 = OpIMul %v3uint %3783 %402
       %3785 = OpIAdd %v3uint %3784 %404
       %3786 = OpCompositeExtract %uint %3785 1
       %3787 = OpCompositeExtract %uint %3785 2
       %3788 = OpIMul %uint %3786 %3787
       %3789 = OpCompositeExtract %uint %3785 0
       %3790 = OpIAdd %uint %3789 %3788
       %3791 = OpIMul %uint %3787 %3790
       %3792 = OpIAdd %uint %3786 %3791
       %3793 = OpIMul %uint %3790 %3792
       %3794 = OpIAdd %uint %3787 %3793
       %3795 = OpIMul %uint %3792 %3794
       %3796 = OpIAdd %uint %3790 %3795
       %3797 = OpCompositeInsert %v3uint %3796 %551 0
       %3798 = OpShiftRightLogical %v3uint %3797 %3647
       %3799 = OpCompositeExtract %uint %3798 0
       %3800 = OpCompositeConstruct %v3uint %3799 %3799 %3799
       %3801 = OpBitwiseAnd %v3uint %3800 %387
       %3802 = OpConvertUToF %v3float %3801
       %3803 = OpExtInst %v3float %1 Fma %3802 %391 %279
       %3804 = OpDot %float %3803 %3781
       %3805 = OpConvertFToS %int %3629
       %3806 = OpFSub %v3float %3620 %127
       %3807 = OpCompositeConstruct %v3int %3805 %int_0 %int_0
       %3808 = OpBitcast %v3uint %3807
       %3809 = OpIMul %v3uint %3808 %402
       %3810 = OpIAdd %v3uint %3809 %404
       %3811 = OpCompositeExtract %uint %3810 1
       %3812 = OpCompositeExtract %uint %3810 2
       %3813 = OpIMul %uint %3811 %3812
       %3814 = OpCompositeExtract %uint %3810 0
       %3815 = OpIAdd %uint %3814 %3813
       %3816 = OpIMul %uint %3812 %3815
       %3817 = OpIAdd %uint %3811 %3816
       %3818 = OpIMul %uint %3815 %3817
       %3819 = OpIAdd %uint %3812 %3818
       %3820 = OpIMul %uint %3817 %3819
       %3821 = OpIAdd %uint %3815 %3820
       %3822 = OpCompositeInsert %v3uint %3821 %551 0
       %3823 = OpShiftRightLogical %v3uint %3822 %3647
       %3824 = OpCompositeExtract %uint %3823 0
       %3825 = OpCompositeConstruct %v3uint %3824 %3824 %3824
       %3826 = OpBitwiseAnd %v3uint %3825 %387
       %3827 = OpConvertUToF %v3float %3826
       %3828 = OpExtInst %v3float %1 Fma %3827 %391 %279
       %3829 = OpDot %float %3828 %3806
       %3830 = OpCompositeExtract %float %3620 0
       %3831 = OpCompositeExtract %float %3620 1
       %3832 = OpCompositeExtract %float %3620 2
       %3833 = OpCompositeConstruct %v4float %3830 %3831 %3832 %float_0
       %3834 = OpFMul %v4float %3833 %3833
       %3835 = OpFMul %v4float %3834 %3833
       %3836 = OpVectorTimesScalar %v4float %3833 %float_6
       %3837 = OpFSub %v4float %3836 %382
       %3838 = OpExtInst %v4float %1 Fma %3833 %3837 %383
       %3839 = OpFMul %v4float %3835 %3838
       %3840 = OpCompositeExtract %float %3839 0
       %3841 = OpExtInst %float %1 FMix %3654 %3679 %3840
       %3842 = OpExtInst %float %1 FMix %3704 %3729 %3840
       %3843 = OpCompositeExtract %float %3839 1
       %3844 = OpExtInst %float %1 FMix %3841 %3842 %3843
       %3845 = OpExtInst %float %1 FMix %3754 %3779 %3840
       %3846 = OpExtInst %float %1 FMix %3804 %3829 %3840
       %3847 = OpExtInst %float %1 FMix %3845 %3846 %3843
       %3848 = OpCompositeExtract %float %3839 2
       %3849 = OpExtInst %float %1 FMix %3844 %3847 %3848
       %3615 = OpExtInst %float %1 Fma %3849 %3612 %3614
       %3610 = OpVectorTimesScalar %v3float %3609 %float_2
       %3613 = OpFMul %float %3612 %float_0_5
       %3617 = OpIAdd %uint %3616 %uint_1
               OpBranch %3608
       %3619 = OpLabel
       %3850 = OpExtInst %float %1 Fma %3614 %float_0_5 %float_0_5
       %3851 = OpExtInst %float %1 FMix %float_0 %float_1 %3850
       %3852 = OpExtInst %float %1 FClamp %3851 %float_0 %float_1
       %3853 = OpExtInst %float %1 FMix %1161 %1714 %3852
       %3854 = OpFMul %float %3574 %3853
       %3855 = OpExtInst %float %1 Fma %3563 %3570 %3854
       %3856 = OpExtInst %float %1 Floor %3571
       %3857 = OpFNegate %float %3856
       %3858 = OpExtInst %float %1 Fma %3562 %3570 %3857
       %3859 = OpExtInst %float %1 Fma %3858 %float_2097152 %3855
       %3860 = OpExtInst %float %1 Floor %3859
       %3861 = OpFMul %float %3856 %float_n6_28318548
       %3862 = OpExtInst %float %1 Fma %3571 %float_6_28318548 %3861
       %3863 = OpFMul %float %3860 %float_n6_28318548
       %3864 = OpExtInst %float %1 Fma %3855 %float_6_28318548 %3863
       %3865 = OpExtInst %float %1 Fma %3862 %float_2097152 %3864
       %3866 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_0
       %3867 = OpLoad %float %3866
       %3868 = OpFMul %float %3867 %1725
       %3869 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_1
       %3870 = OpLoad %float %3869
       %3871 = OpFMul %float %3870 %1725
       %3872 = OpFNegate %float %3871
       %3873 = OpExtInst %float %1 Fma %3867 %1725 %3872
       %3874 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_2
       %3875 = OpLoad %float %3874
       %3876 = OpCompositeConstruct %v3float %3875 %3875 %3875
       %3877 = OpFMul %v3float %593 %3876
       %3878 = OpFMul %v3float %3876 %642
       %3879 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_3
       %3880 = OpLoad %float %3879
       %3881 = OpCompositeConstruct %v3float %3880 %3880 %3880
       %3882 = OpFMul %v3float %3877 %3881
       %3883 = OpFMul %v3float %3878 %3881
       %3884 = OpFMul %v3float %3883 %3586
       %3885 = OpCompositeExtract %float %3884 0
       %3886 = OpCompositeExtract %float %3884 1
       %3887 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_60 %int_1
       %3888 = OpLoad %float %3887
       %3889 = OpFMul %float %1161 %3888
       %3890 = OpCompositeExtract %float %3884 2
       %3891 = OpCompositeConstruct %v2float %3889 %3889
       %3892 = OpCompositeConstruct %v2float %3890 %3890
       %3893 = OpFAdd %v2float %3891 %3892
       %3894 = OpCompositeExtract %float %3893 0
       %3895 = OpCompositeConstruct %v3float %3885 %3886 %3894
       %3896 = OpVectorTimesScalar %v3float %3895 %float_4_76837158en07
       %3897 = OpFAdd %v3float %3896 %137
       %3898 = OpExtInst %v3float %1 Fma %3882 %3586 %3897
       %3899 = OpExtInst %v3float %1 Floor %3898
       %3900 = OpFNegate %v3float %3899
       %3901 = OpExtInst %v3float %1 Fma %3882 %3586 %3900
       %3902 = OpVectorTimesScalar %v3float %3901 %float_2097152
       %3903 = OpFAdd %v3float %3902 %3895
       %3904 = OpVectorTimesScalar %v3float %3903 %float_1
               OpBranch %3905
       %3905 = OpLabel
       %3906 = OpPhi %v3float %3904 %3619 %3907 %3908
       %3909 = OpPhi %float %float_1 %3619 %3910 %3908
       %3911 = OpPhi %float %float_0 %3619 %3912 %3908
       %3913 = OpPhi %uint %uint_0 %3619 %3914 %3908
       %3915 = OpULessThan %bool %3913 %uint_10
               OpLoopMerge %3916 %3908 DontUnroll
               OpBranchConditional %3915 %3908 %3916
       %3908 = OpLabel
       %3917 = OpExtInst %v3float %1 Fract %3906
       %3918 = OpExtInst %v3float %1 Floor %3906
       %3919 = OpDot %float %3918 %386
       %3920 = OpFAdd %float %3919 %float_19
       %3921 = OpFAdd %float %3919 %float_47
       %3922 = OpFAdd %float %3919 %float_66
       %3923 = OpFAdd %float %3919 %float_101
       %3924 = OpFAdd %float %3919 %float_120
       %3925 = OpFAdd %float %3919 %float_148
       %3926 = OpFAdd %float %3919 %float_167
       %3927 = OpConvertFToS %int %3919
       %3928 = OpCompositeConstruct %v3int %3927 %int_0 %int_0
       %3929 = OpBitcast %v3uint %3928
       %3930 = OpIMul %v3uint %3929 %402
       %3931 = OpIAdd %v3uint %3930 %404
       %3932 = OpCompositeExtract %uint %3931 1
       %3933 = OpCompositeExtract %uint %3931 2
       %3934 = OpIMul %uint %3932 %3933
       %3935 = OpCompositeExtract %uint %3931 0
       %3936 = OpIAdd %uint %3935 %3934
       %3937 = OpIMul %uint %3933 %3936
       %3938 = OpIAdd %uint %3932 %3937
       %3939 = OpIMul %uint %3936 %3938
       %3940 = OpIAdd %uint %3933 %3939
       %3941 = OpIMul %uint %3938 %3940
       %3942 = OpIAdd %uint %3936 %3941
       %3943 = OpCompositeInsert %v3uint %3942 %551 0
       %3944 = OpBitwiseAnd %v3uint %405 %406
       %3945 = OpShiftRightLogical %v3uint %3943 %3944
       %3946 = OpCompositeExtract %uint %3945 0
       %3947 = OpCompositeConstruct %v3uint %3946 %3946 %3946
       %3948 = OpBitwiseAnd %v3uint %3947 %387
       %3949 = OpConvertUToF %v3float %3948
       %3950 = OpExtInst %v3float %1 Fma %3949 %391 %279
       %3951 = OpDot %float %3950 %3917
       %3952 = OpConvertFToS %int %3920
       %3953 = OpFSub %v3float %3917 %351
       %3954 = OpCompositeConstruct %v3int %3952 %int_0 %int_0
       %3955 = OpBitcast %v3uint %3954
       %3956 = OpIMul %v3uint %3955 %402
       %3957 = OpIAdd %v3uint %3956 %404
       %3958 = OpCompositeExtract %uint %3957 1
       %3959 = OpCompositeExtract %uint %3957 2
       %3960 = OpIMul %uint %3958 %3959
       %3961 = OpCompositeExtract %uint %3957 0
       %3962 = OpIAdd %uint %3961 %3960
       %3963 = OpIMul %uint %3959 %3962
       %3964 = OpIAdd %uint %3958 %3963
       %3965 = OpIMul %uint %3962 %3964
       %3966 = OpIAdd %uint %3959 %3965
       %3967 = OpIMul %uint %3964 %3966
       %3968 = OpIAdd %uint %3962 %3967
       %3969 = OpCompositeInsert %v3uint %3968 %551 0
       %3970 = OpShiftRightLogical %v3uint %3969 %3944
       %3971 = OpCompositeExtract %uint %3970 0
       %3972 = OpCompositeConstruct %v3uint %3971 %3971 %3971
       %3973 = OpBitwiseAnd %v3uint %3972 %387
       %3974 = OpConvertUToF %v3float %3973
       %3975 = OpExtInst %v3float %1 Fma %3974 %391 %279
       %3976 = OpDot %float %3975 %3953
       %3977 = OpConvertFToS %int %3921
       %3978 = OpFSub %v3float %3917 %352
       %3979 = OpCompositeConstruct %v3int %3977 %int_0 %int_0
       %3980 = OpBitcast %v3uint %3979
       %3981 = OpIMul %v3uint %3980 %402
       %3982 = OpIAdd %v3uint %3981 %404
       %3983 = OpCompositeExtract %uint %3982 1
       %3984 = OpCompositeExtract %uint %3982 2
       %3985 = OpIMul %uint %3983 %3984
       %3986 = OpCompositeExtract %uint %3982 0
       %3987 = OpIAdd %uint %3986 %3985
       %3988 = OpIMul %uint %3984 %3987
       %3989 = OpIAdd %uint %3983 %3988
       %3990 = OpIMul %uint %3987 %3989
       %3991 = OpIAdd %uint %3984 %3990
       %3992 = OpIMul %uint %3989 %3991
       %3993 = OpIAdd %uint %3987 %3992
       %3994 = OpCompositeInsert %v3uint %3993 %551 0
       %3995 = OpShiftRightLogical %v3uint %3994 %3944
       %3996 = OpCompositeExtract %uint %3995 0
       %3997 = OpCompositeConstruct %v3uint %3996 %3996 %3996
       %3998 = OpBitwiseAnd %v3uint %3997 %387
       %3999 = OpConvertUToF %v3float %3998
       %4000 = OpExtInst %v3float %1 Fma %3999 %391 %279
       %4001 = OpDot %float %4000 %3978
       %4002 = OpConvertFToS %int %3922
       %4003 = OpFSub %v3float %3917 %134
       %4004 = OpCompositeConstruct %v3int %4002 %int_0 %int_0
       %4005 = OpBitcast %v3uint %4004
       %4006 = OpIMul %v3uint %4005 %402
       %4007 = OpIAdd %v3uint %4006 %404
       %4008 = OpCompositeExtract %uint %4007 1
       %4009 = OpCompositeExtract %uint %4007 2
       %4010 = OpIMul %uint %4008 %4009
       %4011 = OpCompositeExtract %uint %4007 0
       %4012 = OpIAdd %uint %4011 %4010
       %4013 = OpIMul %uint %4009 %4012
       %4014 = OpIAdd %uint %4008 %4013
       %4015 = OpIMul %uint %4012 %4014
       %4016 = OpIAdd %uint %4009 %4015
       %4017 = OpIMul %uint %4014 %4016
       %4018 = OpIAdd %uint %4012 %4017
       %4019 = OpCompositeInsert %v3uint %4018 %551 0
       %4020 = OpShiftRightLogical %v3uint %4019 %3944
       %4021 = OpCompositeExtract %uint %4020 0
       %4022 = OpCompositeConstruct %v3uint %4021 %4021 %4021
       %4023 = OpBitwiseAnd %v3uint %4022 %387
       %4024 = OpConvertUToF %v3float %4023
       %4025 = OpExtInst %v3float %1 Fma %4024 %391 %279
       %4026 = OpDot %float %4025 %4003
       %4027 = OpConvertFToS %int %3923
       %4028 = OpFSub %v3float %3917 %291
       %4029 = OpCompositeConstruct %v3int %4027 %int_0 %int_0
       %4030 = OpBitcast %v3uint %4029
       %4031 = OpIMul %v3uint %4030 %402
       %4032 = OpIAdd %v3uint %4031 %404
       %4033 = OpCompositeExtract %uint %4032 1
       %4034 = OpCompositeExtract %uint %4032 2
       %4035 = OpIMul %uint %4033 %4034
       %4036 = OpCompositeExtract %uint %4032 0
       %4037 = OpIAdd %uint %4036 %4035
       %4038 = OpIMul %uint %4034 %4037
       %4039 = OpIAdd %uint %4033 %4038
       %4040 = OpIMul %uint %4037 %4039
       %4041 = OpIAdd %uint %4034 %4040
       %4042 = OpIMul %uint %4039 %4041
       %4043 = OpIAdd %uint %4037 %4042
       %4044 = OpCompositeInsert %v3uint %4043 %551 0
       %4045 = OpShiftRightLogical %v3uint %4044 %3944
       %4046 = OpCompositeExtract %uint %4045 0
       %4047 = OpCompositeConstruct %v3uint %4046 %4046 %4046
       %4048 = OpBitwiseAnd %v3uint %4047 %387
       %4049 = OpConvertUToF %v3float %4048
       %4050 = OpExtInst %v3float %1 Fma %4049 %391 %279
       %4051 = OpDot %float %4050 %4028
       %4052 = OpConvertFToS %int %3924
       %4053 = OpFSub %v3float %3917 %140
       %4054 = OpCompositeConstruct %v3int %4052 %int_0 %int_0
       %4055 = OpBitcast %v3uint %4054
       %4056 = OpIMul %v3uint %4055 %402
       %4057 = OpIAdd %v3uint %4056 %404
       %4058 = OpCompositeExtract %uint %4057 1
       %4059 = OpCompositeExtract %uint %4057 2
       %4060 = OpIMul %uint %4058 %4059
       %4061 = OpCompositeExtract %uint %4057 0
       %4062 = OpIAdd %uint %4061 %4060
       %4063 = OpIMul %uint %4059 %4062
       %4064 = OpIAdd %uint %4058 %4063
       %4065 = OpIMul %uint %4062 %4064
       %4066 = OpIAdd %uint %4059 %4065
       %4067 = OpIMul %uint %4064 %4066
       %4068 = OpIAdd %uint %4062 %4067
       %4069 = OpCompositeInsert %v3uint %4068 %551 0
       %4070 = OpShiftRightLogical %v3uint %4069 %3944
       %4071 = OpCompositeExtract %uint %4070 0
       %4072 = OpCompositeConstruct %v3uint %4071 %4071 %4071
       %4073 = OpBitwiseAnd %v3uint %4072 %387
       %4074 = OpConvertUToF %v3float %4073
       %4075 = OpExtInst %v3float %1 Fma %4074 %391 %279
       %4076 = OpDot %float %4075 %4053
       %4077 = OpConvertFToS %int %3925
       %4078 = OpFSub %v3float %3917 %135
       %4079 = OpCompositeConstruct %v3int %4077 %int_0 %int_0
       %4080 = OpBitcast %v3uint %4079
       %4081 = OpIMul %v3uint %4080 %402
       %4082 = OpIAdd %v3uint %4081 %404
       %4083 = OpCompositeExtract %uint %4082 1
       %4084 = OpCompositeExtract %uint %4082 2
       %4085 = OpIMul %uint %4083 %4084
       %4086 = OpCompositeExtract %uint %4082 0
       %4087 = OpIAdd %uint %4086 %4085
       %4088 = OpIMul %uint %4084 %4087
       %4089 = OpIAdd %uint %4083 %4088
       %4090 = OpIMul %uint %4087 %4089
       %4091 = OpIAdd %uint %4084 %4090
       %4092 = OpIMul %uint %4089 %4091
       %4093 = OpIAdd %uint %4087 %4092
       %4094 = OpCompositeInsert %v3uint %4093 %551 0
       %4095 = OpShiftRightLogical %v3uint %4094 %3944
       %4096 = OpCompositeExtract %uint %4095 0
       %4097 = OpCompositeConstruct %v3uint %4096 %4096 %4096
       %4098 = OpBitwiseAnd %v3uint %4097 %387
       %4099 = OpConvertUToF %v3float %4098
       %4100 = OpExtInst %v3float %1 Fma %4099 %391 %279
       %4101 = OpDot %float %4100 %4078
       %4102 = OpConvertFToS %int %3926
       %4103 = OpFSub %v3float %3917 %127
       %4104 = OpCompositeConstruct %v3int %4102 %int_0 %int_0
       %4105 = OpBitcast %v3uint %4104
       %4106 = OpIMul %v3uint %4105 %402
       %4107 = OpIAdd %v3uint %4106 %404
       %4108 = OpCompositeExtract %uint %4107 1
       %4109 = OpCompositeExtract %uint %4107 2
       %4110 = OpIMul %uint %4108 %4109
       %4111 = OpCompositeExtract %uint %4107 0
       %4112 = OpIAdd %uint %4111 %4110
       %4113 = OpIMul %uint %4109 %4112
       %4114 = OpIAdd %uint %4108 %4113
       %4115 = OpIMul %uint %4112 %4114
       %4116 = OpIAdd %uint %4109 %4115
       %4117 = OpIMul %uint %4114 %4116
       %4118 = OpIAdd %uint %4112 %4117
       %4119 = OpCompositeInsert %v3uint %4118 %551 0
       %4120 = OpShiftRightLogical %v3uint %4119 %3944
       %4121 = OpCompositeExtract %uint %4120 0
       %4122 = OpCompositeConstruct %v3uint %4121 %4121 %4121
       %4123 = OpBitwiseAnd %v3uint %4122 %387
       %4124 = OpConvertUToF %v3float %4123
       %4125 = OpExtInst %v3float %1 Fma %4124 %391 %279
       %4126 = OpDot %float %4125 %4103
       %4127 = OpCompositeExtract %float %3917 0
       %4128 = OpCompositeExtract %float %3917 1
       %4129 = OpCompositeExtract %float %3917 2
       %4130 = OpCompositeConstruct %v4float %4127 %4128 %4129 %float_0
       %4131 = OpFMul %v4float %4130 %4130
       %4132 = OpFMul %v4float %4131 %4130
       %4133 = OpVectorTimesScalar %v4float %4130 %float_6
       %4134 = OpFSub %v4float %4133 %382
       %4135 = OpExtInst %v4float %1 Fma %4130 %4134 %383
       %4136 = OpFMul %v4float %4132 %4135
       %4137 = OpCompositeExtract %float %4136 0
       %4138 = OpExtInst %float %1 FMix %3951 %3976 %4137
       %4139 = OpExtInst %float %1 FMix %4001 %4026 %4137
       %4140 = OpCompositeExtract %float %4136 1
       %4141 = OpExtInst %float %1 FMix %4138 %4139 %4140
       %4142 = OpExtInst %float %1 FMix %4051 %4076 %4137
       %4143 = OpExtInst %float %1 FMix %4101 %4126 %4137
       %4144 = OpExtInst %float %1 FMix %4142 %4143 %4140
       %4145 = OpCompositeExtract %float %4136 2
       %4146 = OpExtInst %float %1 FMix %4141 %4144 %4145
       %4147 = OpExtInst %float %1 FAbs %4146
       %3912 = OpExtInst %float %1 Fma %4147 %3909 %3911
       %3907 = OpVectorTimesScalar %v3float %3906 %float_2
       %3910 = OpFMul %float %3909 %float_0_5
       %3914 = OpIAdd %uint %3913 %uint_1
               OpBranch %3905
       %3916 = OpLabel
       %4148 = OpExtInst %float %1 FMix %float_0 %float_1 %3911
       %4149 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_60 %int_2
       %4150 = OpLoad %float %4149
       %4151 = OpCompositeConstruct %v3float %4150 %4150 %4150
       %4152 = OpFMul %v3float %593 %4151
       %4153 = OpFMul %v3float %4151 %642
       %4154 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_60 %int_3
       %4155 = OpLoad %float %4154
       %4156 = OpCompositeConstruct %v3float %4155 %4155 %4155
       %4157 = OpFMul %v3float %4152 %4156
       %4158 = OpFMul %v3float %4153 %4156
       %4159 = OpFMul %v3float %4158 %3586
       %4160 = OpCompositeExtract %float %4159 0
       %4161 = OpCompositeExtract %float %4159 1
       %4162 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_61 %int_1
       %4163 = OpLoad %float %4162
       %4164 = OpFMul %float %1161 %4163
       %4165 = OpCompositeExtract %float %4159 2
       %4166 = OpCompositeConstruct %v2float %4164 %4164
       %4167 = OpCompositeConstruct %v2float %4165 %4165
       %4168 = OpFAdd %v2float %4166 %4167
       %4169 = OpCompositeExtract %float %4168 0
       %4170 = OpCompositeConstruct %v3float %4160 %4161 %4169
       %4171 = OpVectorTimesScalar %v3float %4170 %float_4_76837158en07
       %4172 = OpFAdd %v3float %4171 %137
       %4173 = OpExtInst %v3float %1 Fma %4157 %3586 %4172
       %4174 = OpExtInst %v3float %1 Floor %4173
       %4175 = OpFNegate %v3float %4174
       %4176 = OpExtInst %v3float %1 Fma %4157 %3586 %4175
       %4177 = OpVectorTimesScalar %v3float %4176 %float_2097152
       %4178 = OpFAdd %v3float %4177 %4170
       %4179 = OpVectorTimesScalar %v3float %4178 %float_1
               OpBranch %4180
       %4180 = OpLabel
       %4181 = OpPhi %v3float %4179 %3916 %4182 %4183
       %4184 = OpPhi %float %float_1 %3916 %4185 %4183
       %4186 = OpPhi %float %float_0 %3916 %4187 %4183
       %4188 = OpPhi %uint %uint_0 %3916 %4189 %4183
       %4190 = OpULessThan %bool %4188 %uint_10
               OpLoopMerge %4191 %4183 DontUnroll
               OpBranchConditional %4190 %4183 %4191
       %4183 = OpLabel
       %4192 = OpExtInst %v3float %1 Fract %4181
       %4193 = OpExtInst %v3float %1 Floor %4181
       %4194 = OpDot %float %4193 %386
       %4195 = OpFAdd %float %4194 %float_19
       %4196 = OpFAdd %float %4194 %float_47
       %4197 = OpFAdd %float %4194 %float_66
       %4198 = OpFAdd %float %4194 %float_101
       %4199 = OpFAdd %float %4194 %float_120
       %4200 = OpFAdd %float %4194 %float_148
       %4201 = OpFAdd %float %4194 %float_167
       %4202 = OpConvertFToS %int %4194
       %4203 = OpCompositeConstruct %v3int %4202 %int_0 %int_0
       %4204 = OpBitcast %v3uint %4203
       %4205 = OpIMul %v3uint %4204 %402
       %4206 = OpIAdd %v3uint %4205 %404
       %4207 = OpCompositeExtract %uint %4206 1
       %4208 = OpCompositeExtract %uint %4206 2
       %4209 = OpIMul %uint %4207 %4208
       %4210 = OpCompositeExtract %uint %4206 0
       %4211 = OpIAdd %uint %4210 %4209
       %4212 = OpIMul %uint %4208 %4211
       %4213 = OpIAdd %uint %4207 %4212
       %4214 = OpIMul %uint %4211 %4213
       %4215 = OpIAdd %uint %4208 %4214
       %4216 = OpIMul %uint %4213 %4215
       %4217 = OpIAdd %uint %4211 %4216
       %4218 = OpCompositeInsert %v3uint %4217 %551 0
       %4219 = OpBitwiseAnd %v3uint %405 %406
       %4220 = OpShiftRightLogical %v3uint %4218 %4219
       %4221 = OpCompositeExtract %uint %4220 0
       %4222 = OpCompositeConstruct %v3uint %4221 %4221 %4221
       %4223 = OpBitwiseAnd %v3uint %4222 %387
       %4224 = OpConvertUToF %v3float %4223
       %4225 = OpExtInst %v3float %1 Fma %4224 %391 %279
       %4226 = OpDot %float %4225 %4192
       %4227 = OpConvertFToS %int %4195
       %4228 = OpFSub %v3float %4192 %351
       %4229 = OpCompositeConstruct %v3int %4227 %int_0 %int_0
       %4230 = OpBitcast %v3uint %4229
       %4231 = OpIMul %v3uint %4230 %402
       %4232 = OpIAdd %v3uint %4231 %404
       %4233 = OpCompositeExtract %uint %4232 1
       %4234 = OpCompositeExtract %uint %4232 2
       %4235 = OpIMul %uint %4233 %4234
       %4236 = OpCompositeExtract %uint %4232 0
       %4237 = OpIAdd %uint %4236 %4235
       %4238 = OpIMul %uint %4234 %4237
       %4239 = OpIAdd %uint %4233 %4238
       %4240 = OpIMul %uint %4237 %4239
       %4241 = OpIAdd %uint %4234 %4240
       %4242 = OpIMul %uint %4239 %4241
       %4243 = OpIAdd %uint %4237 %4242
       %4244 = OpCompositeInsert %v3uint %4243 %551 0
       %4245 = OpShiftRightLogical %v3uint %4244 %4219
       %4246 = OpCompositeExtract %uint %4245 0
       %4247 = OpCompositeConstruct %v3uint %4246 %4246 %4246
       %4248 = OpBitwiseAnd %v3uint %4247 %387
       %4249 = OpConvertUToF %v3float %4248
       %4250 = OpExtInst %v3float %1 Fma %4249 %391 %279
       %4251 = OpDot %float %4250 %4228
       %4252 = OpConvertFToS %int %4196
       %4253 = OpFSub %v3float %4192 %352
       %4254 = OpCompositeConstruct %v3int %4252 %int_0 %int_0
       %4255 = OpBitcast %v3uint %4254
       %4256 = OpIMul %v3uint %4255 %402
       %4257 = OpIAdd %v3uint %4256 %404
       %4258 = OpCompositeExtract %uint %4257 1
       %4259 = OpCompositeExtract %uint %4257 2
       %4260 = OpIMul %uint %4258 %4259
       %4261 = OpCompositeExtract %uint %4257 0
       %4262 = OpIAdd %uint %4261 %4260
       %4263 = OpIMul %uint %4259 %4262
       %4264 = OpIAdd %uint %4258 %4263
       %4265 = OpIMul %uint %4262 %4264
       %4266 = OpIAdd %uint %4259 %4265
       %4267 = OpIMul %uint %4264 %4266
       %4268 = OpIAdd %uint %4262 %4267
       %4269 = OpCompositeInsert %v3uint %4268 %551 0
       %4270 = OpShiftRightLogical %v3uint %4269 %4219
       %4271 = OpCompositeExtract %uint %4270 0
       %4272 = OpCompositeConstruct %v3uint %4271 %4271 %4271
       %4273 = OpBitwiseAnd %v3uint %4272 %387
       %4274 = OpConvertUToF %v3float %4273
       %4275 = OpExtInst %v3float %1 Fma %4274 %391 %279
       %4276 = OpDot %float %4275 %4253
       %4277 = OpConvertFToS %int %4197
       %4278 = OpFSub %v3float %4192 %134
       %4279 = OpCompositeConstruct %v3int %4277 %int_0 %int_0
       %4280 = OpBitcast %v3uint %4279
       %4281 = OpIMul %v3uint %4280 %402
       %4282 = OpIAdd %v3uint %4281 %404
       %4283 = OpCompositeExtract %uint %4282 1
       %4284 = OpCompositeExtract %uint %4282 2
       %4285 = OpIMul %uint %4283 %4284
       %4286 = OpCompositeExtract %uint %4282 0
       %4287 = OpIAdd %uint %4286 %4285
       %4288 = OpIMul %uint %4284 %4287
       %4289 = OpIAdd %uint %4283 %4288
       %4290 = OpIMul %uint %4287 %4289
       %4291 = OpIAdd %uint %4284 %4290
       %4292 = OpIMul %uint %4289 %4291
       %4293 = OpIAdd %uint %4287 %4292
       %4294 = OpCompositeInsert %v3uint %4293 %551 0
       %4295 = OpShiftRightLogical %v3uint %4294 %4219
       %4296 = OpCompositeExtract %uint %4295 0
       %4297 = OpCompositeConstruct %v3uint %4296 %4296 %4296
       %4298 = OpBitwiseAnd %v3uint %4297 %387
       %4299 = OpConvertUToF %v3float %4298
       %4300 = OpExtInst %v3float %1 Fma %4299 %391 %279
       %4301 = OpDot %float %4300 %4278
       %4302 = OpConvertFToS %int %4198
       %4303 = OpFSub %v3float %4192 %291
       %4304 = OpCompositeConstruct %v3int %4302 %int_0 %int_0
       %4305 = OpBitcast %v3uint %4304
       %4306 = OpIMul %v3uint %4305 %402
       %4307 = OpIAdd %v3uint %4306 %404
       %4308 = OpCompositeExtract %uint %4307 1
       %4309 = OpCompositeExtract %uint %4307 2
       %4310 = OpIMul %uint %4308 %4309
       %4311 = OpCompositeExtract %uint %4307 0
       %4312 = OpIAdd %uint %4311 %4310
       %4313 = OpIMul %uint %4309 %4312
       %4314 = OpIAdd %uint %4308 %4313
       %4315 = OpIMul %uint %4312 %4314
       %4316 = OpIAdd %uint %4309 %4315
       %4317 = OpIMul %uint %4314 %4316
       %4318 = OpIAdd %uint %4312 %4317
       %4319 = OpCompositeInsert %v3uint %4318 %551 0
       %4320 = OpShiftRightLogical %v3uint %4319 %4219
       %4321 = OpCompositeExtract %uint %4320 0
       %4322 = OpCompositeConstruct %v3uint %4321 %4321 %4321
       %4323 = OpBitwiseAnd %v3uint %4322 %387
       %4324 = OpConvertUToF %v3float %4323
       %4325 = OpExtInst %v3float %1 Fma %4324 %391 %279
       %4326 = OpDot %float %4325 %4303
       %4327 = OpConvertFToS %int %4199
       %4328 = OpFSub %v3float %4192 %140
       %4329 = OpCompositeConstruct %v3int %4327 %int_0 %int_0
       %4330 = OpBitcast %v3uint %4329
       %4331 = OpIMul %v3uint %4330 %402
       %4332 = OpIAdd %v3uint %4331 %404
       %4333 = OpCompositeExtract %uint %4332 1
       %4334 = OpCompositeExtract %uint %4332 2
       %4335 = OpIMul %uint %4333 %4334
       %4336 = OpCompositeExtract %uint %4332 0
       %4337 = OpIAdd %uint %4336 %4335
       %4338 = OpIMul %uint %4334 %4337
       %4339 = OpIAdd %uint %4333 %4338
       %4340 = OpIMul %uint %4337 %4339
       %4341 = OpIAdd %uint %4334 %4340
       %4342 = OpIMul %uint %4339 %4341
       %4343 = OpIAdd %uint %4337 %4342
       %4344 = OpCompositeInsert %v3uint %4343 %551 0
       %4345 = OpShiftRightLogical %v3uint %4344 %4219
       %4346 = OpCompositeExtract %uint %4345 0
       %4347 = OpCompositeConstruct %v3uint %4346 %4346 %4346
       %4348 = OpBitwiseAnd %v3uint %4347 %387
       %4349 = OpConvertUToF %v3float %4348
       %4350 = OpExtInst %v3float %1 Fma %4349 %391 %279
       %4351 = OpDot %float %4350 %4328
       %4352 = OpConvertFToS %int %4200
       %4353 = OpFSub %v3float %4192 %135
       %4354 = OpCompositeConstruct %v3int %4352 %int_0 %int_0
       %4355 = OpBitcast %v3uint %4354
       %4356 = OpIMul %v3uint %4355 %402
       %4357 = OpIAdd %v3uint %4356 %404
       %4358 = OpCompositeExtract %uint %4357 1
       %4359 = OpCompositeExtract %uint %4357 2
       %4360 = OpIMul %uint %4358 %4359
       %4361 = OpCompositeExtract %uint %4357 0
       %4362 = OpIAdd %uint %4361 %4360
       %4363 = OpIMul %uint %4359 %4362
       %4364 = OpIAdd %uint %4358 %4363
       %4365 = OpIMul %uint %4362 %4364
       %4366 = OpIAdd %uint %4359 %4365
       %4367 = OpIMul %uint %4364 %4366
       %4368 = OpIAdd %uint %4362 %4367
       %4369 = OpCompositeInsert %v3uint %4368 %551 0
       %4370 = OpShiftRightLogical %v3uint %4369 %4219
       %4371 = OpCompositeExtract %uint %4370 0
       %4372 = OpCompositeConstruct %v3uint %4371 %4371 %4371
       %4373 = OpBitwiseAnd %v3uint %4372 %387
       %4374 = OpConvertUToF %v3float %4373
       %4375 = OpExtInst %v3float %1 Fma %4374 %391 %279
       %4376 = OpDot %float %4375 %4353
       %4377 = OpConvertFToS %int %4201
       %4378 = OpFSub %v3float %4192 %127
       %4379 = OpCompositeConstruct %v3int %4377 %int_0 %int_0
       %4380 = OpBitcast %v3uint %4379
       %4381 = OpIMul %v3uint %4380 %402
       %4382 = OpIAdd %v3uint %4381 %404
       %4383 = OpCompositeExtract %uint %4382 1
       %4384 = OpCompositeExtract %uint %4382 2
       %4385 = OpIMul %uint %4383 %4384
       %4386 = OpCompositeExtract %uint %4382 0
       %4387 = OpIAdd %uint %4386 %4385
       %4388 = OpIMul %uint %4384 %4387
       %4389 = OpIAdd %uint %4383 %4388
       %4390 = OpIMul %uint %4387 %4389
       %4391 = OpIAdd %uint %4384 %4390
       %4392 = OpIMul %uint %4389 %4391
       %4393 = OpIAdd %uint %4387 %4392
       %4394 = OpCompositeInsert %v3uint %4393 %551 0
       %4395 = OpShiftRightLogical %v3uint %4394 %4219
       %4396 = OpCompositeExtract %uint %4395 0
       %4397 = OpCompositeConstruct %v3uint %4396 %4396 %4396
       %4398 = OpBitwiseAnd %v3uint %4397 %387
       %4399 = OpConvertUToF %v3float %4398
       %4400 = OpExtInst %v3float %1 Fma %4399 %391 %279
       %4401 = OpDot %float %4400 %4378
       %4402 = OpCompositeExtract %float %4192 0
       %4403 = OpCompositeExtract %float %4192 1
       %4404 = OpCompositeExtract %float %4192 2
       %4405 = OpCompositeConstruct %v4float %4402 %4403 %4404 %float_0
       %4406 = OpFMul %v4float %4405 %4405
       %4407 = OpFMul %v4float %4406 %4405
       %4408 = OpVectorTimesScalar %v4float %4405 %float_6
       %4409 = OpFSub %v4float %4408 %382
       %4410 = OpExtInst %v4float %1 Fma %4405 %4409 %383
       %4411 = OpFMul %v4float %4407 %4410
       %4412 = OpCompositeExtract %float %4411 0
       %4413 = OpExtInst %float %1 FMix %4226 %4251 %4412
       %4414 = OpExtInst %float %1 FMix %4276 %4301 %4412
       %4415 = OpCompositeExtract %float %4411 1
       %4416 = OpExtInst %float %1 FMix %4413 %4414 %4415
       %4417 = OpExtInst %float %1 FMix %4326 %4351 %4412
       %4418 = OpExtInst %float %1 FMix %4376 %4401 %4412
       %4419 = OpExtInst %float %1 FMix %4417 %4418 %4415
       %4420 = OpCompositeExtract %float %4411 2
       %4421 = OpExtInst %float %1 FMix %4416 %4419 %4420
       %4422 = OpExtInst %float %1 FAbs %4421
       %4187 = OpExtInst %float %1 Fma %4422 %4184 %4186
       %4182 = OpVectorTimesScalar %v3float %4181 %float_2
       %4185 = OpFMul %float %4184 %float_0_5
       %4189 = OpIAdd %uint %4188 %uint_1
               OpBranch %4180
       %4191 = OpLabel
       %4423 = OpExtInst %float %1 FMix %float_0 %float_1 %4186
       %4424 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_61 %int_3
       %4425 = OpLoad %float %4424
       %4426 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_61 %int_2
       %4427 = OpLoad %float %4426
       %4428 = OpExtInst %float %1 Fma %4423 %4425 %4427
       %4429 = OpFMul %float %4148 %4428
       %4430 = OpExtInst %float %1 FMix %3868 %3873 %4429
       %4431 = OpExtInst %float %1 Sin %3865
       %4432 = OpFMul %float %4431 %4430
       %4433 = OpFAdd %v3float %3549 %2561
       %4434 = OpExtInst %v3float %1 NMax %4433 %279
       %4435 = OpExtInst %v3float %1 NMin %4434 %127
       %4436 = OpCompositeExtract %float %4435 0
       %4437 = OpCompositeExtract %float %4435 1
       %4438 = OpCompositeConstruct %v2float %4436 %4437
       %4439 = OpFMul %v2float %1696 %4438
       %4440 = OpFMul %v2float %4438 %1697
       %4441 = OpCompositeExtract %float %4439 0
       %4442 = OpCompositeExtract %float %4440 0
       %4443 = OpCompositeExtract %float %4439 1
       %4444 = OpCompositeExtract %float %4440 1
       %4445 = OpFAdd %float %4441 %4443
       %4446 = OpFAdd %float %4442 %4444
       %4447 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_15 %int_3
       %4448 = OpLoad %float %4447
       %4449 = OpFMul %float %3569 %4448
       %4450 = OpFDiv %float %float_2 %4449
       %4451 = OpFMul %float %4445 %4450
       %4452 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_1
       %4453 = OpLoad %float %4452
       %4454 = OpFMul %float %4450 %4453
       %4455 = OpFMul %float %4454 %3853
       %4456 = OpExtInst %float %1 Fma %4446 %4450 %4455
       %4457 = OpExtInst %float %1 Floor %4451
       %4458 = OpFNegate %float %4457
       %4459 = OpExtInst %float %1 Fma %4445 %4450 %4458
       %4460 = OpExtInst %float %1 Fma %4459 %float_2097152 %4456
       %4461 = OpExtInst %float %1 Floor %4460
       %4462 = OpFMul %float %4457 %float_n6_28318548
       %4463 = OpExtInst %float %1 Fma %4451 %float_6_28318548 %4462
       %4464 = OpFMul %float %4461 %float_n6_28318548
       %4465 = OpExtInst %float %1 Fma %4456 %float_6_28318548 %4464
       %4466 = OpExtInst %float %1 Fma %4463 %float_2097152 %4465
       %4467 = OpFMul %float %4430 %2594
       %4468 = OpExtInst %float %1 Sin %4466
       %4469 = OpFMul %float %4468 %4467
       %4470 = OpCompositeConstruct %v3float %550 %550 %4432
       %4471 = OpCompositeConstruct %v3float %550 %550 %4469
       %4472 = OpFAdd %v3float %4470 %4471
       %4473 = OpFSub %v3float %3549 %1688
       %4474 = OpExtInst %v3float %1 NMax %4473 %279
       %4475 = OpExtInst %v3float %1 NMin %4474 %127
       %4476 = OpCompositeExtract %float %4475 0
       %4477 = OpCompositeExtract %float %4475 1
       %4478 = OpCompositeConstruct %v2float %4476 %4477
       %4479 = OpFMul %v2float %1696 %4478
       %4480 = OpFMul %v2float %4478 %1697
       %4481 = OpCompositeExtract %float %4479 0
       %4482 = OpCompositeExtract %float %4480 0
       %4483 = OpCompositeExtract %float %4479 1
       %4484 = OpCompositeExtract %float %4480 1
       %4485 = OpFAdd %float %4481 %4483
       %4486 = OpFAdd %float %4482 %4484
       %4487 = OpFMul %float %4449 %4448
       %4488 = OpFDiv %float %float_2 %4487
       %4489 = OpFMul %float %4485 %4488
       %4490 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_3
       %4491 = OpLoad %float %4490
       %4492 = OpFMul %float %4488 %4491
       %4493 = OpFMul %float %4492 %3853
       %4494 = OpExtInst %float %1 Fma %4486 %4488 %4493
       %4495 = OpExtInst %float %1 Floor %4489
       %4496 = OpFNegate %float %4495
       %4497 = OpExtInst %float %1 Fma %4485 %4488 %4496
       %4498 = OpExtInst %float %1 Fma %4497 %float_2097152 %4494
       %4499 = OpExtInst %float %1 Floor %4498
       %4500 = OpFMul %float %4495 %float_n6_28318548
       %4501 = OpExtInst %float %1 Fma %4489 %float_6_28318548 %4500
       %4502 = OpFMul %float %4499 %float_n6_28318548
       %4503 = OpExtInst %float %1 Fma %4494 %float_6_28318548 %4502
       %4504 = OpExtInst %float %1 Fma %4501 %float_2097152 %4503
       %4505 = OpFMul %float %4467 %2594
       %4506 = OpExtInst %float %1 Sin %4504
       %4507 = OpFMul %float %4506 %4505
       %4508 = OpCompositeConstruct %v3float %550 %550 %4507
       %4509 = OpFAdd %v3float %4472 %4508
       %4510 = OpFSub %v3float %3549 %2561
       %4511 = OpExtInst %v3float %1 NMax %4510 %279
       %4512 = OpExtInst %v3float %1 NMin %4511 %127
       %4513 = OpCompositeExtract %float %4512 0
       %4514 = OpCompositeExtract %float %4512 1
       %4515 = OpCompositeConstruct %v2float %4513 %4514
       %4516 = OpFMul %v2float %1696 %4515
       %4517 = OpFMul %v2float %4515 %1697
       %4518 = OpCompositeExtract %float %4516 0
       %4519 = OpCompositeExtract %float %4517 0
       %4520 = OpCompositeExtract %float %4516 1
       %4521 = OpCompositeExtract %float %4517 1
       %4522 = OpFAdd %float %4518 %4520
       %4523 = OpFAdd %float %4519 %4521
       %4524 = OpFMul %float %4487 %4448
       %4525 = OpFDiv %float %float_2 %4524
       %4526 = OpFMul %float %4522 %4525
       %4527 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_63 %int_1
       %4528 = OpLoad %float %4527
       %4529 = OpFMul %float %4525 %4528
       %4530 = OpFMul %float %4529 %3853
       %4531 = OpExtInst %float %1 Fma %4523 %4525 %4530
       %4532 = OpExtInst %float %1 Floor %4526
       %4533 = OpFNegate %float %4532
       %4534 = OpExtInst %float %1 Fma %4522 %4525 %4533
       %4535 = OpExtInst %float %1 Fma %4534 %float_2097152 %4531
       %4536 = OpExtInst %float %1 Floor %4535
       %4537 = OpFMul %float %4532 %float_n6_28318548
       %4538 = OpExtInst %float %1 Fma %4526 %float_6_28318548 %4537
       %4539 = OpFMul %float %4536 %float_n6_28318548
       %4540 = OpExtInst %float %1 Fma %4531 %float_6_28318548 %4539
       %4541 = OpExtInst %float %1 Fma %4538 %float_2097152 %4540
       %4542 = OpFMul %float %4505 %2594
       %4543 = OpExtInst %float %1 Sin %4541
       %4544 = OpFMul %float %4543 %4542
       %4545 = OpCompositeConstruct %v3float %550 %550 %4544
       %4546 = OpFAdd %v3float %4509 %4545
       %4547 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_0
       %4548 = OpLoad %float %4547
       %4549 = OpFSub %float %4548 %float_n1
       %4550 = OpExtInst %float %1 FAbs %4549
       %4551 = OpFOrdGreaterThan %bool %4550 %float_9_99999975en06
       %4552 = OpFOrdGreaterThanEqual %bool %4548 %float_n1
       %4553 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_1
       %4554 = OpLoad %float %4553
       %4555 = OpSelect %float %4552 %4548 %4554
       %4556 = OpSelect %float %4551 %4555 %4548
       %4557 = OpFSub %float %4556 %float_1
       %4558 = OpExtInst %float %1 FAbs %4557
       %4559 = OpFOrdGreaterThan %bool %4558 %float_9_99999975en06
       %4560 = OpFOrdGreaterThanEqual %bool %4556 %float_1
       %4561 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_2
       %4562 = OpLoad %float %4561
       %4563 = OpSelect %float %4560 %4562 %4548
       %4564 = OpSelect %float %4559 %4563 %4548
       %4565 = OpExtInst %float %1 FAbs %4564
       %4566 = OpFOrdGreaterThan %bool %4565 %float_9_99999975en06
       %4567 = OpFOrdGreaterThanEqual %bool %4564 %float_0
       %4568 = OpSelect %float %4567 %float_1 %float_n1
       %4569 = OpSelect %float %4566 %4568 %float_1
       %4570 = OpExtInst %float %1 NMax %4569 %float_n1
       %4571 = OpExtInst %float %1 NMin %4570 %float_1
       %4572 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_65 %int_3
       %4573 = OpLoad %float %4572
       %4574 = OpCompositeConstruct %v3float %4571 %4573 %float_0
       %4575 = OpFAdd %v3float %4574 %1688
       %4576 = OpExtInst %v3float %1 NMax %4575 %279
       %4577 = OpExtInst %v3float %1 NMin %4576 %127
       %4578 = OpCompositeExtract %float %4577 0
       %4579 = OpCompositeExtract %float %4577 1
       %4580 = OpCompositeConstruct %v2float %4578 %4579
       %4581 = OpFMul %v2float %1696 %4580
       %4582 = OpFMul %v2float %4580 %1697
       %4583 = OpCompositeExtract %float %4581 0
       %4584 = OpCompositeExtract %float %4582 0
       %4585 = OpCompositeExtract %float %4581 1
       %4586 = OpCompositeExtract %float %4582 1
       %4587 = OpFAdd %float %4583 %4585
       %4588 = OpFAdd %float %4584 %4586
       %4589 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_23 %int_3
       %4590 = OpLoad %float %4589
       %4591 = OpFMul %float %3566 %4590
       %4592 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_0
       %4593 = OpLoad %float %4592
       %4594 = OpFMul %float %4593 %4591
       %4595 = OpFDiv %float %float_2 %4594
       %4596 = OpFMul %float %4587 %4595
       %4597 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_1
       %4598 = OpLoad %float %4597
       %4599 = OpFMul %float %4595 %4598
       %4600 = OpFMul %float %4599 %3853
       %4601 = OpExtInst %float %1 Fma %4588 %4595 %4600
       %4602 = OpExtInst %float %1 Floor %4596
       %4603 = OpFNegate %float %4602
       %4604 = OpExtInst %float %1 Fma %4587 %4595 %4603
       %4605 = OpExtInst %float %1 Fma %4604 %float_2097152 %4601
       %4606 = OpExtInst %float %1 Floor %4605
       %4607 = OpFMul %float %4602 %float_n6_28318548
       %4608 = OpExtInst %float %1 Fma %4596 %float_6_28318548 %4607
       %4609 = OpFMul %float %4606 %float_n6_28318548
       %4610 = OpExtInst %float %1 Fma %4601 %float_6_28318548 %4609
       %4611 = OpExtInst %float %1 Fma %4608 %float_2097152 %4610
       %4612 = OpFMul %float %4430 %2733
       %4613 = OpExtInst %float %1 Sin %4611
       %4614 = OpFMul %float %4613 %4612
       %4615 = OpFAdd %v3float %4574 %2561
       %4616 = OpExtInst %v3float %1 NMax %4615 %279
       %4617 = OpExtInst %v3float %1 NMin %4616 %127
       %4618 = OpCompositeExtract %float %4617 0
       %4619 = OpCompositeExtract %float %4617 1
       %4620 = OpCompositeConstruct %v2float %4618 %4619
       %4621 = OpFMul %v2float %1696 %4620
       %4622 = OpFMul %v2float %4620 %1697
       %4623 = OpCompositeExtract %float %4621 0
       %4624 = OpCompositeExtract %float %4622 0
       %4625 = OpCompositeExtract %float %4621 1
       %4626 = OpCompositeExtract %float %4622 1
       %4627 = OpFAdd %float %4623 %4625
       %4628 = OpFAdd %float %4624 %4626
       %4629 = OpFMul %float %4594 %4448
       %4630 = OpFDiv %float %float_2 %4629
       %4631 = OpFMul %float %4627 %4630
       %4632 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_2
       %4633 = OpLoad %float %4632
       %4634 = OpFMul %float %4630 %4633
       %4635 = OpFMul %float %4634 %3853
       %4636 = OpExtInst %float %1 Fma %4628 %4630 %4635
       %4637 = OpExtInst %float %1 Floor %4631
       %4638 = OpFNegate %float %4637
       %4639 = OpExtInst %float %1 Fma %4627 %4630 %4638
       %4640 = OpExtInst %float %1 Fma %4639 %float_2097152 %4636
       %4641 = OpExtInst %float %1 Floor %4640
       %4642 = OpFMul %float %4637 %float_n6_28318548
       %4643 = OpExtInst %float %1 Fma %4631 %float_6_28318548 %4642
       %4644 = OpFMul %float %4641 %float_n6_28318548
       %4645 = OpExtInst %float %1 Fma %4636 %float_6_28318548 %4644
       %4646 = OpExtInst %float %1 Fma %4643 %float_2097152 %4645
       %4647 = OpFMul %float %4612 %2594
       %4648 = OpExtInst %float %1 Sin %4646
       %4649 = OpFMul %float %4648 %4647
       %4650 = OpCompositeConstruct %v3float %550 %550 %4614
       %4651 = OpCompositeConstruct %v3float %550 %550 %4649
       %4652 = OpFAdd %v3float %4650 %4651
       %4653 = OpFSub %v3float %4574 %1688
       %4654 = OpExtInst %v3float %1 NMax %4653 %279
       %4655 = OpExtInst %v3float %1 NMin %4654 %127
       %4656 = OpCompositeExtract %float %4655 0
       %4657 = OpCompositeExtract %float %4655 1
       %4658 = OpCompositeConstruct %v2float %4656 %4657
       %4659 = OpFMul %v2float %1696 %4658
       %4660 = OpFMul %v2float %4658 %1697
       %4661 = OpCompositeExtract %float %4659 0
       %4662 = OpCompositeExtract %float %4660 0
       %4663 = OpCompositeExtract %float %4659 1
       %4664 = OpCompositeExtract %float %4660 1
       %4665 = OpFAdd %float %4661 %4663
       %4666 = OpFAdd %float %4662 %4664
       %4667 = OpFMul %float %4629 %4448
       %4668 = OpFDiv %float %float_2 %4667
       %4669 = OpFMul %float %4665 %4668
       %4670 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_3
       %4671 = OpLoad %float %4670
       %4672 = OpFMul %float %4668 %4671
       %4673 = OpFMul %float %4672 %3853
       %4674 = OpExtInst %float %1 Fma %4666 %4668 %4673
       %4675 = OpExtInst %float %1 Floor %4669
       %4676 = OpFNegate %float %4675
       %4677 = OpExtInst %float %1 Fma %4665 %4668 %4676
       %4678 = OpExtInst %float %1 Fma %4677 %float_2097152 %4674
       %4679 = OpExtInst %float %1 Floor %4678
       %4680 = OpFMul %float %4675 %float_n6_28318548
       %4681 = OpExtInst %float %1 Fma %4669 %float_6_28318548 %4680
       %4682 = OpFMul %float %4679 %float_n6_28318548
       %4683 = OpExtInst %float %1 Fma %4674 %float_6_28318548 %4682
       %4684 = OpExtInst %float %1 Fma %4681 %float_2097152 %4683
       %4685 = OpFMul %float %4647 %2594
       %4686 = OpExtInst %float %1 Sin %4684
       %4687 = OpFMul %float %4686 %4685
       %4688 = OpCompositeConstruct %v3float %550 %550 %4687
       %4689 = OpFAdd %v3float %4652 %4688
       %4690 = OpFSub %v3float %4574 %2561
       %4691 = OpExtInst %v3float %1 NMax %4690 %279
       %4692 = OpExtInst %v3float %1 NMin %4691 %127
       %4693 = OpCompositeExtract %float %4692 0
       %4694 = OpCompositeExtract %float %4692 1
       %4695 = OpCompositeConstruct %v2float %4693 %4694
       %4696 = OpFMul %v2float %1696 %4695
       %4697 = OpFMul %v2float %4695 %1697
       %4698 = OpCompositeExtract %float %4696 0
       %4699 = OpCompositeExtract %float %4697 0
       %4700 = OpCompositeExtract %float %4696 1
       %4701 = OpCompositeExtract %float %4697 1
       %4702 = OpFAdd %float %4698 %4700
       %4703 = OpFAdd %float %4699 %4701
       %4704 = OpFMul %float %4667 %4448
       %4705 = OpFDiv %float %float_2 %4704
       %4706 = OpFMul %float %4702 %4705
       %4707 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_0
       %4708 = OpLoad %float %4707
       %4709 = OpFMul %float %4705 %4708
       %4710 = OpFMul %float %4709 %3853
       %4711 = OpExtInst %float %1 Fma %4703 %4705 %4710
       %4712 = OpExtInst %float %1 Floor %4706
       %4713 = OpFNegate %float %4712
       %4714 = OpExtInst %float %1 Fma %4702 %4705 %4713
       %4715 = OpExtInst %float %1 Fma %4714 %float_2097152 %4711
       %4716 = OpExtInst %float %1 Floor %4715
       %4717 = OpFMul %float %4712 %float_n6_28318548
       %4718 = OpExtInst %float %1 Fma %4706 %float_6_28318548 %4717
       %4719 = OpFMul %float %4716 %float_n6_28318548
       %4720 = OpExtInst %float %1 Fma %4711 %float_6_28318548 %4719
       %4721 = OpExtInst %float %1 Fma %4718 %float_2097152 %4720
       %4722 = OpFMul %float %4685 %2594
       %4723 = OpExtInst %float %1 Sin %4721
       %4724 = OpFMul %float %4723 %4722
       %4725 = OpCompositeConstruct %v3float %550 %550 %4724
       %4726 = OpFAdd %v3float %4689 %4725
       %4727 = OpFAdd %v3float %4546 %4726
       %4728 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_1
       %4729 = OpLoad %float %4728
       %4730 = OpFSub %float %4729 %float_n1
       %4731 = OpExtInst %float %1 FAbs %4730
       %4732 = OpFOrdGreaterThan %bool %4731 %float_9_99999975en06
       %4733 = OpFOrdGreaterThanEqual %bool %4729 %float_n1
       %4734 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_2
       %4735 = OpLoad %float %4734
       %4736 = OpSelect %float %4733 %4729 %4735
       %4737 = OpSelect %float %4732 %4736 %4729
       %4738 = OpFSub %float %4737 %float_1
       %4739 = OpExtInst %float %1 FAbs %4738
       %4740 = OpFOrdGreaterThan %bool %4739 %float_9_99999975en06
       %4741 = OpFOrdGreaterThanEqual %bool %4737 %float_1
       %4742 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_3
       %4743 = OpLoad %float %4742
       %4744 = OpSelect %float %4741 %4743 %4729
       %4745 = OpSelect %float %4740 %4744 %4729
       %4746 = OpExtInst %float %1 FAbs %4745
       %4747 = OpFOrdGreaterThan %bool %4746 %float_9_99999975en06
       %4748 = OpFOrdGreaterThanEqual %bool %4745 %float_0
       %4749 = OpSelect %float %4748 %float_1 %float_n1
       %4750 = OpSelect %float %4747 %4749 %float_1
       %4751 = OpExtInst %float %1 NMax %4750 %float_n1
       %4752 = OpExtInst %float %1 NMin %4751 %float_1
       %4753 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_70 %int_0
       %4754 = OpLoad %float %4753
       %4755 = OpCompositeConstruct %v3float %4752 %4754 %float_0
       %4756 = OpFAdd %v3float %4755 %1688
       %4757 = OpExtInst %v3float %1 NMax %4756 %279
       %4758 = OpExtInst %v3float %1 NMin %4757 %127
       %4759 = OpCompositeExtract %float %4758 0
       %4760 = OpCompositeExtract %float %4758 1
       %4761 = OpCompositeConstruct %v2float %4759 %4760
       %4762 = OpFMul %v2float %1696 %4761
       %4763 = OpFMul %v2float %4761 %1697
       %4764 = OpCompositeExtract %float %4762 0
       %4765 = OpCompositeExtract %float %4763 0
       %4766 = OpCompositeExtract %float %4762 1
       %4767 = OpCompositeExtract %float %4763 1
       %4768 = OpFAdd %float %4764 %4766
       %4769 = OpFAdd %float %4765 %4767
       %4770 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_71 %int_1
       %4771 = OpLoad %float %4770
       %4772 = OpFMul %float %4771 %4591
       %4773 = OpFDiv %float %float_2 %4772
       %4774 = OpFMul %float %4768 %4773
       %4775 = OpFMul %float %4773 %4598
       %4776 = OpFMul %float %4775 %3853
       %4777 = OpExtInst %float %1 Fma %4769 %4773 %4776
       %4778 = OpExtInst %float %1 Floor %4774
       %4779 = OpFNegate %float %4778
       %4780 = OpExtInst %float %1 Fma %4768 %4773 %4779
       %4781 = OpExtInst %float %1 Fma %4780 %float_2097152 %4777
       %4782 = OpExtInst %float %1 Floor %4781
       %4783 = OpFMul %float %4778 %float_n6_28318548
       %4784 = OpExtInst %float %1 Fma %4774 %float_6_28318548 %4783
       %4785 = OpFMul %float %4782 %float_n6_28318548
       %4786 = OpExtInst %float %1 Fma %4777 %float_6_28318548 %4785
       %4787 = OpExtInst %float %1 Fma %4784 %float_2097152 %4786
       %4788 = OpExtInst %float %1 Sin %4787
       %4789 = OpFMul %float %4788 %4612
       %4790 = OpFAdd %v3float %4755 %2561
       %4791 = OpExtInst %v3float %1 NMax %4790 %279
       %4792 = OpExtInst %v3float %1 NMin %4791 %127
       %4793 = OpCompositeExtract %float %4792 0
       %4794 = OpCompositeExtract %float %4792 1
       %4795 = OpCompositeConstruct %v2float %4793 %4794
       %4796 = OpFMul %v2float %1696 %4795
       %4797 = OpFMul %v2float %4795 %1697
       %4798 = OpCompositeExtract %float %4796 0
       %4799 = OpCompositeExtract %float %4797 0
       %4800 = OpCompositeExtract %float %4796 1
       %4801 = OpCompositeExtract %float %4797 1
       %4802 = OpFAdd %float %4798 %4800
       %4803 = OpFAdd %float %4799 %4801
       %4804 = OpFMul %float %4772 %4448
       %4805 = OpFDiv %float %float_2 %4804
       %4806 = OpFMul %float %4802 %4805
       %4807 = OpFMul %float %4805 %4633
       %4808 = OpFMul %float %4807 %3853
       %4809 = OpExtInst %float %1 Fma %4803 %4805 %4808
       %4810 = OpExtInst %float %1 Floor %4806
       %4811 = OpFNegate %float %4810
       %4812 = OpExtInst %float %1 Fma %4802 %4805 %4811
       %4813 = OpExtInst %float %1 Fma %4812 %float_2097152 %4809
       %4814 = OpExtInst %float %1 Floor %4813
       %4815 = OpFMul %float %4810 %float_n6_28318548
       %4816 = OpExtInst %float %1 Fma %4806 %float_6_28318548 %4815
       %4817 = OpFMul %float %4814 %float_n6_28318548
       %4818 = OpExtInst %float %1 Fma %4809 %float_6_28318548 %4817
       %4819 = OpExtInst %float %1 Fma %4816 %float_2097152 %4818
       %4820 = OpExtInst %float %1 Sin %4819
       %4821 = OpFMul %float %4820 %4647
       %4822 = OpCompositeConstruct %v3float %550 %550 %4789
       %4823 = OpCompositeConstruct %v3float %550 %550 %4821
       %4824 = OpFAdd %v3float %4822 %4823
       %4825 = OpFSub %v3float %4755 %1688
       %4826 = OpExtInst %v3float %1 NMax %4825 %279
       %4827 = OpExtInst %v3float %1 NMin %4826 %127
       %4828 = OpCompositeExtract %float %4827 0
       %4829 = OpCompositeExtract %float %4827 1
       %4830 = OpCompositeConstruct %v2float %4828 %4829
       %4831 = OpFMul %v2float %1696 %4830
       %4832 = OpFMul %v2float %4830 %1697
       %4833 = OpCompositeExtract %float %4831 0
       %4834 = OpCompositeExtract %float %4832 0
       %4835 = OpCompositeExtract %float %4831 1
       %4836 = OpCompositeExtract %float %4832 1
       %4837 = OpFAdd %float %4833 %4835
       %4838 = OpFAdd %float %4834 %4836
       %4839 = OpFMul %float %4804 %4448
       %4840 = OpFDiv %float %float_2 %4839
       %4841 = OpFMul %float %4837 %4840
       %4842 = OpFMul %float %4840 %4671
       %4843 = OpFMul %float %4842 %3853
       %4844 = OpExtInst %float %1 Fma %4838 %4840 %4843
       %4845 = OpExtInst %float %1 Floor %4841
       %4846 = OpFNegate %float %4845
       %4847 = OpExtInst %float %1 Fma %4837 %4840 %4846
       %4848 = OpExtInst %float %1 Fma %4847 %float_2097152 %4844
       %4849 = OpExtInst %float %1 Floor %4848
       %4850 = OpFMul %float %4845 %float_n6_28318548
       %4851 = OpExtInst %float %1 Fma %4841 %float_6_28318548 %4850
       %4852 = OpFMul %float %4849 %float_n6_28318548
       %4853 = OpExtInst %float %1 Fma %4844 %float_6_28318548 %4852
       %4854 = OpExtInst %float %1 Fma %4851 %float_2097152 %4853
       %4855 = OpExtInst %float %1 Sin %4854
       %4856 = OpFMul %float %4855 %4685
       %4857 = OpCompositeConstruct %v3float %550 %550 %4856
       %4858 = OpFAdd %v3float %4824 %4857
       %4859 = OpFSub %v3float %4755 %2561
       %4860 = OpExtInst %v3float %1 NMax %4859 %279
       %4861 = OpExtInst %v3float %1 NMin %4860 %127
       %4862 = OpCompositeExtract %float %4861 0
       %4863 = OpCompositeExtract %float %4861 1
       %4864 = OpCompositeConstruct %v2float %4862 %4863
       %4865 = OpFMul %v2float %1696 %4864
       %4866 = OpFMul %v2float %4864 %1697
       %4867 = OpCompositeExtract %float %4865 0
       %4868 = OpCompositeExtract %float %4866 0
       %4869 = OpCompositeExtract %float %4865 1
       %4870 = OpCompositeExtract %float %4866 1
       %4871 = OpFAdd %float %4867 %4869
       %4872 = OpFAdd %float %4868 %4870
       %4873 = OpFMul %float %4839 %4448
       %4874 = OpFDiv %float %float_2 %4873
       %4875 = OpFMul %float %4871 %4874
       %4876 = OpFMul %float %4874 %4708
       %4877 = OpFMul %float %4876 %3853
       %4878 = OpExtInst %float %1 Fma %4872 %4874 %4877
       %4879 = OpExtInst %float %1 Floor %4875
       %4880 = OpFNegate %float %4879
       %4881 = OpExtInst %float %1 Fma %4871 %4874 %4880
       %4882 = OpExtInst %float %1 Fma %4881 %float_2097152 %4878
       %4883 = OpExtInst %float %1 Floor %4882
       %4884 = OpFMul %float %4879 %float_n6_28318548
       %4885 = OpExtInst %float %1 Fma %4875 %float_6_28318548 %4884
       %4886 = OpFMul %float %4883 %float_n6_28318548
       %4887 = OpExtInst %float %1 Fma %4878 %float_6_28318548 %4886
       %4888 = OpExtInst %float %1 Fma %4885 %float_2097152 %4887
       %4889 = OpExtInst %float %1 Sin %4888
       %4890 = OpFMul %float %4889 %4722
       %4891 = OpCompositeConstruct %v3float %550 %550 %4890
       %4892 = OpFAdd %v3float %4858 %4891
       %4893 = OpFAdd %v3float %4727 %4892
       %4894 = OpFMul %float %3566 %float_0_800000012
       %4895 = OpFMul %float %3568 %4894
       %4896 = OpFDiv %float %float_2 %4895
       %4897 = OpFMul %float %3562 %4896
       %4898 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_71 %int_2
       %4899 = OpLoad %float %4898
       %4900 = OpFMul %float %4896 %4899
       %4901 = OpFMul %float %4900 %3853
       %4902 = OpExtInst %float %1 Fma %3563 %4896 %4901
       %4903 = OpExtInst %float %1 Floor %4897
       %4904 = OpFNegate %float %4903
       %4905 = OpExtInst %float %1 Fma %3562 %4896 %4904
       %4906 = OpExtInst %float %1 Fma %4905 %float_2097152 %4902
       %4907 = OpExtInst %float %1 Floor %4906
       %4908 = OpFMul %float %4903 %float_n6_28318548
       %4909 = OpExtInst %float %1 Fma %4897 %float_6_28318548 %4908
       %4910 = OpFMul %float %4907 %float_n6_28318548
       %4911 = OpExtInst %float %1 Fma %4902 %float_6_28318548 %4910
       %4912 = OpExtInst %float %1 Fma %4909 %float_2097152 %4911
       %4913 = OpFMul %float %4430 %float_0_800000012
       %4914 = OpExtInst %float %1 Sin %4912
       %4915 = OpFMul %float %4914 %4913
       %4916 = OpFMul %float %4895 %4448
       %4917 = OpFDiv %float %float_2 %4916
       %4918 = OpFMul %float %4445 %4917
       %4919 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_71 %int_3
       %4920 = OpLoad %float %4919
       %4921 = OpFMul %float %4917 %4920
       %4922 = OpFMul %float %4921 %3853
       %4923 = OpExtInst %float %1 Fma %4446 %4917 %4922
       %4924 = OpExtInst %float %1 Floor %4918
       %4925 = OpFNegate %float %4924
       %4926 = OpExtInst %float %1 Fma %4445 %4917 %4925
       %4927 = OpExtInst %float %1 Fma %4926 %float_2097152 %4923
       %4928 = OpExtInst %float %1 Floor %4927
       %4929 = OpFMul %float %4924 %float_n6_28318548
       %4930 = OpExtInst %float %1 Fma %4918 %float_6_28318548 %4929
       %4931 = OpFMul %float %4928 %float_n6_28318548
       %4932 = OpExtInst %float %1 Fma %4923 %float_6_28318548 %4931
       %4933 = OpExtInst %float %1 Fma %4930 %float_2097152 %4932
       %4934 = OpFMul %float %4913 %2594
       %4935 = OpExtInst %float %1 Sin %4933
       %4936 = OpFMul %float %4935 %4934
       %4937 = OpCompositeConstruct %v3float %550 %550 %4915
       %4938 = OpCompositeConstruct %v3float %550 %550 %4936
       %4939 = OpFAdd %v3float %4937 %4938
       %4940 = OpFMul %float %4916 %4448
       %4941 = OpFDiv %float %float_2 %4940
       %4942 = OpFMul %float %4485 %4941
       %4943 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_0
       %4944 = OpLoad %float %4943
       %4945 = OpFMul %float %4941 %4944
       %4946 = OpFMul %float %4945 %3853
       %4947 = OpExtInst %float %1 Fma %4486 %4941 %4946
       %4948 = OpExtInst %float %1 Floor %4942
       %4949 = OpFNegate %float %4948
       %4950 = OpExtInst %float %1 Fma %4485 %4941 %4949
       %4951 = OpExtInst %float %1 Fma %4950 %float_2097152 %4947
       %4952 = OpExtInst %float %1 Floor %4951
       %4953 = OpFMul %float %4948 %float_n6_28318548
       %4954 = OpExtInst %float %1 Fma %4942 %float_6_28318548 %4953
       %4955 = OpFMul %float %4952 %float_n6_28318548
       %4956 = OpExtInst %float %1 Fma %4947 %float_6_28318548 %4955
       %4957 = OpExtInst %float %1 Fma %4954 %float_2097152 %4956
       %4958 = OpFMul %float %4934 %2594
       %4959 = OpExtInst %float %1 Sin %4957
       %4960 = OpFMul %float %4959 %4958
       %4961 = OpCompositeConstruct %v3float %550 %550 %4960
       %4962 = OpFAdd %v3float %4939 %4961
       %4963 = OpFMul %float %4940 %4448
       %4964 = OpFDiv %float %float_2 %4963
       %4965 = OpFMul %float %4522 %4964
       %4966 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_1
       %4967 = OpLoad %float %4966
       %4968 = OpFMul %float %4964 %4967
       %4969 = OpFMul %float %4968 %3853
       %4970 = OpExtInst %float %1 Fma %4523 %4964 %4969
       %4971 = OpExtInst %float %1 Floor %4965
       %4972 = OpFNegate %float %4971
       %4973 = OpExtInst %float %1 Fma %4522 %4964 %4972
       %4974 = OpExtInst %float %1 Fma %4973 %float_2097152 %4970
       %4975 = OpExtInst %float %1 Floor %4974
       %4976 = OpFMul %float %4971 %float_n6_28318548
       %4977 = OpExtInst %float %1 Fma %4965 %float_6_28318548 %4976
       %4978 = OpFMul %float %4975 %float_n6_28318548
       %4979 = OpExtInst %float %1 Fma %4970 %float_6_28318548 %4978
       %4980 = OpExtInst %float %1 Fma %4977 %float_2097152 %4979
       %4981 = OpFMul %float %4958 %2594
       %4982 = OpExtInst %float %1 Sin %4980
       %4983 = OpFMul %float %4982 %4981
       %4984 = OpCompositeConstruct %v3float %550 %550 %4983
       %4985 = OpFAdd %v3float %4962 %4984
       %4986 = OpFMul %float %4894 %4590
       %4987 = OpFMul %float %4593 %4986
       %4988 = OpFDiv %float %float_2 %4987
       %4989 = OpFMul %float %4587 %4988
       %4990 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_2
       %4991 = OpLoad %float %4990
       %4992 = OpFMul %float %4988 %4991
       %4993 = OpFMul %float %4992 %3853
       %4994 = OpExtInst %float %1 Fma %4588 %4988 %4993
       %4995 = OpExtInst %float %1 Floor %4989
       %4996 = OpFNegate %float %4995
       %4997 = OpExtInst %float %1 Fma %4587 %4988 %4996
       %4998 = OpExtInst %float %1 Fma %4997 %float_2097152 %4994
       %4999 = OpExtInst %float %1 Floor %4998
       %5000 = OpFMul %float %4995 %float_n6_28318548
       %5001 = OpExtInst %float %1 Fma %4989 %float_6_28318548 %5000
       %5002 = OpFMul %float %4999 %float_n6_28318548
       %5003 = OpExtInst %float %1 Fma %4994 %float_6_28318548 %5002
       %5004 = OpExtInst %float %1 Fma %5001 %float_2097152 %5003
       %5005 = OpFMul %float %4913 %2733
       %5006 = OpExtInst %float %1 Sin %5004
       %5007 = OpFMul %float %5006 %5005
       %5008 = OpFMul %float %4987 %4448
       %5009 = OpFDiv %float %float_2 %5008
       %5010 = OpFMul %float %4627 %5009
       %5011 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_3
       %5012 = OpLoad %float %5011
       %5013 = OpFMul %float %5009 %5012
       %5014 = OpFMul %float %5013 %3853
       %5015 = OpExtInst %float %1 Fma %4628 %5009 %5014
       %5016 = OpExtInst %float %1 Floor %5010
       %5017 = OpFNegate %float %5016
       %5018 = OpExtInst %float %1 Fma %4627 %5009 %5017
       %5019 = OpExtInst %float %1 Fma %5018 %float_2097152 %5015
       %5020 = OpExtInst %float %1 Floor %5019
       %5021 = OpFMul %float %5016 %float_n6_28318548
       %5022 = OpExtInst %float %1 Fma %5010 %float_6_28318548 %5021
       %5023 = OpFMul %float %5020 %float_n6_28318548
       %5024 = OpExtInst %float %1 Fma %5015 %float_6_28318548 %5023
       %5025 = OpExtInst %float %1 Fma %5022 %float_2097152 %5024
       %5026 = OpFMul %float %5005 %2594
       %5027 = OpExtInst %float %1 Sin %5025
       %5028 = OpFMul %float %5027 %5026
       %5029 = OpCompositeConstruct %v3float %550 %550 %5007
       %5030 = OpCompositeConstruct %v3float %550 %550 %5028
       %5031 = OpFAdd %v3float %5029 %5030
       %5032 = OpFMul %float %5008 %4448
       %5033 = OpFDiv %float %float_2 %5032
       %5034 = OpFMul %float %4665 %5033
       %5035 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_0
       %5036 = OpLoad %float %5035
       %5037 = OpFMul %float %5033 %5036
       %5038 = OpFMul %float %5037 %3853
       %5039 = OpExtInst %float %1 Fma %4666 %5033 %5038
       %5040 = OpExtInst %float %1 Floor %5034
       %5041 = OpFNegate %float %5040
       %5042 = OpExtInst %float %1 Fma %4665 %5033 %5041
       %5043 = OpExtInst %float %1 Fma %5042 %float_2097152 %5039
       %5044 = OpExtInst %float %1 Floor %5043
       %5045 = OpFMul %float %5040 %float_n6_28318548
       %5046 = OpExtInst %float %1 Fma %5034 %float_6_28318548 %5045
       %5047 = OpFMul %float %5044 %float_n6_28318548
       %5048 = OpExtInst %float %1 Fma %5039 %float_6_28318548 %5047
       %5049 = OpExtInst %float %1 Fma %5046 %float_2097152 %5048
       %5050 = OpFMul %float %5026 %2594
       %5051 = OpExtInst %float %1 Sin %5049
       %5052 = OpFMul %float %5051 %5050
       %5053 = OpCompositeConstruct %v3float %550 %550 %5052
       %5054 = OpFAdd %v3float %5031 %5053
       %5055 = OpFMul %float %5032 %4448
       %5056 = OpFDiv %float %float_2 %5055
       %5057 = OpFMul %float %4702 %5056
       %5058 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_1
       %5059 = OpLoad %float %5058
       %5060 = OpFMul %float %5056 %5059
       %5061 = OpFMul %float %5060 %3853
       %5062 = OpExtInst %float %1 Fma %4703 %5056 %5061
       %5063 = OpExtInst %float %1 Floor %5057
       %5064 = OpFNegate %float %5063
       %5065 = OpExtInst %float %1 Fma %4702 %5056 %5064
       %5066 = OpExtInst %float %1 Fma %5065 %float_2097152 %5062
       %5067 = OpExtInst %float %1 Floor %5066
       %5068 = OpFMul %float %5063 %float_n6_28318548
       %5069 = OpExtInst %float %1 Fma %5057 %float_6_28318548 %5068
       %5070 = OpFMul %float %5067 %float_n6_28318548
       %5071 = OpExtInst %float %1 Fma %5062 %float_6_28318548 %5070
       %5072 = OpExtInst %float %1 Fma %5069 %float_2097152 %5071
       %5073 = OpFMul %float %5050 %2594
       %5074 = OpExtInst %float %1 Sin %5072
       %5075 = OpFMul %float %5074 %5073
       %5076 = OpCompositeConstruct %v3float %550 %550 %5075
       %5077 = OpFAdd %v3float %5054 %5076
       %5078 = OpFAdd %v3float %4985 %5077
       %5079 = OpFMul %float %4771 %4986
       %5080 = OpFDiv %float %float_2 %5079
       %5081 = OpFMul %float %4768 %5080
       %5082 = OpFMul %float %5080 %4991
       %5083 = OpFMul %float %5082 %3853
       %5084 = OpExtInst %float %1 Fma %4769 %5080 %5083
       %5085 = OpExtInst %float %1 Floor %5081
       %5086 = OpFNegate %float %5085
       %5087 = OpExtInst %float %1 Fma %4768 %5080 %5086
       %5088 = OpExtInst %float %1 Fma %5087 %float_2097152 %5084
       %5089 = OpExtInst %float %1 Floor %5088
       %5090 = OpFMul %float %5085 %float_n6_28318548
       %5091 = OpExtInst %float %1 Fma %5081 %float_6_28318548 %5090
       %5092 = OpFMul %float %5089 %float_n6_28318548
       %5093 = OpExtInst %float %1 Fma %5084 %float_6_28318548 %5092
       %5094 = OpExtInst %float %1 Fma %5091 %float_2097152 %5093
       %5095 = OpExtInst %float %1 Sin %5094
       %5096 = OpFMul %float %5095 %5005
       %5097 = OpFMul %float %5079 %4448
       %5098 = OpFDiv %float %float_2 %5097
       %5099 = OpFMul %float %4802 %5098
       %5100 = OpFMul %float %5098 %5012
       %5101 = OpFMul %float %5100 %3853
       %5102 = OpExtInst %float %1 Fma %4803 %5098 %5101
       %5103 = OpExtInst %float %1 Floor %5099
       %5104 = OpFNegate %float %5103
       %5105 = OpExtInst %float %1 Fma %4802 %5098 %5104
       %5106 = OpExtInst %float %1 Fma %5105 %float_2097152 %5102
       %5107 = OpExtInst %float %1 Floor %5106
       %5108 = OpFMul %float %5103 %float_n6_28318548
       %5109 = OpExtInst %float %1 Fma %5099 %float_6_28318548 %5108
       %5110 = OpFMul %float %5107 %float_n6_28318548
       %5111 = OpExtInst %float %1 Fma %5102 %float_6_28318548 %5110
       %5112 = OpExtInst %float %1 Fma %5109 %float_2097152 %5111
       %5113 = OpExtInst %float %1 Sin %5112
       %5114 = OpFMul %float %5113 %5026
       %5115 = OpCompositeConstruct %v3float %550 %550 %5096
       %5116 = OpCompositeConstruct %v3float %550 %550 %5114
       %5117 = OpFAdd %v3float %5115 %5116
       %5118 = OpFMul %float %5097 %4448
       %5119 = OpFDiv %float %float_2 %5118
       %5120 = OpFMul %float %4837 %5119
       %5121 = OpFMul %float %5119 %5036
       %5122 = OpFMul %float %5121 %3853
       %5123 = OpExtInst %float %1 Fma %4838 %5119 %5122
       %5124 = OpExtInst %float %1 Floor %5120
       %5125 = OpFNegate %float %5124
       %5126 = OpExtInst %float %1 Fma %4837 %5119 %5125
       %5127 = OpExtInst %float %1 Fma %5126 %float_2097152 %5123
       %5128 = OpExtInst %float %1 Floor %5127
       %5129 = OpFMul %float %5124 %float_n6_28318548
       %5130 = OpExtInst %float %1 Fma %5120 %float_6_28318548 %5129
       %5131 = OpFMul %float %5128 %float_n6_28318548
       %5132 = OpExtInst %float %1 Fma %5123 %float_6_28318548 %5131
       %5133 = OpExtInst %float %1 Fma %5130 %float_2097152 %5132
       %5134 = OpExtInst %float %1 Sin %5133
       %5135 = OpFMul %float %5134 %5050
       %5136 = OpCompositeConstruct %v3float %550 %550 %5135
       %5137 = OpFAdd %v3float %5117 %5136
       %5138 = OpFMul %float %5118 %4448
       %5139 = OpFDiv %float %float_2 %5138
       %5140 = OpFMul %float %4871 %5139
       %5141 = OpFMul %float %5139 %5059
       %5142 = OpFMul %float %5141 %3853
       %5143 = OpExtInst %float %1 Fma %4872 %5139 %5142
       %5144 = OpExtInst %float %1 Floor %5140
       %5145 = OpFNegate %float %5144
       %5146 = OpExtInst %float %1 Fma %4871 %5139 %5145
       %5147 = OpExtInst %float %1 Fma %5146 %float_2097152 %5143
       %5148 = OpExtInst %float %1 Floor %5147
       %5149 = OpFMul %float %5144 %float_n6_28318548
       %5150 = OpExtInst %float %1 Fma %5140 %float_6_28318548 %5149
       %5151 = OpFMul %float %5148 %float_n6_28318548
       %5152 = OpExtInst %float %1 Fma %5143 %float_6_28318548 %5151
       %5153 = OpExtInst %float %1 Fma %5150 %float_2097152 %5152
       %5154 = OpExtInst %float %1 Sin %5153
       %5155 = OpFMul %float %5154 %5073
       %5156 = OpCompositeConstruct %v3float %550 %550 %5155
       %5157 = OpFAdd %v3float %5137 %5156
       %5158 = OpFAdd %v3float %5078 %5157
       %5159 = OpFMul %float %3566 %float_4
       %5160 = OpFMul %float %3568 %5159
       %5161 = OpFDiv %float %float_2 %5160
       %5162 = OpFMul %float %3562 %5161
       %5163 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_2
       %5164 = OpLoad %float %5163
       %5165 = OpFMul %float %5161 %5164
       %5166 = OpFMul %float %5165 %3853
       %5167 = OpExtInst %float %1 Fma %3563 %5161 %5166
       %5168 = OpExtInst %float %1 Floor %5162
       %5169 = OpFNegate %float %5168
       %5170 = OpExtInst %float %1 Fma %3562 %5161 %5169
       %5171 = OpExtInst %float %1 Fma %5170 %float_2097152 %5167
       %5172 = OpExtInst %float %1 Floor %5171
       %5173 = OpFMul %float %5168 %float_n6_28318548
       %5174 = OpExtInst %float %1 Fma %5162 %float_6_28318548 %5173
       %5175 = OpFMul %float %5172 %float_n6_28318548
       %5176 = OpExtInst %float %1 Fma %5167 %float_6_28318548 %5175
       %5177 = OpExtInst %float %1 Fma %5174 %float_2097152 %5176
       %5178 = OpExtInst %float %1 Sin %5177
       %5179 = OpFMul %float %5178 %4913
       %5180 = OpFMul %float %5160 %4448
       %5181 = OpFDiv %float %float_2 %5180
       %5182 = OpFMul %float %4445 %5181
       %5183 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_3
       %5184 = OpLoad %float %5183
       %5185 = OpFMul %float %5181 %5184
       %5186 = OpFMul %float %5185 %3853
       %5187 = OpExtInst %float %1 Fma %4446 %5181 %5186
       %5188 = OpExtInst %float %1 Floor %5182
       %5189 = OpFNegate %float %5188
       %5190 = OpExtInst %float %1 Fma %4445 %5181 %5189
       %5191 = OpExtInst %float %1 Fma %5190 %float_2097152 %5187
       %5192 = OpExtInst %float %1 Floor %5191
       %5193 = OpFMul %float %5188 %float_n6_28318548
       %5194 = OpExtInst %float %1 Fma %5182 %float_6_28318548 %5193
       %5195 = OpFMul %float %5192 %float_n6_28318548
       %5196 = OpExtInst %float %1 Fma %5187 %float_6_28318548 %5195
       %5197 = OpExtInst %float %1 Fma %5194 %float_2097152 %5196
       %5198 = OpExtInst %float %1 Sin %5197
       %5199 = OpFMul %float %5198 %4934
       %5200 = OpCompositeConstruct %v3float %550 %550 %5179
       %5201 = OpCompositeConstruct %v3float %550 %550 %5199
       %5202 = OpFAdd %v3float %5200 %5201
       %5203 = OpFMul %float %5180 %4448
       %5204 = OpFDiv %float %float_2 %5203
       %5205 = OpFMul %float %4485 %5204
       %5206 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_74 %int_0
       %5207 = OpLoad %float %5206
       %5208 = OpFMul %float %5204 %5207
       %5209 = OpFMul %float %5208 %3853
       %5210 = OpExtInst %float %1 Fma %4486 %5204 %5209
       %5211 = OpExtInst %float %1 Floor %5205
       %5212 = OpFNegate %float %5211
       %5213 = OpExtInst %float %1 Fma %4485 %5204 %5212
       %5214 = OpExtInst %float %1 Fma %5213 %float_2097152 %5210
       %5215 = OpExtInst %float %1 Floor %5214
       %5216 = OpFMul %float %5211 %float_n6_28318548
       %5217 = OpExtInst %float %1 Fma %5205 %float_6_28318548 %5216
       %5218 = OpFMul %float %5215 %float_n6_28318548
       %5219 = OpExtInst %float %1 Fma %5210 %float_6_28318548 %5218
       %5220 = OpExtInst %float %1 Fma %5217 %float_2097152 %5219
       %5221 = OpExtInst %float %1 Sin %5220
       %5222 = OpFMul %float %5221 %4958
       %5223 = OpCompositeConstruct %v3float %550 %550 %5222
       %5224 = OpFAdd %v3float %5202 %5223
       %5225 = OpFMul %float %5203 %4448
       %5226 = OpFDiv %float %float_2 %5225
       %5227 = OpFMul %float %4522 %5226
       %5228 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_74 %int_1
       %5229 = OpLoad %float %5228
       %5230 = OpFMul %float %5226 %5229
       %5231 = OpFMul %float %5230 %3853
       %5232 = OpExtInst %float %1 Fma %4523 %5226 %5231
       %5233 = OpExtInst %float %1 Floor %5227
       %5234 = OpFNegate %float %5233
       %5235 = OpExtInst %float %1 Fma %4522 %5226 %5234
       %5236 = OpExtInst %float %1 Fma %5235 %float_2097152 %5232
       %5237 = OpExtInst %float %1 Floor %5236
       %5238 = OpFMul %float %5233 %float_n6_28318548
       %5239 = OpExtInst %float %1 Fma %5227 %float_6_28318548 %5238
       %5240 = OpFMul %float %5237 %float_n6_28318548
       %5241 = OpExtInst %float %1 Fma %5232 %float_6_28318548 %5240
       %5242 = OpExtInst %float %1 Fma %5239 %float_2097152 %5241
       %5243 = OpExtInst %float %1 Sin %5242
       %5244 = OpFMul %float %5243 %4981
       %5245 = OpCompositeConstruct %v3float %550 %550 %5244
       %5246 = OpFAdd %v3float %5224 %5245
       %5247 = OpFMul %float %5159 %4590
       %5248 = OpFMul %float %4593 %5247
       %5249 = OpFDiv %float %float_2 %5248
       %5250 = OpFMul %float %4587 %5249
       %5251 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_74 %int_2
       %5252 = OpLoad %float %5251
       %5253 = OpFMul %float %5249 %5252
       %5254 = OpFMul %float %5253 %3853
       %5255 = OpExtInst %float %1 Fma %4588 %5249 %5254
       %5256 = OpExtInst %float %1 Floor %5250
       %5257 = OpFNegate %float %5256
       %5258 = OpExtInst %float %1 Fma %4587 %5249 %5257
       %5259 = OpExtInst %float %1 Fma %5258 %float_2097152 %5255
       %5260 = OpExtInst %float %1 Floor %5259
       %5261 = OpFMul %float %5256 %float_n6_28318548
       %5262 = OpExtInst %float %1 Fma %5250 %float_6_28318548 %5261
       %5263 = OpFMul %float %5260 %float_n6_28318548
       %5264 = OpExtInst %float %1 Fma %5255 %float_6_28318548 %5263
       %5265 = OpExtInst %float %1 Fma %5262 %float_2097152 %5264
       %5266 = OpExtInst %float %1 Sin %5265
       %5267 = OpFMul %float %5266 %5005
       %5268 = OpFMul %float %5248 %4448
       %5269 = OpFDiv %float %float_2 %5268
       %5270 = OpFMul %float %4627 %5269
       %5271 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_74 %int_3
       %5272 = OpLoad %float %5271
       %5273 = OpFMul %float %5269 %5272
       %5274 = OpFMul %float %5273 %3853
       %5275 = OpExtInst %float %1 Fma %4628 %5269 %5274
       %5276 = OpExtInst %float %1 Floor %5270
       %5277 = OpFNegate %float %5276
       %5278 = OpExtInst %float %1 Fma %4627 %5269 %5277
       %5279 = OpExtInst %float %1 Fma %5278 %float_2097152 %5275
       %5280 = OpExtInst %float %1 Floor %5279
       %5281 = OpFMul %float %5276 %float_n6_28318548
       %5282 = OpExtInst %float %1 Fma %5270 %float_6_28318548 %5281
       %5283 = OpFMul %float %5280 %float_n6_28318548
       %5284 = OpExtInst %float %1 Fma %5275 %float_6_28318548 %5283
       %5285 = OpExtInst %float %1 Fma %5282 %float_2097152 %5284
       %5286 = OpExtInst %float %1 Sin %5285
       %5287 = OpFMul %float %5286 %5026
       %5288 = OpCompositeConstruct %v3float %550 %550 %5267
       %5289 = OpCompositeConstruct %v3float %550 %550 %5287
       %5290 = OpFAdd %v3float %5288 %5289
       %5291 = OpFMul %float %5268 %4448
       %5292 = OpFDiv %float %float_2 %5291
       %5293 = OpFMul %float %4665 %5292
       %5294 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_0
       %5295 = OpLoad %float %5294
       %5296 = OpFMul %float %5292 %5295
       %5297 = OpFMul %float %5296 %3853
       %5298 = OpExtInst %float %1 Fma %4666 %5292 %5297
       %5299 = OpExtInst %float %1 Floor %5293
       %5300 = OpFNegate %float %5299
       %5301 = OpExtInst %float %1 Fma %4665 %5292 %5300
       %5302 = OpExtInst %float %1 Fma %5301 %float_2097152 %5298
       %5303 = OpExtInst %float %1 Floor %5302
       %5304 = OpFMul %float %5299 %float_n6_28318548
       %5305 = OpExtInst %float %1 Fma %5293 %float_6_28318548 %5304
       %5306 = OpFMul %float %5303 %float_n6_28318548
       %5307 = OpExtInst %float %1 Fma %5298 %float_6_28318548 %5306
       %5308 = OpExtInst %float %1 Fma %5305 %float_2097152 %5307
       %5309 = OpExtInst %float %1 Sin %5308
       %5310 = OpFMul %float %5309 %5050
       %5311 = OpCompositeConstruct %v3float %550 %550 %5310
       %5312 = OpFAdd %v3float %5290 %5311
       %5313 = OpFMul %float %5291 %4448
       %5314 = OpFDiv %float %float_2 %5313
       %5315 = OpFMul %float %4702 %5314
       %5316 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_1
       %5317 = OpLoad %float %5316
       %5318 = OpFMul %float %5314 %5317
       %5319 = OpFMul %float %5318 %3853
       %5320 = OpExtInst %float %1 Fma %4703 %5314 %5319
       %5321 = OpExtInst %float %1 Floor %5315
       %5322 = OpFNegate %float %5321
       %5323 = OpExtInst %float %1 Fma %4702 %5314 %5322
       %5324 = OpExtInst %float %1 Fma %5323 %float_2097152 %5320
       %5325 = OpExtInst %float %1 Floor %5324
       %5326 = OpFMul %float %5321 %float_n6_28318548
       %5327 = OpExtInst %float %1 Fma %5315 %float_6_28318548 %5326
       %5328 = OpFMul %float %5325 %float_n6_28318548
       %5329 = OpExtInst %float %1 Fma %5320 %float_6_28318548 %5328
       %5330 = OpExtInst %float %1 Fma %5327 %float_2097152 %5329
       %5331 = OpExtInst %float %1 Sin %5330
       %5332 = OpFMul %float %5331 %5073
       %5333 = OpCompositeConstruct %v3float %550 %550 %5332
       %5334 = OpFAdd %v3float %5312 %5333
       %5335 = OpFAdd %v3float %5246 %5334
       %5336 = OpFMul %float %4771 %5247
       %5337 = OpFDiv %float %float_2 %5336
       %5338 = OpFMul %float %4768 %5337
       %5339 = OpFMul %float %5337 %5252
       %5340 = OpFMul %float %5339 %3853
       %5341 = OpExtInst %float %1 Fma %4769 %5337 %5340
       %5342 = OpExtInst %float %1 Floor %5338
       %5343 = OpFNegate %float %5342
       %5344 = OpExtInst %float %1 Fma %4768 %5337 %5343
       %5345 = OpExtInst %float %1 Fma %5344 %float_2097152 %5341
       %5346 = OpExtInst %float %1 Floor %5345
       %5347 = OpFMul %float %5342 %float_n6_28318548
       %5348 = OpExtInst %float %1 Fma %5338 %float_6_28318548 %5347
       %5349 = OpFMul %float %5346 %float_n6_28318548
       %5350 = OpExtInst %float %1 Fma %5341 %float_6_28318548 %5349
       %5351 = OpExtInst %float %1 Fma %5348 %float_2097152 %5350
       %5352 = OpExtInst %float %1 Sin %5351
       %5353 = OpFMul %float %5352 %5005
       %5354 = OpFMul %float %5336 %4448
       %5355 = OpFDiv %float %float_2 %5354
       %5356 = OpFMul %float %4802 %5355
       %5357 = OpFMul %float %5355 %5272
       %5358 = OpFMul %float %5357 %3853
       %5359 = OpExtInst %float %1 Fma %4803 %5355 %5358
       %5360 = OpExtInst %float %1 Floor %5356
       %5361 = OpFNegate %float %5360
       %5362 = OpExtInst %float %1 Fma %4802 %5355 %5361
       %5363 = OpExtInst %float %1 Fma %5362 %float_2097152 %5359
       %5364 = OpExtInst %float %1 Floor %5363
       %5365 = OpFMul %float %5360 %float_n6_28318548
       %5366 = OpExtInst %float %1 Fma %5356 %float_6_28318548 %5365
       %5367 = OpFMul %float %5364 %float_n6_28318548
       %5368 = OpExtInst %float %1 Fma %5359 %float_6_28318548 %5367
       %5369 = OpExtInst %float %1 Fma %5366 %float_2097152 %5368
       %5370 = OpExtInst %float %1 Sin %5369
       %5371 = OpFMul %float %5370 %5026
       %5372 = OpCompositeConstruct %v3float %550 %550 %5353
       %5373 = OpCompositeConstruct %v3float %550 %550 %5371
       %5374 = OpFAdd %v3float %5372 %5373
       %5375 = OpFMul %float %5354 %4448
       %5376 = OpFDiv %float %float_2 %5375
       %5377 = OpFMul %float %4837 %5376
       %5378 = OpFMul %float %5376 %5295
       %5379 = OpFMul %float %5378 %3853
       %5380 = OpExtInst %float %1 Fma %4838 %5376 %5379
       %5381 = OpExtInst %float %1 Floor %5377
       %5382 = OpFNegate %float %5381
       %5383 = OpExtInst %float %1 Fma %4837 %5376 %5382
       %5384 = OpExtInst %float %1 Fma %5383 %float_2097152 %5380
       %5385 = OpExtInst %float %1 Floor %5384
       %5386 = OpFMul %float %5381 %float_n6_28318548
       %5387 = OpExtInst %float %1 Fma %5377 %float_6_28318548 %5386
       %5388 = OpFMul %float %5385 %float_n6_28318548
       %5389 = OpExtInst %float %1 Fma %5380 %float_6_28318548 %5388
       %5390 = OpExtInst %float %1 Fma %5387 %float_2097152 %5389
       %5391 = OpExtInst %float %1 Sin %5390
       %5392 = OpFMul %float %5391 %5050
       %5393 = OpCompositeConstruct %v3float %550 %550 %5392
       %5394 = OpFAdd %v3float %5374 %5393
       %5395 = OpFMul %float %5375 %4448
       %5396 = OpFDiv %float %float_2 %5395
       %5397 = OpFMul %float %4871 %5396
       %5398 = OpFMul %float %5396 %5317
       %5399 = OpFMul %float %5398 %3853
       %5400 = OpExtInst %float %1 Fma %4872 %5396 %5399
       %5401 = OpExtInst %float %1 Floor %5397
       %5402 = OpFNegate %float %5401
       %5403 = OpExtInst %float %1 Fma %4871 %5396 %5402
       %5404 = OpExtInst %float %1 Fma %5403 %float_2097152 %5400
       %5405 = OpExtInst %float %1 Floor %5404
       %5406 = OpFMul %float %5401 %float_n6_28318548
       %5407 = OpExtInst %float %1 Fma %5397 %float_6_28318548 %5406
       %5408 = OpFMul %float %5405 %float_n6_28318548
       %5409 = OpExtInst %float %1 Fma %5400 %float_6_28318548 %5408
       %5410 = OpExtInst %float %1 Fma %5407 %float_2097152 %5409
       %5411 = OpExtInst %float %1 Sin %5410
       %5412 = OpFMul %float %5411 %5073
       %5413 = OpCompositeConstruct %v3float %550 %550 %5412
       %5414 = OpFAdd %v3float %5394 %5413
       %5415 = OpFAdd %v3float %5335 %5414
       %5416 = OpFMul %float %3566 %float_0_75
       %5417 = OpFMul %float %3568 %5416
       %5418 = OpFDiv %float %float_2 %5417
       %5419 = OpFMul %float %3562 %5418
       %5420 = OpFMul %float %5418 %4899
       %5421 = OpFMul %float %5420 %3853
       %5422 = OpExtInst %float %1 Fma %3563 %5418 %5421
       %5423 = OpExtInst %float %1 Floor %5419
       %5424 = OpFNegate %float %5423
       %5425 = OpExtInst %float %1 Fma %3562 %5418 %5424
       %5426 = OpExtInst %float %1 Fma %5425 %float_2097152 %5422
       %5427 = OpExtInst %float %1 Floor %5426
       %5428 = OpFMul %float %5423 %float_n6_28318548
       %5429 = OpExtInst %float %1 Fma %5419 %float_6_28318548 %5428
       %5430 = OpFMul %float %5427 %float_n6_28318548
       %5431 = OpExtInst %float %1 Fma %5422 %float_6_28318548 %5430
       %5432 = OpExtInst %float %1 Fma %5429 %float_2097152 %5431
       %5433 = OpFMul %float %4430 %float_0_5
       %5434 = OpExtInst %float %1 Sin %5432
       %5435 = OpFMul %float %5434 %5433
       %5436 = OpFMul %float %5417 %4448
       %5437 = OpFDiv %float %float_2 %5436
       %5438 = OpFMul %float %4445 %5437
       %5439 = OpFMul %float %5437 %4920
       %5440 = OpFMul %float %5439 %3853
       %5441 = OpExtInst %float %1 Fma %4446 %5437 %5440
       %5442 = OpExtInst %float %1 Floor %5438
       %5443 = OpFNegate %float %5442
       %5444 = OpExtInst %float %1 Fma %4445 %5437 %5443
       %5445 = OpExtInst %float %1 Fma %5444 %float_2097152 %5441
       %5446 = OpExtInst %float %1 Floor %5445
       %5447 = OpFMul %float %5442 %float_n6_28318548
       %5448 = OpExtInst %float %1 Fma %5438 %float_6_28318548 %5447
       %5449 = OpFMul %float %5446 %float_n6_28318548
       %5450 = OpExtInst %float %1 Fma %5441 %float_6_28318548 %5449
       %5451 = OpExtInst %float %1 Fma %5448 %float_2097152 %5450
       %5452 = OpFMul %float %5433 %2594
       %5453 = OpExtInst %float %1 Sin %5451
       %5454 = OpFMul %float %5453 %5452
       %5455 = OpCompositeConstruct %v3float %550 %550 %5435
       %5456 = OpCompositeConstruct %v3float %550 %550 %5454
       %5457 = OpFAdd %v3float %5455 %5456
       %5458 = OpFMul %float %5436 %4448
       %5459 = OpFDiv %float %float_2 %5458
       %5460 = OpFMul %float %4485 %5459
       %5461 = OpFMul %float %5459 %4944
       %5462 = OpFMul %float %5461 %3853
       %5463 = OpExtInst %float %1 Fma %4486 %5459 %5462
       %5464 = OpExtInst %float %1 Floor %5460
       %5465 = OpFNegate %float %5464
       %5466 = OpExtInst %float %1 Fma %4485 %5459 %5465
       %5467 = OpExtInst %float %1 Fma %5466 %float_2097152 %5463
       %5468 = OpExtInst %float %1 Floor %5467
       %5469 = OpFMul %float %5464 %float_n6_28318548
       %5470 = OpExtInst %float %1 Fma %5460 %float_6_28318548 %5469
       %5471 = OpFMul %float %5468 %float_n6_28318548
       %5472 = OpExtInst %float %1 Fma %5463 %float_6_28318548 %5471
       %5473 = OpExtInst %float %1 Fma %5470 %float_2097152 %5472
       %5474 = OpFMul %float %5452 %2594
       %5475 = OpExtInst %float %1 Sin %5473
       %5476 = OpFMul %float %5475 %5474
       %5477 = OpCompositeConstruct %v3float %550 %550 %5476
       %5478 = OpFAdd %v3float %5457 %5477
       %5479 = OpFMul %float %5458 %4448
       %5480 = OpFDiv %float %float_2 %5479
       %5481 = OpFMul %float %4522 %5480
       %5482 = OpFMul %float %5480 %4967
       %5483 = OpFMul %float %5482 %3853
       %5484 = OpExtInst %float %1 Fma %4523 %5480 %5483
       %5485 = OpExtInst %float %1 Floor %5481
       %5486 = OpFNegate %float %5485
       %5487 = OpExtInst %float %1 Fma %4522 %5480 %5486
       %5488 = OpExtInst %float %1 Fma %5487 %float_2097152 %5484
       %5489 = OpExtInst %float %1 Floor %5488
       %5490 = OpFMul %float %5485 %float_n6_28318548
       %5491 = OpExtInst %float %1 Fma %5481 %float_6_28318548 %5490
       %5492 = OpFMul %float %5489 %float_n6_28318548
       %5493 = OpExtInst %float %1 Fma %5484 %float_6_28318548 %5492
       %5494 = OpExtInst %float %1 Fma %5491 %float_2097152 %5493
       %5495 = OpFMul %float %5474 %2594
       %5496 = OpExtInst %float %1 Sin %5494
       %5497 = OpFMul %float %5496 %5495
       %5498 = OpCompositeConstruct %v3float %550 %550 %5497
       %5499 = OpFAdd %v3float %5478 %5498
       %5500 = OpFMul %float %5416 %4590
       %5501 = OpFMul %float %4593 %5500
       %5502 = OpFDiv %float %float_2 %5501
       %5503 = OpFMul %float %4587 %5502
       %5504 = OpFMul %float %5502 %4991
       %5505 = OpFMul %float %5504 %3853
       %5506 = OpExtInst %float %1 Fma %4588 %5502 %5505
       %5507 = OpExtInst %float %1 Floor %5503
       %5508 = OpFNegate %float %5507
       %5509 = OpExtInst %float %1 Fma %4587 %5502 %5508
       %5510 = OpExtInst %float %1 Fma %5509 %float_2097152 %5506
       %5511 = OpExtInst %float %1 Floor %5510
       %5512 = OpFMul %float %5507 %float_n6_28318548
       %5513 = OpExtInst %float %1 Fma %5503 %float_6_28318548 %5512
       %5514 = OpFMul %float %5511 %float_n6_28318548
       %5515 = OpExtInst %float %1 Fma %5506 %float_6_28318548 %5514
       %5516 = OpExtInst %float %1 Fma %5513 %float_2097152 %5515
       %5517 = OpFMul %float %5433 %2733
       %5518 = OpExtInst %float %1 Sin %5516
       %5519 = OpFMul %float %5518 %5517
       %5520 = OpFMul %float %5501 %4448
       %5521 = OpFDiv %float %float_2 %5520
       %5522 = OpFMul %float %4627 %5521
       %5523 = OpFMul %float %5521 %5012
       %5524 = OpFMul %float %5523 %3853
       %5525 = OpExtInst %float %1 Fma %4628 %5521 %5524
       %5526 = OpExtInst %float %1 Floor %5522
       %5527 = OpFNegate %float %5526
       %5528 = OpExtInst %float %1 Fma %4627 %5521 %5527
       %5529 = OpExtInst %float %1 Fma %5528 %float_2097152 %5525
       %5530 = OpExtInst %float %1 Floor %5529
       %5531 = OpFMul %float %5526 %float_n6_28318548
       %5532 = OpExtInst %float %1 Fma %5522 %float_6_28318548 %5531
       %5533 = OpFMul %float %5530 %float_n6_28318548
       %5534 = OpExtInst %float %1 Fma %5525 %float_6_28318548 %5533
       %5535 = OpExtInst %float %1 Fma %5532 %float_2097152 %5534
       %5536 = OpFMul %float %5517 %2594
       %5537 = OpExtInst %float %1 Sin %5535
       %5538 = OpFMul %float %5537 %5536
       %5539 = OpCompositeConstruct %v3float %550 %550 %5519
       %5540 = OpCompositeConstruct %v3float %550 %550 %5538
       %5541 = OpFAdd %v3float %5539 %5540
       %5542 = OpFMul %float %5520 %4448
       %5543 = OpFDiv %float %float_2 %5542
       %5544 = OpFMul %float %4665 %5543
       %5545 = OpFMul %float %5543 %5036
       %5546 = OpFMul %float %5545 %3853
       %5547 = OpExtInst %float %1 Fma %4666 %5543 %5546
       %5548 = OpExtInst %float %1 Floor %5544
       %5549 = OpFNegate %float %5548
       %5550 = OpExtInst %float %1 Fma %4665 %5543 %5549
       %5551 = OpExtInst %float %1 Fma %5550 %float_2097152 %5547
       %5552 = OpExtInst %float %1 Floor %5551
       %5553 = OpFMul %float %5548 %float_n6_28318548
       %5554 = OpExtInst %float %1 Fma %5544 %float_6_28318548 %5553
       %5555 = OpFMul %float %5552 %float_n6_28318548
       %5556 = OpExtInst %float %1 Fma %5547 %float_6_28318548 %5555
       %5557 = OpExtInst %float %1 Fma %5554 %float_2097152 %5556
       %5558 = OpFMul %float %5536 %2594
       %5559 = OpExtInst %float %1 Sin %5557
       %5560 = OpFMul %float %5559 %5558
       %5561 = OpCompositeConstruct %v3float %550 %550 %5560
       %5562 = OpFAdd %v3float %5541 %5561
       %5563 = OpFMul %float %5542 %4448
       %5564 = OpFDiv %float %float_2 %5563
       %5565 = OpFMul %float %4702 %5564
       %5566 = OpFMul %float %5564 %5059
       %5567 = OpFMul %float %5566 %3853
       %5568 = OpExtInst %float %1 Fma %4703 %5564 %5567
       %5569 = OpExtInst %float %1 Floor %5565
       %5570 = OpFNegate %float %5569
       %5571 = OpExtInst %float %1 Fma %4702 %5564 %5570
       %5572 = OpExtInst %float %1 Fma %5571 %float_2097152 %5568
       %5573 = OpExtInst %float %1 Floor %5572
       %5574 = OpFMul %float %5569 %float_n6_28318548
       %5575 = OpExtInst %float %1 Fma %5565 %float_6_28318548 %5574
       %5576 = OpFMul %float %5573 %float_n6_28318548
       %5577 = OpExtInst %float %1 Fma %5568 %float_6_28318548 %5576
       %5578 = OpExtInst %float %1 Fma %5575 %float_2097152 %5577
       %5579 = OpFMul %float %5558 %2594
       %5580 = OpExtInst %float %1 Sin %5578
       %5581 = OpFMul %float %5580 %5579
       %5582 = OpCompositeConstruct %v3float %550 %550 %5581
       %5583 = OpFAdd %v3float %5562 %5582
       %5584 = OpFAdd %v3float %5499 %5583
       %5585 = OpFMul %float %4771 %5500
       %5586 = OpFDiv %float %float_2 %5585
       %5587 = OpFMul %float %4768 %5586
       %5588 = OpFMul %float %5586 %4991
       %5589 = OpFMul %float %5588 %3853
       %5590 = OpExtInst %float %1 Fma %4769 %5586 %5589
       %5591 = OpExtInst %float %1 Floor %5587
       %5592 = OpFNegate %float %5591
       %5593 = OpExtInst %float %1 Fma %4768 %5586 %5592
       %5594 = OpExtInst %float %1 Fma %5593 %float_2097152 %5590
       %5595 = OpExtInst %float %1 Floor %5594
       %5596 = OpFMul %float %5591 %float_n6_28318548
       %5597 = OpExtInst %float %1 Fma %5587 %float_6_28318548 %5596
       %5598 = OpFMul %float %5595 %float_n6_28318548
       %5599 = OpExtInst %float %1 Fma %5590 %float_6_28318548 %5598
       %5600 = OpExtInst %float %1 Fma %5597 %float_2097152 %5599
       %5601 = OpExtInst %float %1 Sin %5600
       %5602 = OpFMul %float %5601 %5517
       %5603 = OpFMul %float %5585 %4448
       %5604 = OpFDiv %float %float_2 %5603
       %5605 = OpFMul %float %4802 %5604
       %5606 = OpFMul %float %5604 %5012
       %5607 = OpFMul %float %5606 %3853
       %5608 = OpExtInst %float %1 Fma %4803 %5604 %5607
       %5609 = OpExtInst %float %1 Floor %5605
       %5610 = OpFNegate %float %5609
       %5611 = OpExtInst %float %1 Fma %4802 %5604 %5610
       %5612 = OpExtInst %float %1 Fma %5611 %float_2097152 %5608
       %5613 = OpExtInst %float %1 Floor %5612
       %5614 = OpFMul %float %5609 %float_n6_28318548
       %5615 = OpExtInst %float %1 Fma %5605 %float_6_28318548 %5614
       %5616 = OpFMul %float %5613 %float_n6_28318548
       %5617 = OpExtInst %float %1 Fma %5608 %float_6_28318548 %5616
       %5618 = OpExtInst %float %1 Fma %5615 %float_2097152 %5617
       %5619 = OpExtInst %float %1 Sin %5618
       %5620 = OpFMul %float %5619 %5536
       %5621 = OpCompositeConstruct %v3float %550 %550 %5602
       %5622 = OpCompositeConstruct %v3float %550 %550 %5620
       %5623 = OpFAdd %v3float %5621 %5622
       %5624 = OpFMul %float %5603 %4448
       %5625 = OpFDiv %float %float_2 %5624
       %5626 = OpFMul %float %4837 %5625
       %5627 = OpFMul %float %5625 %5036
       %5628 = OpFMul %float %5627 %3853
       %5629 = OpExtInst %float %1 Fma %4838 %5625 %5628
       %5630 = OpExtInst %float %1 Floor %5626
       %5631 = OpFNegate %float %5630
       %5632 = OpExtInst %float %1 Fma %4837 %5625 %5631
       %5633 = OpExtInst %float %1 Fma %5632 %float_2097152 %5629
       %5634 = OpExtInst %float %1 Floor %5633
       %5635 = OpFMul %float %5630 %float_n6_28318548
       %5636 = OpExtInst %float %1 Fma %5626 %float_6_28318548 %5635
       %5637 = OpFMul %float %5634 %float_n6_28318548
       %5638 = OpExtInst %float %1 Fma %5629 %float_6_28318548 %5637
       %5639 = OpExtInst %float %1 Fma %5636 %float_2097152 %5638
       %5640 = OpExtInst %float %1 Sin %5639
       %5641 = OpFMul %float %5640 %5558
       %5642 = OpCompositeConstruct %v3float %550 %550 %5641
       %5643 = OpFAdd %v3float %5623 %5642
       %5644 = OpFMul %float %5624 %4448
       %5645 = OpFDiv %float %float_2 %5644
       %5646 = OpFMul %float %4871 %5645
       %5647 = OpFMul %float %5645 %5059
       %5648 = OpFMul %float %5647 %3853
       %5649 = OpExtInst %float %1 Fma %4872 %5645 %5648
       %5650 = OpExtInst %float %1 Floor %5646
       %5651 = OpFNegate %float %5650
       %5652 = OpExtInst %float %1 Fma %4871 %5645 %5651
       %5653 = OpExtInst %float %1 Fma %5652 %float_2097152 %5649
       %5654 = OpExtInst %float %1 Floor %5653
       %5655 = OpFMul %float %5650 %float_n6_28318548
       %5656 = OpExtInst %float %1 Fma %5646 %float_6_28318548 %5655
       %5657 = OpFMul %float %5654 %float_n6_28318548
       %5658 = OpExtInst %float %1 Fma %5649 %float_6_28318548 %5657
       %5659 = OpExtInst %float %1 Fma %5656 %float_2097152 %5658
       %5660 = OpExtInst %float %1 Sin %5659
       %5661 = OpFMul %float %5660 %5579
       %5662 = OpCompositeConstruct %v3float %550 %550 %5661
       %5663 = OpFAdd %v3float %5643 %5662
       %5664 = OpFAdd %v3float %5584 %5663
       %5665 = OpFAdd %v3float %5415 %5664
       %5666 = OpFAdd %v3float %5158 %5665
       %5667 = OpFAdd %v3float %4893 %5666
       %5668 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_2
       %5669 = OpLoad %float %5668
       %5670 = OpFSub %float %5669 %float_n1
       %5671 = OpExtInst %float %1 FAbs %5670
       %5672 = OpFOrdGreaterThan %bool %5671 %float_9_99999975en06
       %5673 = OpFOrdGreaterThanEqual %bool %5669 %float_n1
       %5674 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_3
       %5675 = OpLoad %float %5674
       %5676 = OpSelect %float %5673 %5669 %5675
       %5677 = OpSelect %float %5672 %5676 %5669
       %5678 = OpFSub %float %5677 %float_1
       %5679 = OpExtInst %float %1 FAbs %5678
       %5680 = OpFOrdGreaterThan %bool %5679 %float_9_99999975en06
       %5681 = OpFOrdGreaterThanEqual %bool %5677 %float_1
       %5682 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_76 %int_0
       %5683 = OpLoad %float %5682
       %5684 = OpSelect %float %5681 %5683 %5669
       %5685 = OpSelect %float %5680 %5684 %5669
       %5686 = OpExtInst %float %1 FAbs %5685
       %5687 = OpFOrdGreaterThan %bool %5686 %float_9_99999975en06
       %5688 = OpFOrdGreaterThanEqual %bool %5685 %float_0
       %5689 = OpSelect %float %5688 %float_1 %float_n1
       %5690 = OpSelect %float %5687 %5689 %float_1
       %5691 = OpExtInst %float %1 NMax %5690 %float_n1
       %5692 = OpExtInst %float %1 NMin %5691 %float_1
       %5693 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_77 %int_1
       %5694 = OpLoad %float %5693
       %5695 = OpCompositeConstruct %v3float %5692 %5694 %float_0
       %5696 = OpFAdd %v3float %5695 %1688
       %5697 = OpExtInst %v3float %1 NMax %5696 %279
       %5698 = OpExtInst %v3float %1 NMin %5697 %127
       %5699 = OpCompositeExtract %float %5698 0
       %5700 = OpCompositeExtract %float %5698 1
       %5701 = OpCompositeConstruct %v2float %5699 %5700
       %5702 = OpFMul %v2float %1696 %5701
       %5703 = OpFMul %v2float %5701 %1697
       %5704 = OpCompositeExtract %float %5702 0
       %5705 = OpCompositeExtract %float %5703 0
       %5706 = OpCompositeExtract %float %5702 1
       %5707 = OpCompositeExtract %float %5703 1
       %5708 = OpFAdd %float %5704 %5706
       %5709 = OpFAdd %float %5705 %5707
       %5710 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_2
       %5711 = OpLoad %float %5710
       %5712 = OpFMul %float %5711 %3566
       %5713 = OpFDiv %float %float_2 %5712
       %5714 = OpFMul %float %5708 %5713
       %5715 = OpFMul %float %5713 %3573
       %5716 = OpFAdd %v3float %642 %289
       %5717 = OpFMul %v3float %593 %3586
       %5718 = OpFMul %v3float %5716 %3586
       %5719 = OpFMul %v3float %5717 %3577
       %5720 = OpFMul %v3float %3577 %5718
       %5721 = OpFMul %v3float %5720 %3582
       %5722 = OpCompositeExtract %float %5721 0
       %5723 = OpCompositeExtract %float %5721 1
       %5724 = OpCompositeExtract %float %5721 2
       %5725 = OpCompositeConstruct %v2float %5724 %5724
       %5726 = OpFAdd %v2float %3594 %5725
       %5727 = OpCompositeExtract %float %5726 0
       %5728 = OpCompositeConstruct %v3float %5722 %5723 %5727
       %5729 = OpVectorTimesScalar %v3float %5728 %float_4_76837158en07
       %5730 = OpFAdd %v3float %5729 %137
       %5731 = OpExtInst %v3float %1 Fma %5719 %3582 %5730
       %5732 = OpExtInst %v3float %1 Floor %5731
       %5733 = OpFNegate %v3float %5732
       %5734 = OpExtInst %v3float %1 Fma %5719 %3582 %5733
       %5735 = OpVectorTimesScalar %v3float %5734 %float_2097152
       %5736 = OpFAdd %v3float %5735 %5728
       %5737 = OpVectorTimesScalar %v3float %5736 %float_1
               OpBranch %5738
       %5738 = OpLabel
       %5739 = OpPhi %v3float %5737 %4191 %5740 %5741
       %5742 = OpPhi %float %float_1 %4191 %5743 %5741
       %5744 = OpPhi %float %float_0 %4191 %5745 %5741
       %5746 = OpPhi %uint %uint_0 %4191 %5747 %5741
       %5748 = OpULessThan %bool %5746 %uint_6
               OpLoopMerge %5749 %5741 DontUnroll
               OpBranchConditional %5748 %5741 %5749
       %5741 = OpLabel
       %5750 = OpExtInst %v3float %1 Fract %5739
       %5751 = OpExtInst %v3float %1 Floor %5739
       %5752 = OpDot %float %5751 %386
       %5753 = OpFAdd %float %5752 %float_19
       %5754 = OpFAdd %float %5752 %float_47
       %5755 = OpFAdd %float %5752 %float_66
       %5756 = OpFAdd %float %5752 %float_101
       %5757 = OpFAdd %float %5752 %float_120
       %5758 = OpFAdd %float %5752 %float_148
       %5759 = OpFAdd %float %5752 %float_167
       %5760 = OpConvertFToS %int %5752
       %5761 = OpCompositeConstruct %v3int %5760 %int_0 %int_0
       %5762 = OpBitcast %v3uint %5761
       %5763 = OpIMul %v3uint %5762 %402
       %5764 = OpIAdd %v3uint %5763 %404
       %5765 = OpCompositeExtract %uint %5764 1
       %5766 = OpCompositeExtract %uint %5764 2
       %5767 = OpIMul %uint %5765 %5766
       %5768 = OpCompositeExtract %uint %5764 0
       %5769 = OpIAdd %uint %5768 %5767
       %5770 = OpIMul %uint %5766 %5769
       %5771 = OpIAdd %uint %5765 %5770
       %5772 = OpIMul %uint %5769 %5771
       %5773 = OpIAdd %uint %5766 %5772
       %5774 = OpIMul %uint %5771 %5773
       %5775 = OpIAdd %uint %5769 %5774
       %5776 = OpCompositeInsert %v3uint %5775 %551 0
       %5777 = OpBitwiseAnd %v3uint %405 %406
       %5778 = OpShiftRightLogical %v3uint %5776 %5777
       %5779 = OpCompositeExtract %uint %5778 0
       %5780 = OpCompositeConstruct %v3uint %5779 %5779 %5779
       %5781 = OpBitwiseAnd %v3uint %5780 %387
       %5782 = OpConvertUToF %v3float %5781
       %5783 = OpExtInst %v3float %1 Fma %5782 %391 %279
       %5784 = OpDot %float %5783 %5750
       %5785 = OpConvertFToS %int %5753
       %5786 = OpFSub %v3float %5750 %351
       %5787 = OpCompositeConstruct %v3int %5785 %int_0 %int_0
       %5788 = OpBitcast %v3uint %5787
       %5789 = OpIMul %v3uint %5788 %402
       %5790 = OpIAdd %v3uint %5789 %404
       %5791 = OpCompositeExtract %uint %5790 1
       %5792 = OpCompositeExtract %uint %5790 2
       %5793 = OpIMul %uint %5791 %5792
       %5794 = OpCompositeExtract %uint %5790 0
       %5795 = OpIAdd %uint %5794 %5793
       %5796 = OpIMul %uint %5792 %5795
       %5797 = OpIAdd %uint %5791 %5796
       %5798 = OpIMul %uint %5795 %5797
       %5799 = OpIAdd %uint %5792 %5798
       %5800 = OpIMul %uint %5797 %5799
       %5801 = OpIAdd %uint %5795 %5800
       %5802 = OpCompositeInsert %v3uint %5801 %551 0
       %5803 = OpShiftRightLogical %v3uint %5802 %5777
       %5804 = OpCompositeExtract %uint %5803 0
       %5805 = OpCompositeConstruct %v3uint %5804 %5804 %5804
       %5806 = OpBitwiseAnd %v3uint %5805 %387
       %5807 = OpConvertUToF %v3float %5806
       %5808 = OpExtInst %v3float %1 Fma %5807 %391 %279
       %5809 = OpDot %float %5808 %5786
       %5810 = OpConvertFToS %int %5754
       %5811 = OpFSub %v3float %5750 %352
       %5812 = OpCompositeConstruct %v3int %5810 %int_0 %int_0
       %5813 = OpBitcast %v3uint %5812
       %5814 = OpIMul %v3uint %5813 %402
       %5815 = OpIAdd %v3uint %5814 %404
       %5816 = OpCompositeExtract %uint %5815 1
       %5817 = OpCompositeExtract %uint %5815 2
       %5818 = OpIMul %uint %5816 %5817
       %5819 = OpCompositeExtract %uint %5815 0
       %5820 = OpIAdd %uint %5819 %5818
       %5821 = OpIMul %uint %5817 %5820
       %5822 = OpIAdd %uint %5816 %5821
       %5823 = OpIMul %uint %5820 %5822
       %5824 = OpIAdd %uint %5817 %5823
       %5825 = OpIMul %uint %5822 %5824
       %5826 = OpIAdd %uint %5820 %5825
       %5827 = OpCompositeInsert %v3uint %5826 %551 0
       %5828 = OpShiftRightLogical %v3uint %5827 %5777
       %5829 = OpCompositeExtract %uint %5828 0
       %5830 = OpCompositeConstruct %v3uint %5829 %5829 %5829
       %5831 = OpBitwiseAnd %v3uint %5830 %387
       %5832 = OpConvertUToF %v3float %5831
       %5833 = OpExtInst %v3float %1 Fma %5832 %391 %279
       %5834 = OpDot %float %5833 %5811
       %5835 = OpConvertFToS %int %5755
       %5836 = OpFSub %v3float %5750 %134
       %5837 = OpCompositeConstruct %v3int %5835 %int_0 %int_0
       %5838 = OpBitcast %v3uint %5837
       %5839 = OpIMul %v3uint %5838 %402
       %5840 = OpIAdd %v3uint %5839 %404
       %5841 = OpCompositeExtract %uint %5840 1
       %5842 = OpCompositeExtract %uint %5840 2
       %5843 = OpIMul %uint %5841 %5842
       %5844 = OpCompositeExtract %uint %5840 0
       %5845 = OpIAdd %uint %5844 %5843
       %5846 = OpIMul %uint %5842 %5845
       %5847 = OpIAdd %uint %5841 %5846
       %5848 = OpIMul %uint %5845 %5847
       %5849 = OpIAdd %uint %5842 %5848
       %5850 = OpIMul %uint %5847 %5849
       %5851 = OpIAdd %uint %5845 %5850
       %5852 = OpCompositeInsert %v3uint %5851 %551 0
       %5853 = OpShiftRightLogical %v3uint %5852 %5777
       %5854 = OpCompositeExtract %uint %5853 0
       %5855 = OpCompositeConstruct %v3uint %5854 %5854 %5854
       %5856 = OpBitwiseAnd %v3uint %5855 %387
       %5857 = OpConvertUToF %v3float %5856
       %5858 = OpExtInst %v3float %1 Fma %5857 %391 %279
       %5859 = OpDot %float %5858 %5836
       %5860 = OpConvertFToS %int %5756
       %5861 = OpFSub %v3float %5750 %291
       %5862 = OpCompositeConstruct %v3int %5860 %int_0 %int_0
       %5863 = OpBitcast %v3uint %5862
       %5864 = OpIMul %v3uint %5863 %402
       %5865 = OpIAdd %v3uint %5864 %404
       %5866 = OpCompositeExtract %uint %5865 1
       %5867 = OpCompositeExtract %uint %5865 2
       %5868 = OpIMul %uint %5866 %5867
       %5869 = OpCompositeExtract %uint %5865 0
       %5870 = OpIAdd %uint %5869 %5868
       %5871 = OpIMul %uint %5867 %5870
       %5872 = OpIAdd %uint %5866 %5871
       %5873 = OpIMul %uint %5870 %5872
       %5874 = OpIAdd %uint %5867 %5873
       %5875 = OpIMul %uint %5872 %5874
       %5876 = OpIAdd %uint %5870 %5875
       %5877 = OpCompositeInsert %v3uint %5876 %551 0
       %5878 = OpShiftRightLogical %v3uint %5877 %5777
       %5879 = OpCompositeExtract %uint %5878 0
       %5880 = OpCompositeConstruct %v3uint %5879 %5879 %5879
       %5881 = OpBitwiseAnd %v3uint %5880 %387
       %5882 = OpConvertUToF %v3float %5881
       %5883 = OpExtInst %v3float %1 Fma %5882 %391 %279
       %5884 = OpDot %float %5883 %5861
       %5885 = OpConvertFToS %int %5757
       %5886 = OpFSub %v3float %5750 %140
       %5887 = OpCompositeConstruct %v3int %5885 %int_0 %int_0
       %5888 = OpBitcast %v3uint %5887
       %5889 = OpIMul %v3uint %5888 %402
       %5890 = OpIAdd %v3uint %5889 %404
       %5891 = OpCompositeExtract %uint %5890 1
       %5892 = OpCompositeExtract %uint %5890 2
       %5893 = OpIMul %uint %5891 %5892
       %5894 = OpCompositeExtract %uint %5890 0
       %5895 = OpIAdd %uint %5894 %5893
       %5896 = OpIMul %uint %5892 %5895
       %5897 = OpIAdd %uint %5891 %5896
       %5898 = OpIMul %uint %5895 %5897
       %5899 = OpIAdd %uint %5892 %5898
       %5900 = OpIMul %uint %5897 %5899
       %5901 = OpIAdd %uint %5895 %5900
       %5902 = OpCompositeInsert %v3uint %5901 %551 0
       %5903 = OpShiftRightLogical %v3uint %5902 %5777
       %5904 = OpCompositeExtract %uint %5903 0
       %5905 = OpCompositeConstruct %v3uint %5904 %5904 %5904
       %5906 = OpBitwiseAnd %v3uint %5905 %387
       %5907 = OpConvertUToF %v3float %5906
       %5908 = OpExtInst %v3float %1 Fma %5907 %391 %279
       %5909 = OpDot %float %5908 %5886
       %5910 = OpConvertFToS %int %5758
       %5911 = OpFSub %v3float %5750 %135
       %5912 = OpCompositeConstruct %v3int %5910 %int_0 %int_0
       %5913 = OpBitcast %v3uint %5912
       %5914 = OpIMul %v3uint %5913 %402
       %5915 = OpIAdd %v3uint %5914 %404
       %5916 = OpCompositeExtract %uint %5915 1
       %5917 = OpCompositeExtract %uint %5915 2
       %5918 = OpIMul %uint %5916 %5917
       %5919 = OpCompositeExtract %uint %5915 0
       %5920 = OpIAdd %uint %5919 %5918
       %5921 = OpIMul %uint %5917 %5920
       %5922 = OpIAdd %uint %5916 %5921
       %5923 = OpIMul %uint %5920 %5922
       %5924 = OpIAdd %uint %5917 %5923
       %5925 = OpIMul %uint %5922 %5924
       %5926 = OpIAdd %uint %5920 %5925
       %5927 = OpCompositeInsert %v3uint %5926 %551 0
       %5928 = OpShiftRightLogical %v3uint %5927 %5777
       %5929 = OpCompositeExtract %uint %5928 0
       %5930 = OpCompositeConstruct %v3uint %5929 %5929 %5929
       %5931 = OpBitwiseAnd %v3uint %5930 %387
       %5932 = OpConvertUToF %v3float %5931
       %5933 = OpExtInst %v3float %1 Fma %5932 %391 %279
       %5934 = OpDot %float %5933 %5911
       %5935 = OpConvertFToS %int %5759
       %5936 = OpFSub %v3float %5750 %127
       %5937 = OpCompositeConstruct %v3int %5935 %int_0 %int_0
       %5938 = OpBitcast %v3uint %5937
       %5939 = OpIMul %v3uint %5938 %402
       %5940 = OpIAdd %v3uint %5939 %404
       %5941 = OpCompositeExtract %uint %5940 1
       %5942 = OpCompositeExtract %uint %5940 2
       %5943 = OpIMul %uint %5941 %5942
       %5944 = OpCompositeExtract %uint %5940 0
       %5945 = OpIAdd %uint %5944 %5943
       %5946 = OpIMul %uint %5942 %5945
       %5947 = OpIAdd %uint %5941 %5946
       %5948 = OpIMul %uint %5945 %5947
       %5949 = OpIAdd %uint %5942 %5948
       %5950 = OpIMul %uint %5947 %5949
       %5951 = OpIAdd %uint %5945 %5950
       %5952 = OpCompositeInsert %v3uint %5951 %551 0
       %5953 = OpShiftRightLogical %v3uint %5952 %5777
       %5954 = OpCompositeExtract %uint %5953 0
       %5955 = OpCompositeConstruct %v3uint %5954 %5954 %5954
       %5956 = OpBitwiseAnd %v3uint %5955 %387
       %5957 = OpConvertUToF %v3float %5956
       %5958 = OpExtInst %v3float %1 Fma %5957 %391 %279
       %5959 = OpDot %float %5958 %5936
       %5960 = OpCompositeExtract %float %5750 0
       %5961 = OpCompositeExtract %float %5750 1
       %5962 = OpCompositeExtract %float %5750 2
       %5963 = OpCompositeConstruct %v4float %5960 %5961 %5962 %float_0
       %5964 = OpFMul %v4float %5963 %5963
       %5965 = OpFMul %v4float %5964 %5963
       %5966 = OpVectorTimesScalar %v4float %5963 %float_6
       %5967 = OpFSub %v4float %5966 %382
       %5968 = OpExtInst %v4float %1 Fma %5963 %5967 %383
       %5969 = OpFMul %v4float %5965 %5968
       %5970 = OpCompositeExtract %float %5969 0
       %5971 = OpExtInst %float %1 FMix %5784 %5809 %5970
       %5972 = OpExtInst %float %1 FMix %5834 %5859 %5970
       %5973 = OpCompositeExtract %float %5969 1
       %5974 = OpExtInst %float %1 FMix %5971 %5972 %5973
       %5975 = OpExtInst %float %1 FMix %5884 %5909 %5970
       %5976 = OpExtInst %float %1 FMix %5934 %5959 %5970
       %5977 = OpExtInst %float %1 FMix %5975 %5976 %5973
       %5978 = OpCompositeExtract %float %5969 2
       %5979 = OpExtInst %float %1 FMix %5974 %5977 %5978
       %5745 = OpExtInst %float %1 Fma %5979 %5742 %5744
       %5740 = OpVectorTimesScalar %v3float %5739 %float_2
       %5743 = OpFMul %float %5742 %float_0_5
       %5747 = OpIAdd %uint %5746 %uint_1
               OpBranch %5738
       %5749 = OpLabel
       %5980 = OpExtInst %float %1 Fma %5744 %float_0_5 %float_0_5
       %5981 = OpExtInst %float %1 FMix %float_0 %float_1 %5980
       %5982 = OpExtInst %float %1 FClamp %5981 %float_0 %float_1
       %5983 = OpExtInst %float %1 FMix %1161 %1714 %5982
       %5984 = OpFMul %float %5715 %5983
       %5985 = OpExtInst %float %1 Fma %5709 %5713 %5984
       %5986 = OpExtInst %float %1 Floor %5714
       %5987 = OpFNegate %float %5986
       %5988 = OpExtInst %float %1 Fma %5708 %5713 %5987
       %5989 = OpExtInst %float %1 Fma %5988 %float_2097152 %5985
       %5990 = OpExtInst %float %1 Floor %5989
       %5991 = OpFMul %float %5986 %float_n6_28318548
       %5992 = OpExtInst %float %1 Fma %5714 %float_6_28318548 %5991
       %5993 = OpFMul %float %5990 %float_n6_28318548
       %5994 = OpExtInst %float %1 Fma %5985 %float_6_28318548 %5993
       %5995 = OpExtInst %float %1 Fma %5992 %float_2097152 %5994
       %5996 = OpFMul %v3float %5717 %3876
       %5997 = OpFMul %v3float %3876 %5718
       %5998 = OpFMul %v3float %5997 %3881
       %5999 = OpCompositeExtract %float %5998 0
       %6000 = OpCompositeExtract %float %5998 1
       %6001 = OpCompositeExtract %float %5998 2
       %6002 = OpCompositeConstruct %v2float %6001 %6001
       %6003 = OpFAdd %v2float %3891 %6002
       %6004 = OpCompositeExtract %float %6003 0
       %6005 = OpCompositeConstruct %v3float %5999 %6000 %6004
       %6006 = OpVectorTimesScalar %v3float %6005 %float_4_76837158en07
       %6007 = OpFAdd %v3float %6006 %137
       %6008 = OpExtInst %v3float %1 Fma %5996 %3881 %6007
       %6009 = OpExtInst %v3float %1 Floor %6008
       %6010 = OpFNegate %v3float %6009
       %6011 = OpExtInst %v3float %1 Fma %5996 %3881 %6010
       %6012 = OpVectorTimesScalar %v3float %6011 %float_2097152
       %6013 = OpFAdd %v3float %6012 %6005
       %6014 = OpVectorTimesScalar %v3float %6013 %float_1
               OpBranch %6015
       %6015 = OpLabel
       %6016 = OpPhi %v3float %6014 %5749 %6017 %6018
       %6019 = OpPhi %float %float_1 %5749 %6020 %6018
       %6021 = OpPhi %float %float_0 %5749 %6022 %6018
       %6023 = OpPhi %uint %uint_0 %5749 %6024 %6018
       %6025 = OpULessThan %bool %6023 %uint_10
               OpLoopMerge %6026 %6018 DontUnroll
               OpBranchConditional %6025 %6018 %6026
       %6018 = OpLabel
       %6027 = OpExtInst %v3float %1 Fract %6016
       %6028 = OpExtInst %v3float %1 Floor %6016
       %6029 = OpDot %float %6028 %386
       %6030 = OpFAdd %float %6029 %float_19
       %6031 = OpFAdd %float %6029 %float_47
       %6032 = OpFAdd %float %6029 %float_66
       %6033 = OpFAdd %float %6029 %float_101
       %6034 = OpFAdd %float %6029 %float_120
       %6035 = OpFAdd %float %6029 %float_148
       %6036 = OpFAdd %float %6029 %float_167
       %6037 = OpConvertFToS %int %6029
       %6038 = OpCompositeConstruct %v3int %6037 %int_0 %int_0
       %6039 = OpBitcast %v3uint %6038
       %6040 = OpIMul %v3uint %6039 %402
       %6041 = OpIAdd %v3uint %6040 %404
       %6042 = OpCompositeExtract %uint %6041 1
       %6043 = OpCompositeExtract %uint %6041 2
       %6044 = OpIMul %uint %6042 %6043
       %6045 = OpCompositeExtract %uint %6041 0
       %6046 = OpIAdd %uint %6045 %6044
       %6047 = OpIMul %uint %6043 %6046
       %6048 = OpIAdd %uint %6042 %6047
       %6049 = OpIMul %uint %6046 %6048
       %6050 = OpIAdd %uint %6043 %6049
       %6051 = OpIMul %uint %6048 %6050
       %6052 = OpIAdd %uint %6046 %6051
       %6053 = OpCompositeInsert %v3uint %6052 %551 0
       %6054 = OpBitwiseAnd %v3uint %405 %406
       %6055 = OpShiftRightLogical %v3uint %6053 %6054
       %6056 = OpCompositeExtract %uint %6055 0
       %6057 = OpCompositeConstruct %v3uint %6056 %6056 %6056
       %6058 = OpBitwiseAnd %v3uint %6057 %387
       %6059 = OpConvertUToF %v3float %6058
       %6060 = OpExtInst %v3float %1 Fma %6059 %391 %279
       %6061 = OpDot %float %6060 %6027
       %6062 = OpConvertFToS %int %6030
       %6063 = OpFSub %v3float %6027 %351
       %6064 = OpCompositeConstruct %v3int %6062 %int_0 %int_0
       %6065 = OpBitcast %v3uint %6064
       %6066 = OpIMul %v3uint %6065 %402
       %6067 = OpIAdd %v3uint %6066 %404
       %6068 = OpCompositeExtract %uint %6067 1
       %6069 = OpCompositeExtract %uint %6067 2
       %6070 = OpIMul %uint %6068 %6069
       %6071 = OpCompositeExtract %uint %6067 0
       %6072 = OpIAdd %uint %6071 %6070
       %6073 = OpIMul %uint %6069 %6072
       %6074 = OpIAdd %uint %6068 %6073
       %6075 = OpIMul %uint %6072 %6074
       %6076 = OpIAdd %uint %6069 %6075
       %6077 = OpIMul %uint %6074 %6076
       %6078 = OpIAdd %uint %6072 %6077
       %6079 = OpCompositeInsert %v3uint %6078 %551 0
       %6080 = OpShiftRightLogical %v3uint %6079 %6054
       %6081 = OpCompositeExtract %uint %6080 0
       %6082 = OpCompositeConstruct %v3uint %6081 %6081 %6081
       %6083 = OpBitwiseAnd %v3uint %6082 %387
       %6084 = OpConvertUToF %v3float %6083
       %6085 = OpExtInst %v3float %1 Fma %6084 %391 %279
       %6086 = OpDot %float %6085 %6063
       %6087 = OpConvertFToS %int %6031
       %6088 = OpFSub %v3float %6027 %352
       %6089 = OpCompositeConstruct %v3int %6087 %int_0 %int_0
       %6090 = OpBitcast %v3uint %6089
       %6091 = OpIMul %v3uint %6090 %402
       %6092 = OpIAdd %v3uint %6091 %404
       %6093 = OpCompositeExtract %uint %6092 1
       %6094 = OpCompositeExtract %uint %6092 2
       %6095 = OpIMul %uint %6093 %6094
       %6096 = OpCompositeExtract %uint %6092 0
       %6097 = OpIAdd %uint %6096 %6095
       %6098 = OpIMul %uint %6094 %6097
       %6099 = OpIAdd %uint %6093 %6098
       %6100 = OpIMul %uint %6097 %6099
       %6101 = OpIAdd %uint %6094 %6100
       %6102 = OpIMul %uint %6099 %6101
       %6103 = OpIAdd %uint %6097 %6102
       %6104 = OpCompositeInsert %v3uint %6103 %551 0
       %6105 = OpShiftRightLogical %v3uint %6104 %6054
       %6106 = OpCompositeExtract %uint %6105 0
       %6107 = OpCompositeConstruct %v3uint %6106 %6106 %6106
       %6108 = OpBitwiseAnd %v3uint %6107 %387
       %6109 = OpConvertUToF %v3float %6108
       %6110 = OpExtInst %v3float %1 Fma %6109 %391 %279
       %6111 = OpDot %float %6110 %6088
       %6112 = OpConvertFToS %int %6032
       %6113 = OpFSub %v3float %6027 %134
       %6114 = OpCompositeConstruct %v3int %6112 %int_0 %int_0
       %6115 = OpBitcast %v3uint %6114
       %6116 = OpIMul %v3uint %6115 %402
       %6117 = OpIAdd %v3uint %6116 %404
       %6118 = OpCompositeExtract %uint %6117 1
       %6119 = OpCompositeExtract %uint %6117 2
       %6120 = OpIMul %uint %6118 %6119
       %6121 = OpCompositeExtract %uint %6117 0
       %6122 = OpIAdd %uint %6121 %6120
       %6123 = OpIMul %uint %6119 %6122
       %6124 = OpIAdd %uint %6118 %6123
       %6125 = OpIMul %uint %6122 %6124
       %6126 = OpIAdd %uint %6119 %6125
       %6127 = OpIMul %uint %6124 %6126
       %6128 = OpIAdd %uint %6122 %6127
       %6129 = OpCompositeInsert %v3uint %6128 %551 0
       %6130 = OpShiftRightLogical %v3uint %6129 %6054
       %6131 = OpCompositeExtract %uint %6130 0
       %6132 = OpCompositeConstruct %v3uint %6131 %6131 %6131
       %6133 = OpBitwiseAnd %v3uint %6132 %387
       %6134 = OpConvertUToF %v3float %6133
       %6135 = OpExtInst %v3float %1 Fma %6134 %391 %279
       %6136 = OpDot %float %6135 %6113
       %6137 = OpConvertFToS %int %6033
       %6138 = OpFSub %v3float %6027 %291
       %6139 = OpCompositeConstruct %v3int %6137 %int_0 %int_0
       %6140 = OpBitcast %v3uint %6139
       %6141 = OpIMul %v3uint %6140 %402
       %6142 = OpIAdd %v3uint %6141 %404
       %6143 = OpCompositeExtract %uint %6142 1
       %6144 = OpCompositeExtract %uint %6142 2
       %6145 = OpIMul %uint %6143 %6144
       %6146 = OpCompositeExtract %uint %6142 0
       %6147 = OpIAdd %uint %6146 %6145
       %6148 = OpIMul %uint %6144 %6147
       %6149 = OpIAdd %uint %6143 %6148
       %6150 = OpIMul %uint %6147 %6149
       %6151 = OpIAdd %uint %6144 %6150
       %6152 = OpIMul %uint %6149 %6151
       %6153 = OpIAdd %uint %6147 %6152
       %6154 = OpCompositeInsert %v3uint %6153 %551 0
       %6155 = OpShiftRightLogical %v3uint %6154 %6054
       %6156 = OpCompositeExtract %uint %6155 0
       %6157 = OpCompositeConstruct %v3uint %6156 %6156 %6156
       %6158 = OpBitwiseAnd %v3uint %6157 %387
       %6159 = OpConvertUToF %v3float %6158
       %6160 = OpExtInst %v3float %1 Fma %6159 %391 %279
       %6161 = OpDot %float %6160 %6138
       %6162 = OpConvertFToS %int %6034
       %6163 = OpFSub %v3float %6027 %140
       %6164 = OpCompositeConstruct %v3int %6162 %int_0 %int_0
       %6165 = OpBitcast %v3uint %6164
       %6166 = OpIMul %v3uint %6165 %402
       %6167 = OpIAdd %v3uint %6166 %404
       %6168 = OpCompositeExtract %uint %6167 1
       %6169 = OpCompositeExtract %uint %6167 2
       %6170 = OpIMul %uint %6168 %6169
       %6171 = OpCompositeExtract %uint %6167 0
       %6172 = OpIAdd %uint %6171 %6170
       %6173 = OpIMul %uint %6169 %6172
       %6174 = OpIAdd %uint %6168 %6173
       %6175 = OpIMul %uint %6172 %6174
       %6176 = OpIAdd %uint %6169 %6175
       %6177 = OpIMul %uint %6174 %6176
       %6178 = OpIAdd %uint %6172 %6177
       %6179 = OpCompositeInsert %v3uint %6178 %551 0
       %6180 = OpShiftRightLogical %v3uint %6179 %6054
       %6181 = OpCompositeExtract %uint %6180 0
       %6182 = OpCompositeConstruct %v3uint %6181 %6181 %6181
       %6183 = OpBitwiseAnd %v3uint %6182 %387
       %6184 = OpConvertUToF %v3float %6183
       %6185 = OpExtInst %v3float %1 Fma %6184 %391 %279
       %6186 = OpDot %float %6185 %6163
       %6187 = OpConvertFToS %int %6035
       %6188 = OpFSub %v3float %6027 %135
       %6189 = OpCompositeConstruct %v3int %6187 %int_0 %int_0
       %6190 = OpBitcast %v3uint %6189
       %6191 = OpIMul %v3uint %6190 %402
       %6192 = OpIAdd %v3uint %6191 %404
       %6193 = OpCompositeExtract %uint %6192 1
       %6194 = OpCompositeExtract %uint %6192 2
       %6195 = OpIMul %uint %6193 %6194
       %6196 = OpCompositeExtract %uint %6192 0
       %6197 = OpIAdd %uint %6196 %6195
       %6198 = OpIMul %uint %6194 %6197
       %6199 = OpIAdd %uint %6193 %6198
       %6200 = OpIMul %uint %6197 %6199
       %6201 = OpIAdd %uint %6194 %6200
       %6202 = OpIMul %uint %6199 %6201
       %6203 = OpIAdd %uint %6197 %6202
       %6204 = OpCompositeInsert %v3uint %6203 %551 0
       %6205 = OpShiftRightLogical %v3uint %6204 %6054
       %6206 = OpCompositeExtract %uint %6205 0
       %6207 = OpCompositeConstruct %v3uint %6206 %6206 %6206
       %6208 = OpBitwiseAnd %v3uint %6207 %387
       %6209 = OpConvertUToF %v3float %6208
       %6210 = OpExtInst %v3float %1 Fma %6209 %391 %279
       %6211 = OpDot %float %6210 %6188
       %6212 = OpConvertFToS %int %6036
       %6213 = OpFSub %v3float %6027 %127
       %6214 = OpCompositeConstruct %v3int %6212 %int_0 %int_0
       %6215 = OpBitcast %v3uint %6214
       %6216 = OpIMul %v3uint %6215 %402
       %6217 = OpIAdd %v3uint %6216 %404
       %6218 = OpCompositeExtract %uint %6217 1
       %6219 = OpCompositeExtract %uint %6217 2
       %6220 = OpIMul %uint %6218 %6219
       %6221 = OpCompositeExtract %uint %6217 0
       %6222 = OpIAdd %uint %6221 %6220
       %6223 = OpIMul %uint %6219 %6222
       %6224 = OpIAdd %uint %6218 %6223
       %6225 = OpIMul %uint %6222 %6224
       %6226 = OpIAdd %uint %6219 %6225
       %6227 = OpIMul %uint %6224 %6226
       %6228 = OpIAdd %uint %6222 %6227
       %6229 = OpCompositeInsert %v3uint %6228 %551 0
       %6230 = OpShiftRightLogical %v3uint %6229 %6054
       %6231 = OpCompositeExtract %uint %6230 0
       %6232 = OpCompositeConstruct %v3uint %6231 %6231 %6231
       %6233 = OpBitwiseAnd %v3uint %6232 %387
       %6234 = OpConvertUToF %v3float %6233
       %6235 = OpExtInst %v3float %1 Fma %6234 %391 %279
       %6236 = OpDot %float %6235 %6213
       %6237 = OpCompositeExtract %float %6027 0
       %6238 = OpCompositeExtract %float %6027 1
       %6239 = OpCompositeExtract %float %6027 2
       %6240 = OpCompositeConstruct %v4float %6237 %6238 %6239 %float_0
       %6241 = OpFMul %v4float %6240 %6240
       %6242 = OpFMul %v4float %6241 %6240
       %6243 = OpVectorTimesScalar %v4float %6240 %float_6
       %6244 = OpFSub %v4float %6243 %382
       %6245 = OpExtInst %v4float %1 Fma %6240 %6244 %383
       %6246 = OpFMul %v4float %6242 %6245
       %6247 = OpCompositeExtract %float %6246 0
       %6248 = OpExtInst %float %1 FMix %6061 %6086 %6247
       %6249 = OpExtInst %float %1 FMix %6111 %6136 %6247
       %6250 = OpCompositeExtract %float %6246 1
       %6251 = OpExtInst %float %1 FMix %6248 %6249 %6250
       %6252 = OpExtInst %float %1 FMix %6161 %6186 %6247
       %6253 = OpExtInst %float %1 FMix %6211 %6236 %6247
       %6254 = OpExtInst %float %1 FMix %6252 %6253 %6250
       %6255 = OpCompositeExtract %float %6246 2
       %6256 = OpExtInst %float %1 FMix %6251 %6254 %6255
       %6257 = OpExtInst %float %1 FAbs %6256
       %6022 = OpExtInst %float %1 Fma %6257 %6019 %6021
       %6017 = OpVectorTimesScalar %v3float %6016 %float_2
       %6020 = OpFMul %float %6019 %float_0_5
       %6024 = OpIAdd %uint %6023 %uint_1
               OpBranch %6015
       %6026 = OpLabel
       %6258 = OpExtInst %float %1 FMix %float_0 %float_1 %6021
       %6259 = OpFMul %v3float %5717 %4151
       %6260 = OpFMul %v3float %4151 %5718
       %6261 = OpFMul %v3float %6260 %4156
       %6262 = OpCompositeExtract %float %6261 0
       %6263 = OpCompositeExtract %float %6261 1
       %6264 = OpCompositeExtract %float %6261 2
       %6265 = OpCompositeConstruct %v2float %6264 %6264
       %6266 = OpFAdd %v2float %4166 %6265
       %6267 = OpCompositeExtract %float %6266 0
       %6268 = OpCompositeConstruct %v3float %6262 %6263 %6267
       %6269 = OpVectorTimesScalar %v3float %6268 %float_4_76837158en07
       %6270 = OpFAdd %v3float %6269 %137
       %6271 = OpExtInst %v3float %1 Fma %6259 %4156 %6270
       %6272 = OpExtInst %v3float %1 Floor %6271
       %6273 = OpFNegate %v3float %6272
       %6274 = OpExtInst %v3float %1 Fma %6259 %4156 %6273
       %6275 = OpVectorTimesScalar %v3float %6274 %float_2097152
       %6276 = OpFAdd %v3float %6275 %6268
       %6277 = OpVectorTimesScalar %v3float %6276 %float_1
               OpBranch %6278
       %6278 = OpLabel
       %6279 = OpPhi %v3float %6277 %6026 %6280 %6281
       %6282 = OpPhi %float %float_1 %6026 %6283 %6281
       %6284 = OpPhi %float %float_0 %6026 %6285 %6281
       %6286 = OpPhi %uint %uint_0 %6026 %6287 %6281
       %6288 = OpULessThan %bool %6286 %uint_10
               OpLoopMerge %6289 %6281 DontUnroll
               OpBranchConditional %6288 %6281 %6289
       %6281 = OpLabel
       %6290 = OpExtInst %v3float %1 Fract %6279
       %6291 = OpExtInst %v3float %1 Floor %6279
       %6292 = OpDot %float %6291 %386
       %6293 = OpFAdd %float %6292 %float_19
       %6294 = OpFAdd %float %6292 %float_47
       %6295 = OpFAdd %float %6292 %float_66
       %6296 = OpFAdd %float %6292 %float_101
       %6297 = OpFAdd %float %6292 %float_120
       %6298 = OpFAdd %float %6292 %float_148
       %6299 = OpFAdd %float %6292 %float_167
       %6300 = OpConvertFToS %int %6292
       %6301 = OpCompositeConstruct %v3int %6300 %int_0 %int_0
       %6302 = OpBitcast %v3uint %6301
       %6303 = OpIMul %v3uint %6302 %402
       %6304 = OpIAdd %v3uint %6303 %404
       %6305 = OpCompositeExtract %uint %6304 1
       %6306 = OpCompositeExtract %uint %6304 2
       %6307 = OpIMul %uint %6305 %6306
       %6308 = OpCompositeExtract %uint %6304 0
       %6309 = OpIAdd %uint %6308 %6307
       %6310 = OpIMul %uint %6306 %6309
       %6311 = OpIAdd %uint %6305 %6310
       %6312 = OpIMul %uint %6309 %6311
       %6313 = OpIAdd %uint %6306 %6312
       %6314 = OpIMul %uint %6311 %6313
       %6315 = OpIAdd %uint %6309 %6314
       %6316 = OpCompositeInsert %v3uint %6315 %551 0
       %6317 = OpBitwiseAnd %v3uint %405 %406
       %6318 = OpShiftRightLogical %v3uint %6316 %6317
       %6319 = OpCompositeExtract %uint %6318 0
       %6320 = OpCompositeConstruct %v3uint %6319 %6319 %6319
       %6321 = OpBitwiseAnd %v3uint %6320 %387
       %6322 = OpConvertUToF %v3float %6321
       %6323 = OpExtInst %v3float %1 Fma %6322 %391 %279
       %6324 = OpDot %float %6323 %6290
       %6325 = OpConvertFToS %int %6293
       %6326 = OpFSub %v3float %6290 %351
       %6327 = OpCompositeConstruct %v3int %6325 %int_0 %int_0
       %6328 = OpBitcast %v3uint %6327
       %6329 = OpIMul %v3uint %6328 %402
       %6330 = OpIAdd %v3uint %6329 %404
       %6331 = OpCompositeExtract %uint %6330 1
       %6332 = OpCompositeExtract %uint %6330 2
       %6333 = OpIMul %uint %6331 %6332
       %6334 = OpCompositeExtract %uint %6330 0
       %6335 = OpIAdd %uint %6334 %6333
       %6336 = OpIMul %uint %6332 %6335
       %6337 = OpIAdd %uint %6331 %6336
       %6338 = OpIMul %uint %6335 %6337
       %6339 = OpIAdd %uint %6332 %6338
       %6340 = OpIMul %uint %6337 %6339
       %6341 = OpIAdd %uint %6335 %6340
       %6342 = OpCompositeInsert %v3uint %6341 %551 0
       %6343 = OpShiftRightLogical %v3uint %6342 %6317
       %6344 = OpCompositeExtract %uint %6343 0
       %6345 = OpCompositeConstruct %v3uint %6344 %6344 %6344
       %6346 = OpBitwiseAnd %v3uint %6345 %387
       %6347 = OpConvertUToF %v3float %6346
       %6348 = OpExtInst %v3float %1 Fma %6347 %391 %279
       %6349 = OpDot %float %6348 %6326
       %6350 = OpConvertFToS %int %6294
       %6351 = OpFSub %v3float %6290 %352
       %6352 = OpCompositeConstruct %v3int %6350 %int_0 %int_0
       %6353 = OpBitcast %v3uint %6352
       %6354 = OpIMul %v3uint %6353 %402
       %6355 = OpIAdd %v3uint %6354 %404
       %6356 = OpCompositeExtract %uint %6355 1
       %6357 = OpCompositeExtract %uint %6355 2
       %6358 = OpIMul %uint %6356 %6357
       %6359 = OpCompositeExtract %uint %6355 0
       %6360 = OpIAdd %uint %6359 %6358
       %6361 = OpIMul %uint %6357 %6360
       %6362 = OpIAdd %uint %6356 %6361
       %6363 = OpIMul %uint %6360 %6362
       %6364 = OpIAdd %uint %6357 %6363
       %6365 = OpIMul %uint %6362 %6364
       %6366 = OpIAdd %uint %6360 %6365
       %6367 = OpCompositeInsert %v3uint %6366 %551 0
       %6368 = OpShiftRightLogical %v3uint %6367 %6317
       %6369 = OpCompositeExtract %uint %6368 0
       %6370 = OpCompositeConstruct %v3uint %6369 %6369 %6369
       %6371 = OpBitwiseAnd %v3uint %6370 %387
       %6372 = OpConvertUToF %v3float %6371
       %6373 = OpExtInst %v3float %1 Fma %6372 %391 %279
       %6374 = OpDot %float %6373 %6351
       %6375 = OpConvertFToS %int %6295
       %6376 = OpFSub %v3float %6290 %134
       %6377 = OpCompositeConstruct %v3int %6375 %int_0 %int_0
       %6378 = OpBitcast %v3uint %6377
       %6379 = OpIMul %v3uint %6378 %402
       %6380 = OpIAdd %v3uint %6379 %404
       %6381 = OpCompositeExtract %uint %6380 1
       %6382 = OpCompositeExtract %uint %6380 2
       %6383 = OpIMul %uint %6381 %6382
       %6384 = OpCompositeExtract %uint %6380 0
       %6385 = OpIAdd %uint %6384 %6383
       %6386 = OpIMul %uint %6382 %6385
       %6387 = OpIAdd %uint %6381 %6386
       %6388 = OpIMul %uint %6385 %6387
       %6389 = OpIAdd %uint %6382 %6388
       %6390 = OpIMul %uint %6387 %6389
       %6391 = OpIAdd %uint %6385 %6390
       %6392 = OpCompositeInsert %v3uint %6391 %551 0
       %6393 = OpShiftRightLogical %v3uint %6392 %6317
       %6394 = OpCompositeExtract %uint %6393 0
       %6395 = OpCompositeConstruct %v3uint %6394 %6394 %6394
       %6396 = OpBitwiseAnd %v3uint %6395 %387
       %6397 = OpConvertUToF %v3float %6396
       %6398 = OpExtInst %v3float %1 Fma %6397 %391 %279
       %6399 = OpDot %float %6398 %6376
       %6400 = OpConvertFToS %int %6296
       %6401 = OpFSub %v3float %6290 %291
       %6402 = OpCompositeConstruct %v3int %6400 %int_0 %int_0
       %6403 = OpBitcast %v3uint %6402
       %6404 = OpIMul %v3uint %6403 %402
       %6405 = OpIAdd %v3uint %6404 %404
       %6406 = OpCompositeExtract %uint %6405 1
       %6407 = OpCompositeExtract %uint %6405 2
       %6408 = OpIMul %uint %6406 %6407
       %6409 = OpCompositeExtract %uint %6405 0
       %6410 = OpIAdd %uint %6409 %6408
       %6411 = OpIMul %uint %6407 %6410
       %6412 = OpIAdd %uint %6406 %6411
       %6413 = OpIMul %uint %6410 %6412
       %6414 = OpIAdd %uint %6407 %6413
       %6415 = OpIMul %uint %6412 %6414
       %6416 = OpIAdd %uint %6410 %6415
       %6417 = OpCompositeInsert %v3uint %6416 %551 0
       %6418 = OpShiftRightLogical %v3uint %6417 %6317
       %6419 = OpCompositeExtract %uint %6418 0
       %6420 = OpCompositeConstruct %v3uint %6419 %6419 %6419
       %6421 = OpBitwiseAnd %v3uint %6420 %387
       %6422 = OpConvertUToF %v3float %6421
       %6423 = OpExtInst %v3float %1 Fma %6422 %391 %279
       %6424 = OpDot %float %6423 %6401
       %6425 = OpConvertFToS %int %6297
       %6426 = OpFSub %v3float %6290 %140
       %6427 = OpCompositeConstruct %v3int %6425 %int_0 %int_0
       %6428 = OpBitcast %v3uint %6427
       %6429 = OpIMul %v3uint %6428 %402
       %6430 = OpIAdd %v3uint %6429 %404
       %6431 = OpCompositeExtract %uint %6430 1
       %6432 = OpCompositeExtract %uint %6430 2
       %6433 = OpIMul %uint %6431 %6432
       %6434 = OpCompositeExtract %uint %6430 0
       %6435 = OpIAdd %uint %6434 %6433
       %6436 = OpIMul %uint %6432 %6435
       %6437 = OpIAdd %uint %6431 %6436
       %6438 = OpIMul %uint %6435 %6437
       %6439 = OpIAdd %uint %6432 %6438
       %6440 = OpIMul %uint %6437 %6439
       %6441 = OpIAdd %uint %6435 %6440
       %6442 = OpCompositeInsert %v3uint %6441 %551 0
       %6443 = OpShiftRightLogical %v3uint %6442 %6317
       %6444 = OpCompositeExtract %uint %6443 0
       %6445 = OpCompositeConstruct %v3uint %6444 %6444 %6444
       %6446 = OpBitwiseAnd %v3uint %6445 %387
       %6447 = OpConvertUToF %v3float %6446
       %6448 = OpExtInst %v3float %1 Fma %6447 %391 %279
       %6449 = OpDot %float %6448 %6426
       %6450 = OpConvertFToS %int %6298
       %6451 = OpFSub %v3float %6290 %135
       %6452 = OpCompositeConstruct %v3int %6450 %int_0 %int_0
       %6453 = OpBitcast %v3uint %6452
       %6454 = OpIMul %v3uint %6453 %402
       %6455 = OpIAdd %v3uint %6454 %404
       %6456 = OpCompositeExtract %uint %6455 1
       %6457 = OpCompositeExtract %uint %6455 2
       %6458 = OpIMul %uint %6456 %6457
       %6459 = OpCompositeExtract %uint %6455 0
       %6460 = OpIAdd %uint %6459 %6458
       %6461 = OpIMul %uint %6457 %6460
       %6462 = OpIAdd %uint %6456 %6461
       %6463 = OpIMul %uint %6460 %6462
       %6464 = OpIAdd %uint %6457 %6463
       %6465 = OpIMul %uint %6462 %6464
       %6466 = OpIAdd %uint %6460 %6465
       %6467 = OpCompositeInsert %v3uint %6466 %551 0
       %6468 = OpShiftRightLogical %v3uint %6467 %6317
       %6469 = OpCompositeExtract %uint %6468 0
       %6470 = OpCompositeConstruct %v3uint %6469 %6469 %6469
       %6471 = OpBitwiseAnd %v3uint %6470 %387
       %6472 = OpConvertUToF %v3float %6471
       %6473 = OpExtInst %v3float %1 Fma %6472 %391 %279
       %6474 = OpDot %float %6473 %6451
       %6475 = OpConvertFToS %int %6299
       %6476 = OpFSub %v3float %6290 %127
       %6477 = OpCompositeConstruct %v3int %6475 %int_0 %int_0
       %6478 = OpBitcast %v3uint %6477
       %6479 = OpIMul %v3uint %6478 %402
       %6480 = OpIAdd %v3uint %6479 %404
       %6481 = OpCompositeExtract %uint %6480 1
       %6482 = OpCompositeExtract %uint %6480 2
       %6483 = OpIMul %uint %6481 %6482
       %6484 = OpCompositeExtract %uint %6480 0
       %6485 = OpIAdd %uint %6484 %6483
       %6486 = OpIMul %uint %6482 %6485
       %6487 = OpIAdd %uint %6481 %6486
       %6488 = OpIMul %uint %6485 %6487
       %6489 = OpIAdd %uint %6482 %6488
       %6490 = OpIMul %uint %6487 %6489
       %6491 = OpIAdd %uint %6485 %6490
       %6492 = OpCompositeInsert %v3uint %6491 %551 0
       %6493 = OpShiftRightLogical %v3uint %6492 %6317
       %6494 = OpCompositeExtract %uint %6493 0
       %6495 = OpCompositeConstruct %v3uint %6494 %6494 %6494
       %6496 = OpBitwiseAnd %v3uint %6495 %387
       %6497 = OpConvertUToF %v3float %6496
       %6498 = OpExtInst %v3float %1 Fma %6497 %391 %279
       %6499 = OpDot %float %6498 %6476
       %6500 = OpCompositeExtract %float %6290 0
       %6501 = OpCompositeExtract %float %6290 1
       %6502 = OpCompositeExtract %float %6290 2
       %6503 = OpCompositeConstruct %v4float %6500 %6501 %6502 %float_0
       %6504 = OpFMul %v4float %6503 %6503
       %6505 = OpFMul %v4float %6504 %6503
       %6506 = OpVectorTimesScalar %v4float %6503 %float_6
       %6507 = OpFSub %v4float %6506 %382
       %6508 = OpExtInst %v4float %1 Fma %6503 %6507 %383
       %6509 = OpFMul %v4float %6505 %6508
       %6510 = OpCompositeExtract %float %6509 0
       %6511 = OpExtInst %float %1 FMix %6324 %6349 %6510
       %6512 = OpExtInst %float %1 FMix %6374 %6399 %6510
       %6513 = OpCompositeExtract %float %6509 1
       %6514 = OpExtInst %float %1 FMix %6511 %6512 %6513
       %6515 = OpExtInst %float %1 FMix %6424 %6449 %6510
       %6516 = OpExtInst %float %1 FMix %6474 %6499 %6510
       %6517 = OpExtInst %float %1 FMix %6515 %6516 %6513
       %6518 = OpCompositeExtract %float %6509 2
       %6519 = OpExtInst %float %1 FMix %6514 %6517 %6518
       %6520 = OpExtInst %float %1 FAbs %6519
       %6285 = OpExtInst %float %1 Fma %6520 %6282 %6284
       %6280 = OpVectorTimesScalar %v3float %6279 %float_2
       %6283 = OpFMul %float %6282 %float_0_5
       %6287 = OpIAdd %uint %6286 %uint_1
               OpBranch %6278
       %6289 = OpLabel
       %6521 = OpExtInst %float %1 FMix %float_0 %float_1 %6284
       %6522 = OpExtInst %float %1 Fma %6521 %4425 %4427
       %6523 = OpFMul %float %6258 %6522
       %6524 = OpExtInst %float %1 FMix %3868 %3873 %6523
       %6525 = OpExtInst %float %1 Sin %5995
       %6526 = OpFMul %float %6525 %6524
       %6527 = OpFAdd %v3float %5695 %2561
       %6528 = OpExtInst %v3float %1 NMax %6527 %279
       %6529 = OpExtInst %v3float %1 NMin %6528 %127
       %6530 = OpCompositeExtract %float %6529 0
       %6531 = OpCompositeExtract %float %6529 1
       %6532 = OpCompositeConstruct %v2float %6530 %6531
       %6533 = OpFMul %v2float %1696 %6532
       %6534 = OpFMul %v2float %6532 %1697
       %6535 = OpCompositeExtract %float %6533 0
       %6536 = OpCompositeExtract %float %6534 0
       %6537 = OpCompositeExtract %float %6533 1
       %6538 = OpCompositeExtract %float %6534 1
       %6539 = OpFAdd %float %6535 %6537
       %6540 = OpFAdd %float %6536 %6538
       %6541 = OpFMul %float %5712 %4448
       %6542 = OpFDiv %float %float_2 %6541
       %6543 = OpFMul %float %6539 %6542
       %6544 = OpFMul %float %6542 %4453
       %6545 = OpFMul %float %6544 %5983
       %6546 = OpExtInst %float %1 Fma %6540 %6542 %6545
       %6547 = OpExtInst %float %1 Floor %6543
       %6548 = OpFNegate %float %6547
       %6549 = OpExtInst %float %1 Fma %6539 %6542 %6548
       %6550 = OpExtInst %float %1 Fma %6549 %float_2097152 %6546
       %6551 = OpExtInst %float %1 Floor %6550
       %6552 = OpFMul %float %6547 %float_n6_28318548
       %6553 = OpExtInst %float %1 Fma %6543 %float_6_28318548 %6552
       %6554 = OpFMul %float %6551 %float_n6_28318548
       %6555 = OpExtInst %float %1 Fma %6546 %float_6_28318548 %6554
       %6556 = OpExtInst %float %1 Fma %6553 %float_2097152 %6555
       %6557 = OpFMul %float %6524 %2594
       %6558 = OpExtInst %float %1 Sin %6556
       %6559 = OpFMul %float %6558 %6557
       %6560 = OpCompositeConstruct %v3float %550 %550 %6526
       %6561 = OpCompositeConstruct %v3float %550 %550 %6559
       %6562 = OpFAdd %v3float %6560 %6561
       %6563 = OpFSub %v3float %5695 %1688
       %6564 = OpExtInst %v3float %1 NMax %6563 %279
       %6565 = OpExtInst %v3float %1 NMin %6564 %127
       %6566 = OpCompositeExtract %float %6565 0
       %6567 = OpCompositeExtract %float %6565 1
       %6568 = OpCompositeConstruct %v2float %6566 %6567
       %6569 = OpFMul %v2float %1696 %6568
       %6570 = OpFMul %v2float %6568 %1697
       %6571 = OpCompositeExtract %float %6569 0
       %6572 = OpCompositeExtract %float %6570 0
       %6573 = OpCompositeExtract %float %6569 1
       %6574 = OpCompositeExtract %float %6570 1
       %6575 = OpFAdd %float %6571 %6573
       %6576 = OpFAdd %float %6572 %6574
       %6577 = OpFMul %float %6541 %4448
       %6578 = OpFDiv %float %float_2 %6577
       %6579 = OpFMul %float %6575 %6578
       %6580 = OpFMul %float %6578 %4491
       %6581 = OpFMul %float %6580 %5983
       %6582 = OpExtInst %float %1 Fma %6576 %6578 %6581
       %6583 = OpExtInst %float %1 Floor %6579
       %6584 = OpFNegate %float %6583
       %6585 = OpExtInst %float %1 Fma %6575 %6578 %6584
       %6586 = OpExtInst %float %1 Fma %6585 %float_2097152 %6582
       %6587 = OpExtInst %float %1 Floor %6586
       %6588 = OpFMul %float %6583 %float_n6_28318548
       %6589 = OpExtInst %float %1 Fma %6579 %float_6_28318548 %6588
       %6590 = OpFMul %float %6587 %float_n6_28318548
       %6591 = OpExtInst %float %1 Fma %6582 %float_6_28318548 %6590
       %6592 = OpExtInst %float %1 Fma %6589 %float_2097152 %6591
       %6593 = OpFMul %float %6557 %2594
       %6594 = OpExtInst %float %1 Sin %6592
       %6595 = OpFMul %float %6594 %6593
       %6596 = OpCompositeConstruct %v3float %550 %550 %6595
       %6597 = OpFAdd %v3float %6562 %6596
       %6598 = OpFSub %v3float %5695 %2561
       %6599 = OpExtInst %v3float %1 NMax %6598 %279
       %6600 = OpExtInst %v3float %1 NMin %6599 %127
       %6601 = OpCompositeExtract %float %6600 0
       %6602 = OpCompositeExtract %float %6600 1
       %6603 = OpCompositeConstruct %v2float %6601 %6602
       %6604 = OpFMul %v2float %1696 %6603
       %6605 = OpFMul %v2float %6603 %1697
       %6606 = OpCompositeExtract %float %6604 0
       %6607 = OpCompositeExtract %float %6605 0
       %6608 = OpCompositeExtract %float %6604 1
       %6609 = OpCompositeExtract %float %6605 1
       %6610 = OpFAdd %float %6606 %6608
       %6611 = OpFAdd %float %6607 %6609
       %6612 = OpFMul %float %6577 %4448
       %6613 = OpFDiv %float %float_2 %6612
       %6614 = OpFMul %float %6610 %6613
       %6615 = OpFMul %float %6613 %4528
       %6616 = OpFMul %float %6615 %5983
       %6617 = OpExtInst %float %1 Fma %6611 %6613 %6616
       %6618 = OpExtInst %float %1 Floor %6614
       %6619 = OpFNegate %float %6618
       %6620 = OpExtInst %float %1 Fma %6610 %6613 %6619
       %6621 = OpExtInst %float %1 Fma %6620 %float_2097152 %6617
       %6622 = OpExtInst %float %1 Floor %6621
       %6623 = OpFMul %float %6618 %float_n6_28318548
       %6624 = OpExtInst %float %1 Fma %6614 %float_6_28318548 %6623
       %6625 = OpFMul %float %6622 %float_n6_28318548
       %6626 = OpExtInst %float %1 Fma %6617 %float_6_28318548 %6625
       %6627 = OpExtInst %float %1 Fma %6624 %float_2097152 %6626
       %6628 = OpFMul %float %6593 %2594
       %6629 = OpExtInst %float %1 Sin %6627
       %6630 = OpFMul %float %6629 %6628
       %6631 = OpCompositeConstruct %v3float %550 %550 %6630
       %6632 = OpFAdd %v3float %6597 %6631
       %6633 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_3
       %6634 = OpLoad %float %6633
       %6635 = OpFSub %float %6634 %float_n1
       %6636 = OpExtInst %float %1 FAbs %6635
       %6637 = OpFOrdGreaterThan %bool %6636 %float_9_99999975en06
       %6638 = OpFOrdGreaterThanEqual %bool %6634 %float_n1
       %6639 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_0
       %6640 = OpLoad %float %6639
       %6641 = OpSelect %float %6638 %6634 %6640
       %6642 = OpSelect %float %6637 %6641 %6634
       %6643 = OpFSub %float %6642 %float_1
       %6644 = OpExtInst %float %1 FAbs %6643
       %6645 = OpFOrdGreaterThan %bool %6644 %float_9_99999975en06
       %6646 = OpFOrdGreaterThanEqual %bool %6642 %float_1
       %6647 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_1
       %6648 = OpLoad %float %6647
       %6649 = OpSelect %float %6646 %6648 %6634
       %6650 = OpSelect %float %6645 %6649 %6634
       %6651 = OpExtInst %float %1 FAbs %6650
       %6652 = OpFOrdGreaterThan %bool %6651 %float_9_99999975en06
       %6653 = OpFOrdGreaterThanEqual %bool %6650 %float_0
       %6654 = OpSelect %float %6653 %float_1 %float_n1
       %6655 = OpSelect %float %6652 %6654 %float_1
       %6656 = OpExtInst %float %1 NMax %6655 %float_n1
       %6657 = OpExtInst %float %1 NMin %6656 %float_1
       %6658 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_80 %int_2
       %6659 = OpLoad %float %6658
       %6660 = OpCompositeConstruct %v3float %6657 %6659 %float_0
       %6661 = OpFAdd %v3float %6660 %1688
       %6662 = OpExtInst %v3float %1 NMax %6661 %279
       %6663 = OpExtInst %v3float %1 NMin %6662 %127
       %6664 = OpCompositeExtract %float %6663 0
       %6665 = OpCompositeExtract %float %6663 1
       %6666 = OpCompositeConstruct %v2float %6664 %6665
       %6667 = OpFMul %v2float %1696 %6666
       %6668 = OpFMul %v2float %6666 %1697
       %6669 = OpCompositeExtract %float %6667 0
       %6670 = OpCompositeExtract %float %6668 0
       %6671 = OpCompositeExtract %float %6667 1
       %6672 = OpCompositeExtract %float %6668 1
       %6673 = OpFAdd %float %6669 %6671
       %6674 = OpFAdd %float %6670 %6672
       %6675 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_81 %int_3
       %6676 = OpLoad %float %6675
       %6677 = OpFMul %float %6676 %4591
       %6678 = OpFDiv %float %float_2 %6677
       %6679 = OpFMul %float %6673 %6678
       %6680 = OpFMul %float %6678 %4598
       %6681 = OpFMul %float %6680 %5983
       %6682 = OpExtInst %float %1 Fma %6674 %6678 %6681
       %6683 = OpExtInst %float %1 Floor %6679
       %6684 = OpFNegate %float %6683
       %6685 = OpExtInst %float %1 Fma %6673 %6678 %6684
       %6686 = OpExtInst %float %1 Fma %6685 %float_2097152 %6682
       %6687 = OpExtInst %float %1 Floor %6686
       %6688 = OpFMul %float %6683 %float_n6_28318548
       %6689 = OpExtInst %float %1 Fma %6679 %float_6_28318548 %6688
       %6690 = OpFMul %float %6687 %float_n6_28318548
       %6691 = OpExtInst %float %1 Fma %6682 %float_6_28318548 %6690
       %6692 = OpExtInst %float %1 Fma %6689 %float_2097152 %6691
       %6693 = OpFMul %float %6524 %2733
       %6694 = OpExtInst %float %1 Sin %6692
       %6695 = OpFMul %float %6694 %6693
       %6696 = OpFAdd %v3float %6660 %2561
       %6697 = OpExtInst %v3float %1 NMax %6696 %279
       %6698 = OpExtInst %v3float %1 NMin %6697 %127
       %6699 = OpCompositeExtract %float %6698 0
       %6700 = OpCompositeExtract %float %6698 1
       %6701 = OpCompositeConstruct %v2float %6699 %6700
       %6702 = OpFMul %v2float %1696 %6701
       %6703 = OpFMul %v2float %6701 %1697
       %6704 = OpCompositeExtract %float %6702 0
       %6705 = OpCompositeExtract %float %6703 0
       %6706 = OpCompositeExtract %float %6702 1
       %6707 = OpCompositeExtract %float %6703 1
       %6708 = OpFAdd %float %6704 %6706
       %6709 = OpFAdd %float %6705 %6707
       %6710 = OpFMul %float %6677 %4448
       %6711 = OpFDiv %float %float_2 %6710
       %6712 = OpFMul %float %6708 %6711
       %6713 = OpFMul %float %6711 %4633
       %6714 = OpFMul %float %6713 %5983
       %6715 = OpExtInst %float %1 Fma %6709 %6711 %6714
       %6716 = OpExtInst %float %1 Floor %6712
       %6717 = OpFNegate %float %6716
       %6718 = OpExtInst %float %1 Fma %6708 %6711 %6717
       %6719 = OpExtInst %float %1 Fma %6718 %float_2097152 %6715
       %6720 = OpExtInst %float %1 Floor %6719
       %6721 = OpFMul %float %6716 %float_n6_28318548
       %6722 = OpExtInst %float %1 Fma %6712 %float_6_28318548 %6721
       %6723 = OpFMul %float %6720 %float_n6_28318548
       %6724 = OpExtInst %float %1 Fma %6715 %float_6_28318548 %6723
       %6725 = OpExtInst %float %1 Fma %6722 %float_2097152 %6724
       %6726 = OpFMul %float %6693 %2594
       %6727 = OpExtInst %float %1 Sin %6725
       %6728 = OpFMul %float %6727 %6726
       %6729 = OpCompositeConstruct %v3float %550 %550 %6695
       %6730 = OpCompositeConstruct %v3float %550 %550 %6728
       %6731 = OpFAdd %v3float %6729 %6730
       %6732 = OpFSub %v3float %6660 %1688
       %6733 = OpExtInst %v3float %1 NMax %6732 %279
       %6734 = OpExtInst %v3float %1 NMin %6733 %127
       %6735 = OpCompositeExtract %float %6734 0
       %6736 = OpCompositeExtract %float %6734 1
       %6737 = OpCompositeConstruct %v2float %6735 %6736
       %6738 = OpFMul %v2float %1696 %6737
       %6739 = OpFMul %v2float %6737 %1697
       %6740 = OpCompositeExtract %float %6738 0
       %6741 = OpCompositeExtract %float %6739 0
       %6742 = OpCompositeExtract %float %6738 1
       %6743 = OpCompositeExtract %float %6739 1
       %6744 = OpFAdd %float %6740 %6742
       %6745 = OpFAdd %float %6741 %6743
       %6746 = OpFMul %float %6710 %4448
       %6747 = OpFDiv %float %float_2 %6746
       %6748 = OpFMul %float %6744 %6747
       %6749 = OpFMul %float %6747 %4671
       %6750 = OpFMul %float %6749 %5983
       %6751 = OpExtInst %float %1 Fma %6745 %6747 %6750
       %6752 = OpExtInst %float %1 Floor %6748
       %6753 = OpFNegate %float %6752
       %6754 = OpExtInst %float %1 Fma %6744 %6747 %6753
       %6755 = OpExtInst %float %1 Fma %6754 %float_2097152 %6751
       %6756 = OpExtInst %float %1 Floor %6755
       %6757 = OpFMul %float %6752 %float_n6_28318548
       %6758 = OpExtInst %float %1 Fma %6748 %float_6_28318548 %6757
       %6759 = OpFMul %float %6756 %float_n6_28318548
       %6760 = OpExtInst %float %1 Fma %6751 %float_6_28318548 %6759
       %6761 = OpExtInst %float %1 Fma %6758 %float_2097152 %6760
       %6762 = OpFMul %float %6726 %2594
       %6763 = OpExtInst %float %1 Sin %6761
       %6764 = OpFMul %float %6763 %6762
       %6765 = OpCompositeConstruct %v3float %550 %550 %6764
       %6766 = OpFAdd %v3float %6731 %6765
       %6767 = OpFSub %v3float %6660 %2561
       %6768 = OpExtInst %v3float %1 NMax %6767 %279
       %6769 = OpExtInst %v3float %1 NMin %6768 %127
       %6770 = OpCompositeExtract %float %6769 0
       %6771 = OpCompositeExtract %float %6769 1
       %6772 = OpCompositeConstruct %v2float %6770 %6771
       %6773 = OpFMul %v2float %1696 %6772
       %6774 = OpFMul %v2float %6772 %1697
       %6775 = OpCompositeExtract %float %6773 0
       %6776 = OpCompositeExtract %float %6774 0
       %6777 = OpCompositeExtract %float %6773 1
       %6778 = OpCompositeExtract %float %6774 1
       %6779 = OpFAdd %float %6775 %6777
       %6780 = OpFAdd %float %6776 %6778
       %6781 = OpFMul %float %6746 %4448
       %6782 = OpFDiv %float %float_2 %6781
       %6783 = OpFMul %float %6779 %6782
       %6784 = OpFMul %float %6782 %4708
       %6785 = OpFMul %float %6784 %5983
       %6786 = OpExtInst %float %1 Fma %6780 %6782 %6785
       %6787 = OpExtInst %float %1 Floor %6783
       %6788 = OpFNegate %float %6787
       %6789 = OpExtInst %float %1 Fma %6779 %6782 %6788
       %6790 = OpExtInst %float %1 Fma %6789 %float_2097152 %6786
       %6791 = OpExtInst %float %1 Floor %6790
       %6792 = OpFMul %float %6787 %float_n6_28318548
       %6793 = OpExtInst %float %1 Fma %6783 %float_6_28318548 %6792
       %6794 = OpFMul %float %6791 %float_n6_28318548
       %6795 = OpExtInst %float %1 Fma %6786 %float_6_28318548 %6794
       %6796 = OpExtInst %float %1 Fma %6793 %float_2097152 %6795
       %6797 = OpFMul %float %6762 %2594
       %6798 = OpExtInst %float %1 Sin %6796
       %6799 = OpFMul %float %6798 %6797
       %6800 = OpCompositeConstruct %v3float %550 %550 %6799
       %6801 = OpFAdd %v3float %6766 %6800
       %6802 = OpFAdd %v3float %6632 %6801
       %6803 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_82 %int_0
       %6804 = OpLoad %float %6803
       %6805 = OpFSub %float %6804 %float_n1
       %6806 = OpExtInst %float %1 FAbs %6805
       %6807 = OpFOrdGreaterThan %bool %6806 %float_9_99999975en06
       %6808 = OpFOrdGreaterThanEqual %bool %6804 %float_n1
       %6809 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_82 %int_1
       %6810 = OpLoad %float %6809
       %6811 = OpSelect %float %6808 %6804 %6810
       %6812 = OpSelect %float %6807 %6811 %6804
       %6813 = OpFSub %float %6812 %float_1
       %6814 = OpExtInst %float %1 FAbs %6813
       %6815 = OpFOrdGreaterThan %bool %6814 %float_9_99999975en06
       %6816 = OpFOrdGreaterThanEqual %bool %6812 %float_1
       %6817 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_82 %int_2
       %6818 = OpLoad %float %6817
       %6819 = OpSelect %float %6816 %6818 %6804
       %6820 = OpSelect %float %6815 %6819 %6804
       %6821 = OpExtInst %float %1 FAbs %6820
       %6822 = OpFOrdGreaterThan %bool %6821 %float_9_99999975en06
       %6823 = OpFOrdGreaterThanEqual %bool %6820 %float_0
       %6824 = OpSelect %float %6823 %float_1 %float_n1
       %6825 = OpSelect %float %6822 %6824 %float_1
       %6826 = OpExtInst %float %1 NMax %6825 %float_n1
       %6827 = OpExtInst %float %1 NMin %6826 %float_1
       %6828 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_83 %int_3
       %6829 = OpLoad %float %6828
       %6830 = OpCompositeConstruct %v3float %6827 %6829 %float_0
       %6831 = OpFAdd %v3float %6830 %1688
       %6832 = OpExtInst %v3float %1 NMax %6831 %279
       %6833 = OpExtInst %v3float %1 NMin %6832 %127
       %6834 = OpCompositeExtract %float %6833 0
       %6835 = OpCompositeExtract %float %6833 1
       %6836 = OpCompositeConstruct %v2float %6834 %6835
       %6837 = OpFMul %v2float %1696 %6836
       %6838 = OpFMul %v2float %6836 %1697
       %6839 = OpCompositeExtract %float %6837 0
       %6840 = OpCompositeExtract %float %6838 0
       %6841 = OpCompositeExtract %float %6837 1
       %6842 = OpCompositeExtract %float %6838 1
       %6843 = OpFAdd %float %6839 %6841
       %6844 = OpFAdd %float %6840 %6842
       %6845 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_85 %int_0
       %6846 = OpLoad %float %6845
       %6847 = OpFMul %float %6846 %4591
       %6848 = OpFDiv %float %float_2 %6847
       %6849 = OpFMul %float %6843 %6848
       %6850 = OpFMul %float %6848 %4598
       %6851 = OpFMul %float %6850 %5983
       %6852 = OpExtInst %float %1 Fma %6844 %6848 %6851
       %6853 = OpExtInst %float %1 Floor %6849
       %6854 = OpFNegate %float %6853
       %6855 = OpExtInst %float %1 Fma %6843 %6848 %6854
       %6856 = OpExtInst %float %1 Fma %6855 %float_2097152 %6852
       %6857 = OpExtInst %float %1 Floor %6856
       %6858 = OpFMul %float %6853 %float_n6_28318548
       %6859 = OpExtInst %float %1 Fma %6849 %float_6_28318548 %6858
       %6860 = OpFMul %float %6857 %float_n6_28318548
       %6861 = OpExtInst %float %1 Fma %6852 %float_6_28318548 %6860
       %6862 = OpExtInst %float %1 Fma %6859 %float_2097152 %6861
       %6863 = OpExtInst %float %1 Sin %6862
       %6864 = OpFMul %float %6863 %6693
       %6865 = OpFAdd %v3float %6830 %2561
       %6866 = OpExtInst %v3float %1 NMax %6865 %279
       %6867 = OpExtInst %v3float %1 NMin %6866 %127
       %6868 = OpCompositeExtract %float %6867 0
       %6869 = OpCompositeExtract %float %6867 1
       %6870 = OpCompositeConstruct %v2float %6868 %6869
       %6871 = OpFMul %v2float %1696 %6870
       %6872 = OpFMul %v2float %6870 %1697
       %6873 = OpCompositeExtract %float %6871 0
       %6874 = OpCompositeExtract %float %6872 0
       %6875 = OpCompositeExtract %float %6871 1
       %6876 = OpCompositeExtract %float %6872 1
       %6877 = OpFAdd %float %6873 %6875
       %6878 = OpFAdd %float %6874 %6876
       %6879 = OpFMul %float %6847 %4448
       %6880 = OpFDiv %float %float_2 %6879
       %6881 = OpFMul %float %6877 %6880
       %6882 = OpFMul %float %6880 %4633
       %6883 = OpFMul %float %6882 %5983
       %6884 = OpExtInst %float %1 Fma %6878 %6880 %6883
       %6885 = OpExtInst %float %1 Floor %6881
       %6886 = OpFNegate %float %6885
       %6887 = OpExtInst %float %1 Fma %6877 %6880 %6886
       %6888 = OpExtInst %float %1 Fma %6887 %float_2097152 %6884
       %6889 = OpExtInst %float %1 Floor %6888
       %6890 = OpFMul %float %6885 %float_n6_28318548
       %6891 = OpExtInst %float %1 Fma %6881 %float_6_28318548 %6890
       %6892 = OpFMul %float %6889 %float_n6_28318548
       %6893 = OpExtInst %float %1 Fma %6884 %float_6_28318548 %6892
       %6894 = OpExtInst %float %1 Fma %6891 %float_2097152 %6893
       %6895 = OpExtInst %float %1 Sin %6894
       %6896 = OpFMul %float %6895 %6726
       %6897 = OpCompositeConstruct %v3float %550 %550 %6864
       %6898 = OpCompositeConstruct %v3float %550 %550 %6896
       %6899 = OpFAdd %v3float %6897 %6898
       %6900 = OpFSub %v3float %6830 %1688
       %6901 = OpExtInst %v3float %1 NMax %6900 %279
       %6902 = OpExtInst %v3float %1 NMin %6901 %127
       %6903 = OpCompositeExtract %float %6902 0
       %6904 = OpCompositeExtract %float %6902 1
       %6905 = OpCompositeConstruct %v2float %6903 %6904
       %6906 = OpFMul %v2float %1696 %6905
       %6907 = OpFMul %v2float %6905 %1697
       %6908 = OpCompositeExtract %float %6906 0
       %6909 = OpCompositeExtract %float %6907 0
       %6910 = OpCompositeExtract %float %6906 1
       %6911 = OpCompositeExtract %float %6907 1
       %6912 = OpFAdd %float %6908 %6910
       %6913 = OpFAdd %float %6909 %6911
       %6914 = OpFMul %float %6879 %4448
       %6915 = OpFDiv %float %float_2 %6914
       %6916 = OpFMul %float %6912 %6915
       %6917 = OpFMul %float %6915 %4671
       %6918 = OpFMul %float %6917 %5983
       %6919 = OpExtInst %float %1 Fma %6913 %6915 %6918
       %6920 = OpExtInst %float %1 Floor %6916
       %6921 = OpFNegate %float %6920
       %6922 = OpExtInst %float %1 Fma %6912 %6915 %6921
       %6923 = OpExtInst %float %1 Fma %6922 %float_2097152 %6919
       %6924 = OpExtInst %float %1 Floor %6923
       %6925 = OpFMul %float %6920 %float_n6_28318548
       %6926 = OpExtInst %float %1 Fma %6916 %float_6_28318548 %6925
       %6927 = OpFMul %float %6924 %float_n6_28318548
       %6928 = OpExtInst %float %1 Fma %6919 %float_6_28318548 %6927
       %6929 = OpExtInst %float %1 Fma %6926 %float_2097152 %6928
       %6930 = OpExtInst %float %1 Sin %6929
       %6931 = OpFMul %float %6930 %6762
       %6932 = OpCompositeConstruct %v3float %550 %550 %6931
       %6933 = OpFAdd %v3float %6899 %6932
       %6934 = OpFSub %v3float %6830 %2561
       %6935 = OpExtInst %v3float %1 NMax %6934 %279
       %6936 = OpExtInst %v3float %1 NMin %6935 %127
       %6937 = OpCompositeExtract %float %6936 0
       %6938 = OpCompositeExtract %float %6936 1
       %6939 = OpCompositeConstruct %v2float %6937 %6938
       %6940 = OpFMul %v2float %1696 %6939
       %6941 = OpFMul %v2float %6939 %1697
       %6942 = OpCompositeExtract %float %6940 0
       %6943 = OpCompositeExtract %float %6941 0
       %6944 = OpCompositeExtract %float %6940 1
       %6945 = OpCompositeExtract %float %6941 1
       %6946 = OpFAdd %float %6942 %6944
       %6947 = OpFAdd %float %6943 %6945
       %6948 = OpFMul %float %6914 %4448
       %6949 = OpFDiv %float %float_2 %6948
       %6950 = OpFMul %float %6946 %6949
       %6951 = OpFMul %float %6949 %4708
       %6952 = OpFMul %float %6951 %5983
       %6953 = OpExtInst %float %1 Fma %6947 %6949 %6952
       %6954 = OpExtInst %float %1 Floor %6950
       %6955 = OpFNegate %float %6954
       %6956 = OpExtInst %float %1 Fma %6946 %6949 %6955
       %6957 = OpExtInst %float %1 Fma %6956 %float_2097152 %6953
       %6958 = OpExtInst %float %1 Floor %6957
       %6959 = OpFMul %float %6954 %float_n6_28318548
       %6960 = OpExtInst %float %1 Fma %6950 %float_6_28318548 %6959
       %6961 = OpFMul %float %6958 %float_n6_28318548
       %6962 = OpExtInst %float %1 Fma %6953 %float_6_28318548 %6961
       %6963 = OpExtInst %float %1 Fma %6960 %float_2097152 %6962
       %6964 = OpExtInst %float %1 Sin %6963
       %6965 = OpFMul %float %6964 %6797
       %6966 = OpCompositeConstruct %v3float %550 %550 %6965
       %6967 = OpFAdd %v3float %6933 %6966
       %6968 = OpFAdd %v3float %6802 %6967
       %6969 = OpFMul %float %3566 %float_8
       %6970 = OpFMul %float %5711 %6969
       %6971 = OpFDiv %float %float_2 %6970
       %6972 = OpFMul %float %5708 %6971
       %6973 = OpFMul %float %6971 %4899
       %6974 = OpFMul %float %6973 %5983
       %6975 = OpExtInst %float %1 Fma %5709 %6971 %6974
       %6976 = OpExtInst %float %1 Floor %6972
       %6977 = OpFNegate %float %6976
       %6978 = OpExtInst %float %1 Fma %5708 %6971 %6977
       %6979 = OpExtInst %float %1 Fma %6978 %float_2097152 %6975
       %6980 = OpExtInst %float %1 Floor %6979
       %6981 = OpFMul %float %6976 %float_n6_28318548
       %6982 = OpExtInst %float %1 Fma %6972 %float_6_28318548 %6981
       %6983 = OpFMul %float %6980 %float_n6_28318548
       %6984 = OpExtInst %float %1 Fma %6975 %float_6_28318548 %6983
       %6985 = OpExtInst %float %1 Fma %6982 %float_2097152 %6984
       %6986 = OpFMul %float %6524 %float_8
       %6987 = OpExtInst %float %1 Sin %6985
       %6988 = OpFMul %float %6987 %6986
       %6989 = OpFMul %float %6970 %4448
       %6990 = OpFDiv %float %float_2 %6989
       %6991 = OpFMul %float %6539 %6990
       %6992 = OpFMul %float %6990 %4920
       %6993 = OpFMul %float %6992 %5983
       %6994 = OpExtInst %float %1 Fma %6540 %6990 %6993
       %6995 = OpExtInst %float %1 Floor %6991
       %6996 = OpFNegate %float %6995
       %6997 = OpExtInst %float %1 Fma %6539 %6990 %6996
       %6998 = OpExtInst %float %1 Fma %6997 %float_2097152 %6994
       %6999 = OpExtInst %float %1 Floor %6998
       %7000 = OpFMul %float %6995 %float_n6_28318548
       %7001 = OpExtInst %float %1 Fma %6991 %float_6_28318548 %7000
       %7002 = OpFMul %float %6999 %float_n6_28318548
       %7003 = OpExtInst %float %1 Fma %6994 %float_6_28318548 %7002
       %7004 = OpExtInst %float %1 Fma %7001 %float_2097152 %7003
       %7005 = OpFMul %float %6986 %2594
       %7006 = OpExtInst %float %1 Sin %7004
       %7007 = OpFMul %float %7006 %7005
       %7008 = OpCompositeConstruct %v3float %550 %550 %6988
       %7009 = OpCompositeConstruct %v3float %550 %550 %7007
       %7010 = OpFAdd %v3float %7008 %7009
       %7011 = OpFMul %float %6989 %4448
       %7012 = OpFDiv %float %float_2 %7011
       %7013 = OpFMul %float %6575 %7012
       %7014 = OpFMul %float %7012 %4944
       %7015 = OpFMul %float %7014 %5983
       %7016 = OpExtInst %float %1 Fma %6576 %7012 %7015
       %7017 = OpExtInst %float %1 Floor %7013
       %7018 = OpFNegate %float %7017
       %7019 = OpExtInst %float %1 Fma %6575 %7012 %7018
       %7020 = OpExtInst %float %1 Fma %7019 %float_2097152 %7016
       %7021 = OpExtInst %float %1 Floor %7020
       %7022 = OpFMul %float %7017 %float_n6_28318548
       %7023 = OpExtInst %float %1 Fma %7013 %float_6_28318548 %7022
       %7024 = OpFMul %float %7021 %float_n6_28318548
       %7025 = OpExtInst %float %1 Fma %7016 %float_6_28318548 %7024
       %7026 = OpExtInst %float %1 Fma %7023 %float_2097152 %7025
       %7027 = OpFMul %float %7005 %2594
       %7028 = OpExtInst %float %1 Sin %7026
       %7029 = OpFMul %float %7028 %7027
       %7030 = OpCompositeConstruct %v3float %550 %550 %7029
       %7031 = OpFAdd %v3float %7010 %7030
       %7032 = OpFMul %float %7011 %4448
       %7033 = OpFDiv %float %float_2 %7032
       %7034 = OpFMul %float %6610 %7033
       %7035 = OpFMul %float %7033 %4967
       %7036 = OpFMul %float %7035 %5983
       %7037 = OpExtInst %float %1 Fma %6611 %7033 %7036
       %7038 = OpExtInst %float %1 Floor %7034
       %7039 = OpFNegate %float %7038
       %7040 = OpExtInst %float %1 Fma %6610 %7033 %7039
       %7041 = OpExtInst %float %1 Fma %7040 %float_2097152 %7037
       %7042 = OpExtInst %float %1 Floor %7041
       %7043 = OpFMul %float %7038 %float_n6_28318548
       %7044 = OpExtInst %float %1 Fma %7034 %float_6_28318548 %7043
       %7045 = OpFMul %float %7042 %float_n6_28318548
       %7046 = OpExtInst %float %1 Fma %7037 %float_6_28318548 %7045
       %7047 = OpExtInst %float %1 Fma %7044 %float_2097152 %7046
       %7048 = OpFMul %float %7027 %2594
       %7049 = OpExtInst %float %1 Sin %7047
       %7050 = OpFMul %float %7049 %7048
       %7051 = OpCompositeConstruct %v3float %550 %550 %7050
       %7052 = OpFAdd %v3float %7031 %7051
       %7053 = OpFMul %float %6969 %4590
       %7054 = OpFMul %float %6676 %7053
       %7055 = OpFDiv %float %float_2 %7054
       %7056 = OpFMul %float %6673 %7055
       %7057 = OpFMul %float %7055 %4991
       %7058 = OpFMul %float %7057 %5983
       %7059 = OpExtInst %float %1 Fma %6674 %7055 %7058
       %7060 = OpExtInst %float %1 Floor %7056
       %7061 = OpFNegate %float %7060
       %7062 = OpExtInst %float %1 Fma %6673 %7055 %7061
       %7063 = OpExtInst %float %1 Fma %7062 %float_2097152 %7059
       %7064 = OpExtInst %float %1 Floor %7063
       %7065 = OpFMul %float %7060 %float_n6_28318548
       %7066 = OpExtInst %float %1 Fma %7056 %float_6_28318548 %7065
       %7067 = OpFMul %float %7064 %float_n6_28318548
       %7068 = OpExtInst %float %1 Fma %7059 %float_6_28318548 %7067
       %7069 = OpExtInst %float %1 Fma %7066 %float_2097152 %7068
       %7070 = OpFMul %float %6986 %2733
       %7071 = OpExtInst %float %1 Sin %7069
       %7072 = OpFMul %float %7071 %7070
       %7073 = OpFMul %float %7054 %4448
       %7074 = OpFDiv %float %float_2 %7073
       %7075 = OpFMul %float %6708 %7074
       %7076 = OpFMul %float %7074 %5012
       %7077 = OpFMul %float %7076 %5983
       %7078 = OpExtInst %float %1 Fma %6709 %7074 %7077
       %7079 = OpExtInst %float %1 Floor %7075
       %7080 = OpFNegate %float %7079
       %7081 = OpExtInst %float %1 Fma %6708 %7074 %7080
       %7082 = OpExtInst %float %1 Fma %7081 %float_2097152 %7078
       %7083 = OpExtInst %float %1 Floor %7082
       %7084 = OpFMul %float %7079 %float_n6_28318548
       %7085 = OpExtInst %float %1 Fma %7075 %float_6_28318548 %7084
       %7086 = OpFMul %float %7083 %float_n6_28318548
       %7087 = OpExtInst %float %1 Fma %7078 %float_6_28318548 %7086
       %7088 = OpExtInst %float %1 Fma %7085 %float_2097152 %7087
       %7089 = OpFMul %float %7070 %2594
       %7090 = OpExtInst %float %1 Sin %7088
       %7091 = OpFMul %float %7090 %7089
       %7092 = OpCompositeConstruct %v3float %550 %550 %7072
       %7093 = OpCompositeConstruct %v3float %550 %550 %7091
       %7094 = OpFAdd %v3float %7092 %7093
       %7095 = OpFMul %float %7073 %4448
       %7096 = OpFDiv %float %float_2 %7095
       %7097 = OpFMul %float %6744 %7096
       %7098 = OpFMul %float %7096 %5036
       %7099 = OpFMul %float %7098 %5983
       %7100 = OpExtInst %float %1 Fma %6745 %7096 %7099
       %7101 = OpExtInst %float %1 Floor %7097
       %7102 = OpFNegate %float %7101
       %7103 = OpExtInst %float %1 Fma %6744 %7096 %7102
       %7104 = OpExtInst %float %1 Fma %7103 %float_2097152 %7100
       %7105 = OpExtInst %float %1 Floor %7104
       %7106 = OpFMul %float %7101 %float_n6_28318548
       %7107 = OpExtInst %float %1 Fma %7097 %float_6_28318548 %7106
       %7108 = OpFMul %float %7105 %float_n6_28318548
       %7109 = OpExtInst %float %1 Fma %7100 %float_6_28318548 %7108
       %7110 = OpExtInst %float %1 Fma %7107 %float_2097152 %7109
       %7111 = OpFMul %float %7089 %2594
       %7112 = OpExtInst %float %1 Sin %7110
       %7113 = OpFMul %float %7112 %7111
       %7114 = OpCompositeConstruct %v3float %550 %550 %7113
       %7115 = OpFAdd %v3float %7094 %7114
       %7116 = OpFMul %float %7095 %4448
       %7117 = OpFDiv %float %float_2 %7116
       %7118 = OpFMul %float %6779 %7117
       %7119 = OpFMul %float %7117 %5059
       %7120 = OpFMul %float %7119 %5983
       %7121 = OpExtInst %float %1 Fma %6780 %7117 %7120
       %7122 = OpExtInst %float %1 Floor %7118
       %7123 = OpFNegate %float %7122
       %7124 = OpExtInst %float %1 Fma %6779 %7117 %7123
       %7125 = OpExtInst %float %1 Fma %7124 %float_2097152 %7121
       %7126 = OpExtInst %float %1 Floor %7125
       %7127 = OpFMul %float %7122 %float_n6_28318548
       %7128 = OpExtInst %float %1 Fma %7118 %float_6_28318548 %7127
       %7129 = OpFMul %float %7126 %float_n6_28318548
       %7130 = OpExtInst %float %1 Fma %7121 %float_6_28318548 %7129
       %7131 = OpExtInst %float %1 Fma %7128 %float_2097152 %7130
       %7132 = OpFMul %float %7111 %2594
       %7133 = OpExtInst %float %1 Sin %7131
       %7134 = OpFMul %float %7133 %7132
       %7135 = OpCompositeConstruct %v3float %550 %550 %7134
       %7136 = OpFAdd %v3float %7115 %7135
       %7137 = OpFAdd %v3float %7052 %7136
       %7138 = OpFMul %float %6846 %7053
       %7139 = OpFDiv %float %float_2 %7138
       %7140 = OpFMul %float %6843 %7139
       %7141 = OpFMul %float %7139 %4991
       %7142 = OpFMul %float %7141 %5983
       %7143 = OpExtInst %float %1 Fma %6844 %7139 %7142
       %7144 = OpExtInst %float %1 Floor %7140
       %7145 = OpFNegate %float %7144
       %7146 = OpExtInst %float %1 Fma %6843 %7139 %7145
       %7147 = OpExtInst %float %1 Fma %7146 %float_2097152 %7143
       %7148 = OpExtInst %float %1 Floor %7147
       %7149 = OpFMul %float %7144 %float_n6_28318548
       %7150 = OpExtInst %float %1 Fma %7140 %float_6_28318548 %7149
       %7151 = OpFMul %float %7148 %float_n6_28318548
       %7152 = OpExtInst %float %1 Fma %7143 %float_6_28318548 %7151
       %7153 = OpExtInst %float %1 Fma %7150 %float_2097152 %7152
       %7154 = OpExtInst %float %1 Sin %7153
       %7155 = OpFMul %float %7154 %7070
       %7156 = OpFMul %float %7138 %4448
       %7157 = OpFDiv %float %float_2 %7156
       %7158 = OpFMul %float %6877 %7157
       %7159 = OpFMul %float %7157 %5012
       %7160 = OpFMul %float %7159 %5983
       %7161 = OpExtInst %float %1 Fma %6878 %7157 %7160
       %7162 = OpExtInst %float %1 Floor %7158
       %7163 = OpFNegate %float %7162
       %7164 = OpExtInst %float %1 Fma %6877 %7157 %7163
       %7165 = OpExtInst %float %1 Fma %7164 %float_2097152 %7161
       %7166 = OpExtInst %float %1 Floor %7165
       %7167 = OpFMul %float %7162 %float_n6_28318548
       %7168 = OpExtInst %float %1 Fma %7158 %float_6_28318548 %7167
       %7169 = OpFMul %float %7166 %float_n6_28318548
       %7170 = OpExtInst %float %1 Fma %7161 %float_6_28318548 %7169
       %7171 = OpExtInst %float %1 Fma %7168 %float_2097152 %7170
       %7172 = OpExtInst %float %1 Sin %7171
       %7173 = OpFMul %float %7172 %7089
       %7174 = OpCompositeConstruct %v3float %550 %550 %7155
       %7175 = OpCompositeConstruct %v3float %550 %550 %7173
       %7176 = OpFAdd %v3float %7174 %7175
       %7177 = OpFMul %float %7156 %4448
       %7178 = OpFDiv %float %float_2 %7177
       %7179 = OpFMul %float %6912 %7178
       %7180 = OpFMul %float %7178 %5036
       %7181 = OpFMul %float %7180 %5983
       %7182 = OpExtInst %float %1 Fma %6913 %7178 %7181
       %7183 = OpExtInst %float %1 Floor %7179
       %7184 = OpFNegate %float %7183
       %7185 = OpExtInst %float %1 Fma %6912 %7178 %7184
       %7186 = OpExtInst %float %1 Fma %7185 %float_2097152 %7182
       %7187 = OpExtInst %float %1 Floor %7186
       %7188 = OpFMul %float %7183 %float_n6_28318548
       %7189 = OpExtInst %float %1 Fma %7179 %float_6_28318548 %7188
       %7190 = OpFMul %float %7187 %float_n6_28318548
       %7191 = OpExtInst %float %1 Fma %7182 %float_6_28318548 %7190
       %7192 = OpExtInst %float %1 Fma %7189 %float_2097152 %7191
       %7193 = OpExtInst %float %1 Sin %7192
       %7194 = OpFMul %float %7193 %7111
       %7195 = OpCompositeConstruct %v3float %550 %550 %7194
       %7196 = OpFAdd %v3float %7176 %7195
       %7197 = OpFMul %float %7177 %4448
       %7198 = OpFDiv %float %float_2 %7197
       %7199 = OpFMul %float %6946 %7198
       %7200 = OpFMul %float %7198 %5059
       %7201 = OpFMul %float %7200 %5983
       %7202 = OpExtInst %float %1 Fma %6947 %7198 %7201
       %7203 = OpExtInst %float %1 Floor %7199
       %7204 = OpFNegate %float %7203
       %7205 = OpExtInst %float %1 Fma %6946 %7198 %7204
       %7206 = OpExtInst %float %1 Fma %7205 %float_2097152 %7202
       %7207 = OpExtInst %float %1 Floor %7206
       %7208 = OpFMul %float %7203 %float_n6_28318548
       %7209 = OpExtInst %float %1 Fma %7199 %float_6_28318548 %7208
       %7210 = OpFMul %float %7207 %float_n6_28318548
       %7211 = OpExtInst %float %1 Fma %7202 %float_6_28318548 %7210
       %7212 = OpExtInst %float %1 Fma %7209 %float_2097152 %7211
       %7213 = OpExtInst %float %1 Sin %7212
       %7214 = OpFMul %float %7213 %7132
       %7215 = OpCompositeConstruct %v3float %550 %550 %7214
       %7216 = OpFAdd %v3float %7196 %7215
       %7217 = OpFAdd %v3float %7137 %7216
       %7218 = OpFMul %float %5711 %5159
       %7219 = OpFDiv %float %float_2 %7218
       %7220 = OpFMul %float %5708 %7219
       %7221 = OpFMul %float %7219 %5164
       %7222 = OpFMul %float %7221 %5983
       %7223 = OpExtInst %float %1 Fma %5709 %7219 %7222
       %7224 = OpExtInst %float %1 Floor %7220
       %7225 = OpFNegate %float %7224
       %7226 = OpExtInst %float %1 Fma %5708 %7219 %7225
       %7227 = OpExtInst %float %1 Fma %7226 %float_2097152 %7223
       %7228 = OpExtInst %float %1 Floor %7227
       %7229 = OpFMul %float %7224 %float_n6_28318548
       %7230 = OpExtInst %float %1 Fma %7220 %float_6_28318548 %7229
       %7231 = OpFMul %float %7228 %float_n6_28318548
       %7232 = OpExtInst %float %1 Fma %7223 %float_6_28318548 %7231
       %7233 = OpExtInst %float %1 Fma %7230 %float_2097152 %7232
       %7234 = OpFMul %float %6524 %float_4
       %7235 = OpExtInst %float %1 Sin %7233
       %7236 = OpFMul %float %7235 %7234
       %7237 = OpFMul %float %7218 %4448
       %7238 = OpFDiv %float %float_2 %7237
       %7239 = OpFMul %float %6539 %7238
       %7240 = OpFMul %float %7238 %5184
       %7241 = OpFMul %float %7240 %5983
       %7242 = OpExtInst %float %1 Fma %6540 %7238 %7241
       %7243 = OpExtInst %float %1 Floor %7239
       %7244 = OpFNegate %float %7243
       %7245 = OpExtInst %float %1 Fma %6539 %7238 %7244
       %7246 = OpExtInst %float %1 Fma %7245 %float_2097152 %7242
       %7247 = OpExtInst %float %1 Floor %7246
       %7248 = OpFMul %float %7243 %float_n6_28318548
       %7249 = OpExtInst %float %1 Fma %7239 %float_6_28318548 %7248
       %7250 = OpFMul %float %7247 %float_n6_28318548
       %7251 = OpExtInst %float %1 Fma %7242 %float_6_28318548 %7250
       %7252 = OpExtInst %float %1 Fma %7249 %float_2097152 %7251
       %7253 = OpFMul %float %7234 %2594
       %7254 = OpExtInst %float %1 Sin %7252
       %7255 = OpFMul %float %7254 %7253
       %7256 = OpCompositeConstruct %v3float %550 %550 %7236
       %7257 = OpCompositeConstruct %v3float %550 %550 %7255
       %7258 = OpFAdd %v3float %7256 %7257
       %7259 = OpFMul %float %7237 %4448
       %7260 = OpFDiv %float %float_2 %7259
       %7261 = OpFMul %float %6575 %7260
       %7262 = OpFMul %float %7260 %5207
       %7263 = OpFMul %float %7262 %5983
       %7264 = OpExtInst %float %1 Fma %6576 %7260 %7263
       %7265 = OpExtInst %float %1 Floor %7261
       %7266 = OpFNegate %float %7265
       %7267 = OpExtInst %float %1 Fma %6575 %7260 %7266
       %7268 = OpExtInst %float %1 Fma %7267 %float_2097152 %7264
       %7269 = OpExtInst %float %1 Floor %7268
       %7270 = OpFMul %float %7265 %float_n6_28318548
       %7271 = OpExtInst %float %1 Fma %7261 %float_6_28318548 %7270
       %7272 = OpFMul %float %7269 %float_n6_28318548
       %7273 = OpExtInst %float %1 Fma %7264 %float_6_28318548 %7272
       %7274 = OpExtInst %float %1 Fma %7271 %float_2097152 %7273
       %7275 = OpFMul %float %7253 %2594
       %7276 = OpExtInst %float %1 Sin %7274
       %7277 = OpFMul %float %7276 %7275
       %7278 = OpCompositeConstruct %v3float %550 %550 %7277
       %7279 = OpFAdd %v3float %7258 %7278
       %7280 = OpFMul %float %7259 %4448
       %7281 = OpFDiv %float %float_2 %7280
       %7282 = OpFMul %float %6610 %7281
       %7283 = OpFMul %float %7281 %5229
       %7284 = OpFMul %float %7283 %5983
       %7285 = OpExtInst %float %1 Fma %6611 %7281 %7284
       %7286 = OpExtInst %float %1 Floor %7282
       %7287 = OpFNegate %float %7286
       %7288 = OpExtInst %float %1 Fma %6610 %7281 %7287
       %7289 = OpExtInst %float %1 Fma %7288 %float_2097152 %7285
       %7290 = OpExtInst %float %1 Floor %7289
       %7291 = OpFMul %float %7286 %float_n6_28318548
       %7292 = OpExtInst %float %1 Fma %7282 %float_6_28318548 %7291
       %7293 = OpFMul %float %7290 %float_n6_28318548
       %7294 = OpExtInst %float %1 Fma %7285 %float_6_28318548 %7293
       %7295 = OpExtInst %float %1 Fma %7292 %float_2097152 %7294
       %7296 = OpFMul %float %7275 %2594
       %7297 = OpExtInst %float %1 Sin %7295
       %7298 = OpFMul %float %7297 %7296
       %7299 = OpCompositeConstruct %v3float %550 %550 %7298
       %7300 = OpFAdd %v3float %7279 %7299
       %7301 = OpFMul %float %6676 %5247
       %7302 = OpFDiv %float %float_2 %7301
       %7303 = OpFMul %float %6673 %7302
       %7304 = OpFMul %float %7302 %5252
       %7305 = OpFMul %float %7304 %5983
       %7306 = OpExtInst %float %1 Fma %6674 %7302 %7305
       %7307 = OpExtInst %float %1 Floor %7303
       %7308 = OpFNegate %float %7307
       %7309 = OpExtInst %float %1 Fma %6673 %7302 %7308
       %7310 = OpExtInst %float %1 Fma %7309 %float_2097152 %7306
       %7311 = OpExtInst %float %1 Floor %7310
       %7312 = OpFMul %float %7307 %float_n6_28318548
       %7313 = OpExtInst %float %1 Fma %7303 %float_6_28318548 %7312
       %7314 = OpFMul %float %7311 %float_n6_28318548
       %7315 = OpExtInst %float %1 Fma %7306 %float_6_28318548 %7314
       %7316 = OpExtInst %float %1 Fma %7313 %float_2097152 %7315
       %7317 = OpFMul %float %7234 %2733
       %7318 = OpExtInst %float %1 Sin %7316
       %7319 = OpFMul %float %7318 %7317
       %7320 = OpFMul %float %7301 %4448
       %7321 = OpFDiv %float %float_2 %7320
       %7322 = OpFMul %float %6708 %7321
       %7323 = OpFMul %float %7321 %5272
       %7324 = OpFMul %float %7323 %5983
       %7325 = OpExtInst %float %1 Fma %6709 %7321 %7324
       %7326 = OpExtInst %float %1 Floor %7322
       %7327 = OpFNegate %float %7326
       %7328 = OpExtInst %float %1 Fma %6708 %7321 %7327
       %7329 = OpExtInst %float %1 Fma %7328 %float_2097152 %7325
       %7330 = OpExtInst %float %1 Floor %7329
       %7331 = OpFMul %float %7326 %float_n6_28318548
       %7332 = OpExtInst %float %1 Fma %7322 %float_6_28318548 %7331
       %7333 = OpFMul %float %7330 %float_n6_28318548
       %7334 = OpExtInst %float %1 Fma %7325 %float_6_28318548 %7333
       %7335 = OpExtInst %float %1 Fma %7332 %float_2097152 %7334
       %7336 = OpFMul %float %7317 %2594
       %7337 = OpExtInst %float %1 Sin %7335
       %7338 = OpFMul %float %7337 %7336
       %7339 = OpCompositeConstruct %v3float %550 %550 %7319
       %7340 = OpCompositeConstruct %v3float %550 %550 %7338
       %7341 = OpFAdd %v3float %7339 %7340
       %7342 = OpFMul %float %7320 %4448
       %7343 = OpFDiv %float %float_2 %7342
       %7344 = OpFMul %float %6744 %7343
       %7345 = OpFMul %float %7343 %5295
       %7346 = OpFMul %float %7345 %5983
       %7347 = OpExtInst %float %1 Fma %6745 %7343 %7346
       %7348 = OpExtInst %float %1 Floor %7344
       %7349 = OpFNegate %float %7348
       %7350 = OpExtInst %float %1 Fma %6744 %7343 %7349
       %7351 = OpExtInst %float %1 Fma %7350 %float_2097152 %7347
       %7352 = OpExtInst %float %1 Floor %7351
       %7353 = OpFMul %float %7348 %float_n6_28318548
       %7354 = OpExtInst %float %1 Fma %7344 %float_6_28318548 %7353
       %7355 = OpFMul %float %7352 %float_n6_28318548
       %7356 = OpExtInst %float %1 Fma %7347 %float_6_28318548 %7355
       %7357 = OpExtInst %float %1 Fma %7354 %float_2097152 %7356
       %7358 = OpFMul %float %7336 %2594
       %7359 = OpExtInst %float %1 Sin %7357
       %7360 = OpFMul %float %7359 %7358
       %7361 = OpCompositeConstruct %v3float %550 %550 %7360
       %7362 = OpFAdd %v3float %7341 %7361
       %7363 = OpFMul %float %7342 %4448
       %7364 = OpFDiv %float %float_2 %7363
       %7365 = OpFMul %float %6779 %7364
       %7366 = OpFMul %float %7364 %5317
       %7367 = OpFMul %float %7366 %5983
       %7368 = OpExtInst %float %1 Fma %6780 %7364 %7367
       %7369 = OpExtInst %float %1 Floor %7365
       %7370 = OpFNegate %float %7369
       %7371 = OpExtInst %float %1 Fma %6779 %7364 %7370
       %7372 = OpExtInst %float %1 Fma %7371 %float_2097152 %7368
       %7373 = OpExtInst %float %1 Floor %7372
       %7374 = OpFMul %float %7369 %float_n6_28318548
       %7375 = OpExtInst %float %1 Fma %7365 %float_6_28318548 %7374
       %7376 = OpFMul %float %7373 %float_n6_28318548
       %7377 = OpExtInst %float %1 Fma %7368 %float_6_28318548 %7376
       %7378 = OpExtInst %float %1 Fma %7375 %float_2097152 %7377
       %7379 = OpFMul %float %7358 %2594
       %7380 = OpExtInst %float %1 Sin %7378
       %7381 = OpFMul %float %7380 %7379
       %7382 = OpCompositeConstruct %v3float %550 %550 %7381
       %7383 = OpFAdd %v3float %7362 %7382
       %7384 = OpFAdd %v3float %7300 %7383
       %7385 = OpFMul %float %6846 %5247
       %7386 = OpFDiv %float %float_2 %7385
       %7387 = OpFMul %float %6843 %7386
       %7388 = OpFMul %float %7386 %5252
       %7389 = OpFMul %float %7388 %5983
       %7390 = OpExtInst %float %1 Fma %6844 %7386 %7389
       %7391 = OpExtInst %float %1 Floor %7387
       %7392 = OpFNegate %float %7391
       %7393 = OpExtInst %float %1 Fma %6843 %7386 %7392
       %7394 = OpExtInst %float %1 Fma %7393 %float_2097152 %7390
       %7395 = OpExtInst %float %1 Floor %7394
       %7396 = OpFMul %float %7391 %float_n6_28318548
       %7397 = OpExtInst %float %1 Fma %7387 %float_6_28318548 %7396
       %7398 = OpFMul %float %7395 %float_n6_28318548
       %7399 = OpExtInst %float %1 Fma %7390 %float_6_28318548 %7398
       %7400 = OpExtInst %float %1 Fma %7397 %float_2097152 %7399
       %7401 = OpExtInst %float %1 Sin %7400
       %7402 = OpFMul %float %7401 %7317
       %7403 = OpFMul %float %7385 %4448
       %7404 = OpFDiv %float %float_2 %7403
       %7405 = OpFMul %float %6877 %7404
       %7406 = OpFMul %float %7404 %5272
       %7407 = OpFMul %float %7406 %5983
       %7408 = OpExtInst %float %1 Fma %6878 %7404 %7407
       %7409 = OpExtInst %float %1 Floor %7405
       %7410 = OpFNegate %float %7409
       %7411 = OpExtInst %float %1 Fma %6877 %7404 %7410
       %7412 = OpExtInst %float %1 Fma %7411 %float_2097152 %7408
       %7413 = OpExtInst %float %1 Floor %7412
       %7414 = OpFMul %float %7409 %float_n6_28318548
       %7415 = OpExtInst %float %1 Fma %7405 %float_6_28318548 %7414
       %7416 = OpFMul %float %7413 %float_n6_28318548
       %7417 = OpExtInst %float %1 Fma %7408 %float_6_28318548 %7416
       %7418 = OpExtInst %float %1 Fma %7415 %float_2097152 %7417
       %7419 = OpExtInst %float %1 Sin %7418
       %7420 = OpFMul %float %7419 %7336
       %7421 = OpCompositeConstruct %v3float %550 %550 %7402
       %7422 = OpCompositeConstruct %v3float %550 %550 %7420
       %7423 = OpFAdd %v3float %7421 %7422
       %7424 = OpFMul %float %7403 %4448
       %7425 = OpFDiv %float %float_2 %7424
       %7426 = OpFMul %float %6912 %7425
       %7427 = OpFMul %float %7425 %5295
       %7428 = OpFMul %float %7427 %5983
       %7429 = OpExtInst %float %1 Fma %6913 %7425 %7428
       %7430 = OpExtInst %float %1 Floor %7426
       %7431 = OpFNegate %float %7430
       %7432 = OpExtInst %float %1 Fma %6912 %7425 %7431
       %7433 = OpExtInst %float %1 Fma %7432 %float_2097152 %7429
       %7434 = OpExtInst %float %1 Floor %7433
       %7435 = OpFMul %float %7430 %float_n6_28318548
       %7436 = OpExtInst %float %1 Fma %7426 %float_6_28318548 %7435
       %7437 = OpFMul %float %7434 %float_n6_28318548
       %7438 = OpExtInst %float %1 Fma %7429 %float_6_28318548 %7437
       %7439 = OpExtInst %float %1 Fma %7436 %float_2097152 %7438
       %7440 = OpExtInst %float %1 Sin %7439
       %7441 = OpFMul %float %7440 %7358
       %7442 = OpCompositeConstruct %v3float %550 %550 %7441
       %7443 = OpFAdd %v3float %7423 %7442
       %7444 = OpFMul %float %7424 %4448
       %7445 = OpFDiv %float %float_2 %7444
       %7446 = OpFMul %float %6946 %7445
       %7447 = OpFMul %float %7445 %5317
       %7448 = OpFMul %float %7447 %5983
       %7449 = OpExtInst %float %1 Fma %6947 %7445 %7448
       %7450 = OpExtInst %float %1 Floor %7446
       %7451 = OpFNegate %float %7450
       %7452 = OpExtInst %float %1 Fma %6946 %7445 %7451
       %7453 = OpExtInst %float %1 Fma %7452 %float_2097152 %7449
       %7454 = OpExtInst %float %1 Floor %7453
       %7455 = OpFMul %float %7450 %float_n6_28318548
       %7456 = OpExtInst %float %1 Fma %7446 %float_6_28318548 %7455
       %7457 = OpFMul %float %7454 %float_n6_28318548
       %7458 = OpExtInst %float %1 Fma %7449 %float_6_28318548 %7457
       %7459 = OpExtInst %float %1 Fma %7456 %float_2097152 %7458
       %7460 = OpExtInst %float %1 Sin %7459
       %7461 = OpFMul %float %7460 %7379
       %7462 = OpCompositeConstruct %v3float %550 %550 %7461
       %7463 = OpFAdd %v3float %7443 %7462
       %7464 = OpFAdd %v3float %7384 %7463
       %7465 = OpFMul %float %5711 %5416
       %7466 = OpFDiv %float %float_2 %7465
       %7467 = OpFMul %float %5708 %7466
       %7468 = OpFMul %float %7466 %4899
       %7469 = OpFMul %float %7468 %5983
       %7470 = OpExtInst %float %1 Fma %5709 %7466 %7469
       %7471 = OpExtInst %float %1 Floor %7467
       %7472 = OpFNegate %float %7471
       %7473 = OpExtInst %float %1 Fma %5708 %7466 %7472
       %7474 = OpExtInst %float %1 Fma %7473 %float_2097152 %7470
       %7475 = OpExtInst %float %1 Floor %7474
       %7476 = OpFMul %float %7471 %float_n6_28318548
       %7477 = OpExtInst %float %1 Fma %7467 %float_6_28318548 %7476
       %7478 = OpFMul %float %7475 %float_n6_28318548
       %7479 = OpExtInst %float %1 Fma %7470 %float_6_28318548 %7478
       %7480 = OpExtInst %float %1 Fma %7477 %float_2097152 %7479
       %7481 = OpFMul %float %6524 %float_0_5
       %7482 = OpExtInst %float %1 Sin %7480
       %7483 = OpFMul %float %7482 %7481
       %7484 = OpFMul %float %7465 %4448
       %7485 = OpFDiv %float %float_2 %7484
       %7486 = OpFMul %float %6539 %7485
       %7487 = OpFMul %float %7485 %4920
       %7488 = OpFMul %float %7487 %5983
       %7489 = OpExtInst %float %1 Fma %6540 %7485 %7488
       %7490 = OpExtInst %float %1 Floor %7486
       %7491 = OpFNegate %float %7490
       %7492 = OpExtInst %float %1 Fma %6539 %7485 %7491
       %7493 = OpExtInst %float %1 Fma %7492 %float_2097152 %7489
       %7494 = OpExtInst %float %1 Floor %7493
       %7495 = OpFMul %float %7490 %float_n6_28318548
       %7496 = OpExtInst %float %1 Fma %7486 %float_6_28318548 %7495
       %7497 = OpFMul %float %7494 %float_n6_28318548
       %7498 = OpExtInst %float %1 Fma %7489 %float_6_28318548 %7497
       %7499 = OpExtInst %float %1 Fma %7496 %float_2097152 %7498
       %7500 = OpFMul %float %7481 %2594
       %7501 = OpExtInst %float %1 Sin %7499
       %7502 = OpFMul %float %7501 %7500
       %7503 = OpCompositeConstruct %v3float %550 %550 %7483
       %7504 = OpCompositeConstruct %v3float %550 %550 %7502
       %7505 = OpFAdd %v3float %7503 %7504
       %7506 = OpFMul %float %7484 %4448
       %7507 = OpFDiv %float %float_2 %7506
       %7508 = OpFMul %float %6575 %7507
       %7509 = OpFMul %float %7507 %4944
       %7510 = OpFMul %float %7509 %5983
       %7511 = OpExtInst %float %1 Fma %6576 %7507 %7510
       %7512 = OpExtInst %float %1 Floor %7508
       %7513 = OpFNegate %float %7512
       %7514 = OpExtInst %float %1 Fma %6575 %7507 %7513
       %7515 = OpExtInst %float %1 Fma %7514 %float_2097152 %7511
       %7516 = OpExtInst %float %1 Floor %7515
       %7517 = OpFMul %float %7512 %float_n6_28318548
       %7518 = OpExtInst %float %1 Fma %7508 %float_6_28318548 %7517
       %7519 = OpFMul %float %7516 %float_n6_28318548
       %7520 = OpExtInst %float %1 Fma %7511 %float_6_28318548 %7519
       %7521 = OpExtInst %float %1 Fma %7518 %float_2097152 %7520
       %7522 = OpFMul %float %7500 %2594
       %7523 = OpExtInst %float %1 Sin %7521
       %7524 = OpFMul %float %7523 %7522
       %7525 = OpCompositeConstruct %v3float %550 %550 %7524
       %7526 = OpFAdd %v3float %7505 %7525
       %7527 = OpFMul %float %7506 %4448
       %7528 = OpFDiv %float %float_2 %7527
       %7529 = OpFMul %float %6610 %7528
       %7530 = OpFMul %float %7528 %4967
       %7531 = OpFMul %float %7530 %5983
       %7532 = OpExtInst %float %1 Fma %6611 %7528 %7531
       %7533 = OpExtInst %float %1 Floor %7529
       %7534 = OpFNegate %float %7533
       %7535 = OpExtInst %float %1 Fma %6610 %7528 %7534
       %7536 = OpExtInst %float %1 Fma %7535 %float_2097152 %7532
       %7537 = OpExtInst %float %1 Floor %7536
       %7538 = OpFMul %float %7533 %float_n6_28318548
       %7539 = OpExtInst %float %1 Fma %7529 %float_6_28318548 %7538
       %7540 = OpFMul %float %7537 %float_n6_28318548
       %7541 = OpExtInst %float %1 Fma %7532 %float_6_28318548 %7540
       %7542 = OpExtInst %float %1 Fma %7539 %float_2097152 %7541
       %7543 = OpFMul %float %7522 %2594
       %7544 = OpExtInst %float %1 Sin %7542
       %7545 = OpFMul %float %7544 %7543
       %7546 = OpCompositeConstruct %v3float %550 %550 %7545
       %7547 = OpFAdd %v3float %7526 %7546
       %7548 = OpFMul %float %6676 %5500
       %7549 = OpFDiv %float %float_2 %7548
       %7550 = OpFMul %float %6673 %7549
       %7551 = OpFMul %float %7549 %4991
       %7552 = OpFMul %float %7551 %5983
       %7553 = OpExtInst %float %1 Fma %6674 %7549 %7552
       %7554 = OpExtInst %float %1 Floor %7550
       %7555 = OpFNegate %float %7554
       %7556 = OpExtInst %float %1 Fma %6673 %7549 %7555
       %7557 = OpExtInst %float %1 Fma %7556 %float_2097152 %7553
       %7558 = OpExtInst %float %1 Floor %7557
       %7559 = OpFMul %float %7554 %float_n6_28318548
       %7560 = OpExtInst %float %1 Fma %7550 %float_6_28318548 %7559
       %7561 = OpFMul %float %7558 %float_n6_28318548
       %7562 = OpExtInst %float %1 Fma %7553 %float_6_28318548 %7561
       %7563 = OpExtInst %float %1 Fma %7560 %float_2097152 %7562
       %7564 = OpFMul %float %7481 %2733
       %7565 = OpExtInst %float %1 Sin %7563
       %7566 = OpFMul %float %7565 %7564
       %7567 = OpFMul %float %7548 %4448
       %7568 = OpFDiv %float %float_2 %7567
       %7569 = OpFMul %float %6708 %7568
       %7570 = OpFMul %float %7568 %5012
       %7571 = OpFMul %float %7570 %5983
       %7572 = OpExtInst %float %1 Fma %6709 %7568 %7571
       %7573 = OpExtInst %float %1 Floor %7569
       %7574 = OpFNegate %float %7573
       %7575 = OpExtInst %float %1 Fma %6708 %7568 %7574
       %7576 = OpExtInst %float %1 Fma %7575 %float_2097152 %7572
       %7577 = OpExtInst %float %1 Floor %7576
       %7578 = OpFMul %float %7573 %float_n6_28318548
       %7579 = OpExtInst %float %1 Fma %7569 %float_6_28318548 %7578
       %7580 = OpFMul %float %7577 %float_n6_28318548
       %7581 = OpExtInst %float %1 Fma %7572 %float_6_28318548 %7580
       %7582 = OpExtInst %float %1 Fma %7579 %float_2097152 %7581
       %7583 = OpFMul %float %7564 %2594
       %7584 = OpExtInst %float %1 Sin %7582
       %7585 = OpFMul %float %7584 %7583
       %7586 = OpCompositeConstruct %v3float %550 %550 %7566
       %7587 = OpCompositeConstruct %v3float %550 %550 %7585
       %7588 = OpFAdd %v3float %7586 %7587
       %7589 = OpFMul %float %7567 %4448
       %7590 = OpFDiv %float %float_2 %7589
       %7591 = OpFMul %float %6744 %7590
       %7592 = OpFMul %float %7590 %5036
       %7593 = OpFMul %float %7592 %5983
       %7594 = OpExtInst %float %1 Fma %6745 %7590 %7593
       %7595 = OpExtInst %float %1 Floor %7591
       %7596 = OpFNegate %float %7595
       %7597 = OpExtInst %float %1 Fma %6744 %7590 %7596
       %7598 = OpExtInst %float %1 Fma %7597 %float_2097152 %7594
       %7599 = OpExtInst %float %1 Floor %7598
       %7600 = OpFMul %float %7595 %float_n6_28318548
       %7601 = OpExtInst %float %1 Fma %7591 %float_6_28318548 %7600
       %7602 = OpFMul %float %7599 %float_n6_28318548
       %7603 = OpExtInst %float %1 Fma %7594 %float_6_28318548 %7602
       %7604 = OpExtInst %float %1 Fma %7601 %float_2097152 %7603
       %7605 = OpFMul %float %7583 %2594
       %7606 = OpExtInst %float %1 Sin %7604
       %7607 = OpFMul %float %7606 %7605
       %7608 = OpCompositeConstruct %v3float %550 %550 %7607
       %7609 = OpFAdd %v3float %7588 %7608
       %7610 = OpFMul %float %7589 %4448
       %7611 = OpFDiv %float %float_2 %7610
       %7612 = OpFMul %float %6779 %7611
       %7613 = OpFMul %float %7611 %5059
       %7614 = OpFMul %float %7613 %5983
       %7615 = OpExtInst %float %1 Fma %6780 %7611 %7614
       %7616 = OpExtInst %float %1 Floor %7612
       %7617 = OpFNegate %float %7616
       %7618 = OpExtInst %float %1 Fma %6779 %7611 %7617
       %7619 = OpExtInst %float %1 Fma %7618 %float_2097152 %7615
       %7620 = OpExtInst %float %1 Floor %7619
       %7621 = OpFMul %float %7616 %float_n6_28318548
       %7622 = OpExtInst %float %1 Fma %7612 %float_6_28318548 %7621
       %7623 = OpFMul %float %7620 %float_n6_28318548
       %7624 = OpExtInst %float %1 Fma %7615 %float_6_28318548 %7623
       %7625 = OpExtInst %float %1 Fma %7622 %float_2097152 %7624
       %7626 = OpFMul %float %7605 %2594
       %7627 = OpExtInst %float %1 Sin %7625
       %7628 = OpFMul %float %7627 %7626
       %7629 = OpCompositeConstruct %v3float %550 %550 %7628
       %7630 = OpFAdd %v3float %7609 %7629
       %7631 = OpFAdd %v3float %7547 %7630
       %7632 = OpFMul %float %6846 %5500
       %7633 = OpFDiv %float %float_2 %7632
       %7634 = OpFMul %float %6843 %7633
       %7635 = OpFMul %float %7633 %4991
       %7636 = OpFMul %float %7635 %5983
       %7637 = OpExtInst %float %1 Fma %6844 %7633 %7636
       %7638 = OpExtInst %float %1 Floor %7634
       %7639 = OpFNegate %float %7638
       %7640 = OpExtInst %float %1 Fma %6843 %7633 %7639
       %7641 = OpExtInst %float %1 Fma %7640 %float_2097152 %7637
       %7642 = OpExtInst %float %1 Floor %7641
       %7643 = OpFMul %float %7638 %float_n6_28318548
       %7644 = OpExtInst %float %1 Fma %7634 %float_6_28318548 %7643
       %7645 = OpFMul %float %7642 %float_n6_28318548
       %7646 = OpExtInst %float %1 Fma %7637 %float_6_28318548 %7645
       %7647 = OpExtInst %float %1 Fma %7644 %float_2097152 %7646
       %7648 = OpExtInst %float %1 Sin %7647
       %7649 = OpFMul %float %7648 %7564
       %7650 = OpFMul %float %7632 %4448
       %7651 = OpFDiv %float %float_2 %7650
       %7652 = OpFMul %float %6877 %7651
       %7653 = OpFMul %float %7651 %5012
       %7654 = OpFMul %float %7653 %5983
       %7655 = OpExtInst %float %1 Fma %6878 %7651 %7654
       %7656 = OpExtInst %float %1 Floor %7652
       %7657 = OpFNegate %float %7656
       %7658 = OpExtInst %float %1 Fma %6877 %7651 %7657
       %7659 = OpExtInst %float %1 Fma %7658 %float_2097152 %7655
       %7660 = OpExtInst %float %1 Floor %7659
       %7661 = OpFMul %float %7656 %float_n6_28318548
       %7662 = OpExtInst %float %1 Fma %7652 %float_6_28318548 %7661
       %7663 = OpFMul %float %7660 %float_n6_28318548
       %7664 = OpExtInst %float %1 Fma %7655 %float_6_28318548 %7663
       %7665 = OpExtInst %float %1 Fma %7662 %float_2097152 %7664
       %7666 = OpExtInst %float %1 Sin %7665
       %7667 = OpFMul %float %7666 %7583
       %7668 = OpCompositeConstruct %v3float %550 %550 %7649
       %7669 = OpCompositeConstruct %v3float %550 %550 %7667
       %7670 = OpFAdd %v3float %7668 %7669
       %7671 = OpFMul %float %7650 %4448
       %7672 = OpFDiv %float %float_2 %7671
       %7673 = OpFMul %float %6912 %7672
       %7674 = OpFMul %float %7672 %5036
       %7675 = OpFMul %float %7674 %5983
       %7676 = OpExtInst %float %1 Fma %6913 %7672 %7675
       %7677 = OpExtInst %float %1 Floor %7673
       %7678 = OpFNegate %float %7677
       %7679 = OpExtInst %float %1 Fma %6912 %7672 %7678
       %7680 = OpExtInst %float %1 Fma %7679 %float_2097152 %7676
       %7681 = OpExtInst %float %1 Floor %7680
       %7682 = OpFMul %float %7677 %float_n6_28318548
       %7683 = OpExtInst %float %1 Fma %7673 %float_6_28318548 %7682
       %7684 = OpFMul %float %7681 %float_n6_28318548
       %7685 = OpExtInst %float %1 Fma %7676 %float_6_28318548 %7684
       %7686 = OpExtInst %float %1 Fma %7683 %float_2097152 %7685
       %7687 = OpExtInst %float %1 Sin %7686
       %7688 = OpFMul %float %7687 %7605
       %7689 = OpCompositeConstruct %v3float %550 %550 %7688
       %7690 = OpFAdd %v3float %7670 %7689
       %7691 = OpFMul %float %7671 %4448
       %7692 = OpFDiv %float %float_2 %7691
       %7693 = OpFMul %float %6946 %7692
       %7694 = OpFMul %float %7692 %5059
       %7695 = OpFMul %float %7694 %5983
       %7696 = OpExtInst %float %1 Fma %6947 %7692 %7695
       %7697 = OpExtInst %float %1 Floor %7693
       %7698 = OpFNegate %float %7697
       %7699 = OpExtInst %float %1 Fma %6946 %7692 %7698
       %7700 = OpExtInst %float %1 Fma %7699 %float_2097152 %7696
       %7701 = OpExtInst %float %1 Floor %7700
       %7702 = OpFMul %float %7697 %float_n6_28318548
       %7703 = OpExtInst %float %1 Fma %7693 %float_6_28318548 %7702
       %7704 = OpFMul %float %7701 %float_n6_28318548
       %7705 = OpExtInst %float %1 Fma %7696 %float_6_28318548 %7704
       %7706 = OpExtInst %float %1 Fma %7703 %float_2097152 %7705
       %7707 = OpExtInst %float %1 Sin %7706
       %7708 = OpFMul %float %7707 %7626
       %7709 = OpCompositeConstruct %v3float %550 %550 %7708
       %7710 = OpFAdd %v3float %7690 %7709
       %7711 = OpFAdd %v3float %7631 %7710
       %7712 = OpFAdd %v3float %7464 %7711
       %7713 = OpFAdd %v3float %7217 %7712
       %7714 = OpFAdd %v3float %6968 %7713
       %7715 = OpFAdd %v3float %5667 %7714
       %7716 = OpExtInst %v3float %1 Fma %3518 %3521 %7715
       %7717 = OpCompositeExtract %float %7716 2
       %7718 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_3
       %7719 = OpLoad %float %7718
       %7720 = OpFNegate %float %7719
       %7721 = OpExtInst %float %1 Fma %7717 %1725 %7720
       %7722 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_2
       %7723 = OpLoad %float %7722
       %7724 = OpFMul %float %7721 %7723
       %7725 = OpExtInst %float %1 FClamp %7724 %float_0 %float_1
       %7726 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_3
       %7727 = OpLoad %float %7726
       %7728 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_92 %int_0
       %7729 = OpLoad %float %7728
       %7730 = OpFNegate %float %7729
       %7731 = OpExtInst %float %1 Fma %7725 %7727 %7730
       %7732 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_92 %int_3
       %7733 = OpLoad %float %7732
       %7734 = OpFMul %float %7731 %7733
       %7735 = OpExtInst %float %1 FClamp %7734 %float_0 %float_1
       %7736 = OpCompositeConstruct %v3float %7717 %7717 %7717
       %7737 = OpExtInst %v3float %1 Fma %7736 %621 %641
       %7738 = OpDPdx %v3float %593
       %7739 = OpVectorTimesScalar %v3float %7738 %float_2097152
       %7740 = OpDPdx %v3float %7737
       %7741 = OpFAdd %v3float %7739 %7740
       %7742 = OpDPdy %v3float %593
       %7743 = OpVectorTimesScalar %v3float %7742 %float_2097152
       %7744 = OpDPdy %v3float %7737
       %7745 = OpFAdd %v3float %7743 %7744
       %7746 = OpExtInst %v3float %1 Cross %7741 %7745
       %7747 = OpExtInst %v3float %1 Normalize %7746
       %7748 = OpDPdx %v3float %593
       %7749 = OpVectorTimesScalar %v3float %7748 %float_2097152
       %7750 = OpDPdx %v3float %641
       %7751 = OpFAdd %v3float %7749 %7750
       %7752 = OpDPdy %v3float %593
       %7753 = OpVectorTimesScalar %v3float %7752 %float_2097152
       %7754 = OpDPdy %v3float %641
       %7755 = OpFAdd %v3float %7753 %7754
       %7756 = OpExtInst %v3float %1 Cross %7751 %7755
       %7757 = OpExtInst %v3float %1 Normalize %7756
       %7758 = OpFSub %v3float %7747 %7757
       %7759 = OpFAdd %v3float %7758 %621
       %7760 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_1
       %7761 = OpLoad %float %7760
       %7762 = OpCompositeConstruct %v3float %7761 %7761 %7761
       %7763 = OpExtInst %v3float %1 FMix %7759 %291 %7762
       %7764 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_2
       %7765 = OpLoad %float %7764
       %7766 = OpCompositeConstruct %v3float %7765 %7765 %7765
       %7767 = OpExtInst %v3float %1 Fma %7763 %7766 %642
       %7768 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_3
       %7769 = OpLoad %float %7768
       %7770 = OpCompositeConstruct %v3float %7769 %7769 %7769
       %7771 = OpFMul %v3float %593 %7770
       %7772 = OpFMul %v3float %7767 %7770
       %7773 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_1
       %7774 = OpLoad %float %7773
       %7775 = OpFMul %float %1161 %7774
       %7776 = OpCompositeConstruct %v2float %7775 %7775
       %7777 = OpFAdd %v2float %7776 %276
       %7778 = OpCompositeExtract %float %7771 0
       %7779 = OpCompositeExtract %float %7772 0
       %7780 = OpCompositeExtract %float %7771 1
       %7781 = OpCompositeExtract %float %7772 1
       %7782 = OpCompositeExtract %float %7777 0
       %7783 = OpCompositeConstruct %v3float %7778 %7780 %float_0
       %7784 = OpCompositeConstruct %v3float %7779 %7781 %7782
       %7785 = OpVectorTimesScalar %v3float %7784 %float_4_76837158en07
       %7786 = OpFAdd %v3float %7785 %137
       %7787 = OpFAdd %v3float %7783 %7786
       %7788 = OpExtInst %v3float %1 Floor %7787
       %7789 = OpFSub %v3float %7783 %7788
       %7790 = OpVectorTimesScalar %v3float %7789 %float_2097152
       %7791 = OpFAdd %v3float %7790 %7784
       %7792 = OpVectorTimesScalar %v3float %7791 %float_1
               OpBranch %7793
       %7793 = OpLabel
       %7794 = OpPhi %v3float %7792 %6289 %7795 %7796
       %7797 = OpPhi %float %float_1 %6289 %7798 %7796
       %7799 = OpPhi %float %float_0 %6289 %7800 %7796
       %7801 = OpPhi %uint %uint_0 %6289 %7802 %7796
       %7803 = OpULessThan %bool %7801 %uint_10
               OpLoopMerge %7804 %7796 DontUnroll
               OpBranchConditional %7803 %7796 %7804
       %7796 = OpLabel
       %7805 = OpExtInst %v3float %1 Fract %7794
       %7806 = OpExtInst %v3float %1 Floor %7794
       %7807 = OpDot %float %7806 %386
       %7808 = OpFAdd %float %7807 %float_19
       %7809 = OpFAdd %float %7807 %float_47
       %7810 = OpFAdd %float %7807 %float_66
       %7811 = OpFAdd %float %7807 %float_101
       %7812 = OpFAdd %float %7807 %float_120
       %7813 = OpFAdd %float %7807 %float_148
       %7814 = OpFAdd %float %7807 %float_167
       %7815 = OpConvertFToS %int %7807
       %7816 = OpCompositeConstruct %v3int %7815 %int_0 %int_0
       %7817 = OpBitcast %v3uint %7816
       %7818 = OpIMul %v3uint %7817 %402
       %7819 = OpIAdd %v3uint %7818 %404
       %7820 = OpCompositeExtract %uint %7819 1
       %7821 = OpCompositeExtract %uint %7819 2
       %7822 = OpIMul %uint %7820 %7821
       %7823 = OpCompositeExtract %uint %7819 0
       %7824 = OpIAdd %uint %7823 %7822
       %7825 = OpIMul %uint %7821 %7824
       %7826 = OpIAdd %uint %7820 %7825
       %7827 = OpIMul %uint %7824 %7826
       %7828 = OpIAdd %uint %7821 %7827
       %7829 = OpIMul %uint %7826 %7828
       %7830 = OpIAdd %uint %7824 %7829
       %7831 = OpCompositeInsert %v3uint %7830 %551 0
       %7832 = OpBitwiseAnd %v3uint %405 %406
       %7833 = OpShiftRightLogical %v3uint %7831 %7832
       %7834 = OpCompositeExtract %uint %7833 0
       %7835 = OpCompositeConstruct %v3uint %7834 %7834 %7834
       %7836 = OpBitwiseAnd %v3uint %7835 %387
       %7837 = OpConvertUToF %v3float %7836
       %7838 = OpExtInst %v3float %1 Fma %7837 %391 %279
       %7839 = OpDot %float %7838 %7805
       %7840 = OpConvertFToS %int %7808
       %7841 = OpFSub %v3float %7805 %351
       %7842 = OpCompositeConstruct %v3int %7840 %int_0 %int_0
       %7843 = OpBitcast %v3uint %7842
       %7844 = OpIMul %v3uint %7843 %402
       %7845 = OpIAdd %v3uint %7844 %404
       %7846 = OpCompositeExtract %uint %7845 1
       %7847 = OpCompositeExtract %uint %7845 2
       %7848 = OpIMul %uint %7846 %7847
       %7849 = OpCompositeExtract %uint %7845 0
       %7850 = OpIAdd %uint %7849 %7848
       %7851 = OpIMul %uint %7847 %7850
       %7852 = OpIAdd %uint %7846 %7851
       %7853 = OpIMul %uint %7850 %7852
       %7854 = OpIAdd %uint %7847 %7853
       %7855 = OpIMul %uint %7852 %7854
       %7856 = OpIAdd %uint %7850 %7855
       %7857 = OpCompositeInsert %v3uint %7856 %551 0
       %7858 = OpShiftRightLogical %v3uint %7857 %7832
       %7859 = OpCompositeExtract %uint %7858 0
       %7860 = OpCompositeConstruct %v3uint %7859 %7859 %7859
       %7861 = OpBitwiseAnd %v3uint %7860 %387
       %7862 = OpConvertUToF %v3float %7861
       %7863 = OpExtInst %v3float %1 Fma %7862 %391 %279
       %7864 = OpDot %float %7863 %7841
       %7865 = OpConvertFToS %int %7809
       %7866 = OpFSub %v3float %7805 %352
       %7867 = OpCompositeConstruct %v3int %7865 %int_0 %int_0
       %7868 = OpBitcast %v3uint %7867
       %7869 = OpIMul %v3uint %7868 %402
       %7870 = OpIAdd %v3uint %7869 %404
       %7871 = OpCompositeExtract %uint %7870 1
       %7872 = OpCompositeExtract %uint %7870 2
       %7873 = OpIMul %uint %7871 %7872
       %7874 = OpCompositeExtract %uint %7870 0
       %7875 = OpIAdd %uint %7874 %7873
       %7876 = OpIMul %uint %7872 %7875
       %7877 = OpIAdd %uint %7871 %7876
       %7878 = OpIMul %uint %7875 %7877
       %7879 = OpIAdd %uint %7872 %7878
       %7880 = OpIMul %uint %7877 %7879
       %7881 = OpIAdd %uint %7875 %7880
       %7882 = OpCompositeInsert %v3uint %7881 %551 0
       %7883 = OpShiftRightLogical %v3uint %7882 %7832
       %7884 = OpCompositeExtract %uint %7883 0
       %7885 = OpCompositeConstruct %v3uint %7884 %7884 %7884
       %7886 = OpBitwiseAnd %v3uint %7885 %387
       %7887 = OpConvertUToF %v3float %7886
       %7888 = OpExtInst %v3float %1 Fma %7887 %391 %279
       %7889 = OpDot %float %7888 %7866
       %7890 = OpConvertFToS %int %7810
       %7891 = OpFSub %v3float %7805 %134
       %7892 = OpCompositeConstruct %v3int %7890 %int_0 %int_0
       %7893 = OpBitcast %v3uint %7892
       %7894 = OpIMul %v3uint %7893 %402
       %7895 = OpIAdd %v3uint %7894 %404
       %7896 = OpCompositeExtract %uint %7895 1
       %7897 = OpCompositeExtract %uint %7895 2
       %7898 = OpIMul %uint %7896 %7897
       %7899 = OpCompositeExtract %uint %7895 0
       %7900 = OpIAdd %uint %7899 %7898
       %7901 = OpIMul %uint %7897 %7900
       %7902 = OpIAdd %uint %7896 %7901
       %7903 = OpIMul %uint %7900 %7902
       %7904 = OpIAdd %uint %7897 %7903
       %7905 = OpIMul %uint %7902 %7904
       %7906 = OpIAdd %uint %7900 %7905
       %7907 = OpCompositeInsert %v3uint %7906 %551 0
       %7908 = OpShiftRightLogical %v3uint %7907 %7832
       %7909 = OpCompositeExtract %uint %7908 0
       %7910 = OpCompositeConstruct %v3uint %7909 %7909 %7909
       %7911 = OpBitwiseAnd %v3uint %7910 %387
       %7912 = OpConvertUToF %v3float %7911
       %7913 = OpExtInst %v3float %1 Fma %7912 %391 %279
       %7914 = OpDot %float %7913 %7891
       %7915 = OpConvertFToS %int %7811
       %7916 = OpFSub %v3float %7805 %291
       %7917 = OpCompositeConstruct %v3int %7915 %int_0 %int_0
       %7918 = OpBitcast %v3uint %7917
       %7919 = OpIMul %v3uint %7918 %402
       %7920 = OpIAdd %v3uint %7919 %404
       %7921 = OpCompositeExtract %uint %7920 1
       %7922 = OpCompositeExtract %uint %7920 2
       %7923 = OpIMul %uint %7921 %7922
       %7924 = OpCompositeExtract %uint %7920 0
       %7925 = OpIAdd %uint %7924 %7923
       %7926 = OpIMul %uint %7922 %7925
       %7927 = OpIAdd %uint %7921 %7926
       %7928 = OpIMul %uint %7925 %7927
       %7929 = OpIAdd %uint %7922 %7928
       %7930 = OpIMul %uint %7927 %7929
       %7931 = OpIAdd %uint %7925 %7930
       %7932 = OpCompositeInsert %v3uint %7931 %551 0
       %7933 = OpShiftRightLogical %v3uint %7932 %7832
       %7934 = OpCompositeExtract %uint %7933 0
       %7935 = OpCompositeConstruct %v3uint %7934 %7934 %7934
       %7936 = OpBitwiseAnd %v3uint %7935 %387
       %7937 = OpConvertUToF %v3float %7936
       %7938 = OpExtInst %v3float %1 Fma %7937 %391 %279
       %7939 = OpDot %float %7938 %7916
       %7940 = OpConvertFToS %int %7812
       %7941 = OpFSub %v3float %7805 %140
       %7942 = OpCompositeConstruct %v3int %7940 %int_0 %int_0
       %7943 = OpBitcast %v3uint %7942
       %7944 = OpIMul %v3uint %7943 %402
       %7945 = OpIAdd %v3uint %7944 %404
       %7946 = OpCompositeExtract %uint %7945 1
       %7947 = OpCompositeExtract %uint %7945 2
       %7948 = OpIMul %uint %7946 %7947
       %7949 = OpCompositeExtract %uint %7945 0
       %7950 = OpIAdd %uint %7949 %7948
       %7951 = OpIMul %uint %7947 %7950
       %7952 = OpIAdd %uint %7946 %7951
       %7953 = OpIMul %uint %7950 %7952
       %7954 = OpIAdd %uint %7947 %7953
       %7955 = OpIMul %uint %7952 %7954
       %7956 = OpIAdd %uint %7950 %7955
       %7957 = OpCompositeInsert %v3uint %7956 %551 0
       %7958 = OpShiftRightLogical %v3uint %7957 %7832
       %7959 = OpCompositeExtract %uint %7958 0
       %7960 = OpCompositeConstruct %v3uint %7959 %7959 %7959
       %7961 = OpBitwiseAnd %v3uint %7960 %387
       %7962 = OpConvertUToF %v3float %7961
       %7963 = OpExtInst %v3float %1 Fma %7962 %391 %279
       %7964 = OpDot %float %7963 %7941
       %7965 = OpConvertFToS %int %7813
       %7966 = OpFSub %v3float %7805 %135
       %7967 = OpCompositeConstruct %v3int %7965 %int_0 %int_0
       %7968 = OpBitcast %v3uint %7967
       %7969 = OpIMul %v3uint %7968 %402
       %7970 = OpIAdd %v3uint %7969 %404
       %7971 = OpCompositeExtract %uint %7970 1
       %7972 = OpCompositeExtract %uint %7970 2
       %7973 = OpIMul %uint %7971 %7972
       %7974 = OpCompositeExtract %uint %7970 0
       %7975 = OpIAdd %uint %7974 %7973
       %7976 = OpIMul %uint %7972 %7975
       %7977 = OpIAdd %uint %7971 %7976
       %7978 = OpIMul %uint %7975 %7977
       %7979 = OpIAdd %uint %7972 %7978
       %7980 = OpIMul %uint %7977 %7979
       %7981 = OpIAdd %uint %7975 %7980
       %7982 = OpCompositeInsert %v3uint %7981 %551 0
       %7983 = OpShiftRightLogical %v3uint %7982 %7832
       %7984 = OpCompositeExtract %uint %7983 0
       %7985 = OpCompositeConstruct %v3uint %7984 %7984 %7984
       %7986 = OpBitwiseAnd %v3uint %7985 %387
       %7987 = OpConvertUToF %v3float %7986
       %7988 = OpExtInst %v3float %1 Fma %7987 %391 %279
       %7989 = OpDot %float %7988 %7966
       %7990 = OpConvertFToS %int %7814
       %7991 = OpFSub %v3float %7805 %127
       %7992 = OpCompositeConstruct %v3int %7990 %int_0 %int_0
       %7993 = OpBitcast %v3uint %7992
       %7994 = OpIMul %v3uint %7993 %402
       %7995 = OpIAdd %v3uint %7994 %404
       %7996 = OpCompositeExtract %uint %7995 1
       %7997 = OpCompositeExtract %uint %7995 2
       %7998 = OpIMul %uint %7996 %7997
       %7999 = OpCompositeExtract %uint %7995 0
       %8000 = OpIAdd %uint %7999 %7998
       %8001 = OpIMul %uint %7997 %8000
       %8002 = OpIAdd %uint %7996 %8001
       %8003 = OpIMul %uint %8000 %8002
       %8004 = OpIAdd %uint %7997 %8003
       %8005 = OpIMul %uint %8002 %8004
       %8006 = OpIAdd %uint %8000 %8005
       %8007 = OpCompositeInsert %v3uint %8006 %551 0
       %8008 = OpShiftRightLogical %v3uint %8007 %7832
       %8009 = OpCompositeExtract %uint %8008 0
       %8010 = OpCompositeConstruct %v3uint %8009 %8009 %8009
       %8011 = OpBitwiseAnd %v3uint %8010 %387
       %8012 = OpConvertUToF %v3float %8011
       %8013 = OpExtInst %v3float %1 Fma %8012 %391 %279
       %8014 = OpDot %float %8013 %7991
       %8015 = OpCompositeExtract %float %7805 0
       %8016 = OpCompositeExtract %float %7805 1
       %8017 = OpCompositeExtract %float %7805 2
       %8018 = OpCompositeConstruct %v4float %8015 %8016 %8017 %float_0
       %8019 = OpFMul %v4float %8018 %8018
       %8020 = OpFMul %v4float %8019 %8018
       %8021 = OpVectorTimesScalar %v4float %8018 %float_6
       %8022 = OpFSub %v4float %8021 %382
       %8023 = OpExtInst %v4float %1 Fma %8018 %8022 %383
       %8024 = OpFMul %v4float %8020 %8023
       %8025 = OpCompositeExtract %float %8024 0
       %8026 = OpExtInst %float %1 FMix %7839 %7864 %8025
       %8027 = OpExtInst %float %1 FMix %7889 %7914 %8025
       %8028 = OpCompositeExtract %float %8024 1
       %8029 = OpExtInst %float %1 FMix %8026 %8027 %8028
       %8030 = OpExtInst %float %1 FMix %7939 %7964 %8025
       %8031 = OpExtInst %float %1 FMix %7989 %8014 %8025
       %8032 = OpExtInst %float %1 FMix %8030 %8031 %8028
       %8033 = OpCompositeExtract %float %8024 2
       %8034 = OpExtInst %float %1 FMix %8029 %8032 %8033
       %8035 = OpExtInst %float %1 FAbs %8034
       %7800 = OpExtInst %float %1 Fma %8035 %7797 %7799
       %7795 = OpVectorTimesScalar %v3float %7794 %float_2
       %7798 = OpFMul %float %7797 %float_0_5
       %7802 = OpIAdd %uint %7801 %uint_1
               OpBranch %7793
       %7804 = OpLabel
       %8036 = OpExtInst %float %1 FMix %float_0 %float_1 %7799
       %8037 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_2
       %8038 = OpLoad %float %8037
       %8039 = OpFNegate %float %7735
       %8040 = OpExtInst %float %1 Fma %8039 %8038 %8036
       %8041 = OpExtInst %float %1 Fma %7735 %8038 %float_1
       %8042 = OpExtInst %float %1 Fma %8039 %8038 %8041
       %8043 = OpFDiv %float %8040 %8042
       %8044 = OpExtInst %float %1 Fma %8043 %float_n1 %float_1
       %8045 = OpExtInst %float %1 FClamp %8044 %float_0 %float_1
       %8046 = OpFOrdLessThanEqual %bool %8045 %float_0
       %8047 = OpExtInst %float %1 Pow %8045 %float_2
       %8048 = OpSelect %float %8046 %float_0 %8047
       %8049 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_0
       %8050 = OpLoad %float %8049
       %8051 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_3
       %8052 = OpLoad %float %8051
       %8053 = OpExtInst %float %1 FMix %8050 %8052 %8048
       %8054 = OpExtInst %float %1 FClamp %8053 %float_0 %float_1
       %8055 = OpFMul %float %7735 %8054
       %8056 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_1
       %8057 = OpLoad %float %8056
       %8058 = OpCompositeConstruct %v3float %8057 %8057 %8057
       %8059 = OpFMul %v3float %593 %8058
       %8060 = OpFMul %v3float %642 %8058
       %8061 = OpVectorTimesScalar %v3float %8060 %float_4_76837158en07
       %8062 = OpFAdd %v3float %8061 %137
       %8063 = OpExtInst %v3float %1 Fma %593 %8058 %8062
       %8064 = OpExtInst %v3float %1 Floor %8063
       %8065 = OpFNegate %v3float %8064
       %8066 = OpExtInst %v3float %1 Fma %593 %8058 %8065
       %8067 = OpVectorTimesScalar %v3float %8066 %float_2097152
       %8068 = OpExtInst %v3float %1 Fma %642 %8058 %8067
       %8069 = OpVectorTimesScalar %v3float %8068 %float_1
               OpBranch %8070
       %8070 = OpLabel
       %8071 = OpPhi %v3float %543 %7804 %8072 %8073
       %8074 = OpPhi %v3float %8069 %7804 %8075 %8073
       %8076 = OpPhi %float %float_1 %7804 %8077 %8073
       %8078 = OpPhi %float %float_0 %7804 %8079 %8073
       %8080 = OpPhi %uint %uint_0 %7804 %8081 %8073
       %8082 = OpULessThan %bool %8080 %uint_1
               OpLoopMerge %8083 %8073 DontUnroll
               OpBranchConditional %8082 %8084 %8083
       %8084 = OpLabel
       %8085 = OpExtInst %v3float %1 Fract %8074
       %8086 = OpExtInst %v3float %1 Floor %8074
       %8087 = OpCompositeInsert %v3float %float_0 %8071 0
               OpBranch %8088
       %8088 = OpLabel
       %8089 = OpPhi %v4float %353 %8084 %8090 %8091
       %8072 = OpPhi %v3float %8087 %8084 %8092 %8091
       %8093 = OpCompositeExtract %float %8072 0
       %8094 = OpFOrdLessThanEqual %bool %8093 %float_1
               OpLoopMerge %8095 %8091 None
               OpBranchConditional %8094 %8096 %8095
       %8096 = OpLabel
       %8097 = OpCompositeInsert %v3float %float_0 %8072 1
               OpBranch %8098
       %8098 = OpLabel
       %8099 = OpPhi %v3float %8097 %8096 %8100 %8101
       %8090 = OpPhi %v4float %8089 %8096 %8102 %8101
       %8103 = OpCompositeExtract %float %8099 1
       %8104 = OpFOrdLessThanEqual %bool %8103 %float_1
               OpLoopMerge %8105 %8101 None
               OpBranchConditional %8104 %8106 %8105
       %8106 = OpLabel
       %8107 = OpCompositeInsert %v3float %float_0 %8099 2
               OpBranch %8108
       %8108 = OpLabel
       %8102 = OpPhi %v4float %8090 %8106 %8109 %8110
       %8111 = OpPhi %v3float %8107 %8106 %8112 %8110
       %8113 = OpCompositeExtract %float %8111 2
       %8114 = OpFOrdLessThanEqual %bool %8113 %float_1
               OpLoopMerge %8115 %8110 None
               OpBranchConditional %8114 %8110 %8115
       %8110 = OpLabel
       %8116 = OpFAdd %v3float %8086 %8111
       %8117 = OpVectorShuffle %v3float %539 %8116 3 4 5
       %8118 = OpConvertFToS %v3int %8117
       %8119 = OpBitcast %v3uint %8118
       %8120 = OpIMul %v3uint %8119 %402
       %8121 = OpIAdd %v3uint %8120 %404
       %8122 = OpCompositeExtract %uint %8121 1
       %8123 = OpCompositeExtract %uint %8121 2
       %8124 = OpIMul %uint %8122 %8123
       %8125 = OpCompositeExtract %uint %8121 0
       %8126 = OpIAdd %uint %8125 %8124
       %8127 = OpIMul %uint %8123 %8126
       %8128 = OpIAdd %uint %8122 %8127
       %8129 = OpIMul %uint %8126 %8128
       %8130 = OpIAdd %uint %8123 %8129
       %8131 = OpIMul %uint %8128 %8130
       %8132 = OpIAdd %uint %8126 %8131
       %8133 = OpCompositeInsert %v3uint %8132 %8121 0
       %8134 = OpIMul %uint %8130 %8132
       %8135 = OpIAdd %uint %8128 %8134
       %8136 = OpCompositeInsert %v3uint %8135 %8133 1
       %8137 = OpIMul %uint %8132 %8135
       %8138 = OpIAdd %uint %8130 %8137
       %8139 = OpCompositeInsert %v3uint %8138 %8136 2
       %8140 = OpBitwiseAnd %v3uint %405 %406
       %8141 = OpShiftRightLogical %v3uint %8139 %8140
       %8142 = OpConvertUToF %v3float %8141
       %8143 = OpExtInst %v3float %1 Fma %8142 %523 %512
       %8144 = OpExtInst %v3float %1 Normalize %8143
       %8145 = OpVectorTimesScalar %v3float %8144 %float_0_2588
       %8146 = OpFAdd %v3float %8111 %8145
       %8147 = OpFSub %v3float %8085 %8146
       %8148 = OpCompositeExtract %float %8102 3
       %8149 = OpDot %float %8147 %8147
       %8150 = OpExtInst %float %1 NMin %8148 %8149
       %8109 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %8150
       %8151 = OpFAdd %float %8113 %float_1
       %8112 = OpCompositeInsert %v3float %8151 %8111 2
               OpBranch %8108
       %8115 = OpLabel
               OpBranch %8101
       %8101 = OpLabel
       %8152 = OpCompositeExtract %float %8111 1
       %8153 = OpFAdd %float %8152 %float_1
       %8100 = OpCompositeInsert %v3float %8153 %8111 1
               OpBranch %8098
       %8105 = OpLabel
               OpBranch %8091
       %8091 = OpLabel
       %8154 = OpCompositeExtract %float %8099 0
       %8155 = OpFAdd %float %8154 %float_1
       %8092 = OpCompositeInsert %v3float %8155 %8099 0
               OpBranch %8088
       %8095 = OpLabel
       %8156 = OpCompositeExtract %float %8089 3
       %8157 = OpExtInst %float %1 Sqrt %8156
       %8158 = OpExtInst %float %1 Fma %8157 %float_2 %float_n1
       %8159 = OpExtInst %float %1 FAbs %8158
       %8079 = OpExtInst %float %1 Fma %8159 %8076 %8078
       %8075 = OpVectorTimesScalar %v3float %8074 %float_2
       %8077 = OpFMul %float %8076 %float_0_5
               OpBranch %8073
       %8073 = OpLabel
       %8081 = OpIAdd %uint %8080 %uint_1
               OpBranch %8070
       %8083 = OpLabel
       %8160 = OpExtInst %float %1 FMix %float_n1 %float_1 %8078
       %8161 = OpExtInst %float %1 FClamp %8160 %float_0 %float_1
       %8162 = OpFMul %v3float %8060 %278
       %8163 = OpVectorTimesScalar %v3float %8162 %float_4_76837158en07
       %8164 = OpFAdd %v3float %8163 %137
       %8165 = OpExtInst %v3float %1 Fma %8059 %278 %8164
       %8166 = OpExtInst %v3float %1 Floor %8165
       %8167 = OpFNegate %v3float %8166
       %8168 = OpExtInst %v3float %1 Fma %8059 %278 %8167
       %8169 = OpVectorTimesScalar %v3float %8168 %float_2097152
       %8170 = OpExtInst %v3float %1 Fma %8060 %278 %8169
       %8171 = OpVectorTimesScalar %v3float %8170 %float_1
               OpBranch %8172
       %8172 = OpLabel
       %8173 = OpPhi %v3float %543 %8083 %8174 %8175
       %8176 = OpPhi %v3float %8171 %8083 %8177 %8175
       %8178 = OpPhi %float %float_1 %8083 %8179 %8175
       %8180 = OpPhi %float %float_0 %8083 %8181 %8175
       %8182 = OpPhi %uint %uint_0 %8083 %8183 %8175
       %8184 = OpULessThan %bool %8182 %uint_1
               OpLoopMerge %8185 %8175 DontUnroll
               OpBranchConditional %8184 %8186 %8185
       %8186 = OpLabel
       %8187 = OpExtInst %v3float %1 Fract %8176
       %8188 = OpExtInst %v3float %1 Floor %8176
       %8189 = OpCompositeInsert %v3float %float_0 %8173 0
               OpBranch %8190
       %8190 = OpLabel
       %8191 = OpPhi %v4float %353 %8186 %8192 %8193
       %8174 = OpPhi %v3float %8189 %8186 %8194 %8193
       %8195 = OpCompositeExtract %float %8174 0
       %8196 = OpFOrdLessThanEqual %bool %8195 %float_1
               OpLoopMerge %8197 %8193 None
               OpBranchConditional %8196 %8198 %8197
       %8198 = OpLabel
       %8199 = OpCompositeInsert %v3float %float_0 %8174 1
               OpBranch %8200
       %8200 = OpLabel
       %8201 = OpPhi %v3float %8199 %8198 %8202 %8203
       %8192 = OpPhi %v4float %8191 %8198 %8204 %8203
       %8205 = OpCompositeExtract %float %8201 1
       %8206 = OpFOrdLessThanEqual %bool %8205 %float_1
               OpLoopMerge %8207 %8203 None
               OpBranchConditional %8206 %8208 %8207
       %8208 = OpLabel
       %8209 = OpCompositeInsert %v3float %float_0 %8201 2
               OpBranch %8210
       %8210 = OpLabel
       %8204 = OpPhi %v4float %8192 %8208 %8211 %8212
       %8213 = OpPhi %v3float %8209 %8208 %8214 %8212
       %8215 = OpCompositeExtract %float %8213 2
       %8216 = OpFOrdLessThanEqual %bool %8215 %float_1
               OpLoopMerge %8217 %8212 None
               OpBranchConditional %8216 %8212 %8217
       %8212 = OpLabel
       %8218 = OpFAdd %v3float %8188 %8213
       %8219 = OpVectorShuffle %v3float %539 %8218 3 4 5
       %8220 = OpConvertFToS %v3int %8219
       %8221 = OpBitcast %v3uint %8220
       %8222 = OpIMul %v3uint %8221 %402
       %8223 = OpIAdd %v3uint %8222 %404
       %8224 = OpCompositeExtract %uint %8223 1
       %8225 = OpCompositeExtract %uint %8223 2
       %8226 = OpIMul %uint %8224 %8225
       %8227 = OpCompositeExtract %uint %8223 0
       %8228 = OpIAdd %uint %8227 %8226
       %8229 = OpIMul %uint %8225 %8228
       %8230 = OpIAdd %uint %8224 %8229
       %8231 = OpIMul %uint %8228 %8230
       %8232 = OpIAdd %uint %8225 %8231
       %8233 = OpIMul %uint %8230 %8232
       %8234 = OpIAdd %uint %8228 %8233
       %8235 = OpCompositeInsert %v3uint %8234 %8223 0
       %8236 = OpIMul %uint %8232 %8234
       %8237 = OpIAdd %uint %8230 %8236
       %8238 = OpCompositeInsert %v3uint %8237 %8235 1
       %8239 = OpIMul %uint %8234 %8237
       %8240 = OpIAdd %uint %8232 %8239
       %8241 = OpCompositeInsert %v3uint %8240 %8238 2
       %8242 = OpBitwiseAnd %v3uint %405 %406
       %8243 = OpShiftRightLogical %v3uint %8241 %8242
       %8244 = OpConvertUToF %v3float %8243
       %8245 = OpExtInst %v3float %1 Fma %8244 %523 %512
       %8246 = OpExtInst %v3float %1 Normalize %8245
       %8247 = OpVectorTimesScalar %v3float %8246 %float_0_2588
       %8248 = OpFAdd %v3float %8213 %8247
       %8249 = OpFSub %v3float %8187 %8248
       %8250 = OpCompositeExtract %float %8204 3
       %8251 = OpDot %float %8249 %8249
       %8252 = OpExtInst %float %1 NMin %8250 %8251
       %8211 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %8252
       %8253 = OpFAdd %float %8215 %float_1
       %8214 = OpCompositeInsert %v3float %8253 %8213 2
               OpBranch %8210
       %8217 = OpLabel
               OpBranch %8203
       %8203 = OpLabel
       %8254 = OpCompositeExtract %float %8213 1
       %8255 = OpFAdd %float %8254 %float_1
       %8202 = OpCompositeInsert %v3float %8255 %8213 1
               OpBranch %8200
       %8207 = OpLabel
               OpBranch %8193
       %8193 = OpLabel
       %8256 = OpCompositeExtract %float %8201 0
       %8257 = OpFAdd %float %8256 %float_1
       %8194 = OpCompositeInsert %v3float %8257 %8201 0
               OpBranch %8190
       %8197 = OpLabel
       %8258 = OpCompositeExtract %float %8191 3
       %8259 = OpExtInst %float %1 Sqrt %8258
       %8260 = OpExtInst %float %1 Fma %8259 %float_2 %float_n1
       %8261 = OpExtInst %float %1 FAbs %8260
       %8181 = OpExtInst %float %1 Fma %8261 %8178 %8180
       %8177 = OpVectorTimesScalar %v3float %8176 %float_2
       %8179 = OpFMul %float %8178 %float_0_5
               OpBranch %8175
       %8175 = OpLabel
       %8183 = OpIAdd %uint %8182 %uint_1
               OpBranch %8172
       %8185 = OpLabel
       %8262 = OpExtInst %float %1 FMix %float_n1 %float_1 %8180
       %8263 = OpExtInst %float %1 FClamp %8262 %float_0 %float_1
       %8264 = OpFAdd %float %8161 %8263
       %8265 = OpFNegate %float %8264
       %8266 = OpExtInst %float %1 Fma %7735 %8054 %8265
       %8267 = OpExtInst %float %1 Fma %1655 %1657 %8266
       %8268 = OpFMul %float %774 %8267
       %8269 = OpExtInst %float %1 FClamp %8268 %float_0 %float_1
       %8270 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_3
       %8271 = OpLoad %float %8270
       %8272 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_2
       %8273 = OpLoad %float %8272
       %8274 = OpExtInst %float %1 FMix %8271 %8273 %8269
       %8275 = OpCompositeExtract %float %3518 2
       %8276 = OpCompositeConstruct %v3float %8275 %8275 %8275
       %8277 = OpExtInst %v3float %1 Fma %8276 %621 %641
       %8278 = OpDPdx %v3float %593
       %8279 = OpVectorTimesScalar %v3float %8278 %float_2097152
       %8280 = OpDPdx %v3float %8277
       %8281 = OpFAdd %v3float %8279 %8280
       %8282 = OpDPdy %v3float %593
       %8283 = OpVectorTimesScalar %v3float %8282 %float_2097152
       %8284 = OpDPdy %v3float %8277
       %8285 = OpFAdd %v3float %8283 %8284
       %8286 = OpExtInst %v3float %1 Cross %8281 %8285
       %8287 = OpExtInst %v3float %1 Normalize %8286
       %8288 = OpFSub %v3float %8287 %7757
       %8289 = OpFAdd %v3float %8288 %621
       %8290 = OpDot %float %7763 %658
       %8291 = OpExtInst %float %1 NMax %float_0 %8290
       %8292 = OpFSub %float %float_1 %8291
       %8293 = OpExtInst %float %1 FAbs %8292
       %8294 = OpExtInst %float %1 NMax %8293 %float_9_99999975en05
       %8295 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_0
       %8296 = OpLoad %float %8295
       %8297 = OpFOrdLessThanEqual %bool %8294 %float_0
       %8298 = OpExtInst %float %1 Pow %8294 %8296
       %8299 = OpSelect %float %8297 %float_0 %8298
       %8300 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_2
       %8301 = OpLoad %float %8300
       %8302 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_1
       %8303 = OpLoad %float %8302
       %8304 = OpExtInst %float %1 Fma %8299 %8301 %8303
       %8305 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_97 %int_0
       %8306 = OpLoad %float %8305
       %8307 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_3
       %8308 = OpLoad %float %8307
       %8309 = OpExtInst %float %1 FMix %8306 %8308 %8304
       %8310 = OpCompositeConstruct %v3float %8309 %8309 %8309
       %8311 = OpExtInst %v3float %1 FMix %7763 %291 %8310
       %8312 = OpCompositeConstruct %v3float %773 %773 %773
       %8313 = OpExtInst %v3float %1 FMix %8289 %8311 %8312
       %8314 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_97 %int_1
       %8315 = OpLoad %float %8314
       %8316 = OpExtInst %float %1 FMix %8315 %float_0 %773
       %8317 = OpCompositeConstruct %v3float %8316 %8316 %8316
       %8318 = OpExtInst %v3float %1 FMix %8313 %291 %8317
       %8319 = OpExtInst %float %1 Fma %1444 %1653 %1444
       %8320 = OpExtInst %float %1 Fma %8055 %8264 %8055
       %8321 = OpFAdd %float %8319 %8320
       %8322 = OpFMul %float %774 %8321
       %8323 = OpCompositeConstruct %v3float %8322 %8322 %8322
       %8324 = OpExtInst %v3float %1 Fma %8323 %621 %641
       %8325 = OpDPdx %v3float %593
       %8326 = OpVectorTimesScalar %v3float %8325 %float_2097152
       %8327 = OpDPdx %v3float %8324
       %8328 = OpFAdd %v3float %8326 %8327
       %8329 = OpDPdy %v3float %593
       %8330 = OpVectorTimesScalar %v3float %8329 %float_2097152
       %8331 = OpDPdy %v3float %8324
       %8332 = OpFAdd %v3float %8330 %8331
       %8333 = OpExtInst %v3float %1 Cross %8328 %8332
       %8334 = OpExtInst %v3float %1 Normalize %8333
       %8335 = OpFSub %v3float %8334 %7757
       %8336 = OpFAdd %v3float %8335 %621
       %8337 = OpCompositeConstruct %v3float %1444 %1444 %1444
       %8338 = OpExtInst %v3float %1 FMix %8318 %8336 %8337
       %8339 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_97 %int_2
       %8340 = OpLoad %float %8339
       %8341 = OpExtInst %float %1 FMix %8340 %float_1 %8269
       %8342 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_1
       %8343 = OpLoad %float %8342
       %8344 = OpExtInst %float %1 Pow %8294 %8343
       %8345 = OpSelect %float %8297 %float_0 %8344
       %8346 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_3
       %8347 = OpLoad %float %8346
       %8348 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_2
       %8349 = OpLoad %float %8348
       %8350 = OpExtInst %float %1 Fma %8345 %8347 %8349
       %8351 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_0
       %8352 = OpLoad %float %8351
       %8353 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_103 %int_3
       %8354 = OpLoad %float %8353
       %8355 = OpExtInst %float %1 FMix %8352 %8354 %8350
       %8356 = OpExtInst %float %1 FMix %8355 %float_1 %8269
       %8357 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_1
       %8358 = OpLoad %float %8357
       %8359 = OpExtInst %float %1 FMix %float_0 %8358 %8269
       %8360 = OpCompositeConstruct %v3float %8359 %8359 %8359
       %8361 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_107
       %8362 = OpLoad %v4float %8361
       %8363 = OpVectorShuffle %v3float %8362 %8362 0 1 2
       %8364 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_106
       %8365 = OpLoad %v4float %8364
       %8366 = OpVectorShuffle %v3float %8365 %8365 0 1 2
       %8367 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_2
       %8368 = OpLoad %float %8367
       %8369 = OpCompositeConstruct %v3float %8368 %8368 %8368
       %8370 = OpFAdd %v3float %8363 %8366
       %8371 = OpFDiv %v3float %8363 %8370
       %8372 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_107 %int_3
       %8373 = OpLoad %float %8372
       %8374 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_108 %int_0
       %8375 = OpLoad %float %8374
       %8376 = OpFSub %float %696 %float_0_333299994
       %8377 = OpFOrdLessThan %bool %8376 %float_0
               OpSelectionMerge %8378 None
               OpBranchConditional %8377 %8379 %8378
       %8379 = OpLabel
               OpKill
       %8378 = OpLabel
       %8380 = OpAccessChain %_ptr_Uniform_uint %View %uint_20
       %8381 = OpLoad %uint %8380
       %8382 = OpConvertUToF %float %8381
       %8383 = OpVectorTimesScalar %v2float %465 %8382
       %8384 = OpFAdd %v2float %622 %8383
       %8385 = OpDot %float %8384 %466
       %8386 = OpExtInst %float %1 Fract %8385
       %8387 = OpFMul %float %float_52_9829178 %8386
       %8388 = OpExtInst %float %1 Fract %8387
       %8389 = OpIMul %uint %581 %uint_41
       %8390 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %8389
       %8391 = OpLoad %v4float %8390
       %8392 = OpCompositeExtract %float %8391 0
       %8393 = OpBitcast %uint %8392
       %8394 = OpBitwiseAnd %uint %8393 %uint_512
       %8395 = OpINotEqual %bool %8394 %uint_0
       %8396 = OpSelect %uint %8395 %uint_32 %uint_0
       %8397 = OpBitwiseOr %uint %uint_1 %8396
       %8398 = OpLoad %v4float %8390
       %8399 = OpCompositeExtract %float %8398 0
       %8400 = OpBitcast %uint %8399
       %8401 = OpBitwiseAnd %uint %8400 %uint_256
       %8402 = OpINotEqual %bool %8401 %uint_0
       %8403 = OpSelect %uint %8402 %uint_64 %uint_0
       %8404 = OpBitwiseOr %uint %8397 %8403
       %8405 = OpBitwiseAnd %uint %8404 %uint_4294967288
       %8406 = OpBitwiseOr %uint %8405 %uint_4
       %8407 = OpVectorShuffle %v3float %8360 %458 0 1 2
       %8408 = OpExtInst %v3float %1 FClamp %8407 %102 %127
       %8409 = OpVectorShuffle %v3float %611 %611 3 3 3
       %8410 = OpVectorShuffle %v3float %611 %611 0 1 2
       %8411 = OpExtInst %v3float %1 Fma %8408 %8409 %8410
       %8412 = OpExtInst %float %1 FClamp %8356 %float_0 %float_1
       %8413 = OpCompositeExtract %float %613 3
       %8414 = OpCompositeExtract %float %613 0
       %8415 = OpExtInst %float %1 Fma %8412 %8413 %8414
       %8416 = OpCompositeInsert %v4float %8415 %544 1
       %8417 = OpCompositeExtract %float %615 1
       %8418 = OpCompositeExtract %float %615 0
       %8419 = OpExtInst %float %1 Fma %8274 %8417 %8418
       %8420 = OpAccessChain %_ptr_Uniform_float %View %uint_39
       %8421 = OpLoad %float %8420
       %8422 = OpExtInst %float %1 NMax %8421 %8419
       %8423 = OpExtInst %float %1 FClamp %8422 %float_0 %float_1
       %8424 = OpCompositeInsert %v4float %8423 %8416 2
       %8425 = OpExtInst %float %1 FClamp %8341 %float_0 %float_1
       %8426 = OpCompositeInsert %v4float %8425 %8424 3
       %8427 = OpVectorShuffle %v3float %8371 %458 0 1 2
       %8428 = OpExtInst %v3float %1 FClamp %8427 %102 %127
       %8429 = OpVectorShuffle %v4float %458 %8428 4 5 6 3
       %8430 = OpVectorShuffle %v3float %8370 %458 0 1 2
       %8431 = OpExtInst %v3float %1 FClamp %8430 %102 %163
       %8432 = OpCompositeInsert %v4float %float_0 %8429 3
       %8433 = OpVectorShuffle %v3float %8369 %458 0 1 2
       %8434 = OpExtInst %v3float %1 FClamp %8433 %102 %163
       %8435 = OpVectorShuffle %v3float %8411 %458 0 1 2
       %8436 = OpExtInst %v3float %1 Normalize %8338
       %8437 = OpDot %float %8436 %8436
       %8438 = OpBitcast %uint %8437
       %8439 = OpBitwiseAnd %uint %8438 %uint_2139095040
       %8440 = OpINotEqual %bool %8439 %uint_2139095040
       %8441 = OpLogicalNot %bool %8440
               OpSelectionMerge %8442 DontFlatten
               OpBranchConditional %8441 %8443 %8442
       %8443 = OpLabel
       %8444 = OpExtInst %v3float %1 Normalize %621
               OpBranch %8442
       %8442 = OpLabel
       %8445 = OpPhi %v3float %8338 %8378 %8444 %8443
       %8446 = OpPhi %v3float %8436 %8378 %8444 %8443
       %8447 = OpFSub %float %float_1 %8425
       %8448 = OpLoad %v4float %8390
       %8449 = OpCompositeExtract %float %8448 0
       %8450 = OpBitcast %uint %8449
       %8451 = OpBitwiseAnd %uint %8450 %uint_2
       %8452 = OpINotEqual %bool %8451 %uint_0
       %8453 = OpAccessChain %_ptr_Uniform_float %View %uint_38
       %8454 = OpLoad %float %8453
       %8455 = OpFOrdGreaterThan %bool %8454 %float_0
       %8456 = OpLogicalAnd %bool %8452 %8455
               OpSelectionMerge %8457 None
               OpBranchConditional %8456 %8458 %8457
       %8458 = OpLabel
       %8459 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_0
       %8460 = OpLoad %float %8459
               OpBranch %8457
       %8457 = OpLabel
       %8461 = OpPhi %float %float_1 %8442 %8460 %8458
       %8462 = OpLoad %v4float %8390
       %8463 = OpCompositeExtract %float %8462 0
       %8464 = OpBitcast %uint %8463
       %8465 = OpBitwiseAnd %uint %8464 %uint_4
       %8466 = OpINotEqual %bool %8465 %uint_0
               OpSelectionMerge %8467 DontFlatten
               OpBranchConditional %8466 %8468 %8467
       %8468 = OpLabel
       %8469 = OpVectorTimesScalar %v3float %593 %float_2097152
       %8470 = OpFAdd %v3float %8469 %641
       %8471 = OpAccessChain %_ptr_Uniform_v3float %View %uint_33
       %8472 = OpLoad %v3float %8471
       %8473 = OpAccessChain %_ptr_Uniform_v3float %View %uint_34
       %8474 = OpLoad %v3float %8473
       %8475 = OpExtInst %v3float %1 Fma %8470 %8472 %8474
       %8476 = OpExtInst %v3float %1 FClamp %8475 %102 %303
       %8477 = OpAccessChain %_ptr_Uniform_v3float %View %uint_35
       %8478 = OpLoad %v3float %8477
       %8479 = OpFMul %v3float %8476 %8478
       %8480 = OpCompositeExtract %float %8479 0
       %8481 = OpCompositeExtract %float %8479 1
       %8482 = OpCompositeExtract %float %8479 2
       %8483 = OpConvertFToS %int %8480
       %8484 = OpConvertFToS %int %8481
       %8485 = OpConvertFToS %int %8482
       %8486 = OpCompositeConstruct %v4int %8483 %8484 %8485 %int_0
       %8487 = OpVectorShuffle %v3int %8486 %8486 0 1 2
       %8488 = OpLoad %type_3d_image %View_VolumetricLightmapIndirectionTexture
       %8489 = OpImageFetch %v4uint %8488 %8487 Lod %int_0
       %8490 = OpConvertUToF %v4float %8489
       %8491 = OpAccessChain %_ptr_Uniform_float %View %uint_36
       %8492 = OpLoad %float %8491
       %8493 = OpFAdd %float %8492 %float_1
       %8494 = OpVectorShuffle %v3float %8490 %8490 0 1 2
       %8495 = OpVectorTimesScalar %v3float %8494 %8493
       %8496 = OpCompositeExtract %float %8490 3
       %8497 = OpCompositeConstruct %v3float %8496 %8496 %8496
       %8498 = OpFDiv %v3float %8479 %8497
       %8499 = OpExtInst %v3float %1 Fract %8498
       %8500 = OpVectorTimesScalar %v3float %8499 %8492
       %8501 = OpFAdd %v3float %8495 %8500
       %8502 = OpFAdd %v3float %8501 %137
       %8503 = OpAccessChain %_ptr_Uniform_v3float %View %uint_37
       %8504 = OpLoad %v3float %8503
       %8505 = OpFMul %v3float %8502 %8504
       %8506 = OpLoad %type_3d_image_0 %View_DirectionalLightShadowingBrickTexture
       %8507 = OpLoad %type_sampler %View_SharedBilinearClampedSampler
       %8508 = OpSampledImage %type_sampled_image_0 %8506 %8507
       %8509 = OpImageSampleExplicitLod %v4float %8508 %8505 Lod %float_0
       %8510 = OpCompositeExtract %float %8509 0
               OpBranch %8467
       %8467 = OpLabel
       %8511 = OpPhi %float %8461 %8457 %8510 %8468
       %8512 = OpCompositeConstruct %v4float %8511 %float_1 %float_1 %float_1
       %8513 = OpFOrdEqual %v4bool %8512 %98
       %8514 = OpAll %bool %8513
       %8515 = OpFOrdEqual %v4bool %8512 %117
       %8516 = OpAll %bool %8515
       %8517 = OpLogicalNot %bool %8514
       %8518 = OpLogicalNot %bool %8516
       %8519 = OpLogicalAnd %bool %8517 %8518
               OpSelectionMerge %8520 None
               OpBranchConditional %8519 %8521 %8522
       %8522 = OpLabel
               OpSelectionMerge %8523 None
               OpBranchConditional %8514 %8524 %8525
       %8525 = OpLabel
               OpSelectionMerge %8526 None
               OpBranchConditional %8516 %8527 %8526
       %8527 = OpLabel
       %8528 = OpBitwiseOr %uint %8406 %uint_0
       %8529 = OpBitwiseOr %uint %8528 %uint_0
               OpBranch %8526
       %8526 = OpLabel
       %8530 = OpPhi %uint %8406 %8525 %8529 %8527
               OpBranch %8523
       %8524 = OpLabel
       %8531 = OpBitwiseOr %uint %8406 %uint_0
       %8532 = OpBitwiseOr %uint %8531 %uint_16
               OpBranch %8523
       %8523 = OpLabel
       %8533 = OpPhi %uint %8530 %8526 %8532 %8524
               OpBranch %8520
       %8521 = OpLabel
       %8534 = OpBitwiseOr %uint %8406 %uint_8
               OpBranch %8520
       %8520 = OpLabel
       %8535 = OpPhi %uint %8533 %8523 %8534 %8521
       %8536 = OpFMul %float %float_0_0799999982 %8415
       %8537 = OpCompositeConstruct %v3float %8536 %8536 %8536
       %8538 = OpAccessChain %_ptr_Uniform_float %View %uint_15 %int_3
       %8539 = OpLoad %float %8538
       %8540 = OpVectorTimesScalar %v3float %8435 %8539
       %8541 = OpFAdd %v3float %8540 %8410
       %8542 = OpAccessChain %_ptr_Uniform_float %View %uint_16 %int_3
       %8543 = OpLoad %float %8542
       %8544 = OpVectorTimesScalar %v3float %8537 %8543
       %8545 = OpVectorShuffle %v3float %613 %613 0 1 2
       %8546 = OpFAdd %v3float %8544 %8545
       %8547 = OpAccessChain %_ptr_Uniform_float %View %uint_25
       %8548 = OpLoad %float %8547
       %8549 = OpFOrdNotEqual %bool %8548 %float_0
               OpSelectionMerge %8550 None
               OpBranchConditional %8549 %8551 %8550
       %8551 = OpLabel
       %8552 = OpVectorTimesScalar %v3float %8546 %float_0_449999988
       %8553 = OpFAdd %v3float %8541 %8552
               OpBranch %8550
       %8550 = OpLabel
       %8554 = OpPhi %v3float %8541 %8520 %8553 %8551
       %8555 = OpCompositeConstruct %v3bool %8549 %8549 %8549
       %8556 = OpSelect %v3float %8555 %102 %8546
               OpSelectionMerge %8557 None
               OpBranchConditional %8455 %8558 %8557
       %8558 = OpLabel
       %8559 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_1 %int_0
       %8560 = OpLoad %v4float %8559
       %8561 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_0
       %8562 = OpLoad %v4float %8561
       %8563 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_3 %uint_0
       %8564 = OpLoad %float %8563
       %8565 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_1 %int_1
       %8566 = OpLoad %v4float %8565
       %8567 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_1
       %8568 = OpLoad %v4float %8567
       %8569 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_3 %uint_1
       %8570 = OpLoad %float %8569
       %8571 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_1 %int_2
       %8572 = OpLoad %v4float %8571
       %8573 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_2
       %8574 = OpLoad %v4float %8573
       %8575 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_3 %uint_2
       %8576 = OpLoad %float %8575
       %8577 = OpCompositeExtract %float %8446 1
       %8578 = OpFMul %float %float_n0_488602996 %8577
       %8579 = OpCompositeInsert %v4float %8578 %552 1
       %8580 = OpCompositeExtract %float %8446 2
       %8581 = OpFMul %float %float_0_488602996 %8580
       %8582 = OpCompositeInsert %v4float %8581 %8579 2
       %8583 = OpCompositeExtract %float %8446 0
       %8584 = OpFMul %float %float_n0_488602996 %8583
       %8585 = OpCompositeInsert %v4float %8584 %8582 3
       %8586 = OpFMul %v3float %8446 %8446
       %8587 = OpFMul %float %float_1_09254801 %8583
       %8588 = OpFMul %float %8587 %8577
       %8589 = OpCompositeInsert %v4float %8588 %541 0
       %8590 = OpFMul %float %float_n1_09254801 %8577
       %8591 = OpFMul %float %8590 %8580
       %8592 = OpCompositeInsert %v4float %8591 %8589 1
       %8593 = OpCompositeExtract %float %8586 2
       %8594 = OpExtInst %float %1 Fma %float_3 %8593 %float_n1
       %8595 = OpFMul %float %float_0_315391988 %8594
       %8596 = OpCompositeInsert %v4float %8595 %8592 2
       %8597 = OpFMul %float %float_n1_09254801 %8583
       %8598 = OpFMul %float %8597 %8580
       %8599 = OpCompositeInsert %v4float %8598 %8596 3
       %8600 = OpCompositeExtract %float %8586 0
       %8601 = OpCompositeExtract %float %8586 1
       %8602 = OpFSub %float %8600 %8601
       %8603 = OpCompositeInsert %v4float %float_0_886227548 %8585 0
       %8604 = OpVectorShuffle %v3float %8603 %8603 1 2 3
       %8605 = OpVectorTimesScalar %v3float %8604 %float_2_09439516
       %8606 = OpVectorShuffle %v4float %8603 %8605 0 4 5 6
       %8607 = OpVectorTimesScalar %v4float %8599 %float_0_785398185
       %8608 = OpFMul %float %8602 %float_0_429042608
       %8609 = OpDot %float %8560 %8606
       %8610 = OpDot %float %8562 %8607
       %8611 = OpFAdd %float %8609 %8610
       %8612 = OpExtInst %float %1 Fma %8564 %8608 %8611
       %8613 = OpCompositeInsert %v3float %8612 %553 0
       %8614 = OpDot %float %8566 %8606
       %8615 = OpDot %float %8568 %8607
       %8616 = OpFAdd %float %8614 %8615
       %8617 = OpExtInst %float %1 Fma %8570 %8608 %8616
       %8618 = OpCompositeInsert %v3float %8617 %8613 1
       %8619 = OpDot %float %8572 %8606
       %8620 = OpDot %float %8574 %8607
       %8621 = OpFAdd %float %8619 %8620
       %8622 = OpExtInst %float %1 Fma %8576 %8608 %8621
       %8623 = OpCompositeInsert %v3float %8622 %8618 2
       %8624 = OpExtInst %v3float %1 NMax %102 %8623
               OpBranch %8557
       %8557 = OpLabel
       %8625 = OpPhi %v3float %102 %8550 %8624 %8558
       %8626 = OpAccessChain %_ptr_Uniform_v3float %View %uint_24
       %8627 = OpLoad %v3float %8626
       %8628 = OpFMul %v3float %8625 %8627
       %8629 = OpFMul %v3float %8628 %8554
       %8630 = OpVectorTimesScalar %v3float %8435 %float_2_04040003
       %8631 = OpFSub %v3float %8630 %174
       %8632 = OpVectorTimesScalar %v3float %8435 %float_n4_79510021
       %8633 = OpFAdd %v3float %8632 %177
       %8634 = OpVectorTimesScalar %v3float %8435 %float_2_75519991
       %8635 = OpFAdd %v3float %8634 %180
       %8636 = OpVectorTimesScalar %v3float %8631 %float_1
       %8637 = OpFAdd %v3float %8636 %8633
       %8638 = OpVectorTimesScalar %v3float %8637 %float_1
       %8639 = OpFAdd %v3float %8638 %8635
       %8640 = OpVectorTimesScalar %v3float %8639 %float_1
       %8641 = OpExtInst %v3float %1 NMax %127 %8640
       %8642 = OpFMul %v3float %8629 %8641
       %8643 = OpVectorTimesScalar %v3float %8554 %8425
       %8644 = OpVectorTimesScalar %v3float %8642 %8425
       %8645 = OpAccessChain %_ptr_Uniform_v4float %View %uint_11
       %8646 = OpLoad %v4float %8645
       %8647 = OpVectorShuffle %v2float %8646 %8646 2 3
       %8648 = OpFMul %v2float %624 %8647
       %8649 = OpConvertFToU %v2uint %8648
       %8650 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_3
       %8651 = OpLoad %uint %8650
       %8652 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_4
       %8653 = OpLoad %v3float %8652
       %8654 = OpAccessChain %_ptr_Uniform_v3int %OpaqueBasePass %uint_2
       %8655 = OpLoad %v3int %8654
       %8656 = OpCompositeExtract %float %8653 0
       %8657 = OpCompositeExtract %float %8653 1
       %8658 = OpExtInst %float %1 Fma %585 %8656 %8657
       %8659 = OpExtInst %float %1 Log2 %8658
       %8660 = OpCompositeExtract %float %8653 2
       %8661 = OpFMul %float %8659 %8660
       %8662 = OpExtInst %float %1 NMax %float_0 %8661
       %8663 = OpConvertFToU %uint %8662
       %8664 = OpCompositeExtract %int %8655 2
       %8665 = OpISub %int %8664 %int_1
       %8666 = OpBitcast %uint %8665
       %8667 = OpExtInst %uint %1 UMin %8663 %8666
       %8668 = OpCompositeConstruct %v2uint %8651 %8651
       %8669 = OpBitwiseAnd %v2uint %8668 %306
       %8670 = OpShiftRightLogical %v2uint %8649 %8669
       %8671 = OpCompositeExtract %uint %8670 0
       %8672 = OpCompositeExtract %uint %8670 1
       %8673 = OpCompositeExtract %int %8655 1
       %8674 = OpBitcast %uint %8673
       %8675 = OpIMul %uint %8667 %8674
       %8676 = OpIAdd %uint %8675 %8672
       %8677 = OpCompositeExtract %int %8655 0
       %8678 = OpBitcast %uint %8677
       %8679 = OpIMul %uint %8676 %8678
       %8680 = OpIAdd %uint %8679 %8671
       %8681 = OpAccessChain %_ptr_Uniform_uint %SingleLayerWater %uint_3
       %8682 = OpLoad %uint %8681
       %8683 = OpINotEqual %bool %8682 %uint_0
       %8684 = OpAccessChain %_ptr_Uniform_uint %SingleLayerWater %uint_4
       %8685 = OpLoad %uint %8684
       %8686 = OpINotEqual %bool %8685 %uint_0
       %8687 = OpLogicalAnd %bool %true %8686
       %8688 = OpExtInst %v2float %1 Trunc %124
       %8689 = OpConvertFToS %v2int %8688
       %8690 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_18
       %8691 = OpLoad %int %8690
       %8692 = OpINotEqual %bool %8691 %int_0
               OpSelectionMerge %8693 DontFlatten
               OpBranchConditional %8692 %8694 %8693
       %8694 = OpLabel
       %8695 = OpCompositeExtract %int %8689 0
       %8696 = OpCompositeExtract %int %8689 1
       %8697 = OpCompositeConstruct %v3int %8695 %8696 %int_0
       %8698 = OpVectorShuffle %v2int %8697 %8697 0 1
       %8699 = OpLoad %type_2d_image %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture
       %8700 = OpImageFetch %v4float %8699 %8698 Lod %int_0
               OpBranch %8693
       %8693 = OpLabel
       %8701 = OpPhi %v4float %117 %8557 %8700 %8694
       %8702 = OpFMul %v4float %8701 %8701
       %8703 = OpLoad %v4float %8390
       %8704 = OpCompositeExtract %float %8703 0
       %8705 = OpBitcast %uint %8704
       %8706 = OpBitwiseAnd %uint %8705 %uint_2048
       %8707 = OpINotEqual %bool %8706 %uint_0
       %8708 = OpSelect %uint %8707 %uint_1 %uint_0
       %8709 = OpBitwiseAnd %uint %8705 %uint_4096
       %8710 = OpINotEqual %bool %8709 %uint_0
       %8711 = OpSelect %uint %8710 %uint_1 %uint_0
       %8712 = OpBitwiseAnd %uint %8705 %uint_8192
       %8713 = OpINotEqual %bool %8712 %uint_0
       %8714 = OpSelect %uint %8713 %uint_1 %uint_0
       %8715 = OpShiftLeftLogical %uint %8711 %uint_1
       %8716 = OpBitwiseOr %uint %8708 %8715
       %8717 = OpShiftLeftLogical %uint %8714 %uint_2
       %8718 = OpBitwiseOr %uint %8716 %8717
       %8719 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_1
       %8720 = OpLoad %uint %8719
       %8721 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_8
       %8722 = OpLoad %uint %8721
       %8723 = OpAccessChain %_ptr_Uniform_v2float %OpaqueBasePass %uint_9
       %8724 = OpLoad %v2float %8723
       %8725 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_7
       %8726 = OpLoad %v3float %8725
       %8727 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_5
       %8728 = OpLoad %v3float %8727
       %8729 = OpAccessChain %_ptr_Uniform_float %OpaqueBasePass %uint_6
       %8730 = OpLoad %float %8729
       %8731 = OpINotEqual %bool %8720 %uint_0
               OpSelectionMerge %8732 DontFlatten
               OpBranchConditional %8731 %8733 %8732
       %8733 = OpLabel
       %8734 = OpBitwiseAnd %uint %8722 %uint_2
       %8735 = OpShiftRightLogical %uint %8734 %uint_1
       %8736 = OpConvertUToF %float %8735
       %8737 = OpBitwiseAnd %uint %8722 %uint_4
       %8738 = OpShiftRightLogical %uint %8737 %uint_2
       %8739 = OpConvertUToF %float %8738
       %8740 = OpBitwiseAnd %uint %8722 %uint_8
       %8741 = OpShiftRightLogical %uint %8740 %uint_3
       %8742 = OpConvertUToF %float %8741
       %8743 = OpCompositeConstruct %v4float %550 %8736 %8739 %8742
       %8744 = OpShiftRightLogical %uint %8722 %uint_8
       %8745 = OpBitwiseAnd %uint %8744 %uint_7
       %8746 = OpCompositeInsert %v4float %float_1 %8743 0
       %8747 = OpCompositeInsert %v4float %float_1 %8512 0
       %8748 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_10
       %8749 = OpLoad %uint %8748
       %8750 = OpUGreaterThan %bool %8749 %uint_0
               OpSelectionMerge %8751 None
               OpBranchConditional %8750 %8752 %8751
       %8752 = OpLabel
       %8753 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_12
       %8754 = OpLoad %v4float %8753
       %8755 = OpCompositeConstruct %v4float %644 %644 %644 %644
       %8756 = OpFOrdGreaterThanEqual %v4bool %8755 %8754
       %8757 = OpSelect %v4float %8756 %117 %98
       %8758 = OpCompositeExtract %float %8757 0
       %8759 = OpCompositeExtract %float %8757 1
       %8760 = OpFAdd %float %8758 %8759
       %8761 = OpCompositeExtract %float %8757 2
       %8762 = OpFAdd %float %8760 %8761
       %8763 = OpCompositeExtract %float %8757 3
       %8764 = OpFAdd %float %8762 %8763
       %8765 = OpConvertFToU %uint %8764
       %8766 = OpULessThan %bool %8765 %8749
               OpSelectionMerge %8767 None
               OpBranchConditional %8766 %8768 %8767
       %8768 = OpLabel
       %8769 = OpCompositeExtract %float %640 0
       %8770 = OpCompositeExtract %float %640 1
       %8771 = OpCompositeExtract %float %640 2
       %8772 = OpCompositeConstruct %v4float %8769 %8770 %8771 %float_1
       %8773 = OpAccessChain %_ptr_Uniform_mat4v4float %OpaqueBasePass %uint_13 %8765
       %8774 = OpLoad %mat4v4float %8773
       %8775 = OpMatrixTimesVector %v4float %8774 %8772
       %8776 = OpVectorShuffle %v2float %8775 %8775 0 1
       %8777 = OpCompositeExtract %float %8775 3
       %8778 = OpCompositeConstruct %v2float %8777 %8777
       %8779 = OpFDiv %v2float %8776 %8778
       %8780 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_14 %8765
       %8781 = OpLoad %v4float %8780
       %8782 = OpVectorShuffle %v2float %8781 %8781 0 1
       %8783 = OpFOrdGreaterThanEqual %v2bool %8779 %8782
       %8784 = OpVectorShuffle %v2float %8781 %8781 2 3
       %8785 = OpFOrdLessThanEqual %v2bool %8779 %8784
       %8786 = OpCompositeExtract %bool %8783 0
       %8787 = OpCompositeExtract %bool %8785 0
       %8788 = OpLogicalAnd %bool %8786 %8787
       %8789 = OpCompositeExtract %bool %8783 1
       %8790 = OpCompositeExtract %bool %8785 1
       %8791 = OpLogicalAnd %bool %8789 %8790
       %8792 = OpCompositeConstruct %v2bool %8788 %8791
       %8793 = OpAll %bool %8792
               OpSelectionMerge %8794 None
               OpBranchConditional %8793 %8795 %8794
       %8795 = OpLabel
       %8796 = OpLoad %type_2d_image %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas
       %8797 = OpLoad %type_sampler %OpaqueBasePass_Shared_Forward_ShadowmapSampler
       %8798 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_15
       %8799 = OpLoad %v4float %8798
       %8800 = OpCompositeExtract %float %8775 2
       %8801 = OpFSub %float %float_1 %8800
       %8802 = OpVectorShuffle %v2float %8799 %8799 0 1
       %8803 = OpExtInst %v2float %1 Fma %8779 %8802 %528
       %8804 = OpExtInst %v2float %1 Fract %8803
       %8805 = OpExtInst %v2float %1 Floor %8803
       %8806 = OpFAdd %v2float %8805 %313
       %8807 = OpVectorShuffle %v2float %8799 %8799 2 3
       %8808 = OpFMul %v2float %8806 %8807
       %8809 = OpSampledImage %type_sampled_image %8796 %8797
       %8810 = OpImageGather %v4float %8809 %8808 %int_0 None
       %8811 = OpExtInst %float %1 Fma %8801 %float_4000 %float_n1
       %8812 = OpVectorTimesScalar %v4float %8810 %float_4000
       %8813 = OpCompositeConstruct %v4float %8811 %8811 %8811 %8811
       %8814 = OpFSub %v4float %8812 %8813
       %8815 = OpExtInst %v4float %1 FClamp %8814 %98 %117
       %8816 = OpVectorShuffle %v2float %8815 %8815 3 0
       %8817 = OpVectorShuffle %v2float %8815 %8815 2 1
       %8818 = OpVectorShuffle %v2float %8804 %8804 0 0
       %8819 = OpExtInst %v2float %1 FMix %8816 %8817 %8818
       %8820 = OpCompositeExtract %float %8819 0
       %8821 = OpCompositeExtract %float %8819 1
       %8822 = OpCompositeExtract %float %8804 1
       %8823 = OpExtInst %float %1 FMix %8820 %8821 %8822
               OpBranch %8794
       %8794 = OpLabel
       %8824 = OpPhi %float %float_1 %8768 %8823 %8795
               OpBranch %8767
       %8767 = OpLabel
       %8825 = OpPhi %float %float_1 %8752 %8824 %8794
               OpBranch %8751
       %8751 = OpLabel
       %8826 = OpPhi %float %float_1 %8733 %8825 %8767
       %8827 = OpLogicalNot %bool %8683
       %8828 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_11
       %8829 = OpLoad %int %8828
       %8830 = OpINotEqual %bool %8829 %int_n1
       %8831 = OpLogicalAnd %bool %8827 %8830
               OpSelectionMerge %8832 DontFlatten
               OpBranchConditional %8831 %8833 %8832
       %8833 = OpLabel
               OpSelectionMerge %8834 None
               OpSwitch %uint_0 %8835
       %8835 = OpLabel
       %8836 = OpExtInst %float %1 NMax %float_0 %float_0
       %8837 = OpBitcast %uint %8829
       %8838 = OpIMul %uint %8837 %uint_336
       %8839 = OpIAdd %uint %8838 %uint_96
       %8840 = OpShiftRightLogical %uint %8839 %uint_2
       %8841 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8840
       %8842 = OpLoad %uint %8841
       %8843 = OpIAdd %uint %8840 %uint_1
       %8844 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8843
       %8845 = OpLoad %uint %8844
       %8846 = OpIAdd %uint %8840 %uint_2
       %8847 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8846
       %8848 = OpLoad %uint %8847
       %8849 = OpIAdd %uint %8840 %uint_3
       %8850 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8849
       %8851 = OpLoad %uint %8850
       %8852 = OpCompositeConstruct %v4uint %8842 %8845 %8848 %8851
       %8853 = OpBitcast %v4float %8852
       %8854 = OpCompositeInsert %mat4v4float %8853 %542 2
       %8855 = OpIAdd %uint %8838 %uint_128
       %8856 = OpShiftRightLogical %uint %8855 %uint_2
       %8857 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8856
       %8858 = OpLoad %uint %8857
       %8859 = OpIAdd %uint %8856 %uint_1
       %8860 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8859
       %8861 = OpLoad %uint %8860
       %8862 = OpIAdd %uint %8856 %uint_2
       %8863 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8862
       %8864 = OpLoad %uint %8863
       %8865 = OpIAdd %uint %8856 %uint_3
       %8866 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8865
       %8867 = OpLoad %uint %8866
       %8868 = OpCompositeConstruct %v4uint %8858 %8861 %8864 %8867
       %8869 = OpBitcast %v4float %8868
       %8870 = OpCompositeInsert %mat4v4float %8869 %542 0
       %8871 = OpIAdd %uint %8838 %uint_144
       %8872 = OpShiftRightLogical %uint %8871 %uint_2
       %8873 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8872
       %8874 = OpLoad %uint %8873
       %8875 = OpIAdd %uint %8872 %uint_1
       %8876 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8875
       %8877 = OpLoad %uint %8876
       %8878 = OpIAdd %uint %8872 %uint_2
       %8879 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8878
       %8880 = OpLoad %uint %8879
       %8881 = OpIAdd %uint %8872 %uint_3
       %8882 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8881
       %8883 = OpLoad %uint %8882
       %8884 = OpCompositeConstruct %v4uint %8874 %8877 %8880 %8883
       %8885 = OpBitcast %v4float %8884
       %8886 = OpCompositeInsert %mat4v4float %8885 %8870 1
       %8887 = OpIAdd %uint %8838 %uint_160
       %8888 = OpShiftRightLogical %uint %8887 %uint_2
       %8889 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8888
       %8890 = OpLoad %uint %8889
       %8891 = OpIAdd %uint %8888 %uint_1
       %8892 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8891
       %8893 = OpLoad %uint %8892
       %8894 = OpIAdd %uint %8888 %uint_2
       %8895 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8894
       %8896 = OpLoad %uint %8895
       %8897 = OpIAdd %uint %8888 %uint_3
       %8898 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8897
       %8899 = OpLoad %uint %8898
       %8900 = OpCompositeConstruct %v4uint %8890 %8893 %8896 %8899
       %8901 = OpBitcast %v4float %8900
       %8902 = OpCompositeInsert %mat4v4float %8901 %8886 2
       %8903 = OpIAdd %uint %8838 %uint_176
       %8904 = OpShiftRightLogical %uint %8903 %uint_2
       %8905 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8904
       %8906 = OpLoad %uint %8905
       %8907 = OpIAdd %uint %8904 %uint_1
       %8908 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8907
       %8909 = OpLoad %uint %8908
       %8910 = OpIAdd %uint %8904 %uint_2
       %8911 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8910
       %8912 = OpLoad %uint %8911
       %8913 = OpIAdd %uint %8904 %uint_3
       %8914 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8913
       %8915 = OpLoad %uint %8914
       %8916 = OpCompositeConstruct %v4uint %8906 %8909 %8912 %8915
       %8917 = OpBitcast %v4float %8916
       %8918 = OpCompositeInsert %mat4v4float %8917 %8902 3
       %8919 = OpIAdd %uint %8838 %uint_256
       %8920 = OpShiftRightLogical %uint %8919 %uint_2
       %8921 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8920
       %8922 = OpLoad %uint %8921
       %8923 = OpIAdd %uint %8920 %uint_1
       %8924 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8923
       %8925 = OpLoad %uint %8924
       %8926 = OpIAdd %uint %8920 %uint_2
       %8927 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8926
       %8928 = OpLoad %uint %8927
       %8929 = OpCompositeConstruct %v3uint %8922 %8925 %8928
       %8930 = OpBitcast %v3float %8929
       %8931 = OpIAdd %uint %8838 %uint_268
       %8932 = OpShiftRightLogical %uint %8931 %uint_2
       %8933 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8932
       %8934 = OpLoad %uint %8933
       %8935 = OpIAdd %uint %8838 %uint_272
       %8936 = OpShiftRightLogical %uint %8935 %uint_2
       %8937 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8936
       %8938 = OpLoad %uint %8937
       %8939 = OpIAdd %uint %8936 %uint_1
       %8940 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8939
       %8941 = OpLoad %uint %8940
       %8942 = OpIAdd %uint %8936 %uint_2
       %8943 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8942
       %8944 = OpLoad %uint %8943
       %8945 = OpCompositeConstruct %v3uint %8938 %8941 %8944
       %8946 = OpBitcast %v3float %8945
       %8947 = OpIAdd %uint %8838 %uint_288
       %8948 = OpShiftRightLogical %uint %8947 %uint_2
       %8949 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8948
       %8950 = OpLoad %uint %8949
       %8951 = OpIAdd %uint %8948 %uint_1
       %8952 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8951
       %8953 = OpLoad %uint %8952
       %8954 = OpIAdd %uint %8948 %uint_2
       %8955 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8954
       %8956 = OpLoad %uint %8955
       %8957 = OpCompositeConstruct %v3uint %8950 %8953 %8956
       %8958 = OpBitcast %v3float %8957
       %8959 = OpIAdd %uint %8838 %uint_300
       %8960 = OpShiftRightLogical %uint %8959 %uint_2
       %8961 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8960
       %8962 = OpLoad %uint %8961
       %8963 = OpBitcast %float %8962
       %8964 = OpIAdd %uint %8838 %uint_312
       %8965 = OpShiftRightLogical %uint %8964 %uint_2
       %8966 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8965
       %8967 = OpLoad %uint %8966
       %8968 = OpBitcast %int %8967
       %8969 = OpIAdd %uint %8838 %uint_316
       %8970 = OpShiftRightLogical %uint %8969 %uint_2
       %8971 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8970
       %8972 = OpLoad %uint %8971
       %8973 = OpBitcast %int %8972
       %8974 = OpFNegate %v3float %8930
       %8975 = OpFNegate %v3float %8958
       %8976 = OpIEqual %bool %8934 %uint_0
               OpSelectionMerge %8977 None
               OpBranchConditional %8976 %8978 %8979
       %8979 = OpLabel
       %8980 = OpFAdd %v3float %593 %8930
       %8981 = OpFAdd %v3float %641 %8946
       %8982 = OpVectorTimesScalar %v3float %8980 %float_2097152
       %8983 = OpFAdd %v3float %8982 %8981
       %8984 = OpINotEqual %bool %8934 %uint_2
               OpSelectionMerge %8985 None
               OpBranchConditional %8984 %8986 %8985
       %8986 = OpLabel
               OpSelectionMerge %8987 None
               OpSwitch %uint_0 %8988
       %8988 = OpLabel
       %8989 = OpCompositeExtract %float %8983 0
       %8990 = OpExtInst %float %1 FAbs %8989
       %8991 = OpCompositeExtract %float %8983 1
       %8992 = OpExtInst %float %1 FAbs %8991
       %8993 = OpFOrdGreaterThanEqual %bool %8990 %8992
       %8994 = OpCompositeExtract %float %8983 2
       %8995 = OpExtInst %float %1 FAbs %8994
       %8996 = OpFOrdGreaterThanEqual %bool %8990 %8995
       %8997 = OpLogicalAnd %bool %8993 %8996
               OpSelectionMerge %8998 None
               OpBranchConditional %8997 %8999 %9000
       %9000 = OpLabel
       %9001 = OpFOrdGreaterThan %bool %8992 %8995
               OpSelectionMerge %9002 None
               OpBranchConditional %9001 %9003 %9004
       %9004 = OpLabel
       %9005 = OpFOrdGreaterThan %bool %8994 %float_0
       %9006 = OpSelect %uint %9005 %uint_4 %uint_5
               OpBranch %8987
       %9003 = OpLabel
       %9007 = OpFOrdGreaterThan %bool %8991 %float_0
       %9008 = OpSelect %uint %9007 %uint_2 %uint_3
               OpBranch %8987
       %9002 = OpLabel
               OpUnreachable
       %8999 = OpLabel
       %9009 = OpFOrdGreaterThan %bool %8989 %float_0
       %9010 = OpSelect %uint %9009 %uint_0 %uint_1
               OpBranch %8987
       %8998 = OpLabel
               OpUnreachable
       %8987 = OpLabel
       %9011 = OpPhi %uint %9006 %9004 %9008 %9003 %9010 %8999
       %9012 = OpIAdd %uint %8837 %9011
       %9013 = OpBitcast %int %9012
       %9014 = OpBitcast %uint %9013
       %9015 = OpIMul %uint %9014 %uint_336
       %9016 = OpIAdd %uint %9015 %uint_96
       %9017 = OpShiftRightLogical %uint %9016 %uint_2
       %9018 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9017
       %9019 = OpLoad %uint %9018
       %9020 = OpIAdd %uint %9017 %uint_1
       %9021 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9020
       %9022 = OpLoad %uint %9021
       %9023 = OpIAdd %uint %9017 %uint_2
       %9024 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9023
       %9025 = OpLoad %uint %9024
       %9026 = OpIAdd %uint %9017 %uint_3
       %9027 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9026
       %9028 = OpLoad %uint %9027
       %9029 = OpCompositeConstruct %v4uint %9019 %9022 %9025 %9028
       %9030 = OpBitcast %v4float %9029
       %9031 = OpCompositeInsert %mat4v4float %9030 %542 2
       %9032 = OpIAdd %uint %9015 %uint_128
       %9033 = OpShiftRightLogical %uint %9032 %uint_2
       %9034 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9033
       %9035 = OpLoad %uint %9034
       %9036 = OpIAdd %uint %9033 %uint_1
       %9037 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9036
       %9038 = OpLoad %uint %9037
       %9039 = OpIAdd %uint %9033 %uint_2
       %9040 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9039
       %9041 = OpLoad %uint %9040
       %9042 = OpIAdd %uint %9033 %uint_3
       %9043 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9042
       %9044 = OpLoad %uint %9043
       %9045 = OpCompositeConstruct %v4uint %9035 %9038 %9041 %9044
       %9046 = OpBitcast %v4float %9045
       %9047 = OpCompositeInsert %mat4v4float %9046 %542 0
       %9048 = OpIAdd %uint %9015 %uint_144
       %9049 = OpShiftRightLogical %uint %9048 %uint_2
       %9050 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9049
       %9051 = OpLoad %uint %9050
       %9052 = OpIAdd %uint %9049 %uint_1
       %9053 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9052
       %9054 = OpLoad %uint %9053
       %9055 = OpIAdd %uint %9049 %uint_2
       %9056 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9055
       %9057 = OpLoad %uint %9056
       %9058 = OpIAdd %uint %9049 %uint_3
       %9059 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9058
       %9060 = OpLoad %uint %9059
       %9061 = OpCompositeConstruct %v4uint %9051 %9054 %9057 %9060
       %9062 = OpBitcast %v4float %9061
       %9063 = OpCompositeInsert %mat4v4float %9062 %9047 1
       %9064 = OpIAdd %uint %9015 %uint_160
       %9065 = OpShiftRightLogical %uint %9064 %uint_2
       %9066 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9065
       %9067 = OpLoad %uint %9066
       %9068 = OpIAdd %uint %9065 %uint_1
       %9069 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9068
       %9070 = OpLoad %uint %9069
       %9071 = OpIAdd %uint %9065 %uint_2
       %9072 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9071
       %9073 = OpLoad %uint %9072
       %9074 = OpIAdd %uint %9065 %uint_3
       %9075 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9074
       %9076 = OpLoad %uint %9075
       %9077 = OpCompositeConstruct %v4uint %9067 %9070 %9073 %9076
       %9078 = OpBitcast %v4float %9077
       %9079 = OpCompositeInsert %mat4v4float %9078 %9063 2
       %9080 = OpIAdd %uint %9015 %uint_176
       %9081 = OpShiftRightLogical %uint %9080 %uint_2
       %9082 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9081
       %9083 = OpLoad %uint %9082
       %9084 = OpIAdd %uint %9081 %uint_1
       %9085 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9084
       %9086 = OpLoad %uint %9085
       %9087 = OpIAdd %uint %9081 %uint_2
       %9088 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9087
       %9089 = OpLoad %uint %9088
       %9090 = OpIAdd %uint %9081 %uint_3
       %9091 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9090
       %9092 = OpLoad %uint %9091
       %9093 = OpCompositeConstruct %v4uint %9083 %9086 %9089 %9092
       %9094 = OpBitcast %v4float %9093
       %9095 = OpCompositeInsert %mat4v4float %9094 %9079 3
               OpBranch %8985
       %8985 = OpLabel
       %9096 = OpPhi %mat4v4float %8854 %8979 %9031 %8987
       %9097 = OpPhi %int %8829 %8979 %9013 %8987
       %9098 = OpPhi %mat4v4float %8918 %8979 %9095 %8987
       %9099 = OpCompositeExtract %float %8983 0
       %9100 = OpCompositeExtract %float %8983 1
       %9101 = OpCompositeExtract %float %8983 2
       %9102 = OpCompositeConstruct %v4float %9099 %9100 %9101 %float_1
       %9103 = OpMatrixTimesVector %v4float %9098 %9102
       %9104 = OpCompositeExtract %float %9103 3
       %9105 = OpCompositeConstruct %v3float %9104 %9104 %9104
       %9106 = OpVectorShuffle %v3float %9103 %9103 0 1 2
       %9107 = OpFDiv %v3float %9106 %9105
       %9108 = OpVectorShuffle %v2float %9107 %458 0 1
               OpSelectionMerge %9109 None
               OpSwitch %uint_0 %9110
       %9110 = OpLabel
       %9111 = OpBitcast %uint %9097
       %9112 = OpVectorTimesScalar %v2float %9108 %float_128
       %9113 = OpConvertFToU %v2uint %9112
               OpSelectionMerge %9114 None
               OpSwitch %uint_0 %9115
       %9115 = OpLabel
       %9116 = OpBitcast %int %9111
       %9117 = OpBitcast %uint %9116
       %9118 = OpULessThan %bool %9117 %uint_8192
               OpSelectionMerge %9119 None
               OpBranchConditional %9118 %9120 %9119
       %9120 = OpLabel
               OpBranch %9114
       %9119 = OpLabel
       %9121 = OpISub %uint %9111 %uint_8192
       %9122 = OpIMul %uint %9121 %uint_21845
       %9123 = OpIAdd %uint %uint_8192 %9122
       %9124 = OpCompositeExtract %uint %9113 0
       %9125 = OpCompositeExtract %uint %9113 1
       %9126 = OpShiftLeftLogical %uint %9125 %uint_7
       %9127 = OpIAdd %uint %9124 %9126
       %9128 = OpIAdd %uint %9123 %9127
               OpBranch %9114
       %9114 = OpLabel
       %9129 = OpPhi %uint %9111 %9120 %9128 %9119
       %9130 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9129
       %9131 = OpLoad %uint %9130
       %9132 = OpBitwiseAnd %uint %9131 %uint_1023
       %9133 = OpShiftRightLogical %uint %9131 %uint_10
       %9134 = OpBitwiseAnd %uint %9133 %uint_1023
       %9135 = OpCompositeConstruct %v2uint %9132 %9134
       %9136 = OpShiftRightLogical %uint %9131 %uint_20
       %9137 = OpBitwiseAnd %uint %9136 %uint_63
       %9138 = OpBitwiseAnd %uint %9131 %uint_134217728
       %9139 = OpINotEqual %bool %9138 %uint_0
       %9140 = OpSelect %uint %9118 %uint_7 %9137
       %9141 = OpBitwiseAnd %uint %9140 %uint_31
       %9142 = OpShiftRightLogical %uint %uint_16384 %9141
       %9143 = OpConvertUToF %float %9142
       %9144 = OpVectorTimesScalar %v2float %9108 %9143
       %9145 = OpConvertFToU %v2uint %9144
       %9146 = OpIMul %v2uint %9135 %341
       %9147 = OpBitwiseAnd %v2uint %9145 %342
       %9148 = OpIAdd %v2uint %9146 %9147
               OpSelectionMerge %9149 None
               OpBranchConditional %9139 %9150 %9149
       %9150 = OpLabel
       %9151 = OpCompositeExtract %uint %9148 0
       %9152 = OpCompositeExtract %uint %9148 1
       %9153 = OpCompositeConstruct %v4uint %9151 %9152 %uint_0 %uint_0
       %9154 = OpBitcast %v4int %9153
       %9155 = OpVectorShuffle %v3int %9154 %9154 0 1 2
       %9156 = OpCompositeExtract %int %9154 3
       %9157 = OpLoad %type_2d_image_array_0 %VirtualShadowMap_PhysicalPagePool
       %9158 = OpImageFetch %v4uint %9157 %9155 Lod %9156
       %9159 = OpCompositeExtract %uint %9158 0
       %9160 = OpBitcast %float %9159
               OpBranch %9109
       %9149 = OpLabel
               OpBranch %9109
       %9109 = OpLabel
       %9161 = OpPhi %float %9160 %9150 %float_0 %9149
       %9162 = OpPhi %bool %true %9150 %false %9149
               OpSelectionMerge %9163 None
               OpBranchConditional %9162 %9164 %9163
       %9164 = OpLabel
       %9165 = OpFNegate %float %8836
       %9166 = OpCompositeExtract %float %9096 2 2
       %9167 = OpFMul %float %9165 %9166
       %9168 = OpFDiv %float %9167 %9104
       %9169 = OpFSub %float %9161 %9168
       %9170 = OpCompositeExtract %float %9107 2
       %9171 = OpFOrdGreaterThan %bool %9169 %9170
       %9172 = OpSelect %float %9171 %float_0 %float_1
               OpBranch %8834
       %9163 = OpLabel
               OpBranch %8977
       %8978 = OpLabel
       %9173 = OpFSub %v3float %593 %8974
       %9174 = OpFSub %v3float %641 %8975
       %9175 = OpVectorTimesScalar %v3float %9173 %float_2097152
       %9176 = OpFAdd %v3float %9175 %9174
       %9177 = OpExtInst %float %1 Length %9176
       %9178 = OpExtInst %float %1 Log2 %9177
       %9179 = OpFAdd %float %9178 %8963
       %9180 = OpExtInst %float %1 Floor %9179
       %9181 = OpConvertFToS %int %9180
       %9182 = OpISub %int %9181 %8968
       %9183 = OpExtInst %int %1 SMax %int_0 %9182
       %9184 = OpSLessThan %bool %9183 %8973
               OpSelectionMerge %9185 None
               OpBranchConditional %9184 %9186 %9185
       %9186 = OpLabel
       %9187 = OpIAdd %int %8829 %9183
       %9188 = OpBitcast %uint %9187
       %9189 = OpIMul %uint %9188 %uint_336
       %9190 = OpIAdd %uint %9189 %uint_96
       %9191 = OpShiftRightLogical %uint %9190 %uint_2
       %9192 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9191
       %9193 = OpLoad %uint %9192
       %9194 = OpIAdd %uint %9191 %uint_1
       %9195 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9194
       %9196 = OpLoad %uint %9195
       %9197 = OpIAdd %uint %9191 %uint_2
       %9198 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9197
       %9199 = OpLoad %uint %9198
       %9200 = OpIAdd %uint %9191 %uint_3
       %9201 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9200
       %9202 = OpLoad %uint %9201
       %9203 = OpCompositeConstruct %v4uint %9193 %9196 %9199 %9202
       %9204 = OpBitcast %v4float %9203
       %9205 = OpIAdd %uint %9189 %uint_112
       %9206 = OpShiftRightLogical %uint %9205 %uint_2
       %9207 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9206
       %9208 = OpIAdd %uint %9206 %uint_1
       %9209 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9208
       %9210 = OpIAdd %uint %9206 %uint_2
       %9211 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9210
       %9212 = OpIAdd %uint %9206 %uint_3
       %9213 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9212
       %9214 = OpIAdd %uint %9189 %uint_128
       %9215 = OpShiftRightLogical %uint %9214 %uint_2
       %9216 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9215
       %9217 = OpLoad %uint %9216
       %9218 = OpIAdd %uint %9215 %uint_1
       %9219 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9218
       %9220 = OpLoad %uint %9219
       %9221 = OpIAdd %uint %9215 %uint_2
       %9222 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9221
       %9223 = OpLoad %uint %9222
       %9224 = OpIAdd %uint %9215 %uint_3
       %9225 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9224
       %9226 = OpLoad %uint %9225
       %9227 = OpCompositeConstruct %v4uint %9217 %9220 %9223 %9226
       %9228 = OpBitcast %v4float %9227
       %9229 = OpCompositeInsert %mat4v4float %9228 %542 0
       %9230 = OpIAdd %uint %9189 %uint_144
       %9231 = OpShiftRightLogical %uint %9230 %uint_2
       %9232 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9231
       %9233 = OpLoad %uint %9232
       %9234 = OpIAdd %uint %9231 %uint_1
       %9235 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9234
       %9236 = OpLoad %uint %9235
       %9237 = OpIAdd %uint %9231 %uint_2
       %9238 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9237
       %9239 = OpLoad %uint %9238
       %9240 = OpIAdd %uint %9231 %uint_3
       %9241 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9240
       %9242 = OpLoad %uint %9241
       %9243 = OpCompositeConstruct %v4uint %9233 %9236 %9239 %9242
       %9244 = OpBitcast %v4float %9243
       %9245 = OpCompositeInsert %mat4v4float %9244 %9229 1
       %9246 = OpIAdd %uint %9189 %uint_160
       %9247 = OpShiftRightLogical %uint %9246 %uint_2
       %9248 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9247
       %9249 = OpLoad %uint %9248
       %9250 = OpIAdd %uint %9247 %uint_1
       %9251 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9250
       %9252 = OpLoad %uint %9251
       %9253 = OpIAdd %uint %9247 %uint_2
       %9254 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9253
       %9255 = OpLoad %uint %9254
       %9256 = OpIAdd %uint %9247 %uint_3
       %9257 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9256
       %9258 = OpLoad %uint %9257
       %9259 = OpCompositeConstruct %v4uint %9249 %9252 %9255 %9258
       %9260 = OpBitcast %v4float %9259
       %9261 = OpCompositeInsert %mat4v4float %9260 %9245 2
       %9262 = OpIAdd %uint %9189 %uint_176
       %9263 = OpShiftRightLogical %uint %9262 %uint_2
       %9264 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9263
       %9265 = OpLoad %uint %9264
       %9266 = OpIAdd %uint %9263 %uint_1
       %9267 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9266
       %9268 = OpLoad %uint %9267
       %9269 = OpIAdd %uint %9263 %uint_2
       %9270 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9269
       %9271 = OpLoad %uint %9270
       %9272 = OpIAdd %uint %9263 %uint_3
       %9273 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9272
       %9274 = OpLoad %uint %9273
       %9275 = OpCompositeConstruct %v4uint %9265 %9268 %9271 %9274
       %9276 = OpBitcast %v4float %9275
       %9277 = OpCompositeInsert %mat4v4float %9276 %9261 3
       %9278 = OpIAdd %uint %9189 %uint_256
       %9279 = OpShiftRightLogical %uint %9278 %uint_2
       %9280 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9279
       %9281 = OpLoad %uint %9280
       %9282 = OpIAdd %uint %9279 %uint_1
       %9283 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9282
       %9284 = OpLoad %uint %9283
       %9285 = OpIAdd %uint %9279 %uint_2
       %9286 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9285
       %9287 = OpLoad %uint %9286
       %9288 = OpCompositeConstruct %v3uint %9281 %9284 %9287
       %9289 = OpBitcast %v3float %9288
       %9290 = OpIAdd %uint %9189 %uint_272
       %9291 = OpShiftRightLogical %uint %9290 %uint_2
       %9292 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9291
       %9293 = OpLoad %uint %9292
       %9294 = OpIAdd %uint %9291 %uint_1
       %9295 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9294
       %9296 = OpLoad %uint %9295
       %9297 = OpIAdd %uint %9291 %uint_2
       %9298 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9297
       %9299 = OpLoad %uint %9298
       %9300 = OpCompositeConstruct %v3uint %9293 %9296 %9299
       %9301 = OpBitcast %v3float %9300
       %9302 = OpFAdd %v3float %593 %9289
       %9303 = OpFAdd %v3float %641 %9301
       %9304 = OpVectorTimesScalar %v3float %9302 %float_2097152
       %9305 = OpFAdd %v3float %9304 %9303
       %9306 = OpCompositeExtract %float %9305 0
       %9307 = OpCompositeExtract %float %9305 1
       %9308 = OpCompositeExtract %float %9305 2
       %9309 = OpCompositeConstruct %v4float %9306 %9307 %9308 %float_1
       %9310 = OpMatrixTimesVector %v4float %9277 %9309
       %9311 = OpVectorShuffle %v2float %9310 %9310 0 1
       %9312 = OpVectorTimesScalar %v2float %9311 %float_128
       %9313 = OpConvertFToU %v2uint %9312
               OpSelectionMerge %9314 None
               OpSwitch %uint_0 %9315
       %9315 = OpLabel
       %9316 = OpBitcast %int %9188
       %9317 = OpBitcast %uint %9316
       %9318 = OpULessThan %bool %9317 %uint_8192
               OpSelectionMerge %9319 None
               OpBranchConditional %9318 %9320 %9319
       %9320 = OpLabel
               OpBranch %9314
       %9319 = OpLabel
       %9321 = OpISub %uint %9188 %uint_8192
       %9322 = OpIMul %uint %9321 %uint_21845
       %9323 = OpIAdd %uint %uint_8192 %9322
       %9324 = OpCompositeExtract %uint %9313 0
       %9325 = OpCompositeExtract %uint %9313 1
       %9326 = OpShiftLeftLogical %uint %9325 %uint_7
       %9327 = OpIAdd %uint %9324 %9326
       %9328 = OpIAdd %uint %9323 %9327
               OpBranch %9314
       %9314 = OpLabel
       %9329 = OpPhi %uint %9188 %9320 %9328 %9319
       %9330 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9329
       %9331 = OpLoad %uint %9330
       %9332 = OpBitwiseAnd %uint %9331 %uint_1023
       %9333 = OpShiftRightLogical %uint %9331 %uint_10
       %9334 = OpBitwiseAnd %uint %9333 %uint_1023
       %9335 = OpCompositeConstruct %v2uint %9332 %9334
       %9336 = OpShiftRightLogical %uint %9331 %uint_20
       %9337 = OpBitwiseAnd %uint %9336 %uint_63
       %9338 = OpBitwiseAnd %uint %9331 %uint_134217728
       %9339 = OpINotEqual %bool %9338 %uint_0
       %9340 = OpIEqual %bool %9337 %uint_0
       %9341 = OpLogicalAnd %bool %9339 %9340
               OpSelectionMerge %9342 None
               OpBranchConditional %9339 %9343 %9342
       %9343 = OpLabel
       %9344 = OpIAdd %uint %9188 %9337
       %9345 = OpBitcast %int %9344
       %9346 = OpVectorTimesScalar %v2float %9311 %float_16384
       %9347 = OpConvertFToU %v2uint %9346
       %9348 = OpUGreaterThan %bool %9337 %uint_0
               OpSelectionMerge %9349 None
               OpBranchConditional %9348 %9350 %9349
       %9350 = OpLabel
       %9351 = OpIAdd %uint %9189 %uint_304
       %9352 = OpShiftRightLogical %uint %9351 %uint_2
       %9353 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9352
       %9354 = OpLoad %uint %9353
       %9355 = OpIAdd %uint %9352 %uint_1
       %9356 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9355
       %9357 = OpLoad %uint %9356
       %9358 = OpCompositeConstruct %v2uint %9354 %9357
       %9359 = OpBitcast %v2int %9358
       %9360 = OpBitcast %uint %9345
       %9361 = OpIMul %uint %9360 %uint_336
       %9362 = OpIAdd %uint %9361 %uint_304
       %9363 = OpShiftRightLogical %uint %9362 %uint_2
       %9364 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9363
       %9365 = OpLoad %uint %9364
       %9366 = OpIAdd %uint %9363 %uint_1
       %9367 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9366
       %9368 = OpLoad %uint %9367
       %9369 = OpCompositeConstruct %v2uint %9365 %9368
       %9370 = OpBitcast %v2int %9369
       %9371 = OpIMul %v2int %371 %9359
       %9372 = OpIMul %v2int %371 %9370
       %9373 = OpBitcast %v2uint %9371
       %9374 = OpISub %v2uint %9313 %9373
       %9375 = OpBitcast %int %9337
       %9376 = OpCompositeConstruct %v2int %9375 %9375
       %9377 = OpBitwiseAnd %v2int %9376 %372
       %9378 = OpShiftLeftLogical %v2int %9372 %9377
       %9379 = OpBitcast %v2uint %9378
       %9380 = OpIAdd %v2uint %9374 %9379
       %9381 = OpCompositeConstruct %v2uint %9337 %9337
       %9382 = OpBitwiseAnd %v2uint %9381 %306
       %9383 = OpShiftRightLogical %v2uint %9380 %9382
       %9384 = OpIMul %v2uint %9383 %341
       %9385 = OpIAdd %v2uint %9384 %342
       %9386 = OpLoad %uint %9207
       %9387 = OpLoad %uint %9209
       %9388 = OpLoad %uint %9211
       %9389 = OpLoad %uint %9213
       %9390 = OpCompositeConstruct %v4uint %9386 %9387 %9388 %9389
       %9391 = OpBitcast %v4float %9390
       %9392 = OpLoad %uint %9353
       %9393 = OpLoad %uint %9356
       %9394 = OpCompositeConstruct %v2uint %9392 %9393
       %9395 = OpBitcast %v2int %9394
       %9396 = OpIAdd %int %9187 %9375
       %9397 = OpBitcast %uint %9396
       %9398 = OpIMul %uint %9397 %uint_336
       %9399 = OpIAdd %uint %9398 %uint_112
       %9400 = OpShiftRightLogical %uint %9399 %uint_2
       %9401 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9400
       %9402 = OpLoad %uint %9401
       %9403 = OpIAdd %uint %9400 %uint_1
       %9404 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9403
       %9405 = OpLoad %uint %9404
       %9406 = OpIAdd %uint %9400 %uint_2
       %9407 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9406
       %9408 = OpLoad %uint %9407
       %9409 = OpIAdd %uint %9400 %uint_3
       %9410 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9409
       %9411 = OpLoad %uint %9410
       %9412 = OpCompositeConstruct %v4uint %9402 %9405 %9408 %9411
       %9413 = OpBitcast %v4float %9412
       %9414 = OpIAdd %uint %9398 %uint_304
       %9415 = OpShiftRightLogical %uint %9414 %uint_2
       %9416 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9415
       %9417 = OpLoad %uint %9416
       %9418 = OpIAdd %uint %9415 %uint_1
       %9419 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9418
       %9420 = OpLoad %uint %9419
       %9421 = OpCompositeConstruct %v2uint %9417 %9420
       %9422 = OpBitcast %v2int %9421
       %9423 = OpConvertSToF %v2float %9395
       %9424 = OpConvertSToF %v2float %9422
       %9425 = OpSGreaterThanEqual %bool %9375 %int_0
       %9426 = OpBitcast %uint %9375
       %9427 = OpBitwiseAnd %uint %9426 %uint_31
       %9428 = OpShiftLeftLogical %uint %uint_1 %9427
       %9429 = OpConvertUToF %float %9428
       %9430 = OpFDiv %float %float_1 %9429
       %9431 = OpSNegate %int %9375
       %9432 = OpBitcast %uint %9431
       %9433 = OpBitwiseAnd %uint %9432 %uint_31
       %9434 = OpShiftLeftLogical %uint %uint_1 %9433
       %9435 = OpConvertUToF %float %9434
       %9436 = OpSelect %float %9425 %9430 %9435
       %9437 = OpVectorTimesScalar %v2float %9423 %9436
       %9438 = OpFSub %v2float %9424 %9437
       %9439 = OpVectorTimesScalar %v2float %9438 %float_0_25
       %9440 = OpCompositeExtract %float %9391 2
       %9441 = OpCompositeExtract %float %9413 2
       %9442 = OpFNegate %float %9436
       %9443 = OpExtInst %float %1 Fma %9442 %9440 %9441
       %9444 = OpVectorTimesScalar %v2float %9311 %9436
       %9445 = OpVectorShuffle %v2float %9439 %459 0 1
       %9446 = OpFAdd %v2float %9444 %9445
       %9447 = OpVectorTimesScalar %v2float %9446 %float_16384
       %9448 = OpConvertFToU %v2uint %9447
       %9449 = OpExtInst %v2uint %1 UClamp %9448 %9384 %9385
               OpSelectionMerge %9450 None
               OpSwitch %uint_0 %9451
       %9451 = OpLabel
       %9452 = OpBitcast %int %9360
       %9453 = OpBitcast %uint %9452
       %9454 = OpULessThan %bool %9453 %uint_8192
               OpSelectionMerge %9455 None
               OpBranchConditional %9454 %9456 %9455
       %9456 = OpLabel
               OpBranch %9450
       %9455 = OpLabel
       %9457 = OpISub %uint %9360 %uint_8192
       %9458 = OpIMul %uint %9457 %uint_21845
       %9459 = OpIAdd %uint %uint_8192 %9458
       %9460 = OpCompositeExtract %uint %9383 0
       %9461 = OpCompositeExtract %uint %9383 1
       %9462 = OpShiftLeftLogical %uint %9461 %uint_7
       %9463 = OpIAdd %uint %9460 %9462
       %9464 = OpIAdd %uint %9459 %9463
               OpBranch %9450
       %9450 = OpLabel
       %9465 = OpPhi %uint %9360 %9456 %9464 %9455
       %9466 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9465
       %9467 = OpLoad %uint %9466
       %9468 = OpBitwiseAnd %uint %9467 %uint_1023
       %9469 = OpShiftRightLogical %uint %9467 %uint_10
       %9470 = OpBitwiseAnd %uint %9469 %uint_1023
       %9471 = OpCompositeConstruct %v2uint %9468 %9470
       %9472 = OpShiftRightLogical %uint %9467 %uint_20
       %9473 = OpBitwiseAnd %uint %9472 %uint_63
       %9474 = OpBitwiseAnd %uint %9467 %uint_134217728
       %9475 = OpINotEqual %bool %9474 %uint_0
       %9476 = OpIEqual %bool %9473 %uint_0
       %9477 = OpLogicalAnd %bool %9475 %9476
               OpBranch %9349
       %9349 = OpLabel
       %9478 = OpPhi %float %float_1 %9343 %9436 %9450
       %9479 = OpPhi %float %float_0 %9343 %9443 %9450
       %9480 = OpPhi %v2uint %9347 %9343 %9449 %9450
       %9481 = OpPhi %v2uint %9335 %9343 %9471 %9450
       %9482 = OpPhi %bool %9341 %9343 %9477 %9450
               OpSelectionMerge %9483 None
               OpBranchConditional %9482 %9484 %9483
       %9484 = OpLabel
       %9485 = OpIMul %v2uint %9481 %341
       %9486 = OpBitwiseAnd %v2uint %9480 %342
       %9487 = OpIAdd %v2uint %9485 %9486
       %9488 = OpCompositeExtract %uint %9487 0
       %9489 = OpCompositeExtract %uint %9487 1
       %9490 = OpCompositeConstruct %v4uint %9488 %9489 %uint_0 %uint_0
       %9491 = OpBitcast %v4int %9490
       %9492 = OpVectorShuffle %v3int %9491 %9491 0 1 2
       %9493 = OpCompositeExtract %int %9491 3
       %9494 = OpLoad %type_2d_image_array_0 %VirtualShadowMap_PhysicalPagePool
       %9495 = OpImageFetch %v4uint %9494 %9492 Lod %9493
       %9496 = OpCompositeExtract %uint %9495 0
       %9497 = OpBitcast %float %9496
       %9498 = OpFSub %float %9497 %9479
       %9499 = OpFDiv %float %9498 %9478
               OpBranch %9483
       %9483 = OpLabel
       %9500 = OpPhi %float %float_0 %9349 %9499 %9484
       %9501 = OpSelect %bool %9482 %true %false
               OpBranch %9342
       %9342 = OpLabel
       %9502 = OpPhi %float %float_0 %9314 %9500 %9483
       %9503 = OpPhi %bool %false %9314 %9501 %9483
               OpSelectionMerge %9504 None
               OpBranchConditional %9503 %9505 %9504
       %9505 = OpLabel
       %9506 = OpCompositeExtract %float %9204 2
       %9507 = OpExtInst %float %1 Fma %8836 %9506 %9502
       %9508 = OpCompositeExtract %float %9310 2
       %9509 = OpFOrdGreaterThan %bool %9507 %9508
       %9510 = OpSelect %float %9509 %float_0 %float_1
               OpBranch %8834
       %9504 = OpLabel
               OpBranch %9185
       %9185 = OpLabel
               OpBranch %8977
       %8977 = OpLabel
               OpBranch %8834
       %8834 = OpLabel
       %9511 = OpPhi %float %9172 %9164 %9510 %9505 %float_1 %8977
       %9512 = OpFMul %float %8826 %9511
               OpBranch %8832
       %8832 = OpLabel
       %9513 = OpPhi %float %8826 %8751 %9512 %8834
       %9514 = OpDot %float %8746 %117
       %9515 = OpDot %float %8747 %8746
       %9516 = OpExtInst %float %1 FMix %float_1 %9515 %9514
       %9517 = OpCompositeExtract %float %8724 0
       %9518 = OpCompositeExtract %float %8724 1
       %9519 = OpExtInst %float %1 Fma %644 %9517 %9518
       %9520 = OpExtInst %float %1 FClamp %9519 %float_0 %float_1
       %9521 = OpFMul %float %9520 %9520
       %9522 = OpExtInst %float %1 FMix %9513 %9516 %9521
       %9523 = OpExtInst %float %1 NMin %9522 %float_1
       %9524 = OpFAdd %float %9522 %9523
       %9525 = OpFOrdGreaterThan %bool %9524 %float_0
               OpSelectionMerge %9526 DontFlatten
               OpBranchConditional %9525 %9527 %9526
       %9527 = OpLabel
       %9528 = OpExtInst %float %1 NMax %8423 %8421
       %9529 = OpDot %float %8728 %8728
       %9530 = OpFAdd %float %9529 %float_1
       %9531 = OpFDiv %float %float_1 %9530
       %9532 = OpExtInst %float %1 InverseSqrt %9529
       %9533 = OpVectorTimesScalar %v3float %8728 %9532
       %9534 = OpDot %float %8446 %9533
       %9535 = OpFOrdGreaterThan %bool %8730 %float_0
               OpSelectionMerge %9536 None
               OpBranchConditional %9535 %9537 %9536
       %9537 = OpLabel
       %9538 = OpFMul %float %8730 %8730
       %9539 = OpFMul %float %9538 %9531
       %9540 = OpExtInst %float %1 FClamp %9539 %float_0 %float_1
       %9541 = OpExtInst %float %1 Sqrt %9540
       %9542 = OpFOrdLessThan %bool %9534 %9541
               OpSelectionMerge %9543 None
               OpBranchConditional %9542 %9544 %9543
       %9544 = OpLabel
       %9545 = OpFNegate %float %9541
       %9546 = OpExtInst %float %1 NMax %9534 %9545
       %9547 = OpFAdd %float %9541 %9546
       %9548 = OpFMul %float %9547 %9547
       %9549 = OpFMul %float %float_4 %9541
       %9550 = OpFDiv %float %9548 %9549
               OpBranch %9543
       %9543 = OpLabel
       %9551 = OpPhi %float %9534 %9537 %9550 %9544
               OpBranch %9536
       %9536 = OpLabel
       %9552 = OpPhi %float %9534 %9527 %9551 %9543
       %9553 = OpExtInst %float %1 FClamp %9552 %float_0 %float_1
       %9554 = OpExtInst %float %1 NMax %9528 %8421
       %9555 = OpFMul %float %8730 %9532
       %9556 = OpFNegate %float %9554
       %9557 = OpExtInst %float %1 Fma %9556 %9554 %float_1
       %9558 = OpFMul %float %9555 %9557
       %9559 = OpExtInst %float %1 FClamp %9558 %float_0 %float_1
       %9560 = OpExtInst %float %1 NMax %460 %8730
       %9561 = OpFNegate %float %9560
       %9562 = OpExtInst %float %1 Fma %9561 %float_0_0500000007 %float_1
       %9563 = OpExtInst %float %1 FClamp %9562 %float_0 %float_1
       %9564 = OpBitcast %uint %9563
       %9565 = OpShiftLeftLogical %uint %9564 %uint_1
       %9566 = OpBitwiseOr %uint %uint_0 %9565
       %9567 = OpDot %float %8446 %658
       %9568 = OpDot %float %658 %9533
       %9569 = OpExtInst %float %1 Fma %float_2 %9568 %float_2
       %9570 = OpExtInst %float %1 InverseSqrt %9569
       %9571 = OpFAdd %float %9534 %9567
       %9572 = OpFMul %float %9571 %9570
       %9573 = OpExtInst %float %1 FClamp %9572 %float_0 %float_1
       %9574 = OpExtInst %float %1 Fma %9570 %9568 %9570
       %9575 = OpExtInst %float %1 FClamp %9574 %float_0 %float_1
       %9576 = OpFOrdGreaterThan %bool %9559 %float_0
               OpSelectionMerge %9577 None
               OpBranchConditional %9576 %9578 %9577
       %9578 = OpLabel
       %9579 = OpFNegate %float %9559
       %9580 = OpExtInst %float %1 Fma %9579 %9559 %float_1
       %9581 = OpExtInst %float %1 Sqrt %9580
       %9582 = OpFMul %float %float_2 %9534
       %9583 = OpFNegate %float %9568
       %9584 = OpExtInst %float %1 Fma %9582 %9567 %9583
       %9585 = OpFOrdGreaterThanEqual %bool %9584 %9581
               OpSelectionMerge %9586 None
               OpBranchConditional %9585 %9587 %9588
       %9588 = OpLabel
       %9589 = OpFNegate %float %9584
       %9590 = OpExtInst %float %1 Fma %9589 %9584 %float_1
       %9591 = OpExtInst %float %1 InverseSqrt %9590
       %9592 = OpFMul %float %9559 %9591
       %9593 = OpExtInst %float %1 Fma %9589 %9534 %9567
       %9594 = OpFMul %float %9592 %9593
       %9595 = OpFMul %float %float_2 %9567
       %9596 = OpExtInst %float %1 Fma %9595 %9567 %float_n1
       %9597 = OpExtInst %float %1 Fma %9589 %9568 %9596
       %9598 = OpFMul %float %9592 %9597
       %9599 = OpFNegate %float %9534
       %9600 = OpExtInst %float %1 Fma %9599 %9534 %float_1
       %9601 = OpFNegate %float %9567
       %9602 = OpExtInst %float %1 Fma %9601 %9567 %9600
       %9603 = OpExtInst %float %1 Fma %9583 %9568 %9602
       %9604 = OpFMul %float %9582 %9567
       %9605 = OpExtInst %float %1 Fma %9604 %9568 %9603
       %9606 = OpExtInst %float %1 FClamp %9605 %float_0 %float_1
       %9607 = OpExtInst %float %1 Sqrt %9606
       %9608 = OpFMul %float %9592 %9607
       %9609 = OpFMul %float %9608 %float_2
       %9610 = OpFMul %float %9609 %9567
       %9611 = OpExtInst %float %1 Fma %9534 %9581 %9567
       %9612 = OpExtInst %float %1 Fma %9592 %9593 %9611
       %9613 = OpExtInst %float %1 Fma %9568 %9581 %float_1
       %9614 = OpExtInst %float %1 Fma %9592 %9597 %9613
       %9615 = OpFMul %float %9608 %9614
       %9616 = OpFMul %float %9612 %9614
       %9617 = OpFMul %float %9610 %9612
       %9618 = OpFMul %float %float_0_25 %9610
       %9619 = OpFMul %float %9618 %9612
       %9620 = OpExtInst %float %1 Fma %float_n0_5 %9615 %9619
       %9621 = OpFMul %float %9616 %9620
       %9622 = OpFMul %float %9615 %float_n2
       %9623 = OpExtInst %float %1 Fma %9610 %9612 %9622
       %9624 = OpFMul %float %9617 %9623
       %9625 = OpExtInst %float %1 Fma %9615 %9615 %9624
       %9626 = OpFMul %float %9614 %9614
       %9627 = OpExtInst %float %1 Fma %9568 %9581 %9614
       %9628 = OpExtInst %float %1 Fma %float_n0_5 %9627 %float_n0_5
       %9629 = OpFMul %float %9616 %9628
       %9630 = OpExtInst %float %1 Fma %9611 %9626 %9629
       %9631 = OpExtInst %float %1 Fma %9612 %9630 %9625
       %9632 = OpFMul %float %float_2 %9621
       %9633 = OpFMul %float %9621 %9621
       %9634 = OpExtInst %float %1 Fma %9631 %9631 %9633
       %9635 = OpFDiv %float %9632 %9634
       %9636 = OpFMul %float %9635 %9631
       %9637 = OpFNegate %float %9635
       %9638 = OpExtInst %float %1 Fma %9637 %9621 %float_1
       %9639 = OpFMul %float %9636 %9608
       %9640 = OpExtInst %float %1 Fma %9638 %9594 %9639
       %9641 = OpFMul %float %9636 %9610
       %9642 = OpExtInst %float %1 Fma %9638 %9598 %9641
       %9643 = OpExtInst %float %1 Fma %9534 %9581 %9640
       %9644 = OpExtInst %float %1 Fma %9568 %9581 %9642
       %9645 = OpExtInst %float %1 Fma %float_2 %9644 %float_2
       %9646 = OpExtInst %float %1 InverseSqrt %9645
       %9647 = OpFAdd %float %9643 %9567
       %9648 = OpFMul %float %9647 %9646
       %9649 = OpExtInst %float %1 FClamp %9648 %float_0 %float_1
       %9650 = OpExtInst %float %1 Fma %9646 %9644 %9646
       %9651 = OpExtInst %float %1 FClamp %9650 %float_0 %float_1
               OpBranch %9586
       %9587 = OpLabel
       %9652 = OpExtInst %float %1 FAbs %9567
               OpBranch %9586
       %9586 = OpLabel
       %9653 = OpPhi %float %9649 %9588 %float_1 %9587
       %9654 = OpPhi %float %9651 %9588 %9652 %9587
               OpBranch %9577
       %9577 = OpLabel
       %9655 = OpPhi %float %9573 %9536 %9653 %9586
       %9656 = OpPhi %float %9575 %9536 %9654 %9586
       %9657 = OpExtInst %float %1 FAbs %9567
       %9658 = OpFAdd %float %9657 %float_9_99999975en06
       %9659 = OpExtInst %float %1 FClamp %9658 %float_0 %float_1
       %9660 = OpFMul %float %9528 %9528
       %9661 = OpFMul %float %9660 %9660
       %9662 = OpShiftRightLogical %uint %9566 %uint_1
       %9663 = OpBitcast %float %9662
       %9664 = OpExtInst %float %1 FClamp %9567 %float_0 %float_1
       %9665 = OpExtInst %float %1 FClamp %9553 %float_0 %float_1
       %9666 = OpExtInst %float %1 FClamp %9575 %float_0 %float_1
       %9667 = OpExtInst %float %1 FClamp %9573 %float_0 %float_1
       %9668 = OpBitcast %int %9661
       %9669 = OpISub %int %int_2129859010 %9668
       %9670 = OpBitcast %float %9669
       %9671 = OpExtInst %float %1 Fma %float_2 %9670 %float_n1
       %9672 = OpExtInst %float %1 Log2 %9671
       %9673 = OpFMul %float %float_0_055555556 %9672
       %9674 = OpExtInst %float %1 FClamp %9673 %float_0 %float_1
       %9675 = OpFSub %float %float_1 %9666
       %9676 = OpFMul %float %9675 %9675
       %9677 = OpFMul %float %9676 %9676
       %9678 = OpExtInst %float %1 Fma %9677 %9675 %9666
       %9679 = OpFSub %float %float_1 %9664
       %9680 = OpFMul %float %9679 %9679
       %9681 = OpFMul %float %9680 %9680
       %9682 = OpFMul %float %9681 %9679
       %9683 = OpExtInst %float %1 Fma %float_n0_75 %9682 %float_1
       %9684 = OpFSub %float %float_1 %9665
       %9685 = OpFMul %float %9684 %9684
       %9686 = OpFMul %float %9685 %9685
       %9687 = OpFMul %float %9686 %9684
       %9688 = OpExtInst %float %1 Fma %float_n0_75 %9687 %float_1
       %9689 = OpFMul %float %9683 %9688
       %9690 = OpExtInst %float %1 Fma %float_2_20000005 %9674 %float_n0_5
       %9691 = OpExtInst %float %1 FClamp %9690 %float_0 %float_1
       %9692 = OpExtInst %float %1 FMix %9678 %9689 %9691
       %9693 = OpExtInst %float %1 Fma %float_34_5 %9674 %float_n59
       %9694 = OpExtInst %float %1 Fma %9693 %9674 %float_24_5
       %9695 = OpFMul %float %9694 %9666
       %9696 = OpExtInst %float %1 Fma %float_73_1999969 %9674 %float_n21_2000008
       %9697 = OpExtInst %float %1 NMax %9696 %float_8_89999962
       %9698 = OpFNegate %float %9697
       %9699 = OpBitcast %int %9667
       %9700 = OpShiftRightArithmetic %int %9699 %int_1
       %9701 = OpIAdd %int %int_532487669 %9700
       %9702 = OpBitcast %float %9701
       %9703 = OpFMul %float %9698 %9702
       %9704 = OpExtInst %float %1 Exp2 %9703
       %9705 = OpFMul %float %9695 %9704
       %9706 = OpExtInst %float %1 Fma %9705 %9663 %9692
       %9707 = OpFMul %float %float_0_318309873 %9706
       %9708 = OpVectorTimesScalar %v3float %8643 %9707
       %9709 = OpVectorTimesScalar %v3float %127 %9553
       %9710 = OpFMul %v3float %9708 %9709
       %9711 = OpBitwiseAnd %uint %9566 %uint_1
       %9712 = OpIEqual %bool %9711 %uint_1
               OpSelectionMerge %9713 None
               OpBranchConditional %9712 %9714 %9715
       %9715 = OpLabel
               OpSelectionMerge %9716 None
               OpBranchConditional %9576 %9717 %9716
       %9717 = OpLabel
       %9718 = OpFMul %float %float_0_25 %9559
       %9719 = OpShiftRightArithmetic %int %9668 %int_1
       %9720 = OpIAdd %int %int_532487669 %9719
       %9721 = OpBitcast %float %9720
       %9722 = OpExtInst %float %1 Fma %float_3 %9721 %9559
       %9723 = OpFMul %float %9718 %9722
       %9724 = OpFAdd %float %9656 %float_0_00100000005
       %9725 = OpFDiv %float %9723 %9724
       %9726 = OpExtInst %float %1 Fma %9660 %9660 %9725
       %9727 = OpFDiv %float %9661 %9726
               OpBranch %9716
       %9716 = OpLabel
       %9728 = OpPhi %float %float_1 %9715 %9727 %9717
       %9729 = OpFNegate %float %9655
       %9730 = OpExtInst %float %1 Fma %9655 %9661 %9729
       %9731 = OpExtInst %float %1 Fma %9730 %9655 %float_1
       %9732 = OpFMul %float %float_3_14159274 %9731
       %9733 = OpFMul %float %9732 %9731
       %9734 = OpFDiv %float %9661 %9733
       %9735 = OpFMul %float %9734 %9728
       %9736 = OpExtInst %float %1 Sqrt %9661
       %9737 = OpFSub %float %float_1 %9736
       %9738 = OpExtInst %float %1 Fma %9659 %9737 %9736
       %9739 = OpExtInst %float %1 Fma %9553 %9737 %9736
       %9740 = OpFMul %float %9659 %9739
       %9741 = OpExtInst %float %1 Fma %9553 %9738 %9740
       %9742 = OpFDiv %float %float_0_5 %9741
       %9743 = OpFSub %float %float_1 %9656
       %9744 = OpFMul %float %9743 %9743
       %9745 = OpFMul %float %9744 %9744
       %9746 = OpFMul %float %9745 %9743
       %9747 = OpCompositeExtract %float %8556 1
       %9748 = OpFMul %float %float_50 %9747
       %9749 = OpExtInst %float %1 FClamp %9748 %float_0 %float_1
       %9750 = OpFMul %float %9749 %9746
       %9751 = OpCompositeConstruct %v3float %9750 %9750 %9750
       %9752 = OpFNegate %float %9745
       %9753 = OpExtInst %float %1 Fma %9752 %9743 %float_1
       %9754 = OpVectorTimesScalar %v3float %8556 %9753
       %9755 = OpFAdd %v3float %9751 %9754
       %9756 = OpFMul %float %9735 %9742
       %9757 = OpVectorTimesScalar %v3float %9755 %9756
       %9758 = OpFMul %v3float %9709 %9757
               OpBranch %9713
       %9714 = OpLabel
               OpBranch %9713
       %9713 = OpLabel
       %9759 = OpPhi %v3float %9758 %9716 %102 %9714
       %9760 = OpCompositeExtract %float %8556 1
       %9761 = OpFMul %float %float_50 %9760
       %9762 = OpExtInst %float %1 FClamp %9761 %float_0 %float_1
       %9763 = OpCompositeConstruct %v3float %9762 %9762 %9762
       %9764 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
       %9765 = OpLoad %type_sampler %View_ShadingEnergySampler
       %9766 = OpCompositeConstruct %v2float %9659 %9528
       %9767 = OpSampledImage %type_sampled_image %9764 %9765
       %9768 = OpImageSampleExplicitLod %v4float %9767 %9766 Lod %float_0
       %9769 = OpAccessChain %_ptr_Uniform_uint %View %uint_40
       %9770 = OpLoad %uint %9769
       %9771 = OpINotEqual %bool %9770 %uint_0
       %9772 = OpCompositeConstruct %v3bool %9771 %9771 %9771
       %9773 = OpCompositeExtract %float %9768 0
       %9774 = OpFSub %float %float_1 %9773
       %9775 = OpFDiv %float %9774 %9773
       %9776 = OpVectorTimesScalar %v3float %8556 %9775
       %9777 = OpFAdd %v3float %127 %9776
       %9778 = OpSelect %v3float %9772 %9777 %127
       %9779 = OpVectorTimesScalar %v3float %8556 %9773
       %9780 = OpFSub %v3float %9763 %8556
       %9781 = OpCompositeExtract %float %9768 1
       %9782 = OpVectorTimesScalar %v3float %9780 %9781
       %9783 = OpFAdd %v3float %9779 %9782
       %9784 = OpFMul %v3float %9778 %9783
       %9785 = OpAccessChain %_ptr_Uniform_uint %View %uint_41
       %9786 = OpLoad %uint %9785
       %9787 = OpINotEqual %bool %9786 %uint_0
       %9788 = OpDot %float %9784 %171
       %9789 = OpFSub %float %float_1 %9788
       %9790 = OpSelect %float %9787 %9789 %float_1
       %9791 = OpVectorTimesScalar %v3float %9710 %9790
       %9792 = OpFMul %v3float %9759 %9778
       %9793 = OpVectorTimesScalar %v3float %9792 %float_1
       %9794 = OpVectorTimesScalar %v3float %8726 %9522
       %9795 = OpFMul %v3float %9793 %9794
       %9796 = OpExtInst %v3float %1 Fma %9791 %9794 %102
               OpBranch %9526
       %9526 = OpLabel
       %9797 = OpPhi %v3float %459 %8832 %9796 %9713
       %9798 = OpPhi %v3float %459 %8832 %9795 %9713
       %9799 = OpCompositeExtract %float %9797 0
       %9800 = OpCompositeExtract %float %9797 1
       %9801 = OpCompositeExtract %float %9797 2
       %9802 = OpCompositeConstruct %v4float %9799 %9800 %9801 %float_0
       %9803 = OpCompositeExtract %float %9798 0
       %9804 = OpCompositeExtract %float %9798 1
       %9805 = OpCompositeExtract %float %9798 2
       %9806 = OpCompositeConstruct %v4float %9803 %9804 %9805 %float_0
       %9807 = OpBitwiseAnd %uint %8745 %8718
       %9808 = OpINotEqual %bool %9807 %uint_0
               OpSelectionMerge %9809 Flatten
               OpBranchConditional %9808 %9810 %9809
       %9810 = OpLabel
       %9811 = OpVectorShuffle %v4float %9802 %9802 4 5 6 3
       %9812 = OpVectorShuffle %v4float %9806 %9806 4 5 6 3
               OpSelectionMerge %9813 None
               OpBranchConditional %8687 %9814 %9815
       %9815 = OpLabel
               OpBranch %9813
       %9814 = OpLabel
       %9816 = OpVectorShuffle %v3float %9802 %458 0 1 2
       %9817 = OpVectorShuffle %v3float %9806 %458 0 1 2
       %9818 = OpFAdd %v3float %9816 %9817
               OpBranch %9813
       %9813 = OpLabel
       %9819 = OpPhi %v3float %102 %9815 %9818 %9814
       %9820 = OpCompositeConstruct %v4bool %8687 %8687 %8687 %8687
       %9821 = OpSelect %v4float %9820 %98 %9811
       %9822 = OpSelect %v4float %9820 %98 %9812
               OpBranch %9809
       %9809 = OpLabel
       %9823 = OpPhi %v3float %102 %9526 %9819 %9813
       %9824 = OpPhi %v4float %98 %9526 %9821 %9813
       %9825 = OpPhi %v4float %98 %9526 %9822 %9813
               OpBranch %8732
       %8732 = OpLabel
       %9826 = OpPhi %v4float %8512 %8693 %8747 %9809
       %9827 = OpPhi %v3float %102 %8693 %9823 %9809
       %9828 = OpPhi %float %float_1 %8693 %9522 %9809
       %9829 = OpPhi %v4float %98 %8693 %9824 %9809
       %9830 = OpPhi %v4float %98 %8693 %9825 %9809
       %9831 = OpIMul %uint %8680 %uint_2
       %9832 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid %int_0 %9831
       %9833 = OpLoad %uint %9832
       %9834 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %int_0
       %9835 = OpLoad %uint %9834
       %9836 = OpExtInst %uint %1 UMin %9833 %9835
       %9837 = OpIAdd %uint %9831 %uint_1
       %9838 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid %int_0 %9837
       %9839 = OpLoad %uint %9838
       %9840 = OpExtInst %uint %1 UMin %9836 %9835
               OpBranch %9841
       %9841 = OpLabel
       %9842 = OpPhi %v4float %9829 %8732 %9843 %9844
       %9845 = OpPhi %v4float %9830 %8732 %9846 %9844
       %9847 = OpPhi %uint %uint_0 %8732 %9848 %9844
       %9849 = OpULessThan %bool %9847 %9840
               OpLoopMerge %9850 %9844 DontUnroll
               OpBranchConditional %9849 %9851 %9850
       %9851 = OpLabel
       %9852 = OpIAdd %uint %9839 %9847
       %9853 = OpLoad %type_buffer_image %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit
       %9854 = OpImageFetch %v4uint %9853 %9852 None
       %9855 = OpCompositeExtract %uint %9854 0
       %9856 = OpIMul %uint %9855 %uint_6
       %9857 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9856
       %9858 = OpLoad %v4float %9857
       %9859 = OpIAdd %uint %9856 %uint_1
       %9860 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9859
       %9861 = OpLoad %v4float %9860
       %9862 = OpIAdd %uint %9856 %uint_2
       %9863 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9862
       %9864 = OpLoad %v4float %9863
       %9865 = OpIAdd %uint %9856 %uint_3
       %9866 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9865
       %9867 = OpLoad %v4float %9866
       %9868 = OpIAdd %uint %9856 %uint_4
       %9869 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9868
       %9870 = OpLoad %v4float %9869
       %9871 = OpCompositeExtract %float %9864 3
       %9872 = OpBitcast %uint %9871
       %9873 = OpShiftRightLogical %uint %9872 %uint_16
       %9874 = OpBitwiseAnd %uint %9873 %uint_3
       %9875 = OpVectorShuffle %v3float %9858 %9858 0 1 2
       %9876 = OpCompositeExtract %float %9858 3
       %9877 = OpCompositeExtract %float %9861 1
       %9878 = OpBitcast %uint %9877
       %9879 = OpShiftRightLogical %uint %9878 %uint_0
       %9880 = OpBitwiseAnd %uint %9879 %uint_1023
       %9881 = OpConvertUToF %float %9880
       %9882 = OpShiftRightLogical %uint %9878 %uint_10
       %9883 = OpBitwiseAnd %uint %9882 %uint_1023
       %9884 = OpConvertUToF %float %9883
       %9885 = OpShiftRightLogical %uint %9878 %uint_20
       %9886 = OpBitwiseAnd %uint %9885 %uint_1023
       %9887 = OpConvertUToF %float %9886
       %9888 = OpCompositeConstruct %v3float %9881 %9884 %9887
       %9889 = OpCompositeExtract %float %9861 0
       %9890 = OpVectorTimesScalar %v3float %9888 %9889
       %9891 = OpCompositeExtract %float %9861 3
       %9892 = OpVectorShuffle %v3float %9864 %9864 0 1 2
       %9893 = OpCompositeExtract %float %9867 2
       %9894 = OpBitcast %uint %9893
       %9895 = OpBitwiseAnd %uint %9894 %uint_65535
       %9896 = OpExtInst %v2float %1 UnpackHalf2x16 %9895
       %9897 = OpCompositeExtract %float %9896 0
       %9898 = OpCompositeExtract %float %9867 3
       %9899 = OpBitcast %uint %9898
       %9900 = OpExtInst %v2float %1 UnpackHalf2x16 %9899
       %9901 = OpCompositeExtract %float %9900 0
       %9902 = OpVectorShuffle %v3float %9870 %9870 0 1 2
       %9903 = OpShiftRightLogical %uint %9894 %uint_16
       %9904 = OpExtInst %v2float %1 UnpackHalf2x16 %9903
       %9905 = OpCompositeExtract %float %9904 0
       %9906 = OpFOrdEqual %bool %9891 %float_0
       %9907 = OpCompositeExtract %float %9870 3
       %9908 = OpBitcast %uint %9907
       %9909 = OpBitwiseAnd %uint %9908 %uint_65535
       %9910 = OpExtInst %v2float %1 UnpackHalf2x16 %9909
       %9911 = OpCompositeExtract %float %9910 0
       %9912 = OpIEqual %bool %9874 %uint_2
       %9913 = OpBitwiseAnd %uint %9872 %uint_255
       %9914 = OpINotEqual %bool %9913 %uint_0
       %9915 = OpSelect %uint %9914 %uint_1 %uint_0
       %9916 = OpBitwiseAnd %uint %9872 %uint_1
       %9917 = OpConvertUToF %float %9916
       %9918 = OpBitwiseAnd %uint %9872 %uint_2
       %9919 = OpShiftRightLogical %uint %9918 %uint_1
       %9920 = OpConvertUToF %float %9919
       %9921 = OpBitwiseAnd %uint %9872 %uint_4
       %9922 = OpShiftRightLogical %uint %9921 %uint_2
       %9923 = OpConvertUToF %float %9922
       %9924 = OpBitwiseAnd %uint %9872 %uint_8
       %9925 = OpShiftRightLogical %uint %9924 %uint_3
       %9926 = OpConvertUToF %float %9925
       %9927 = OpCompositeConstruct %v4float %9917 %9920 %9923 %9926
       %9928 = OpShiftRightLogical %uint %9872 %uint_4
       %9929 = OpBitwiseAnd %uint %9928 %uint_1
       %9930 = OpConvertUToF %float %9929
       %9931 = OpBitwiseAnd %uint %9928 %uint_2
       %9932 = OpShiftRightLogical %uint %9931 %uint_1
       %9933 = OpConvertUToF %float %9932
       %9934 = OpBitwiseAnd %uint %9928 %uint_4
       %9935 = OpShiftRightLogical %uint %9934 %uint_2
       %9936 = OpConvertUToF %float %9935
       %9937 = OpBitwiseAnd %uint %9928 %uint_8
       %9938 = OpShiftRightLogical %uint %9937 %uint_3
       %9939 = OpConvertUToF %float %9938
       %9940 = OpCompositeConstruct %v4float %9930 %9933 %9936 %9939
       %9941 = OpShiftRightLogical %uint %9872 %uint_8
       %9942 = OpBitwiseAnd %uint %9941 %uint_7
       %9943 = OpDot %float %9940 %8702
       %9944 = OpFSub %v3float %9875 %640
       %9945 = OpDot %float %9944 %9944
       %9946 = OpExtInst %float %1 InverseSqrt %9945
       %9947 = OpVectorTimesScalar %v3float %9944 %9946
               OpSelectionMerge %9948 None
               OpBranchConditional %9906 %9949 %9950
       %9950 = OpLabel
       %9951 = OpVectorTimesScalar %v3float %9944 %9876
       %9952 = OpDot %float %9951 %9951
       %9953 = OpExtInst %float %1 FClamp %9952 %float_0 %float_1
       %9954 = OpFSub %float %float_1 %9953
       %9955 = OpExtInst %float %1 Pow %9954 %9891
               OpBranch %9948
       %9949 = OpLabel
       %9956 = OpFMul %float %9876 %9876
       %9957 = OpFMul %float %9945 %9956
       %9958 = OpFNegate %float %9957
       %9959 = OpExtInst %float %1 Fma %9958 %9957 %float_1
       %9960 = OpExtInst %float %1 FClamp %9959 %float_0 %float_1
       %9961 = OpFMul %float %9960 %9960
               OpBranch %9948
       %9948 = OpLabel
       %9962 = OpPhi %float %9955 %9950 %9961 %9949
               OpSelectionMerge %9963 None
               OpBranchConditional %9912 %9964 %9963
       %9964 = OpLabel
       %9965 = OpDot %float %9947 %9892
       %9966 = OpCompositeExtract %float %9867 0
       %9967 = OpFSub %float %9965 %9966
       %9968 = OpCompositeExtract %float %9867 1
       %9969 = OpFMul %float %9967 %9968
       %9970 = OpExtInst %float %1 FClamp %9969 %float_0 %float_1
       %9971 = OpFMul %float %9970 %9970
       %9972 = OpFMul %float %9962 %9971
               OpBranch %9963
       %9963 = OpLabel
       %9973 = OpPhi %float %9962 %9948 %9972 %9964
       %9974 = OpVectorTimesScalar %v3float %9890 %9973
       %9975 = OpFOrdGreaterThan %bool %9973 %float_0
               OpSelectionMerge %9976 DontFlatten
               OpBranchConditional %9975 %9977 %9976
       %9977 = OpLabel
       %9978 = OpINotEqual %bool %9915 %uint_0
               OpSelectionMerge %9979 DontFlatten
               OpBranchConditional %9978 %9980 %9979
       %9980 = OpLabel
       %9981 = OpDot %float %9927 %117
       %9982 = OpDot %float %9826 %9927
       %9983 = OpExtInst %float %1 FMix %float_1 %9982 %9981
       %9984 = OpFMul %float %9943 %9983
               OpBranch %9979
       %9979 = OpLabel
       %9985 = OpPhi %float %float_1 %9977 %9984 %9980
       %9986 = OpFAdd %float %9985 %9985
       %9987 = OpFOrdGreaterThan %bool %9986 %float_0
               OpSelectionMerge %9988 DontFlatten
               OpBranchConditional %9987 %9989 %9988
       %9989 = OpLabel
       %9990 = OpFMul %float %float_0_5 %9901
       %9991 = OpVectorTimesScalar %v3float %9902 %9990
       %9992 = OpFSub %v3float %9944 %9991
       %9993 = OpFAdd %v3float %9944 %9991
       %9994 = OpExtInst %float %1 NMax %8423 %8421
       %9995 = OpFOrdGreaterThan %bool %9901 %float_0
               OpSelectionMerge %9996 DontFlatten
               OpBranchConditional %9995 %9997 %9998
       %9998 = OpLabel
       %9999 = OpDot %float %9992 %9992
      %10000 = OpFAdd %float %9999 %float_1
      %10001 = OpFDiv %float %float_1 %10000
      %10002 = OpExtInst %float %1 InverseSqrt %9999
      %10003 = OpVectorTimesScalar %v3float %9992 %10002
      %10004 = OpDot %float %8446 %10003
               OpBranch %9996
       %9997 = OpLabel
      %10005 = OpDot %float %9992 %9992
      %10006 = OpDot %float %9993 %9993
      %10007 = OpExtInst %float %1 InverseSqrt %10005
      %10008 = OpExtInst %float %1 InverseSqrt %10006
      %10009 = OpFMul %float %10007 %10008
      %10010 = OpDot %float %9992 %9993
      %10011 = OpFMul %float %10010 %10009
      %10012 = OpExtInst %float %1 Fma %10011 %float_0_5 %float_0_5
      %10013 = OpExtInst %float %1 Fma %10007 %10008 %10012
      %10014 = OpFDiv %float %10009 %10013
      %10015 = OpDot %float %8446 %9992
      %10016 = OpDot %float %8446 %9993
      %10017 = OpFMul %float %10016 %10008
      %10018 = OpExtInst %float %1 Fma %10015 %10007 %10017
      %10019 = OpFMul %float %float_0_5 %10018
               OpBranch %9996
       %9996 = OpLabel
      %10020 = OpPhi %float %float_1 %9998 %10011 %9997
      %10021 = OpPhi %float %10004 %9998 %10019 %9997
      %10022 = OpPhi %float %10001 %9998 %10014 %9997
      %10023 = OpFOrdGreaterThan %bool %9897 %float_0
               OpSelectionMerge %10024 None
               OpBranchConditional %10023 %10025 %10024
      %10025 = OpLabel
      %10026 = OpFMul %float %9897 %9897
      %10027 = OpFMul %float %10026 %10022
      %10028 = OpExtInst %float %1 FClamp %10027 %float_0 %float_1
      %10029 = OpExtInst %float %1 Sqrt %10028
      %10030 = OpFOrdLessThan %bool %10021 %10029
               OpSelectionMerge %10031 None
               OpBranchConditional %10030 %10032 %10031
      %10032 = OpLabel
      %10033 = OpFNegate %float %10029
      %10034 = OpExtInst %float %1 NMax %10021 %10033
      %10035 = OpFAdd %float %10029 %10034
      %10036 = OpFMul %float %10035 %10035
      %10037 = OpFMul %float %float_4 %10029
      %10038 = OpFDiv %float %10036 %10037
               OpBranch %10031
      %10031 = OpLabel
      %10039 = OpPhi %float %10021 %10025 %10038 %10032
               OpBranch %10024
      %10024 = OpLabel
      %10040 = OpPhi %float %10021 %9996 %10039 %10031
      %10041 = OpExtInst %float %1 FClamp %10040 %float_0 %float_1
      %10042 = OpSelect %float %9906 %10022 %float_1
               OpSelectionMerge %10043 None
               OpBranchConditional %9995 %10044 %10043
      %10044 = OpLabel
      %10045 = OpFNegate %v3float %658
      %10046 = OpExtInst %v3float %1 Reflect %10045 %8446
      %10047 = OpFSub %v3float %9993 %9992
      %10048 = OpDot %float %10046 %10047
      %10049 = OpVectorTimesScalar %v3float %10046 %10048
      %10050 = OpFSub %v3float %10049 %10047
      %10051 = OpDot %float %9992 %10050
      %10052 = OpFMul %float %10048 %10048
      %10053 = OpFNegate %float %10052
      %10054 = OpExtInst %float %1 Fma %9901 %9901 %10053
      %10055 = OpFDiv %float %10051 %10054
      %10056 = OpExtInst %float %1 FClamp %10055 %float_0 %float_1
      %10057 = OpVectorTimesScalar %v3float %10047 %10056
      %10058 = OpFAdd %v3float %9992 %10057
               OpBranch %10043
      %10043 = OpLabel
      %10059 = OpPhi %v3float %9992 %10024 %10058 %10044
      %10060 = OpDot %float %10059 %10059
      %10061 = OpExtInst %float %1 InverseSqrt %10060
      %10062 = OpVectorTimesScalar %v3float %10059 %10061
      %10063 = OpExtInst %float %1 NMax %9994 %8421
      %10064 = OpFMul %float %9897 %10061
      %10065 = OpFNegate %float %10063
      %10066 = OpExtInst %float %1 Fma %10065 %10063 %float_1
      %10067 = OpFMul %float %10064 %10066
      %10068 = OpExtInst %float %1 FClamp %10067 %float_0 %float_1
      %10069 = OpFMul %float %9905 %10061
      %10070 = OpExtInst %float %1 FClamp %10069 %float_0 %float_1
      %10071 = OpExtInst %float %1 NMax %9901 %9897
      %10072 = OpFNegate %float %10071
      %10073 = OpExtInst %float %1 Fma %10072 %float_0_0500000007 %float_1
      %10074 = OpExtInst %float %1 FClamp %10073 %float_0 %float_1
      %10075 = OpBitcast %uint %10074
      %10076 = OpShiftLeftLogical %uint %10075 %uint_1
      %10077 = OpBitwiseOr %uint %uint_0 %10076
      %10078 = OpDot %float %8446 %10062
      %10079 = OpDot %float %8446 %658
      %10080 = OpDot %float %658 %10062
      %10081 = OpExtInst %float %1 Fma %float_2 %10080 %float_2
      %10082 = OpExtInst %float %1 InverseSqrt %10081
      %10083 = OpFAdd %float %10078 %10079
      %10084 = OpFMul %float %10083 %10082
      %10085 = OpExtInst %float %1 FClamp %10084 %float_0 %float_1
      %10086 = OpExtInst %float %1 Fma %10082 %10080 %10082
      %10087 = OpExtInst %float %1 FClamp %10086 %float_0 %float_1
      %10088 = OpFOrdGreaterThan %bool %10068 %float_0
               OpSelectionMerge %10089 None
               OpBranchConditional %10088 %10090 %10089
      %10090 = OpLabel
      %10091 = OpFNegate %float %10068
      %10092 = OpExtInst %float %1 Fma %10091 %10068 %float_1
      %10093 = OpExtInst %float %1 Sqrt %10092
      %10094 = OpFMul %float %float_2 %10078
      %10095 = OpFNegate %float %10080
      %10096 = OpExtInst %float %1 Fma %10094 %10079 %10095
      %10097 = OpFOrdGreaterThanEqual %bool %10096 %10093
               OpSelectionMerge %10098 None
               OpBranchConditional %10097 %10099 %10100
      %10100 = OpLabel
      %10101 = OpFNegate %float %10096
      %10102 = OpExtInst %float %1 Fma %10101 %10096 %float_1
      %10103 = OpExtInst %float %1 InverseSqrt %10102
      %10104 = OpFMul %float %10068 %10103
      %10105 = OpExtInst %float %1 Fma %10101 %10078 %10079
      %10106 = OpFMul %float %10104 %10105
      %10107 = OpFMul %float %float_2 %10079
      %10108 = OpExtInst %float %1 Fma %10107 %10079 %float_n1
      %10109 = OpExtInst %float %1 Fma %10101 %10080 %10108
      %10110 = OpFMul %float %10104 %10109
      %10111 = OpFNegate %float %10078
      %10112 = OpExtInst %float %1 Fma %10111 %10078 %float_1
      %10113 = OpFNegate %float %10079
      %10114 = OpExtInst %float %1 Fma %10113 %10079 %10112
      %10115 = OpExtInst %float %1 Fma %10095 %10080 %10114
      %10116 = OpFMul %float %10094 %10079
      %10117 = OpExtInst %float %1 Fma %10116 %10080 %10115
      %10118 = OpExtInst %float %1 FClamp %10117 %float_0 %float_1
      %10119 = OpExtInst %float %1 Sqrt %10118
      %10120 = OpFMul %float %10104 %10119
      %10121 = OpFMul %float %10120 %float_2
      %10122 = OpFMul %float %10121 %10079
      %10123 = OpExtInst %float %1 Fma %10078 %10093 %10079
      %10124 = OpExtInst %float %1 Fma %10104 %10105 %10123
      %10125 = OpExtInst %float %1 Fma %10080 %10093 %float_1
      %10126 = OpExtInst %float %1 Fma %10104 %10109 %10125
      %10127 = OpFMul %float %10120 %10126
      %10128 = OpFMul %float %10124 %10126
      %10129 = OpFMul %float %10122 %10124
      %10130 = OpFMul %float %float_0_25 %10122
      %10131 = OpFMul %float %10130 %10124
      %10132 = OpExtInst %float %1 Fma %float_n0_5 %10127 %10131
      %10133 = OpFMul %float %10128 %10132
      %10134 = OpFMul %float %10127 %float_n2
      %10135 = OpExtInst %float %1 Fma %10122 %10124 %10134
      %10136 = OpFMul %float %10129 %10135
      %10137 = OpExtInst %float %1 Fma %10127 %10127 %10136
      %10138 = OpFMul %float %10126 %10126
      %10139 = OpExtInst %float %1 Fma %10080 %10093 %10126
      %10140 = OpExtInst %float %1 Fma %float_n0_5 %10139 %float_n0_5
      %10141 = OpFMul %float %10128 %10140
      %10142 = OpExtInst %float %1 Fma %10123 %10138 %10141
      %10143 = OpExtInst %float %1 Fma %10124 %10142 %10137
      %10144 = OpFMul %float %float_2 %10133
      %10145 = OpFMul %float %10133 %10133
      %10146 = OpExtInst %float %1 Fma %10143 %10143 %10145
      %10147 = OpFDiv %float %10144 %10146
      %10148 = OpFMul %float %10147 %10143
      %10149 = OpFNegate %float %10147
      %10150 = OpExtInst %float %1 Fma %10149 %10133 %float_1
      %10151 = OpFMul %float %10148 %10120
      %10152 = OpExtInst %float %1 Fma %10150 %10106 %10151
      %10153 = OpFMul %float %10148 %10122
      %10154 = OpExtInst %float %1 Fma %10150 %10110 %10153
      %10155 = OpExtInst %float %1 Fma %10078 %10093 %10152
      %10156 = OpExtInst %float %1 Fma %10080 %10093 %10154
      %10157 = OpExtInst %float %1 Fma %float_2 %10156 %float_2
      %10158 = OpExtInst %float %1 InverseSqrt %10157
      %10159 = OpFAdd %float %10155 %10079
      %10160 = OpFMul %float %10159 %10158
      %10161 = OpExtInst %float %1 FClamp %10160 %float_0 %float_1
      %10162 = OpExtInst %float %1 Fma %10158 %10156 %10158
      %10163 = OpExtInst %float %1 FClamp %10162 %float_0 %float_1
               OpBranch %10098
      %10099 = OpLabel
      %10164 = OpExtInst %float %1 FAbs %10079
               OpBranch %10098
      %10098 = OpLabel
      %10165 = OpPhi %float %10161 %10100 %float_1 %10099
      %10166 = OpPhi %float %10163 %10100 %10164 %10099
               OpBranch %10089
      %10089 = OpLabel
      %10167 = OpPhi %float %10085 %10043 %10165 %10098
      %10168 = OpPhi %float %10087 %10043 %10166 %10098
      %10169 = OpExtInst %float %1 FAbs %10079
      %10170 = OpFAdd %float %10169 %float_9_99999975en06
      %10171 = OpExtInst %float %1 FClamp %10170 %float_0 %float_1
      %10172 = OpFMul %float %9994 %9994
      %10173 = OpFMul %float %10172 %10172
      %10174 = OpShiftRightLogical %uint %10077 %uint_1
      %10175 = OpBitcast %float %10174
      %10176 = OpExtInst %float %1 FClamp %10079 %float_0 %float_1
      %10177 = OpExtInst %float %1 FClamp %10041 %float_0 %float_1
      %10178 = OpExtInst %float %1 FClamp %10087 %float_0 %float_1
      %10179 = OpExtInst %float %1 FClamp %10085 %float_0 %float_1
      %10180 = OpBitcast %int %10173
      %10181 = OpISub %int %int_2129859010 %10180
      %10182 = OpBitcast %float %10181
      %10183 = OpExtInst %float %1 Fma %float_2 %10182 %float_n1
      %10184 = OpExtInst %float %1 Log2 %10183
      %10185 = OpFMul %float %float_0_055555556 %10184
      %10186 = OpExtInst %float %1 FClamp %10185 %float_0 %float_1
      %10187 = OpFSub %float %float_1 %10178
      %10188 = OpFMul %float %10187 %10187
      %10189 = OpFMul %float %10188 %10188
      %10190 = OpExtInst %float %1 Fma %10189 %10187 %10178
      %10191 = OpFSub %float %float_1 %10176
      %10192 = OpFMul %float %10191 %10191
      %10193 = OpFMul %float %10192 %10192
      %10194 = OpFMul %float %10193 %10191
      %10195 = OpExtInst %float %1 Fma %float_n0_75 %10194 %float_1
      %10196 = OpFSub %float %float_1 %10177
      %10197 = OpFMul %float %10196 %10196
      %10198 = OpFMul %float %10197 %10197
      %10199 = OpFMul %float %10198 %10196
      %10200 = OpExtInst %float %1 Fma %float_n0_75 %10199 %float_1
      %10201 = OpFMul %float %10195 %10200
      %10202 = OpExtInst %float %1 Fma %float_2_20000005 %10186 %float_n0_5
      %10203 = OpExtInst %float %1 FClamp %10202 %float_0 %float_1
      %10204 = OpExtInst %float %1 FMix %10190 %10201 %10203
      %10205 = OpExtInst %float %1 Fma %float_34_5 %10186 %float_n59
      %10206 = OpExtInst %float %1 Fma %10205 %10186 %float_24_5
      %10207 = OpFMul %float %10206 %10178
      %10208 = OpExtInst %float %1 Fma %float_73_1999969 %10186 %float_n21_2000008
      %10209 = OpExtInst %float %1 NMax %10208 %float_8_89999962
      %10210 = OpFNegate %float %10209
      %10211 = OpBitcast %int %10179
      %10212 = OpShiftRightArithmetic %int %10211 %int_1
      %10213 = OpIAdd %int %int_532487669 %10212
      %10214 = OpBitcast %float %10213
      %10215 = OpFMul %float %10210 %10214
      %10216 = OpExtInst %float %1 Exp2 %10215
      %10217 = OpFMul %float %10207 %10216
      %10218 = OpExtInst %float %1 Fma %10217 %10175 %10204
      %10219 = OpFMul %float %float_0_318309873 %10218
      %10220 = OpVectorTimesScalar %v3float %8643 %10219
      %10221 = OpFMul %float %10042 %10041
      %10222 = OpVectorTimesScalar %v3float %127 %10221
      %10223 = OpFMul %v3float %10220 %10222
      %10224 = OpBitwiseAnd %uint %10077 %uint_1
      %10225 = OpIEqual %bool %10224 %uint_1
               OpSelectionMerge %10226 None
               OpBranchConditional %10225 %10227 %10228
      %10228 = OpLabel
      %10229 = OpFOrdGreaterThan %bool %10070 %float_0
               OpSelectionMerge %10230 None
               OpBranchConditional %10229 %10231 %10230
      %10231 = OpLabel
      %10232 = OpFMul %float %10070 %10070
      %10233 = OpExtInst %float %1 Fma %10168 %float_3_5999999 %float_0_400000006
      %10234 = OpFDiv %float %10232 %10233
      %10235 = OpExtInst %float %1 Fma %10172 %10172 %10234
      %10236 = OpExtInst %float %1 FClamp %10235 %float_0 %float_1
               OpBranch %10230
      %10230 = OpLabel
      %10237 = OpPhi %float %10173 %10228 %10236 %10231
               OpSelectionMerge %10238 None
               OpBranchConditional %10088 %10239 %10238
      %10239 = OpLabel
      %10240 = OpFMul %float %float_0_25 %10068
      %10241 = OpBitcast %int %10237
      %10242 = OpShiftRightArithmetic %int %10241 %int_1
      %10243 = OpIAdd %int %int_532487669 %10242
      %10244 = OpBitcast %float %10243
      %10245 = OpExtInst %float %1 Fma %float_3 %10244 %10068
      %10246 = OpFMul %float %10240 %10245
      %10247 = OpFAdd %float %10168 %float_0_00100000005
      %10248 = OpFDiv %float %10246 %10247
      %10249 = OpFAdd %float %10237 %10248
      %10250 = OpFDiv %float %10237 %10249
               OpBranch %10238
      %10238 = OpLabel
      %10251 = OpPhi %float %float_1 %10230 %10250 %10239
      %10252 = OpPhi %float %10237 %10230 %10249 %10239
      %10253 = OpFOrdLessThan %bool %10020 %float_1
               OpSelectionMerge %10254 None
               OpBranchConditional %10253 %10255 %10254
      %10255 = OpLabel
      %10256 = OpFSub %float %float_1_00010002 %10020
      %10257 = OpFAdd %float %float_1 %10020
      %10258 = OpFDiv %float %10256 %10257
      %10259 = OpExtInst %float %1 Sqrt %10258
      %10260 = OpFMul %float %float_0_25 %10259
      %10261 = OpBitcast %int %10252
      %10262 = OpShiftRightArithmetic %int %10261 %int_1
      %10263 = OpIAdd %int %int_532487669 %10262
      %10264 = OpBitcast %float %10263
      %10265 = OpExtInst %float %1 Fma %float_3 %10264 %10259
      %10266 = OpFMul %float %10260 %10265
      %10267 = OpFAdd %float %10168 %float_0_00100000005
      %10268 = OpFDiv %float %10266 %10267
      %10269 = OpFAdd %float %10252 %10268
      %10270 = OpFDiv %float %10252 %10269
      %10271 = OpExtInst %float %1 Sqrt %10270
      %10272 = OpFMul %float %10251 %10271
               OpBranch %10254
      %10254 = OpLabel
      %10273 = OpPhi %float %10251 %10238 %10272 %10255
      %10274 = OpFNegate %float %10167
      %10275 = OpExtInst %float %1 Fma %10167 %10237 %10274
      %10276 = OpExtInst %float %1 Fma %10275 %10167 %float_1
      %10277 = OpFMul %float %float_3_14159274 %10276
      %10278 = OpFMul %float %10277 %10276
      %10279 = OpFDiv %float %10237 %10278
      %10280 = OpFMul %float %10279 %10273
      %10281 = OpExtInst %float %1 Sqrt %10237
      %10282 = OpFSub %float %float_1 %10281
      %10283 = OpExtInst %float %1 Fma %10171 %10282 %10281
      %10284 = OpExtInst %float %1 Fma %10041 %10282 %10281
      %10285 = OpFMul %float %10171 %10284
      %10286 = OpExtInst %float %1 Fma %10041 %10283 %10285
      %10287 = OpFDiv %float %float_0_5 %10286
      %10288 = OpFSub %float %float_1 %10168
      %10289 = OpFMul %float %10288 %10288
      %10290 = OpFMul %float %10289 %10289
      %10291 = OpFMul %float %10290 %10288
      %10292 = OpCompositeExtract %float %8556 1
      %10293 = OpFMul %float %float_50 %10292
      %10294 = OpExtInst %float %1 FClamp %10293 %float_0 %float_1
      %10295 = OpFMul %float %10294 %10291
      %10296 = OpCompositeConstruct %v3float %10295 %10295 %10295
      %10297 = OpFNegate %float %10290
      %10298 = OpExtInst %float %1 Fma %10297 %10288 %float_1
      %10299 = OpVectorTimesScalar %v3float %8556 %10298
      %10300 = OpFAdd %v3float %10296 %10299
      %10301 = OpFMul %float %10280 %10287
      %10302 = OpVectorTimesScalar %v3float %10300 %10301
      %10303 = OpFMul %v3float %10222 %10302
               OpBranch %10226
      %10227 = OpLabel
               OpBranch %10226
      %10226 = OpLabel
      %10304 = OpPhi %v3float %10303 %10254 %102 %10227
      %10305 = OpCompositeExtract %float %8556 1
      %10306 = OpFMul %float %float_50 %10305
      %10307 = OpExtInst %float %1 FClamp %10306 %float_0 %float_1
      %10308 = OpCompositeConstruct %v3float %10307 %10307 %10307
      %10309 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
      %10310 = OpLoad %type_sampler %View_ShadingEnergySampler
      %10311 = OpCompositeConstruct %v2float %10171 %9994
      %10312 = OpSampledImage %type_sampled_image %10309 %10310
      %10313 = OpImageSampleExplicitLod %v4float %10312 %10311 Lod %float_0
      %10314 = OpAccessChain %_ptr_Uniform_uint %View %uint_40
      %10315 = OpLoad %uint %10314
      %10316 = OpINotEqual %bool %10315 %uint_0
      %10317 = OpCompositeConstruct %v3bool %10316 %10316 %10316
      %10318 = OpCompositeExtract %float %10313 0
      %10319 = OpFSub %float %float_1 %10318
      %10320 = OpFDiv %float %10319 %10318
      %10321 = OpVectorTimesScalar %v3float %8556 %10320
      %10322 = OpFAdd %v3float %127 %10321
      %10323 = OpSelect %v3float %10317 %10322 %127
      %10324 = OpVectorTimesScalar %v3float %8556 %10318
      %10325 = OpFSub %v3float %10308 %8556
      %10326 = OpCompositeExtract %float %10313 1
      %10327 = OpVectorTimesScalar %v3float %10325 %10326
      %10328 = OpFAdd %v3float %10324 %10327
      %10329 = OpFMul %v3float %10323 %10328
      %10330 = OpAccessChain %_ptr_Uniform_uint %View %uint_41
      %10331 = OpLoad %uint %10330
      %10332 = OpINotEqual %bool %10331 %uint_0
      %10333 = OpDot %float %10329 %171
      %10334 = OpFSub %float %float_1 %10333
      %10335 = OpSelect %float %10332 %10334 %float_1
      %10336 = OpVectorTimesScalar %v3float %10223 %10335
      %10337 = OpFMul %v3float %10304 %10323
      %10338 = OpVectorTimesScalar %v3float %10337 %9911
      %10339 = OpVectorTimesScalar %v3float %9974 %9985
      %10340 = OpFMul %v3float %10338 %10339
      %10341 = OpExtInst %v3float %1 Fma %10336 %10339 %102
               OpBranch %9988
       %9988 = OpLabel
      %10342 = OpPhi %v3float %459 %9979 %10341 %10226
      %10343 = OpPhi %v3float %459 %9979 %10340 %10226
               OpBranch %9976
       %9976 = OpLabel
      %10344 = OpPhi %v3float %459 %9963 %10342 %9988
      %10345 = OpPhi %v3float %459 %9963 %10343 %9988
      %10346 = OpCompositeExtract %float %10344 0
      %10347 = OpCompositeExtract %float %10344 1
      %10348 = OpCompositeExtract %float %10344 2
      %10349 = OpCompositeConstruct %v4float %10346 %10347 %10348 %float_0
      %10350 = OpCompositeExtract %float %10345 0
      %10351 = OpCompositeExtract %float %10345 1
      %10352 = OpCompositeExtract %float %10345 2
      %10353 = OpCompositeConstruct %v4float %10350 %10351 %10352 %float_0
      %10354 = OpBitwiseAnd %uint %9942 %8718
      %10355 = OpINotEqual %bool %10354 %uint_0
               OpSelectionMerge %10356 Flatten
               OpBranchConditional %10355 %10357 %10356
      %10357 = OpLabel
      %10358 = OpFAdd %v4float %9842 %10349
      %10359 = OpFAdd %v4float %9845 %10353
               OpBranch %10356
      %10356 = OpLabel
       %9843 = OpPhi %v4float %9842 %9976 %10358 %10357
       %9846 = OpPhi %v4float %9845 %9976 %10359 %10357
               OpBranch %9844
       %9844 = OpLabel
       %9848 = OpIAdd %uint %9847 %uint_1
               OpBranch %9841
       %9850 = OpLabel
      %10360 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_16
      %10361 = OpLoad %uint %10360
      %10362 = OpIEqual %bool %10361 %uint_0
      %10363 = OpCompositeConstruct %v4bool %10362 %10362 %10362 %10362
      %10364 = OpSelect %v4float %10363 %98 %9842
      %10365 = OpSelect %v4float %10363 %98 %9845
      %10366 = OpVectorShuffle %v3float %10364 %10364 0 1 2
      %10367 = OpVectorShuffle %v3float %10365 %10365 0 1 2
      %10368 = OpFAdd %v3float %10366 %10367
      %10369 = OpAccessChain %_ptr_Uniform_float %View %uint_18
      %10370 = OpLoad %float %10369
      %10371 = OpFOrdGreaterThan %bool %10370 %float_0
               OpSelectionMerge %10372 DontFlatten
               OpBranchConditional %10371 %10373 %10372
      %10373 = OpLabel
      %10374 = OpIAdd %uint %8389 %uint_1
      %10375 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10374
      %10376 = OpLoad %v4float %10375
      %10377 = OpVectorShuffle %v3float %10376 %10376 0 1 2
      %10378 = OpIAdd %uint %8389 %uint_18
      %10379 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10378
      %10380 = OpLoad %v4float %10379
      %10381 = OpIAdd %uint %8389 %uint_17
      %10382 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10381
      %10383 = OpLoad %v4float %10382
      %10384 = OpCompositeExtract %float %10383 3
      %10385 = OpVectorShuffle %v3float %10380 %10380 0 1 2
      %10386 = OpIAdd %uint %8389 %uint_24
      %10387 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10386
      %10388 = OpLoad %v4float %10387
      %10389 = OpCompositeExtract %float %10388 3
      %10390 = OpIAdd %uint %8389 %uint_25
      %10391 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10390
      %10392 = OpLoad %v4float %10391
      %10393 = OpCompositeExtract %float %10392 3
      %10394 = OpIAdd %uint %8389 %uint_31
      %10395 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10394
      %10396 = OpLoad %v4float %10395
      %10397 = OpCompositeExtract %float %10396 0
      %10398 = OpCompositeConstruct %v3float %10384 %10389 %10393
      %10399 = OpFSub %v3float %593 %10377
      %10400 = OpFSub %v3float %641 %10385
      %10401 = OpVectorTimesScalar %v3float %10399 %float_2097152
      %10402 = OpFAdd %v3float %10401 %10400
      %10403 = OpExtInst %v3float %1 FAbs %10402
      %10404 = OpFAdd %v3float %10398 %127
      %10405 = OpFOrdGreaterThan %v3bool %10403 %10404
      %10406 = OpAny %bool %10405
               OpSelectionMerge %10407 None
               OpBranchConditional %10406 %10408 %10409
      %10409 = OpLabel
      %10410 = OpFOrdGreaterThan %bool %10397 %float_0
               OpSelectionMerge %10411 None
               OpBranchConditional %10410 %10412 %10411
      %10412 = OpLabel
      %10413 = OpFSub %v3float %640 %582
      %10414 = OpExtInst %v3float %1 FAbs %10413
      %10415 = OpCompositeExtract %float %10414 0
      %10416 = OpCompositeExtract %float %10414 1
      %10417 = OpCompositeExtract %float %10414 2
      %10418 = OpExtInst %float %1 NMax %10416 %10417
      %10419 = OpExtInst %float %1 NMax %10415 %10418
      %10420 = OpFSub %float %10419 %10397
      %10421 = OpExtInst %float %1 FAbs %10420
      %10422 = OpFMul %float %10421 %float_20
      %10423 = OpExtInst %float %1 FClamp %10422 %float_0 %float_1
      %10424 = OpFSub %float %float_1 %10423
      %10425 = OpVectorTimesScalar %v3float %140 %10424
               OpBranch %10411
      %10411 = OpLabel
      %10426 = OpPhi %v3float %102 %10409 %10425 %10412
               OpBranch %10407
      %10408 = OpLabel
      %10427 = OpFMul %v3float %593 %133
      %10428 = OpFMul %v3float %641 %133
      %10429 = OpCompositeExtract %float %10427 0
      %10430 = OpCompositeExtract %float %10428 0
      %10431 = OpCompositeExtract %float %10427 1
      %10432 = OpCompositeExtract %float %10428 1
      %10433 = OpFAdd %float %10429 %10431
      %10434 = OpFAdd %float %10430 %10432
      %10435 = OpCompositeExtract %float %10427 2
      %10436 = OpCompositeExtract %float %10428 2
      %10437 = OpFAdd %float %10433 %10435
      %10438 = OpFAdd %float %10434 %10436
      %10439 = OpFMul %float %10437 %float_4194_3042
      %10440 = OpExtInst %float %1 Fract %10439
      %10441 = OpExtInst %float %1 Fma %10438 %float_0_00200000009 %10440
      %10442 = OpExtInst %float %1 Fract %10441
      %10443 = OpCompositeConstruct %v3float %10442 %10442 %10442
      %10444 = OpFOrdGreaterThan %v3bool %10443 %137
      %10445 = OpSelect %v3float %10444 %127 %102
      %10446 = OpExtInst %v3float %1 FMix %134 %135 %10445
               OpBranch %10407
      %10407 = OpLabel
      %10447 = OpPhi %v3float %102 %10411 %10446 %10408
      %10448 = OpPhi %v3float %10426 %10411 %10446 %10408
               OpBranch %10372
      %10372 = OpLabel
      %10449 = OpPhi %v3float %102 %9850 %10447 %10407
      %10450 = OpPhi %v3float %102 %9850 %10448 %10407
      %10451 = OpFAdd %v3float %10368 %8644
      %10452 = OpFAdd %v3float %10451 %10450
      %10453 = OpVectorShuffle %v3float %617 %617 0 1 2
      %10454 = OpVectorTimesScalar %v3float %10453 %float_3_14159274
      %10455 = OpVectorTimesScalar %v3float %8628 %float_3_14159274
      %10456 = OpDot %float %8446 %658
      %10457 = OpExtInst %float %1 NMax %float_0 %10456
      %10458 = OpLoad %type_2d_image %OpaqueBasePass_PreIntegratedGFTexture
      %10459 = OpLoad %type_sampler %View_SharedBilinearClampedSampler
      %10460 = OpCompositeConstruct %v2float %10457 %8423
      %10461 = OpSampledImage %type_sampled_image %10458 %10459
      %10462 = OpImageSampleExplicitLod %v4float %10461 %10460 Lod %float_0
      %10463 = OpCompositeExtract %float %10462 0
      %10464 = OpVectorTimesScalar %v3float %8556 %10463
      %10465 = OpCompositeExtract %float %8556 1
      %10466 = OpFMul %float %float_50 %10465
      %10467 = OpExtInst %float %1 FClamp %10466 %float_0 %float_1
      %10468 = OpCompositeExtract %float %10462 1
      %10469 = OpFMul %float %10467 %10468
      %10470 = OpCompositeConstruct %v3float %10469 %10469 %10469
      %10471 = OpFAdd %v3float %10464 %10470
      %10472 = OpLoad %type_2d_image %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture
      %10473 = OpAccessChain %_ptr_Uniform_v2float %SingleLayerWater %uint_2
      %10474 = OpLoad %v2float %10473
      %10475 = OpLoad %type_2d_image %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture
      %10476 = OpAccessChain %_ptr_Uniform_v4float %SingleLayerWater %uint_0
      %10477 = OpLoad %v4float %10476
      %10478 = OpVectorShuffle %v2float %10477 %10477 0 1
      %10479 = OpVectorShuffle %v2float %10477 %10477 2 3
      %10480 = OpAccessChain %_ptr_Uniform_v4float %SingleLayerWater %uint_1
      %10481 = OpLoad %v4float %10480
      %10482 = OpFOrdGreaterThan %bool %8447 %float_0
               OpSelectionMerge %10483 None
               OpBranchConditional %10482 %10484 %10483
      %10484 = OpLabel
      %10485 = OpExtInst %float %1 NMin %8536 %float_0_99000001
      %10486 = OpExtInst %float %1 Sqrt %10485
      %10487 = OpFSub %float %float_1 %10486
      %10488 = OpFDiv %float %float_2 %10487
      %10489 = OpFSub %float %10488 %float_1
      %10490 = OpExtInst %v2float %1 FClamp %649 %10478 %10479
      %10491 = OpSampledImage %type_sampled_image %10472 %10459
      %10492 = OpImageSampleExplicitLod %v4float %10491 %10490 Lod %float_0
      %10493 = OpCompositeExtract %float %10492 0
      %10494 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_0
      %10495 = OpLoad %float %10494
      %10496 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_1
      %10497 = OpLoad %float %10496
      %10498 = OpExtInst %float %1 Fma %10493 %10495 %10497
      %10499 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_2
      %10500 = OpLoad %float %10499
      %10501 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_3
      %10502 = OpLoad %float %10501
      %10503 = OpFNegate %float %10502
      %10504 = OpExtInst %float %1 Fma %10493 %10500 %10503
      %10505 = OpFDiv %float %float_1 %10504
      %10506 = OpFAdd %float %10498 %10505
      %10507 = OpCompositeExtract %v4float %587 0
      %10508 = OpVectorShuffle %v3float %10507 %10507 0 1 2
      %10509 = OpCompositeExtract %v4float %587 1
      %10510 = OpVectorShuffle %v3float %10509 %10509 0 1 2
      %10511 = OpCompositeExtract %v4float %587 2
      %10512 = OpVectorShuffle %v3float %10511 %10511 0 1 2
      %10513 = OpCompositeConstruct %mat3v3float %10508 %10510 %10512
      %10514 = OpMatrixTimesVector %v3float %10513 %8446
      %10515 = OpExtInst %v3float %1 Normalize %10514
      %10516 = OpVectorShuffle %v2float %10515 %10515 0 1
      %10517 = OpFSub %float %8373 %float_1
      %10518 = OpVectorTimesScalar %v2float %10516 %10517
      %10519 = OpVectorShuffle %v2float %605 %605 0 1
      %10520 = OpFMul %v2float %10518 %10519
      %10521 = OpVectorShuffle %v2float %607 %607 2 3
      %10522 = OpFMul %v2float %10520 %10521
      %10523 = OpCompositeExtract %float %10481 0
      %10524 = OpCompositeExtract %float %10481 1
      %10525 = OpFMul %float %10524 %10523
      %10526 = OpCompositeConstruct %v2float %10523 %10525
      %10527 = OpVectorShuffle %v2float %10481 %10481 2 3
      %10528 = OpFMul %v2float %10527 %310
      %10529 = OpFMul %v2float %10528 %10526
      %10530 = OpFMul %v2float %10522 %10529
      %10531 = OpFNegate %float %8375
      %10532 = OpFMul %float %8375 %float_n0_5
      %10533 = OpExtInst %float %1 FAbs %10532
      %10534 = OpExtInst %float %1 FClamp %10533 %float_0 %float_50
      %10535 = OpExtInst %float %1 NMax %float_1 %10534
      %10536 = OpFDiv %float %float_1 %10535
      %10537 = OpFSub %float %10506 %644
      %10538 = OpExtInst %float %1 Fma %10537 %10536 %10531
      %10539 = OpExtInst %float %1 FClamp %10538 %float_0 %float_1
      %10540 = OpVectorTimesScalar %v2float %10530 %10539
      %10541 = OpVectorTimesScalar %v2float %10540 %float_4
      %10542 = OpFMul %float %10537 %float_0_0333333351
      %10543 = OpExtInst %float %1 FClamp %10542 %float_0 %float_1
      %10544 = OpVectorTimesScalar %v2float %10541 %10543
      %10545 = OpFAdd %v2float %10490 %10544
      %10546 = OpExtInst %v2float %1 FClamp %10545 %10478 %10479
      %10547 = OpSampledImage %type_sampled_image %10472 %10459
      %10548 = OpImageGather %v4float %10547 %10546 %int_0 None
      %10549 = OpCompositeExtract %float %10548 0
      %10550 = OpExtInst %float %1 Fma %10549 %10495 %10497
      %10551 = OpExtInst %float %1 Fma %10549 %10500 %10503
      %10552 = OpFDiv %float %float_1 %10551
      %10553 = OpFAdd %float %10550 %10552
      %10554 = OpCompositeExtract %float %10548 1
      %10555 = OpExtInst %float %1 Fma %10554 %10495 %10497
      %10556 = OpExtInst %float %1 Fma %10554 %10500 %10503
      %10557 = OpFDiv %float %float_1 %10556
      %10558 = OpFAdd %float %10555 %10557
      %10559 = OpCompositeExtract %float %10548 2
      %10560 = OpExtInst %float %1 Fma %10559 %10495 %10497
      %10561 = OpExtInst %float %1 Fma %10559 %10500 %10503
      %10562 = OpFDiv %float %float_1 %10561
      %10563 = OpFAdd %float %10560 %10562
      %10564 = OpCompositeExtract %float %10548 3
      %10565 = OpExtInst %float %1 Fma %10564 %10495 %10497
      %10566 = OpExtInst %float %1 Fma %10564 %10500 %10503
      %10567 = OpFDiv %float %float_1 %10566
      %10568 = OpFAdd %float %10565 %10567
      %10569 = OpCompositeConstruct %v4float %10553 %10558 %10563 %10568
      %10570 = OpCompositeConstruct %v4float %644 %644 %644 %644
      %10571 = OpFOrdLessThan %v4bool %10569 %10570
      %10572 = OpAny %bool %10571
               OpSelectionMerge %10573 None
               OpBranchConditional %10572 %10574 %10575
      %10575 = OpLabel
      %10576 = OpFMul %v2float %10546 %10474
      %10577 = OpVectorTimesScalar %v2float %10576 %float_1
      %10578 = OpFSub %v2float %10577 %149
      %10579 = OpExtInst %v2float %1 Fract %10578
      %10580 = OpVectorShuffle %v4float %10548 %10548 3 2 0 1
      %10581 = OpCompositeExtract %float %10579 0
      %10582 = OpFSub %float %float_1 %10581
      %10583 = OpCompositeExtract %float %10579 1
      %10584 = OpFSub %float %float_1 %10583
      %10585 = OpFMul %float %10582 %10584
      %10586 = OpCompositeInsert %v4float %10585 %541 0
      %10587 = OpFMul %float %10581 %10584
      %10588 = OpCompositeInsert %v4float %10587 %10586 1
      %10589 = OpFMul %float %10582 %10583
      %10590 = OpCompositeInsert %v4float %10589 %10588 2
      %10591 = OpFMul %float %10581 %10583
      %10592 = OpCompositeInsert %v4float %10591 %10590 3
      %10593 = OpDot %float %10580 %10592
      %10594 = OpExtInst %float %1 Fma %10593 %10495 %10497
      %10595 = OpExtInst %float %1 Fma %10593 %10500 %10503
      %10596 = OpFDiv %float %float_1 %10595
      %10597 = OpFAdd %float %10594 %10596
               OpBranch %10573
      %10574 = OpLabel
               OpBranch %10573
      %10573 = OpLabel
      %10598 = OpPhi %float %10597 %10575 %10506 %10574
      %10599 = OpPhi %float %10593 %10575 %10493 %10574
      %10600 = OpCompositeConstruct %v2bool %10572 %10572
      %10601 = OpSelect %v2float %10600 %10490 %10546
      %10602 = OpExtInst %float %1 NMax %float_9_99999996en13 %10599
      %10603 = OpFSub %float %10598 %644
      %10604 = OpExtInst %float %1 NMax %float_0 %10603
      %10605 = OpVectorShuffle %v3float %8432 %8432 0 1 2
      %10606 = OpVectorShuffle %v3float %8431 %458 0 1 2
      %10607 = OpFMul %v3float %10605 %10606
      %10608 = OpVectorShuffle %v3float %8434 %458 0 1 2
      %10609 = OpFMul %float %10604 %float_0_0199999996
      %10610 = OpExtInst %float %1 FClamp %10609 %float_0 %float_1
      %10611 = OpCompositeConstruct %v3float %10610 %10610 %10610
      %10612 = OpExtInst %v3float %1 FMix %127 %10608 %10611
      %10613 = OpExtInst %v3float %1 NMax %10606 %189
      %10614 = OpFDiv %float %float_1 %10489
               OpSelectionMerge %10615 None
               OpSwitch %uint_0 %10616
      %10616 = OpLabel
      %10617 = OpDot %float %658 %8446
      %10618 = OpFMul %float %10614 %10614
      %10619 = OpFNegate %float %10617
      %10620 = OpExtInst %float %1 Fma %10619 %10617 %float_1
      %10621 = OpFNegate %float %10618
      %10622 = OpExtInst %float %1 Fma %10621 %10620 %float_1
      %10623 = OpFOrdLessThan %bool %10622 %float_0
               OpSelectionMerge %10624 None
               OpBranchConditional %10623 %10625 %10624
      %10625 = OpLabel
      %10626 = OpFNegate %v3float %658
      %10627 = OpExtInst %v3float %1 Reflect %10626 %8446
               OpBranch %10615
      %10624 = OpLabel
      %10628 = OpFOrdGreaterThanEqual %bool %10617 %float_0
      %10629 = OpSelect %float %10628 %float_1 %float_n1
      %10630 = OpFNegate %float %10629
      %10631 = OpExtInst %float %1 Sqrt %10622
      %10632 = OpFMul %float %10630 %10631
      %10633 = OpExtInst %float %1 Fma %10614 %10617 %10632
      %10634 = OpVectorTimesScalar %v3float %8446 %10633
      %10635 = OpVectorTimesScalar %v3float %658 %10614
      %10636 = OpFSub %v3float %10634 %10635
               OpBranch %10615
      %10615 = OpLabel
      %10637 = OpPhi %v3float %10627 %10625 %10636 %10624
      %10638 = OpPhi %bool %false %10625 %true %10624
               OpSelectionMerge %10639 None
               OpBranchConditional %10638 %10640 %10639
      %10640 = OpLabel
      %10641 = OpFNegate %v3float %619
      %10642 = OpDot %float %10641 %10637
      %10643 = OpExtInst %float %1 Fma %float_1_54999995 %float_0 %float_n0
      %10644 = OpExtInst %float %1 Fma %10643 %10642 %float_1
      %10645 = OpFNegate %float %10643
      %10646 = OpExtInst %float %1 Fma %10645 %10643 %float_1
      %10647 = OpFMul %float %float_12_566371 %10644
      %10648 = OpFMul %float %10647 %10644
      %10649 = OpFDiv %float %10646 %10648
               OpBranch %10639
      %10639 = OpLabel
      %10650 = OpPhi %float %float_0 %10615 %10649 %10640
      %10651 = OpCompositeConstruct %v4float %632 %633 %10602 %float_1
      %10652 = OpMatrixTimesVector %v4float %591 %10651
      %10653 = OpVectorShuffle %v3float %10652 %10652 0 1 2
      %10654 = OpCompositeExtract %float %10652 3
      %10655 = OpCompositeConstruct %v3float %10654 %10654 %10654
      %10656 = OpFDiv %v3float %10653 %10655
      %10657 = OpFSub %v3float %10656 %601
      %10658 = OpFSub %v3float %593 %593
      %10659 = OpFSub %v3float %641 %10657
      %10660 = OpVectorTimesScalar %v3float %10658 %float_2097152
      %10661 = OpFAdd %v3float %10660 %10659
      %10662 = OpCompositeExtract %float %10661 2
      %10663 = OpExtInst %float %1 NMax %float_0 %10662
      %10664 = OpFNegate %float %10663
      %10665 = OpVectorTimesScalar %v3float %10606 %10664
      %10666 = OpExtInst %v3float %1 Exp %10665
      %10667 = OpSampledImage %type_sampled_image %10475 %10459
      %10668 = OpImageSampleExplicitLod %v4float %10667 %10601 Lod %float_0
      %10669 = OpVectorShuffle %v3float %10668 %10668 0 1 2
      %10670 = OpVectorTimesScalar %v3float %10666 %609
      %10671 = OpFMul %v3float %10670 %10669
      %10672 = OpVectorTimesScalar %v3float %10454 %10650
      %10673 = OpVectorTimesScalar %v3float %10455 %float_0_0795774683
      %10674 = OpSelect %float %8687 %float_0 %float_1
      %10675 = OpSelect %float %8687 %float_1 %float_0
      %10676 = OpVectorTimesScalar %v3float %10606 %10604
      %10677 = OpFNegate %v3float %10676
      %10678 = OpExtInst %v3float %1 Exp %10677
      %10679 = OpVectorTimesScalar %v3float %10672 %9828
      %10680 = OpVectorTimesScalar %v3float %10679 %10674
      %10681 = OpFAdd %v3float %10673 %10680
      %10682 = OpFSub %v3float %127 %10678
      %10683 = OpFMul %v3float %10607 %10682
      %10684 = OpFDiv %v3float %10683 %10613
      %10685 = OpExtInst %v3float %1 FClamp %10684 %102 %127
      %10686 = OpFMul %v3float %10681 %10685
      %10687 = OpVectorTimesScalar %v3float %10679 %10675
      %10688 = OpFMul %v3float %10687 %10685
      %10689 = OpFSub %v3float %127 %10471
      %10690 = OpVectorShuffle %v3float %127 %10689 3 4 5
      %10691 = OpFMul %v3float %10688 %10690
      %10692 = OpVectorTimesScalar %v3float %10691 %8447
      %10693 = OpFAdd %v3float %9827 %10692
      %10694 = OpVectorShuffle %v3float %539 %127 3 4 5
      %10695 = OpFMul %v3float %10678 %10694
      %10696 = OpFMul %v3float %10671 %10612
      %10697 = OpFMul %v3float %10695 %10696
      %10698 = OpExtInst %v3float %1 Fma %10686 %10690 %10697
      %10699 = OpVectorTimesScalar %v3float %10698 %8447
               OpBranch %10483
      %10483 = OpLabel
      %10700 = OpPhi %v3float %9827 %10372 %10693 %10639
      %10701 = OpPhi %v3float %102 %10372 %10699 %10639
      %10702 = OpFAdd %v3float %10452 %10701
      %10703 = OpExtInst %v3float %1 Normalize %8445
      %10704 = OpConvertFToU %v2uint %622
      %10705 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %10706 = OpExtInst %v3float %1 FClamp %8435 %102 %127
      %10707 = OpExtInst %v3float %1 Fma %10706 %8409 %8410
      %10708 = OpCompositeInsert %v4float %float_0 %8426 0
      %10709 = OpExtInst %float %1 FClamp %8415 %float_0 %float_1
      %10710 = OpExtInst %float %1 Fma %10709 %8413 %8414
      %10711 = OpCompositeInsert %v4float %10710 %10708 1
      %10712 = OpExtInst %float %1 Fma %8423 %8417 %8418
      %10713 = OpExtInst %float %1 NMax %8421 %10712
      %10714 = OpExtInst %float %1 FClamp %10713 %float_0 %float_1
      %10715 = OpCompositeInsert %v4float %10714 %10711 2
      %10716 = OpExtInst %float %1 FClamp %8425 %float_0 %float_1
      %10717 = OpCompositeInsert %v4float %10716 %10715 3
      %10718 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
      %10719 = OpLoad %type_sampler %View_ShadingEnergySampler
      %10720 = OpAccessChain %_ptr_Uniform_uint %View %uint_40
      %10721 = OpLoad %uint %10720
      %10722 = OpINotEqual %bool %10721 %uint_0
      %10723 = OpCompositeConstruct %v3bool %10722 %10722 %10722
      %10724 = OpAny %bool %556
               OpSelectionMerge %10725 None
               OpBranchConditional %10724 %10726 %10725
      %10726 = OpLabel
               OpSelectionMerge %10727 None
               OpSwitch %uint_4 %10727 0 %10728 3 %10729 5 %10730 4 %10731
      %10731 = OpLabel
      %10732 = OpExtInst %v3float %1 Fma %102 %127 %102
      %10733 = OpExtInst %float %1 Fma %float_1 %10714 %460
               OpSelectionMerge %10734 None
               OpSwitch %uint_0 %10735
      %10735 = OpLabel
               OpSelectionMerge %10736 None
               OpSwitch %uint_4 %10736 0 %10737 3 %10738 5 %10739 4 %10740
      %10740 = OpLabel
      %10741 = OpVectorShuffle %v3float %10707 %458 0 1 2
               OpBranch %10736
      %10739 = OpLabel
      %10742 = OpVectorShuffle %v3float %10707 %458 0 1 2
               OpBranch %10736
      %10738 = OpLabel
      %10743 = OpVectorShuffle %v3float %10707 %458 0 1 2
               OpBranch %10736
      %10737 = OpLabel
      %10744 = OpVectorShuffle %v3float %10707 %458 0 1 2
      %10745 = OpVectorShuffle %v3float %10717 %10717 0 1 2
      %10746 = OpExtInst %float %1 NMax %10710 %10714
      %10747 = OpExtInst %float %1 NMax %float_0 %10746
      %10748 = OpFSub %float %10747 %float_0_0799999982
      %10749 = OpFMul %float %10748 %float_3_125
      %10750 = OpExtInst %float %1 FClamp %10749 %float_0 %float_1
      %10751 = OpCompositeConstruct %v3float %10750 %10750 %10750
      %10752 = OpExtInst %v3float %1 FMix %10744 %10745 %10751
               OpBranch %10736
      %10736 = OpLabel
      %10753 = OpPhi %v3float %456 %10735 %10741 %10740 %10742 %10739 %10743 %10738 %10752 %10737
      %10754 = OpPhi %bool %false %10735 %true %10740 %true %10739 %true %10738 %true %10737
               OpSelectionMerge %10755 None
               OpBranchConditional %10754 %10734 %10755
      %10755 = OpLabel
               OpBranch %10734
      %10734 = OpLabel
      %10756 = OpPhi %v3float %10753 %10736 %102 %10755
      %10757 = OpVectorTimesScalar %v3float %10756 %float_1
      %10758 = OpBitwiseAnd %uint %8535 %uint_4294967288
      %10759 = OpBitwiseOr %uint %10758 %uint_4
               OpBranch %10727
      %10730 = OpLabel
      %10760 = OpBitwiseOr %uint %8535 %uint_0
      %10761 = OpBitwiseAnd %uint %10760 %uint_4294967288
      %10762 = OpBitwiseOr %uint %10761 %uint_6
               OpBranch %10727
      %10729 = OpLabel
      %10763 = OpExtInst %v3float %1 Fma %102 %127 %102
               OpSelectionMerge %10764 None
               OpSwitch %uint_0 %10765
      %10765 = OpLabel
               OpSelectionMerge %10766 None
               OpSwitch %uint_4 %10766 0 %10767 3 %10768 5 %10769 4 %10770
      %10770 = OpLabel
      %10771 = OpVectorShuffle %v3float %10707 %458 0 1 2
               OpBranch %10766
      %10769 = OpLabel
      %10772 = OpVectorShuffle %v3float %10707 %458 0 1 2
               OpBranch %10766
      %10768 = OpLabel
      %10773 = OpVectorShuffle %v3float %10707 %458 0 1 2
               OpBranch %10766
      %10767 = OpLabel
      %10774 = OpVectorShuffle %v3float %10707 %458 0 1 2
      %10775 = OpVectorShuffle %v3float %10717 %10717 0 1 2
      %10776 = OpExtInst %float %1 NMax %10710 %10714
      %10777 = OpExtInst %float %1 NMax %float_0 %10776
      %10778 = OpFSub %float %10777 %float_0_0799999982
      %10779 = OpFMul %float %10778 %float_3_125
      %10780 = OpExtInst %float %1 FClamp %10779 %float_0 %float_1
      %10781 = OpCompositeConstruct %v3float %10780 %10780 %10780
      %10782 = OpExtInst %v3float %1 FMix %10774 %10775 %10781
               OpBranch %10766
      %10766 = OpLabel
      %10783 = OpPhi %v3float %456 %10765 %10771 %10770 %10772 %10769 %10773 %10768 %10782 %10767
      %10784 = OpPhi %bool %false %10765 %true %10770 %true %10769 %true %10768 %true %10767
               OpSelectionMerge %10785 None
               OpBranchConditional %10784 %10764 %10785
      %10785 = OpLabel
               OpBranch %10764
      %10764 = OpLabel
      %10786 = OpPhi %v3float %10783 %10766 %102 %10785
      %10787 = OpVectorTimesScalar %v3float %10786 %float_1
      %10788 = OpBitwiseAnd %uint %8535 %uint_4294967288
      %10789 = OpBitwiseOr %uint %10788 %uint_5
               OpBranch %10727
      %10728 = OpLabel
      %10790 = OpExtInst %v3float %1 Fma %102 %127 %102
      %10791 = OpAll %bool %556
      %10792 = OpLogicalAnd %bool %true %10791
      %10793 = OpLogicalAnd %bool %10792 %true
               OpSelectionMerge %10794 None
               OpSwitch %uint_0 %10795
      %10795 = OpLabel
               OpSelectionMerge %10796 None
               OpSwitch %uint_4 %10796 0 %10797 3 %10798 5 %10799 4 %10800
      %10800 = OpLabel
      %10801 = OpVectorShuffle %v3float %10707 %458 0 1 2
               OpBranch %10796
      %10799 = OpLabel
      %10802 = OpVectorShuffle %v3float %10707 %458 0 1 2
               OpBranch %10796
      %10798 = OpLabel
      %10803 = OpVectorShuffle %v3float %10707 %458 0 1 2
               OpBranch %10796
      %10797 = OpLabel
      %10804 = OpVectorShuffle %v3float %10707 %458 0 1 2
      %10805 = OpVectorShuffle %v3float %10717 %10717 0 1 2
      %10806 = OpExtInst %float %1 NMax %10710 %10714
      %10807 = OpExtInst %float %1 NMax %float_0 %10806
      %10808 = OpFSub %float %10807 %float_0_0799999982
      %10809 = OpFMul %float %10808 %float_3_125
      %10810 = OpExtInst %float %1 FClamp %10809 %float_0 %float_1
      %10811 = OpCompositeConstruct %v3float %10810 %10810 %10810
      %10812 = OpExtInst %v3float %1 FMix %10804 %10805 %10811
               OpBranch %10796
      %10796 = OpLabel
      %10813 = OpPhi %v3float %456 %10795 %10801 %10800 %10802 %10799 %10803 %10798 %10812 %10797
      %10814 = OpPhi %bool %false %10795 %true %10800 %true %10799 %true %10798 %true %10797
               OpSelectionMerge %10815 None
               OpBranchConditional %10814 %10794 %10815
      %10815 = OpLabel
               OpBranch %10794
      %10794 = OpLabel
      %10816 = OpPhi %v3float %10813 %10796 %102 %10815
      %10817 = OpVectorTimesScalar %v3float %10816 %float_1
               OpSelectionMerge %10818 None
               OpBranchConditional %false %10819 %10818
      %10819 = OpLabel
               OpSelectionMerge %10820 None
               OpBranchConditional %false %10821 %10820
      %10821 = OpLabel
      %10822 = OpExtInst %float %1 NMax %float_0_0399999991 %float_0_0399999991
      %10823 = OpExtInst %float %1 NMax %float_0_0399999991 %10822
      %10824 = OpFSub %float %10823 %float_0_0799999982
      %10825 = OpFMul %float %10824 %float_3_125
      %10826 = OpExtInst %float %1 FClamp %10825 %float_0 %float_1
      %10827 = OpExtInst %float %1 FMix %float_0 %float_0_0399999991 %10826
      %10828 = OpCompositeConstruct %v3float %10827 %10827 %10827
               OpBranch %10820
      %10820 = OpLabel
      %10829 = OpPhi %v3float %10817 %10819 %10828 %10821
      %10830 = OpPhi %float %460 %10819 %float_0 %10821
               OpBranch %10818
      %10818 = OpLabel
      %10831 = OpPhi %v3float %10817 %10794 %10829 %10820
      %10832 = OpPhi %float %460 %10794 %10830 %10820
      %10833 = OpBitwiseOr %uint %8535 %uint_0
      %10834 = OpBitwiseOr %uint %10833 %uint_0
               OpBranch %10727
      %10727 = OpLabel
      %10835 = OpPhi %v3float %102 %10726 %10732 %10734 %102 %10730 %10763 %10764 %10790 %10818
      %10836 = OpPhi %uint %457 %10726 %uint_2 %10734 %uint_1 %10730 %uint_1 %10764 %uint_1 %10818
      %10837 = OpPhi %bool %true %10726 %false %10734 %false %10730 %false %10764 %10793 %10818
      %10838 = OpPhi %bool %true %10726 %false %10734 %false %10730 %false %10764 %true %10818
      %10839 = OpPhi %v3float %459 %10726 %10757 %10734 %459 %10730 %10787 %10764 %10831 %10818
      %10840 = OpPhi %float %460 %10726 %10733 %10734 %float_1 %10730 %float_1 %10764 %10832 %10818
      %10841 = OpPhi %float %float_0 %10726 %float_1 %10734 %float_1 %10730 %float_1 %10764 %float_1 %10818
      %10842 = OpPhi %uint %8535 %10726 %10759 %10734 %10762 %10730 %10789 %10764 %10834 %10818
      %10843 = OpCompositeConstruct %_arr_v3float_uint_4 %10703 %459 %459 %459
               OpStore %578 %10843
      %10844 = OpAccessChain %_ptr_Function_v3float %578 %uint_0
      %10845 = OpLoad %v3float %10844
      %10846 = OpVectorTimesScalar %v3float %10845 %float_1
               OpBranch %10725
      %10725 = OpLabel
      %10847 = OpPhi %uint %uint_8192 %10483 %uint_8194 %10727
      %10848 = OpPhi %v3float %102 %10483 %10835 %10727
      %10849 = OpPhi %uint %457 %10483 %10836 %10727
      %10850 = OpPhi %uint %8535 %10483 %10842 %10727
      %10851 = OpPhi %bool %true %10483 %10837 %10727
      %10852 = OpPhi %bool %true %10483 %10838 %10727
      %10853 = OpPhi %v3float %459 %10483 %10839 %10727
      %10854 = OpPhi %float %460 %10483 %10840 %10727
      %10855 = OpPhi %v3float %459 %10483 %10846 %10727
      %10856 = OpPhi %float %float_0 %10483 %10841 %10727
      %10857 = OpSelect %uint %10724 %uint_1 %uint_0
      %10858 = OpFOrdGreaterThan %bool %10856 %float_0
      %10859 = OpCompositeConstruct %v3bool %10858 %10858 %10858
      %10860 = OpExtInst %v3float %1 Normalize %10855
      %10861 = OpSelect %v3float %10859 %10860 %102
      %10862 = OpFDiv %float %10854 %10856
      %10863 = OpSelect %float %10858 %10862 %float_0
      %10864 = OpCompositeConstruct %v3float %10856 %10856 %10856
      %10865 = OpFDiv %v3float %10853 %10864
      %10866 = OpSelect %v3float %10859 %10865 %102
               OpSelectionMerge %10867 None
               OpBranchConditional %10852 %10868 %10867
      %10868 = OpLabel
      %10869 = OpIEqual %bool %10857 %uint_1
      %10870 = OpLogicalAnd %bool %10851 %10869
      %10871 = OpSelect %uint %10870 %uint_2 %uint_3
      %10872 = OpSelect %uint %10870 %uint_1 %10871
      %10873 = OpBitwiseAnd %uint %10850 %uint_4294967288
      %10874 = OpBitwiseAnd %uint %10872 %uint_7
      %10875 = OpBitwiseOr %uint %10873 %10874
               OpSelectionMerge %10876 None
               OpBranchConditional %10870 %10877 %10876
      %10877 = OpLabel
      %10878 = OpShiftRightLogical %uint %10847 %uint_6
      %10879 = OpBitwiseAnd %uint %10878 %uint_1
      %10880 = OpINotEqual %bool %10879 %uint_0
               OpSelectionMerge %10881 None
               OpBranchConditional %10880 %10882 %10881
      %10882 = OpLabel
               OpBranch %10881
      %10881 = OpLabel
      %10883 = OpPhi %uint %uint_0 %10877 %uint_1 %10882
      %10884 = OpShiftRightLogical %uint %10847 %uint_9
      %10885 = OpBitwiseAnd %uint %10884 %uint_1
      %10886 = OpINotEqual %bool %10885 %uint_0
      %10887 = OpLogicalAnd %bool %10886 %true
               OpSelectionMerge %10888 None
               OpBranchConditional %10887 %10889 %10888
      %10889 = OpLabel
      %10890 = OpBitwiseOr %uint %10883 %uint_4
               OpBranch %10888
      %10888 = OpLabel
      %10891 = OpPhi %uint %10883 %10881 %10890 %10889
      %10892 = OpShiftRightLogical %uint %10847 %uint_10
      %10893 = OpBitwiseAnd %uint %10892 %uint_1
      %10894 = OpINotEqual %bool %10893 %uint_0
               OpSelectionMerge %10895 None
               OpBranchConditional %10894 %10896 %10895
      %10896 = OpLabel
      %10897 = OpBitwiseOr %uint %10891 %uint_8
               OpBranch %10895
      %10895 = OpLabel
      %10898 = OpPhi %uint %10891 %10888 %10897 %10896
      %10899 = OpShiftRightLogical %uint %10847 %uint_2
      %10900 = OpBitwiseAnd %uint %10899 %uint_7
      %10901 = OpIEqual %bool %10900 %uint_4
               OpSelectionMerge %10902 None
               OpBranchConditional %10901 %10903 %10902
      %10903 = OpLabel
      %10904 = OpBitwiseOr %uint %10898 %uint_16
               OpBranch %10902
      %10902 = OpLabel
      %10905 = OpPhi %uint %10898 %10895 %10904 %10903
      %10906 = OpIEqual %bool %10900 %uint_1
               OpSelectionMerge %10907 None
               OpBranchConditional %10906 %10908 %10907
      %10908 = OpLabel
      %10909 = OpBitwiseOr %uint %10905 %uint_32
               OpBranch %10907
      %10907 = OpLabel
      %10910 = OpPhi %uint %10905 %10902 %10909 %10908
      %10911 = OpIEqual %bool %10900 %uint_3
               OpSelectionMerge %10912 None
               OpBranchConditional %10911 %10913 %10912
      %10913 = OpLabel
      %10914 = OpBitwiseOr %uint %10910 %uint_64
               OpBranch %10912
      %10912 = OpLabel
      %10915 = OpPhi %uint %10910 %10907 %10914 %10913
      %10916 = OpBitwiseAnd %uint %10915 %uint_2
      %10917 = OpIEqual %bool %10916 %uint_2
      %10918 = OpIEqual %bool %10916 %uint_3
      %10919 = OpLogicalOr %bool %10917 %10918
               OpSelectionMerge %10920 None
               OpBranchConditional %10919 %10921 %10922
      %10922 = OpLabel
      %10923 = OpBitwiseAnd %uint %10915 %uint_4
      %10924 = OpIEqual %bool %10923 %uint_4
               OpSelectionMerge %10925 None
               OpBranchConditional %10924 %10926 %10927
      %10927 = OpLabel
      %10928 = OpBitwiseAnd %uint %10915 %uint_40
      %10929 = OpIEqual %bool %10928 %uint_40
               OpSelectionMerge %10930 None
               OpBranchConditional %10929 %10931 %10932
      %10932 = OpLabel
      %10933 = OpBitwiseAnd %uint %10915 %uint_32
      %10934 = OpIEqual %bool %10933 %uint_32
               OpSelectionMerge %10935 None
               OpBranchConditional %10934 %10936 %10937
      %10937 = OpLabel
      %10938 = OpBitwiseAnd %uint %10915 %uint_72
      %10939 = OpIEqual %bool %10938 %uint_64
      %10940 = OpSelect %uint %10939 %uint_4 %uint_0
      %10941 = OpSelect %uint %10939 %uint_0 %457
               OpBranch %10935
      %10936 = OpLabel
               OpBranch %10935
      %10935 = OpLabel
      %10942 = OpPhi %uint %10940 %10937 %uint_3 %10936
      %10943 = OpPhi %uint %10941 %10937 %uint_0 %10936
               OpBranch %10930
      %10931 = OpLabel
               OpBranch %10930
      %10930 = OpLabel
      %10944 = OpPhi %uint %10942 %10935 %uint_5 %10931
      %10945 = OpPhi %uint %10943 %10935 %uint_0 %10931
               OpBranch %10925
      %10926 = OpLabel
               OpBranch %10925
      %10925 = OpLabel
      %10946 = OpPhi %uint %10944 %10930 %uint_2 %10926
      %10947 = OpPhi %uint %10945 %10930 %457 %10926
               OpBranch %10920
      %10921 = OpLabel
               OpBranch %10920
      %10920 = OpLabel
      %10948 = OpPhi %uint %10946 %10925 %uint_1 %10921
      %10949 = OpPhi %uint %10947 %10925 %457 %10921
               OpBranch %10876
      %10876 = OpLabel
      %10950 = OpPhi %uint %uint_0 %10868 %10948 %10920
      %10951 = OpPhi %uint %457 %10868 %10949 %10920
               OpBranch %10867
      %10867 = OpLabel
      %10952 = OpPhi %uint %uint_0 %10725 %10950 %10876
      %10953 = OpPhi %uint %457 %10725 %10951 %10876
      %10954 = OpPhi %uint %10850 %10725 %10875 %10876
               OpSelectionMerge %10955 DontFlatten
               OpBranchConditional %10724 %10956 %10955
      %10956 = OpLabel
      %10957 = OpCompositeConstruct %_arr_v3float_uint_4 %10703 %459 %459 %459
               OpStore %579 %10957
      %10958 = OpShiftRightLogical %uint %10847 %uint_14
      %10959 = OpBitwiseAnd %uint %10958 %uint_3
      %10960 = OpAccessChain %_ptr_Function_v3float %579 %10959
      %10961 = OpLoad %v3float %10960
      %10962 = OpDot %float %10961 %658
      %10963 = OpShiftRightLogical %uint %10847 %uint_11
      %10964 = OpBitwiseAnd %uint %10963 %uint_7
               OpSelectionMerge %10965 None
               OpSwitch %10964 %10965 0 %10966 3 %10967 5 %10968
      %10968 = OpLabel
      %10969 = OpVectorShuffle %v3float %10707 %458 0 1 2
      %10970 = OpVectorTimesScalar %v3float %10969 %float_1
               OpBranch %10965
      %10967 = OpLabel
      %10971 = OpVectorShuffle %v3float %10707 %458 0 1 2
      %10972 = OpDot %float %658 %10961
      %10973 = OpVectorTimesScalar %v3float %10961 %10972
      %10974 = OpFSub %v3float %658 %10973
      %10975 = OpExtInst %v3float %1 Normalize %10974
      %10976 = OpExtInst %float %1 NMin %float_0 %float_1
      %10977 = OpDot %float %658 %10975
      %10978 = OpDot %float %10961 %10975
      %10979 = OpExtInst %float %1 FClamp %10978 %float_n1 %float_1
      %10980 = OpExtInst %float %1 FClamp %10962 %float_n1 %float_1
      %10981 = OpExtInst %float %1 FAbs %10980
      %10982 = OpExtInst %float %1 Fma %float_n0_156582996 %10981 %float_1_57079637
      %10983 = OpFSub %float %float_1 %10981
      %10984 = OpExtInst %float %1 Sqrt %10983
      %10985 = OpFMul %float %10982 %10984
      %10986 = OpFOrdGreaterThanEqual %bool %10980 %float_0
      %10987 = OpFNegate %float %10982
      %10988 = OpExtInst %float %1 Fma %10987 %10984 %float_3_14159274
      %10989 = OpSelect %float %10986 %10985 %10988
      %10990 = OpFSub %float %float_1_57079637 %10989
      %10991 = OpExtInst %float %1 FAbs %10979
      %10992 = OpExtInst %float %1 Fma %float_n0_156582996 %10991 %float_1_57079637
      %10993 = OpFSub %float %float_1 %10991
      %10994 = OpExtInst %float %1 Sqrt %10993
      %10995 = OpFMul %float %10992 %10994
      %10996 = OpFOrdGreaterThanEqual %bool %10979 %float_0
      %10997 = OpFNegate %float %10992
      %10998 = OpExtInst %float %1 Fma %10997 %10994 %float_3_14159274
      %10999 = OpSelect %float %10996 %10995 %10998
      %11000 = OpFSub %float %float_1_57079637 %10999
      %11001 = OpFSub %float %10990 %11000
      %11002 = OpExtInst %float %1 FAbs %11001
      %11003 = OpFMul %float %float_0_5 %11002
      %11004 = OpExtInst %float %1 Cos %11003
      %11005 = OpVectorTimesScalar %v3float %10961 %10979
      %11006 = OpFSub %v3float %10975 %11005
      %11007 = OpVectorTimesScalar %v3float %10961 %10980
      %11008 = OpFSub %v3float %658 %11007
      %11009 = OpDot %float %11006 %11008
      %11010 = OpDot %float %11006 %11006
      %11011 = OpDot %float %11008 %11008
      %11012 = OpExtInst %float %1 Fma %11010 %11011 %float_9_99999975en05
      %11013 = OpExtInst %float %1 InverseSqrt %11012
      %11014 = OpFMul %float %11009 %11013
      %11015 = OpExtInst %float %1 Fma %float_0_5 %11014 %float_0_5
      %11016 = OpExtInst %float %1 FClamp %11015 %float_0 %float_1
      %11017 = OpExtInst %float %1 Sqrt %11016
      %11018 = OpFDiv %float %float_1_19000006 %11004
      %11019 = OpExtInst %float %1 Fma %float_0_360000014 %11004 %11018
      %11020 = OpExtInst %float %1 Fma %float_0_00392156886 %float_0_00392156886 %float_0_200000003
      %11021 = OpExtInst %float %1 Fma %float_1_53787023en05 %float_0_5 %float_0_200000003
      %11022 = OpExtInst %float %1 Fma %float_1_53787023en05 %float_2 %float_0_200000003
      %11023 = OpFMul %float %float_0_997551024 %11017
      %11024 = OpFNegate %float %10980
      %11025 = OpExtInst %float %1 Fma %11024 %10980 %float_1
      %11026 = OpExtInst %float %1 Sqrt %11025
      %11027 = OpFMul %float %float_n0_0699428469 %10980
      %11028 = OpExtInst %float %1 Fma %11023 %11026 %11027
      %11029 = OpFMul %float %float_1_41421354 %11017
      %11030 = OpFMul %float %11020 %11029
      %11031 = OpFAdd %float %10979 %10980
      %11032 = OpExtInst %float %1 Fma %float_0_139885694 %11028 %11031
      %11033 = OpFMul %float %11032 %11032
      %11034 = OpFMul %float %float_n0_5 %11033
      %11035 = OpFMul %float %11030 %11030
      %11036 = OpFDiv %float %11034 %11035
      %11037 = OpExtInst %float %1 Exp %11036
      %11038 = OpFMul %float %float_2_50662827 %11030
      %11039 = OpFDiv %float %11037 %11038
      %11040 = OpFMul %float %float_0_25 %11017
      %11041 = OpExtInst %float %1 Fma %float_0_5 %10977 %float_0_5
      %11042 = OpExtInst %float %1 FClamp %11041 %float_0 %float_1
      %11043 = OpExtInst %float %1 Sqrt %11042
      %11044 = OpFSub %float %float_1 %11043
      %11045 = OpFMul %float %11044 %11044
      %11046 = OpFMul %float %11045 %11045
      %11047 = OpFMul %float %11046 %11044
      %11048 = OpExtInst %float %1 Fma %float_0_953479409 %11047 %float_0_0465205647
      %11049 = OpFMul %float %11039 %11040
      %11050 = OpFMul %float %11049 %11048
      %11051 = OpFMul %float %10710 %float_2
      %11052 = OpFMul %float %11050 %11051
      %11053 = OpFNegate %float %10977
      %11054 = OpExtInst %float %1 FClamp %11053 %float_0 %float_1
      %11055 = OpExtInst %float %1 FMix %float_1 %10976 %11054
      %11056 = OpFMul %float %11052 %11055
      %11057 = OpCompositeConstruct %v3float %11056 %11056 %11056
      %11058 = OpFSub %float %11031 %float_0_0350000001
      %11059 = OpFMul %float %11058 %11058
      %11060 = OpFMul %float %float_n0_5 %11059
      %11061 = OpFMul %float %11021 %11021
      %11062 = OpFDiv %float %11060 %11061
      %11063 = OpExtInst %float %1 Exp %11062
      %11064 = OpFMul %float %float_2_50662827 %11021
      %11065 = OpFDiv %float %11063 %11064
      %11066 = OpFDiv %float %float_1 %11019
      %11067 = OpExtInst %float %1 Fma %float_n0_800000012 %11014 %float_0_600000024
      %11068 = OpExtInst %float %1 Fma %11066 %11067 %float_1
      %11069 = OpFMul %float %11017 %11068
      %11070 = OpFNegate %float %11069
      %11071 = OpExtInst %float %1 Fma %11070 %11069 %float_1
      %11072 = OpExtInst %float %1 FClamp %11071 %float_0 %float_1
      %11073 = OpExtInst %float %1 Sqrt %11072
      %11074 = OpFNegate %float %11004
      %11075 = OpExtInst %float %1 Fma %11074 %11073 %float_1
      %11076 = OpFMul %float %11075 %11075
      %11077 = OpFMul %float %11076 %11076
      %11078 = OpFMul %float %11077 %11075
      %11079 = OpExtInst %float %1 Fma %float_0_953479409 %11078 %float_0_0465205647
      %11080 = OpFSub %float %float_1 %11079
      %11081 = OpFMul %float %11080 %11080
      %11082 = OpExtInst %v3float %1 FAbs %10971
      %11083 = OpFMul %float %11069 %11066
      %11084 = OpFNegate %float %11083
      %11085 = OpExtInst %float %1 Fma %11084 %11083 %float_1
      %11086 = OpExtInst %float %1 Sqrt %11085
      %11087 = OpFMul %float %float_0_5 %11086
      %11088 = OpFDiv %float %11087 %11004
      %11089 = OpCompositeConstruct %v3float %11088 %11088 %11088
      %11090 = OpExtInst %v3float %1 Pow %11082 %11089
      %11091 = OpExtInst %float %1 Fma %float_n3_6500001 %11014 %float_n3_98000002
      %11092 = OpExtInst %float %1 Exp %11091
      %11093 = OpFMul %float %11065 %11092
      %11094 = OpFMul %float %11093 %11081
      %11095 = OpVectorTimesScalar %v3float %11090 %11094
      %11096 = OpVectorTimesScalar %v3float %11095 %10976
      %11097 = OpFAdd %v3float %11057 %11096
      %11098 = OpFSub %float %11031 %float_0_140000001
      %11099 = OpFMul %float %11098 %11098
      %11100 = OpFMul %float %float_n0_5 %11099
      %11101 = OpFMul %float %11022 %11022
      %11102 = OpFDiv %float %11100 %11101
      %11103 = OpExtInst %float %1 Exp %11102
      %11104 = OpFMul %float %float_2_50662827 %11022
      %11105 = OpFDiv %float %11103 %11104
      %11106 = OpExtInst %float %1 Fma %11074 %float_0_5 %float_1
      %11107 = OpFMul %float %11106 %11106
      %11108 = OpFMul %float %11107 %11107
      %11109 = OpFMul %float %11108 %11106
      %11110 = OpExtInst %float %1 Fma %float_0_953479409 %11109 %float_0_0465205647
      %11111 = OpFSub %float %float_1 %11110
      %11112 = OpFMul %float %11111 %11111
      %11113 = OpFMul %float %11112 %11110
      %11114 = OpFDiv %float %float_0_800000012 %11004
      %11115 = OpCompositeConstruct %v3float %11114 %11114 %11114
      %11116 = OpExtInst %v3float %1 Pow %11082 %11115
      %11117 = OpExtInst %float %1 Fma %float_17 %11014 %float_n16_7800007
      %11118 = OpExtInst %float %1 Exp %11117
      %11119 = OpFMul %float %11105 %11118
      %11120 = OpFMul %float %11119 %11113
      %11121 = OpVectorTimesScalar %v3float %11116 %11120
      %11122 = OpFAdd %v3float %11097 %11121
      %11123 = OpVectorTimesScalar %v3float %11122 %float_1
      %11124 = OpVectorShuffle %v3float %539 %127 3 4 5
      %11125 = OpExtInst %v3float %1 Fma %459 %11124 %11123
      %11126 = OpFNegate %v3float %11125
      %11127 = OpExtInst %v3float %1 NMin %11126 %102
      %11128 = OpFNegate %v3float %11127
      %11129 = OpVectorTimesScalar %v3float %11128 %float_6_28318548
      %11130 = OpExtInst %v3float %1 NMin %127 %11129
               OpBranch %10965
      %10966 = OpLabel
      %11131 = OpVectorShuffle %v3float %10707 %458 0 1 2
      %11132 = OpVectorShuffle %v3float %10717 %10717 0 1 2
      %11133 = OpCompositeConstruct %v2float %10962 %float_0_00100000005
      %11134 = OpSampledImage %type_sampled_image %10718 %10719
      %11135 = OpImageSampleExplicitLod %v4float %11134 %11133 Lod %float_0
      %11136 = OpCompositeExtract %float %11135 0
      %11137 = OpFSub %float %float_1 %11136
      %11138 = OpFDiv %float %11137 %11136
      %11139 = OpVectorTimesScalar %v3float %11132 %11138
      %11140 = OpFAdd %v3float %127 %11139
      %11141 = OpSelect %v3float %10723 %11140 %127
      %11142 = OpVectorTimesScalar %v3float %11132 %11136
      %11143 = OpFNegate %v3float %11132
      %11144 = OpCompositeExtract %float %11135 1
      %11145 = OpVectorTimesScalar %v3float %11143 %11144
      %11146 = OpFAdd %v3float %11142 %11145
      %11147 = OpFMul %v3float %11141 %11146
      %11148 = OpAccessChain %_ptr_Uniform_uint %View %uint_41
      %11149 = OpLoad %uint %11148
      %11150 = OpINotEqual %bool %11149 %uint_0
      %11151 = OpDot %float %11147 %171
      %11152 = OpFSub %float %float_1 %11151
      %11153 = OpSelect %float %11150 %11152 %float_1
      %11154 = OpVectorTimesScalar %v3float %11131 %11153
      %11155 = OpShiftRightLogical %uint %10847 %uint_2
      %11156 = OpBitwiseAnd %uint %11155 %uint_7
      %11157 = OpIEqual %bool %11156 %uint_4
               OpSelectionMerge %11158 DontFlatten
               OpBranchConditional %11157 %11159 %11158
      %11159 = OpLabel
      %11160 = OpExtInst %float %1 NMax %460 %460
      %11161 = OpExtInst %float %1 NMax %460 %11160
      %11162 = OpFSub %float %11161 %float_0_0399999991
      %11163 = OpExtInst %float %1 NMax %float_0 %11162
      %11164 = OpFMul %float %11163 %float_3
      %11165 = OpExtInst %float %1 FClamp %11164 %float_0 %float_1
      %11166 = OpFMul %float %11165 %11165
      %11167 = OpCompositeExtract %float %10707 0
      %11168 = OpExtInst %float %1 FClamp %10962 %float_0 %float_1
      %11169 = OpExtInst %float %1 FAbs %11168
      %11170 = OpExtInst %float %1 Fma %float_n0_156582996 %11169 %float_1_57079637
      %11171 = OpFSub %float %float_1 %11169
      %11172 = OpExtInst %float %1 Sqrt %11171
      %11173 = OpFMul %float %11170 %11172
      %11174 = OpFMul %float %11173 %float_0_636619747
      %11175 = OpExtInst %float %1 FClamp %11174 %float_0 %float_1
      %11176 = OpCompositeConstruct %v3float %float_0 %11167 %11175
      %11177 = OpExtInst %v3float %1 Fma %498 %11176 %497
      %11178 = OpLoad %type_3d_image_0 %View_SimpleVolumeEnvTexture
      %11179 = OpLoad %type_sampler %View_SimpleVolumeEnvTextureSampler
      %11180 = OpSampledImage %type_sampled_image_0 %11178 %11179
      %11181 = OpImageSampleExplicitLod %v4float %11180 %11177 Lod %float_0
      %11182 = OpCompositeExtract %float %11181 0
      %11183 = OpExtInst %float %1 Fma %float_10 %float_0_00158730161 %float_1
      %11184 = OpExtInst %float %1 FClamp %11183 %float_0 %float_1
      %11185 = OpFMul %float %11182 %11184
      %11186 = OpCompositeExtract %float %10707 1
      %11187 = OpCompositeConstruct %v3float %float_0 %11186 %11175
      %11188 = OpExtInst %v3float %1 Fma %498 %11187 %497
      %11189 = OpSampledImage %type_sampled_image_0 %11178 %11179
      %11190 = OpImageSampleExplicitLod %v4float %11189 %11188 Lod %float_0
      %11191 = OpCompositeExtract %float %11190 0
      %11192 = OpFMul %float %11191 %11184
      %11193 = OpCompositeExtract %float %10707 2
      %11194 = OpCompositeConstruct %v3float %float_0 %11193 %11175
      %11195 = OpExtInst %v3float %1 Fma %498 %11194 %497
      %11196 = OpSampledImage %type_sampled_image_0 %11178 %11179
      %11197 = OpImageSampleExplicitLod %v4float %11196 %11195 Lod %float_0
      %11198 = OpCompositeExtract %float %11197 0
      %11199 = OpFMul %float %11198 %11184
      %11200 = OpCompositeConstruct %v3float %11185 %11192 %11199
      %11201 = OpCompositeExtract %float %11154 0
      %11202 = OpCompositeExtract %float %11154 1
      %11203 = OpCompositeExtract %float %11154 2
      %11204 = OpExtInst %float %1 NMax %11202 %11203
      %11205 = OpExtInst %float %1 NMax %11201 %11204
      %11206 = OpExtInst %float %1 NMax %11192 %11199
      %11207 = OpExtInst %float %1 NMax %11185 %11206
      %11208 = OpFOrdLessThan %bool %11205 %11207
               OpSelectionMerge %11209 None
               OpBranchConditional %11208 %11210 %11209
      %11210 = OpLabel
      %11211 = OpFDiv %float %11205 %11207
      %11212 = OpVectorTimesScalar %v3float %11200 %11211
               OpBranch %11209
      %11209 = OpLabel
      %11213 = OpPhi %v3float %11200 %11159 %11212 %11210
      %11214 = OpVectorTimesScalar %v3float %11213 %11153
      %11215 = OpCompositeConstruct %v3float %11166 %11166 %11166
      %11216 = OpExtInst %v3float %1 FMix %11154 %11214 %11215
               OpBranch %11158
      %11158 = OpLabel
      %11217 = OpPhi %v3float %11154 %10966 %11216 %11209
      %11218 = OpIEqual %bool %11156 %uint_1
               OpSelectionMerge %11219 DontFlatten
               OpBranchConditional %11218 %11220 %11219
      %11220 = OpLabel
      %11221 = OpExtInst %v3float %1 NMax %356 %555
      %11222 = OpFDiv %v3float %127 %11221
      %11223 = OpExtInst %v3float %1 NMax %345 %11222
      %11224 = OpExtInst %float %1 FAbs %float_1
      %11225 = OpExtInst %float %1 NMax %float_9_99999975en05 %11224
      %11226 = OpFDiv %float %float_1 %11225
      %11227 = OpFNegate %v3float %11223
      %11228 = OpVectorTimesScalar %v3float %11227 %11226
      %11229 = OpExtInst %v3float %1 Exp %11228
      %11230 = OpFMul %v3float %499 %11229
      %11231 = OpVectorTimesScalar %v3float %11230 %11153
               OpBranch %11219
      %11219 = OpLabel
      %11232 = OpPhi %v3float %459 %11158 %11231 %11220
      %11233 = OpShiftRightLogical %uint %10847 %uint_9
      %11234 = OpBitwiseAnd %uint %11233 %uint_1
      %11235 = OpINotEqual %bool %11234 %uint_0
               OpSelectionMerge %11236 DontFlatten
               OpBranchConditional %11235 %11237 %11236
      %11237 = OpLabel
      %11238 = OpVectorTimesScalar %v3float %11131 %float_1
      %11239 = OpVectorTimesScalar %v3float %11217 %float_1
               OpBranch %10965
      %11236 = OpLabel
               OpBranch %10965
      %10965 = OpLabel
      %11240 = OpPhi %v3float %459 %10956 %10970 %10968 %11130 %10967 %11239 %11237 %11217 %11236
      %11241 = OpPhi %v3float %459 %10956 %10961 %10968 %10975 %10967 %10961 %11237 %10961 %11236
      %11242 = OpPhi %v3float %459 %10956 %459 %10968 %459 %10967 %11232 %11237 %11232 %11236
      %11243 = OpPhi %v3float %459 %10956 %10969 %10968 %459 %10967 %11238 %11237 %11131 %11236
      %11244 = OpFOrdGreaterThan %v3bool %11242 %102
      %11245 = OpAny %bool %11244
               OpSelectionMerge %11246 None
               OpBranchConditional %8455 %11247 %11246
      %11247 = OpLabel
      %11248 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_1 %int_0
      %11249 = OpLoad %v4float %11248
      %11250 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_0
      %11251 = OpLoad %v4float %11250
      %11252 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_3 %uint_0
      %11253 = OpLoad %float %11252
      %11254 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_1 %int_1
      %11255 = OpLoad %v4float %11254
      %11256 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_1
      %11257 = OpLoad %v4float %11256
      %11258 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_3 %uint_1
      %11259 = OpLoad %float %11258
      %11260 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_1 %int_2
      %11261 = OpLoad %v4float %11260
      %11262 = OpAccessChain %_ptr_Uniform_v4float %IndirectLightingCache %uint_2 %int_2
      %11263 = OpLoad %v4float %11262
      %11264 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_3 %uint_2
      %11265 = OpLoad %float %11264
      %11266 = OpCompositeExtract %float %11241 1
      %11267 = OpFMul %float %float_n0_488602996 %11266
      %11268 = OpCompositeInsert %v4float %11267 %552 1
      %11269 = OpCompositeExtract %float %11241 2
      %11270 = OpFMul %float %float_0_488602996 %11269
      %11271 = OpCompositeInsert %v4float %11270 %11268 2
      %11272 = OpCompositeExtract %float %11241 0
      %11273 = OpFMul %float %float_n0_488602996 %11272
      %11274 = OpCompositeInsert %v4float %11273 %11271 3
      %11275 = OpFMul %v3float %11241 %11241
      %11276 = OpFMul %float %float_1_09254801 %11272
      %11277 = OpFMul %float %11276 %11266
      %11278 = OpCompositeInsert %v4float %11277 %541 0
      %11279 = OpFMul %float %float_n1_09254801 %11266
      %11280 = OpFMul %float %11279 %11269
      %11281 = OpCompositeInsert %v4float %11280 %11278 1
      %11282 = OpCompositeExtract %float %11275 2
      %11283 = OpExtInst %float %1 Fma %float_3 %11282 %float_n1
      %11284 = OpFMul %float %float_0_315391988 %11283
      %11285 = OpCompositeInsert %v4float %11284 %11281 2
      %11286 = OpFMul %float %float_n1_09254801 %11272
      %11287 = OpFMul %float %11286 %11269
      %11288 = OpCompositeInsert %v4float %11287 %11285 3
      %11289 = OpCompositeExtract %float %11275 0
      %11290 = OpCompositeExtract %float %11275 1
      %11291 = OpFSub %float %11289 %11290
      %11292 = OpCompositeInsert %v4float %float_0_886227548 %11274 0
      %11293 = OpVectorShuffle %v3float %11292 %11292 1 2 3
      %11294 = OpVectorTimesScalar %v3float %11293 %float_2_09439516
      %11295 = OpVectorShuffle %v4float %11292 %11294 0 4 5 6
      %11296 = OpVectorTimesScalar %v4float %11288 %float_0_785398185
      %11297 = OpFMul %float %11291 %float_0_429042608
      %11298 = OpDot %float %11249 %11295
      %11299 = OpDot %float %11251 %11296
      %11300 = OpFAdd %float %11298 %11299
      %11301 = OpExtInst %float %1 Fma %11253 %11297 %11300
      %11302 = OpCompositeInsert %v3float %11301 %102 0
      %11303 = OpDot %float %11255 %11295
      %11304 = OpDot %float %11257 %11296
      %11305 = OpFAdd %float %11303 %11304
      %11306 = OpExtInst %float %1 Fma %11259 %11297 %11305
      %11307 = OpCompositeInsert %v3float %11306 %11302 1
      %11308 = OpDot %float %11261 %11295
      %11309 = OpDot %float %11263 %11296
      %11310 = OpFAdd %float %11308 %11309
      %11311 = OpExtInst %float %1 Fma %11265 %11297 %11310
      %11312 = OpCompositeInsert %v3float %11311 %11307 2
      %11313 = OpExtInst %v3float %1 NMax %102 %11312
               OpSelectionMerge %11314 None
               OpBranchConditional %11245 %11315 %11314
      %11315 = OpLabel
      %11316 = OpFNegate %v3float %11241
      %11317 = OpCompositeExtract %float %11316 1
      %11318 = OpFMul %float %float_n0_488602996 %11317
      %11319 = OpCompositeInsert %v4float %11318 %552 1
      %11320 = OpCompositeExtract %float %11316 2
      %11321 = OpFMul %float %float_0_488602996 %11320
      %11322 = OpCompositeInsert %v4float %11321 %11319 2
      %11323 = OpCompositeExtract %float %11316 0
      %11324 = OpFMul %float %float_n0_488602996 %11323
      %11325 = OpCompositeInsert %v4float %11324 %11322 3
      %11326 = OpFMul %v3float %11316 %11316
      %11327 = OpFMul %float %float_1_09254801 %11323
      %11328 = OpFMul %float %11327 %11317
      %11329 = OpCompositeInsert %v4float %11328 %541 0
      %11330 = OpFMul %float %float_n1_09254801 %11317
      %11331 = OpFMul %float %11330 %11320
      %11332 = OpCompositeInsert %v4float %11331 %11329 1
      %11333 = OpCompositeExtract %float %11326 2
      %11334 = OpExtInst %float %1 Fma %float_3 %11333 %float_n1
      %11335 = OpFMul %float %float_0_315391988 %11334
      %11336 = OpCompositeInsert %v4float %11335 %11332 2
      %11337 = OpFMul %float %float_n1_09254801 %11323
      %11338 = OpFMul %float %11337 %11320
      %11339 = OpCompositeInsert %v4float %11338 %11336 3
      %11340 = OpCompositeExtract %float %11326 0
      %11341 = OpCompositeExtract %float %11326 1
      %11342 = OpFSub %float %11340 %11341
      %11343 = OpCompositeInsert %v4float %float_0_886227548 %11325 0
      %11344 = OpVectorShuffle %v3float %11343 %11343 1 2 3
      %11345 = OpVectorTimesScalar %v3float %11344 %float_2_09439516
      %11346 = OpVectorShuffle %v4float %11343 %11345 0 4 5 6
      %11347 = OpVectorTimesScalar %v4float %11339 %float_0_785398185
      %11348 = OpFMul %float %11342 %float_0_429042608
      %11349 = OpDot %float %11249 %11346
      %11350 = OpDot %float %11251 %11347
      %11351 = OpFAdd %float %11349 %11350
      %11352 = OpExtInst %float %1 Fma %11253 %11348 %11351
      %11353 = OpCompositeInsert %v3float %11352 %553 0
      %11354 = OpDot %float %11255 %11346
      %11355 = OpDot %float %11257 %11347
      %11356 = OpFAdd %float %11354 %11355
      %11357 = OpExtInst %float %1 Fma %11259 %11348 %11356
      %11358 = OpCompositeInsert %v3float %11357 %11353 1
      %11359 = OpDot %float %11261 %11346
      %11360 = OpDot %float %11263 %11347
      %11361 = OpFAdd %float %11359 %11360
      %11362 = OpExtInst %float %1 Fma %11265 %11348 %11361
      %11363 = OpCompositeInsert %v3float %11362 %11358 2
      %11364 = OpExtInst %v3float %1 NMax %102 %11363
               OpBranch %11314
      %11314 = OpLabel
      %11365 = OpPhi %v3float %102 %11247 %11364 %11315
               OpBranch %11246
      %11246 = OpLabel
      %11366 = OpPhi %v3float %102 %10965 %11365 %11314
      %11367 = OpPhi %v3float %102 %10965 %11313 %11314
      %11368 = OpFMul %v3float %11367 %8627
      %11369 = OpFMul %v3float %11366 %8627
      %11370 = OpDot %float %11368 %171
      %11371 = OpVectorTimesScalar %v3float %11243 %float_2_04040003
      %11372 = OpFSub %v3float %11371 %174
      %11373 = OpVectorTimesScalar %v3float %11243 %float_n4_79510021
      %11374 = OpFAdd %v3float %11373 %177
      %11375 = OpVectorTimesScalar %v3float %11243 %float_2_75519991
      %11376 = OpFAdd %v3float %11375 %180
      %11377 = OpVectorTimesScalar %v3float %11372 %float_1
      %11378 = OpFAdd %v3float %11377 %11374
      %11379 = OpVectorTimesScalar %v3float %11378 %float_1
      %11380 = OpFAdd %v3float %11379 %11376
      %11381 = OpVectorTimesScalar %v3float %11380 %float_1
      %11382 = OpExtInst %v3float %1 NMax %127 %11381
      %11383 = OpExtInst %v3float %1 NMax %127 %521
      %11384 = OpCompositeExtract %float %11383 1
      %11385 = OpCompositeInsert %v2float %11384 %554 0
      %11386 = OpCompositeInsert %v2float %11370 %11385 1
      %11387 = OpFMul %v3float %11369 %11242
      %11388 = OpExtInst %v3float %1 Fma %11368 %11240 %11387
      %11389 = OpExtInst %v3float %1 Fma %11388 %11382 %10848
               OpBranch %10955
      %10955 = OpLabel
      %11390 = OpPhi %v3float %10848 %10867 %11389 %11246
      %11391 = OpPhi %float %float_0 %10867 %float_1 %11246
      %11392 = OpPhi %v2float %124 %10867 %11386 %11246
      %11393 = OpExtInst %float %1 NMax %float_1 %11391
      %11394 = OpFDiv %float %float_1 %11393
      %11395 = OpVectorTimesScalar %v2float %11392 %11394
      %11396 = OpCompositeExtract %float %11395 0
      %11397 = OpCompositeExtract %float %11395 1
      %11398 = OpBitwiseAnd %uint %10954 %uint_4294902015
      %11399 = OpFMul %float %11397 %11396
      %11400 = OpAccessChain %_ptr_Uniform_float %View %uint_13
      %11401 = OpLoad %float %11400
      %11402 = OpExtInst %float %1 Fma %11399 %11401 %float_0_00390625
      %11403 = OpExtInst %float %1 Log2 %11402
      %11404 = OpExtInst %float %1 Fma %11403 %float_0_0625 %float_0_5
      %11405 = OpFMul %float %11404 %float_255
      %11406 = OpExtInst %float %1 NMin %float_255 %11405
      %11407 = OpConvertFToU %uint %11406
      %11408 = OpBitwiseAnd %uint %11407 %uint_255
      %11409 = OpShiftLeftLogical %uint %11408 %uint_8
      %11410 = OpBitwiseOr %uint %11398 %11409
      %11411 = OpBitwiseAnd %uint %11410 %uint_7
      %11412 = OpIEqual %bool %11411 %uint_1
      %11413 = OpLogicalOr %bool %11412 %false
      %11414 = OpIEqual %bool %11411 %uint_4
      %11415 = OpIEqual %bool %11411 %uint_2
      %11416 = OpLogicalOr %bool %11415 %false
      %11417 = OpIEqual %bool %11411 %uint_5
      %11418 = OpIEqual %bool %11411 %uint_6
      %11419 = OpLogicalOr %bool %11417 %11418
      %11420 = OpLogicalNot %bool %11413
      %11421 = OpLogicalNot %bool %11416
      %11422 = OpLogicalAnd %bool %11420 %11421
      %11423 = OpLogicalNot %bool %11419
      %11424 = OpLogicalAnd %bool %11422 %11423
      %11425 = OpLogicalNot %bool %11414
      %11426 = OpLogicalAnd %bool %11424 %11425
               OpSelectionMerge %11427 None
               OpBranchConditional %11426 %11428 %11427
      %11428 = OpLabel
      %11429 = OpBitwiseAnd %uint %10857 %uint_15
      %11430 = OpShiftLeftLogical %uint %11429 %uint_16
      %11431 = OpBitwiseOr %uint %uint_0 %11430
      %11432 = OpBitwiseAnd %uint %11431 %uint_4287627263
      %11433 = OpBitwiseOr %uint %11432 %uint_1048576
      %11434 = OpBitwiseAnd %uint %11433 %uint_4169138175
      %11435 = OpBitwiseOr %uint %11434 %uint_0
      %11436 = OpBitwiseAnd %uint %11410 %uint_134217728
      %11437 = OpBitwiseOr %uint %11435 %11436
      %11438 = OpBitwiseAnd %uint %11437 %uint_4294901760
      %11439 = OpBitwiseAnd %uint %11410 %uint_65535
      %11440 = OpShiftLeftLogical %uint %11439 %uint_0
      %11441 = OpBitwiseOr %uint %11438 %11440
      %11442 = OpExtInst %v3float %1 FAbs %10703
      %11443 = OpDot %float %127 %11442
      %11444 = OpCompositeConstruct %v2float %11443 %11443
      %11445 = OpVectorShuffle %v2float %10703 %10703 0 1
      %11446 = OpFDiv %v2float %11445 %11444
      %11447 = OpVectorShuffle %v3float %10703 %11446 3 4 2
      %11448 = OpCompositeExtract %float %10703 2
      %11449 = OpFOrdLessThanEqual %bool %11448 %float_0
               OpSelectionMerge %11450 None
               OpBranchConditional %11449 %11451 %11450
      %11451 = OpLabel
      %11452 = OpVectorShuffle %v2float %11446 %459 1 0
      %11453 = OpExtInst %v2float %1 FAbs %11452
      %11454 = OpFSub %v2float %313 %11453
      %11455 = OpVectorShuffle %v2float %11446 %459 0 1
      %11456 = OpFOrdGreaterThanEqual %v2bool %11455 %124
      %11457 = OpCompositeExtract %bool %11456 0
      %11458 = OpSelect %float %11457 %float_1 %float_n1
      %11459 = OpCompositeExtract %bool %11456 1
      %11460 = OpSelect %float %11459 %float_1 %float_n1
      %11461 = OpCompositeConstruct %v2float %11458 %11460
      %11462 = OpFMul %v2float %11454 %11461
      %11463 = OpVectorShuffle %v3float %10703 %11462 3 4 2
               OpBranch %11450
      %11450 = OpLabel
      %11464 = OpPhi %v3float %11447 %11428 %11463 %11451
      %11465 = OpCompositeExtract %float %11464 0
      %11466 = OpCompositeExtract %float %11464 1
      %11467 = OpCompositeConstruct %v2float %11465 %float_0
      %11468 = OpExtInst %uint %1 PackHalf2x16 %11467
      %11469 = OpCompositeConstruct %v2float %11466 %float_0
      %11470 = OpExtInst %uint %1 PackHalf2x16 %11469
      %11471 = OpShiftLeftLogical %uint %11470 %uint_16
      %11472 = OpBitwiseOr %uint %11468 %11471
               OpBranch %11427
      %11427 = OpLabel
      %11473 = OpPhi %uint %uint_0 %10955 %11472 %11450
      %11474 = OpPhi %uint %uint_0 %10955 %11441 %11450
      %11475 = OpSelect %uint %11426 %uint_2 %uint_0
               OpSelectionMerge %11476 DontFlatten
               OpBranchConditional %10724 %11477 %11476
      %11477 = OpLabel
      %11478 = OpBitwiseAnd %uint %10847 %uint_4294967263
      %11479 = OpBitwiseOr %uint %11478 %uint_32
      %11480 = OpAny %bool %557
      %11481 = OpBitwiseAnd %uint %11479 %uint_4294901759
      %11482 = OpSelect %uint %11480 %uint_1 %uint_0
      %11483 = OpBitwiseAnd %uint %11482 %uint_1
      %11484 = OpShiftLeftLogical %uint %11483 %uint_16
      %11485 = OpBitwiseOr %uint %11481 %11484
      %11486 = OpLogicalAnd %bool %11413 %true
               OpSelectionMerge %11487 None
               OpBranchConditional %11486 %11488 %11489
      %11489 = OpLabel
      %11490 = OpLogicalAnd %bool %11416 %true
               OpSelectionMerge %11491 None
               OpBranchConditional %11490 %11492 %11493
      %11493 = OpLabel
               OpSelectionMerge %11494 None
               OpBranchConditional %11418 %11495 %11496
      %11496 = OpLabel
               OpSelectionMerge %11497 None
               OpBranchConditional %11417 %11498 %11499
      %11499 = OpLabel
               OpSelectionMerge %11500 None
               OpBranchConditional %11414 %11501 %11502
      %11502 = OpLabel
      %11503 = OpBitwiseAnd %uint %11485 %uint_4194303
      %11504 = OpExtInst %uint %1 PackHalf2x16 %276
      %11505 = OpShiftRightLogical %uint %11504 %uint_5
      %11506 = OpBitwiseAnd %uint %11505 %uint_1023
      %11507 = OpBitwiseAnd %uint %11506 %uint_1023
      %11508 = OpShiftLeftLogical %uint %11507 %uint_22
      %11509 = OpBitwiseOr %uint %11503 %11508
      %11510 = OpULessThan %bool %11475 %uint_3
               OpSelectionMerge %11511 None
               OpBranchConditional %11510 %11512 %11513
      %11513 = OpLabel
      %11514 = OpISub %uint %11475 %uint_3
      %11515 = OpCompositeExtract %uint %10704 0
      %11516 = OpCompositeExtract %uint %10704 1
      %11517 = OpCompositeConstruct %v3uint %11515 %11516 %11514
               OpImageWrite %10705 %11517 %11509 None
               OpBranch %11511
      %11512 = OpLabel
      %11518 = OpIEqual %bool %11475 %uint_0
      %11519 = OpSelect %uint %11518 %11509 %11474
      %11520 = OpIEqual %bool %11475 %uint_1
      %11521 = OpSelect %uint %11520 %11509 %11473
      %11522 = OpIEqual %bool %11475 %uint_2
      %11523 = OpSelect %uint %11522 %11509 %uint_0
               OpBranch %11511
      %11511 = OpLabel
      %11524 = OpPhi %uint %uint_0 %11513 %11523 %11512
      %11525 = OpPhi %uint %11473 %11513 %11521 %11512
      %11526 = OpPhi %uint %11474 %11513 %11519 %11512
      %11527 = OpIAdd %uint %11475 %uint_1
               OpBranch %11500
      %11501 = OpLabel
      %11528 = OpVectorShuffle %v3float %10707 %458 0 1 2
      %11529 = OpFSub %float %8388 %float_0_5
      %11530 = OpFMul %float %11529 %float_0_00787401572
      %11531 = OpFMul %float %11529 %float_0_0158730168
      %11532 = OpCompositeConstruct %v3float %11530 %11530 %11531
      %11533 = OpExtInst %v3float %1 FClamp %11528 %102 %127
      %11534 = OpCompositeExtract %float %11533 0
               OpSelectionMerge %11535 None
               OpSwitch %uint_0 %11536
      %11536 = OpLabel
      %11537 = OpFOrdLessThan %bool %11534 %float_0_00313066994
               OpSelectionMerge %11538 None
               OpBranchConditional %11537 %11539 %11538
      %11539 = OpLabel
      %11540 = OpFMul %float %11534 %float_12_9200001
               OpBranch %11535
      %11538 = OpLabel
      %11541 = OpExtInst %float %1 Pow %11534 %float_0_416666657
      %11542 = OpExtInst %float %1 Fma %11541 %float_1_05499995 %float_n0_0549999997
               OpBranch %11535
      %11535 = OpLabel
      %11543 = OpPhi %float %11540 %11539 %11542 %11538
      %11544 = OpCompositeExtract %float %11533 1
               OpSelectionMerge %11545 None
               OpSwitch %uint_0 %11546
      %11546 = OpLabel
      %11547 = OpFOrdLessThan %bool %11544 %float_0_00313066994
               OpSelectionMerge %11548 None
               OpBranchConditional %11547 %11549 %11548
      %11549 = OpLabel
      %11550 = OpFMul %float %11544 %float_12_9200001
               OpBranch %11545
      %11548 = OpLabel
      %11551 = OpExtInst %float %1 Pow %11544 %float_0_416666657
      %11552 = OpExtInst %float %1 Fma %11551 %float_1_05499995 %float_n0_0549999997
               OpBranch %11545
      %11545 = OpLabel
      %11553 = OpPhi %float %11550 %11549 %11552 %11548
      %11554 = OpCompositeExtract %float %11533 2
               OpSelectionMerge %11555 None
               OpSwitch %uint_0 %11556
      %11556 = OpLabel
      %11557 = OpFOrdLessThan %bool %11554 %float_0_00313066994
               OpSelectionMerge %11558 None
               OpBranchConditional %11557 %11559 %11558
      %11559 = OpLabel
      %11560 = OpFMul %float %11554 %float_12_9200001
               OpBranch %11555
      %11558 = OpLabel
      %11561 = OpExtInst %float %1 Pow %11554 %float_0_416666657
      %11562 = OpExtInst %float %1 Fma %11561 %float_1_05499995 %float_n0_0549999997
               OpBranch %11555
      %11555 = OpLabel
      %11563 = OpPhi %float %11560 %11559 %11562 %11558
      %11564 = OpCompositeConstruct %v3float %11543 %11553 %11563
      %11565 = OpBitcast %v3uint %11564
      %11566 = OpBitwiseAnd %v3uint %11565 %349
      %11567 = OpExtInst %v3uint %1 UMin %11566 %501
      %11568 = OpConvertUToF %v3float %11567
      %11569 = OpExtInst %v3float %1 Fma %11532 %11568 %11564
      %11570 = OpExtInst %v3float %1 FClamp %11569 %102 %127
      %11571 = OpCompositeExtract %float %11570 0
      %11572 = OpFMul %float %11571 %float_127
      %11573 = OpConvertFToU %uint %11572
      %11574 = OpShiftLeftLogical %uint %11573 %uint_0
      %11575 = OpCompositeExtract %float %11570 1
      %11576 = OpFMul %float %11575 %float_127
      %11577 = OpConvertFToU %uint %11576
      %11578 = OpShiftLeftLogical %uint %11577 %uint_7
      %11579 = OpCompositeExtract %float %11570 2
      %11580 = OpFMul %float %11579 %float_63
      %11581 = OpConvertFToU %uint %11580
      %11582 = OpShiftLeftLogical %uint %11581 %uint_14
      %11583 = OpBitwiseOr %uint %11574 %11578
      %11584 = OpBitwiseOr %uint %11583 %11582
      %11585 = OpBitwiseAnd %uint %11584 %uint_4095
      %11586 = OpShiftRightLogical %uint %11584 %uint_12
      %11587 = OpBitwiseAnd %uint %11586 %uint_255
      %11588 = OpExtInst %float %1 FClamp %10714 %float_0 %float_1
      %11589 = OpFMul %float %11588 %float_255
      %11590 = OpConvertFToU %uint %11589
      %11591 = OpCompositeConstruct %v3float %10716 %float_0 %10710
      %11592 = OpExtInst %v3float %1 FClamp %11591 %102 %127
      %11593 = OpBitcast %v3uint %11592
      %11594 = OpBitwiseAnd %v3uint %11593 %349
      %11595 = OpExtInst %v3uint %1 UMin %11594 %501
      %11596 = OpConvertUToF %v3float %11595
      %11597 = OpExtInst %v3float %1 Fma %11532 %11596 %11592
      %11598 = OpExtInst %v3float %1 FClamp %11597 %102 %127
      %11599 = OpCompositeExtract %float %11598 0
      %11600 = OpFMul %float %11599 %float_127
      %11601 = OpConvertFToU %uint %11600
      %11602 = OpShiftLeftLogical %uint %11601 %uint_0
      %11603 = OpCompositeExtract %float %11598 1
      %11604 = OpFMul %float %11603 %float_127
      %11605 = OpConvertFToU %uint %11604
      %11606 = OpShiftLeftLogical %uint %11605 %uint_7
      %11607 = OpCompositeExtract %float %11598 2
      %11608 = OpFMul %float %11607 %float_63
      %11609 = OpConvertFToU %uint %11608
      %11610 = OpShiftLeftLogical %uint %11609 %uint_14
      %11611 = OpBitwiseOr %uint %11602 %11606
      %11612 = OpBitwiseOr %uint %11611 %11610
      %11613 = OpBitwiseAnd %uint %11410 %uint_65535
      %11614 = OpShiftLeftLogical %uint %11613 %uint_0
      %11615 = OpBitwiseOr %uint %uint_0 %11614
      %11616 = OpShiftLeftLogical %uint %11587 %uint_8
      %11617 = OpBitwiseOr %uint %11616 %11590
      %11618 = OpBitwiseAnd %uint %11615 %uint_65535
      %11619 = OpShiftLeftLogical %uint %11617 %uint_16
      %11620 = OpBitwiseOr %uint %11618 %11619
      %11621 = OpULessThan %bool %11475 %uint_3
               OpSelectionMerge %11622 None
               OpBranchConditional %11621 %11623 %11624
      %11624 = OpLabel
      %11625 = OpISub %uint %11475 %uint_3
      %11626 = OpCompositeExtract %uint %10704 0
      %11627 = OpCompositeExtract %uint %10704 1
      %11628 = OpCompositeConstruct %v3uint %11626 %11627 %11625
               OpImageWrite %10705 %11628 %11620 None
               OpBranch %11622
      %11623 = OpLabel
      %11629 = OpIEqual %bool %11475 %uint_0
      %11630 = OpSelect %uint %11629 %11620 %11474
      %11631 = OpIEqual %bool %11475 %uint_1
      %11632 = OpSelect %uint %11631 %11620 %11473
      %11633 = OpIEqual %bool %11475 %uint_2
      %11634 = OpSelect %uint %11633 %11620 %uint_0
               OpBranch %11622
      %11622 = OpLabel
      %11635 = OpPhi %uint %uint_0 %11624 %11634 %11623
      %11636 = OpPhi %uint %11473 %11624 %11632 %11623
      %11637 = OpPhi %uint %11474 %11624 %11630 %11623
      %11638 = OpIAdd %uint %11475 %uint_1
      %11639 = OpShiftLeftLogical %uint %11585 %uint_20
      %11640 = OpBitwiseOr %uint %11639 %11612
      %11641 = OpULessThan %bool %11638 %uint_3
               OpSelectionMerge %11642 None
               OpBranchConditional %11641 %11643 %11644
      %11644 = OpLabel
      %11645 = OpIAdd %uint %11475 %uint_4294967294
      %11646 = OpCompositeExtract %uint %10704 0
      %11647 = OpCompositeExtract %uint %10704 1
      %11648 = OpCompositeConstruct %v3uint %11646 %11647 %11645
               OpImageWrite %10705 %11648 %11640 None
               OpBranch %11642
      %11643 = OpLabel
      %11649 = OpIEqual %bool %11638 %uint_0
      %11650 = OpSelect %uint %11649 %11640 %11637
      %11651 = OpIEqual %bool %11638 %uint_1
      %11652 = OpSelect %uint %11651 %11640 %11636
      %11653 = OpIEqual %bool %11638 %uint_2
      %11654 = OpSelect %uint %11653 %11640 %11635
               OpBranch %11642
      %11642 = OpLabel
      %11655 = OpPhi %uint %11635 %11644 %11654 %11643
      %11656 = OpPhi %uint %11636 %11644 %11652 %11643
      %11657 = OpPhi %uint %11637 %11644 %11650 %11643
      %11658 = OpIAdd %uint %11475 %uint_2
               OpBranch %11500
      %11500 = OpLabel
      %11659 = OpPhi %uint %11509 %11511 %uint_0 %11642
      %11660 = OpPhi %uint %11524 %11511 %11655 %11642
      %11661 = OpPhi %uint %11525 %11511 %11656 %11642
      %11662 = OpPhi %uint %11526 %11511 %11657 %11642
      %11663 = OpPhi %uint %11527 %11511 %11658 %11642
               OpBranch %11497
      %11498 = OpLabel
      %11664 = OpBitwiseAnd %uint %11410 %uint_65535
      %11665 = OpShiftLeftLogical %uint %11664 %uint_0
      %11666 = OpBitwiseOr %uint %uint_0 %11665
      %11667 = OpBitwiseAnd %uint %11666 %uint_65535
      %11668 = OpULessThan %bool %11475 %uint_3
               OpSelectionMerge %11669 None
               OpBranchConditional %11668 %11670 %11671
      %11671 = OpLabel
      %11672 = OpISub %uint %11475 %uint_3
      %11673 = OpCompositeExtract %uint %10704 0
      %11674 = OpCompositeExtract %uint %10704 1
      %11675 = OpCompositeConstruct %v3uint %11673 %11674 %11672
               OpImageWrite %10705 %11675 %11667 None
               OpBranch %11669
      %11670 = OpLabel
      %11676 = OpIEqual %bool %11475 %uint_0
      %11677 = OpSelect %uint %11676 %11667 %11474
      %11678 = OpIEqual %bool %11475 %uint_1
      %11679 = OpSelect %uint %11678 %11667 %11473
      %11680 = OpIEqual %bool %11475 %uint_2
      %11681 = OpSelect %uint %11680 %11667 %uint_0
               OpBranch %11669
      %11669 = OpLabel
      %11682 = OpPhi %uint %uint_0 %11671 %11681 %11670
      %11683 = OpPhi %uint %11473 %11671 %11679 %11670
      %11684 = OpPhi %uint %11474 %11671 %11677 %11670
      %11685 = OpIAdd %uint %11475 %uint_1
               OpBranch %11497
      %11497 = OpLabel
      %11686 = OpPhi %uint %11659 %11500 %11485 %11669
      %11687 = OpPhi %uint %11660 %11500 %11682 %11669
      %11688 = OpPhi %uint %11661 %11500 %11683 %11669
      %11689 = OpPhi %uint %11662 %11500 %11684 %11669
      %11690 = OpPhi %uint %11663 %11500 %11685 %11669
               OpBranch %11494
      %11495 = OpLabel
      %11691 = OpBitwiseAnd %uint %11410 %uint_65535
      %11692 = OpShiftLeftLogical %uint %11691 %uint_0
      %11693 = OpBitwiseOr %uint %uint_0 %11692
      %11694 = OpBitwiseAnd %uint %11693 %uint_65535
      %11695 = OpExtInst %float %1 FClamp %10710 %float_0 %float_1
      %11696 = OpFMul %float %11695 %float_255
      %11697 = OpConvertFToU %uint %11696
      %11698 = OpShiftLeftLogical %uint %11697 %uint_16
      %11699 = OpBitwiseOr %uint %uint_0 %11698
      %11700 = OpBitwiseOr %uint %11699 %uint_0
      %11701 = OpBitwiseOr %uint %11694 %11700
      %11702 = OpULessThan %bool %11475 %uint_3
               OpSelectionMerge %11703 None
               OpBranchConditional %11702 %11704 %11705
      %11705 = OpLabel
      %11706 = OpISub %uint %11475 %uint_3
      %11707 = OpCompositeExtract %uint %10704 0
      %11708 = OpCompositeExtract %uint %10704 1
      %11709 = OpCompositeConstruct %v3uint %11707 %11708 %11706
               OpImageWrite %10705 %11709 %11701 None
               OpBranch %11703
      %11704 = OpLabel
      %11710 = OpIEqual %bool %11475 %uint_0
      %11711 = OpSelect %uint %11710 %11701 %11474
      %11712 = OpIEqual %bool %11475 %uint_1
      %11713 = OpSelect %uint %11712 %11701 %11473
      %11714 = OpIEqual %bool %11475 %uint_2
      %11715 = OpSelect %uint %11714 %11701 %uint_0
               OpBranch %11703
      %11703 = OpLabel
      %11716 = OpPhi %uint %uint_0 %11705 %11715 %11704
      %11717 = OpPhi %uint %11473 %11705 %11713 %11704
      %11718 = OpPhi %uint %11474 %11705 %11711 %11704
      %11719 = OpIAdd %uint %11475 %uint_1
               OpBranch %11494
      %11494 = OpLabel
      %11720 = OpPhi %uint %11686 %11497 %11485 %11703
      %11721 = OpPhi %uint %11687 %11497 %11716 %11703
      %11722 = OpPhi %uint %11688 %11497 %11717 %11703
      %11723 = OpPhi %uint %11689 %11497 %11718 %11703
      %11724 = OpPhi %uint %11690 %11497 %11719 %11703
               OpBranch %11491
      %11492 = OpLabel
      %11725 = OpBitwiseAnd %uint %11485 %uint_4294967293
      %11726 = OpBitwiseOr %uint %11725 %uint_2
      %11727 = OpBitwiseAnd %uint %11410 %uint_65535
      %11728 = OpShiftLeftLogical %uint %11727 %uint_0
      %11729 = OpBitwiseOr %uint %uint_0 %11728
      %11730 = OpBitwiseAnd %uint %11729 %uint_65535
      %11731 = OpBitwiseAnd %uint %10952 %uint_7
      %11732 = OpShiftLeftLogical %uint %11731 %uint_16
      %11733 = OpBitwiseOr %uint %11730 %11732
      %11734 = OpIEqual %bool %10952 %uint_0
               OpSelectionMerge %11735 DontFlatten
               OpBranchConditional %11734 %11736 %11737
      %11737 = OpLabel
      %11738 = OpIEqual %bool %10952 %uint_1
               OpSelectionMerge %11739 None
               OpBranchConditional %11738 %11740 %11741
      %11741 = OpLabel
      %11742 = OpIEqual %bool %10952 %uint_2
               OpSelectionMerge %11743 None
               OpBranchConditional %11742 %11744 %11745
      %11745 = OpLabel
      %11746 = OpIEqual %bool %10952 %uint_3
      %11747 = OpIEqual %bool %10952 %uint_5
      %11748 = OpLogicalOr %bool %11746 %11747
               OpSelectionMerge %11749 None
               OpBranchConditional %11748 %11750 %11751
      %11751 = OpLabel
      %11752 = OpIEqual %bool %10952 %uint_4
               OpSelectionMerge %11753 None
               OpBranchConditional %11752 %11754 %11753
      %11754 = OpLabel
      %11755 = OpVectorShuffle %v3float %10707 %458 0 1 2
      %11756 = OpFSub %float %8388 %float_0_5
      %11757 = OpFMul %float %11756 %float_0_00787401572
      %11758 = OpFMul %float %11756 %float_0_0158730168
      %11759 = OpCompositeConstruct %v3float %11757 %11757 %11758
      %11760 = OpExtInst %v3float %1 FClamp %11755 %102 %127
      %11761 = OpCompositeExtract %float %11760 0
               OpSelectionMerge %11762 None
               OpSwitch %uint_0 %11763
      %11763 = OpLabel
      %11764 = OpFOrdLessThan %bool %11761 %float_0_00313066994
               OpSelectionMerge %11765 None
               OpBranchConditional %11764 %11766 %11765
      %11766 = OpLabel
      %11767 = OpFMul %float %11761 %float_12_9200001
               OpBranch %11762
      %11765 = OpLabel
      %11768 = OpExtInst %float %1 Pow %11761 %float_0_416666657
      %11769 = OpExtInst %float %1 Fma %11768 %float_1_05499995 %float_n0_0549999997
               OpBranch %11762
      %11762 = OpLabel
      %11770 = OpPhi %float %11767 %11766 %11769 %11765
      %11771 = OpCompositeExtract %float %11760 1
               OpSelectionMerge %11772 None
               OpSwitch %uint_0 %11773
      %11773 = OpLabel
      %11774 = OpFOrdLessThan %bool %11771 %float_0_00313066994
               OpSelectionMerge %11775 None
               OpBranchConditional %11774 %11776 %11775
      %11776 = OpLabel
      %11777 = OpFMul %float %11771 %float_12_9200001
               OpBranch %11772
      %11775 = OpLabel
      %11778 = OpExtInst %float %1 Pow %11771 %float_0_416666657
      %11779 = OpExtInst %float %1 Fma %11778 %float_1_05499995 %float_n0_0549999997
               OpBranch %11772
      %11772 = OpLabel
      %11780 = OpPhi %float %11777 %11776 %11779 %11775
      %11781 = OpCompositeExtract %float %11760 2
               OpSelectionMerge %11782 None
               OpSwitch %uint_0 %11783
      %11783 = OpLabel
      %11784 = OpFOrdLessThan %bool %11781 %float_0_00313066994
               OpSelectionMerge %11785 None
               OpBranchConditional %11784 %11786 %11785
      %11786 = OpLabel
      %11787 = OpFMul %float %11781 %float_12_9200001
               OpBranch %11782
      %11785 = OpLabel
      %11788 = OpExtInst %float %1 Pow %11781 %float_0_416666657
      %11789 = OpExtInst %float %1 Fma %11788 %float_1_05499995 %float_n0_0549999997
               OpBranch %11782
      %11782 = OpLabel
      %11790 = OpPhi %float %11787 %11786 %11789 %11785
      %11791 = OpCompositeConstruct %v3float %11770 %11780 %11790
      %11792 = OpBitcast %v3uint %11791
      %11793 = OpBitwiseAnd %v3uint %11792 %349
      %11794 = OpExtInst %v3uint %1 UMin %11793 %501
      %11795 = OpConvertUToF %v3float %11794
      %11796 = OpExtInst %v3float %1 Fma %11759 %11795 %11791
      %11797 = OpExtInst %v3float %1 FClamp %11796 %102 %127
      %11798 = OpCompositeExtract %float %11797 0
      %11799 = OpFMul %float %11798 %float_127
      %11800 = OpConvertFToU %uint %11799
      %11801 = OpShiftLeftLogical %uint %11800 %uint_0
      %11802 = OpCompositeExtract %float %11797 1
      %11803 = OpFMul %float %11802 %float_127
      %11804 = OpConvertFToU %uint %11803
      %11805 = OpShiftLeftLogical %uint %11804 %uint_7
      %11806 = OpCompositeExtract %float %11797 2
      %11807 = OpFMul %float %11806 %float_63
      %11808 = OpConvertFToU %uint %11807
      %11809 = OpShiftLeftLogical %uint %11808 %uint_14
      %11810 = OpBitwiseOr %uint %11801 %11805
      %11811 = OpBitwiseOr %uint %11810 %11809
      %11812 = OpVectorShuffle %v3float %10717 %10717 0 1 2
      %11813 = OpExtInst %v3float %1 FClamp %11812 %102 %127
      %11814 = OpCompositeExtract %float %11813 0
               OpSelectionMerge %11815 None
               OpSwitch %uint_0 %11816
      %11816 = OpLabel
      %11817 = OpFOrdLessThan %bool %11814 %float_0_00313066994
               OpSelectionMerge %11818 None
               OpBranchConditional %11817 %11819 %11818
      %11819 = OpLabel
      %11820 = OpFMul %float %11814 %float_12_9200001
               OpBranch %11815
      %11818 = OpLabel
      %11821 = OpExtInst %float %1 Pow %11814 %float_0_416666657
      %11822 = OpExtInst %float %1 Fma %11821 %float_1_05499995 %float_n0_0549999997
               OpBranch %11815
      %11815 = OpLabel
      %11823 = OpPhi %float %11820 %11819 %11822 %11818
      %11824 = OpCompositeExtract %float %11813 1
               OpSelectionMerge %11825 None
               OpSwitch %uint_0 %11826
      %11826 = OpLabel
      %11827 = OpFOrdLessThan %bool %11824 %float_0_00313066994
               OpSelectionMerge %11828 None
               OpBranchConditional %11827 %11829 %11828
      %11829 = OpLabel
      %11830 = OpFMul %float %11824 %float_12_9200001
               OpBranch %11825
      %11828 = OpLabel
      %11831 = OpExtInst %float %1 Pow %11824 %float_0_416666657
      %11832 = OpExtInst %float %1 Fma %11831 %float_1_05499995 %float_n0_0549999997
               OpBranch %11825
      %11825 = OpLabel
      %11833 = OpPhi %float %11830 %11829 %11832 %11828
      %11834 = OpCompositeExtract %float %11813 2
               OpSelectionMerge %11835 None
               OpSwitch %uint_0 %11836
      %11836 = OpLabel
      %11837 = OpFOrdLessThan %bool %11834 %float_0_00313066994
               OpSelectionMerge %11838 None
               OpBranchConditional %11837 %11839 %11838
      %11839 = OpLabel
      %11840 = OpFMul %float %11834 %float_12_9200001
               OpBranch %11835
      %11838 = OpLabel
      %11841 = OpExtInst %float %1 Pow %11834 %float_0_416666657
      %11842 = OpExtInst %float %1 Fma %11841 %float_1_05499995 %float_n0_0549999997
               OpBranch %11835
      %11835 = OpLabel
      %11843 = OpPhi %float %11840 %11839 %11842 %11838
      %11844 = OpCompositeConstruct %v3float %11823 %11833 %11843
      %11845 = OpBitcast %v3uint %11844
      %11846 = OpBitwiseAnd %v3uint %11845 %349
      %11847 = OpExtInst %v3uint %1 UMin %11846 %501
      %11848 = OpConvertUToF %v3float %11847
      %11849 = OpExtInst %v3float %1 Fma %11759 %11848 %11844
      %11850 = OpExtInst %v3float %1 FClamp %11849 %102 %127
      %11851 = OpCompositeExtract %float %11850 0
      %11852 = OpFMul %float %11851 %float_127
      %11853 = OpConvertFToU %uint %11852
      %11854 = OpShiftLeftLogical %uint %11853 %uint_0
      %11855 = OpCompositeExtract %float %11850 1
      %11856 = OpFMul %float %11855 %float_127
      %11857 = OpConvertFToU %uint %11856
      %11858 = OpShiftLeftLogical %uint %11857 %uint_7
      %11859 = OpCompositeExtract %float %11850 2
      %11860 = OpFMul %float %11859 %float_63
      %11861 = OpConvertFToU %uint %11860
      %11862 = OpShiftLeftLogical %uint %11861 %uint_14
      %11863 = OpBitwiseOr %uint %11854 %11858
      %11864 = OpBitwiseOr %uint %11863 %11862
      %11865 = OpBitwiseOr %uint %11733 %uint_0
      %11866 = OpULessThan %bool %11475 %uint_3
               OpSelectionMerge %11867 None
               OpBranchConditional %11866 %11868 %11869
      %11869 = OpLabel
      %11870 = OpISub %uint %11475 %uint_3
      %11871 = OpCompositeExtract %uint %10704 0
      %11872 = OpCompositeExtract %uint %10704 1
      %11873 = OpCompositeConstruct %v3uint %11871 %11872 %11870
               OpImageWrite %10705 %11873 %11865 None
               OpBranch %11867
      %11868 = OpLabel
      %11874 = OpIEqual %bool %11475 %uint_0
      %11875 = OpSelect %uint %11874 %11865 %11474
      %11876 = OpIEqual %bool %11475 %uint_1
      %11877 = OpSelect %uint %11876 %11865 %11473
      %11878 = OpIEqual %bool %11475 %uint_2
      %11879 = OpSelect %uint %11878 %11865 %uint_0
               OpBranch %11867
      %11867 = OpLabel
      %11880 = OpPhi %uint %uint_0 %11869 %11879 %11868
      %11881 = OpPhi %uint %11473 %11869 %11877 %11868
      %11882 = OpPhi %uint %11474 %11869 %11875 %11868
      %11883 = OpIAdd %uint %11475 %uint_1
      %11884 = OpBitwiseOr %uint %11811 %uint_0
      %11885 = OpULessThan %bool %11883 %uint_3
               OpSelectionMerge %11886 None
               OpBranchConditional %11885 %11887 %11888
      %11888 = OpLabel
      %11889 = OpIAdd %uint %11475 %uint_4294967294
      %11890 = OpCompositeExtract %uint %10704 0
      %11891 = OpCompositeExtract %uint %10704 1
      %11892 = OpCompositeConstruct %v3uint %11890 %11891 %11889
               OpImageWrite %10705 %11892 %11884 None
               OpBranch %11886
      %11887 = OpLabel
      %11893 = OpIEqual %bool %11883 %uint_0
      %11894 = OpSelect %uint %11893 %11884 %11882
      %11895 = OpIEqual %bool %11883 %uint_1
      %11896 = OpSelect %uint %11895 %11884 %11881
      %11897 = OpIEqual %bool %11883 %uint_2
      %11898 = OpSelect %uint %11897 %11884 %11880
               OpBranch %11886
      %11886 = OpLabel
      %11899 = OpPhi %uint %11880 %11888 %11898 %11887
      %11900 = OpPhi %uint %11881 %11888 %11896 %11887
      %11901 = OpPhi %uint %11882 %11888 %11894 %11887
      %11902 = OpIAdd %uint %11475 %uint_2
      %11903 = OpBitwiseOr %uint %11864 %uint_0
      %11904 = OpULessThan %bool %11902 %uint_3
               OpSelectionMerge %11905 None
               OpBranchConditional %11904 %11906 %11907
      %11907 = OpLabel
      %11908 = OpIAdd %uint %11475 %uint_4294967295
      %11909 = OpCompositeExtract %uint %10704 0
      %11910 = OpCompositeExtract %uint %10704 1
      %11911 = OpCompositeConstruct %v3uint %11909 %11910 %11908
               OpImageWrite %10705 %11911 %11903 None
               OpBranch %11905
      %11906 = OpLabel
      %11912 = OpIEqual %bool %11902 %uint_0
      %11913 = OpSelect %uint %11912 %11903 %11901
      %11914 = OpIEqual %bool %11902 %uint_1
      %11915 = OpSelect %uint %11914 %11903 %11900
      %11916 = OpIEqual %bool %11902 %uint_2
      %11917 = OpSelect %uint %11916 %11903 %11899
               OpBranch %11905
      %11905 = OpLabel
      %11918 = OpPhi %uint %11899 %11907 %11917 %11906
      %11919 = OpPhi %uint %11900 %11907 %11915 %11906
      %11920 = OpPhi %uint %11901 %11907 %11913 %11906
      %11921 = OpIAdd %uint %11475 %uint_3
               OpBranch %11753
      %11753 = OpLabel
      %11922 = OpPhi %uint %uint_0 %11751 %11918 %11905
      %11923 = OpPhi %uint %11473 %11751 %11919 %11905
      %11924 = OpPhi %uint %11474 %11751 %11920 %11905
      %11925 = OpPhi %uint %11475 %11751 %11921 %11905
      %11926 = OpSelect %uint %11752 %uint_0 %11726
               OpBranch %11749
      %11750 = OpLabel
      %11927 = OpExtInst %float %1 FAbs %460
      %11928 = OpFSub %float %float_1 %11927
      %11929 = OpVectorShuffle %v3float %10707 %458 0 1 2
      %11930 = OpFSub %float %8388 %float_0_5
      %11931 = OpFMul %float %11930 %float_0_00787401572
      %11932 = OpFMul %float %11930 %float_0_0158730168
      %11933 = OpCompositeConstruct %v3float %11931 %11931 %11932
      %11934 = OpExtInst %v3float %1 FClamp %11929 %102 %127
      %11935 = OpCompositeExtract %float %11934 0
               OpSelectionMerge %11936 None
               OpSwitch %uint_0 %11937
      %11937 = OpLabel
      %11938 = OpFOrdLessThan %bool %11935 %float_0_00313066994
               OpSelectionMerge %11939 None
               OpBranchConditional %11938 %11940 %11939
      %11940 = OpLabel
      %11941 = OpFMul %float %11935 %float_12_9200001
               OpBranch %11936
      %11939 = OpLabel
      %11942 = OpExtInst %float %1 Pow %11935 %float_0_416666657
      %11943 = OpExtInst %float %1 Fma %11942 %float_1_05499995 %float_n0_0549999997
               OpBranch %11936
      %11936 = OpLabel
      %11944 = OpPhi %float %11941 %11940 %11943 %11939
      %11945 = OpCompositeExtract %float %11934 1
               OpSelectionMerge %11946 None
               OpSwitch %uint_0 %11947
      %11947 = OpLabel
      %11948 = OpFOrdLessThan %bool %11945 %float_0_00313066994
               OpSelectionMerge %11949 None
               OpBranchConditional %11948 %11950 %11949
      %11950 = OpLabel
      %11951 = OpFMul %float %11945 %float_12_9200001
               OpBranch %11946
      %11949 = OpLabel
      %11952 = OpExtInst %float %1 Pow %11945 %float_0_416666657
      %11953 = OpExtInst %float %1 Fma %11952 %float_1_05499995 %float_n0_0549999997
               OpBranch %11946
      %11946 = OpLabel
      %11954 = OpPhi %float %11951 %11950 %11953 %11949
      %11955 = OpCompositeExtract %float %11934 2
               OpSelectionMerge %11956 None
               OpSwitch %uint_0 %11957
      %11957 = OpLabel
      %11958 = OpFOrdLessThan %bool %11955 %float_0_00313066994
               OpSelectionMerge %11959 None
               OpBranchConditional %11958 %11960 %11959
      %11960 = OpLabel
      %11961 = OpFMul %float %11955 %float_12_9200001
               OpBranch %11956
      %11959 = OpLabel
      %11962 = OpExtInst %float %1 Pow %11955 %float_0_416666657
      %11963 = OpExtInst %float %1 Fma %11962 %float_1_05499995 %float_n0_0549999997
               OpBranch %11956
      %11956 = OpLabel
      %11964 = OpPhi %float %11961 %11960 %11963 %11959
      %11965 = OpCompositeConstruct %v3float %11944 %11954 %11964
      %11966 = OpBitcast %v3uint %11965
      %11967 = OpBitwiseAnd %v3uint %11966 %349
      %11968 = OpExtInst %v3uint %1 UMin %11967 %501
      %11969 = OpConvertUToF %v3float %11968
      %11970 = OpExtInst %v3float %1 Fma %11933 %11969 %11965
      %11971 = OpExtInst %v3float %1 FClamp %11970 %102 %127
      %11972 = OpCompositeExtract %float %11971 0
      %11973 = OpFMul %float %11972 %float_127
      %11974 = OpConvertFToU %uint %11973
      %11975 = OpShiftLeftLogical %uint %11974 %uint_0
      %11976 = OpCompositeExtract %float %11971 1
      %11977 = OpFMul %float %11976 %float_127
      %11978 = OpConvertFToU %uint %11977
      %11979 = OpShiftLeftLogical %uint %11978 %uint_7
      %11980 = OpCompositeExtract %float %11971 2
      %11981 = OpFMul %float %11980 %float_63
      %11982 = OpConvertFToU %uint %11981
      %11983 = OpShiftLeftLogical %uint %11982 %uint_14
      %11984 = OpBitwiseOr %uint %11975 %11979
      %11985 = OpBitwiseOr %uint %11984 %11983
      %11986 = OpVectorShuffle %v3float %10717 %10717 0 1 2
      %11987 = OpExtInst %v3float %1 FClamp %11986 %102 %127
      %11988 = OpCompositeExtract %float %11987 0
               OpSelectionMerge %11989 None
               OpSwitch %uint_0 %11990
      %11990 = OpLabel
      %11991 = OpFOrdLessThan %bool %11988 %float_0_00313066994
               OpSelectionMerge %11992 None
               OpBranchConditional %11991 %11993 %11992
      %11993 = OpLabel
      %11994 = OpFMul %float %11988 %float_12_9200001
               OpBranch %11989
      %11992 = OpLabel
      %11995 = OpExtInst %float %1 Pow %11988 %float_0_416666657
      %11996 = OpExtInst %float %1 Fma %11995 %float_1_05499995 %float_n0_0549999997
               OpBranch %11989
      %11989 = OpLabel
      %11997 = OpPhi %float %11994 %11993 %11996 %11992
      %11998 = OpCompositeExtract %float %11987 1
               OpSelectionMerge %11999 None
               OpSwitch %uint_0 %12000
      %12000 = OpLabel
      %12001 = OpFOrdLessThan %bool %11998 %float_0_00313066994
               OpSelectionMerge %12002 None
               OpBranchConditional %12001 %12003 %12002
      %12003 = OpLabel
      %12004 = OpFMul %float %11998 %float_12_9200001
               OpBranch %11999
      %12002 = OpLabel
      %12005 = OpExtInst %float %1 Pow %11998 %float_0_416666657
      %12006 = OpExtInst %float %1 Fma %12005 %float_1_05499995 %float_n0_0549999997
               OpBranch %11999
      %11999 = OpLabel
      %12007 = OpPhi %float %12004 %12003 %12006 %12002
      %12008 = OpCompositeExtract %float %11987 2
               OpSelectionMerge %12009 None
               OpSwitch %uint_0 %12010
      %12010 = OpLabel
      %12011 = OpFOrdLessThan %bool %12008 %float_0_00313066994
               OpSelectionMerge %12012 None
               OpBranchConditional %12011 %12013 %12012
      %12013 = OpLabel
      %12014 = OpFMul %float %12008 %float_12_9200001
               OpBranch %12009
      %12012 = OpLabel
      %12015 = OpExtInst %float %1 Pow %12008 %float_0_416666657
      %12016 = OpExtInst %float %1 Fma %12015 %float_1_05499995 %float_n0_0549999997
               OpBranch %12009
      %12009 = OpLabel
      %12017 = OpPhi %float %12014 %12013 %12016 %12012
      %12018 = OpCompositeConstruct %v3float %11997 %12007 %12017
      %12019 = OpBitcast %v3uint %12018
      %12020 = OpBitwiseAnd %v3uint %12019 %349
      %12021 = OpExtInst %v3uint %1 UMin %12020 %501
      %12022 = OpConvertUToF %v3float %12021
      %12023 = OpExtInst %v3float %1 Fma %11933 %12022 %12018
      %12024 = OpExtInst %v3float %1 FClamp %12023 %102 %127
      %12025 = OpCompositeExtract %float %12024 0
      %12026 = OpFMul %float %12025 %float_127
      %12027 = OpConvertFToU %uint %12026
      %12028 = OpShiftLeftLogical %uint %12027 %uint_0
      %12029 = OpCompositeExtract %float %12024 1
      %12030 = OpFMul %float %12029 %float_127
      %12031 = OpConvertFToU %uint %12030
      %12032 = OpShiftLeftLogical %uint %12031 %uint_7
      %12033 = OpCompositeExtract %float %12024 2
      %12034 = OpFMul %float %12033 %float_63
      %12035 = OpConvertFToU %uint %12034
      %12036 = OpShiftLeftLogical %uint %12035 %uint_14
      %12037 = OpBitwiseOr %uint %12028 %12032
      %12038 = OpBitwiseOr %uint %12037 %12036
      %12039 = OpExtInst %float %1 FClamp %11928 %float_0 %float_1
      %12040 = OpExtInst %float %1 FClamp %12039 %float_0 %float_1
      %12041 = OpFMul %float %12040 %float_127
      %12042 = OpConvertFToU %uint %12041
      %12043 = OpExtInst %uint %1 PackHalf2x16 %558
      %12044 = OpShiftLeftLogical %uint %12043 %uint_15
      %12045 = OpBitwiseAnd %uint %12044 %uint_1072693248
      %12046 = OpShiftLeftLogical %uint %12043 %uint_5
      %12047 = OpBitwiseAnd %uint %12046 %uint_1047552
      %12048 = OpShiftRightLogical %uint %12043 %uint_5
      %12049 = OpBitwiseAnd %uint %12048 %uint_1023
      %12050 = OpBitwiseOr %uint %12045 %12047
      %12051 = OpBitwiseOr %uint %12050 %12049
      %12052 = OpBitwiseAnd %uint %12051 %uint_4095
      %12053 = OpShiftRightLogical %uint %12051 %uint_12
      %12054 = OpBitwiseAnd %uint %12053 %uint_4095
      %12055 = OpShiftRightLogical %uint %12051 %uint_24
      %12056 = OpBitwiseAnd %uint %12055 %uint_63
      %12057 = OpBitwiseAnd %uint %12042 %uint_127
      %12058 = OpShiftLeftLogical %uint %12057 %uint_19
      %12059 = OpBitwiseOr %uint %11733 %12058
      %12060 = OpShiftLeftLogical %uint %12056 %uint_26
      %12061 = OpBitwiseOr %uint %12059 %12060
      %12062 = OpULessThan %bool %11475 %uint_3
               OpSelectionMerge %12063 None
               OpBranchConditional %12062 %12064 %12065
      %12065 = OpLabel
      %12066 = OpISub %uint %11475 %uint_3
      %12067 = OpCompositeExtract %uint %10704 0
      %12068 = OpCompositeExtract %uint %10704 1
      %12069 = OpCompositeConstruct %v3uint %12067 %12068 %12066
               OpImageWrite %10705 %12069 %12061 None
               OpBranch %12063
      %12064 = OpLabel
      %12070 = OpIEqual %bool %11475 %uint_0
      %12071 = OpSelect %uint %12070 %12061 %11474
      %12072 = OpIEqual %bool %11475 %uint_1
      %12073 = OpSelect %uint %12072 %12061 %11473
      %12074 = OpIEqual %bool %11475 %uint_2
      %12075 = OpSelect %uint %12074 %12061 %uint_0
               OpBranch %12063
      %12063 = OpLabel
      %12076 = OpPhi %uint %uint_0 %12065 %12075 %12064
      %12077 = OpPhi %uint %11473 %12065 %12073 %12064
      %12078 = OpPhi %uint %11474 %12065 %12071 %12064
      %12079 = OpIAdd %uint %11475 %uint_1
      %12080 = OpShiftLeftLogical %uint %12052 %uint_20
      %12081 = OpBitwiseOr %uint %11985 %12080
      %12082 = OpULessThan %bool %12079 %uint_3
               OpSelectionMerge %12083 None
               OpBranchConditional %12082 %12084 %12085
      %12085 = OpLabel
      %12086 = OpIAdd %uint %11475 %uint_4294967294
      %12087 = OpCompositeExtract %uint %10704 0
      %12088 = OpCompositeExtract %uint %10704 1
      %12089 = OpCompositeConstruct %v3uint %12087 %12088 %12086
               OpImageWrite %10705 %12089 %12081 None
               OpBranch %12083
      %12084 = OpLabel
      %12090 = OpIEqual %bool %12079 %uint_0
      %12091 = OpSelect %uint %12090 %12081 %12078
      %12092 = OpIEqual %bool %12079 %uint_1
      %12093 = OpSelect %uint %12092 %12081 %12077
      %12094 = OpIEqual %bool %12079 %uint_2
      %12095 = OpSelect %uint %12094 %12081 %12076
               OpBranch %12083
      %12083 = OpLabel
      %12096 = OpPhi %uint %12076 %12085 %12095 %12084
      %12097 = OpPhi %uint %12077 %12085 %12093 %12084
      %12098 = OpPhi %uint %12078 %12085 %12091 %12084
      %12099 = OpIAdd %uint %11475 %uint_2
      %12100 = OpShiftLeftLogical %uint %12054 %uint_20
      %12101 = OpBitwiseOr %uint %12038 %12100
      %12102 = OpULessThan %bool %12099 %uint_3
               OpSelectionMerge %12103 None
               OpBranchConditional %12102 %12104 %12105
      %12105 = OpLabel
      %12106 = OpIAdd %uint %11475 %uint_4294967295
      %12107 = OpCompositeExtract %uint %10704 0
      %12108 = OpCompositeExtract %uint %10704 1
      %12109 = OpCompositeConstruct %v3uint %12107 %12108 %12106
               OpImageWrite %10705 %12109 %12101 None
               OpBranch %12103
      %12104 = OpLabel
      %12110 = OpIEqual %bool %12099 %uint_0
      %12111 = OpSelect %uint %12110 %12101 %12098
      %12112 = OpIEqual %bool %12099 %uint_1
      %12113 = OpSelect %uint %12112 %12101 %12097
      %12114 = OpIEqual %bool %12099 %uint_2
      %12115 = OpSelect %uint %12114 %12101 %12096
               OpBranch %12103
      %12103 = OpLabel
      %12116 = OpPhi %uint %12096 %12105 %12115 %12104
      %12117 = OpPhi %uint %12097 %12105 %12113 %12104
      %12118 = OpPhi %uint %12098 %12105 %12111 %12104
      %12119 = OpIAdd %uint %11475 %uint_3
               OpBranch %11749
      %11749 = OpLabel
      %12120 = OpPhi %uint %11926 %11753 %uint_0 %12103
      %12121 = OpPhi %uint %11922 %11753 %12116 %12103
      %12122 = OpPhi %uint %11923 %11753 %12117 %12103
      %12123 = OpPhi %uint %11924 %11753 %12118 %12103
      %12124 = OpPhi %uint %11925 %11753 %12119 %12103
               OpBranch %11743
      %11744 = OpLabel
      %12125 = OpVectorShuffle %v3float %10707 %458 0 1 2
      %12126 = OpFSub %float %8388 %float_0_5
      %12127 = OpFMul %float %12126 %float_0_00787401572
      %12128 = OpFMul %float %12126 %float_0_0158730168
      %12129 = OpCompositeConstruct %v3float %12127 %12127 %12128
      %12130 = OpExtInst %v3float %1 FClamp %12125 %102 %127
      %12131 = OpCompositeExtract %float %12130 0
               OpSelectionMerge %12132 None
               OpSwitch %uint_0 %12133
      %12133 = OpLabel
      %12134 = OpFOrdLessThan %bool %12131 %float_0_00313066994
               OpSelectionMerge %12135 None
               OpBranchConditional %12134 %12136 %12135
      %12136 = OpLabel
      %12137 = OpFMul %float %12131 %float_12_9200001
               OpBranch %12132
      %12135 = OpLabel
      %12138 = OpExtInst %float %1 Pow %12131 %float_0_416666657
      %12139 = OpExtInst %float %1 Fma %12138 %float_1_05499995 %float_n0_0549999997
               OpBranch %12132
      %12132 = OpLabel
      %12140 = OpPhi %float %12137 %12136 %12139 %12135
      %12141 = OpCompositeExtract %float %12130 1
               OpSelectionMerge %12142 None
               OpSwitch %uint_0 %12143
      %12143 = OpLabel
      %12144 = OpFOrdLessThan %bool %12141 %float_0_00313066994
               OpSelectionMerge %12145 None
               OpBranchConditional %12144 %12146 %12145
      %12146 = OpLabel
      %12147 = OpFMul %float %12141 %float_12_9200001
               OpBranch %12142
      %12145 = OpLabel
      %12148 = OpExtInst %float %1 Pow %12141 %float_0_416666657
      %12149 = OpExtInst %float %1 Fma %12148 %float_1_05499995 %float_n0_0549999997
               OpBranch %12142
      %12142 = OpLabel
      %12150 = OpPhi %float %12147 %12146 %12149 %12145
      %12151 = OpCompositeExtract %float %12130 2
               OpSelectionMerge %12152 None
               OpSwitch %uint_0 %12153
      %12153 = OpLabel
      %12154 = OpFOrdLessThan %bool %12151 %float_0_00313066994
               OpSelectionMerge %12155 None
               OpBranchConditional %12154 %12156 %12155
      %12156 = OpLabel
      %12157 = OpFMul %float %12151 %float_12_9200001
               OpBranch %12152
      %12155 = OpLabel
      %12158 = OpExtInst %float %1 Pow %12151 %float_0_416666657
      %12159 = OpExtInst %float %1 Fma %12158 %float_1_05499995 %float_n0_0549999997
               OpBranch %12152
      %12152 = OpLabel
      %12160 = OpPhi %float %12157 %12156 %12159 %12155
      %12161 = OpCompositeConstruct %v3float %12140 %12150 %12160
      %12162 = OpBitcast %v3uint %12161
      %12163 = OpBitwiseAnd %v3uint %12162 %349
      %12164 = OpExtInst %v3uint %1 UMin %12163 %501
      %12165 = OpConvertUToF %v3float %12164
      %12166 = OpExtInst %v3float %1 Fma %12129 %12165 %12161
      %12167 = OpExtInst %v3float %1 FClamp %12166 %102 %127
      %12168 = OpCompositeExtract %float %12167 0
      %12169 = OpFMul %float %12168 %float_127
      %12170 = OpConvertFToU %uint %12169
      %12171 = OpShiftLeftLogical %uint %12170 %uint_0
      %12172 = OpCompositeExtract %float %12167 1
      %12173 = OpFMul %float %12172 %float_127
      %12174 = OpConvertFToU %uint %12173
      %12175 = OpShiftLeftLogical %uint %12174 %uint_7
      %12176 = OpCompositeExtract %float %12167 2
      %12177 = OpFMul %float %12176 %float_63
      %12178 = OpConvertFToU %uint %12177
      %12179 = OpShiftLeftLogical %uint %12178 %uint_14
      %12180 = OpBitwiseOr %uint %12171 %12175
      %12181 = OpBitwiseOr %uint %12180 %12179
      %12182 = OpVectorShuffle %v3float %10717 %10717 0 1 2
      %12183 = OpExtInst %v3float %1 FClamp %12182 %102 %127
      %12184 = OpCompositeExtract %float %12183 0
               OpSelectionMerge %12185 None
               OpSwitch %uint_0 %12186
      %12186 = OpLabel
      %12187 = OpFOrdLessThan %bool %12184 %float_0_00313066994
               OpSelectionMerge %12188 None
               OpBranchConditional %12187 %12189 %12188
      %12189 = OpLabel
      %12190 = OpFMul %float %12184 %float_12_9200001
               OpBranch %12185
      %12188 = OpLabel
      %12191 = OpExtInst %float %1 Pow %12184 %float_0_416666657
      %12192 = OpExtInst %float %1 Fma %12191 %float_1_05499995 %float_n0_0549999997
               OpBranch %12185
      %12185 = OpLabel
      %12193 = OpPhi %float %12190 %12189 %12192 %12188
      %12194 = OpCompositeExtract %float %12183 1
               OpSelectionMerge %12195 None
               OpSwitch %uint_0 %12196
      %12196 = OpLabel
      %12197 = OpFOrdLessThan %bool %12194 %float_0_00313066994
               OpSelectionMerge %12198 None
               OpBranchConditional %12197 %12199 %12198
      %12199 = OpLabel
      %12200 = OpFMul %float %12194 %float_12_9200001
               OpBranch %12195
      %12198 = OpLabel
      %12201 = OpExtInst %float %1 Pow %12194 %float_0_416666657
      %12202 = OpExtInst %float %1 Fma %12201 %float_1_05499995 %float_n0_0549999997
               OpBranch %12195
      %12195 = OpLabel
      %12203 = OpPhi %float %12200 %12199 %12202 %12198
      %12204 = OpCompositeExtract %float %12183 2
               OpSelectionMerge %12205 None
               OpSwitch %uint_0 %12206
      %12206 = OpLabel
      %12207 = OpFOrdLessThan %bool %12204 %float_0_00313066994
               OpSelectionMerge %12208 None
               OpBranchConditional %12207 %12209 %12208
      %12209 = OpLabel
      %12210 = OpFMul %float %12204 %float_12_9200001
               OpBranch %12205
      %12208 = OpLabel
      %12211 = OpExtInst %float %1 Pow %12204 %float_0_416666657
      %12212 = OpExtInst %float %1 Fma %12211 %float_1_05499995 %float_n0_0549999997
               OpBranch %12205
      %12205 = OpLabel
      %12213 = OpPhi %float %12210 %12209 %12212 %12208
      %12214 = OpCompositeConstruct %v3float %12193 %12203 %12213
      %12215 = OpBitcast %v3uint %12214
      %12216 = OpBitwiseAnd %v3uint %12215 %349
      %12217 = OpExtInst %v3uint %1 UMin %12216 %501
      %12218 = OpConvertUToF %v3float %12217
      %12219 = OpExtInst %v3float %1 Fma %12129 %12218 %12214
      %12220 = OpExtInst %v3float %1 FClamp %12219 %102 %127
      %12221 = OpCompositeExtract %float %12220 0
      %12222 = OpFMul %float %12221 %float_127
      %12223 = OpConvertFToU %uint %12222
      %12224 = OpShiftLeftLogical %uint %12223 %uint_0
      %12225 = OpCompositeExtract %float %12220 1
      %12226 = OpFMul %float %12225 %float_127
      %12227 = OpConvertFToU %uint %12226
      %12228 = OpShiftLeftLogical %uint %12227 %uint_7
      %12229 = OpCompositeExtract %float %12220 2
      %12230 = OpFMul %float %12229 %float_63
      %12231 = OpConvertFToU %uint %12230
      %12232 = OpShiftLeftLogical %uint %12231 %uint_14
      %12233 = OpBitwiseOr %uint %12224 %12228
      %12234 = OpBitwiseOr %uint %12233 %12232
               OpSelectionMerge %12235 None
               OpSwitch %uint_0 %12236
      %12236 = OpLabel
               OpSelectionMerge %12237 None
               OpBranchConditional %true %12238 %12237
      %12238 = OpLabel
               OpBranch %12235
      %12237 = OpLabel
      %12239 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12235
      %12235 = OpLabel
      %12240 = OpPhi %float %float_0 %12238 %12239 %12237
               OpSelectionMerge %12241 None
               OpSwitch %uint_0 %12242
      %12242 = OpLabel
               OpSelectionMerge %12243 None
               OpBranchConditional %true %12244 %12243
      %12244 = OpLabel
               OpBranch %12241
      %12243 = OpLabel
      %12245 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12241
      %12241 = OpLabel
      %12246 = OpPhi %float %float_0 %12244 %12245 %12243
               OpSelectionMerge %12247 None
               OpSwitch %uint_0 %12248
      %12248 = OpLabel
               OpSelectionMerge %12249 None
               OpBranchConditional %true %12250 %12249
      %12250 = OpLabel
               OpBranch %12247
      %12249 = OpLabel
      %12251 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12247
      %12247 = OpLabel
      %12252 = OpPhi %float %float_0 %12250 %12251 %12249
      %12253 = OpCompositeConstruct %v3float %12240 %12246 %12252
      %12254 = OpBitcast %v3uint %12253
      %12255 = OpBitwiseAnd %v3uint %12254 %349
      %12256 = OpExtInst %v3uint %1 UMin %12255 %501
      %12257 = OpConvertUToF %v3float %12256
      %12258 = OpExtInst %v3float %1 Fma %12129 %12257 %12253
      %12259 = OpExtInst %v3float %1 FClamp %12258 %102 %127
      %12260 = OpCompositeExtract %float %12259 0
      %12261 = OpFMul %float %12260 %float_127
      %12262 = OpConvertFToU %uint %12261
      %12263 = OpShiftLeftLogical %uint %12262 %uint_0
      %12264 = OpCompositeExtract %float %12259 1
      %12265 = OpFMul %float %12264 %float_127
      %12266 = OpConvertFToU %uint %12265
      %12267 = OpShiftLeftLogical %uint %12266 %uint_7
      %12268 = OpCompositeExtract %float %12259 2
      %12269 = OpFMul %float %12268 %float_63
      %12270 = OpConvertFToU %uint %12269
      %12271 = OpShiftLeftLogical %uint %12270 %uint_14
      %12272 = OpBitwiseOr %uint %12263 %12267
      %12273 = OpBitwiseOr %uint %12272 %12271
      %12274 = OpBitwiseOr %uint %11733 %uint_0
      %12275 = OpULessThan %bool %11475 %uint_3
               OpSelectionMerge %12276 None
               OpBranchConditional %12275 %12277 %12278
      %12278 = OpLabel
      %12279 = OpISub %uint %11475 %uint_3
      %12280 = OpCompositeExtract %uint %10704 0
      %12281 = OpCompositeExtract %uint %10704 1
      %12282 = OpCompositeConstruct %v3uint %12280 %12281 %12279
               OpImageWrite %10705 %12282 %12274 None
               OpBranch %12276
      %12277 = OpLabel
      %12283 = OpIEqual %bool %11475 %uint_0
      %12284 = OpSelect %uint %12283 %12274 %11474
      %12285 = OpIEqual %bool %11475 %uint_1
      %12286 = OpSelect %uint %12285 %12274 %11473
      %12287 = OpIEqual %bool %11475 %uint_2
      %12288 = OpSelect %uint %12287 %12274 %uint_0
               OpBranch %12276
      %12276 = OpLabel
      %12289 = OpPhi %uint %uint_0 %12278 %12288 %12277
      %12290 = OpPhi %uint %11473 %12278 %12286 %12277
      %12291 = OpPhi %uint %11474 %12278 %12284 %12277
      %12292 = OpIAdd %uint %11475 %uint_1
      %12293 = OpBitwiseAnd %uint %12273 %uint_1047552
      %12294 = OpShiftLeftLogical %uint %12293 %uint_10
      %12295 = OpBitwiseOr %uint %12181 %12294
      %12296 = OpULessThan %bool %12292 %uint_3
               OpSelectionMerge %12297 None
               OpBranchConditional %12296 %12298 %12299
      %12299 = OpLabel
      %12300 = OpIAdd %uint %11475 %uint_4294967294
      %12301 = OpCompositeExtract %uint %10704 0
      %12302 = OpCompositeExtract %uint %10704 1
      %12303 = OpCompositeConstruct %v3uint %12301 %12302 %12300
               OpImageWrite %10705 %12303 %12295 None
               OpBranch %12297
      %12298 = OpLabel
      %12304 = OpIEqual %bool %12292 %uint_0
      %12305 = OpSelect %uint %12304 %12295 %12291
      %12306 = OpIEqual %bool %12292 %uint_1
      %12307 = OpSelect %uint %12306 %12295 %12290
      %12308 = OpIEqual %bool %12292 %uint_2
      %12309 = OpSelect %uint %12308 %12295 %12289
               OpBranch %12297
      %12297 = OpLabel
      %12310 = OpPhi %uint %12289 %12299 %12309 %12298
      %12311 = OpPhi %uint %12290 %12299 %12307 %12298
      %12312 = OpPhi %uint %12291 %12299 %12305 %12298
      %12313 = OpIAdd %uint %11475 %uint_2
      %12314 = OpBitwiseAnd %uint %12273 %uint_1023
      %12315 = OpShiftLeftLogical %uint %12314 %uint_20
      %12316 = OpBitwiseOr %uint %12234 %12315
      %12317 = OpULessThan %bool %12313 %uint_3
               OpSelectionMerge %12318 None
               OpBranchConditional %12317 %12319 %12320
      %12320 = OpLabel
      %12321 = OpIAdd %uint %11475 %uint_4294967295
      %12322 = OpCompositeExtract %uint %10704 0
      %12323 = OpCompositeExtract %uint %10704 1
      %12324 = OpCompositeConstruct %v3uint %12322 %12323 %12321
               OpImageWrite %10705 %12324 %12316 None
               OpBranch %12318
      %12319 = OpLabel
      %12325 = OpIEqual %bool %12313 %uint_0
      %12326 = OpSelect %uint %12325 %12316 %12312
      %12327 = OpIEqual %bool %12313 %uint_1
      %12328 = OpSelect %uint %12327 %12316 %12311
      %12329 = OpIEqual %bool %12313 %uint_2
      %12330 = OpSelect %uint %12329 %12316 %12310
               OpBranch %12318
      %12318 = OpLabel
      %12331 = OpPhi %uint %12310 %12320 %12330 %12319
      %12332 = OpPhi %uint %12311 %12320 %12328 %12319
      %12333 = OpPhi %uint %12312 %12320 %12326 %12319
      %12334 = OpIAdd %uint %11475 %uint_3
               OpBranch %11743
      %11743 = OpLabel
      %12335 = OpPhi %uint %12120 %11749 %uint_0 %12318
      %12336 = OpPhi %uint %12121 %11749 %12331 %12318
      %12337 = OpPhi %uint %12122 %11749 %12332 %12318
      %12338 = OpPhi %uint %12123 %11749 %12333 %12318
      %12339 = OpPhi %uint %12124 %11749 %12334 %12318
               OpBranch %11739
      %11740 = OpLabel
      %12340 = OpVectorShuffle %v3float %10707 %458 0 1 2
      %12341 = OpFSub %float %8388 %float_0_5
      %12342 = OpFMul %float %12341 %float_0_00787401572
      %12343 = OpFMul %float %12341 %float_0_0158730168
      %12344 = OpCompositeConstruct %v3float %12342 %12342 %12343
      %12345 = OpExtInst %v3float %1 FClamp %12340 %102 %127
      %12346 = OpCompositeExtract %float %12345 0
               OpSelectionMerge %12347 None
               OpSwitch %uint_0 %12348
      %12348 = OpLabel
      %12349 = OpFOrdLessThan %bool %12346 %float_0_00313066994
               OpSelectionMerge %12350 None
               OpBranchConditional %12349 %12351 %12350
      %12351 = OpLabel
      %12352 = OpFMul %float %12346 %float_12_9200001
               OpBranch %12347
      %12350 = OpLabel
      %12353 = OpExtInst %float %1 Pow %12346 %float_0_416666657
      %12354 = OpExtInst %float %1 Fma %12353 %float_1_05499995 %float_n0_0549999997
               OpBranch %12347
      %12347 = OpLabel
      %12355 = OpPhi %float %12352 %12351 %12354 %12350
      %12356 = OpCompositeExtract %float %12345 1
               OpSelectionMerge %12357 None
               OpSwitch %uint_0 %12358
      %12358 = OpLabel
      %12359 = OpFOrdLessThan %bool %12356 %float_0_00313066994
               OpSelectionMerge %12360 None
               OpBranchConditional %12359 %12361 %12360
      %12361 = OpLabel
      %12362 = OpFMul %float %12356 %float_12_9200001
               OpBranch %12357
      %12360 = OpLabel
      %12363 = OpExtInst %float %1 Pow %12356 %float_0_416666657
      %12364 = OpExtInst %float %1 Fma %12363 %float_1_05499995 %float_n0_0549999997
               OpBranch %12357
      %12357 = OpLabel
      %12365 = OpPhi %float %12362 %12361 %12364 %12360
      %12366 = OpCompositeExtract %float %12345 2
               OpSelectionMerge %12367 None
               OpSwitch %uint_0 %12368
      %12368 = OpLabel
      %12369 = OpFOrdLessThan %bool %12366 %float_0_00313066994
               OpSelectionMerge %12370 None
               OpBranchConditional %12369 %12371 %12370
      %12371 = OpLabel
      %12372 = OpFMul %float %12366 %float_12_9200001
               OpBranch %12367
      %12370 = OpLabel
      %12373 = OpExtInst %float %1 Pow %12366 %float_0_416666657
      %12374 = OpExtInst %float %1 Fma %12373 %float_1_05499995 %float_n0_0549999997
               OpBranch %12367
      %12367 = OpLabel
      %12375 = OpPhi %float %12372 %12371 %12374 %12370
      %12376 = OpCompositeConstruct %v3float %12355 %12365 %12375
      %12377 = OpBitcast %v3uint %12376
      %12378 = OpBitwiseAnd %v3uint %12377 %349
      %12379 = OpExtInst %v3uint %1 UMin %12378 %501
      %12380 = OpConvertUToF %v3float %12379
      %12381 = OpExtInst %v3float %1 Fma %12344 %12380 %12376
      %12382 = OpExtInst %v3float %1 FClamp %12381 %102 %127
      %12383 = OpCompositeExtract %float %12382 0
      %12384 = OpFMul %float %12383 %float_127
      %12385 = OpConvertFToU %uint %12384
      %12386 = OpShiftLeftLogical %uint %12385 %uint_0
      %12387 = OpCompositeExtract %float %12382 1
      %12388 = OpFMul %float %12387 %float_127
      %12389 = OpConvertFToU %uint %12388
      %12390 = OpShiftLeftLogical %uint %12389 %uint_7
      %12391 = OpCompositeExtract %float %12382 2
      %12392 = OpFMul %float %12391 %float_63
      %12393 = OpConvertFToU %uint %12392
      %12394 = OpShiftLeftLogical %uint %12393 %uint_14
      %12395 = OpBitwiseOr %uint %12386 %12390
      %12396 = OpBitwiseOr %uint %12395 %12394
      %12397 = OpExtInst %float %1 FClamp %10710 %float_0 %float_1
      %12398 = OpFMul %float %12397 %float_255
      %12399 = OpConvertFToU %uint %12398
      %12400 = OpShiftLeftLogical %uint %12399 %uint_8
      %12401 = OpExtInst %float %1 FClamp %10714 %float_0 %float_1
      %12402 = OpFMul %float %12401 %float_255
      %12403 = OpConvertFToU %uint %12402
      %12404 = OpShiftLeftLogical %uint %12403 %uint_16
      %12405 = OpBitwiseOr %uint %uint_0 %12400
      %12406 = OpBitwiseOr %uint %12405 %12404
      %12407 = OpBitwiseOr %uint %12406 %uint_0
      %12408 = OpBitwiseOr %uint %11733 %uint_0
      %12409 = OpULessThan %bool %11475 %uint_3
               OpSelectionMerge %12410 None
               OpBranchConditional %12409 %12411 %12412
      %12412 = OpLabel
      %12413 = OpISub %uint %11475 %uint_3
      %12414 = OpCompositeExtract %uint %10704 0
      %12415 = OpCompositeExtract %uint %10704 1
      %12416 = OpCompositeConstruct %v3uint %12414 %12415 %12413
               OpImageWrite %10705 %12416 %12408 None
               OpBranch %12410
      %12411 = OpLabel
      %12417 = OpIEqual %bool %11475 %uint_0
      %12418 = OpSelect %uint %12417 %12408 %11474
      %12419 = OpIEqual %bool %11475 %uint_1
      %12420 = OpSelect %uint %12419 %12408 %11473
      %12421 = OpIEqual %bool %11475 %uint_2
      %12422 = OpSelect %uint %12421 %12408 %uint_0
               OpBranch %12410
      %12410 = OpLabel
      %12423 = OpPhi %uint %uint_0 %12412 %12422 %12411
      %12424 = OpPhi %uint %11473 %12412 %12420 %12411
      %12425 = OpPhi %uint %11474 %12412 %12418 %12411
      %12426 = OpIAdd %uint %11475 %uint_1
      %12427 = OpBitwiseOr %uint %12396 %uint_0
      %12428 = OpULessThan %bool %12426 %uint_3
               OpSelectionMerge %12429 None
               OpBranchConditional %12428 %12430 %12431
      %12431 = OpLabel
      %12432 = OpIAdd %uint %11475 %uint_4294967294
      %12433 = OpCompositeExtract %uint %10704 0
      %12434 = OpCompositeExtract %uint %10704 1
      %12435 = OpCompositeConstruct %v3uint %12433 %12434 %12432
               OpImageWrite %10705 %12435 %12427 None
               OpBranch %12429
      %12430 = OpLabel
      %12436 = OpIEqual %bool %12426 %uint_0
      %12437 = OpSelect %uint %12436 %12427 %12425
      %12438 = OpIEqual %bool %12426 %uint_1
      %12439 = OpSelect %uint %12438 %12427 %12424
      %12440 = OpIEqual %bool %12426 %uint_2
      %12441 = OpSelect %uint %12440 %12427 %12423
               OpBranch %12429
      %12429 = OpLabel
      %12442 = OpPhi %uint %12423 %12431 %12441 %12430
      %12443 = OpPhi %uint %12424 %12431 %12439 %12430
      %12444 = OpPhi %uint %12425 %12431 %12437 %12430
      %12445 = OpIAdd %uint %11475 %uint_2
      %12446 = OpBitwiseOr %uint %12407 %uint_0
      %12447 = OpULessThan %bool %12445 %uint_3
               OpSelectionMerge %12448 None
               OpBranchConditional %12447 %12449 %12450
      %12450 = OpLabel
      %12451 = OpIAdd %uint %11475 %uint_4294967295
      %12452 = OpCompositeExtract %uint %10704 0
      %12453 = OpCompositeExtract %uint %10704 1
      %12454 = OpCompositeConstruct %v3uint %12452 %12453 %12451
               OpImageWrite %10705 %12454 %12446 None
               OpBranch %12448
      %12449 = OpLabel
      %12455 = OpIEqual %bool %12445 %uint_0
      %12456 = OpSelect %uint %12455 %12446 %12444
      %12457 = OpIEqual %bool %12445 %uint_1
      %12458 = OpSelect %uint %12457 %12446 %12443
      %12459 = OpIEqual %bool %12445 %uint_2
      %12460 = OpSelect %uint %12459 %12446 %12442
               OpBranch %12448
      %12448 = OpLabel
      %12461 = OpPhi %uint %12442 %12450 %12460 %12449
      %12462 = OpPhi %uint %12443 %12450 %12458 %12449
      %12463 = OpPhi %uint %12444 %12450 %12456 %12449
      %12464 = OpIAdd %uint %11475 %uint_3
               OpBranch %11739
      %11739 = OpLabel
      %12465 = OpPhi %uint %12335 %11743 %uint_0 %12448
      %12466 = OpPhi %uint %12336 %11743 %12461 %12448
      %12467 = OpPhi %uint %12337 %11743 %12462 %12448
      %12468 = OpPhi %uint %12338 %11743 %12463 %12448
      %12469 = OpPhi %uint %12339 %11743 %12464 %12448
               OpBranch %11735
      %11736 = OpLabel
      %12470 = OpBitwiseAnd %uint %11726 %uint_2047
      %12471 = OpShiftLeftLogical %uint %12470 %uint_19
      %12472 = OpBitwiseOr %uint %11733 %12471
      %12473 = OpULessThan %bool %11475 %uint_3
               OpSelectionMerge %12474 None
               OpBranchConditional %12473 %12475 %12476
      %12476 = OpLabel
      %12477 = OpISub %uint %11475 %uint_3
      %12478 = OpCompositeExtract %uint %10704 0
      %12479 = OpCompositeExtract %uint %10704 1
      %12480 = OpCompositeConstruct %v3uint %12478 %12479 %12477
               OpImageWrite %10705 %12480 %12472 None
               OpBranch %12474
      %12475 = OpLabel
      %12481 = OpIEqual %bool %11475 %uint_0
      %12482 = OpSelect %uint %12481 %12472 %11474
      %12483 = OpIEqual %bool %11475 %uint_1
      %12484 = OpSelect %uint %12483 %12472 %11473
      %12485 = OpIEqual %bool %11475 %uint_2
      %12486 = OpSelect %uint %12485 %12472 %uint_0
               OpBranch %12474
      %12474 = OpLabel
      %12487 = OpPhi %uint %uint_0 %12476 %12486 %12475
      %12488 = OpPhi %uint %11473 %12476 %12484 %12475
      %12489 = OpPhi %uint %11474 %12476 %12482 %12475
      %12490 = OpIAdd %uint %11475 %uint_1
               OpBranch %11735
      %11735 = OpLabel
      %12491 = OpPhi %uint %12465 %11739 %11726 %12474
      %12492 = OpPhi %uint %12466 %11739 %12487 %12474
      %12493 = OpPhi %uint %12467 %11739 %12488 %12474
      %12494 = OpPhi %uint %12468 %11739 %12489 %12474
      %12495 = OpPhi %uint %12469 %11739 %12490 %12474
               OpBranch %11491
      %11491 = OpLabel
      %12496 = OpPhi %uint %11720 %11494 %12491 %11735
      %12497 = OpPhi %uint %11721 %11494 %12492 %11735
      %12498 = OpPhi %uint %11722 %11494 %12493 %11735
      %12499 = OpPhi %uint %11723 %11494 %12494 %11735
      %12500 = OpPhi %uint %11724 %11494 %12495 %11735
               OpBranch %11487
      %11488 = OpLabel
      %12501 = OpVectorShuffle %v3float %10707 %458 0 1 2
      %12502 = OpFSub %float %8388 %float_0_5
      %12503 = OpFMul %float %12502 %float_0_00787401572
      %12504 = OpFMul %float %12502 %float_0_0158730168
      %12505 = OpCompositeConstruct %v3float %12503 %12503 %12504
      %12506 = OpExtInst %v3float %1 FClamp %12501 %102 %127
      %12507 = OpCompositeExtract %float %12506 0
               OpSelectionMerge %12508 None
               OpSwitch %uint_0 %12509
      %12509 = OpLabel
      %12510 = OpFOrdLessThan %bool %12507 %float_0_00313066994
               OpSelectionMerge %12511 None
               OpBranchConditional %12510 %12512 %12511
      %12512 = OpLabel
      %12513 = OpFMul %float %12507 %float_12_9200001
               OpBranch %12508
      %12511 = OpLabel
      %12514 = OpExtInst %float %1 Pow %12507 %float_0_416666657
      %12515 = OpExtInst %float %1 Fma %12514 %float_1_05499995 %float_n0_0549999997
               OpBranch %12508
      %12508 = OpLabel
      %12516 = OpPhi %float %12513 %12512 %12515 %12511
      %12517 = OpCompositeExtract %float %12506 1
               OpSelectionMerge %12518 None
               OpSwitch %uint_0 %12519
      %12519 = OpLabel
      %12520 = OpFOrdLessThan %bool %12517 %float_0_00313066994
               OpSelectionMerge %12521 None
               OpBranchConditional %12520 %12522 %12521
      %12522 = OpLabel
      %12523 = OpFMul %float %12517 %float_12_9200001
               OpBranch %12518
      %12521 = OpLabel
      %12524 = OpExtInst %float %1 Pow %12517 %float_0_416666657
      %12525 = OpExtInst %float %1 Fma %12524 %float_1_05499995 %float_n0_0549999997
               OpBranch %12518
      %12518 = OpLabel
      %12526 = OpPhi %float %12523 %12522 %12525 %12521
      %12527 = OpCompositeExtract %float %12506 2
               OpSelectionMerge %12528 None
               OpSwitch %uint_0 %12529
      %12529 = OpLabel
      %12530 = OpFOrdLessThan %bool %12527 %float_0_00313066994
               OpSelectionMerge %12531 None
               OpBranchConditional %12530 %12532 %12531
      %12532 = OpLabel
      %12533 = OpFMul %float %12527 %float_12_9200001
               OpBranch %12528
      %12531 = OpLabel
      %12534 = OpExtInst %float %1 Pow %12527 %float_0_416666657
      %12535 = OpExtInst %float %1 Fma %12534 %float_1_05499995 %float_n0_0549999997
               OpBranch %12528
      %12528 = OpLabel
      %12536 = OpPhi %float %12533 %12532 %12535 %12531
      %12537 = OpCompositeConstruct %v3float %12516 %12526 %12536
      %12538 = OpBitcast %v3uint %12537
      %12539 = OpBitwiseAnd %v3uint %12538 %349
      %12540 = OpExtInst %v3uint %1 UMin %12539 %501
      %12541 = OpConvertUToF %v3float %12540
      %12542 = OpExtInst %v3float %1 Fma %12505 %12541 %12537
      %12543 = OpExtInst %v3float %1 FClamp %12542 %102 %127
      %12544 = OpCompositeExtract %float %12543 0
      %12545 = OpFMul %float %12544 %float_127
      %12546 = OpConvertFToU %uint %12545
      %12547 = OpShiftLeftLogical %uint %12546 %uint_0
      %12548 = OpCompositeExtract %float %12543 1
      %12549 = OpFMul %float %12548 %float_127
      %12550 = OpConvertFToU %uint %12549
      %12551 = OpShiftLeftLogical %uint %12550 %uint_7
      %12552 = OpCompositeExtract %float %12543 2
      %12553 = OpFMul %float %12552 %float_63
      %12554 = OpConvertFToU %uint %12553
      %12555 = OpShiftLeftLogical %uint %12554 %uint_14
      %12556 = OpBitwiseOr %uint %12547 %12551
      %12557 = OpBitwiseOr %uint %12556 %12555
      %12558 = OpBitwiseAnd %uint %12557 %uint_4095
      %12559 = OpShiftRightLogical %uint %12557 %uint_12
      %12560 = OpBitwiseAnd %uint %12559 %uint_255
      %12561 = OpVectorShuffle %v3float %10717 %10717 0 1 2
      %12562 = OpExtInst %v3float %1 FClamp %12561 %102 %127
      %12563 = OpCompositeExtract %float %12562 0
               OpSelectionMerge %12564 None
               OpSwitch %uint_0 %12565
      %12565 = OpLabel
      %12566 = OpFOrdLessThan %bool %12563 %float_0_00313066994
               OpSelectionMerge %12567 None
               OpBranchConditional %12566 %12568 %12567
      %12568 = OpLabel
      %12569 = OpFMul %float %12563 %float_12_9200001
               OpBranch %12564
      %12567 = OpLabel
      %12570 = OpExtInst %float %1 Pow %12563 %float_0_416666657
      %12571 = OpExtInst %float %1 Fma %12570 %float_1_05499995 %float_n0_0549999997
               OpBranch %12564
      %12564 = OpLabel
      %12572 = OpPhi %float %12569 %12568 %12571 %12567
      %12573 = OpCompositeExtract %float %12562 1
               OpSelectionMerge %12574 None
               OpSwitch %uint_0 %12575
      %12575 = OpLabel
      %12576 = OpFOrdLessThan %bool %12573 %float_0_00313066994
               OpSelectionMerge %12577 None
               OpBranchConditional %12576 %12578 %12577
      %12578 = OpLabel
      %12579 = OpFMul %float %12573 %float_12_9200001
               OpBranch %12574
      %12577 = OpLabel
      %12580 = OpExtInst %float %1 Pow %12573 %float_0_416666657
      %12581 = OpExtInst %float %1 Fma %12580 %float_1_05499995 %float_n0_0549999997
               OpBranch %12574
      %12574 = OpLabel
      %12582 = OpPhi %float %12579 %12578 %12581 %12577
      %12583 = OpCompositeExtract %float %12562 2
               OpSelectionMerge %12584 None
               OpSwitch %uint_0 %12585
      %12585 = OpLabel
      %12586 = OpFOrdLessThan %bool %12583 %float_0_00313066994
               OpSelectionMerge %12587 None
               OpBranchConditional %12586 %12588 %12587
      %12588 = OpLabel
      %12589 = OpFMul %float %12583 %float_12_9200001
               OpBranch %12584
      %12587 = OpLabel
      %12590 = OpExtInst %float %1 Pow %12583 %float_0_416666657
      %12591 = OpExtInst %float %1 Fma %12590 %float_1_05499995 %float_n0_0549999997
               OpBranch %12584
      %12584 = OpLabel
      %12592 = OpPhi %float %12589 %12588 %12591 %12587
      %12593 = OpCompositeConstruct %v3float %12572 %12582 %12592
      %12594 = OpBitcast %v3uint %12593
      %12595 = OpBitwiseAnd %v3uint %12594 %349
      %12596 = OpExtInst %v3uint %1 UMin %12595 %501
      %12597 = OpConvertUToF %v3float %12596
      %12598 = OpExtInst %v3float %1 Fma %12505 %12597 %12593
      %12599 = OpExtInst %v3float %1 FClamp %12598 %102 %127
      %12600 = OpCompositeExtract %float %12599 0
      %12601 = OpFMul %float %12600 %float_127
      %12602 = OpConvertFToU %uint %12601
      %12603 = OpShiftLeftLogical %uint %12602 %uint_0
      %12604 = OpCompositeExtract %float %12599 1
      %12605 = OpFMul %float %12604 %float_127
      %12606 = OpConvertFToU %uint %12605
      %12607 = OpShiftLeftLogical %uint %12606 %uint_7
      %12608 = OpCompositeExtract %float %12599 2
      %12609 = OpFMul %float %12608 %float_63
      %12610 = OpConvertFToU %uint %12609
      %12611 = OpShiftLeftLogical %uint %12610 %uint_14
      %12612 = OpBitwiseOr %uint %12603 %12607
      %12613 = OpBitwiseOr %uint %12612 %12611
      %12614 = OpBitwiseAnd %uint %11410 %uint_65535
      %12615 = OpShiftLeftLogical %uint %12614 %uint_0
      %12616 = OpBitwiseOr %uint %uint_0 %12615
      %12617 = OpShiftLeftLogical %uint %12560 %uint_8
      %12618 = OpBitwiseOr %uint %12617 %uint_0
      %12619 = OpBitwiseAnd %uint %12616 %uint_65535
      %12620 = OpShiftLeftLogical %uint %12618 %uint_16
      %12621 = OpBitwiseOr %uint %12619 %12620
      %12622 = OpULessThan %bool %11475 %uint_3
               OpSelectionMerge %12623 None
               OpBranchConditional %12622 %12624 %12625
      %12625 = OpLabel
      %12626 = OpISub %uint %11475 %uint_3
      %12627 = OpCompositeExtract %uint %10704 0
      %12628 = OpCompositeExtract %uint %10704 1
      %12629 = OpCompositeConstruct %v3uint %12627 %12628 %12626
               OpImageWrite %10705 %12629 %12621 None
               OpBranch %12623
      %12624 = OpLabel
      %12630 = OpIEqual %bool %11475 %uint_0
      %12631 = OpSelect %uint %12630 %12621 %11474
      %12632 = OpIEqual %bool %11475 %uint_1
      %12633 = OpSelect %uint %12632 %12621 %11473
      %12634 = OpIEqual %bool %11475 %uint_2
      %12635 = OpSelect %uint %12634 %12621 %uint_0
               OpBranch %12623
      %12623 = OpLabel
      %12636 = OpPhi %uint %uint_0 %12625 %12635 %12624
      %12637 = OpPhi %uint %11473 %12625 %12633 %12624
      %12638 = OpPhi %uint %11474 %12625 %12631 %12624
      %12639 = OpIAdd %uint %11475 %uint_1
      %12640 = OpShiftLeftLogical %uint %12558 %uint_20
      %12641 = OpBitwiseOr %uint %12613 %12640
      %12642 = OpULessThan %bool %12639 %uint_3
               OpSelectionMerge %12643 None
               OpBranchConditional %12642 %12644 %12645
      %12645 = OpLabel
      %12646 = OpIAdd %uint %11475 %uint_4294967294
      %12647 = OpCompositeExtract %uint %10704 0
      %12648 = OpCompositeExtract %uint %10704 1
      %12649 = OpCompositeConstruct %v3uint %12647 %12648 %12646
               OpImageWrite %10705 %12649 %12641 None
               OpBranch %12643
      %12644 = OpLabel
      %12650 = OpIEqual %bool %12639 %uint_0
      %12651 = OpSelect %uint %12650 %12641 %12638
      %12652 = OpIEqual %bool %12639 %uint_1
      %12653 = OpSelect %uint %12652 %12641 %12637
      %12654 = OpIEqual %bool %12639 %uint_2
      %12655 = OpSelect %uint %12654 %12641 %12636
               OpBranch %12643
      %12643 = OpLabel
      %12656 = OpPhi %uint %12636 %12645 %12655 %12644
      %12657 = OpPhi %uint %12637 %12645 %12653 %12644
      %12658 = OpPhi %uint %12638 %12645 %12651 %12644
      %12659 = OpIAdd %uint %11475 %uint_2
               OpBranch %11487
      %11487 = OpLabel
      %12660 = OpPhi %uint %12496 %11491 %uint_0 %12643
      %12661 = OpPhi %uint %12497 %11491 %12656 %12643
      %12662 = OpPhi %uint %12498 %11491 %12657 %12643
      %12663 = OpPhi %uint %12499 %11491 %12658 %12643
      %12664 = OpPhi %uint %12500 %11491 %12659 %12643
      %12665 = OpLogicalNot %bool %11486
      %12666 = OpLogicalAnd %bool %12665 %11425
      %12667 = OpIEqual %bool %10952 %uint_0
      %12668 = OpLogicalAnd %bool %12666 %12667
               OpSelectionMerge %12669 None
               OpBranchConditional %12668 %12670 %12669
      %12670 = OpLabel
      %12671 = OpShiftRightLogical %uint %12660 %uint_11
      %12672 = OpBitwiseAnd %uint %12671 %uint_7
               OpSelectionMerge %12673 None
               OpSwitch %12672 %12673 0 %12674 3 %12675 5 %12676
      %12676 = OpLabel
               OpSelectionMerge %12677 None
               OpBranchConditional %true %12678 %12677
      %12678 = OpLabel
      %12679 = OpExtInst %v2float %1 FAbs %561
      %12680 = OpFSub %v2float %313 %12679
      %12681 = OpVectorShuffle %v3float %458 %12680 4 5 2
               OpBranch %12677
      %12677 = OpLabel
      %12682 = OpPhi %v3float %555 %12676 %12681 %12678
      %12683 = OpVectorShuffle %v2float %12682 %12682 0 1
               OpSelectionMerge %12684 None
               OpBranchConditional %true %12685 %12684
      %12685 = OpLabel
      %12686 = OpExtInst %v2float %1 FAbs %561
      %12687 = OpFSub %v2float %313 %12686
      %12688 = OpVectorShuffle %v3float %458 %12687 4 5 2
               OpBranch %12684
      %12684 = OpLabel
      %12689 = OpPhi %v3float %555 %12677 %12688 %12685
      %12690 = OpVectorShuffle %v2float %12689 %12689 0 1
      %12691 = OpVectorShuffle %v3float %10707 %458 0 1 2
      %12692 = OpExtInst %v3float %1 FClamp %12691 %102 %127
      %12693 = OpCompositeExtract %float %12692 0
               OpSelectionMerge %12694 None
               OpSwitch %uint_0 %12695
      %12695 = OpLabel
      %12696 = OpFOrdLessThan %bool %12693 %float_0_00313066994
               OpSelectionMerge %12697 None
               OpBranchConditional %12696 %12698 %12697
      %12698 = OpLabel
      %12699 = OpFMul %float %12693 %float_12_9200001
               OpBranch %12694
      %12697 = OpLabel
      %12700 = OpExtInst %float %1 Pow %12693 %float_0_416666657
      %12701 = OpExtInst %float %1 Fma %12700 %float_1_05499995 %float_n0_0549999997
               OpBranch %12694
      %12694 = OpLabel
      %12702 = OpPhi %float %12699 %12698 %12701 %12697
      %12703 = OpCompositeExtract %float %12692 1
               OpSelectionMerge %12704 None
               OpSwitch %uint_0 %12705
      %12705 = OpLabel
      %12706 = OpFOrdLessThan %bool %12703 %float_0_00313066994
               OpSelectionMerge %12707 None
               OpBranchConditional %12706 %12708 %12707
      %12708 = OpLabel
      %12709 = OpFMul %float %12703 %float_12_9200001
               OpBranch %12704
      %12707 = OpLabel
      %12710 = OpExtInst %float %1 Pow %12703 %float_0_416666657
      %12711 = OpExtInst %float %1 Fma %12710 %float_1_05499995 %float_n0_0549999997
               OpBranch %12704
      %12704 = OpLabel
      %12712 = OpPhi %float %12709 %12708 %12711 %12707
      %12713 = OpCompositeExtract %float %12692 2
               OpSelectionMerge %12714 None
               OpSwitch %uint_0 %12715
      %12715 = OpLabel
      %12716 = OpFOrdLessThan %bool %12713 %float_0_00313066994
               OpSelectionMerge %12717 None
               OpBranchConditional %12716 %12718 %12717
      %12718 = OpLabel
      %12719 = OpFMul %float %12713 %float_12_9200001
               OpBranch %12714
      %12717 = OpLabel
      %12720 = OpExtInst %float %1 Pow %12713 %float_0_416666657
      %12721 = OpExtInst %float %1 Fma %12720 %float_1_05499995 %float_n0_0549999997
               OpBranch %12714
      %12714 = OpLabel
      %12722 = OpPhi %float %12719 %12718 %12721 %12717
      %12723 = OpExtInst %float %1 FClamp %12702 %float_0 %float_1
      %12724 = OpFMul %float %12723 %float_255
      %12725 = OpConvertFToU %uint %12724
      %12726 = OpShiftLeftLogical %uint %12725 %uint_0
      %12727 = OpExtInst %float %1 FClamp %12712 %float_0 %float_1
      %12728 = OpFMul %float %12727 %float_255
      %12729 = OpConvertFToU %uint %12728
      %12730 = OpShiftLeftLogical %uint %12729 %uint_8
      %12731 = OpExtInst %float %1 FClamp %12722 %float_0 %float_1
      %12732 = OpFMul %float %12731 %float_255
      %12733 = OpConvertFToU %uint %12732
      %12734 = OpShiftLeftLogical %uint %12733 %uint_16
      %12735 = OpBitwiseOr %uint %12726 %12730
      %12736 = OpBitwiseOr %uint %12735 %12734
      %12737 = OpBitwiseOr %uint %12736 %uint_0
      %12738 = OpULessThan %bool %12664 %uint_3
               OpSelectionMerge %12739 None
               OpBranchConditional %12738 %12740 %12741
      %12741 = OpLabel
      %12742 = OpISub %uint %12664 %uint_3
      %12743 = OpCompositeExtract %uint %10704 0
      %12744 = OpCompositeExtract %uint %10704 1
      %12745 = OpCompositeConstruct %v3uint %12743 %12744 %12742
               OpImageWrite %10705 %12745 %12737 None
               OpBranch %12739
      %12740 = OpLabel
      %12746 = OpIEqual %bool %12664 %uint_0
      %12747 = OpSelect %uint %12746 %12737 %12663
      %12748 = OpIEqual %bool %12664 %uint_1
      %12749 = OpSelect %uint %12748 %12737 %12662
      %12750 = OpIEqual %bool %12664 %uint_2
      %12751 = OpSelect %uint %12750 %12737 %12661
               OpBranch %12739
      %12739 = OpLabel
      %12752 = OpPhi %uint %12661 %12741 %12751 %12740
      %12753 = OpPhi %uint %12662 %12741 %12749 %12740
      %12754 = OpPhi %uint %12663 %12741 %12747 %12740
      %12755 = OpIAdd %uint %12664 %uint_1
      %12756 = OpVectorTimesScalar %v2float %12683 %float_0_5
      %12757 = OpFAdd %v2float %12756 %149
      %12758 = OpVectorTimesScalar %v2float %12690 %float_0_5
      %12759 = OpFAdd %v2float %12758 %149
      %12760 = OpCompositeExtract %float %12757 0
      %12761 = OpCompositeExtract %float %12757 1
      %12762 = OpCompositeExtract %float %12759 0
      %12763 = OpCompositeExtract %float %12759 1
      %12764 = OpExtInst %float %1 FClamp %12760 %float_0 %float_1
      %12765 = OpFMul %float %12764 %float_255
      %12766 = OpConvertFToU %uint %12765
      %12767 = OpShiftLeftLogical %uint %12766 %uint_0
      %12768 = OpExtInst %float %1 FClamp %12761 %float_0 %float_1
      %12769 = OpFMul %float %12768 %float_255
      %12770 = OpConvertFToU %uint %12769
      %12771 = OpShiftLeftLogical %uint %12770 %uint_8
      %12772 = OpExtInst %float %1 FClamp %12762 %float_0 %float_1
      %12773 = OpFMul %float %12772 %float_255
      %12774 = OpConvertFToU %uint %12773
      %12775 = OpShiftLeftLogical %uint %12774 %uint_16
      %12776 = OpExtInst %float %1 FClamp %12763 %float_0 %float_1
      %12777 = OpFMul %float %12776 %float_255
      %12778 = OpConvertFToU %uint %12777
      %12779 = OpShiftLeftLogical %uint %12778 %uint_24
      %12780 = OpBitwiseOr %uint %12767 %12771
      %12781 = OpBitwiseOr %uint %12780 %12775
      %12782 = OpBitwiseOr %uint %12781 %12779
      %12783 = OpULessThan %bool %12755 %uint_3
               OpSelectionMerge %12784 None
               OpBranchConditional %12783 %12785 %12786
      %12786 = OpLabel
      %12787 = OpIAdd %uint %12664 %uint_4294967294
      %12788 = OpCompositeExtract %uint %10704 0
      %12789 = OpCompositeExtract %uint %10704 1
      %12790 = OpCompositeConstruct %v3uint %12788 %12789 %12787
               OpImageWrite %10705 %12790 %12782 None
               OpBranch %12784
      %12785 = OpLabel
      %12791 = OpIEqual %bool %12755 %uint_0
      %12792 = OpSelect %uint %12791 %12782 %12754
      %12793 = OpIEqual %bool %12755 %uint_1
      %12794 = OpSelect %uint %12793 %12782 %12753
      %12795 = OpIEqual %bool %12755 %uint_2
      %12796 = OpSelect %uint %12795 %12782 %12752
               OpBranch %12784
      %12784 = OpLabel
      %12797 = OpPhi %uint %12752 %12786 %12796 %12785
      %12798 = OpPhi %uint %12753 %12786 %12794 %12785
      %12799 = OpPhi %uint %12754 %12786 %12792 %12785
      %12800 = OpShiftRightLogical %uint %12660 %uint_2
      %12801 = OpBitwiseAnd %uint %12800 %uint_7
      %12802 = OpIEqual %bool %12801 %uint_3
               OpSelectionMerge %12803 None
               OpBranchConditional %12802 %12804 %12803
      %12804 = OpLabel
      %12805 = OpBitwiseAnd %uint %10953 %uint_4294967292
      %12806 = OpBitwiseOr %uint %12805 %uint_3
      %12807 = OpExtInst %float %1 Fma %10714 %float_255 %float_0_5
      %12808 = OpConvertFToU %uint %12807
      %12809 = OpBitwiseAnd %uint %12806 %uint_3
      %12810 = OpShiftLeftLogical %uint %12808 %uint_24
      %12811 = OpBitwiseOr %uint %12809 %12810
      %12812 = OpBitwiseOr %uint %12811 %uint_16711680
      %12813 = OpCompositeExtract %float %10707 0
      %12814 = OpCompositeExtract %float %10707 1
      %12815 = OpCompositeExtract %float %10707 2
      %12816 = OpCompositeConstruct %v4float %12813 %12814 %12815 %float_0
      %12817 = OpVectorShuffle %v3float %12816 %12816 0 1 2
      %12818 = OpExtInst %v3float %1 FClamp %12817 %102 %127
      %12819 = OpCompositeExtract %float %12818 0
               OpSelectionMerge %12820 None
               OpSwitch %uint_0 %12821
      %12821 = OpLabel
      %12822 = OpFOrdLessThan %bool %12819 %float_0_00313066994
               OpSelectionMerge %12823 None
               OpBranchConditional %12822 %12824 %12823
      %12824 = OpLabel
      %12825 = OpFMul %float %12819 %float_12_9200001
               OpBranch %12820
      %12823 = OpLabel
      %12826 = OpExtInst %float %1 Pow %12819 %float_0_416666657
      %12827 = OpExtInst %float %1 Fma %12826 %float_1_05499995 %float_n0_0549999997
               OpBranch %12820
      %12820 = OpLabel
      %12828 = OpPhi %float %12825 %12824 %12827 %12823
      %12829 = OpCompositeExtract %float %12818 1
               OpSelectionMerge %12830 None
               OpSwitch %uint_0 %12831
      %12831 = OpLabel
      %12832 = OpFOrdLessThan %bool %12829 %float_0_00313066994
               OpSelectionMerge %12833 None
               OpBranchConditional %12832 %12834 %12833
      %12834 = OpLabel
      %12835 = OpFMul %float %12829 %float_12_9200001
               OpBranch %12830
      %12833 = OpLabel
      %12836 = OpExtInst %float %1 Pow %12829 %float_0_416666657
      %12837 = OpExtInst %float %1 Fma %12836 %float_1_05499995 %float_n0_0549999997
               OpBranch %12830
      %12830 = OpLabel
      %12838 = OpPhi %float %12835 %12834 %12837 %12833
      %12839 = OpCompositeExtract %float %12818 2
               OpSelectionMerge %12840 None
               OpSwitch %uint_0 %12841
      %12841 = OpLabel
      %12842 = OpFOrdLessThan %bool %12839 %float_0_00313066994
               OpSelectionMerge %12843 None
               OpBranchConditional %12842 %12844 %12843
      %12844 = OpLabel
      %12845 = OpFMul %float %12839 %float_12_9200001
               OpBranch %12840
      %12843 = OpLabel
      %12846 = OpExtInst %float %1 Pow %12839 %float_0_416666657
      %12847 = OpExtInst %float %1 Fma %12846 %float_1_05499995 %float_n0_0549999997
               OpBranch %12840
      %12840 = OpLabel
      %12848 = OpPhi %float %12845 %12844 %12847 %12843
      %12849 = OpExtInst %float %1 FClamp %12828 %float_0 %float_1
      %12850 = OpFMul %float %12849 %float_255
      %12851 = OpConvertFToU %uint %12850
      %12852 = OpShiftLeftLogical %uint %12851 %uint_0
      %12853 = OpExtInst %float %1 FClamp %12838 %float_0 %float_1
      %12854 = OpFMul %float %12853 %float_255
      %12855 = OpConvertFToU %uint %12854
      %12856 = OpShiftLeftLogical %uint %12855 %uint_8
      %12857 = OpExtInst %float %1 FClamp %12848 %float_0 %float_1
      %12858 = OpFMul %float %12857 %float_255
      %12859 = OpConvertFToU %uint %12858
      %12860 = OpShiftLeftLogical %uint %12859 %uint_16
      %12861 = OpBitwiseOr %uint %12852 %12856
      %12862 = OpBitwiseOr %uint %12861 %12860
      %12863 = OpBitwiseOr %uint %12862 %uint_0
               OpBranch %12803
      %12803 = OpLabel
      %12864 = OpPhi %uint %457 %12784 %12863 %12840
      %12865 = OpPhi %uint %10953 %12784 %12812 %12840
               OpBranch %12673
      %12675 = OpLabel
      %12866 = OpCompositeExtract %float %10707 0
      %12867 = OpCompositeExtract %float %10707 1
      %12868 = OpCompositeExtract %float %10707 2
      %12869 = OpCompositeConstruct %v4float %12866 %12867 %12868 %float_0
      %12870 = OpVectorShuffle %v3float %12869 %12869 0 1 2
      %12871 = OpExtInst %v3float %1 FClamp %12870 %102 %127
      %12872 = OpCompositeExtract %float %12871 0
               OpSelectionMerge %12873 None
               OpSwitch %uint_0 %12874
      %12874 = OpLabel
      %12875 = OpFOrdLessThan %bool %12872 %float_0_00313066994
               OpSelectionMerge %12876 None
               OpBranchConditional %12875 %12877 %12876
      %12877 = OpLabel
      %12878 = OpFMul %float %12872 %float_12_9200001
               OpBranch %12873
      %12876 = OpLabel
      %12879 = OpExtInst %float %1 Pow %12872 %float_0_416666657
      %12880 = OpExtInst %float %1 Fma %12879 %float_1_05499995 %float_n0_0549999997
               OpBranch %12873
      %12873 = OpLabel
      %12881 = OpPhi %float %12878 %12877 %12880 %12876
      %12882 = OpCompositeExtract %float %12871 1
               OpSelectionMerge %12883 None
               OpSwitch %uint_0 %12884
      %12884 = OpLabel
      %12885 = OpFOrdLessThan %bool %12882 %float_0_00313066994
               OpSelectionMerge %12886 None
               OpBranchConditional %12885 %12887 %12886
      %12887 = OpLabel
      %12888 = OpFMul %float %12882 %float_12_9200001
               OpBranch %12883
      %12886 = OpLabel
      %12889 = OpExtInst %float %1 Pow %12882 %float_0_416666657
      %12890 = OpExtInst %float %1 Fma %12889 %float_1_05499995 %float_n0_0549999997
               OpBranch %12883
      %12883 = OpLabel
      %12891 = OpPhi %float %12888 %12887 %12890 %12886
      %12892 = OpCompositeExtract %float %12871 2
               OpSelectionMerge %12893 None
               OpSwitch %uint_0 %12894
      %12894 = OpLabel
      %12895 = OpFOrdLessThan %bool %12892 %float_0_00313066994
               OpSelectionMerge %12896 None
               OpBranchConditional %12895 %12897 %12896
      %12897 = OpLabel
      %12898 = OpFMul %float %12892 %float_12_9200001
               OpBranch %12893
      %12896 = OpLabel
      %12899 = OpExtInst %float %1 Pow %12892 %float_0_416666657
      %12900 = OpExtInst %float %1 Fma %12899 %float_1_05499995 %float_n0_0549999997
               OpBranch %12893
      %12893 = OpLabel
      %12901 = OpPhi %float %12898 %12897 %12900 %12896
      %12902 = OpExtInst %float %1 FClamp %12881 %float_0 %float_1
      %12903 = OpFMul %float %12902 %float_255
      %12904 = OpConvertFToU %uint %12903
      %12905 = OpShiftLeftLogical %uint %12904 %uint_0
      %12906 = OpExtInst %float %1 FClamp %12891 %float_0 %float_1
      %12907 = OpFMul %float %12906 %float_255
      %12908 = OpConvertFToU %uint %12907
      %12909 = OpShiftLeftLogical %uint %12908 %uint_8
      %12910 = OpExtInst %float %1 FClamp %12901 %float_0 %float_1
      %12911 = OpFMul %float %12910 %float_255
      %12912 = OpConvertFToU %uint %12911
      %12913 = OpShiftLeftLogical %uint %12912 %uint_16
      %12914 = OpBitwiseOr %uint %12905 %12909
      %12915 = OpBitwiseOr %uint %12914 %12913
      %12916 = OpBitwiseOr %uint %12915 %uint_0
      %12917 = OpULessThan %bool %12664 %uint_3
               OpSelectionMerge %12918 None
               OpBranchConditional %12917 %12919 %12920
      %12920 = OpLabel
      %12921 = OpISub %uint %12664 %uint_3
      %12922 = OpCompositeExtract %uint %10704 0
      %12923 = OpCompositeExtract %uint %10704 1
      %12924 = OpCompositeConstruct %v3uint %12922 %12923 %12921
               OpImageWrite %10705 %12924 %12916 None
               OpBranch %12918
      %12919 = OpLabel
      %12925 = OpIEqual %bool %12664 %uint_0
      %12926 = OpSelect %uint %12925 %12916 %12663
      %12927 = OpIEqual %bool %12664 %uint_1
      %12928 = OpSelect %uint %12927 %12916 %12662
      %12929 = OpIEqual %bool %12664 %uint_2
      %12930 = OpSelect %uint %12929 %12916 %12661
               OpBranch %12918
      %12918 = OpLabel
      %12931 = OpPhi %uint %12661 %12920 %12930 %12919
      %12932 = OpPhi %uint %12662 %12920 %12928 %12919
      %12933 = OpPhi %uint %12663 %12920 %12926 %12919
      %12934 = OpIAdd %uint %12664 %uint_1
      %12935 = OpExtInst %float %1 FClamp %10710 %float_0 %float_1
      %12936 = OpFMul %float %12935 %float_255
      %12937 = OpConvertFToU %uint %12936
      %12938 = OpShiftLeftLogical %uint %12937 %uint_8
      %12939 = OpExtInst %float %1 FClamp %10714 %float_0 %float_1
      %12940 = OpFMul %float %12939 %float_255
      %12941 = OpConvertFToU %uint %12940
      %12942 = OpShiftLeftLogical %uint %12941 %uint_16
      %12943 = OpExtInst %float %1 FClamp %10716 %float_0 %float_1
      %12944 = OpFMul %float %12943 %float_255
      %12945 = OpConvertFToU %uint %12944
      %12946 = OpShiftLeftLogical %uint %12945 %uint_24
      %12947 = OpBitwiseOr %uint %uint_0 %12938
      %12948 = OpBitwiseOr %uint %12947 %12942
      %12949 = OpBitwiseOr %uint %12948 %12946
      %12950 = OpULessThan %bool %12934 %uint_3
               OpSelectionMerge %12951 None
               OpBranchConditional %12950 %12952 %12953
      %12953 = OpLabel
      %12954 = OpIAdd %uint %12664 %uint_4294967294
      %12955 = OpCompositeExtract %uint %10704 0
      %12956 = OpCompositeExtract %uint %10704 1
      %12957 = OpCompositeConstruct %v3uint %12955 %12956 %12954
               OpImageWrite %10705 %12957 %12949 None
               OpBranch %12951
      %12952 = OpLabel
      %12958 = OpIEqual %bool %12934 %uint_0
      %12959 = OpSelect %uint %12958 %12949 %12933
      %12960 = OpIEqual %bool %12934 %uint_1
      %12961 = OpSelect %uint %12960 %12949 %12932
      %12962 = OpIEqual %bool %12934 %uint_2
      %12963 = OpSelect %uint %12962 %12949 %12931
               OpBranch %12951
      %12951 = OpLabel
      %12964 = OpPhi %uint %12931 %12953 %12963 %12952
      %12965 = OpPhi %uint %12932 %12953 %12961 %12952
      %12966 = OpPhi %uint %12933 %12953 %12959 %12952
               OpBranch %12673
      %12674 = OpLabel
      %12967 = OpVectorShuffle %v3float %10707 %458 0 1 2
      %12968 = OpFSub %float %8388 %float_0_5
      %12969 = OpFMul %float %12968 %float_0_00787401572
      %12970 = OpFMul %float %12968 %float_0_0158730168
      %12971 = OpCompositeConstruct %v3float %12969 %12969 %12970
      %12972 = OpExtInst %v3float %1 FClamp %12967 %102 %127
      %12973 = OpCompositeExtract %float %12972 0
               OpSelectionMerge %12974 None
               OpSwitch %uint_0 %12975
      %12975 = OpLabel
      %12976 = OpFOrdLessThan %bool %12973 %float_0_00313066994
               OpSelectionMerge %12977 None
               OpBranchConditional %12976 %12978 %12977
      %12978 = OpLabel
      %12979 = OpFMul %float %12973 %float_12_9200001
               OpBranch %12974
      %12977 = OpLabel
      %12980 = OpExtInst %float %1 Pow %12973 %float_0_416666657
      %12981 = OpExtInst %float %1 Fma %12980 %float_1_05499995 %float_n0_0549999997
               OpBranch %12974
      %12974 = OpLabel
      %12982 = OpPhi %float %12979 %12978 %12981 %12977
      %12983 = OpCompositeExtract %float %12972 1
               OpSelectionMerge %12984 None
               OpSwitch %uint_0 %12985
      %12985 = OpLabel
      %12986 = OpFOrdLessThan %bool %12983 %float_0_00313066994
               OpSelectionMerge %12987 None
               OpBranchConditional %12986 %12988 %12987
      %12988 = OpLabel
      %12989 = OpFMul %float %12983 %float_12_9200001
               OpBranch %12984
      %12987 = OpLabel
      %12990 = OpExtInst %float %1 Pow %12983 %float_0_416666657
      %12991 = OpExtInst %float %1 Fma %12990 %float_1_05499995 %float_n0_0549999997
               OpBranch %12984
      %12984 = OpLabel
      %12992 = OpPhi %float %12989 %12988 %12991 %12987
      %12993 = OpCompositeExtract %float %12972 2
               OpSelectionMerge %12994 None
               OpSwitch %uint_0 %12995
      %12995 = OpLabel
      %12996 = OpFOrdLessThan %bool %12993 %float_0_00313066994
               OpSelectionMerge %12997 None
               OpBranchConditional %12996 %12998 %12997
      %12998 = OpLabel
      %12999 = OpFMul %float %12993 %float_12_9200001
               OpBranch %12994
      %12997 = OpLabel
      %13000 = OpExtInst %float %1 Pow %12993 %float_0_416666657
      %13001 = OpExtInst %float %1 Fma %13000 %float_1_05499995 %float_n0_0549999997
               OpBranch %12994
      %12994 = OpLabel
      %13002 = OpPhi %float %12999 %12998 %13001 %12997
      %13003 = OpCompositeConstruct %v3float %12982 %12992 %13002
      %13004 = OpBitcast %v3uint %13003
      %13005 = OpBitwiseAnd %v3uint %13004 %349
      %13006 = OpExtInst %v3uint %1 UMin %13005 %501
      %13007 = OpConvertUToF %v3float %13006
      %13008 = OpExtInst %v3float %1 Fma %12971 %13007 %13003
      %13009 = OpExtInst %v3float %1 FClamp %13008 %102 %127
      %13010 = OpCompositeExtract %float %13009 0
      %13011 = OpFMul %float %13010 %float_127
      %13012 = OpConvertFToU %uint %13011
      %13013 = OpShiftLeftLogical %uint %13012 %uint_0
      %13014 = OpCompositeExtract %float %13009 1
      %13015 = OpFMul %float %13014 %float_127
      %13016 = OpConvertFToU %uint %13015
      %13017 = OpShiftLeftLogical %uint %13016 %uint_7
      %13018 = OpCompositeExtract %float %13009 2
      %13019 = OpFMul %float %13018 %float_63
      %13020 = OpConvertFToU %uint %13019
      %13021 = OpShiftLeftLogical %uint %13020 %uint_14
      %13022 = OpBitwiseOr %uint %13013 %13017
      %13023 = OpBitwiseOr %uint %13022 %13021
      %13024 = OpVectorShuffle %v3float %10717 %10717 0 1 2
      %13025 = OpExtInst %v3float %1 FClamp %13024 %102 %127
      %13026 = OpCompositeExtract %float %13025 0
               OpSelectionMerge %13027 None
               OpSwitch %uint_0 %13028
      %13028 = OpLabel
      %13029 = OpFOrdLessThan %bool %13026 %float_0_00313066994
               OpSelectionMerge %13030 None
               OpBranchConditional %13029 %13031 %13030
      %13031 = OpLabel
      %13032 = OpFMul %float %13026 %float_12_9200001
               OpBranch %13027
      %13030 = OpLabel
      %13033 = OpExtInst %float %1 Pow %13026 %float_0_416666657
      %13034 = OpExtInst %float %1 Fma %13033 %float_1_05499995 %float_n0_0549999997
               OpBranch %13027
      %13027 = OpLabel
      %13035 = OpPhi %float %13032 %13031 %13034 %13030
      %13036 = OpCompositeExtract %float %13025 1
               OpSelectionMerge %13037 None
               OpSwitch %uint_0 %13038
      %13038 = OpLabel
      %13039 = OpFOrdLessThan %bool %13036 %float_0_00313066994
               OpSelectionMerge %13040 None
               OpBranchConditional %13039 %13041 %13040
      %13041 = OpLabel
      %13042 = OpFMul %float %13036 %float_12_9200001
               OpBranch %13037
      %13040 = OpLabel
      %13043 = OpExtInst %float %1 Pow %13036 %float_0_416666657
      %13044 = OpExtInst %float %1 Fma %13043 %float_1_05499995 %float_n0_0549999997
               OpBranch %13037
      %13037 = OpLabel
      %13045 = OpPhi %float %13042 %13041 %13044 %13040
      %13046 = OpCompositeExtract %float %13025 2
               OpSelectionMerge %13047 None
               OpSwitch %uint_0 %13048
      %13048 = OpLabel
      %13049 = OpFOrdLessThan %bool %13046 %float_0_00313066994
               OpSelectionMerge %13050 None
               OpBranchConditional %13049 %13051 %13050
      %13051 = OpLabel
      %13052 = OpFMul %float %13046 %float_12_9200001
               OpBranch %13047
      %13050 = OpLabel
      %13053 = OpExtInst %float %1 Pow %13046 %float_0_416666657
      %13054 = OpExtInst %float %1 Fma %13053 %float_1_05499995 %float_n0_0549999997
               OpBranch %13047
      %13047 = OpLabel
      %13055 = OpPhi %float %13052 %13051 %13054 %13050
      %13056 = OpCompositeConstruct %v3float %13035 %13045 %13055
      %13057 = OpBitcast %v3uint %13056
      %13058 = OpBitwiseAnd %v3uint %13057 %349
      %13059 = OpExtInst %v3uint %1 UMin %13058 %501
      %13060 = OpConvertUToF %v3float %13059
      %13061 = OpExtInst %v3float %1 Fma %12971 %13060 %13056
      %13062 = OpExtInst %v3float %1 FClamp %13061 %102 %127
      %13063 = OpCompositeExtract %float %13062 0
      %13064 = OpFMul %float %13063 %float_127
      %13065 = OpConvertFToU %uint %13064
      %13066 = OpShiftLeftLogical %uint %13065 %uint_0
      %13067 = OpCompositeExtract %float %13062 1
      %13068 = OpFMul %float %13067 %float_127
      %13069 = OpConvertFToU %uint %13068
      %13070 = OpShiftLeftLogical %uint %13069 %uint_7
      %13071 = OpCompositeExtract %float %13062 2
      %13072 = OpFMul %float %13071 %float_63
      %13073 = OpConvertFToU %uint %13072
      %13074 = OpShiftLeftLogical %uint %13073 %uint_14
      %13075 = OpBitwiseOr %uint %13066 %13070
      %13076 = OpBitwiseOr %uint %13075 %13074
      %13077 = OpShiftLeftLogical %uint %13023 %uint_12
      %13078 = OpBitwiseAnd %uint %13077 %uint_4294963200
      %13079 = OpBitwiseAnd %uint %13076 %uint_4095
      %13080 = OpBitwiseOr %uint %13078 %13079
      %13081 = OpShiftRightLogical %uint %13076 %uint_12
      %13082 = OpBitwiseAnd %uint %13081 %uint_255
      %13083 = OpULessThan %bool %12664 %uint_3
               OpSelectionMerge %13084 None
               OpBranchConditional %13083 %13085 %13086
      %13086 = OpLabel
      %13087 = OpISub %uint %12664 %uint_3
      %13088 = OpCompositeExtract %uint %10704 0
      %13089 = OpCompositeExtract %uint %10704 1
      %13090 = OpCompositeConstruct %v3uint %13088 %13089 %13087
               OpImageWrite %10705 %13090 %13080 None
               OpBranch %13084
      %13085 = OpLabel
      %13091 = OpIEqual %bool %12664 %uint_0
      %13092 = OpSelect %uint %13091 %13080 %12663
      %13093 = OpIEqual %bool %12664 %uint_1
      %13094 = OpSelect %uint %13093 %13080 %12662
      %13095 = OpIEqual %bool %12664 %uint_2
      %13096 = OpSelect %uint %13095 %13080 %12661
               OpBranch %13084
      %13084 = OpLabel
      %13097 = OpPhi %uint %12661 %13086 %13096 %13085
      %13098 = OpPhi %uint %12662 %13086 %13094 %13085
      %13099 = OpPhi %uint %12663 %13086 %13092 %13085
      %13100 = OpIAdd %uint %12664 %uint_1
      %13101 = OpFAdd %float %10716 %float_1
      %13102 = OpFMul %float %13101 %float_0_5
      %13103 = OpExtInst %float %1 FClamp %13102 %float_0 %float_1
      %13104 = OpFMul %float %13103 %float_255
      %13105 = OpConvertFToU %uint %13104
      %13106 = OpShiftLeftLogical %uint %13105 %uint_16
      %13107 = OpBitwiseOr %uint %uint_0 %13106
      %13108 = OpBitwiseOr %uint %13107 %uint_2130706432
      %13109 = OpBitwiseOr %uint %13082 %13108
      %13110 = OpULessThan %bool %13100 %uint_3
               OpSelectionMerge %13111 None
               OpBranchConditional %13110 %13112 %13113
      %13113 = OpLabel
      %13114 = OpIAdd %uint %12664 %uint_4294967294
      %13115 = OpCompositeExtract %uint %10704 0
      %13116 = OpCompositeExtract %uint %10704 1
      %13117 = OpCompositeConstruct %v3uint %13115 %13116 %13114
               OpImageWrite %10705 %13117 %13109 None
               OpBranch %13111
      %13112 = OpLabel
      %13118 = OpIEqual %bool %13100 %uint_0
      %13119 = OpSelect %uint %13118 %13109 %13099
      %13120 = OpIEqual %bool %13100 %uint_1
      %13121 = OpSelect %uint %13120 %13109 %13098
      %13122 = OpIEqual %bool %13100 %uint_2
      %13123 = OpSelect %uint %13122 %13109 %13097
               OpBranch %13111
      %13111 = OpLabel
      %13124 = OpPhi %uint %13097 %13113 %13123 %13112
      %13125 = OpPhi %uint %13098 %13113 %13121 %13112
      %13126 = OpPhi %uint %13099 %13113 %13119 %13112
      %13127 = OpIAdd %uint %12664 %uint_2
      %13128 = OpShiftRightLogical %uint %12660 %uint_7
      %13129 = OpBitwiseAnd %uint %13128 %uint_1
      %13130 = OpINotEqual %bool %13129 %uint_0
      %13131 = OpShiftRightLogical %uint %12660 %uint_6
      %13132 = OpBitwiseAnd %uint %13131 %uint_1
      %13133 = OpINotEqual %bool %13132 %uint_0
      %13134 = OpLogicalOr %bool %13130 %13133
               OpSelectionMerge %13135 None
               OpBranchConditional %13134 %13136 %13135
      %13136 = OpLabel
      %13137 = OpExtInst %float %1 NMax %float_0 %float_0
      %13138 = OpExtInst %float %1 NMax %float_0 %13137
      %13139 = OpFOrdGreaterThan %bool %13138 %float_0
      %13140 = OpCompositeConstruct %v3bool %13139 %13139 %13139
      %13141 = OpSelect %v3float %13140 %102 %127
      %13142 = OpDot %float %13141 %337
      %13143 = OpDot %float %13141 %338
      %13144 = OpCompositeConstruct %v3float %550 %13142 %13143
      %13145 = OpExtInst %v3float %1 Fma %13144 %322 %323
      %13146 = OpCompositeExtract %float %13145 1
      %13147 = OpCompositeExtract %float %13145 2
      %13148 = OpExtInst %float %1 FClamp %13146 %float_0 %float_1
      %13149 = OpFMul %float %13148 %float_255
      %13150 = OpConvertFToU %uint %13149
      %13151 = OpShiftLeftLogical %uint %13150 %uint_0
      %13152 = OpExtInst %float %1 FClamp %13147 %float_0 %float_1
      %13153 = OpFMul %float %13152 %float_255
      %13154 = OpConvertFToU %uint %13153
      %13155 = OpShiftLeftLogical %uint %13154 %uint_8
      %13156 = OpBitwiseOr %uint %13151 %13155
      %13157 = OpBitwiseOr %uint %13156 %uint_0
      %13158 = OpBitwiseOr %uint %13157 %uint_0
      %13159 = OpBitwiseOr %uint %uint_0 %13158
      %13160 = OpULessThan %bool %13127 %uint_3
               OpSelectionMerge %13161 None
               OpBranchConditional %13160 %13162 %13163
      %13163 = OpLabel
      %13164 = OpIAdd %uint %12664 %uint_4294967295
      %13165 = OpCompositeExtract %uint %10704 0
      %13166 = OpCompositeExtract %uint %10704 1
      %13167 = OpCompositeConstruct %v3uint %13165 %13166 %13164
               OpImageWrite %10705 %13167 %13159 None
               OpBranch %13161
      %13162 = OpLabel
      %13168 = OpIEqual %bool %13127 %uint_0
      %13169 = OpSelect %uint %13168 %13159 %13126
      %13170 = OpIEqual %bool %13127 %uint_1
      %13171 = OpSelect %uint %13170 %13159 %13125
      %13172 = OpIEqual %bool %13127 %uint_2
      %13173 = OpSelect %uint %13172 %13159 %13124
               OpBranch %13161
      %13161 = OpLabel
      %13174 = OpPhi %uint %13124 %13163 %13173 %13162
      %13175 = OpPhi %uint %13125 %13163 %13171 %13162
      %13176 = OpPhi %uint %13126 %13163 %13169 %13162
      %13177 = OpIAdd %uint %12664 %uint_3
               OpBranch %13135
      %13135 = OpLabel
      %13178 = OpPhi %uint %13124 %13111 %13174 %13161
      %13179 = OpPhi %uint %13125 %13111 %13175 %13161
      %13180 = OpPhi %uint %13126 %13111 %13176 %13161
      %13181 = OpPhi %uint %13127 %13111 %13177 %13161
      %13182 = OpShiftRightLogical %uint %12660 %uint_2
      %13183 = OpBitwiseAnd %uint %13182 %uint_7
      %13184 = OpINotEqual %bool %13183 %uint_0
               OpSelectionMerge %13185 None
               OpBranchConditional %13184 %13186 %13185
      %13186 = OpLabel
      %13187 = OpINotEqual %bool %13183 %uint_4
               OpSelectionMerge %13188 None
               OpBranchConditional %13187 %13189 %13188
      %13189 = OpLabel
      %13190 = OpBitwiseAnd %uint %10953 %uint_4294967292
      %13191 = OpBitwiseAnd %uint %13183 %uint_3
      %13192 = OpBitwiseOr %uint %13190 %13191
      %13193 = OpIEqual %bool %13183 %uint_1
               OpSelectionMerge %13194 None
               OpBranchConditional %13193 %13195 %13196
      %13196 = OpLabel
      %13197 = OpIEqual %bool %13183 %uint_3
               OpSelectionMerge %13198 None
               OpBranchConditional %13197 %13199 %13200
      %13200 = OpLabel
      %13201 = OpBitwiseAnd %uint %13192 %uint_3
      %13202 = OpExtInst %uint %1 PackHalf2x16 %558
      %13203 = OpShiftRightLogical %uint %13202 %uint_5
      %13204 = OpBitwiseAnd %uint %13203 %uint_1023
      %13205 = OpShiftLeftLogical %uint %13204 %uint_22
      %13206 = OpShiftLeftLogical %uint %13204 %uint_12
      %13207 = OpBitwiseOr %uint %13205 %13206
      %13208 = OpShiftLeftLogical %uint %13204 %uint_2
      %13209 = OpBitwiseOr %uint %13207 %13208
      %13210 = OpBitwiseOr %uint %13201 %13209
               OpBranch %13198
      %13199 = OpLabel
      %13211 = OpExtInst %float %1 Fma %460 %float_255 %float_0_5
      %13212 = OpConvertFToU %uint %13211
      %13213 = OpBitwiseAnd %uint %13192 %uint_3
      %13214 = OpShiftLeftLogical %uint %13212 %uint_24
      %13215 = OpBitwiseOr %uint %13213 %13214
      %13216 = OpBitwiseOr %uint %13215 %uint_0
               OpBranch %13198
      %13198 = OpLabel
      %13217 = OpPhi %uint %13210 %13200 %13216 %13199
               OpBranch %13194
      %13195 = OpLabel
      %13218 = OpExtInst %float %1 FAbs %460
      %13219 = OpFSub %float %float_1 %13218
      %13220 = OpBitwiseAnd %uint %13192 %uint_3
      %13221 = OpExtInst %float %1 FClamp %13219 %float_0 %float_1
      %13222 = OpFMul %float %13221 %float_255
      %13223 = OpConvertFToU %uint %13222
      %13224 = OpShiftLeftLogical %uint %13223 %uint_2
      %13225 = OpBitwiseOr %uint %13220 %13224
               OpBranch %13194
      %13194 = OpLabel
      %13226 = OpPhi %uint %13217 %13198 %13225 %13195
      %13227 = OpCompositeExtract %float %10707 0
      %13228 = OpCompositeExtract %float %10707 1
      %13229 = OpCompositeExtract %float %10707 2
      %13230 = OpCompositeConstruct %v4float %13227 %13228 %13229 %float_0
      %13231 = OpVectorShuffle %v3float %13230 %13230 0 1 2
      %13232 = OpExtInst %v3float %1 FClamp %13231 %102 %127
      %13233 = OpCompositeExtract %float %13232 0
               OpSelectionMerge %13234 None
               OpSwitch %uint_0 %13235
      %13235 = OpLabel
      %13236 = OpFOrdLessThan %bool %13233 %float_0_00313066994
               OpSelectionMerge %13237 None
               OpBranchConditional %13236 %13238 %13237
      %13238 = OpLabel
      %13239 = OpFMul %float %13233 %float_12_9200001
               OpBranch %13234
      %13237 = OpLabel
      %13240 = OpExtInst %float %1 Pow %13233 %float_0_416666657
      %13241 = OpExtInst %float %1 Fma %13240 %float_1_05499995 %float_n0_0549999997
               OpBranch %13234
      %13234 = OpLabel
      %13242 = OpPhi %float %13239 %13238 %13241 %13237
      %13243 = OpCompositeExtract %float %13232 1
               OpSelectionMerge %13244 None
               OpSwitch %uint_0 %13245
      %13245 = OpLabel
      %13246 = OpFOrdLessThan %bool %13243 %float_0_00313066994
               OpSelectionMerge %13247 None
               OpBranchConditional %13246 %13248 %13247
      %13248 = OpLabel
      %13249 = OpFMul %float %13243 %float_12_9200001
               OpBranch %13244
      %13247 = OpLabel
      %13250 = OpExtInst %float %1 Pow %13243 %float_0_416666657
      %13251 = OpExtInst %float %1 Fma %13250 %float_1_05499995 %float_n0_0549999997
               OpBranch %13244
      %13244 = OpLabel
      %13252 = OpPhi %float %13249 %13248 %13251 %13247
      %13253 = OpCompositeExtract %float %13232 2
               OpSelectionMerge %13254 None
               OpSwitch %uint_0 %13255
      %13255 = OpLabel
      %13256 = OpFOrdLessThan %bool %13253 %float_0_00313066994
               OpSelectionMerge %13257 None
               OpBranchConditional %13256 %13258 %13257
      %13258 = OpLabel
      %13259 = OpFMul %float %13253 %float_12_9200001
               OpBranch %13254
      %13257 = OpLabel
      %13260 = OpExtInst %float %1 Pow %13253 %float_0_416666657
      %13261 = OpExtInst %float %1 Fma %13260 %float_1_05499995 %float_n0_0549999997
               OpBranch %13254
      %13254 = OpLabel
      %13262 = OpPhi %float %13259 %13258 %13261 %13257
      %13263 = OpExtInst %float %1 FClamp %13242 %float_0 %float_1
      %13264 = OpFMul %float %13263 %float_255
      %13265 = OpConvertFToU %uint %13264
      %13266 = OpShiftLeftLogical %uint %13265 %uint_0
      %13267 = OpExtInst %float %1 FClamp %13252 %float_0 %float_1
      %13268 = OpFMul %float %13267 %float_255
      %13269 = OpConvertFToU %uint %13268
      %13270 = OpShiftLeftLogical %uint %13269 %uint_8
      %13271 = OpExtInst %float %1 FClamp %13262 %float_0 %float_1
      %13272 = OpFMul %float %13271 %float_255
      %13273 = OpConvertFToU %uint %13272
      %13274 = OpShiftLeftLogical %uint %13273 %uint_16
      %13275 = OpBitwiseOr %uint %13266 %13270
      %13276 = OpBitwiseOr %uint %13275 %13274
      %13277 = OpBitwiseOr %uint %13276 %uint_0
               OpBranch %13188
      %13188 = OpLabel
      %13278 = OpPhi %uint %457 %13186 %13277 %13254
      %13279 = OpPhi %uint %10953 %13186 %13226 %13254
      %13280 = OpIEqual %bool %13183 %uint_3
      %13281 = OpIAdd %uint %13181 %uint_1
               OpSelectionMerge %13282 None
               OpBranchConditional %13280 %13283 %13284
      %13284 = OpLabel
      %13285 = OpShiftRightLogical %uint %12660 %uint_10
      %13286 = OpBitwiseAnd %uint %13285 %uint_1
      %13287 = OpINotEqual %bool %13286 %uint_0
      %13288 = OpIEqual %bool %13183 %uint_2
      %13289 = OpLogicalAnd %bool %13287 %13288
               OpSelectionMerge %13290 None
               OpBranchConditional %13289 %13291 %13290
      %13291 = OpLabel
      %13292 = OpExtInst %v3float %1 NMax %555 %102
      %13293 = OpVectorShuffle %v4float %458 %13292 4 5 6 3
               OpBranch %13290
      %13290 = OpLabel
      %13294 = OpPhi %v4float %458 %13284 %13293 %13291
      %13295 = OpCompositeExtract %float %13294 0
      %13296 = OpCompositeConstruct %v2float %13295 %float_0
      %13297 = OpExtInst %uint %1 PackHalf2x16 %13296
      %13298 = OpShiftLeftLogical %uint %13297 %uint_17
      %13299 = OpBitwiseAnd %uint %13298 %uint_4292870144
      %13300 = OpCompositeExtract %float %13294 1
      %13301 = OpCompositeConstruct %v2float %13300 %float_0
      %13302 = OpExtInst %uint %1 PackHalf2x16 %13301
      %13303 = OpShiftLeftLogical %uint %13302 %uint_6
      %13304 = OpBitwiseAnd %uint %13303 %uint_2096128
      %13305 = OpCompositeExtract %float %13294 2
      %13306 = OpCompositeConstruct %v2float %13305 %float_0
      %13307 = OpExtInst %uint %1 PackHalf2x16 %13306
      %13308 = OpShiftRightLogical %uint %13307 %uint_5
      %13309 = OpBitwiseAnd %uint %13308 %uint_1023
      %13310 = OpBitwiseOr %uint %13299 %13304
      %13311 = OpBitwiseOr %uint %13310 %13309
      %13312 = OpULessThan %bool %13181 %uint_3
               OpSelectionMerge %13313 None
               OpBranchConditional %13312 %13314 %13315
      %13315 = OpLabel
      %13316 = OpISub %uint %13181 %uint_3
      %13317 = OpCompositeExtract %uint %10704 0
      %13318 = OpCompositeExtract %uint %10704 1
      %13319 = OpCompositeConstruct %v3uint %13317 %13318 %13316
               OpImageWrite %10705 %13319 %13311 None
               OpBranch %13313
      %13314 = OpLabel
      %13320 = OpIEqual %bool %13181 %uint_0
      %13321 = OpSelect %uint %13320 %13311 %13180
      %13322 = OpIEqual %bool %13181 %uint_1
      %13323 = OpSelect %uint %13322 %13311 %13179
      %13324 = OpIEqual %bool %13181 %uint_2
      %13325 = OpSelect %uint %13324 %13311 %13178
               OpBranch %13313
      %13313 = OpLabel
      %13326 = OpPhi %uint %13178 %13315 %13325 %13314
      %13327 = OpPhi %uint %13179 %13315 %13323 %13314
      %13328 = OpPhi %uint %13180 %13315 %13321 %13314
               OpBranch %13282
      %13283 = OpLabel
      %13329 = OpExtInst %uint %1 PackHalf2x16 %558
      %13330 = OpShiftRightLogical %uint %13329 %uint_5
      %13331 = OpBitwiseAnd %uint %13330 %uint_1023
      %13332 = OpShiftLeftLogical %uint %13331 %uint_16
      %13333 = OpBitwiseOr %uint %uint_0 %13332
      %13334 = OpULessThan %bool %13181 %uint_3
               OpSelectionMerge %13335 None
               OpBranchConditional %13334 %13336 %13337
      %13337 = OpLabel
      %13338 = OpISub %uint %13181 %uint_3
      %13339 = OpCompositeExtract %uint %10704 0
      %13340 = OpCompositeExtract %uint %10704 1
      %13341 = OpCompositeConstruct %v3uint %13339 %13340 %13338
               OpImageWrite %10705 %13341 %13333 None
               OpBranch %13335
      %13336 = OpLabel
      %13342 = OpIEqual %bool %13181 %uint_0
      %13343 = OpSelect %uint %13342 %13333 %13180
      %13344 = OpIEqual %bool %13181 %uint_1
      %13345 = OpSelect %uint %13344 %13333 %13179
      %13346 = OpIEqual %bool %13181 %uint_2
      %13347 = OpSelect %uint %13346 %13333 %13178
               OpBranch %13335
      %13335 = OpLabel
      %13348 = OpPhi %uint %13178 %13337 %13347 %13336
      %13349 = OpPhi %uint %13179 %13337 %13345 %13336
      %13350 = OpPhi %uint %13180 %13337 %13343 %13336
               OpBranch %13282
      %13282 = OpLabel
      %13351 = OpPhi %uint %13326 %13313 %13348 %13335
      %13352 = OpPhi %uint %13327 %13313 %13349 %13335
      %13353 = OpPhi %uint %13328 %13313 %13350 %13335
               OpBranch %13185
      %13185 = OpLabel
      %13354 = OpPhi %uint %457 %13135 %13278 %13282
      %13355 = OpPhi %uint %10953 %13135 %13279 %13282
      %13356 = OpPhi %uint %13178 %13135 %13351 %13282
      %13357 = OpPhi %uint %13179 %13135 %13352 %13282
      %13358 = OpPhi %uint %13180 %13135 %13353 %13282
      %13359 = OpPhi %uint %13181 %13135 %13281 %13282
      %13360 = OpShiftRightLogical %uint %12660 %uint_9
      %13361 = OpBitwiseAnd %uint %13360 %uint_1
      %13362 = OpINotEqual %bool %13361 %uint_0
               OpSelectionMerge %13363 None
               OpBranchConditional %13362 %13364 %13363
      %13364 = OpLabel
               OpSelectionMerge %13365 None
               OpSwitch %uint_0 %13366
      %13366 = OpLabel
               OpSelectionMerge %13367 None
               OpBranchConditional %true %13368 %13367
      %13368 = OpLabel
               OpBranch %13365
      %13367 = OpLabel
      %13369 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13365
      %13365 = OpLabel
      %13370 = OpPhi %float %float_0 %13368 %13369 %13367
               OpSelectionMerge %13371 None
               OpSwitch %uint_0 %13372
      %13372 = OpLabel
               OpSelectionMerge %13373 None
               OpBranchConditional %true %13374 %13373
      %13374 = OpLabel
               OpBranch %13371
      %13373 = OpLabel
      %13375 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13371
      %13371 = OpLabel
      %13376 = OpPhi %float %float_0 %13374 %13375 %13373
               OpSelectionMerge %13377 None
               OpSwitch %uint_0 %13378
      %13378 = OpLabel
               OpSelectionMerge %13379 None
               OpBranchConditional %true %13380 %13379
      %13380 = OpLabel
               OpBranch %13377
      %13379 = OpLabel
      %13381 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13377
      %13377 = OpLabel
      %13382 = OpPhi %float %float_0 %13380 %13381 %13379
      %13383 = OpCompositeConstruct %v3float %13370 %13376 %13382
      %13384 = OpBitcast %v3uint %13383
      %13385 = OpBitwiseAnd %v3uint %13384 %349
      %13386 = OpExtInst %v3uint %1 UMin %13385 %501
      %13387 = OpConvertUToF %v3float %13386
      %13388 = OpExtInst %v3float %1 Fma %12971 %13387 %13383
      %13389 = OpExtInst %v3float %1 FClamp %13388 %102 %127
      %13390 = OpCompositeExtract %float %13389 0
      %13391 = OpFMul %float %13390 %float_127
      %13392 = OpConvertFToU %uint %13391
      %13393 = OpShiftLeftLogical %uint %13392 %uint_0
      %13394 = OpCompositeExtract %float %13389 1
      %13395 = OpFMul %float %13394 %float_127
      %13396 = OpConvertFToU %uint %13395
      %13397 = OpShiftLeftLogical %uint %13396 %uint_7
      %13398 = OpCompositeExtract %float %13389 2
      %13399 = OpFMul %float %13398 %float_63
      %13400 = OpConvertFToU %uint %13399
      %13401 = OpShiftLeftLogical %uint %13400 %uint_14
      %13402 = OpBitwiseOr %uint %13393 %13397
      %13403 = OpBitwiseOr %uint %13402 %13401
      %13404 = OpExtInst %float %1 Fma %12970 %float_0 %float_0
      %13405 = OpExtInst %float %1 FClamp %13404 %float_0 %float_1
      %13406 = OpFMul %float %13405 %float_63
      %13407 = OpConvertFToU %uint %13406
      %13408 = OpShiftLeftLogical %uint %13407 %uint_20
      %13409 = OpBitwiseOr %uint %13403 %13408
      %13410 = OpShiftLeftLogical %uint %13407 %uint_26
      %13411 = OpBitwiseOr %uint %13409 %13410
      %13412 = OpULessThan %bool %13359 %uint_3
               OpSelectionMerge %13413 None
               OpBranchConditional %13412 %13414 %13415
      %13415 = OpLabel
      %13416 = OpISub %uint %13359 %uint_3
      %13417 = OpCompositeExtract %uint %10704 0
      %13418 = OpCompositeExtract %uint %10704 1
      %13419 = OpCompositeConstruct %v3uint %13417 %13418 %13416
               OpImageWrite %10705 %13419 %13411 None
               OpBranch %13413
      %13414 = OpLabel
      %13420 = OpIEqual %bool %13359 %uint_0
      %13421 = OpSelect %uint %13420 %13411 %13358
      %13422 = OpIEqual %bool %13359 %uint_1
      %13423 = OpSelect %uint %13422 %13411 %13357
      %13424 = OpIEqual %bool %13359 %uint_2
      %13425 = OpSelect %uint %13424 %13411 %13356
               OpBranch %13413
      %13413 = OpLabel
      %13426 = OpPhi %uint %13356 %13415 %13425 %13414
      %13427 = OpPhi %uint %13357 %13415 %13423 %13414
      %13428 = OpPhi %uint %13358 %13415 %13421 %13414
      %13429 = OpIAdd %uint %13359 %uint_1
               OpBranch %13363
      %13363 = OpLabel
      %13430 = OpPhi %uint %13356 %13185 %13426 %13413
      %13431 = OpPhi %uint %13357 %13185 %13427 %13413
      %13432 = OpPhi %uint %13358 %13185 %13428 %13413
      %13433 = OpPhi %uint %13359 %13185 %13429 %13413
      %13434 = OpShiftRightLogical %uint %12660 %uint_16
      %13435 = OpBitwiseAnd %uint %13434 %uint_1
      %13436 = OpINotEqual %bool %13435 %uint_0
               OpSelectionMerge %13437 None
               OpBranchConditional %13436 %13438 %13437
      %13438 = OpLabel
               OpSelectionMerge %13439 None
               OpSwitch %uint_0 %13440
      %13440 = OpLabel
      %13441 = OpExtInst %float %1 Fma %float_1 %float_1_05499995 %float_n0_0549999997
               OpBranch %13439
      %13439 = OpLabel
               OpBranch %13442
      %13442 = OpLabel
               OpBranch %13443
      %13443 = OpLabel
      %13444 = OpExtInst %float %1 FClamp %13441 %float_0 %float_1
      %13445 = OpFMul %float %13444 %float_255
      %13446 = OpConvertFToU %uint %13445
      %13447 = OpShiftLeftLogical %uint %13446 %uint_0
      %13448 = OpShiftLeftLogical %uint %13446 %uint_8
      %13449 = OpShiftLeftLogical %uint %13446 %uint_16
      %13450 = OpBitwiseOr %uint %13447 %13448
      %13451 = OpBitwiseOr %uint %13450 %13449
      %13452 = OpBitwiseOr %uint %13451 %uint_0
      %13453 = OpULessThan %bool %13433 %uint_3
               OpSelectionMerge %13454 None
               OpBranchConditional %13453 %13455 %13456
      %13456 = OpLabel
      %13457 = OpISub %uint %13433 %uint_3
      %13458 = OpCompositeExtract %uint %10704 0
      %13459 = OpCompositeExtract %uint %10704 1
      %13460 = OpCompositeConstruct %v3uint %13458 %13459 %13457
               OpImageWrite %10705 %13460 %13452 None
               OpBranch %13454
      %13455 = OpLabel
      %13461 = OpIEqual %bool %13433 %uint_0
      %13462 = OpSelect %uint %13461 %13452 %13432
      %13463 = OpIEqual %bool %13433 %uint_1
      %13464 = OpSelect %uint %13463 %13452 %13431
      %13465 = OpIEqual %bool %13433 %uint_2
      %13466 = OpSelect %uint %13465 %13452 %13430
               OpBranch %13454
      %13454 = OpLabel
      %13467 = OpPhi %uint %13430 %13456 %13466 %13455
      %13468 = OpPhi %uint %13431 %13456 %13464 %13455
      %13469 = OpPhi %uint %13432 %13456 %13462 %13455
               OpBranch %13437
      %13437 = OpLabel
      %13470 = OpPhi %uint %13430 %13363 %13467 %13454
      %13471 = OpPhi %uint %13431 %13363 %13468 %13454
      %13472 = OpPhi %uint %13432 %13363 %13469 %13454
               OpBranch %12673
      %12673 = OpLabel
      %13473 = OpPhi %uint %457 %12670 %12864 %12803 %457 %12951 %13354 %13437
      %13474 = OpPhi %uint %10953 %12670 %12865 %12803 %10953 %12951 %13355 %13437
      %13475 = OpPhi %uint %12661 %12670 %12797 %12803 %12964 %12951 %13470 %13437
      %13476 = OpPhi %uint %12662 %12670 %12798 %12803 %12965 %12951 %13471 %13437
      %13477 = OpPhi %uint %12663 %12670 %12799 %12803 %12966 %12951 %13472 %13437
               OpBranch %12669
      %12669 = OpLabel
      %13478 = OpPhi %uint %457 %11487 %13473 %12673
      %13479 = OpPhi %uint %10953 %11487 %13474 %12673
      %13480 = OpPhi %uint %12661 %11487 %13475 %12673
      %13481 = OpPhi %uint %12662 %11487 %13476 %12673
      %13482 = OpPhi %uint %12663 %11487 %13477 %12673
               OpBranch %11476
      %11476 = OpLabel
      %13483 = OpPhi %uint %457 %11427 %13478 %12669
      %13484 = OpPhi %uint %10953 %11427 %13479 %12669
      %13485 = OpPhi %uint %uint_0 %11427 %13480 %12669
      %13486 = OpPhi %uint %11473 %11427 %13481 %12669
      %13487 = OpPhi %uint %11474 %11427 %13482 %12669
      %13488 = OpExtInst %v3float %1 FAbs %10861
      %13489 = OpDot %float %127 %13488
      %13490 = OpCompositeConstruct %v2float %13489 %13489
      %13491 = OpVectorShuffle %v2float %10861 %10861 0 1
      %13492 = OpFDiv %v2float %13491 %13490
      %13493 = OpVectorShuffle %v3float %10861 %13492 3 4 2
      %13494 = OpCompositeExtract %float %10861 2
      %13495 = OpFOrdLessThanEqual %bool %13494 %float_0
               OpSelectionMerge %13496 None
               OpBranchConditional %13495 %13497 %13496
      %13497 = OpLabel
      %13498 = OpVectorShuffle %v2float %13492 %459 1 0
      %13499 = OpExtInst %v2float %1 FAbs %13498
      %13500 = OpFSub %v2float %313 %13499
      %13501 = OpVectorShuffle %v2float %13492 %459 0 1
      %13502 = OpFOrdGreaterThanEqual %v2bool %13501 %124
      %13503 = OpCompositeExtract %bool %13502 0
      %13504 = OpSelect %float %13503 %float_1 %float_n1
      %13505 = OpCompositeExtract %bool %13502 1
      %13506 = OpSelect %float %13505 %float_1 %float_n1
      %13507 = OpCompositeConstruct %v2float %13504 %13506
      %13508 = OpFMul %v2float %13500 %13507
      %13509 = OpVectorShuffle %v3float %10861 %13508 3 4 2
               OpBranch %13496
      %13496 = OpLabel
      %13510 = OpPhi %v3float %13493 %11476 %13509 %13497
      %13511 = OpVectorShuffle %v2float %13510 %13510 0 1
      %13512 = OpVectorTimesScalar %v2float %13511 %float_1023
      %13513 = OpFAdd %v2float %13512 %326
      %13514 = OpExtInst %v2float %1 FClamp %13513 %124 %327
      %13515 = OpConvertFToU %v2uint %13514
      %13516 = OpCompositeExtract %uint %13515 0
      %13517 = OpCompositeExtract %uint %13515 1
      %13518 = OpShiftLeftLogical %uint %13517 %uint_11
      %13519 = OpBitwiseOr %uint %13516 %13518
      %13520 = OpShiftLeftLogical %uint %13519 %uint_10
      %13521 = OpExtInst %float %1 FClamp %10863 %float_0 %float_1
      %13522 = OpFMul %float %13521 %float_255
      %13523 = OpConvertFToU %uint %13522
      %13524 = OpShiftLeftLogical %uint %13523 %uint_2
      %13525 = OpBitwiseOr %uint %13520 %13524
      %13526 = OpBitwiseOr %uint %13525 %10849
      %13527 = OpBitwiseAnd %uint %13484 %uint_3
      %13528 = OpINotEqual %bool %13527 %uint_0
               OpSelectionMerge %13529 DontFlatten
               OpBranchConditional %13528 %13530 %13529
      %13530 = OpLabel
      %13531 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %13532 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_17
      %13533 = OpLoad %int %13532
      %13534 = OpBitcast %uint %13533
      %13535 = OpCompositeExtract %uint %10704 0
      %13536 = OpCompositeExtract %uint %10704 1
      %13537 = OpCompositeConstruct %v3uint %13535 %13536 %13534
               OpImageWrite %13531 %13537 %13484 None
      %13538 = OpIEqual %bool %13527 %uint_2
      %13539 = OpIEqual %bool %13527 %uint_3
      %13540 = OpLogicalOr %bool %13538 %13539
               OpSelectionMerge %13541 None
               OpBranchConditional %13540 %13542 %13541
      %13542 = OpLabel
      %13543 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %13544 = OpIAdd %uint %13534 %uint_1
      %13545 = OpCompositeConstruct %v3uint %13535 %13536 %13544
               OpImageWrite %13543 %13545 %13483 None
               OpBranch %13541
      %13541 = OpLabel
               OpBranch %13529
      %13529 = OpLabel
      %13546 = OpAccessChain %_ptr_Uniform_float %View %uint_21
      %13547 = OpLoad %float %13546
      %13548 = OpCompositeConstruct %v3float %13547 %13547 %13547
      %13549 = OpExtInst %v3float %1 FMix %10702 %10866 %13548
      %13550 = OpFAdd %v3float %11390 %10449
      %13551 = OpFAdd %v3float %13549 %13550
      %13552 = OpVectorTimesScalar %v3float %13551 %float_1
      %13553 = OpCompositeExtract %float %13552 0
      %13554 = OpCompositeExtract %float %13552 1
      %13555 = OpCompositeExtract %float %13552 2
      %13556 = OpCompositeConstruct %v4float %13553 %13554 %13555 %float_0
      %13557 = OpAccessChain %_ptr_Uniform_float %View %uint_32
      %13558 = OpLoad %float %13557
      %13559 = OpFOrdEqual %bool %13558 %float_0
               OpSelectionMerge %13560 None
               OpBranchConditional %13559 %13561 %13560
      %13561 = OpLabel
      %13562 = OpCompositeInsert %v4float %460 %13556 3
               OpBranch %13560
      %13560 = OpLabel
      %13563 = OpPhi %v4float %13556 %13529 %13562 %13561
      %13564 = OpCompositeInsert %v4float %8511 %98 0
      %13565 = OpCompositeInsert %v4float %float_1 %13564 1
      %13566 = OpCompositeInsert %v4float %float_1 %13565 2
      %13567 = OpCompositeInsert %v4float %float_1 %13566 3
      %13568 = OpVectorTimesScalar %v3float %10700 %11401
      %13569 = OpCompositeExtract %float %13568 0
      %13570 = OpCompositeExtract %float %13568 1
      %13571 = OpCompositeExtract %float %13568 2
      %13572 = OpCompositeConstruct %v4float %13569 %13570 %13571 %float_1
      %13573 = OpVectorTimesScalar %v4float %13563 %11401
      %13574 = OpVectorShuffle %v3float %13573 %13573 0 1 2
      %13575 = OpExtInst %v3float %1 NMin %13574 %485
      %13576 = OpVectorShuffle %v4float %13573 %13575 4 5 6 3
               OpStore %out_var_SV_Target0 %13576
               OpStore %out_var_SV_Target1 %13567
               OpStore %out_var_SV_Target2 %13572
               OpStore %out_var_SV_Target3 %13487
               OpStore %out_var_SV_Target4 %13486
               OpStore %out_var_SV_Target5 %13485
               OpStore %out_var_SV_Target6 %13526
               OpReturn
               OpFunctionEnd
