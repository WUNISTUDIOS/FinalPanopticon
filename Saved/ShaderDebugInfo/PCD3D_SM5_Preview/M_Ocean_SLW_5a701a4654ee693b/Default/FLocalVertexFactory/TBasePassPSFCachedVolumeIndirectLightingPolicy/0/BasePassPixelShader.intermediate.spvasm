; SPIR-V
; Version: 1.3
; Generator: Google spiregg; 0
; Bound: 13533
; Schema: 0
               OpCapability Shader
               OpCapability SampledBuffer
               OpCapability StorageImageReadWithoutFormat
               OpExtension "SPV_GOOGLE_hlsl_functionality1"
               OpExtension "SPV_GOOGLE_user_type"
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %MainPS "MainPS" %in_var_TEXCOORD10_centroid %in_var_TEXCOORD11_centroid %in_var_PRIMITIVE_ID %in_var_TEXCOORD9 %gl_FragCoord %gl_FrontFacing %out_var_SV_Target0 %out_var_SV_Target1 %out_var_SV_Target2 %out_var_SV_Target3 %out_var_SV_Target4 %out_var_SV_Target5 %out_var_SV_Target6
               OpExecutionMode %MainPS OriginUpperLeft
               OpExecutionMode %MainPS EarlyFragmentTests

               ; Debug Information
               OpSource HLSL 620
               OpName %type_View "type.View"  ; id %16
               OpMemberName %type_View 0 "View_TranslatedWorldToView"
               OpMemberName %type_View 1 "View_ViewToClip"
               OpMemberName %type_View 2 "View_SVPositionToTranslatedWorld"
               OpMemberName %type_View 3 "View_ViewTilePosition"
               OpMemberName %type_View 4 "View_ViewForward"
               OpMemberName %type_View 5 "View_InvDeviceZToWorldZTransform"
               OpMemberName %type_View 6 "View_ScreenPositionScaleBias"
               OpMemberName %type_View 7 "View_RelativeWorldCameraOrigin"
               OpMemberName %type_View 8 "View_RelativePreViewTranslation"
               OpMemberName %type_View 9 "View_ViewRectMin"
               OpMemberName %type_View 10 "View_ViewSizeAndInvSize"
               OpMemberName %type_View 11 "View_LightProbeSizeRatioAndInvSizeRatio"
               OpMemberName %type_View 12 "View_BufferSizeAndInvSize"
               OpMemberName %type_View 13 "View_PreExposure"
               OpMemberName %type_View 14 "View_OneOverPreExposure"
               OpMemberName %type_View 15 "View_DiffuseOverrideParameter"
               OpMemberName %type_View 16 "View_SpecularOverrideParameter"
               OpMemberName %type_View 17 "View_RoughnessOverrideParameter"
               OpMemberName %type_View 18 "View_OutOfBoundsMask"
               OpMemberName %type_View 19 "View_GameTime"
               OpMemberName %type_View 20 "View_StateFrameIndexMod8"
               OpMemberName %type_View 21 "View_UnlitViewmodeMask"
               OpMemberName %type_View 22 "View_DirectionalLightColor"
               OpMemberName %type_View 23 "View_DirectionalLightDirection"
               OpMemberName %type_View 24 "View_PrecomputedIndirectLightingColorScale"
               OpMemberName %type_View 25 "View_RenderingReflectionCaptureMask"
               OpMemberName %type_View 26 "View_GlobalVolumeTranslatedCenterAndExtent"
               OpMemberName %type_View 27 "View_GlobalVolumeTranslatedWorldToUVAddAndMul"
               OpMemberName %type_View 28 "View_GlobalDistanceFieldClipmapSizeInPages"
               OpMemberName %type_View 29 "View_GlobalDistanceFieldInvPageAtlasSize"
               OpMemberName %type_View 30 "View_GlobalVolumeTexelSize"
               OpMemberName %type_View 31 "View_NumGlobalSDFClipmaps"
               OpMemberName %type_View 32 "View_bCheckerboardSubsurfaceProfileRendering"
               OpMemberName %type_View 33 "View_VolumetricLightmapWorldToUVScale"
               OpMemberName %type_View 34 "View_VolumetricLightmapWorldToUVAdd"
               OpMemberName %type_View 35 "View_VolumetricLightmapIndirectionTextureSize"
               OpMemberName %type_View 36 "View_VolumetricLightmapBrickSize"
               OpMemberName %type_View 37 "View_VolumetricLightmapBrickTexelSize"
               OpMemberName %type_View 38 "View_IndirectLightingCacheShowFlag"
               OpMemberName %type_View 39 "View_MinRoughness"
               OpMemberName %type_View 40 "View_bShadingEnergyConservation"
               OpMemberName %type_View 41 "View_bShadingEnergyPreservation"
               OpName %View "View"  ; id %17
               OpName %type_3d_image "type.3d.image"  ; id %18
               OpName %View_VolumetricLightmapIndirectionTexture "View_VolumetricLightmapIndirectionTexture"  ; id %19
               OpName %type_3d_image_0 "type.3d.image"  ; id %20
               OpName %View_DirectionalLightShadowingBrickTexture "View_DirectionalLightShadowingBrickTexture"  ; id %21
               OpName %View_GlobalDistanceFieldPageAtlasTexture "View_GlobalDistanceFieldPageAtlasTexture"  ; id %22
               OpName %View_GlobalDistanceFieldPageTableTexture "View_GlobalDistanceFieldPageTableTexture"  ; id %23
               OpName %type_2d_image "type.2d.image"  ; id %24
               OpName %type_sampler "type.sampler"  ; id %25
               OpName %View_PerlinNoise3DTexture "View_PerlinNoise3DTexture"  ; id %26
               OpName %View_PerlinNoise3DTextureSampler "View_PerlinNoise3DTextureSampler"  ; id %27
               OpName %View_SharedBilinearClampedSampler "View_SharedBilinearClampedSampler"  ; id %28
               OpName %View_SharedTrilinearWrappedSampler "View_SharedTrilinearWrappedSampler"  ; id %29
               OpName %View_ShadingEnergyGGXSpecTexture "View_ShadingEnergyGGXSpecTexture"  ; id %30
               OpName %View_ShadingEnergySampler "View_ShadingEnergySampler"  ; id %31
               OpName %View_SimpleVolumeEnvTexture "View_SimpleVolumeEnvTexture"  ; id %32
               OpName %View_SimpleVolumeEnvTextureSampler "View_SimpleVolumeEnvTextureSampler"  ; id %33
               OpName %type_SingleLayerWater "type.SingleLayerWater"  ; id %34
               OpMemberName %type_SingleLayerWater 0 "SingleLayerWater_SceneWithoutSingleLayerWaterMinMaxUV"
               OpMemberName %type_SingleLayerWater 1 "SingleLayerWater_DistortionParams"
               OpMemberName %type_SingleLayerWater 2 "SingleLayerWater_SceneWithoutSingleLayerWaterTextureSize"
               OpMemberName %type_SingleLayerWater 3 "SingleLayerWater_bMainDirectionalLightVSMFiltering"
               OpMemberName %type_SingleLayerWater 4 "SingleLayerWater_bSeparateMainDirLightLuminance"
               OpName %SingleLayerWater "SingleLayerWater"  ; id %35
               OpName %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture "SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture"  ; id %36
               OpName %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture "SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture"  ; id %37
               OpName %type_StructuredBuffer_v4float "type.StructuredBuffer.v4float"  ; id %38
               OpName %Scene_GPUScene_GPUScenePrimitiveSceneData "Scene_GPUScene_GPUScenePrimitiveSceneData"  ; id %39
               OpName %type_OpaqueBasePass "type.OpaqueBasePass"  ; id %40
               OpMemberName %type_OpaqueBasePass 0 "OpaqueBasePass_Shared_Forward_NumLocalLights"
               OpMemberName %type_OpaqueBasePass 1 "OpaqueBasePass_Shared_Forward_HasDirectionalLight"
               OpMemberName %type_OpaqueBasePass 2 "OpaqueBasePass_Shared_Forward_CulledGridSize"
               OpMemberName %type_OpaqueBasePass 3 "OpaqueBasePass_Shared_Forward_LightGridPixelSizeShift"
               OpMemberName %type_OpaqueBasePass 4 "OpaqueBasePass_Shared_Forward_LightGridZParams"
               OpMemberName %type_OpaqueBasePass 5 "OpaqueBasePass_Shared_Forward_DirectionalLightDirection"
               OpMemberName %type_OpaqueBasePass 6 "OpaqueBasePass_Shared_Forward_DirectionalLightSourceRadius"
               OpMemberName %type_OpaqueBasePass 7 "OpaqueBasePass_Shared_Forward_DirectionalLightColor"
               OpMemberName %type_OpaqueBasePass 8 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowMapChannelMask"
               OpMemberName %type_OpaqueBasePass 9 "OpaqueBasePass_Shared_Forward_DirectionalLightDistanceFadeMAD"
               OpMemberName %type_OpaqueBasePass 10 "OpaqueBasePass_Shared_Forward_NumDirectionalLightCascades"
               OpMemberName %type_OpaqueBasePass 11 "OpaqueBasePass_Shared_Forward_DirectionalLightVSM"
               OpMemberName %type_OpaqueBasePass 12 "OpaqueBasePass_Shared_Forward_CascadeEndDepths"
               OpMemberName %type_OpaqueBasePass 13 "OpaqueBasePass_Shared_Forward_DirectionalLightTranslatedWorldToShadowMatrix"
               OpMemberName %type_OpaqueBasePass 14 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapMinMax"
               OpMemberName %type_OpaqueBasePass 15 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlasBufferSize"
               OpMemberName %type_OpaqueBasePass 16 "OpaqueBasePass_Shared_Forward_DirectLightingShowFlag"
               OpMemberName %type_OpaqueBasePass 17 "OpaqueBasePass_Strata_FirstSliceStoringStrataSSSDataWithoutMRT"
               OpMemberName %type_OpaqueBasePass 18 "OpaqueBasePass_UseForwardScreenSpaceShadowMask"
               OpName %OpaqueBasePass "OpaqueBasePass"  ; id %41
               OpName %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas"  ; id %42
               OpName %OpaqueBasePass_Shared_Forward_ShadowmapSampler "OpaqueBasePass_Shared_Forward_ShadowmapSampler"  ; id %43
               OpName %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer "OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer"  ; id %44
               OpName %type_StructuredBuffer_uint "type.StructuredBuffer.uint"  ; id %45
               OpName %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid "OpaqueBasePass_Shared_Forward_NumCulledLightsGrid"  ; id %46
               OpName %type_buffer_image "type.buffer.image"  ; id %47
               OpName %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit "OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit"  ; id %48
               OpName %type_2d_image_array "type.2d.image.array"  ; id %49
               OpName %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs "OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs"  ; id %50
               OpName %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture "OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture"  ; id %51
               OpName %OpaqueBasePass_PreIntegratedGFTexture "OpaqueBasePass_PreIntegratedGFTexture"  ; id %52
               OpName %type_IndirectLightingCache "type.IndirectLightingCache"  ; id %53
               OpMemberName %type_IndirectLightingCache 0 "IndirectLightingCache_IndirectLightingCachePrimitiveAdd"
               OpMemberName %type_IndirectLightingCache 1 "IndirectLightingCache_IndirectLightingCachePrimitiveScale"
               OpMemberName %type_IndirectLightingCache 2 "IndirectLightingCache_IndirectLightingCacheMinUV"
               OpMemberName %type_IndirectLightingCache 3 "IndirectLightingCache_IndirectLightingCacheMaxUV"
               OpMemberName %type_IndirectLightingCache 4 "IndirectLightingCache_DirectionalLightShadowing"
               OpName %IndirectLightingCache "IndirectLightingCache"  ; id %54
               OpName %IndirectLightingCache_IndirectLightingCacheTexture0 "IndirectLightingCache_IndirectLightingCacheTexture0"  ; id %55
               OpName %IndirectLightingCache_IndirectLightingCacheTexture1 "IndirectLightingCache_IndirectLightingCacheTexture1"  ; id %56
               OpName %IndirectLightingCache_IndirectLightingCacheTexture2 "IndirectLightingCache_IndirectLightingCacheTexture2"  ; id %57
               OpName %IndirectLightingCache_IndirectLightingCacheTextureSampler0 "IndirectLightingCache_IndirectLightingCacheTextureSampler0"  ; id %58
               OpName %type_ByteAddressBuffer "type.ByteAddressBuffer"  ; id %59
               OpName %VirtualShadowMap_ProjectionData "VirtualShadowMap_ProjectionData"  ; id %60
               OpName %VirtualShadowMap_PageTable "VirtualShadowMap_PageTable"  ; id %61
               OpName %type_2d_image_array_0 "type.2d.image.array"  ; id %62
               OpName %VirtualShadowMap_PhysicalPagePool "VirtualShadowMap_PhysicalPagePool"  ; id %63
               OpName %type_MaterialCollection0 "type.MaterialCollection0"  ; id %64
               OpMemberName %type_MaterialCollection0 0 "MaterialCollection0_Vectors"
               OpName %MaterialCollection0 "MaterialCollection0"  ; id %65
               OpName %type_Material "type.Material"  ; id %66
               OpMemberName %type_Material 0 "Material_PreshaderBuffer"
               OpName %Material "Material"  ; id %67
               OpName %in_var_TEXCOORD10_centroid "in.var.TEXCOORD10_centroid"  ; id %3
               OpName %in_var_TEXCOORD11_centroid "in.var.TEXCOORD11_centroid"  ; id %4
               OpName %in_var_PRIMITIVE_ID "in.var.PRIMITIVE_ID"  ; id %5
               OpName %in_var_TEXCOORD9 "in.var.TEXCOORD9"  ; id %6
               OpName %out_var_SV_Target0 "out.var.SV_Target0"  ; id %9
               OpName %out_var_SV_Target1 "out.var.SV_Target1"  ; id %10
               OpName %out_var_SV_Target2 "out.var.SV_Target2"  ; id %11
               OpName %out_var_SV_Target3 "out.var.SV_Target3"  ; id %12
               OpName %out_var_SV_Target4 "out.var.SV_Target4"  ; id %13
               OpName %out_var_SV_Target5 "out.var.SV_Target5"  ; id %14
               OpName %out_var_SV_Target6 "out.var.SV_Target6"  ; id %15
               OpName %MainPS "MainPS"  ; id %2
               OpName %type_sampled_image "type.sampled.image"  ; id %68
               OpName %type_sampled_image_0 "type.sampled.image"  ; id %69

               ; Annotations
               OpDecorateString %in_var_TEXCOORD10_centroid UserSemantic "TEXCOORD10_centroid"
               OpDecorateString %in_var_TEXCOORD11_centroid UserSemantic "TEXCOORD11_centroid"
               OpDecorateString %in_var_PRIMITIVE_ID UserSemantic "PRIMITIVE_ID"
               OpDecorate %in_var_PRIMITIVE_ID Flat
               OpDecorateString %in_var_TEXCOORD9 UserSemantic "TEXCOORD9"
               OpDecorate %gl_FragCoord BuiltIn FragCoord
               OpDecorateString %gl_FragCoord UserSemantic "SV_Position"
               OpDecorate %gl_FrontFacing BuiltIn FrontFacing
               OpDecorateString %gl_FrontFacing UserSemantic "SV_IsFrontFace"
               OpDecorate %gl_FrontFacing Flat
               OpDecorateString %out_var_SV_Target0 UserSemantic "SV_Target0"
               OpDecorateString %out_var_SV_Target1 UserSemantic "SV_Target1"
               OpDecorateString %out_var_SV_Target2 UserSemantic "SV_Target2"
               OpDecorateString %out_var_SV_Target3 UserSemantic "SV_Target3"
               OpDecorateString %out_var_SV_Target4 UserSemantic "SV_Target4"
               OpDecorateString %out_var_SV_Target5 UserSemantic "SV_Target5"
               OpDecorateString %out_var_SV_Target6 UserSemantic "SV_Target6"
               OpDecorate %in_var_TEXCOORD10_centroid Location 0
               OpDecorate %in_var_TEXCOORD11_centroid Location 1
               OpDecorate %in_var_PRIMITIVE_ID Location 2
               OpDecorate %in_var_TEXCOORD9 Location 3
               OpDecorate %out_var_SV_Target0 Location 0
               OpDecorate %out_var_SV_Target1 Location 1
               OpDecorate %out_var_SV_Target2 Location 2
               OpDecorate %out_var_SV_Target3 Location 3
               OpDecorate %out_var_SV_Target4 Location 4
               OpDecorate %out_var_SV_Target5 Location 5
               OpDecorate %out_var_SV_Target6 Location 6
               OpDecorate %View DescriptorSet 0
               OpDecorate %View Binding 0
               OpDecorate %View_VolumetricLightmapIndirectionTexture DescriptorSet 0
               OpDecorate %View_VolumetricLightmapIndirectionTexture Binding 1
               OpDecorate %View_DirectionalLightShadowingBrickTexture DescriptorSet 0
               OpDecorate %View_DirectionalLightShadowingBrickTexture Binding 2
               OpDecorate %View_GlobalDistanceFieldPageAtlasTexture DescriptorSet 0
               OpDecorate %View_GlobalDistanceFieldPageAtlasTexture Binding 3
               OpDecorate %View_GlobalDistanceFieldPageTableTexture DescriptorSet 0
               OpDecorate %View_GlobalDistanceFieldPageTableTexture Binding 4
               OpDecorate %View_PerlinNoise3DTexture DescriptorSet 0
               OpDecorate %View_PerlinNoise3DTexture Binding 7
               OpDecorate %View_PerlinNoise3DTextureSampler DescriptorSet 0
               OpDecorate %View_PerlinNoise3DTextureSampler Binding 8
               OpDecorate %View_SharedBilinearClampedSampler DescriptorSet 0
               OpDecorate %View_SharedBilinearClampedSampler Binding 10
               OpDecorate %View_SharedTrilinearWrappedSampler DescriptorSet 0
               OpDecorate %View_SharedTrilinearWrappedSampler Binding 11
               OpDecorate %View_ShadingEnergyGGXSpecTexture DescriptorSet 0
               OpDecorate %View_ShadingEnergyGGXSpecTexture Binding 23
               OpDecorate %View_ShadingEnergySampler DescriptorSet 0
               OpDecorate %View_ShadingEnergySampler Binding 26
               OpDecorate %View_SimpleVolumeEnvTexture DescriptorSet 0
               OpDecorate %View_SimpleVolumeEnvTexture Binding 29
               OpDecorate %View_SimpleVolumeEnvTextureSampler DescriptorSet 0
               OpDecorate %View_SimpleVolumeEnvTextureSampler Binding 30
               OpDecorate %SingleLayerWater DescriptorSet 0
               OpDecorate %SingleLayerWater Binding 34
               OpDecorate %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture DescriptorSet 0
               OpDecorate %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture Binding 35
               OpDecorate %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture DescriptorSet 0
               OpDecorate %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture Binding 36
               OpDecorate %Scene_GPUScene_GPUScenePrimitiveSceneData DescriptorSet 0
               OpDecorate %Scene_GPUScene_GPUScenePrimitiveSceneData Binding 38
               OpDecorate %OpaqueBasePass DescriptorSet 0
               OpDecorate %OpaqueBasePass Binding 39
               OpDecorate %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas Binding 40
               OpDecorate %OpaqueBasePass_Shared_Forward_ShadowmapSampler DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_ShadowmapSampler Binding 41
               OpDecorate %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer Binding 42
               OpDecorate %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid Binding 43
               OpDecorate %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit Binding 44
               OpDecorate %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs DescriptorSet 0
               OpDecorate %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs Binding 45
               OpDecorate %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture DescriptorSet 0
               OpDecorate %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture Binding 46
               OpDecorate %OpaqueBasePass_PreIntegratedGFTexture DescriptorSet 0
               OpDecorate %OpaqueBasePass_PreIntegratedGFTexture Binding 47
               OpDecorate %IndirectLightingCache DescriptorSet 0
               OpDecorate %IndirectLightingCache Binding 48
               OpDecorate %IndirectLightingCache_IndirectLightingCacheTexture0 DescriptorSet 0
               OpDecorate %IndirectLightingCache_IndirectLightingCacheTexture0 Binding 49
               OpDecorate %IndirectLightingCache_IndirectLightingCacheTexture1 DescriptorSet 0
               OpDecorate %IndirectLightingCache_IndirectLightingCacheTexture1 Binding 50
               OpDecorate %IndirectLightingCache_IndirectLightingCacheTexture2 DescriptorSet 0
               OpDecorate %IndirectLightingCache_IndirectLightingCacheTexture2 Binding 51
               OpDecorate %IndirectLightingCache_IndirectLightingCacheTextureSampler0 DescriptorSet 0
               OpDecorate %IndirectLightingCache_IndirectLightingCacheTextureSampler0 Binding 52
               OpDecorate %VirtualShadowMap_ProjectionData DescriptorSet 0
               OpDecorate %VirtualShadowMap_ProjectionData Binding 53
               OpDecorate %VirtualShadowMap_PageTable DescriptorSet 0
               OpDecorate %VirtualShadowMap_PageTable Binding 54
               OpDecorate %VirtualShadowMap_PhysicalPagePool DescriptorSet 0
               OpDecorate %VirtualShadowMap_PhysicalPagePool Binding 55
               OpDecorate %MaterialCollection0 DescriptorSet 0
               OpDecorate %MaterialCollection0 Binding 56
               OpDecorate %Material DescriptorSet 0
               OpDecorate %Material Binding 57
               OpDecorate %_arr_v4float_uint_6 ArrayStride 16
               OpMemberDecorate %type_View 0 Offset 192
               OpMemberDecorate %type_View 0 MatrixStride 16
               OpMemberDecorate %type_View 0 ColMajor
               OpMemberDecorate %type_View 1 Offset 448
               OpMemberDecorate %type_View 1 MatrixStride 16
               OpMemberDecorate %type_View 1 ColMajor
               OpMemberDecorate %type_View 2 Offset 704
               OpMemberDecorate %type_View 2 MatrixStride 16
               OpMemberDecorate %type_View 2 ColMajor
               OpMemberDecorate %type_View 3 Offset 960
               OpMemberDecorate %type_View 4 Offset 992
               OpMemberDecorate %type_View 5 Offset 1072
               OpMemberDecorate %type_View 6 Offset 1088
               OpMemberDecorate %type_View 7 Offset 1104
               OpMemberDecorate %type_View 8 Offset 1152
               OpMemberDecorate %type_View 9 Offset 1984
               OpMemberDecorate %type_View 10 Offset 2000
               OpMemberDecorate %type_View 11 Offset 2032
               OpMemberDecorate %type_View 12 Offset 2048
               OpMemberDecorate %type_View 13 Offset 2120
               OpMemberDecorate %type_View 14 Offset 2124
               OpMemberDecorate %type_View 15 Offset 2128
               OpMemberDecorate %type_View 16 Offset 2144
               OpMemberDecorate %type_View 17 Offset 2176
               OpMemberDecorate %type_View 18 Offset 2192
               OpMemberDecorate %type_View 19 Offset 2228
               OpMemberDecorate %type_View 20 Offset 2260
               OpMemberDecorate %type_View 21 Offset 2280
               OpMemberDecorate %type_View 22 Offset 2288
               OpMemberDecorate %type_View 23 Offset 2304
               OpMemberDecorate %type_View 24 Offset 2480
               OpMemberDecorate %type_View 25 Offset 2876
               OpMemberDecorate %type_View 26 Offset 3120
               OpMemberDecorate %type_View 27 Offset 3216
               OpMemberDecorate %type_View 28 Offset 3512
               OpMemberDecorate %type_View 29 Offset 3520
               OpMemberDecorate %type_View 30 Offset 3552
               OpMemberDecorate %type_View 31 Offset 3560
               OpMemberDecorate %type_View 32 Offset 3592
               OpMemberDecorate %type_View 33 Offset 3696
               OpMemberDecorate %type_View 34 Offset 3712
               OpMemberDecorate %type_View 35 Offset 3728
               OpMemberDecorate %type_View 36 Offset 3740
               OpMemberDecorate %type_View 37 Offset 3744
               OpMemberDecorate %type_View 38 Offset 3756
               OpMemberDecorate %type_View 39 Offset 3896
               OpMemberDecorate %type_View 40 Offset 5160
               OpMemberDecorate %type_View 41 Offset 5164
               OpDecorate %type_View Block
               OpDecorateString %View UserTypeGOOGLE "cbuffer"
               OpDecorateString %View_VolumetricLightmapIndirectionTexture UserTypeGOOGLE "texture3d:<uint4>"
               OpDecorateString %View_DirectionalLightShadowingBrickTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_GlobalDistanceFieldPageAtlasTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_GlobalDistanceFieldPageTableTexture UserTypeGOOGLE "texture3d:<uint>"
               OpDecorateString %View_PerlinNoise3DTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_ShadingEnergyGGXSpecTexture UserTypeGOOGLE "texture2d:<float2>"
               OpDecorateString %View_SimpleVolumeEnvTexture UserTypeGOOGLE "texture3d:<float>"
               OpMemberDecorate %type_SingleLayerWater 0 Offset 64
               OpMemberDecorate %type_SingleLayerWater 1 Offset 80
               OpMemberDecorate %type_SingleLayerWater 2 Offset 96
               OpMemberDecorate %type_SingleLayerWater 3 Offset 112
               OpMemberDecorate %type_SingleLayerWater 4 Offset 116
               OpDecorate %type_SingleLayerWater Block
               OpDecorateString %SingleLayerWater UserTypeGOOGLE "cbuffer"
               OpDecorateString %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorate %_runtimearr_v4float ArrayStride 16
               OpMemberDecorate %type_StructuredBuffer_v4float 0 Offset 0
               OpMemberDecorate %type_StructuredBuffer_v4float 0 NonWritable
               OpDecorate %type_StructuredBuffer_v4float BufferBlock
               OpDecorateString %Scene_GPUScene_GPUScenePrimitiveSceneData UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorate %_arr_mat4v4float_uint_4 ArrayStride 64
               OpDecorate %_arr_v4float_uint_4 ArrayStride 16
               OpMemberDecorate %type_OpaqueBasePass 0 Offset 0
               OpMemberDecorate %type_OpaqueBasePass 1 Offset 8
               OpMemberDecorate %type_OpaqueBasePass 2 Offset 16
               OpMemberDecorate %type_OpaqueBasePass 3 Offset 32
               OpMemberDecorate %type_OpaqueBasePass 4 Offset 48
               OpMemberDecorate %type_OpaqueBasePass 5 Offset 64
               OpMemberDecorate %type_OpaqueBasePass 6 Offset 76
               OpMemberDecorate %type_OpaqueBasePass 7 Offset 80
               OpMemberDecorate %type_OpaqueBasePass 8 Offset 96
               OpMemberDecorate %type_OpaqueBasePass 9 Offset 104
               OpMemberDecorate %type_OpaqueBasePass 10 Offset 112
               OpMemberDecorate %type_OpaqueBasePass 11 Offset 116
               OpMemberDecorate %type_OpaqueBasePass 12 Offset 128
               OpMemberDecorate %type_OpaqueBasePass 13 Offset 144
               OpMemberDecorate %type_OpaqueBasePass 13 MatrixStride 16
               OpMemberDecorate %type_OpaqueBasePass 13 ColMajor
               OpMemberDecorate %type_OpaqueBasePass 14 Offset 400
               OpMemberDecorate %type_OpaqueBasePass 15 Offset 464
               OpMemberDecorate %type_OpaqueBasePass 16 Offset 592
               OpMemberDecorate %type_OpaqueBasePass 17 Offset 2276
               OpMemberDecorate %type_OpaqueBasePass 18 Offset 2304
               OpDecorate %type_OpaqueBasePass Block
               OpDecorateString %OpaqueBasePass UserTypeGOOGLE "cbuffer"
               OpDecorateString %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %type_StructuredBuffer_uint 0 Offset 0
               OpMemberDecorate %type_StructuredBuffer_uint 0 NonWritable
               OpDecorate %type_StructuredBuffer_uint BufferBlock
               OpDecorateString %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid UserTypeGOOGLE "structuredbuffer:<uint>"
               OpDecorateString %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit UserTypeGOOGLE "buffer:<uint>"
               OpDecorateString %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs UserTypeGOOGLE "rwtexture2darray:<uint>"
               OpDecorateString %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %OpaqueBasePass_PreIntegratedGFTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpMemberDecorate %type_IndirectLightingCache 0 Offset 0
               OpMemberDecorate %type_IndirectLightingCache 1 Offset 16
               OpMemberDecorate %type_IndirectLightingCache 2 Offset 32
               OpMemberDecorate %type_IndirectLightingCache 3 Offset 48
               OpMemberDecorate %type_IndirectLightingCache 4 Offset 80
               OpDecorate %type_IndirectLightingCache Block
               OpDecorateString %IndirectLightingCache UserTypeGOOGLE "cbuffer"
               OpDecorateString %IndirectLightingCache_IndirectLightingCacheTexture0 UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %IndirectLightingCache_IndirectLightingCacheTexture1 UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %IndirectLightingCache_IndirectLightingCacheTexture2 UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpMemberDecorate %type_ByteAddressBuffer 0 Offset 0
               OpMemberDecorate %type_ByteAddressBuffer 0 NonWritable
               OpDecorate %type_ByteAddressBuffer BufferBlock
               OpDecorateString %VirtualShadowMap_ProjectionData UserTypeGOOGLE "byteaddressbuffer"
               OpDecorateString %VirtualShadowMap_PageTable UserTypeGOOGLE "structuredbuffer:<uint>"
               OpDecorateString %VirtualShadowMap_PhysicalPagePool UserTypeGOOGLE "texture2darray:<uint>"
               OpDecorate %_arr_v4float_uint_5 ArrayStride 16
               OpMemberDecorate %type_MaterialCollection0 0 Offset 0
               OpDecorate %type_MaterialCollection0 Block
               OpDecorateString %MaterialCollection0 UserTypeGOOGLE "cbuffer"
               OpDecorate %_arr_v4float_uint_109 ArrayStride 16
               OpMemberDecorate %type_Material 0 Offset 0
               OpDecorate %type_Material Block
               OpDecorateString %Material UserTypeGOOGLE "cbuffer"

               ; Types, variables and constants
      %float = OpTypeFloat 32
%float_3_14159274 = OpConstant %float 3.14159274
%float_64512 = OpConstant %float 64512
    %v3float = OpTypeVector %float 3
    %v4float = OpTypeVector %float 4
%mat4v4float = OpTypeMatrix %v4float 4
    %v2float = OpTypeVector %float 2
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
        %int = OpTypeInt 32 1
     %uint_2 = OpConstant %uint 2
     %uint_8 = OpConstant %uint 8
     %uint_6 = OpConstant %uint 6
      %v2int = OpTypeVector %int 2
    %uint_32 = OpConstant %uint 32
      %v4int = OpTypeVector %int 4
    %float_1 = OpConstant %float 1
       %bool = OpTypeBool
     %uint_3 = OpConstant %uint 3
      %int_0 = OpConstant %int 0
      %int_2 = OpConstant %int 2
      %int_1 = OpConstant %int 1
     %uint_0 = OpConstant %uint 0
    %float_0 = OpConstant %float 0
        %101 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
      %false = OpConstantFalse %bool
      %int_6 = OpConstant %int 6
     %int_96 = OpConstant %int 96
        %105 = OpConstantComposite %v3float %float_0 %float_0 %float_0
      %int_4 = OpConstant %int 4
   %uint_512 = OpConstant %uint 512
   %uint_256 = OpConstant %uint 256
     %uint_4 = OpConstant %uint 4
      %int_3 = OpConstant %int 3
     %int_13 = OpConstant %int 13
    %uint_14 = OpConstant %uint 14
    %uint_31 = OpConstant %uint 31
     %uint_1 = OpConstant %uint 1
     %int_11 = OpConstant %int 11
     %int_24 = OpConstant %int 24
     %int_17 = OpConstant %int 17
     %int_20 = OpConstant %int 20
     %int_10 = OpConstant %int 10
        %120 = OpConstantComposite %v4float %float_1 %float_1 %float_1 %float_1
       %true = OpConstantTrue %bool
     %int_16 = OpConstant %int 16
     %int_21 = OpConstant %int 21
     %int_75 = OpConstant %int 75
     %int_76 = OpConstant %int 76
     %int_15 = OpConstant %int 15
        %127 = OpConstantComposite %v2float %float_0 %float_0
     %int_47 = OpConstant %int 47
     %int_65 = OpConstant %int 65
        %130 = OpConstantComposite %v3float %float_1 %float_1 %float_1
     %int_81 = OpConstant %int 81
     %int_27 = OpConstant %int 27
     %int_29 = OpConstant %int 29
     %int_12 = OpConstant %int 12
%float_0_577000022 = OpConstant %float 0.577000022
        %136 = OpConstantComposite %v3float %float_0_577000022 %float_0_577000022 %float_0_577000022
        %137 = OpConstantComposite %v3float %float_1 %float_1 %float_0
        %138 = OpConstantComposite %v3float %float_0 %float_1 %float_1
  %float_0_5 = OpConstant %float 0.5
        %140 = OpConstantComposite %v3float %float_0_5 %float_0_5 %float_0_5
     %int_41 = OpConstant %int 41
%float_0_0500000007 = OpConstant %float 0.0500000007
        %143 = OpConstantComposite %v3float %float_1 %float_0 %float_1
     %int_18 = OpConstant %int 18
     %int_19 = OpConstant %int 19
     %int_51 = OpConstant %int 51
      %int_9 = OpConstant %int 9
%float_0_00392156886 = OpConstant %float 0.00392156886
     %int_73 = OpConstant %int 73
     %int_25 = OpConstant %int 25
     %int_48 = OpConstant %int 48
        %152 = OpConstantComposite %v2float %float_0_5 %float_0_5
    %float_2 = OpConstant %float 2
   %float_n2 = OpConstant %float -2
        %155 = OpConstantComposite %v2float %float_2 %float_n2
   %float_47 = OpConstant %float 47
   %float_17 = OpConstant %float 17
%float_0_0671105608 = OpConstant %float 0.0671105608
%float_0_00583714992 = OpConstant %float 0.00583714992
%float_52_9829178 = OpConstant %float 52.9829178
     %int_28 = OpConstant %int 28
     %uint_5 = OpConstant %uint 5
%uint_4294967288 = OpConstant %uint 4294967288
     %uint_7 = OpConstant %uint 7
    %uint_11 = OpConstant %uint 11
        %166 = OpConstantComposite %v3float %float_64512 %float_64512 %float_64512
%uint_2139095040 = OpConstant %uint 2139095040
   %uint_128 = OpConstant %uint 128
    %int_108 = OpConstant %int 108
%float_0_449999988 = OpConstant %float 0.449999988
%float_0_300000012 = OpConstant %float 0.300000012
%float_0_589999974 = OpConstant %float 0.589999974
%float_0_109999999 = OpConstant %float 0.109999999
        %174 = OpConstantComposite %v3float %float_0_300000012 %float_0_589999974 %float_0_109999999
%float_2_04040003 = OpConstant %float 2.04040003
%float_0_332399994 = OpConstant %float 0.332399994
        %177 = OpConstantComposite %v3float %float_0_332399994 %float_0_332399994 %float_0_332399994
%float_n4_79510021 = OpConstant %float -4.79510021
%float_0_641700029 = OpConstant %float 0.641700029
        %180 = OpConstantComposite %v3float %float_0_641700029 %float_0_641700029 %float_0_641700029
%float_2_75519991 = OpConstant %float 2.75519991
%float_0_690299988 = OpConstant %float 0.690299988
        %183 = OpConstantComposite %v3float %float_0_690299988 %float_0_690299988 %float_0_690299988
     %int_n1 = OpConstant %int -1
     %v2uint = OpTypeVector %uint 2
     %int_37 = OpConstant %int 37
%float_2097152 = OpConstant %float 2097152
   %float_50 = OpConstant %float 50
%float_9_99999996en13 = OpConstant %float 9.99999996e-13
%float_0_0199999996 = OpConstant %float 0.0199999996
%float_9_99999975en06 = OpConstant %float 9.99999975e-06
        %192 = OpConstantComposite %v3float %float_9_99999975en06 %float_9_99999975en06 %float_9_99999975en06
     %int_85 = OpConstant %int 85
     %int_59 = OpConstant %int 59
%float_0_0399999991 = OpConstant %float 0.0399999991
    %uint_16 = OpConstant %uint 16
    %uint_64 = OpConstant %uint 64
    %uint_40 = OpConstant %uint 40
     %uint_9 = OpConstant %uint 9
    %uint_10 = OpConstant %uint 10
  %uint_4095 = OpConstant %uint 4095
    %uint_12 = OpConstant %uint 12
   %uint_255 = OpConstant %uint 255
    %uint_20 = OpConstant %uint 20
    %uint_19 = OpConstant %uint 19
    %uint_24 = OpConstant %uint 24
%uint_1047552 = OpConstant %uint 1047552
  %uint_1023 = OpConstant %uint 1023
    %uint_63 = OpConstant %uint 63
   %uint_127 = OpConstant %uint 127
    %uint_26 = OpConstant %uint 26
    %uint_22 = OpConstant %uint 22
%uint_4294963200 = OpConstant %uint 4294963200
  %float_100 = OpConstant %float 100
  %float_128 = OpConstant %float 128
%float_0_00390625 = OpConstant %float 0.00390625
   %float_16 = OpConstant %float 16
     %int_23 = OpConstant %int 23
     %int_22 = OpConstant %int 22
     %int_30 = OpConstant %int 30
     %int_31 = OpConstant %int 31
     %int_33 = OpConstant %int 33
     %int_35 = OpConstant %int 35
     %int_26 = OpConstant %int 26
     %int_39 = OpConstant %int 39
     %int_40 = OpConstant %int 40
     %int_42 = OpConstant %int 42
     %int_43 = OpConstant %int 43
     %int_32 = OpConstant %int 32
     %int_45 = OpConstant %int 45
     %int_34 = OpConstant %int 34
     %int_46 = OpConstant %int 46
     %int_52 = OpConstant %int 52
     %int_38 = OpConstant %int 38
     %int_54 = OpConstant %int 54
     %int_56 = OpConstant %int 56
     %int_57 = OpConstant %int 57
     %int_58 = OpConstant %int 58
     %int_60 = OpConstant %int 60
     %int_61 = OpConstant %int 61
     %int_62 = OpConstant %int 62
     %int_63 = OpConstant %int 63
     %int_64 = OpConstant %int 64
     %int_49 = OpConstant %int 49
     %int_67 = OpConstant %int 67
     %int_68 = OpConstant %int 68
     %int_53 = OpConstant %int 53
     %int_70 = OpConstant %int 70
     %int_71 = OpConstant %int 71
     %int_72 = OpConstant %int 72
     %int_74 = OpConstant %int 74
     %int_77 = OpConstant %int 77
     %int_78 = OpConstant %int 78
     %int_79 = OpConstant %int 79
     %int_80 = OpConstant %int 80
     %int_86 = OpConstant %int 86
     %int_87 = OpConstant %int 87
     %int_88 = OpConstant %int 88
     %int_89 = OpConstant %int 89
     %int_90 = OpConstant %int 90
     %int_91 = OpConstant %int 91
     %int_92 = OpConstant %int 92
     %int_93 = OpConstant %int 93
     %int_94 = OpConstant %int 94
     %int_95 = OpConstant %int 95
     %int_97 = OpConstant %int 97
     %int_82 = OpConstant %int 82
     %int_83 = OpConstant %int 83
    %int_103 = OpConstant %int 103
    %int_104 = OpConstant %int 104
    %int_106 = OpConstant %int 106
    %int_107 = OpConstant %int 107
    %int_105 = OpConstant %int 105
%mat3v3float = OpTypeMatrix %v3float 3
%_arr_v3float_uint_4 = OpTypeArray %v3float %uint_4
    %uint_15 = OpConstant %uint 15
%float_100000 = OpConstant %float 100000
   %float_n1 = OpConstant %float -1
        %279 = OpConstantComposite %v2float %float_1 %float_0
%float_1_20000005 = OpConstant %float 1.20000005
        %281 = OpConstantComposite %v3float %float_1_20000005 %float_1_20000005 %float_1_20000005
        %282 = OpConstantComposite %v3float %float_n1 %float_n1 %float_n1
%float_0_100000001 = OpConstant %float 0.100000001
        %284 = OpConstantComposite %v3float %float_0_100000001 %float_0_100000001 %float_0_100000001
%float_6_28318548 = OpConstant %float 6.28318548
%float_0_00100000005 = OpConstant %float 0.00100000005
%float_0_00200000009 = OpConstant %float 0.00200000009
%float_0_800000012 = OpConstant %float 0.800000012
    %float_4 = OpConstant %float 4
 %float_0_75 = OpConstant %float 0.75
%float_10000 = OpConstant %float 10000
        %292 = OpConstantComposite %v3float %float_10000 %float_10000 %float_10000
    %float_8 = OpConstant %float 8
        %294 = OpConstantComposite %v3float %float_0 %float_0 %float_1
%float_9_99999975en05 = OpConstant %float 9.99999975e-05
    %uint_41 = OpConstant %uint 41
    %uint_18 = OpConstant %uint 18
 %uint_65535 = OpConstant %uint 65535
    %uint_17 = OpConstant %uint 17
    %uint_25 = OpConstant %uint 25
%uint_16777215 = OpConstant %uint 16777215
 %uint_32768 = OpConstant %uint 32768
  %float_127 = OpConstant %float 127
    %float_3 = OpConstant %float 3
%float_0_99000001 = OpConstant %float 0.99000001
        %306 = OpConstantComposite %v3float %float_0_99000001 %float_0_99000001 %float_0_99000001
%float_0_0799999982 = OpConstant %float 0.0799999982
        %308 = OpConstantComposite %v2uint %uint_31 %uint_31
 %float_4000 = OpConstant %float 4000
%float_0_000230000005 = OpConstant %float 0.000230000005
%float_n0_000230000005 = OpConstant %float -0.000230000005
        %312 = OpConstantComposite %v2float %float_0_000230000005 %float_n0_000230000005
%float_1_54999995 = OpConstant %float 1.54999995
  %float_255 = OpConstant %float 255
        %315 = OpConstantComposite %v2float %float_1 %float_1
 %float_1023 = OpConstant %float 1023
 %float_2047 = OpConstant %float 2047
  %uint_2047 = OpConstant %uint 2047
   %float_63 = OpConstant %float 63
%uint_1072693248 = OpConstant %uint 1072693248
%uint_4292870144 = OpConstant %uint 4292870144
%uint_2096128 = OpConstant %uint 2096128
 %float_0_25 = OpConstant %float 0.25
        %324 = OpConstantComposite %v3float %float_0_25 %float_0_25 %float_0_25
        %325 = OpConstantComposite %v3float %float_0 %float_0_5 %float_0_5
%uint_4294967292 = OpConstant %uint 4294967292
 %float_1024 = OpConstant %float 1024
        %328 = OpConstantComposite %v2float %float_1024 %float_1024
        %329 = OpConstantComposite %v2float %float_2047 %float_2047
%float_4_76837158en07 = OpConstant %float 4.76837158e-07
%float_0_333299994 = OpConstant %float 0.333299994
%float_0_488602996 = OpConstant %float 0.488602996
  %uint_2048 = OpConstant %uint 2048
  %uint_4096 = OpConstant %uint 4096
  %uint_8192 = OpConstant %uint 8192
%float_0_400000006 = OpConstant %float 0.400000006
        %337 = OpConstantComposite %v3float %float_2 %float_0 %float_n2
        %338 = OpConstantComposite %v3float %float_n1 %float_2 %float_n1
        %339 = OpConstantComposite %v3float %float_0 %float_0 %float_0_00100000005
%float_0_899999976 = OpConstant %float 0.899999976
        %341 = OpConstantComposite %v2uint %uint_128 %uint_128
        %342 = OpConstantComposite %v2uint %uint_127 %uint_127
%uint_4294967295 = OpConstant %uint 4294967295
%float_9_99999997en07 = OpConstant %float 9.99999997e-07
        %345 = OpConstantComposite %v3float %float_9_99999997en07 %float_9_99999997en07 %float_9_99999997en07
%float_0_200000003 = OpConstant %float 0.200000003
%uint_2147483647 = OpConstant %uint 2147483647
     %v3uint = OpTypeVector %uint 3
        %349 = OpConstantComposite %v3uint %uint_2147483647 %uint_2147483647 %uint_2147483647
%float_0_600000024 = OpConstant %float 0.600000024
        %351 = OpConstantComposite %v3float %float_1 %float_0 %float_0
        %352 = OpConstantComposite %v3float %float_0 %float_1 %float_0
        %353 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_100
        %354 = OpConstantComposite %v3uint %uint_8 %uint_8 %uint_8
    %float_7 = OpConstant %float 7
        %356 = OpConstantComposite %v3float %float_9_99999996en13 %float_9_99999996en13 %float_9_99999996en13
   %uint_336 = OpConstant %uint 336
    %uint_96 = OpConstant %uint 96
   %uint_112 = OpConstant %uint 112
   %uint_144 = OpConstant %uint 144
   %uint_160 = OpConstant %uint 160
   %uint_176 = OpConstant %uint 176
   %uint_268 = OpConstant %uint 268
   %uint_272 = OpConstant %uint 272
   %uint_288 = OpConstant %uint 288
   %uint_300 = OpConstant %uint 300
   %uint_304 = OpConstant %uint 304
   %uint_312 = OpConstant %uint 312
   %uint_316 = OpConstant %uint 316
 %uint_16384 = OpConstant %uint 16384
        %371 = OpConstantComposite %v2int %int_32 %int_32
        %372 = OpConstantComposite %v2int %int_31 %int_31
%float_0_0350000001 = OpConstant %float 0.0350000001
   %float_20 = OpConstant %float 20
%float_1_57079637 = OpConstant %float 1.57079637
   %float_10 = OpConstant %float 10
%float_1_19000006 = OpConstant %float 1.19000006
%float_0_360000014 = OpConstant %float 0.360000014
%float_n3_6500001 = OpConstant %float -3.6500001
%int_532487669 = OpConstant %int 532487669
    %float_6 = OpConstant %float 6
   %float_15 = OpConstant %float 15
        %383 = OpConstantComposite %v4float %float_15 %float_15 %float_15 %float_15
        %384 = OpConstantComposite %v4float %float_10 %float_10 %float_10 %float_10
   %float_19 = OpConstant %float 19
  %float_101 = OpConstant %float 101
        %387 = OpConstantComposite %v3float %float_19 %float_47 %float_101
        %388 = OpConstantComposite %v3uint %uint_32768 %uint_16384 %uint_8192
%float_6_10351562en05 = OpConstant %float 6.10351562e-05
%float_0_000122070312 = OpConstant %float 0.000122070312
%float_0_000244140625 = OpConstant %float 0.000244140625
        %392 = OpConstantComposite %v3float %float_6_10351562en05 %float_0_000122070312 %float_0_000244140625
%float_0_2588 = OpConstant %float 0.2588
 %uint_21845 = OpConstant %uint 21845
%uint_134217728 = OpConstant %uint 134217728
 %float_n0_5 = OpConstant %float -0.5
%uint_4294967294 = OpConstant %uint 4294967294
%float_0_00313066994 = OpConstant %float 0.00313066994
%float_12_9200001 = OpConstant %float 12.9200001
%float_0_416666657 = OpConstant %float 0.416666657
%float_1_05499995 = OpConstant %float 1.05499995
%uint_1664525 = OpConstant %uint 1664525
        %403 = OpConstantComposite %v3uint %uint_1664525 %uint_1664525 %uint_1664525
%uint_1013904223 = OpConstant %uint 1013904223
        %405 = OpConstantComposite %v3uint %uint_1013904223 %uint_1013904223 %uint_1013904223
        %406 = OpConstantComposite %v3uint %uint_16 %uint_16 %uint_16
        %407 = OpConstantComposite %v3uint %uint_31 %uint_31 %uint_31
%float_0_055555556 = OpConstant %float 0.055555556
%float_2_20000005 = OpConstant %float 2.20000005
 %float_34_5 = OpConstant %float 34.5
 %float_24_5 = OpConstant %float 24.5
%float_73_1999969 = OpConstant %float 73.1999969
%float_8_89999962 = OpConstant %float 8.89999962
%float_3_5999999 = OpConstant %float 3.5999999
%float_1_00010002 = OpConstant %float 1.00010002
%int_2129859010 = OpConstant %int 2129859010
%float_0_140000001 = OpConstant %float 0.140000001
%_arr_v4float_uint_6 = OpTypeArray %v4float %uint_6
  %type_View = OpTypeStruct %mat4v4float %mat4v4float %mat4v4float %v3float %v3float %v4float %v4float %v3float %v3float %v4float %v4float %v4float %v4float %float %float %v4float %v4float %v2float %float %float %uint %float %v4float %v3float %v3float %float %_arr_v4float_uint_6 %_arr_v4float_uint_6 %int %v3float %float %uint %float %v3float %v3float %v3float %float %v3float %float %float %uint %uint
%_ptr_Uniform_type_View = OpTypePointer Uniform %type_View
%type_3d_image = OpTypeImage %uint 3D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_3d_image = OpTypePointer UniformConstant %type_3d_image
%type_3d_image_0 = OpTypeImage %float 3D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_3d_image_0 = OpTypePointer UniformConstant %type_3d_image_0
%type_2d_image = OpTypeImage %float 2D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_2d_image = OpTypePointer UniformConstant %type_2d_image
%type_sampler = OpTypeSampler
%_ptr_UniformConstant_type_sampler = OpTypePointer UniformConstant %type_sampler
      %v3int = OpTypeVector %int 3
%type_SingleLayerWater = OpTypeStruct %v4float %v4float %v2float %uint %uint
%_ptr_Uniform_type_SingleLayerWater = OpTypePointer Uniform %type_SingleLayerWater
%_runtimearr_v4float = OpTypeRuntimeArray %v4float
%type_StructuredBuffer_v4float = OpTypeStruct %_runtimearr_v4float
%_ptr_Uniform_type_StructuredBuffer_v4float = OpTypePointer Uniform %type_StructuredBuffer_v4float
%_arr_mat4v4float_uint_4 = OpTypeArray %mat4v4float %uint_4
%_arr_v4float_uint_4 = OpTypeArray %v4float %uint_4
%type_OpaqueBasePass = OpTypeStruct %uint %uint %v3int %uint %v3float %v3float %float %v3float %uint %v2float %uint %int %v4float %_arr_mat4v4float_uint_4 %_arr_v4float_uint_4 %v4float %uint %int %int
%_ptr_Uniform_type_OpaqueBasePass = OpTypePointer Uniform %type_OpaqueBasePass
%_runtimearr_uint = OpTypeRuntimeArray %uint
%type_StructuredBuffer_uint = OpTypeStruct %_runtimearr_uint
%_ptr_Uniform_type_StructuredBuffer_uint = OpTypePointer Uniform %type_StructuredBuffer_uint
%type_buffer_image = OpTypeImage %uint Buffer 2 0 0 1 R32ui
%_ptr_UniformConstant_type_buffer_image = OpTypePointer UniformConstant %type_buffer_image
%type_2d_image_array = OpTypeImage %uint 2D 2 1 0 2 R32ui
%_ptr_UniformConstant_type_2d_image_array = OpTypePointer UniformConstant %type_2d_image_array
%type_IndirectLightingCache = OpTypeStruct %v3float %v3float %v3float %v3float %float
%_ptr_Uniform_type_IndirectLightingCache = OpTypePointer Uniform %type_IndirectLightingCache
%type_ByteAddressBuffer = OpTypeStruct %_runtimearr_uint
%_ptr_Uniform_type_ByteAddressBuffer = OpTypePointer Uniform %type_ByteAddressBuffer
%type_2d_image_array_0 = OpTypeImage %uint 2D 2 1 0 1 Unknown
%_ptr_UniformConstant_type_2d_image_array_0 = OpTypePointer UniformConstant %type_2d_image_array_0
%_arr_v4float_uint_5 = OpTypeArray %v4float %uint_5
%type_MaterialCollection0 = OpTypeStruct %_arr_v4float_uint_5
%_ptr_Uniform_type_MaterialCollection0 = OpTypePointer Uniform %type_MaterialCollection0
   %uint_109 = OpConstant %uint 109
%_arr_v4float_uint_109 = OpTypeArray %v4float %uint_109
%type_Material = OpTypeStruct %_arr_v4float_uint_109
%_ptr_Uniform_type_Material = OpTypePointer Uniform %type_Material
%_ptr_Input_v4float = OpTypePointer Input %v4float
%_ptr_Input_uint = OpTypePointer Input %uint
%_ptr_Input_v3float = OpTypePointer Input %v3float
%_ptr_Input_bool = OpTypePointer Input %bool
%_ptr_Output_v4float = OpTypePointer Output %v4float
%_ptr_Output_uint = OpTypePointer Output %uint
       %void = OpTypeVoid
        %443 = OpTypeFunction %void
%_ptr_Function_v3float = OpTypePointer Function %v3float
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %v4bool = OpTypeVector %bool 4
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
%_ptr_Uniform_float = OpTypePointer Uniform %float
     %v3bool = OpTypeVector %bool 3
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
%_ptr_Uniform_int = OpTypePointer Uniform %int
%_ptr_Uniform_v3float = OpTypePointer Uniform %v3float
%type_sampled_image = OpTypeSampledImage %type_2d_image
%_ptr_Uniform_mat4v4float = OpTypePointer Uniform %mat4v4float
%type_sampled_image_0 = OpTypeSampledImage %type_3d_image_0
     %v2bool = OpTypeVector %bool 2
%_ptr_Uniform_v3int = OpTypePointer Uniform %v3int
%_ptr_Function__arr_v3float_uint_4 = OpTypePointer Function %_arr_v3float_uint_4
       %View = OpVariable %_ptr_Uniform_type_View Uniform
%View_VolumetricLightmapIndirectionTexture = OpVariable %_ptr_UniformConstant_type_3d_image UniformConstant
%View_DirectionalLightShadowingBrickTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_GlobalDistanceFieldPageAtlasTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_GlobalDistanceFieldPageTableTexture = OpVariable %_ptr_UniformConstant_type_3d_image UniformConstant
%View_PerlinNoise3DTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_PerlinNoise3DTextureSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SharedBilinearClampedSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SharedTrilinearWrappedSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_ShadingEnergyGGXSpecTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%View_ShadingEnergySampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SimpleVolumeEnvTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_SimpleVolumeEnvTextureSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%SingleLayerWater = OpVariable %_ptr_Uniform_type_SingleLayerWater Uniform
%SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%Scene_GPUScene_GPUScenePrimitiveSceneData = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%OpaqueBasePass = OpVariable %_ptr_Uniform_type_OpaqueBasePass Uniform
%OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%OpaqueBasePass_Shared_Forward_ShadowmapSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%OpaqueBasePass_Shared_Forward_NumCulledLightsGrid = OpVariable %_ptr_Uniform_type_StructuredBuffer_uint Uniform
%OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit = OpVariable %_ptr_UniformConstant_type_buffer_image UniformConstant
%OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs = OpVariable %_ptr_UniformConstant_type_2d_image_array UniformConstant
%OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%OpaqueBasePass_PreIntegratedGFTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%IndirectLightingCache = OpVariable %_ptr_Uniform_type_IndirectLightingCache Uniform
%IndirectLightingCache_IndirectLightingCacheTexture0 = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%IndirectLightingCache_IndirectLightingCacheTexture1 = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%IndirectLightingCache_IndirectLightingCacheTexture2 = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%IndirectLightingCache_IndirectLightingCacheTextureSampler0 = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%VirtualShadowMap_ProjectionData = OpVariable %_ptr_Uniform_type_ByteAddressBuffer Uniform
%VirtualShadowMap_PageTable = OpVariable %_ptr_Uniform_type_StructuredBuffer_uint Uniform
%VirtualShadowMap_PhysicalPagePool = OpVariable %_ptr_UniformConstant_type_2d_image_array_0 UniformConstant
%MaterialCollection0 = OpVariable %_ptr_Uniform_type_MaterialCollection0 Uniform
   %Material = OpVariable %_ptr_Uniform_type_Material Uniform
%in_var_TEXCOORD10_centroid = OpVariable %_ptr_Input_v4float Input
%in_var_TEXCOORD11_centroid = OpVariable %_ptr_Input_v4float Input
%in_var_PRIMITIVE_ID = OpVariable %_ptr_Input_uint Input
%in_var_TEXCOORD9 = OpVariable %_ptr_Input_v3float Input
%gl_FragCoord = OpVariable %_ptr_Input_v4float Input
%gl_FrontFacing = OpVariable %_ptr_Input_bool Input
%out_var_SV_Target0 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target1 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target2 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target3 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target4 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target5 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target6 = OpVariable %_ptr_Output_uint Output
        %457 = OpUndef %v3float
        %458 = OpConstantNull %uint
        %459 = OpConstantNull %v4float
        %460 = OpConstantNull %v3float
        %461 = OpConstantNull %float
%float_0_03125 = OpConstant %float 0.03125
        %463 = OpConstantComposite %v3float %float_0_03125 %float_0_03125 %float_0_03125
%float_32_6650009 = OpConstant %float 32.6650009
%float_11_8149996 = OpConstant %float 11.8149996
        %466 = OpConstantComposite %v2float %float_32_6650009 %float_11_8149996
        %467 = OpConstantComposite %v2float %float_0_0671105608 %float_0_00583714992
%float_0_00787401572 = OpConstant %float 0.00787401572
%float_n0_488602996 = OpConstant %float -0.488602996
%float_2_09439516 = OpConstant %float 2.09439516
%float_16384 = OpConstant %float 16384
%float_0_318309873 = OpConstant %float 0.318309873
   %float_n0 = OpConstant %float -0
%float_n0_156582996 = OpConstant %float -0.156582996
%float_n0_0699428469 = OpConstant %float -0.0699428469
%float_0_997551024 = OpConstant %float 0.997551024
%float_1_41421354 = OpConstant %float 1.41421354
%float_2_50662827 = OpConstant %float 2.50662827
%float_0_0465205647 = OpConstant %float 0.0465205647
%float_0_953479409 = OpConstant %float 0.953479409
%float_12_566371 = OpConstant %float 12.566371
%float_0_0795774683 = OpConstant %float 0.0795774683
%float_32256 = OpConstant %float 32256
        %484 = OpConstantComposite %v3float %float_32256 %float_32256 %float_32256
%uint_4294967293 = OpConstant %uint 4294967293
%uint_4294902015 = OpConstant %uint 4294902015
%float_0_0454545468 = OpConstant %float 0.0454545468
%float_0_0625 = OpConstant %float 0.0625
%float_0_909090936 = OpConstant %float 0.909090936
%float_0_875 = OpConstant %float 0.875
%uint_4287627263 = OpConstant %uint 4287627263
%uint_4169138175 = OpConstant %uint 4169138175
%uint_4294901760 = OpConstant %uint 4294901760
%uint_4294967263 = OpConstant %uint 4294967263
%uint_4294901759 = OpConstant %uint 4294901759
        %496 = OpConstantComposite %v3float %float_0_0454545468 %float_0_0454545468 %float_0_0625
        %497 = OpConstantComposite %v3float %float_0_909090936 %float_0_909090936 %float_0_875
        %498 = OpConstantComposite %v3float %float_0_318309873 %float_0_318309873 %float_0_318309873
%uint_4194303 = OpConstant %uint 4194303
        %500 = OpConstantComposite %v3uint %uint_1 %uint_1 %uint_1
%uint_16711680 = OpConstant %uint 16711680
    %uint_72 = OpConstant %uint 72
        %503 = OpConstantComposite %v3float %float_n1 %float_n1 %float_n0
%float_9_53674316en07 = OpConstant %float 9.53674316e-07
%float_n2_097152e_11 = OpConstant %float -2.097152e+11
%float_0_000100000005 = OpConstant %float 0.000100000005
        %507 = OpConstantComposite %v3float %float_0_000100000005 %float_0_000100000005 %float_0_000100000005
%float_0_000200000009 = OpConstant %float 0.000200000009
        %509 = OpConstantComposite %v3float %float_0_000200000009 %float_0_000200000009 %float_0_000200000009
        %510 = OpConstantComposite %v3float %float_n0_5 %float_n0_5 %float_n0_5
%float_4194_3042 = OpConstant %float 4194.3042
%float_0_0333333351 = OpConstant %float 0.0333333351
%float_3_125 = OpConstant %float 3.125
%float_0_636619747 = OpConstant %float 0.636619747
%float_0_00158730161 = OpConstant %float 0.00158730161
%uint_1048576 = OpConstant %uint 1048576
%float_0_0158730168 = OpConstant %float 0.0158730168
%float_0_999600053 = OpConstant %float 0.999600053
        %519 = OpConstantComposite %v3float %float_0_999600053 %float_0_999600053 %float_0_999600053
%float_1_52590219en05 = OpConstant %float 1.52590219e-05
        %521 = OpConstantComposite %v3float %float_1_52590219en05 %float_1_52590219en05 %float_1_52590219en05
%float_0_0666666701 = OpConstant %float 0.0666666701
        %523 = OpConstantComposite %v3float %float_0_0666666701 %float_0_0666666701 %float_0_0666666701
        %524 = OpConstantComposite %v3float %float_0_0625 %float_0_0625 %float_0_0625
        %525 = OpConstantComposite %v3float %float_0_00787401572 %float_0_00787401572 %float_0_00787401572
        %526 = OpConstantComposite %v2float %float_n0_5 %float_n0_5
%float_n6_28318548 = OpConstant %float -6.28318548
%float_0_139885694 = OpConstant %float 0.139885694
%float_n0_800000012 = OpConstant %float -0.800000012
%float_n3_98000002 = OpConstant %float -3.98000002
%float_n16_7800007 = OpConstant %float -16.7800007
%float_n0_75 = OpConstant %float -0.75
  %float_n59 = OpConstant %float -59
%float_n21_2000008 = OpConstant %float -21.2000008
%float_n0_0549999997 = OpConstant %float -0.0549999997
 %float_n127 = OpConstant %float -127
        %537 = OpUndef %v3float
        %538 = OpUndef %v3uint
        %539 = OpUndef %v4float
        %540 = OpUndef %mat4v4float
        %541 = OpUndef %v3float
        %542 = OpConstantComposite %v4float %float_0 %461 %461 %461
%float_0_886227548 = OpConstant %float 0.886227548
   %float_66 = OpConstant %float 66
  %float_120 = OpConstant %float 120
  %float_148 = OpConstant %float 148
  %float_167 = OpConstant %float 167
        %548 = OpUndef %float
        %549 = OpUndef %v3uint
        %550 = OpUndef %v4float
        %551 = OpUndef %v3float
        %552 = OpUndef %v2float
        %553 = OpConstantComposite %v3float %461 %461 %461
        %554 = OpConstantComposite %v3bool %true %true %true
        %555 = OpConstantComposite %v3bool %false %false %false
        %556 = OpConstantComposite %v2float %461 %float_0
  %uint_8194 = OpConstant %uint 8194
%float_1_53787023en05 = OpConstant %float 1.53787023e-05
        %559 = OpConstantComposite %v2float %461 %461
%uint_2130706432 = OpConstant %uint 2130706432
    %uint_23 = OpConstant %uint 23
    %uint_30 = OpConstant %uint 30
    %uint_27 = OpConstant %uint 27
    %uint_28 = OpConstant %uint 28
    %uint_29 = OpConstant %uint 29
    %uint_39 = OpConstant %uint 39
    %uint_38 = OpConstant %uint 38
    %uint_33 = OpConstant %uint 33
    %uint_34 = OpConstant %uint 34
    %uint_35 = OpConstant %uint 35
    %uint_36 = OpConstant %uint 36
    %uint_37 = OpConstant %uint 37
    %uint_13 = OpConstant %uint 13
    %uint_21 = OpConstant %uint 21

               ; Function MainPS
     %MainPS = OpFunction %void None %443
        %575 = OpLabel
        %576 = OpVariable %_ptr_Function__arr_v3float_uint_4 Function
        %577 = OpVariable %_ptr_Function__arr_v3float_uint_4 Function
        %578 = OpLoad %v4float %in_var_TEXCOORD11_centroid
        %579 = OpLoad %uint %in_var_PRIMITIVE_ID
        %580 = OpLoad %v3float %in_var_TEXCOORD9
        %581 = OpLoad %v4float %gl_FragCoord
        %582 = OpCompositeExtract %float %581 3
        %583 = OpFDiv %float %float_1 %582
        %584 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_0
        %585 = OpLoad %mat4v4float %584
        %586 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_1
        %587 = OpLoad %mat4v4float %586
        %588 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_2
        %589 = OpLoad %mat4v4float %588
        %590 = OpAccessChain %_ptr_Uniform_v3float %View %uint_3
        %591 = OpLoad %v3float %590
        %592 = OpAccessChain %_ptr_Uniform_v3float %View %uint_4
        %593 = OpLoad %v3float %592
        %594 = OpAccessChain %_ptr_Uniform_v4float %View %uint_6
        %595 = OpLoad %v4float %594
        %596 = OpAccessChain %_ptr_Uniform_v3float %View %uint_7
        %597 = OpLoad %v3float %596
        %598 = OpAccessChain %_ptr_Uniform_v3float %View %uint_8
        %599 = OpLoad %v3float %598
        %600 = OpAccessChain %_ptr_Uniform_v4float %View %uint_9
        %601 = OpLoad %v4float %600
        %602 = OpAccessChain %_ptr_Uniform_v4float %View %uint_10
        %603 = OpLoad %v4float %602
        %604 = OpAccessChain %_ptr_Uniform_v4float %View %uint_12
        %605 = OpLoad %v4float %604
        %606 = OpAccessChain %_ptr_Uniform_float %View %uint_14
        %607 = OpLoad %float %606
        %608 = OpAccessChain %_ptr_Uniform_v4float %View %uint_15
        %609 = OpLoad %v4float %608
        %610 = OpAccessChain %_ptr_Uniform_v4float %View %uint_16
        %611 = OpLoad %v4float %610
        %612 = OpAccessChain %_ptr_Uniform_v2float %View %uint_17
        %613 = OpLoad %v2float %612
        %614 = OpAccessChain %_ptr_Uniform_v4float %View %uint_22
        %615 = OpLoad %v4float %614
        %616 = OpAccessChain %_ptr_Uniform_v3float %View %uint_23
        %617 = OpLoad %v3float %616
        %618 = OpFNegate %v3float %591
        %619 = OpVectorShuffle %v3float %578 %578 0 1 2
        %620 = OpVectorShuffle %v2float %581 %581 0 1
        %621 = OpVectorShuffle %v2float %601 %601 0 1
        %622 = OpFSub %v2float %620 %621
        %623 = OpVectorShuffle %v2float %603 %603 2 3
        %624 = OpExtInst %v2float %1 Fma %622 %623 %526
        %625 = OpFMul %v2float %624 %155
        %626 = OpCompositeExtract %float %625 0
        %627 = OpCompositeExtract %float %625 1
        %628 = OpCompositeConstruct %v4float %626 %627 %548 %float_1
        %629 = OpVectorTimesScalar %v4float %628 %583
        %630 = OpCompositeExtract %float %581 0
        %631 = OpCompositeExtract %float %581 1
        %632 = OpCompositeExtract %float %581 2
        %633 = OpCompositeConstruct %v4float %630 %631 %632 %float_1
        %634 = OpMatrixTimesVector %v4float %589 %633
        %635 = OpVectorShuffle %v3float %634 %634 0 1 2
        %636 = OpCompositeExtract %float %634 3
        %637 = OpCompositeConstruct %v3float %636 %636 %636
        %638 = OpFDiv %v3float %635 %637
        %639 = OpFSub %v3float %638 %599
        %640 = OpFSub %v3float %580 %599
        %641 = OpVectorShuffle %v2float %629 %629 0 1
        %642 = OpCompositeExtract %float %629 3
        %643 = OpCompositeConstruct %v2float %642 %642
        %644 = OpFDiv %v2float %641 %643
        %645 = OpVectorShuffle %v2float %595 %595 0 1
        %646 = OpVectorShuffle %v2float %595 %595 3 2
        %647 = OpExtInst %v2float %1 Fma %644 %645 %646
        %648 = OpCompositeExtract %float %587 3 3
        %649 = OpFOrdGreaterThanEqual %bool %648 %float_1
               OpSelectionMerge %650 None
               OpBranchConditional %649 %651 %652
        %652 = OpLabel
        %653 = OpFNegate %v3float %638
        %654 = OpExtInst %v3float %1 Normalize %653
               OpBranch %650
        %651 = OpLabel
        %655 = OpFNegate %v3float %593
               OpBranch %650
        %650 = OpLabel
        %656 = OpPhi %v3float %654 %652 %655 %651
        %657 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_4
        %658 = OpLoad %v4float %657
        %659 = OpCompositeExtract %float %658 0
        %660 = OpCompositeExtract %float %658 1
        %661 = OpCompositeExtract %float %658 2
        %662 = OpCompositeConstruct %v3float %659 %660 %661
        %663 = OpFMul %v3float %591 %503
        %664 = OpFNegate %v3float %639
        %665 = OpExtInst %v3float %1 Fma %664 %137 %662
        %666 = OpCompositeExtract %float %663 0
        %667 = OpCompositeExtract %float %665 0
        %668 = OpFMul %float %667 %float_4_76837158en07
        %669 = OpExtInst %float %1 Fma %667 %float_9_53674316en07 %666
        %670 = OpCompositeExtract %float %663 1
        %671 = OpCompositeExtract %float %665 1
        %672 = OpFMul %float %671 %float_4_76837158en07
        %673 = OpExtInst %float %1 Fma %671 %float_9_53674316en07 %670
        %674 = OpFMul %float %670 %673
        %675 = OpFMul %float %671 %672
        %676 = OpCompositeExtract %float %663 2
        %677 = OpCompositeExtract %float %665 2
        %678 = OpFMul %float %677 %float_4_76837158en07
        %679 = OpExtInst %float %1 Fma %677 %float_9_53674316en07 %676
        %680 = OpExtInst %float %1 Fma %666 %669 %674
        %681 = OpExtInst %float %1 Fma %667 %668 %675
        %682 = OpExtInst %float %1 Fma %676 %679 %680
        %683 = OpExtInst %float %1 Fma %677 %678 %681
        %684 = OpExtInst %float %1 Fma %683 %float_4_76837158en07 %682
        %685 = OpExtInst %float %1 Sqrt %684
        %686 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_1
        %687 = OpLoad %v4float %686
        %688 = OpCompositeExtract %float %687 0
        %689 = OpExtInst %float %1 NMax %float_9_99999975en06 %688
        %690 = OpFDiv %float %float_1 %689
        %691 = OpFMul %float %685 %690
        %692 = OpExtInst %float %1 Fma %691 %float_n2_097152e_11 %float_100000
        %693 = OpExtInst %float %1 FClamp %692 %float_0 %float_1
        %694 = OpExtInst %float %1 FMix %float_1 %float_0 %693
        %695 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_86 %int_2
        %696 = OpLoad %float %695
        %697 = OpCompositeConstruct %v3float %696 %696 %696
        %698 = OpFMul %v3float %639 %697
        %699 = OpVectorTimesScalar %v3float %698 %float_4_76837158en07
        %700 = OpFAdd %v3float %699 %140
        %701 = OpExtInst %v3float %1 Fma %591 %697 %700
        %702 = OpExtInst %v3float %1 Floor %701
        %703 = OpFNegate %v3float %702
        %704 = OpExtInst %v3float %1 Fma %591 %697 %703
        %705 = OpVectorTimesScalar %v3float %704 %float_2097152
        %706 = OpExtInst %v3float %1 Fma %639 %697 %705
        %707 = OpVectorTimesScalar %v3float %706 %float_1
               OpBranch %708
        %708 = OpLabel
        %709 = OpPhi %v3float %707 %650 %710 %711
        %712 = OpPhi %float %float_1 %650 %713 %711
        %714 = OpPhi %float %float_0 %650 %715 %711
        %716 = OpPhi %uint %uint_0 %650 %717 %711
        %718 = OpULessThan %bool %716 %uint_6
               OpLoopMerge %719 %711 DontUnroll
               OpBranchConditional %718 %711 %719
        %711 = OpLabel
        %720 = OpFMul %v3float %709 %523
        %721 = OpExtInst %v3float %1 Fract %720
        %722 = OpVectorTimesScalar %v3float %721 %float_15
        %723 = OpExtInst %v3float %1 Fract %722
        %724 = OpFSub %v3float %722 %723
        %725 = OpCompositeExtract %float %723 0
        %726 = OpCompositeExtract %float %723 1
        %727 = OpCompositeExtract %float %723 2
        %728 = OpCompositeConstruct %v4float %725 %726 %727 %float_0
        %729 = OpFMul %v4float %728 %728
        %730 = OpFMul %v4float %729 %728
        %731 = OpVectorTimesScalar %v4float %728 %float_6
        %732 = OpFSub %v4float %731 %383
        %733 = OpExtInst %v4float %1 Fma %728 %732 %384
        %734 = OpFMul %v4float %730 %733
        %735 = OpVectorShuffle %v3float %734 %734 0 1 2
        %736 = OpFAdd %v3float %724 %735
        %737 = OpLoad %type_3d_image_0 %View_PerlinNoise3DTexture
        %738 = OpLoad %type_sampler %View_PerlinNoise3DTextureSampler
        %739 = OpExtInst %v3float %1 Fma %736 %524 %463
        %740 = OpSampledImage %type_sampled_image_0 %737 %738
        %741 = OpImageSampleExplicitLod %v4float %740 %739 Lod %float_0
        %742 = OpVectorShuffle %v3float %741 %741 0 1 2
        %743 = OpVectorTimesScalar %v3float %742 %float_255
        %744 = OpExtInst %v3float %1 Fma %743 %525 %282
        %745 = OpCompositeExtract %float %741 3
        %746 = OpExtInst %float %1 Fma %745 %float_255 %float_n127
        %747 = OpDot %float %722 %744
        %748 = OpFSub %float %747 %746
        %749 = OpExtInst %float %1 FAbs %748
        %715 = OpExtInst %float %1 Fma %749 %712 %714
        %710 = OpVectorTimesScalar %v3float %709 %float_2
        %713 = OpFMul %float %712 %float_0_5
        %717 = OpIAdd %uint %716 %uint_1
               OpBranch %708
        %719 = OpLabel
        %750 = OpExtInst %float %1 FMix %float_n1 %float_1 %714
        %751 = OpExtInst %float %1 FClamp %750 %float_0 %float_1
        %752 = OpExtInst %v3float %1 Fma %591 %137 %663
        %753 = OpFMul %v3float %639 %503
        %754 = OpExtInst %v3float %1 Fma %597 %137 %753
        %755 = OpVectorTimesScalar %v3float %752 %float_2097152
        %756 = OpFAdd %v3float %755 %754
        %757 = OpExtInst %float %1 Length %756
        %758 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_0
        %759 = OpLoad %v4float %758
        %760 = OpCompositeExtract %float %759 0
        %761 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_85 %int_1
        %762 = OpLoad %float %761
        %763 = OpFMul %float %760 %762
        %764 = OpExtInst %float %1 NMax %float_9_99999975en06 %763
        %765 = OpFDiv %float %float_1 %764
        %766 = OpFNegate %float %757
        %767 = OpExtInst %float %1 Fma %766 %765 %float_1
        %768 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_86 %int_1
        %769 = OpLoad %float %768
        %770 = OpFMul %float %767 %769
        %771 = OpExtInst %float %1 FClamp %770 %float_0 %float_1
        %772 = OpExtInst %float %1 FMix %751 %float_1 %771
        %773 = OpFAdd %v3float %591 %618
        %774 = OpVectorTimesScalar %v3float %773 %float_2097152
        %775 = OpFAdd %v3float %774 %638
               OpBranch %776
        %776 = OpLabel
        %777 = OpPhi %v3uint %538 %719 %778 %779
        %780 = OpPhi %uint %uint_0 %719 %781 %779
        %782 = OpPhi %float %float_0 %719 %783 %779
        %784 = OpAccessChain %_ptr_Uniform_uint %View %uint_31
        %785 = OpLoad %uint %784
        %786 = OpULessThan %bool %780 %785
               OpLoopMerge %787 %779 None
               OpBranchConditional %786 %788 %787
        %788 = OpLabel
        %789 = OpAccessChain %_ptr_Uniform_v4float %View %uint_26 %780
        %790 = OpLoad %v4float %789
        %791 = OpVectorShuffle %v3float %790 %790 0 1 2
        %792 = OpVectorShuffle %v3float %790 %790 3 3 3
        %793 = OpFSub %v3float %775 %791
        %794 = OpFAdd %v3float %793 %792
        %795 = OpExtInst %v3float %1 NMax %794 %105
        %796 = OpFAdd %v3float %791 %792
        %797 = OpFSub %v3float %796 %775
        %798 = OpExtInst %v3float %1 NMax %797 %105
        %799 = OpExtInst %v3float %1 NMin %795 %798
        %800 = OpCompositeExtract %float %799 0
        %801 = OpCompositeExtract %float %799 1
        %802 = OpCompositeExtract %float %799 2
        %803 = OpExtInst %float %1 NMin %801 %802
        %804 = OpExtInst %float %1 NMin %800 %803
        %805 = OpAccessChain %_ptr_Uniform_float %View %uint_26 %780 %int_3
        %806 = OpLoad %float %805
        %807 = OpAccessChain %_ptr_Uniform_float %View %uint_30
        %808 = OpLoad %float %807
        %809 = OpFMul %float %806 %808
        %783 = OpFMul %float %float_8 %809
        %810 = OpFOrdGreaterThan %bool %804 %809
               OpSelectionMerge %811 None
               OpBranchConditional %810 %812 %811
        %812 = OpLabel
        %813 = OpAccessChain %_ptr_Uniform_v4float %View %uint_27 %780
        %814 = OpLoad %v4float %813
        %815 = OpVectorShuffle %v3float %814 %814 3 3 3
        %816 = OpVectorShuffle %v3float %814 %814 0 1 2
        %817 = OpExtInst %v3float %1 Fma %775 %815 %816
        %818 = OpExtInst %v3float %1 Fract %817
        %819 = OpExtInst %v3float %1 Fract %818
        %820 = OpExtInst %v3float %1 FClamp %819 %105 %130
        %821 = OpAccessChain %_ptr_Uniform_int %View %uint_28
        %822 = OpLoad %int %821
        %823 = OpConvertSToF %float %822
        %824 = OpVectorTimesScalar %v3float %820 %823
        %825 = OpBitcast %uint %822
        %826 = OpIMul %uint %780 %825
        %827 = OpBitcast %int %826
        %828 = OpCompositeConstruct %v3int %int_0 %int_0 %827
        %829 = OpConvertSToF %v3float %828
        %830 = OpFAdd %v3float %824 %829
        %831 = OpCompositeExtract %float %830 0
        %832 = OpCompositeExtract %float %830 1
        %833 = OpCompositeExtract %float %830 2
        %834 = OpConvertFToS %int %831
        %835 = OpConvertFToS %int %832
        %836 = OpConvertFToS %int %833
        %837 = OpCompositeConstruct %v4int %834 %835 %836 %int_0
        %838 = OpVectorShuffle %v3int %837 %837 0 1 2
        %839 = OpLoad %type_3d_image %View_GlobalDistanceFieldPageTableTexture
        %840 = OpImageFetch %v4uint %839 %838 Lod %int_0
        %841 = OpCompositeExtract %uint %840 0
        %842 = OpBitwiseAnd %uint %841 %uint_16777215
        %843 = OpULessThan %bool %841 %uint_4294967295
               OpSelectionMerge %844 None
               OpBranchConditional %843 %845 %844
        %845 = OpLabel
        %846 = OpBitwiseAnd %uint %842 %uint_127
        %847 = OpCompositeInsert %v3uint %846 %777 0
        %848 = OpShiftRightLogical %uint %842 %uint_7
        %849 = OpBitwiseAnd %uint %848 %uint_127
        %850 = OpCompositeInsert %v3uint %849 %847 1
        %851 = OpShiftRightLogical %uint %842 %uint_14
        %852 = OpCompositeInsert %v3uint %851 %850 2
        %853 = OpVectorTimesScalar %v3float %819 %823
        %854 = OpExtInst %v3float %1 Fract %853
        %855 = OpIMul %v3uint %852 %354
        %856 = OpConvertUToF %v3float %855
        %857 = OpVectorTimesScalar %v3float %854 %float_7
        %858 = OpFAdd %v3float %856 %857
        %859 = OpFAdd %v3float %858 %140
        %860 = OpAccessChain %_ptr_Uniform_v3float %View %uint_29
        %861 = OpLoad %v3float %860
        %862 = OpFMul %v3float %859 %861
        %863 = OpLoad %type_3d_image_0 %View_GlobalDistanceFieldPageAtlasTexture
        %864 = OpLoad %type_sampler %View_SharedTrilinearWrappedSampler
        %865 = OpSampledImage %type_sampled_image_0 %863 %864
        %866 = OpImageSampleExplicitLod %v4float %865 %862 Lod %float_0
        %867 = OpCompositeExtract %float %866 0
        %868 = OpFOrdLessThan %bool %867 %float_1
               OpSelectionMerge %869 None
               OpBranchConditional %868 %870 %869
        %870 = OpLabel
        %871 = OpExtInst %float %1 Fma %867 %float_2 %float_n1
        %872 = OpFMul %float %871 %783
               OpBranch %787
        %869 = OpLabel
               OpBranch %844
        %844 = OpLabel
        %873 = OpPhi %v3uint %777 %812 %852 %869
               OpBranch %811
        %811 = OpLabel
        %778 = OpPhi %v3uint %777 %788 %873 %844
               OpBranch %779
        %779 = OpLabel
        %781 = OpIAdd %uint %780 %uint_1
               OpBranch %776
        %787 = OpLabel
        %874 = OpPhi %float %782 %776 %872 %870
        %875 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_0
        %876 = OpLoad %float %875
        %877 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_1
        %878 = OpLoad %float %877
        %879 = OpFNegate %float %878
        %880 = OpExtInst %float %1 Fma %874 %876 %879
        %881 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_88 %int_0
        %882 = OpLoad %float %881
        %883 = OpFMul %float %880 %882
        %884 = OpExtInst %float %1 Fma %883 %float_n1 %float_1
        %885 = OpExtInst %float %1 FClamp %884 %float_0 %float_1
               OpBranch %886
        %886 = OpLabel
        %887 = OpPhi %v3uint %538 %787 %888 %889
        %890 = OpPhi %uint %uint_0 %787 %891 %889
        %892 = OpULessThan %bool %890 %785
               OpLoopMerge %893 %889 None
               OpBranchConditional %892 %894 %893
        %894 = OpLabel
        %895 = OpAccessChain %_ptr_Uniform_v4float %View %uint_26 %890
        %896 = OpAccessChain %_ptr_Uniform_float %View %uint_26 %890 %int_3
        %897 = OpLoad %float %896
        %898 = OpAccessChain %_ptr_Uniform_float %View %uint_30
        %899 = OpLoad %float %898
        %900 = OpFMul %float %897 %899
        %901 = OpLoad %v4float %895
        %902 = OpVectorShuffle %v3float %901 %901 0 1 2
        %903 = OpVectorShuffle %v3float %901 %901 3 3 3
        %904 = OpFSub %v3float %775 %902
        %905 = OpFAdd %v3float %904 %903
        %906 = OpExtInst %v3float %1 NMax %905 %105
        %907 = OpFAdd %v3float %902 %903
        %908 = OpFSub %v3float %907 %775
        %909 = OpExtInst %v3float %1 NMax %908 %105
        %910 = OpExtInst %v3float %1 NMin %906 %909
        %911 = OpCompositeExtract %float %910 0
        %912 = OpCompositeExtract %float %910 1
        %913 = OpCompositeExtract %float %910 2
        %914 = OpExtInst %float %1 NMin %912 %913
        %915 = OpExtInst %float %1 NMin %911 %914
        %916 = OpFOrdGreaterThanEqual %bool %915 %900
               OpSelectionMerge %917 None
               OpBranchConditional %916 %918 %917
        %918 = OpLabel
        %919 = OpAccessChain %_ptr_Uniform_v4float %View %uint_27 %890
        %920 = OpLoad %v4float %919
        %921 = OpVectorShuffle %v3float %920 %920 3 3 3
        %922 = OpVectorShuffle %v3float %920 %920 0 1 2
        %923 = OpExtInst %v3float %1 Fma %775 %921 %922
        %924 = OpExtInst %v3float %1 Fract %923
        %925 = OpExtInst %v3float %1 Fract %924
        %926 = OpExtInst %v3float %1 FClamp %925 %105 %130
        %927 = OpAccessChain %_ptr_Uniform_int %View %uint_28
        %928 = OpLoad %int %927
        %929 = OpConvertSToF %float %928
        %930 = OpVectorTimesScalar %v3float %926 %929
        %931 = OpBitcast %uint %928
        %932 = OpIMul %uint %890 %931
        %933 = OpBitcast %int %932
        %934 = OpCompositeConstruct %v3int %int_0 %int_0 %933
        %935 = OpConvertSToF %v3float %934
        %936 = OpFAdd %v3float %930 %935
        %937 = OpCompositeExtract %float %936 0
        %938 = OpCompositeExtract %float %936 1
        %939 = OpCompositeExtract %float %936 2
        %940 = OpConvertFToS %int %937
        %941 = OpConvertFToS %int %938
        %942 = OpConvertFToS %int %939
        %943 = OpCompositeConstruct %v4int %940 %941 %942 %int_0
        %944 = OpVectorShuffle %v3int %943 %943 0 1 2
        %945 = OpLoad %type_3d_image %View_GlobalDistanceFieldPageTableTexture
        %946 = OpImageFetch %v4uint %945 %944 Lod %int_0
        %947 = OpCompositeExtract %uint %946 0
        %948 = OpBitwiseAnd %uint %947 %uint_16777215
        %949 = OpULessThan %bool %947 %uint_4294967295
               OpSelectionMerge %950 None
               OpBranchConditional %949 %951 %950
        %951 = OpLabel
        %952 = OpBitwiseAnd %uint %948 %uint_127
        %953 = OpCompositeInsert %v3uint %952 %887 0
        %954 = OpShiftRightLogical %uint %948 %uint_7
        %955 = OpBitwiseAnd %uint %954 %uint_127
        %956 = OpCompositeInsert %v3uint %955 %953 1
        %957 = OpShiftRightLogical %uint %948 %uint_14
        %958 = OpCompositeInsert %v3uint %957 %956 2
        %959 = OpVectorTimesScalar %v3float %925 %929
        %960 = OpExtInst %v3float %1 Fract %959
        %961 = OpIMul %v3uint %958 %354
        %962 = OpConvertUToF %v3float %961
        %963 = OpVectorTimesScalar %v3float %960 %float_7
        %964 = OpFAdd %v3float %962 %963
        %965 = OpFAdd %v3float %964 %140
        %966 = OpAccessChain %_ptr_Uniform_v3float %View %uint_29
        %967 = OpLoad %v3float %966
        %968 = OpFMul %v3float %965 %967
        %969 = OpLoad %type_3d_image_0 %View_GlobalDistanceFieldPageAtlasTexture
        %970 = OpLoad %type_sampler %View_SharedTrilinearWrappedSampler
        %971 = OpSampledImage %type_sampled_image_0 %969 %970
        %972 = OpImageSampleExplicitLod %v4float %971 %968 Lod %float_0
        %973 = OpCompositeExtract %float %972 0
        %974 = OpFOrdLessThan %bool %973 %float_0_899999976
               OpSelectionMerge %975 None
               OpBranchConditional %974 %976 %975
        %976 = OpLabel
        %977 = OpFMul %float %float_0_5 %899
        %978 = OpCompositeConstruct %v3float %977 %float_0 %float_0
        %979 = OpFAdd %v3float %925 %978
        %980 = OpExtInst %v3float %1 Fract %979
        %981 = OpExtInst %v3float %1 FClamp %980 %105 %130
        %982 = OpVectorTimesScalar %v3float %981 %929
        %983 = OpFAdd %v3float %982 %935
        %984 = OpCompositeExtract %float %983 0
        %985 = OpCompositeExtract %float %983 1
        %986 = OpCompositeExtract %float %983 2
        %987 = OpConvertFToS %int %984
        %988 = OpConvertFToS %int %985
        %989 = OpConvertFToS %int %986
        %990 = OpCompositeConstruct %v4int %987 %988 %989 %int_0
        %991 = OpVectorShuffle %v3int %990 %990 0 1 2
        %992 = OpImageFetch %v4uint %945 %991 Lod %int_0
        %993 = OpCompositeExtract %uint %992 0
        %994 = OpBitwiseAnd %uint %993 %uint_16777215
        %995 = OpULessThan %bool %993 %uint_4294967295
               OpSelectionMerge %996 None
               OpBranchConditional %995 %997 %996
        %997 = OpLabel
        %998 = OpBitwiseAnd %uint %994 %uint_127
        %999 = OpCompositeInsert %v3uint %998 %538 0
       %1000 = OpShiftRightLogical %uint %994 %uint_7
       %1001 = OpBitwiseAnd %uint %1000 %uint_127
       %1002 = OpCompositeInsert %v3uint %1001 %999 1
       %1003 = OpShiftRightLogical %uint %994 %uint_14
       %1004 = OpCompositeInsert %v3uint %1003 %1002 2
       %1005 = OpVectorTimesScalar %v3float %980 %929
       %1006 = OpExtInst %v3float %1 Fract %1005
       %1007 = OpIMul %v3uint %1004 %354
       %1008 = OpConvertUToF %v3float %1007
       %1009 = OpVectorTimesScalar %v3float %1006 %float_7
       %1010 = OpFAdd %v3float %1008 %1009
       %1011 = OpFAdd %v3float %1010 %140
       %1012 = OpFMul %v3float %1011 %967
       %1013 = OpSampledImage %type_sampled_image_0 %969 %970
       %1014 = OpImageSampleExplicitLod %v4float %1013 %1012 Lod %float_0
       %1015 = OpCompositeExtract %float %1014 0
               OpBranch %996
        %996 = OpLabel
       %1016 = OpPhi %float %float_1 %976 %1015 %997
       %1017 = OpFMul %float %899 %float_n0_5
       %1018 = OpCompositeConstruct %v3float %1017 %float_0 %float_0
       %1019 = OpFAdd %v3float %925 %1018
       %1020 = OpExtInst %v3float %1 Fract %1019
       %1021 = OpExtInst %v3float %1 FClamp %1020 %105 %130
       %1022 = OpVectorTimesScalar %v3float %1021 %929
       %1023 = OpFAdd %v3float %1022 %935
       %1024 = OpCompositeExtract %float %1023 0
       %1025 = OpCompositeExtract %float %1023 1
       %1026 = OpCompositeExtract %float %1023 2
       %1027 = OpConvertFToS %int %1024
       %1028 = OpConvertFToS %int %1025
       %1029 = OpConvertFToS %int %1026
       %1030 = OpCompositeConstruct %v4int %1027 %1028 %1029 %int_0
       %1031 = OpVectorShuffle %v3int %1030 %1030 0 1 2
       %1032 = OpImageFetch %v4uint %945 %1031 Lod %int_0
       %1033 = OpCompositeExtract %uint %1032 0
       %1034 = OpBitwiseAnd %uint %1033 %uint_16777215
       %1035 = OpULessThan %bool %1033 %uint_4294967295
               OpSelectionMerge %1036 None
               OpBranchConditional %1035 %1037 %1036
       %1037 = OpLabel
       %1038 = OpBitwiseAnd %uint %1034 %uint_127
       %1039 = OpCompositeInsert %v3uint %1038 %538 0
       %1040 = OpShiftRightLogical %uint %1034 %uint_7
       %1041 = OpBitwiseAnd %uint %1040 %uint_127
       %1042 = OpCompositeInsert %v3uint %1041 %1039 1
       %1043 = OpShiftRightLogical %uint %1034 %uint_14
       %1044 = OpCompositeInsert %v3uint %1043 %1042 2
       %1045 = OpVectorTimesScalar %v3float %1020 %929
       %1046 = OpExtInst %v3float %1 Fract %1045
       %1047 = OpIMul %v3uint %1044 %354
       %1048 = OpConvertUToF %v3float %1047
       %1049 = OpVectorTimesScalar %v3float %1046 %float_7
       %1050 = OpFAdd %v3float %1048 %1049
       %1051 = OpFAdd %v3float %1050 %140
       %1052 = OpFMul %v3float %1051 %967
       %1053 = OpSampledImage %type_sampled_image_0 %969 %970
       %1054 = OpImageSampleExplicitLod %v4float %1053 %1052 Lod %float_0
       %1055 = OpCompositeExtract %float %1054 0
               OpBranch %1036
       %1036 = OpLabel
       %1056 = OpPhi %float %float_1 %996 %1055 %1037
       %1057 = OpCompositeConstruct %v3float %float_0 %977 %float_0
       %1058 = OpFAdd %v3float %925 %1057
       %1059 = OpExtInst %v3float %1 Fract %1058
       %1060 = OpExtInst %v3float %1 FClamp %1059 %105 %130
       %1061 = OpVectorTimesScalar %v3float %1060 %929
       %1062 = OpFAdd %v3float %1061 %935
       %1063 = OpCompositeExtract %float %1062 0
       %1064 = OpCompositeExtract %float %1062 1
       %1065 = OpCompositeExtract %float %1062 2
       %1066 = OpConvertFToS %int %1063
       %1067 = OpConvertFToS %int %1064
       %1068 = OpConvertFToS %int %1065
       %1069 = OpCompositeConstruct %v4int %1066 %1067 %1068 %int_0
       %1070 = OpVectorShuffle %v3int %1069 %1069 0 1 2
       %1071 = OpImageFetch %v4uint %945 %1070 Lod %int_0
       %1072 = OpCompositeExtract %uint %1071 0
       %1073 = OpBitwiseAnd %uint %1072 %uint_16777215
       %1074 = OpULessThan %bool %1072 %uint_4294967295
               OpSelectionMerge %1075 None
               OpBranchConditional %1074 %1076 %1075
       %1076 = OpLabel
       %1077 = OpBitwiseAnd %uint %1073 %uint_127
       %1078 = OpCompositeInsert %v3uint %1077 %538 0
       %1079 = OpShiftRightLogical %uint %1073 %uint_7
       %1080 = OpBitwiseAnd %uint %1079 %uint_127
       %1081 = OpCompositeInsert %v3uint %1080 %1078 1
       %1082 = OpShiftRightLogical %uint %1073 %uint_14
       %1083 = OpCompositeInsert %v3uint %1082 %1081 2
       %1084 = OpVectorTimesScalar %v3float %1059 %929
       %1085 = OpExtInst %v3float %1 Fract %1084
       %1086 = OpIMul %v3uint %1083 %354
       %1087 = OpConvertUToF %v3float %1086
       %1088 = OpVectorTimesScalar %v3float %1085 %float_7
       %1089 = OpFAdd %v3float %1087 %1088
       %1090 = OpFAdd %v3float %1089 %140
       %1091 = OpFMul %v3float %1090 %967
       %1092 = OpSampledImage %type_sampled_image_0 %969 %970
       %1093 = OpImageSampleExplicitLod %v4float %1092 %1091 Lod %float_0
       %1094 = OpCompositeExtract %float %1093 0
               OpBranch %1075
       %1075 = OpLabel
       %1095 = OpPhi %float %float_1 %1036 %1094 %1076
       %1096 = OpCompositeConstruct %v3float %float_0 %1017 %float_0
       %1097 = OpFAdd %v3float %925 %1096
       %1098 = OpExtInst %v3float %1 Fract %1097
       %1099 = OpExtInst %v3float %1 FClamp %1098 %105 %130
       %1100 = OpVectorTimesScalar %v3float %1099 %929
       %1101 = OpFAdd %v3float %1100 %935
       %1102 = OpCompositeExtract %float %1101 0
       %1103 = OpCompositeExtract %float %1101 1
       %1104 = OpCompositeExtract %float %1101 2
       %1105 = OpConvertFToS %int %1102
       %1106 = OpConvertFToS %int %1103
       %1107 = OpConvertFToS %int %1104
       %1108 = OpCompositeConstruct %v4int %1105 %1106 %1107 %int_0
       %1109 = OpVectorShuffle %v3int %1108 %1108 0 1 2
       %1110 = OpImageFetch %v4uint %945 %1109 Lod %int_0
       %1111 = OpCompositeExtract %uint %1110 0
       %1112 = OpBitwiseAnd %uint %1111 %uint_16777215
       %1113 = OpULessThan %bool %1111 %uint_4294967295
               OpSelectionMerge %1114 None
               OpBranchConditional %1113 %1115 %1114
       %1115 = OpLabel
       %1116 = OpBitwiseAnd %uint %1112 %uint_127
       %1117 = OpCompositeInsert %v3uint %1116 %538 0
       %1118 = OpShiftRightLogical %uint %1112 %uint_7
       %1119 = OpBitwiseAnd %uint %1118 %uint_127
       %1120 = OpCompositeInsert %v3uint %1119 %1117 1
       %1121 = OpShiftRightLogical %uint %1112 %uint_14
       %1122 = OpCompositeInsert %v3uint %1121 %1120 2
       %1123 = OpVectorTimesScalar %v3float %1098 %929
       %1124 = OpExtInst %v3float %1 Fract %1123
       %1125 = OpIMul %v3uint %1122 %354
       %1126 = OpConvertUToF %v3float %1125
       %1127 = OpVectorTimesScalar %v3float %1124 %float_7
       %1128 = OpFAdd %v3float %1126 %1127
       %1129 = OpFAdd %v3float %1128 %140
       %1130 = OpFMul %v3float %1129 %967
       %1131 = OpSampledImage %type_sampled_image_0 %969 %970
       %1132 = OpImageSampleExplicitLod %v4float %1131 %1130 Lod %float_0
       %1133 = OpCompositeExtract %float %1132 0
               OpBranch %1114
       %1114 = OpLabel
       %1134 = OpPhi %float %float_1 %1075 %1133 %1115
       %1135 = OpFSub %float %1016 %1056
       %1136 = OpFSub %float %1095 %1134
       %1137 = OpCompositeConstruct %v3float %1135 %1136 %548
       %1138 = OpFMul %float %900 %float_16
       %1139 = OpFMul %float %float_128 %899
       %1140 = OpVectorTimesScalar %v3float %1137 %1138
       %1141 = OpFMul %float %897 %1139
       %1142 = OpCompositeConstruct %v3float %1141 %1141 %1141
       %1143 = OpFDiv %v3float %1140 %1142
               OpBranch %893
        %975 = OpLabel
               OpBranch %950
        %950 = OpLabel
       %1144 = OpPhi %v3uint %887 %918 %958 %975
               OpBranch %917
        %917 = OpLabel
        %888 = OpPhi %v3uint %887 %894 %1144 %950
               OpBranch %889
        %889 = OpLabel
        %891 = OpIAdd %uint %890 %uint_1
               OpBranch %886
        %893 = OpLabel
       %1145 = OpPhi %v3float %339 %886 %1143 %1114
       %1146 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_88 %int_2
       %1147 = OpLoad %float %1146
       %1148 = OpCompositeConstruct %v3float %1147 %1147 %1147
       %1149 = OpExtInst %v3float %1 Fma %1145 %1148 %640
       %1150 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_88 %int_3
       %1151 = OpLoad %float %1150
       %1152 = OpCompositeConstruct %v3float %1151 %1151 %1151
       %1153 = OpFMul %v3float %591 %1152
       %1154 = OpFMul %v3float %1149 %1152
       %1155 = OpAccessChain %_ptr_Uniform_float %View %uint_19
       %1156 = OpLoad %float %1155
       %1157 = OpCompositeExtract %float %759 2
       %1158 = OpCompositeExtract %float %759 3
       %1159 = OpExtInst %float %1 FMix %1156 %1157 %1158
       %1160 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_89 %int_1
       %1161 = OpLoad %float %1160
       %1162 = OpFMul %float %1159 %1161
       %1163 = OpCompositeConstruct %v2float %1162 %1162
       %1164 = OpFAdd %v2float %1163 %279
       %1165 = OpCompositeExtract %float %1153 0
       %1166 = OpCompositeExtract %float %1154 0
       %1167 = OpCompositeExtract %float %1153 1
       %1168 = OpCompositeExtract %float %1154 1
       %1169 = OpCompositeExtract %float %1164 0
       %1170 = OpCompositeConstruct %v3float %1165 %1167 %float_0
       %1171 = OpCompositeConstruct %v3float %1166 %1168 %1169
       %1172 = OpVectorTimesScalar %v3float %1171 %float_4_76837158en07
       %1173 = OpFAdd %v3float %1172 %140
       %1174 = OpFAdd %v3float %1170 %1173
       %1175 = OpExtInst %v3float %1 Floor %1174
       %1176 = OpFSub %v3float %1170 %1175
       %1177 = OpVectorTimesScalar %v3float %1176 %float_2097152
       %1178 = OpFAdd %v3float %1177 %1171
       %1179 = OpVectorTimesScalar %v3float %1178 %float_1
               OpBranch %1180
       %1180 = OpLabel
       %1181 = OpPhi %v3float %1179 %893 %1182 %1183
       %1184 = OpPhi %float %float_1 %893 %1185 %1183
       %1186 = OpPhi %float %float_0 %893 %1187 %1183
       %1188 = OpPhi %uint %uint_0 %893 %1189 %1183
       %1190 = OpULessThan %bool %1188 %uint_10
               OpLoopMerge %1191 %1183 DontUnroll
               OpBranchConditional %1190 %1183 %1191
       %1183 = OpLabel
       %1192 = OpExtInst %v3float %1 Fract %1181
       %1193 = OpExtInst %v3float %1 Floor %1181
       %1194 = OpDot %float %1193 %387
       %1195 = OpFAdd %float %1194 %float_19
       %1196 = OpFAdd %float %1194 %float_47
       %1197 = OpFAdd %float %1194 %float_66
       %1198 = OpFAdd %float %1194 %float_101
       %1199 = OpFAdd %float %1194 %float_120
       %1200 = OpFAdd %float %1194 %float_148
       %1201 = OpFAdd %float %1194 %float_167
       %1202 = OpConvertFToS %int %1194
       %1203 = OpCompositeConstruct %v3int %1202 %int_0 %int_0
       %1204 = OpBitcast %v3uint %1203
       %1205 = OpIMul %v3uint %1204 %403
       %1206 = OpIAdd %v3uint %1205 %405
       %1207 = OpCompositeExtract %uint %1206 1
       %1208 = OpCompositeExtract %uint %1206 2
       %1209 = OpIMul %uint %1207 %1208
       %1210 = OpCompositeExtract %uint %1206 0
       %1211 = OpIAdd %uint %1210 %1209
       %1212 = OpIMul %uint %1208 %1211
       %1213 = OpIAdd %uint %1207 %1212
       %1214 = OpIMul %uint %1211 %1213
       %1215 = OpIAdd %uint %1208 %1214
       %1216 = OpIMul %uint %1213 %1215
       %1217 = OpIAdd %uint %1211 %1216
       %1218 = OpCompositeInsert %v3uint %1217 %549 0
       %1219 = OpBitwiseAnd %v3uint %406 %407
       %1220 = OpShiftRightLogical %v3uint %1218 %1219
       %1221 = OpCompositeExtract %uint %1220 0
       %1222 = OpCompositeConstruct %v3uint %1221 %1221 %1221
       %1223 = OpBitwiseAnd %v3uint %1222 %388
       %1224 = OpConvertUToF %v3float %1223
       %1225 = OpExtInst %v3float %1 Fma %1224 %392 %282
       %1226 = OpDot %float %1225 %1192
       %1227 = OpConvertFToS %int %1195
       %1228 = OpFSub %v3float %1192 %351
       %1229 = OpCompositeConstruct %v3int %1227 %int_0 %int_0
       %1230 = OpBitcast %v3uint %1229
       %1231 = OpIMul %v3uint %1230 %403
       %1232 = OpIAdd %v3uint %1231 %405
       %1233 = OpCompositeExtract %uint %1232 1
       %1234 = OpCompositeExtract %uint %1232 2
       %1235 = OpIMul %uint %1233 %1234
       %1236 = OpCompositeExtract %uint %1232 0
       %1237 = OpIAdd %uint %1236 %1235
       %1238 = OpIMul %uint %1234 %1237
       %1239 = OpIAdd %uint %1233 %1238
       %1240 = OpIMul %uint %1237 %1239
       %1241 = OpIAdd %uint %1234 %1240
       %1242 = OpIMul %uint %1239 %1241
       %1243 = OpIAdd %uint %1237 %1242
       %1244 = OpCompositeInsert %v3uint %1243 %549 0
       %1245 = OpShiftRightLogical %v3uint %1244 %1219
       %1246 = OpCompositeExtract %uint %1245 0
       %1247 = OpCompositeConstruct %v3uint %1246 %1246 %1246
       %1248 = OpBitwiseAnd %v3uint %1247 %388
       %1249 = OpConvertUToF %v3float %1248
       %1250 = OpExtInst %v3float %1 Fma %1249 %392 %282
       %1251 = OpDot %float %1250 %1228
       %1252 = OpConvertFToS %int %1196
       %1253 = OpFSub %v3float %1192 %352
       %1254 = OpCompositeConstruct %v3int %1252 %int_0 %int_0
       %1255 = OpBitcast %v3uint %1254
       %1256 = OpIMul %v3uint %1255 %403
       %1257 = OpIAdd %v3uint %1256 %405
       %1258 = OpCompositeExtract %uint %1257 1
       %1259 = OpCompositeExtract %uint %1257 2
       %1260 = OpIMul %uint %1258 %1259
       %1261 = OpCompositeExtract %uint %1257 0
       %1262 = OpIAdd %uint %1261 %1260
       %1263 = OpIMul %uint %1259 %1262
       %1264 = OpIAdd %uint %1258 %1263
       %1265 = OpIMul %uint %1262 %1264
       %1266 = OpIAdd %uint %1259 %1265
       %1267 = OpIMul %uint %1264 %1266
       %1268 = OpIAdd %uint %1262 %1267
       %1269 = OpCompositeInsert %v3uint %1268 %549 0
       %1270 = OpShiftRightLogical %v3uint %1269 %1219
       %1271 = OpCompositeExtract %uint %1270 0
       %1272 = OpCompositeConstruct %v3uint %1271 %1271 %1271
       %1273 = OpBitwiseAnd %v3uint %1272 %388
       %1274 = OpConvertUToF %v3float %1273
       %1275 = OpExtInst %v3float %1 Fma %1274 %392 %282
       %1276 = OpDot %float %1275 %1253
       %1277 = OpConvertFToS %int %1197
       %1278 = OpFSub %v3float %1192 %137
       %1279 = OpCompositeConstruct %v3int %1277 %int_0 %int_0
       %1280 = OpBitcast %v3uint %1279
       %1281 = OpIMul %v3uint %1280 %403
       %1282 = OpIAdd %v3uint %1281 %405
       %1283 = OpCompositeExtract %uint %1282 1
       %1284 = OpCompositeExtract %uint %1282 2
       %1285 = OpIMul %uint %1283 %1284
       %1286 = OpCompositeExtract %uint %1282 0
       %1287 = OpIAdd %uint %1286 %1285
       %1288 = OpIMul %uint %1284 %1287
       %1289 = OpIAdd %uint %1283 %1288
       %1290 = OpIMul %uint %1287 %1289
       %1291 = OpIAdd %uint %1284 %1290
       %1292 = OpIMul %uint %1289 %1291
       %1293 = OpIAdd %uint %1287 %1292
       %1294 = OpCompositeInsert %v3uint %1293 %549 0
       %1295 = OpShiftRightLogical %v3uint %1294 %1219
       %1296 = OpCompositeExtract %uint %1295 0
       %1297 = OpCompositeConstruct %v3uint %1296 %1296 %1296
       %1298 = OpBitwiseAnd %v3uint %1297 %388
       %1299 = OpConvertUToF %v3float %1298
       %1300 = OpExtInst %v3float %1 Fma %1299 %392 %282
       %1301 = OpDot %float %1300 %1278
       %1302 = OpConvertFToS %int %1198
       %1303 = OpFSub %v3float %1192 %294
       %1304 = OpCompositeConstruct %v3int %1302 %int_0 %int_0
       %1305 = OpBitcast %v3uint %1304
       %1306 = OpIMul %v3uint %1305 %403
       %1307 = OpIAdd %v3uint %1306 %405
       %1308 = OpCompositeExtract %uint %1307 1
       %1309 = OpCompositeExtract %uint %1307 2
       %1310 = OpIMul %uint %1308 %1309
       %1311 = OpCompositeExtract %uint %1307 0
       %1312 = OpIAdd %uint %1311 %1310
       %1313 = OpIMul %uint %1309 %1312
       %1314 = OpIAdd %uint %1308 %1313
       %1315 = OpIMul %uint %1312 %1314
       %1316 = OpIAdd %uint %1309 %1315
       %1317 = OpIMul %uint %1314 %1316
       %1318 = OpIAdd %uint %1312 %1317
       %1319 = OpCompositeInsert %v3uint %1318 %549 0
       %1320 = OpShiftRightLogical %v3uint %1319 %1219
       %1321 = OpCompositeExtract %uint %1320 0
       %1322 = OpCompositeConstruct %v3uint %1321 %1321 %1321
       %1323 = OpBitwiseAnd %v3uint %1322 %388
       %1324 = OpConvertUToF %v3float %1323
       %1325 = OpExtInst %v3float %1 Fma %1324 %392 %282
       %1326 = OpDot %float %1325 %1303
       %1327 = OpConvertFToS %int %1199
       %1328 = OpFSub %v3float %1192 %143
       %1329 = OpCompositeConstruct %v3int %1327 %int_0 %int_0
       %1330 = OpBitcast %v3uint %1329
       %1331 = OpIMul %v3uint %1330 %403
       %1332 = OpIAdd %v3uint %1331 %405
       %1333 = OpCompositeExtract %uint %1332 1
       %1334 = OpCompositeExtract %uint %1332 2
       %1335 = OpIMul %uint %1333 %1334
       %1336 = OpCompositeExtract %uint %1332 0
       %1337 = OpIAdd %uint %1336 %1335
       %1338 = OpIMul %uint %1334 %1337
       %1339 = OpIAdd %uint %1333 %1338
       %1340 = OpIMul %uint %1337 %1339
       %1341 = OpIAdd %uint %1334 %1340
       %1342 = OpIMul %uint %1339 %1341
       %1343 = OpIAdd %uint %1337 %1342
       %1344 = OpCompositeInsert %v3uint %1343 %549 0
       %1345 = OpShiftRightLogical %v3uint %1344 %1219
       %1346 = OpCompositeExtract %uint %1345 0
       %1347 = OpCompositeConstruct %v3uint %1346 %1346 %1346
       %1348 = OpBitwiseAnd %v3uint %1347 %388
       %1349 = OpConvertUToF %v3float %1348
       %1350 = OpExtInst %v3float %1 Fma %1349 %392 %282
       %1351 = OpDot %float %1350 %1328
       %1352 = OpConvertFToS %int %1200
       %1353 = OpFSub %v3float %1192 %138
       %1354 = OpCompositeConstruct %v3int %1352 %int_0 %int_0
       %1355 = OpBitcast %v3uint %1354
       %1356 = OpIMul %v3uint %1355 %403
       %1357 = OpIAdd %v3uint %1356 %405
       %1358 = OpCompositeExtract %uint %1357 1
       %1359 = OpCompositeExtract %uint %1357 2
       %1360 = OpIMul %uint %1358 %1359
       %1361 = OpCompositeExtract %uint %1357 0
       %1362 = OpIAdd %uint %1361 %1360
       %1363 = OpIMul %uint %1359 %1362
       %1364 = OpIAdd %uint %1358 %1363
       %1365 = OpIMul %uint %1362 %1364
       %1366 = OpIAdd %uint %1359 %1365
       %1367 = OpIMul %uint %1364 %1366
       %1368 = OpIAdd %uint %1362 %1367
       %1369 = OpCompositeInsert %v3uint %1368 %549 0
       %1370 = OpShiftRightLogical %v3uint %1369 %1219
       %1371 = OpCompositeExtract %uint %1370 0
       %1372 = OpCompositeConstruct %v3uint %1371 %1371 %1371
       %1373 = OpBitwiseAnd %v3uint %1372 %388
       %1374 = OpConvertUToF %v3float %1373
       %1375 = OpExtInst %v3float %1 Fma %1374 %392 %282
       %1376 = OpDot %float %1375 %1353
       %1377 = OpConvertFToS %int %1201
       %1378 = OpFSub %v3float %1192 %130
       %1379 = OpCompositeConstruct %v3int %1377 %int_0 %int_0
       %1380 = OpBitcast %v3uint %1379
       %1381 = OpIMul %v3uint %1380 %403
       %1382 = OpIAdd %v3uint %1381 %405
       %1383 = OpCompositeExtract %uint %1382 1
       %1384 = OpCompositeExtract %uint %1382 2
       %1385 = OpIMul %uint %1383 %1384
       %1386 = OpCompositeExtract %uint %1382 0
       %1387 = OpIAdd %uint %1386 %1385
       %1388 = OpIMul %uint %1384 %1387
       %1389 = OpIAdd %uint %1383 %1388
       %1390 = OpIMul %uint %1387 %1389
       %1391 = OpIAdd %uint %1384 %1390
       %1392 = OpIMul %uint %1389 %1391
       %1393 = OpIAdd %uint %1387 %1392
       %1394 = OpCompositeInsert %v3uint %1393 %549 0
       %1395 = OpShiftRightLogical %v3uint %1394 %1219
       %1396 = OpCompositeExtract %uint %1395 0
       %1397 = OpCompositeConstruct %v3uint %1396 %1396 %1396
       %1398 = OpBitwiseAnd %v3uint %1397 %388
       %1399 = OpConvertUToF %v3float %1398
       %1400 = OpExtInst %v3float %1 Fma %1399 %392 %282
       %1401 = OpDot %float %1400 %1378
       %1402 = OpCompositeExtract %float %1192 0
       %1403 = OpCompositeExtract %float %1192 1
       %1404 = OpCompositeExtract %float %1192 2
       %1405 = OpCompositeConstruct %v4float %1402 %1403 %1404 %float_0
       %1406 = OpFMul %v4float %1405 %1405
       %1407 = OpFMul %v4float %1406 %1405
       %1408 = OpVectorTimesScalar %v4float %1405 %float_6
       %1409 = OpFSub %v4float %1408 %383
       %1410 = OpExtInst %v4float %1 Fma %1405 %1409 %384
       %1411 = OpFMul %v4float %1407 %1410
       %1412 = OpCompositeExtract %float %1411 0
       %1413 = OpExtInst %float %1 FMix %1226 %1251 %1412
       %1414 = OpExtInst %float %1 FMix %1276 %1301 %1412
       %1415 = OpCompositeExtract %float %1411 1
       %1416 = OpExtInst %float %1 FMix %1413 %1414 %1415
       %1417 = OpExtInst %float %1 FMix %1326 %1351 %1412
       %1418 = OpExtInst %float %1 FMix %1376 %1401 %1412
       %1419 = OpExtInst %float %1 FMix %1417 %1418 %1415
       %1420 = OpCompositeExtract %float %1411 2
       %1421 = OpExtInst %float %1 FMix %1416 %1419 %1420
       %1422 = OpExtInst %float %1 FAbs %1421
       %1187 = OpExtInst %float %1 Fma %1422 %1184 %1186
       %1182 = OpVectorTimesScalar %v3float %1181 %float_2
       %1185 = OpFMul %float %1184 %float_0_5
       %1189 = OpIAdd %uint %1188 %uint_1
               OpBranch %1180
       %1191 = OpLabel
       %1423 = OpExtInst %float %1 FMix %float_0 %float_1 %1186
       %1424 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_89 %int_2
       %1425 = OpLoad %float %1424
       %1426 = OpFNegate %float %885
       %1427 = OpExtInst %float %1 Fma %1426 %1425 %1423
       %1428 = OpExtInst %float %1 Fma %885 %1425 %float_1
       %1429 = OpExtInst %float %1 Fma %1426 %1425 %1428
       %1430 = OpFDiv %float %1427 %1429
       %1431 = OpExtInst %float %1 Fma %1430 %float_n1 %float_1
       %1432 = OpExtInst %float %1 FClamp %1431 %float_0 %float_1
       %1433 = OpFOrdLessThanEqual %bool %1432 %float_0
       %1434 = OpExtInst %float %1 Pow %1432 %float_2
       %1435 = OpSelect %float %1433 %float_0 %1434
       %1436 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_0
       %1437 = OpLoad %float %1436
       %1438 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_89 %int_3
       %1439 = OpLoad %float %1438
       %1440 = OpExtInst %float %1 FMix %1437 %1439 %1435
       %1441 = OpExtInst %float %1 FClamp %1440 %float_0 %float_1
       %1442 = OpFMul %float %885 %1441
       %1443 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_1
       %1444 = OpLoad %float %1443
       %1445 = OpCompositeConstruct %v3float %1444 %1444 %1444
       %1446 = OpFMul %v3float %591 %1445
       %1447 = OpFMul %v3float %640 %1445
       %1448 = OpVectorTimesScalar %v3float %1447 %float_4_76837158en07
       %1449 = OpFAdd %v3float %1448 %140
       %1450 = OpExtInst %v3float %1 Fma %591 %1445 %1449
       %1451 = OpExtInst %v3float %1 Floor %1450
       %1452 = OpFNegate %v3float %1451
       %1453 = OpExtInst %v3float %1 Fma %591 %1445 %1452
       %1454 = OpVectorTimesScalar %v3float %1453 %float_2097152
       %1455 = OpExtInst %v3float %1 Fma %640 %1445 %1454
       %1456 = OpVectorTimesScalar %v3float %1455 %float_1
               OpBranch %1457
       %1457 = OpLabel
       %1458 = OpPhi %v3float %541 %1191 %1459 %1460
       %1461 = OpPhi %v3float %1456 %1191 %1462 %1460
       %1463 = OpPhi %float %float_1 %1191 %1464 %1460
       %1465 = OpPhi %float %float_0 %1191 %1466 %1460
       %1467 = OpPhi %uint %uint_0 %1191 %1468 %1460
       %1469 = OpULessThan %bool %1467 %uint_1
               OpLoopMerge %1470 %1460 DontUnroll
               OpBranchConditional %1469 %1471 %1470
       %1471 = OpLabel
       %1472 = OpExtInst %v3float %1 Fract %1461
       %1473 = OpExtInst %v3float %1 Floor %1461
       %1474 = OpCompositeInsert %v3float %float_0 %1458 0
               OpBranch %1475
       %1475 = OpLabel
       %1476 = OpPhi %v4float %353 %1471 %1477 %1478
       %1459 = OpPhi %v3float %1474 %1471 %1479 %1478
       %1480 = OpCompositeExtract %float %1459 0
       %1481 = OpFOrdLessThanEqual %bool %1480 %float_1
               OpLoopMerge %1482 %1478 None
               OpBranchConditional %1481 %1483 %1482
       %1483 = OpLabel
       %1484 = OpCompositeInsert %v3float %float_0 %1459 1
               OpBranch %1485
       %1485 = OpLabel
       %1486 = OpPhi %v3float %1484 %1483 %1487 %1488
       %1477 = OpPhi %v4float %1476 %1483 %1489 %1488
       %1490 = OpCompositeExtract %float %1486 1
       %1491 = OpFOrdLessThanEqual %bool %1490 %float_1
               OpLoopMerge %1492 %1488 None
               OpBranchConditional %1491 %1493 %1492
       %1493 = OpLabel
       %1494 = OpCompositeInsert %v3float %float_0 %1486 2
               OpBranch %1495
       %1495 = OpLabel
       %1489 = OpPhi %v4float %1477 %1493 %1496 %1497
       %1498 = OpPhi %v3float %1494 %1493 %1499 %1497
       %1500 = OpCompositeExtract %float %1498 2
       %1501 = OpFOrdLessThanEqual %bool %1500 %float_1
               OpLoopMerge %1502 %1497 None
               OpBranchConditional %1501 %1497 %1502
       %1497 = OpLabel
       %1503 = OpFAdd %v3float %1473 %1498
       %1504 = OpVectorShuffle %v3float %537 %1503 3 4 5
       %1505 = OpConvertFToS %v3int %1504
       %1506 = OpBitcast %v3uint %1505
       %1507 = OpIMul %v3uint %1506 %403
       %1508 = OpIAdd %v3uint %1507 %405
       %1509 = OpCompositeExtract %uint %1508 1
       %1510 = OpCompositeExtract %uint %1508 2
       %1511 = OpIMul %uint %1509 %1510
       %1512 = OpCompositeExtract %uint %1508 0
       %1513 = OpIAdd %uint %1512 %1511
       %1514 = OpIMul %uint %1510 %1513
       %1515 = OpIAdd %uint %1509 %1514
       %1516 = OpIMul %uint %1513 %1515
       %1517 = OpIAdd %uint %1510 %1516
       %1518 = OpIMul %uint %1515 %1517
       %1519 = OpIAdd %uint %1513 %1518
       %1520 = OpCompositeInsert %v3uint %1519 %1508 0
       %1521 = OpIMul %uint %1517 %1519
       %1522 = OpIAdd %uint %1515 %1521
       %1523 = OpCompositeInsert %v3uint %1522 %1520 1
       %1524 = OpIMul %uint %1519 %1522
       %1525 = OpIAdd %uint %1517 %1524
       %1526 = OpCompositeInsert %v3uint %1525 %1523 2
       %1527 = OpBitwiseAnd %v3uint %406 %407
       %1528 = OpShiftRightLogical %v3uint %1526 %1527
       %1529 = OpConvertUToF %v3float %1528
       %1530 = OpExtInst %v3float %1 Fma %1529 %521 %510
       %1531 = OpExtInst %v3float %1 Normalize %1530
       %1532 = OpVectorTimesScalar %v3float %1531 %float_0_2588
       %1533 = OpFAdd %v3float %1498 %1532
       %1534 = OpFSub %v3float %1472 %1533
       %1535 = OpCompositeExtract %float %1489 3
       %1536 = OpDot %float %1534 %1534
       %1537 = OpExtInst %float %1 NMin %1535 %1536
       %1496 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %1537
       %1538 = OpFAdd %float %1500 %float_1
       %1499 = OpCompositeInsert %v3float %1538 %1498 2
               OpBranch %1495
       %1502 = OpLabel
               OpBranch %1488
       %1488 = OpLabel
       %1539 = OpCompositeExtract %float %1498 1
       %1540 = OpFAdd %float %1539 %float_1
       %1487 = OpCompositeInsert %v3float %1540 %1498 1
               OpBranch %1485
       %1492 = OpLabel
               OpBranch %1478
       %1478 = OpLabel
       %1541 = OpCompositeExtract %float %1486 0
       %1542 = OpFAdd %float %1541 %float_1
       %1479 = OpCompositeInsert %v3float %1542 %1486 0
               OpBranch %1475
       %1482 = OpLabel
       %1543 = OpCompositeExtract %float %1476 3
       %1544 = OpExtInst %float %1 Sqrt %1543
       %1545 = OpExtInst %float %1 Fma %1544 %float_2 %float_n1
       %1546 = OpExtInst %float %1 FAbs %1545
       %1466 = OpExtInst %float %1 Fma %1546 %1463 %1465
       %1462 = OpVectorTimesScalar %v3float %1461 %float_2
       %1464 = OpFMul %float %1463 %float_0_5
               OpBranch %1460
       %1460 = OpLabel
       %1468 = OpIAdd %uint %1467 %uint_1
               OpBranch %1457
       %1470 = OpLabel
       %1547 = OpExtInst %float %1 FMix %float_n1 %float_1 %1465
       %1548 = OpExtInst %float %1 FClamp %1547 %float_0 %float_1
       %1549 = OpFMul %v3float %1447 %281
       %1550 = OpVectorTimesScalar %v3float %1549 %float_4_76837158en07
       %1551 = OpFAdd %v3float %1550 %140
       %1552 = OpExtInst %v3float %1 Fma %1446 %281 %1551
       %1553 = OpExtInst %v3float %1 Floor %1552
       %1554 = OpFNegate %v3float %1553
       %1555 = OpExtInst %v3float %1 Fma %1446 %281 %1554
       %1556 = OpVectorTimesScalar %v3float %1555 %float_2097152
       %1557 = OpExtInst %v3float %1 Fma %1447 %281 %1556
       %1558 = OpVectorTimesScalar %v3float %1557 %float_1
               OpBranch %1559
       %1559 = OpLabel
       %1560 = OpPhi %v3float %541 %1470 %1561 %1562
       %1563 = OpPhi %v3float %1558 %1470 %1564 %1562
       %1565 = OpPhi %float %float_1 %1470 %1566 %1562
       %1567 = OpPhi %float %float_0 %1470 %1568 %1562
       %1569 = OpPhi %uint %uint_0 %1470 %1570 %1562
       %1571 = OpULessThan %bool %1569 %uint_1
               OpLoopMerge %1572 %1562 DontUnroll
               OpBranchConditional %1571 %1573 %1572
       %1573 = OpLabel
       %1574 = OpExtInst %v3float %1 Fract %1563
       %1575 = OpExtInst %v3float %1 Floor %1563
       %1576 = OpCompositeInsert %v3float %float_0 %1560 0
               OpBranch %1577
       %1577 = OpLabel
       %1578 = OpPhi %v4float %353 %1573 %1579 %1580
       %1561 = OpPhi %v3float %1576 %1573 %1581 %1580
       %1582 = OpCompositeExtract %float %1561 0
       %1583 = OpFOrdLessThanEqual %bool %1582 %float_1
               OpLoopMerge %1584 %1580 None
               OpBranchConditional %1583 %1585 %1584
       %1585 = OpLabel
       %1586 = OpCompositeInsert %v3float %float_0 %1561 1
               OpBranch %1587
       %1587 = OpLabel
       %1588 = OpPhi %v3float %1586 %1585 %1589 %1590
       %1579 = OpPhi %v4float %1578 %1585 %1591 %1590
       %1592 = OpCompositeExtract %float %1588 1
       %1593 = OpFOrdLessThanEqual %bool %1592 %float_1
               OpLoopMerge %1594 %1590 None
               OpBranchConditional %1593 %1595 %1594
       %1595 = OpLabel
       %1596 = OpCompositeInsert %v3float %float_0 %1588 2
               OpBranch %1597
       %1597 = OpLabel
       %1591 = OpPhi %v4float %1579 %1595 %1598 %1599
       %1600 = OpPhi %v3float %1596 %1595 %1601 %1599
       %1602 = OpCompositeExtract %float %1600 2
       %1603 = OpFOrdLessThanEqual %bool %1602 %float_1
               OpLoopMerge %1604 %1599 None
               OpBranchConditional %1603 %1599 %1604
       %1599 = OpLabel
       %1605 = OpFAdd %v3float %1575 %1600
       %1606 = OpVectorShuffle %v3float %537 %1605 3 4 5
       %1607 = OpConvertFToS %v3int %1606
       %1608 = OpBitcast %v3uint %1607
       %1609 = OpIMul %v3uint %1608 %403
       %1610 = OpIAdd %v3uint %1609 %405
       %1611 = OpCompositeExtract %uint %1610 1
       %1612 = OpCompositeExtract %uint %1610 2
       %1613 = OpIMul %uint %1611 %1612
       %1614 = OpCompositeExtract %uint %1610 0
       %1615 = OpIAdd %uint %1614 %1613
       %1616 = OpIMul %uint %1612 %1615
       %1617 = OpIAdd %uint %1611 %1616
       %1618 = OpIMul %uint %1615 %1617
       %1619 = OpIAdd %uint %1612 %1618
       %1620 = OpIMul %uint %1617 %1619
       %1621 = OpIAdd %uint %1615 %1620
       %1622 = OpCompositeInsert %v3uint %1621 %1610 0
       %1623 = OpIMul %uint %1619 %1621
       %1624 = OpIAdd %uint %1617 %1623
       %1625 = OpCompositeInsert %v3uint %1624 %1622 1
       %1626 = OpIMul %uint %1621 %1624
       %1627 = OpIAdd %uint %1619 %1626
       %1628 = OpCompositeInsert %v3uint %1627 %1625 2
       %1629 = OpBitwiseAnd %v3uint %406 %407
       %1630 = OpShiftRightLogical %v3uint %1628 %1629
       %1631 = OpConvertUToF %v3float %1630
       %1632 = OpExtInst %v3float %1 Fma %1631 %521 %510
       %1633 = OpExtInst %v3float %1 Normalize %1632
       %1634 = OpVectorTimesScalar %v3float %1633 %float_0_2588
       %1635 = OpFAdd %v3float %1600 %1634
       %1636 = OpFSub %v3float %1574 %1635
       %1637 = OpCompositeExtract %float %1591 3
       %1638 = OpDot %float %1636 %1636
       %1639 = OpExtInst %float %1 NMin %1637 %1638
       %1598 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %1639
       %1640 = OpFAdd %float %1602 %float_1
       %1601 = OpCompositeInsert %v3float %1640 %1600 2
               OpBranch %1597
       %1604 = OpLabel
               OpBranch %1590
       %1590 = OpLabel
       %1641 = OpCompositeExtract %float %1600 1
       %1642 = OpFAdd %float %1641 %float_1
       %1589 = OpCompositeInsert %v3float %1642 %1600 1
               OpBranch %1587
       %1594 = OpLabel
               OpBranch %1580
       %1580 = OpLabel
       %1643 = OpCompositeExtract %float %1588 0
       %1644 = OpFAdd %float %1643 %float_1
       %1581 = OpCompositeInsert %v3float %1644 %1588 0
               OpBranch %1577
       %1584 = OpLabel
       %1645 = OpCompositeExtract %float %1578 3
       %1646 = OpExtInst %float %1 Sqrt %1645
       %1647 = OpExtInst %float %1 Fma %1646 %float_2 %float_n1
       %1648 = OpExtInst %float %1 FAbs %1647
       %1568 = OpExtInst %float %1 Fma %1648 %1565 %1567
       %1564 = OpVectorTimesScalar %v3float %1563 %float_2
       %1566 = OpFMul %float %1565 %float_0_5
               OpBranch %1562
       %1562 = OpLabel
       %1570 = OpIAdd %uint %1569 %uint_1
               OpBranch %1559
       %1572 = OpLabel
       %1649 = OpExtInst %float %1 FMix %float_n1 %float_1 %1567
       %1650 = OpExtInst %float %1 FClamp %1649 %float_0 %float_1
       %1651 = OpFAdd %float %1548 %1650
       %1652 = OpFNegate %float %1651
       %1653 = OpExtInst %float %1 Fma %885 %1441 %1652
       %1654 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_2
       %1655 = OpLoad %float %1654
       %1656 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_0
       %1657 = OpLoad %float %1656
       %1658 = OpFSub %float %1657 %float_n1
       %1659 = OpExtInst %float %1 FAbs %1658
       %1660 = OpFOrdGreaterThan %bool %1659 %float_9_99999975en06
       %1661 = OpFOrdGreaterThanEqual %bool %1657 %float_n1
       %1662 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_1
       %1663 = OpLoad %float %1662
       %1664 = OpSelect %float %1661 %1657 %1663
       %1665 = OpSelect %float %1660 %1664 %1657
       %1666 = OpFSub %float %1665 %float_1
       %1667 = OpExtInst %float %1 FAbs %1666
       %1668 = OpFOrdGreaterThan %bool %1667 %float_9_99999975en06
       %1669 = OpFOrdGreaterThanEqual %bool %1665 %float_1
       %1670 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_2
       %1671 = OpLoad %float %1670
       %1672 = OpSelect %float %1669 %1671 %1657
       %1673 = OpSelect %float %1668 %1672 %1657
       %1674 = OpExtInst %float %1 FAbs %1673
       %1675 = OpFOrdGreaterThan %bool %1674 %float_9_99999975en06
       %1676 = OpFOrdGreaterThanEqual %bool %1673 %float_0
       %1677 = OpSelect %float %1676 %float_1 %float_n1
       %1678 = OpSelect %float %1675 %1677 %float_1
       %1679 = OpExtInst %float %1 NMax %1678 %float_n1
       %1680 = OpExtInst %float %1 NMin %1679 %float_1
       %1681 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_4 %int_3
       %1682 = OpLoad %float %1681
       %1683 = OpCompositeConstruct %v3float %1680 %1682 %float_0
       %1684 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_6
       %1685 = OpLoad %v4float %1684
       %1686 = OpVectorShuffle %v3float %1685 %1685 0 1 2
       %1687 = OpFAdd %v3float %1683 %1686
       %1688 = OpExtInst %v3float %1 NMax %1687 %282
       %1689 = OpExtInst %v3float %1 NMin %1688 %130
       %1690 = OpCompositeExtract %float %591 0
       %1691 = OpCompositeExtract %float %640 0
       %1692 = OpCompositeExtract %float %591 1
       %1693 = OpCompositeExtract %float %640 1
       %1694 = OpCompositeConstruct %v2float %1690 %1692
       %1695 = OpCompositeConstruct %v2float %1691 %1693
       %1696 = OpCompositeExtract %float %1689 0
       %1697 = OpCompositeExtract %float %1689 1
       %1698 = OpCompositeConstruct %v2float %1696 %1697
       %1699 = OpFMul %v2float %1694 %1698
       %1700 = OpFMul %v2float %1698 %1695
       %1701 = OpCompositeExtract %float %1699 0
       %1702 = OpCompositeExtract %float %1700 0
       %1703 = OpCompositeExtract %float %1699 1
       %1704 = OpCompositeExtract %float %1700 1
       %1705 = OpFAdd %float %1701 %1703
       %1706 = OpFAdd %float %1702 %1704
       %1707 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_9 %int_0
       %1708 = OpLoad %float %1707
       %1709 = OpFMul %float %1705 %1708
       %1710 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_9 %int_2
       %1711 = OpLoad %float %1710
       %1712 = OpFSub %float %1159 %1711
       %1713 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_9 %int_3
       %1714 = OpLoad %float %1713
       %1715 = OpCompositeConstruct %v3float %1714 %1714 %1714
       %1716 = OpFMul %v3float %591 %1715
       %1717 = OpFMul %v3float %1715 %640
       %1718 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_10 %int_0
       %1719 = OpLoad %float %1718
       %1720 = OpCompositeConstruct %v3float %1719 %1719 %1719
       %1721 = OpFMul %v3float %1716 %1720
       %1722 = OpFMul %v3float %1717 %1720
       %1723 = OpCompositeExtract %float %759 1
       %1724 = OpCompositeConstruct %v3float %1723 %1723 %1723
       %1725 = OpFMul %v3float %1721 %1724
       %1726 = OpFMul %v3float %1722 %1724
       %1727 = OpFMul %v3float %1726 %284
       %1728 = OpCompositeExtract %float %1727 0
       %1729 = OpCompositeExtract %float %1727 1
       %1730 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_10 %int_2
       %1731 = OpLoad %float %1730
       %1732 = OpFMul %float %1159 %1731
       %1733 = OpCompositeExtract %float %1727 2
       %1734 = OpCompositeConstruct %v2float %1732 %1732
       %1735 = OpCompositeConstruct %v2float %1733 %1733
       %1736 = OpFAdd %v2float %1734 %1735
       %1737 = OpCompositeExtract %float %1736 0
       %1738 = OpCompositeConstruct %v3float %1728 %1729 %1737
       %1739 = OpVectorTimesScalar %v3float %1738 %float_4_76837158en07
       %1740 = OpFAdd %v3float %1739 %140
       %1741 = OpExtInst %v3float %1 Fma %1725 %284 %1740
       %1742 = OpExtInst %v3float %1 Floor %1741
       %1743 = OpFNegate %v3float %1742
       %1744 = OpExtInst %v3float %1 Fma %1725 %284 %1743
       %1745 = OpVectorTimesScalar %v3float %1744 %float_2097152
       %1746 = OpFAdd %v3float %1745 %1738
       %1747 = OpVectorTimesScalar %v3float %1746 %float_1
               OpBranch %1748
       %1748 = OpLabel
       %1749 = OpPhi %v3float %1747 %1572 %1750 %1751
       %1752 = OpPhi %float %float_1 %1572 %1753 %1751
       %1754 = OpPhi %float %float_0 %1572 %1755 %1751
       %1756 = OpPhi %uint %uint_0 %1572 %1757 %1751
       %1758 = OpULessThan %bool %1756 %uint_6
               OpLoopMerge %1759 %1751 DontUnroll
               OpBranchConditional %1758 %1751 %1759
       %1751 = OpLabel
       %1760 = OpExtInst %v3float %1 Fract %1749
       %1761 = OpExtInst %v3float %1 Floor %1749
       %1762 = OpDot %float %1761 %387
       %1763 = OpFAdd %float %1762 %float_19
       %1764 = OpFAdd %float %1762 %float_47
       %1765 = OpFAdd %float %1762 %float_66
       %1766 = OpFAdd %float %1762 %float_101
       %1767 = OpFAdd %float %1762 %float_120
       %1768 = OpFAdd %float %1762 %float_148
       %1769 = OpFAdd %float %1762 %float_167
       %1770 = OpConvertFToS %int %1762
       %1771 = OpCompositeConstruct %v3int %1770 %int_0 %int_0
       %1772 = OpBitcast %v3uint %1771
       %1773 = OpIMul %v3uint %1772 %403
       %1774 = OpIAdd %v3uint %1773 %405
       %1775 = OpCompositeExtract %uint %1774 1
       %1776 = OpCompositeExtract %uint %1774 2
       %1777 = OpIMul %uint %1775 %1776
       %1778 = OpCompositeExtract %uint %1774 0
       %1779 = OpIAdd %uint %1778 %1777
       %1780 = OpIMul %uint %1776 %1779
       %1781 = OpIAdd %uint %1775 %1780
       %1782 = OpIMul %uint %1779 %1781
       %1783 = OpIAdd %uint %1776 %1782
       %1784 = OpIMul %uint %1781 %1783
       %1785 = OpIAdd %uint %1779 %1784
       %1786 = OpCompositeInsert %v3uint %1785 %549 0
       %1787 = OpBitwiseAnd %v3uint %406 %407
       %1788 = OpShiftRightLogical %v3uint %1786 %1787
       %1789 = OpCompositeExtract %uint %1788 0
       %1790 = OpCompositeConstruct %v3uint %1789 %1789 %1789
       %1791 = OpBitwiseAnd %v3uint %1790 %388
       %1792 = OpConvertUToF %v3float %1791
       %1793 = OpExtInst %v3float %1 Fma %1792 %392 %282
       %1794 = OpDot %float %1793 %1760
       %1795 = OpConvertFToS %int %1763
       %1796 = OpFSub %v3float %1760 %351
       %1797 = OpCompositeConstruct %v3int %1795 %int_0 %int_0
       %1798 = OpBitcast %v3uint %1797
       %1799 = OpIMul %v3uint %1798 %403
       %1800 = OpIAdd %v3uint %1799 %405
       %1801 = OpCompositeExtract %uint %1800 1
       %1802 = OpCompositeExtract %uint %1800 2
       %1803 = OpIMul %uint %1801 %1802
       %1804 = OpCompositeExtract %uint %1800 0
       %1805 = OpIAdd %uint %1804 %1803
       %1806 = OpIMul %uint %1802 %1805
       %1807 = OpIAdd %uint %1801 %1806
       %1808 = OpIMul %uint %1805 %1807
       %1809 = OpIAdd %uint %1802 %1808
       %1810 = OpIMul %uint %1807 %1809
       %1811 = OpIAdd %uint %1805 %1810
       %1812 = OpCompositeInsert %v3uint %1811 %549 0
       %1813 = OpShiftRightLogical %v3uint %1812 %1787
       %1814 = OpCompositeExtract %uint %1813 0
       %1815 = OpCompositeConstruct %v3uint %1814 %1814 %1814
       %1816 = OpBitwiseAnd %v3uint %1815 %388
       %1817 = OpConvertUToF %v3float %1816
       %1818 = OpExtInst %v3float %1 Fma %1817 %392 %282
       %1819 = OpDot %float %1818 %1796
       %1820 = OpConvertFToS %int %1764
       %1821 = OpFSub %v3float %1760 %352
       %1822 = OpCompositeConstruct %v3int %1820 %int_0 %int_0
       %1823 = OpBitcast %v3uint %1822
       %1824 = OpIMul %v3uint %1823 %403
       %1825 = OpIAdd %v3uint %1824 %405
       %1826 = OpCompositeExtract %uint %1825 1
       %1827 = OpCompositeExtract %uint %1825 2
       %1828 = OpIMul %uint %1826 %1827
       %1829 = OpCompositeExtract %uint %1825 0
       %1830 = OpIAdd %uint %1829 %1828
       %1831 = OpIMul %uint %1827 %1830
       %1832 = OpIAdd %uint %1826 %1831
       %1833 = OpIMul %uint %1830 %1832
       %1834 = OpIAdd %uint %1827 %1833
       %1835 = OpIMul %uint %1832 %1834
       %1836 = OpIAdd %uint %1830 %1835
       %1837 = OpCompositeInsert %v3uint %1836 %549 0
       %1838 = OpShiftRightLogical %v3uint %1837 %1787
       %1839 = OpCompositeExtract %uint %1838 0
       %1840 = OpCompositeConstruct %v3uint %1839 %1839 %1839
       %1841 = OpBitwiseAnd %v3uint %1840 %388
       %1842 = OpConvertUToF %v3float %1841
       %1843 = OpExtInst %v3float %1 Fma %1842 %392 %282
       %1844 = OpDot %float %1843 %1821
       %1845 = OpConvertFToS %int %1765
       %1846 = OpFSub %v3float %1760 %137
       %1847 = OpCompositeConstruct %v3int %1845 %int_0 %int_0
       %1848 = OpBitcast %v3uint %1847
       %1849 = OpIMul %v3uint %1848 %403
       %1850 = OpIAdd %v3uint %1849 %405
       %1851 = OpCompositeExtract %uint %1850 1
       %1852 = OpCompositeExtract %uint %1850 2
       %1853 = OpIMul %uint %1851 %1852
       %1854 = OpCompositeExtract %uint %1850 0
       %1855 = OpIAdd %uint %1854 %1853
       %1856 = OpIMul %uint %1852 %1855
       %1857 = OpIAdd %uint %1851 %1856
       %1858 = OpIMul %uint %1855 %1857
       %1859 = OpIAdd %uint %1852 %1858
       %1860 = OpIMul %uint %1857 %1859
       %1861 = OpIAdd %uint %1855 %1860
       %1862 = OpCompositeInsert %v3uint %1861 %549 0
       %1863 = OpShiftRightLogical %v3uint %1862 %1787
       %1864 = OpCompositeExtract %uint %1863 0
       %1865 = OpCompositeConstruct %v3uint %1864 %1864 %1864
       %1866 = OpBitwiseAnd %v3uint %1865 %388
       %1867 = OpConvertUToF %v3float %1866
       %1868 = OpExtInst %v3float %1 Fma %1867 %392 %282
       %1869 = OpDot %float %1868 %1846
       %1870 = OpConvertFToS %int %1766
       %1871 = OpFSub %v3float %1760 %294
       %1872 = OpCompositeConstruct %v3int %1870 %int_0 %int_0
       %1873 = OpBitcast %v3uint %1872
       %1874 = OpIMul %v3uint %1873 %403
       %1875 = OpIAdd %v3uint %1874 %405
       %1876 = OpCompositeExtract %uint %1875 1
       %1877 = OpCompositeExtract %uint %1875 2
       %1878 = OpIMul %uint %1876 %1877
       %1879 = OpCompositeExtract %uint %1875 0
       %1880 = OpIAdd %uint %1879 %1878
       %1881 = OpIMul %uint %1877 %1880
       %1882 = OpIAdd %uint %1876 %1881
       %1883 = OpIMul %uint %1880 %1882
       %1884 = OpIAdd %uint %1877 %1883
       %1885 = OpIMul %uint %1882 %1884
       %1886 = OpIAdd %uint %1880 %1885
       %1887 = OpCompositeInsert %v3uint %1886 %549 0
       %1888 = OpShiftRightLogical %v3uint %1887 %1787
       %1889 = OpCompositeExtract %uint %1888 0
       %1890 = OpCompositeConstruct %v3uint %1889 %1889 %1889
       %1891 = OpBitwiseAnd %v3uint %1890 %388
       %1892 = OpConvertUToF %v3float %1891
       %1893 = OpExtInst %v3float %1 Fma %1892 %392 %282
       %1894 = OpDot %float %1893 %1871
       %1895 = OpConvertFToS %int %1767
       %1896 = OpFSub %v3float %1760 %143
       %1897 = OpCompositeConstruct %v3int %1895 %int_0 %int_0
       %1898 = OpBitcast %v3uint %1897
       %1899 = OpIMul %v3uint %1898 %403
       %1900 = OpIAdd %v3uint %1899 %405
       %1901 = OpCompositeExtract %uint %1900 1
       %1902 = OpCompositeExtract %uint %1900 2
       %1903 = OpIMul %uint %1901 %1902
       %1904 = OpCompositeExtract %uint %1900 0
       %1905 = OpIAdd %uint %1904 %1903
       %1906 = OpIMul %uint %1902 %1905
       %1907 = OpIAdd %uint %1901 %1906
       %1908 = OpIMul %uint %1905 %1907
       %1909 = OpIAdd %uint %1902 %1908
       %1910 = OpIMul %uint %1907 %1909
       %1911 = OpIAdd %uint %1905 %1910
       %1912 = OpCompositeInsert %v3uint %1911 %549 0
       %1913 = OpShiftRightLogical %v3uint %1912 %1787
       %1914 = OpCompositeExtract %uint %1913 0
       %1915 = OpCompositeConstruct %v3uint %1914 %1914 %1914
       %1916 = OpBitwiseAnd %v3uint %1915 %388
       %1917 = OpConvertUToF %v3float %1916
       %1918 = OpExtInst %v3float %1 Fma %1917 %392 %282
       %1919 = OpDot %float %1918 %1896
       %1920 = OpConvertFToS %int %1768
       %1921 = OpFSub %v3float %1760 %138
       %1922 = OpCompositeConstruct %v3int %1920 %int_0 %int_0
       %1923 = OpBitcast %v3uint %1922
       %1924 = OpIMul %v3uint %1923 %403
       %1925 = OpIAdd %v3uint %1924 %405
       %1926 = OpCompositeExtract %uint %1925 1
       %1927 = OpCompositeExtract %uint %1925 2
       %1928 = OpIMul %uint %1926 %1927
       %1929 = OpCompositeExtract %uint %1925 0
       %1930 = OpIAdd %uint %1929 %1928
       %1931 = OpIMul %uint %1927 %1930
       %1932 = OpIAdd %uint %1926 %1931
       %1933 = OpIMul %uint %1930 %1932
       %1934 = OpIAdd %uint %1927 %1933
       %1935 = OpIMul %uint %1932 %1934
       %1936 = OpIAdd %uint %1930 %1935
       %1937 = OpCompositeInsert %v3uint %1936 %549 0
       %1938 = OpShiftRightLogical %v3uint %1937 %1787
       %1939 = OpCompositeExtract %uint %1938 0
       %1940 = OpCompositeConstruct %v3uint %1939 %1939 %1939
       %1941 = OpBitwiseAnd %v3uint %1940 %388
       %1942 = OpConvertUToF %v3float %1941
       %1943 = OpExtInst %v3float %1 Fma %1942 %392 %282
       %1944 = OpDot %float %1943 %1921
       %1945 = OpConvertFToS %int %1769
       %1946 = OpFSub %v3float %1760 %130
       %1947 = OpCompositeConstruct %v3int %1945 %int_0 %int_0
       %1948 = OpBitcast %v3uint %1947
       %1949 = OpIMul %v3uint %1948 %403
       %1950 = OpIAdd %v3uint %1949 %405
       %1951 = OpCompositeExtract %uint %1950 1
       %1952 = OpCompositeExtract %uint %1950 2
       %1953 = OpIMul %uint %1951 %1952
       %1954 = OpCompositeExtract %uint %1950 0
       %1955 = OpIAdd %uint %1954 %1953
       %1956 = OpIMul %uint %1952 %1955
       %1957 = OpIAdd %uint %1951 %1956
       %1958 = OpIMul %uint %1955 %1957
       %1959 = OpIAdd %uint %1952 %1958
       %1960 = OpIMul %uint %1957 %1959
       %1961 = OpIAdd %uint %1955 %1960
       %1962 = OpCompositeInsert %v3uint %1961 %549 0
       %1963 = OpShiftRightLogical %v3uint %1962 %1787
       %1964 = OpCompositeExtract %uint %1963 0
       %1965 = OpCompositeConstruct %v3uint %1964 %1964 %1964
       %1966 = OpBitwiseAnd %v3uint %1965 %388
       %1967 = OpConvertUToF %v3float %1966
       %1968 = OpExtInst %v3float %1 Fma %1967 %392 %282
       %1969 = OpDot %float %1968 %1946
       %1970 = OpCompositeExtract %float %1760 0
       %1971 = OpCompositeExtract %float %1760 1
       %1972 = OpCompositeExtract %float %1760 2
       %1973 = OpCompositeConstruct %v4float %1970 %1971 %1972 %float_0
       %1974 = OpFMul %v4float %1973 %1973
       %1975 = OpFMul %v4float %1974 %1973
       %1976 = OpVectorTimesScalar %v4float %1973 %float_6
       %1977 = OpFSub %v4float %1976 %383
       %1978 = OpExtInst %v4float %1 Fma %1973 %1977 %384
       %1979 = OpFMul %v4float %1975 %1978
       %1980 = OpCompositeExtract %float %1979 0
       %1981 = OpExtInst %float %1 FMix %1794 %1819 %1980
       %1982 = OpExtInst %float %1 FMix %1844 %1869 %1980
       %1983 = OpCompositeExtract %float %1979 1
       %1984 = OpExtInst %float %1 FMix %1981 %1982 %1983
       %1985 = OpExtInst %float %1 FMix %1894 %1919 %1980
       %1986 = OpExtInst %float %1 FMix %1944 %1969 %1980
       %1987 = OpExtInst %float %1 FMix %1985 %1986 %1983
       %1988 = OpCompositeExtract %float %1979 2
       %1989 = OpExtInst %float %1 FMix %1984 %1987 %1988
       %1755 = OpExtInst %float %1 Fma %1989 %1752 %1754
       %1750 = OpVectorTimesScalar %v3float %1749 %float_2
       %1753 = OpFMul %float %1752 %float_0_5
       %1757 = OpIAdd %uint %1756 %uint_1
               OpBranch %1748
       %1759 = OpLabel
       %1990 = OpExtInst %float %1 Fma %1754 %float_0_5 %float_0_5
       %1991 = OpExtInst %float %1 FMix %float_0 %float_1 %1990
       %1992 = OpExtInst %float %1 FClamp %1991 %float_0 %float_1
       %1993 = OpExtInst %float %1 FMix %1159 %1712 %1992
       %1994 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_10 %int_3
       %1995 = OpLoad %float %1994
       %1996 = OpFMul %float %1995 %1993
       %1997 = OpExtInst %float %1 Fma %1706 %1708 %1996
       %1998 = OpExtInst %float %1 Floor %1709
       %1999 = OpFNegate %float %1998
       %2000 = OpExtInst %float %1 Fma %1705 %1708 %1999
       %2001 = OpExtInst %float %1 Fma %2000 %float_2097152 %1997
       %2002 = OpExtInst %float %1 Floor %2001
       %2003 = OpFMul %float %1998 %float_n6_28318548
       %2004 = OpExtInst %float %1 Fma %1709 %float_6_28318548 %2003
       %2005 = OpFMul %float %2002 %float_n6_28318548
       %2006 = OpExtInst %float %1 Fma %1997 %float_6_28318548 %2005
       %2007 = OpExtInst %float %1 Fma %2004 %float_2097152 %2006
       %2008 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_12 %int_0
       %2009 = OpLoad %float %2008
       %2010 = OpCompositeConstruct %v3float %2009 %2009 %2009
       %2011 = OpFMul %v3float %591 %2010
       %2012 = OpFMul %v3float %2010 %640
       %2013 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_12 %int_1
       %2014 = OpLoad %float %2013
       %2015 = OpCompositeConstruct %v3float %2014 %2014 %2014
       %2016 = OpFMul %v3float %2011 %2015
       %2017 = OpFMul %v3float %2012 %2015
       %2018 = OpFMul %v3float %2017 %507
       %2019 = OpCompositeExtract %float %2018 0
       %2020 = OpCompositeExtract %float %2018 1
       %2021 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_12 %int_3
       %2022 = OpLoad %float %2021
       %2023 = OpFMul %float %1159 %2022
       %2024 = OpCompositeExtract %float %2018 2
       %2025 = OpCompositeConstruct %v2float %2023 %2023
       %2026 = OpCompositeConstruct %v2float %2024 %2024
       %2027 = OpFAdd %v2float %2025 %2026
       %2028 = OpCompositeExtract %float %2027 0
       %2029 = OpCompositeConstruct %v3float %2019 %2020 %2028
       %2030 = OpVectorTimesScalar %v3float %2029 %float_4_76837158en07
       %2031 = OpFAdd %v3float %2030 %140
       %2032 = OpExtInst %v3float %1 Fma %2016 %507 %2031
       %2033 = OpExtInst %v3float %1 Floor %2032
       %2034 = OpFNegate %v3float %2033
       %2035 = OpExtInst %v3float %1 Fma %2016 %507 %2034
       %2036 = OpVectorTimesScalar %v3float %2035 %float_2097152
       %2037 = OpFAdd %v3float %2036 %2029
       %2038 = OpVectorTimesScalar %v3float %2037 %float_1
               OpBranch %2039
       %2039 = OpLabel
       %2040 = OpPhi %v3float %2038 %1759 %2041 %2042
       %2043 = OpPhi %float %float_1 %1759 %2044 %2042
       %2045 = OpPhi %float %float_0 %1759 %2046 %2042
       %2047 = OpPhi %uint %uint_0 %1759 %2048 %2042
       %2049 = OpULessThan %bool %2047 %uint_10
               OpLoopMerge %2050 %2042 DontUnroll
               OpBranchConditional %2049 %2042 %2050
       %2042 = OpLabel
       %2051 = OpExtInst %v3float %1 Fract %2040
       %2052 = OpExtInst %v3float %1 Floor %2040
       %2053 = OpDot %float %2052 %387
       %2054 = OpFAdd %float %2053 %float_19
       %2055 = OpFAdd %float %2053 %float_47
       %2056 = OpFAdd %float %2053 %float_66
       %2057 = OpFAdd %float %2053 %float_101
       %2058 = OpFAdd %float %2053 %float_120
       %2059 = OpFAdd %float %2053 %float_148
       %2060 = OpFAdd %float %2053 %float_167
       %2061 = OpConvertFToS %int %2053
       %2062 = OpCompositeConstruct %v3int %2061 %int_0 %int_0
       %2063 = OpBitcast %v3uint %2062
       %2064 = OpIMul %v3uint %2063 %403
       %2065 = OpIAdd %v3uint %2064 %405
       %2066 = OpCompositeExtract %uint %2065 1
       %2067 = OpCompositeExtract %uint %2065 2
       %2068 = OpIMul %uint %2066 %2067
       %2069 = OpCompositeExtract %uint %2065 0
       %2070 = OpIAdd %uint %2069 %2068
       %2071 = OpIMul %uint %2067 %2070
       %2072 = OpIAdd %uint %2066 %2071
       %2073 = OpIMul %uint %2070 %2072
       %2074 = OpIAdd %uint %2067 %2073
       %2075 = OpIMul %uint %2072 %2074
       %2076 = OpIAdd %uint %2070 %2075
       %2077 = OpCompositeInsert %v3uint %2076 %549 0
       %2078 = OpBitwiseAnd %v3uint %406 %407
       %2079 = OpShiftRightLogical %v3uint %2077 %2078
       %2080 = OpCompositeExtract %uint %2079 0
       %2081 = OpCompositeConstruct %v3uint %2080 %2080 %2080
       %2082 = OpBitwiseAnd %v3uint %2081 %388
       %2083 = OpConvertUToF %v3float %2082
       %2084 = OpExtInst %v3float %1 Fma %2083 %392 %282
       %2085 = OpDot %float %2084 %2051
       %2086 = OpConvertFToS %int %2054
       %2087 = OpFSub %v3float %2051 %351
       %2088 = OpCompositeConstruct %v3int %2086 %int_0 %int_0
       %2089 = OpBitcast %v3uint %2088
       %2090 = OpIMul %v3uint %2089 %403
       %2091 = OpIAdd %v3uint %2090 %405
       %2092 = OpCompositeExtract %uint %2091 1
       %2093 = OpCompositeExtract %uint %2091 2
       %2094 = OpIMul %uint %2092 %2093
       %2095 = OpCompositeExtract %uint %2091 0
       %2096 = OpIAdd %uint %2095 %2094
       %2097 = OpIMul %uint %2093 %2096
       %2098 = OpIAdd %uint %2092 %2097
       %2099 = OpIMul %uint %2096 %2098
       %2100 = OpIAdd %uint %2093 %2099
       %2101 = OpIMul %uint %2098 %2100
       %2102 = OpIAdd %uint %2096 %2101
       %2103 = OpCompositeInsert %v3uint %2102 %549 0
       %2104 = OpShiftRightLogical %v3uint %2103 %2078
       %2105 = OpCompositeExtract %uint %2104 0
       %2106 = OpCompositeConstruct %v3uint %2105 %2105 %2105
       %2107 = OpBitwiseAnd %v3uint %2106 %388
       %2108 = OpConvertUToF %v3float %2107
       %2109 = OpExtInst %v3float %1 Fma %2108 %392 %282
       %2110 = OpDot %float %2109 %2087
       %2111 = OpConvertFToS %int %2055
       %2112 = OpFSub %v3float %2051 %352
       %2113 = OpCompositeConstruct %v3int %2111 %int_0 %int_0
       %2114 = OpBitcast %v3uint %2113
       %2115 = OpIMul %v3uint %2114 %403
       %2116 = OpIAdd %v3uint %2115 %405
       %2117 = OpCompositeExtract %uint %2116 1
       %2118 = OpCompositeExtract %uint %2116 2
       %2119 = OpIMul %uint %2117 %2118
       %2120 = OpCompositeExtract %uint %2116 0
       %2121 = OpIAdd %uint %2120 %2119
       %2122 = OpIMul %uint %2118 %2121
       %2123 = OpIAdd %uint %2117 %2122
       %2124 = OpIMul %uint %2121 %2123
       %2125 = OpIAdd %uint %2118 %2124
       %2126 = OpIMul %uint %2123 %2125
       %2127 = OpIAdd %uint %2121 %2126
       %2128 = OpCompositeInsert %v3uint %2127 %549 0
       %2129 = OpShiftRightLogical %v3uint %2128 %2078
       %2130 = OpCompositeExtract %uint %2129 0
       %2131 = OpCompositeConstruct %v3uint %2130 %2130 %2130
       %2132 = OpBitwiseAnd %v3uint %2131 %388
       %2133 = OpConvertUToF %v3float %2132
       %2134 = OpExtInst %v3float %1 Fma %2133 %392 %282
       %2135 = OpDot %float %2134 %2112
       %2136 = OpConvertFToS %int %2056
       %2137 = OpFSub %v3float %2051 %137
       %2138 = OpCompositeConstruct %v3int %2136 %int_0 %int_0
       %2139 = OpBitcast %v3uint %2138
       %2140 = OpIMul %v3uint %2139 %403
       %2141 = OpIAdd %v3uint %2140 %405
       %2142 = OpCompositeExtract %uint %2141 1
       %2143 = OpCompositeExtract %uint %2141 2
       %2144 = OpIMul %uint %2142 %2143
       %2145 = OpCompositeExtract %uint %2141 0
       %2146 = OpIAdd %uint %2145 %2144
       %2147 = OpIMul %uint %2143 %2146
       %2148 = OpIAdd %uint %2142 %2147
       %2149 = OpIMul %uint %2146 %2148
       %2150 = OpIAdd %uint %2143 %2149
       %2151 = OpIMul %uint %2148 %2150
       %2152 = OpIAdd %uint %2146 %2151
       %2153 = OpCompositeInsert %v3uint %2152 %549 0
       %2154 = OpShiftRightLogical %v3uint %2153 %2078
       %2155 = OpCompositeExtract %uint %2154 0
       %2156 = OpCompositeConstruct %v3uint %2155 %2155 %2155
       %2157 = OpBitwiseAnd %v3uint %2156 %388
       %2158 = OpConvertUToF %v3float %2157
       %2159 = OpExtInst %v3float %1 Fma %2158 %392 %282
       %2160 = OpDot %float %2159 %2137
       %2161 = OpConvertFToS %int %2057
       %2162 = OpFSub %v3float %2051 %294
       %2163 = OpCompositeConstruct %v3int %2161 %int_0 %int_0
       %2164 = OpBitcast %v3uint %2163
       %2165 = OpIMul %v3uint %2164 %403
       %2166 = OpIAdd %v3uint %2165 %405
       %2167 = OpCompositeExtract %uint %2166 1
       %2168 = OpCompositeExtract %uint %2166 2
       %2169 = OpIMul %uint %2167 %2168
       %2170 = OpCompositeExtract %uint %2166 0
       %2171 = OpIAdd %uint %2170 %2169
       %2172 = OpIMul %uint %2168 %2171
       %2173 = OpIAdd %uint %2167 %2172
       %2174 = OpIMul %uint %2171 %2173
       %2175 = OpIAdd %uint %2168 %2174
       %2176 = OpIMul %uint %2173 %2175
       %2177 = OpIAdd %uint %2171 %2176
       %2178 = OpCompositeInsert %v3uint %2177 %549 0
       %2179 = OpShiftRightLogical %v3uint %2178 %2078
       %2180 = OpCompositeExtract %uint %2179 0
       %2181 = OpCompositeConstruct %v3uint %2180 %2180 %2180
       %2182 = OpBitwiseAnd %v3uint %2181 %388
       %2183 = OpConvertUToF %v3float %2182
       %2184 = OpExtInst %v3float %1 Fma %2183 %392 %282
       %2185 = OpDot %float %2184 %2162
       %2186 = OpConvertFToS %int %2058
       %2187 = OpFSub %v3float %2051 %143
       %2188 = OpCompositeConstruct %v3int %2186 %int_0 %int_0
       %2189 = OpBitcast %v3uint %2188
       %2190 = OpIMul %v3uint %2189 %403
       %2191 = OpIAdd %v3uint %2190 %405
       %2192 = OpCompositeExtract %uint %2191 1
       %2193 = OpCompositeExtract %uint %2191 2
       %2194 = OpIMul %uint %2192 %2193
       %2195 = OpCompositeExtract %uint %2191 0
       %2196 = OpIAdd %uint %2195 %2194
       %2197 = OpIMul %uint %2193 %2196
       %2198 = OpIAdd %uint %2192 %2197
       %2199 = OpIMul %uint %2196 %2198
       %2200 = OpIAdd %uint %2193 %2199
       %2201 = OpIMul %uint %2198 %2200
       %2202 = OpIAdd %uint %2196 %2201
       %2203 = OpCompositeInsert %v3uint %2202 %549 0
       %2204 = OpShiftRightLogical %v3uint %2203 %2078
       %2205 = OpCompositeExtract %uint %2204 0
       %2206 = OpCompositeConstruct %v3uint %2205 %2205 %2205
       %2207 = OpBitwiseAnd %v3uint %2206 %388
       %2208 = OpConvertUToF %v3float %2207
       %2209 = OpExtInst %v3float %1 Fma %2208 %392 %282
       %2210 = OpDot %float %2209 %2187
       %2211 = OpConvertFToS %int %2059
       %2212 = OpFSub %v3float %2051 %138
       %2213 = OpCompositeConstruct %v3int %2211 %int_0 %int_0
       %2214 = OpBitcast %v3uint %2213
       %2215 = OpIMul %v3uint %2214 %403
       %2216 = OpIAdd %v3uint %2215 %405
       %2217 = OpCompositeExtract %uint %2216 1
       %2218 = OpCompositeExtract %uint %2216 2
       %2219 = OpIMul %uint %2217 %2218
       %2220 = OpCompositeExtract %uint %2216 0
       %2221 = OpIAdd %uint %2220 %2219
       %2222 = OpIMul %uint %2218 %2221
       %2223 = OpIAdd %uint %2217 %2222
       %2224 = OpIMul %uint %2221 %2223
       %2225 = OpIAdd %uint %2218 %2224
       %2226 = OpIMul %uint %2223 %2225
       %2227 = OpIAdd %uint %2221 %2226
       %2228 = OpCompositeInsert %v3uint %2227 %549 0
       %2229 = OpShiftRightLogical %v3uint %2228 %2078
       %2230 = OpCompositeExtract %uint %2229 0
       %2231 = OpCompositeConstruct %v3uint %2230 %2230 %2230
       %2232 = OpBitwiseAnd %v3uint %2231 %388
       %2233 = OpConvertUToF %v3float %2232
       %2234 = OpExtInst %v3float %1 Fma %2233 %392 %282
       %2235 = OpDot %float %2234 %2212
       %2236 = OpConvertFToS %int %2060
       %2237 = OpFSub %v3float %2051 %130
       %2238 = OpCompositeConstruct %v3int %2236 %int_0 %int_0
       %2239 = OpBitcast %v3uint %2238
       %2240 = OpIMul %v3uint %2239 %403
       %2241 = OpIAdd %v3uint %2240 %405
       %2242 = OpCompositeExtract %uint %2241 1
       %2243 = OpCompositeExtract %uint %2241 2
       %2244 = OpIMul %uint %2242 %2243
       %2245 = OpCompositeExtract %uint %2241 0
       %2246 = OpIAdd %uint %2245 %2244
       %2247 = OpIMul %uint %2243 %2246
       %2248 = OpIAdd %uint %2242 %2247
       %2249 = OpIMul %uint %2246 %2248
       %2250 = OpIAdd %uint %2243 %2249
       %2251 = OpIMul %uint %2248 %2250
       %2252 = OpIAdd %uint %2246 %2251
       %2253 = OpCompositeInsert %v3uint %2252 %549 0
       %2254 = OpShiftRightLogical %v3uint %2253 %2078
       %2255 = OpCompositeExtract %uint %2254 0
       %2256 = OpCompositeConstruct %v3uint %2255 %2255 %2255
       %2257 = OpBitwiseAnd %v3uint %2256 %388
       %2258 = OpConvertUToF %v3float %2257
       %2259 = OpExtInst %v3float %1 Fma %2258 %392 %282
       %2260 = OpDot %float %2259 %2237
       %2261 = OpCompositeExtract %float %2051 0
       %2262 = OpCompositeExtract %float %2051 1
       %2263 = OpCompositeExtract %float %2051 2
       %2264 = OpCompositeConstruct %v4float %2261 %2262 %2263 %float_0
       %2265 = OpFMul %v4float %2264 %2264
       %2266 = OpFMul %v4float %2265 %2264
       %2267 = OpVectorTimesScalar %v4float %2264 %float_6
       %2268 = OpFSub %v4float %2267 %383
       %2269 = OpExtInst %v4float %1 Fma %2264 %2268 %384
       %2270 = OpFMul %v4float %2266 %2269
       %2271 = OpCompositeExtract %float %2270 0
       %2272 = OpExtInst %float %1 FMix %2085 %2110 %2271
       %2273 = OpExtInst %float %1 FMix %2135 %2160 %2271
       %2274 = OpCompositeExtract %float %2270 1
       %2275 = OpExtInst %float %1 FMix %2272 %2273 %2274
       %2276 = OpExtInst %float %1 FMix %2185 %2210 %2271
       %2277 = OpExtInst %float %1 FMix %2235 %2260 %2271
       %2278 = OpExtInst %float %1 FMix %2276 %2277 %2274
       %2279 = OpCompositeExtract %float %2270 2
       %2280 = OpExtInst %float %1 FMix %2275 %2278 %2279
       %2281 = OpExtInst %float %1 FAbs %2280
       %2046 = OpExtInst %float %1 Fma %2281 %2043 %2045
       %2041 = OpVectorTimesScalar %v3float %2040 %float_2
       %2044 = OpFMul %float %2043 %float_0_5
       %2048 = OpIAdd %uint %2047 %uint_1
               OpBranch %2039
       %2050 = OpLabel
       %2282 = OpExtInst %float %1 FMix %float_0 %float_1 %2045
       %2283 = OpFMul %v3float %2017 %509
       %2284 = OpCompositeExtract %float %2283 0
       %2285 = OpCompositeExtract %float %2283 1
       %2286 = OpCompositeExtract %float %2283 2
       %2287 = OpCompositeConstruct %v2float %2286 %2286
       %2288 = OpFAdd %v2float %2025 %2287
       %2289 = OpCompositeExtract %float %2288 0
       %2290 = OpCompositeConstruct %v3float %2284 %2285 %2289
       %2291 = OpVectorTimesScalar %v3float %2290 %float_4_76837158en07
       %2292 = OpFAdd %v3float %2291 %140
       %2293 = OpExtInst %v3float %1 Fma %2016 %509 %2292
       %2294 = OpExtInst %v3float %1 Floor %2293
       %2295 = OpFNegate %v3float %2294
       %2296 = OpExtInst %v3float %1 Fma %2016 %509 %2295
       %2297 = OpVectorTimesScalar %v3float %2296 %float_2097152
       %2298 = OpFAdd %v3float %2297 %2290
       %2299 = OpVectorTimesScalar %v3float %2298 %float_1
               OpBranch %2300
       %2300 = OpLabel
       %2301 = OpPhi %v3float %2299 %2050 %2302 %2303
       %2304 = OpPhi %float %float_1 %2050 %2305 %2303
       %2306 = OpPhi %float %float_0 %2050 %2307 %2303
       %2308 = OpPhi %uint %uint_0 %2050 %2309 %2303
       %2310 = OpULessThan %bool %2308 %uint_10
               OpLoopMerge %2311 %2303 DontUnroll
               OpBranchConditional %2310 %2303 %2311
       %2303 = OpLabel
       %2312 = OpExtInst %v3float %1 Fract %2301
       %2313 = OpExtInst %v3float %1 Floor %2301
       %2314 = OpDot %float %2313 %387
       %2315 = OpFAdd %float %2314 %float_19
       %2316 = OpFAdd %float %2314 %float_47
       %2317 = OpFAdd %float %2314 %float_66
       %2318 = OpFAdd %float %2314 %float_101
       %2319 = OpFAdd %float %2314 %float_120
       %2320 = OpFAdd %float %2314 %float_148
       %2321 = OpFAdd %float %2314 %float_167
       %2322 = OpConvertFToS %int %2314
       %2323 = OpCompositeConstruct %v3int %2322 %int_0 %int_0
       %2324 = OpBitcast %v3uint %2323
       %2325 = OpIMul %v3uint %2324 %403
       %2326 = OpIAdd %v3uint %2325 %405
       %2327 = OpCompositeExtract %uint %2326 1
       %2328 = OpCompositeExtract %uint %2326 2
       %2329 = OpIMul %uint %2327 %2328
       %2330 = OpCompositeExtract %uint %2326 0
       %2331 = OpIAdd %uint %2330 %2329
       %2332 = OpIMul %uint %2328 %2331
       %2333 = OpIAdd %uint %2327 %2332
       %2334 = OpIMul %uint %2331 %2333
       %2335 = OpIAdd %uint %2328 %2334
       %2336 = OpIMul %uint %2333 %2335
       %2337 = OpIAdd %uint %2331 %2336
       %2338 = OpCompositeInsert %v3uint %2337 %549 0
       %2339 = OpBitwiseAnd %v3uint %406 %407
       %2340 = OpShiftRightLogical %v3uint %2338 %2339
       %2341 = OpCompositeExtract %uint %2340 0
       %2342 = OpCompositeConstruct %v3uint %2341 %2341 %2341
       %2343 = OpBitwiseAnd %v3uint %2342 %388
       %2344 = OpConvertUToF %v3float %2343
       %2345 = OpExtInst %v3float %1 Fma %2344 %392 %282
       %2346 = OpDot %float %2345 %2312
       %2347 = OpConvertFToS %int %2315
       %2348 = OpFSub %v3float %2312 %351
       %2349 = OpCompositeConstruct %v3int %2347 %int_0 %int_0
       %2350 = OpBitcast %v3uint %2349
       %2351 = OpIMul %v3uint %2350 %403
       %2352 = OpIAdd %v3uint %2351 %405
       %2353 = OpCompositeExtract %uint %2352 1
       %2354 = OpCompositeExtract %uint %2352 2
       %2355 = OpIMul %uint %2353 %2354
       %2356 = OpCompositeExtract %uint %2352 0
       %2357 = OpIAdd %uint %2356 %2355
       %2358 = OpIMul %uint %2354 %2357
       %2359 = OpIAdd %uint %2353 %2358
       %2360 = OpIMul %uint %2357 %2359
       %2361 = OpIAdd %uint %2354 %2360
       %2362 = OpIMul %uint %2359 %2361
       %2363 = OpIAdd %uint %2357 %2362
       %2364 = OpCompositeInsert %v3uint %2363 %549 0
       %2365 = OpShiftRightLogical %v3uint %2364 %2339
       %2366 = OpCompositeExtract %uint %2365 0
       %2367 = OpCompositeConstruct %v3uint %2366 %2366 %2366
       %2368 = OpBitwiseAnd %v3uint %2367 %388
       %2369 = OpConvertUToF %v3float %2368
       %2370 = OpExtInst %v3float %1 Fma %2369 %392 %282
       %2371 = OpDot %float %2370 %2348
       %2372 = OpConvertFToS %int %2316
       %2373 = OpFSub %v3float %2312 %352
       %2374 = OpCompositeConstruct %v3int %2372 %int_0 %int_0
       %2375 = OpBitcast %v3uint %2374
       %2376 = OpIMul %v3uint %2375 %403
       %2377 = OpIAdd %v3uint %2376 %405
       %2378 = OpCompositeExtract %uint %2377 1
       %2379 = OpCompositeExtract %uint %2377 2
       %2380 = OpIMul %uint %2378 %2379
       %2381 = OpCompositeExtract %uint %2377 0
       %2382 = OpIAdd %uint %2381 %2380
       %2383 = OpIMul %uint %2379 %2382
       %2384 = OpIAdd %uint %2378 %2383
       %2385 = OpIMul %uint %2382 %2384
       %2386 = OpIAdd %uint %2379 %2385
       %2387 = OpIMul %uint %2384 %2386
       %2388 = OpIAdd %uint %2382 %2387
       %2389 = OpCompositeInsert %v3uint %2388 %549 0
       %2390 = OpShiftRightLogical %v3uint %2389 %2339
       %2391 = OpCompositeExtract %uint %2390 0
       %2392 = OpCompositeConstruct %v3uint %2391 %2391 %2391
       %2393 = OpBitwiseAnd %v3uint %2392 %388
       %2394 = OpConvertUToF %v3float %2393
       %2395 = OpExtInst %v3float %1 Fma %2394 %392 %282
       %2396 = OpDot %float %2395 %2373
       %2397 = OpConvertFToS %int %2317
       %2398 = OpFSub %v3float %2312 %137
       %2399 = OpCompositeConstruct %v3int %2397 %int_0 %int_0
       %2400 = OpBitcast %v3uint %2399
       %2401 = OpIMul %v3uint %2400 %403
       %2402 = OpIAdd %v3uint %2401 %405
       %2403 = OpCompositeExtract %uint %2402 1
       %2404 = OpCompositeExtract %uint %2402 2
       %2405 = OpIMul %uint %2403 %2404
       %2406 = OpCompositeExtract %uint %2402 0
       %2407 = OpIAdd %uint %2406 %2405
       %2408 = OpIMul %uint %2404 %2407
       %2409 = OpIAdd %uint %2403 %2408
       %2410 = OpIMul %uint %2407 %2409
       %2411 = OpIAdd %uint %2404 %2410
       %2412 = OpIMul %uint %2409 %2411
       %2413 = OpIAdd %uint %2407 %2412
       %2414 = OpCompositeInsert %v3uint %2413 %549 0
       %2415 = OpShiftRightLogical %v3uint %2414 %2339
       %2416 = OpCompositeExtract %uint %2415 0
       %2417 = OpCompositeConstruct %v3uint %2416 %2416 %2416
       %2418 = OpBitwiseAnd %v3uint %2417 %388
       %2419 = OpConvertUToF %v3float %2418
       %2420 = OpExtInst %v3float %1 Fma %2419 %392 %282
       %2421 = OpDot %float %2420 %2398
       %2422 = OpConvertFToS %int %2318
       %2423 = OpFSub %v3float %2312 %294
       %2424 = OpCompositeConstruct %v3int %2422 %int_0 %int_0
       %2425 = OpBitcast %v3uint %2424
       %2426 = OpIMul %v3uint %2425 %403
       %2427 = OpIAdd %v3uint %2426 %405
       %2428 = OpCompositeExtract %uint %2427 1
       %2429 = OpCompositeExtract %uint %2427 2
       %2430 = OpIMul %uint %2428 %2429
       %2431 = OpCompositeExtract %uint %2427 0
       %2432 = OpIAdd %uint %2431 %2430
       %2433 = OpIMul %uint %2429 %2432
       %2434 = OpIAdd %uint %2428 %2433
       %2435 = OpIMul %uint %2432 %2434
       %2436 = OpIAdd %uint %2429 %2435
       %2437 = OpIMul %uint %2434 %2436
       %2438 = OpIAdd %uint %2432 %2437
       %2439 = OpCompositeInsert %v3uint %2438 %549 0
       %2440 = OpShiftRightLogical %v3uint %2439 %2339
       %2441 = OpCompositeExtract %uint %2440 0
       %2442 = OpCompositeConstruct %v3uint %2441 %2441 %2441
       %2443 = OpBitwiseAnd %v3uint %2442 %388
       %2444 = OpConvertUToF %v3float %2443
       %2445 = OpExtInst %v3float %1 Fma %2444 %392 %282
       %2446 = OpDot %float %2445 %2423
       %2447 = OpConvertFToS %int %2319
       %2448 = OpFSub %v3float %2312 %143
       %2449 = OpCompositeConstruct %v3int %2447 %int_0 %int_0
       %2450 = OpBitcast %v3uint %2449
       %2451 = OpIMul %v3uint %2450 %403
       %2452 = OpIAdd %v3uint %2451 %405
       %2453 = OpCompositeExtract %uint %2452 1
       %2454 = OpCompositeExtract %uint %2452 2
       %2455 = OpIMul %uint %2453 %2454
       %2456 = OpCompositeExtract %uint %2452 0
       %2457 = OpIAdd %uint %2456 %2455
       %2458 = OpIMul %uint %2454 %2457
       %2459 = OpIAdd %uint %2453 %2458
       %2460 = OpIMul %uint %2457 %2459
       %2461 = OpIAdd %uint %2454 %2460
       %2462 = OpIMul %uint %2459 %2461
       %2463 = OpIAdd %uint %2457 %2462
       %2464 = OpCompositeInsert %v3uint %2463 %549 0
       %2465 = OpShiftRightLogical %v3uint %2464 %2339
       %2466 = OpCompositeExtract %uint %2465 0
       %2467 = OpCompositeConstruct %v3uint %2466 %2466 %2466
       %2468 = OpBitwiseAnd %v3uint %2467 %388
       %2469 = OpConvertUToF %v3float %2468
       %2470 = OpExtInst %v3float %1 Fma %2469 %392 %282
       %2471 = OpDot %float %2470 %2448
       %2472 = OpConvertFToS %int %2320
       %2473 = OpFSub %v3float %2312 %138
       %2474 = OpCompositeConstruct %v3int %2472 %int_0 %int_0
       %2475 = OpBitcast %v3uint %2474
       %2476 = OpIMul %v3uint %2475 %403
       %2477 = OpIAdd %v3uint %2476 %405
       %2478 = OpCompositeExtract %uint %2477 1
       %2479 = OpCompositeExtract %uint %2477 2
       %2480 = OpIMul %uint %2478 %2479
       %2481 = OpCompositeExtract %uint %2477 0
       %2482 = OpIAdd %uint %2481 %2480
       %2483 = OpIMul %uint %2479 %2482
       %2484 = OpIAdd %uint %2478 %2483
       %2485 = OpIMul %uint %2482 %2484
       %2486 = OpIAdd %uint %2479 %2485
       %2487 = OpIMul %uint %2484 %2486
       %2488 = OpIAdd %uint %2482 %2487
       %2489 = OpCompositeInsert %v3uint %2488 %549 0
       %2490 = OpShiftRightLogical %v3uint %2489 %2339
       %2491 = OpCompositeExtract %uint %2490 0
       %2492 = OpCompositeConstruct %v3uint %2491 %2491 %2491
       %2493 = OpBitwiseAnd %v3uint %2492 %388
       %2494 = OpConvertUToF %v3float %2493
       %2495 = OpExtInst %v3float %1 Fma %2494 %392 %282
       %2496 = OpDot %float %2495 %2473
       %2497 = OpConvertFToS %int %2321
       %2498 = OpFSub %v3float %2312 %130
       %2499 = OpCompositeConstruct %v3int %2497 %int_0 %int_0
       %2500 = OpBitcast %v3uint %2499
       %2501 = OpIMul %v3uint %2500 %403
       %2502 = OpIAdd %v3uint %2501 %405
       %2503 = OpCompositeExtract %uint %2502 1
       %2504 = OpCompositeExtract %uint %2502 2
       %2505 = OpIMul %uint %2503 %2504
       %2506 = OpCompositeExtract %uint %2502 0
       %2507 = OpIAdd %uint %2506 %2505
       %2508 = OpIMul %uint %2504 %2507
       %2509 = OpIAdd %uint %2503 %2508
       %2510 = OpIMul %uint %2507 %2509
       %2511 = OpIAdd %uint %2504 %2510
       %2512 = OpIMul %uint %2509 %2511
       %2513 = OpIAdd %uint %2507 %2512
       %2514 = OpCompositeInsert %v3uint %2513 %549 0
       %2515 = OpShiftRightLogical %v3uint %2514 %2339
       %2516 = OpCompositeExtract %uint %2515 0
       %2517 = OpCompositeConstruct %v3uint %2516 %2516 %2516
       %2518 = OpBitwiseAnd %v3uint %2517 %388
       %2519 = OpConvertUToF %v3float %2518
       %2520 = OpExtInst %v3float %1 Fma %2519 %392 %282
       %2521 = OpDot %float %2520 %2498
       %2522 = OpCompositeExtract %float %2312 0
       %2523 = OpCompositeExtract %float %2312 1
       %2524 = OpCompositeExtract %float %2312 2
       %2525 = OpCompositeConstruct %v4float %2522 %2523 %2524 %float_0
       %2526 = OpFMul %v4float %2525 %2525
       %2527 = OpFMul %v4float %2526 %2525
       %2528 = OpVectorTimesScalar %v4float %2525 %float_6
       %2529 = OpFSub %v4float %2528 %383
       %2530 = OpExtInst %v4float %1 Fma %2525 %2529 %384
       %2531 = OpFMul %v4float %2527 %2530
       %2532 = OpCompositeExtract %float %2531 0
       %2533 = OpExtInst %float %1 FMix %2346 %2371 %2532
       %2534 = OpExtInst %float %1 FMix %2396 %2421 %2532
       %2535 = OpCompositeExtract %float %2531 1
       %2536 = OpExtInst %float %1 FMix %2533 %2534 %2535
       %2537 = OpExtInst %float %1 FMix %2446 %2471 %2532
       %2538 = OpExtInst %float %1 FMix %2496 %2521 %2532
       %2539 = OpExtInst %float %1 FMix %2537 %2538 %2535
       %2540 = OpCompositeExtract %float %2531 2
       %2541 = OpExtInst %float %1 FMix %2536 %2539 %2540
       %2542 = OpExtInst %float %1 FAbs %2541
       %2307 = OpExtInst %float %1 Fma %2542 %2304 %2306
       %2302 = OpVectorTimesScalar %v3float %2301 %float_2
       %2305 = OpFMul %float %2304 %float_0_5
       %2309 = OpIAdd %uint %2308 %uint_1
               OpBranch %2300
       %2311 = OpLabel
       %2543 = OpExtInst %float %1 FMix %float_0 %float_1 %2306
       %2544 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_13 %int_1
       %2545 = OpLoad %float %2544
       %2546 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_13 %int_0
       %2547 = OpLoad %float %2546
       %2548 = OpExtInst %float %1 Fma %2543 %2545 %2547
       %2549 = OpFMul %float %2282 %2548
       %2550 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_11 %int_3
       %2551 = OpLoad %float %2550
       %2552 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_13 %int_2
       %2553 = OpLoad %float %2552
       %2554 = OpExtInst %float %1 FMix %2551 %2553 %2549
       %2555 = OpExtInst %float %1 Sin %2007
       %2556 = OpFMul %float %2555 %2554
       %2557 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_15
       %2558 = OpLoad %v4float %2557
       %2559 = OpVectorShuffle %v3float %2558 %2558 0 1 2
       %2560 = OpFAdd %v3float %1683 %2559
       %2561 = OpExtInst %v3float %1 NMax %2560 %282
       %2562 = OpExtInst %v3float %1 NMin %2561 %130
       %2563 = OpCompositeExtract %float %2562 0
       %2564 = OpCompositeExtract %float %2562 1
       %2565 = OpCompositeConstruct %v2float %2563 %2564
       %2566 = OpFMul %v2float %1694 %2565
       %2567 = OpFMul %v2float %2565 %1695
       %2568 = OpCompositeExtract %float %2566 0
       %2569 = OpCompositeExtract %float %2567 0
       %2570 = OpCompositeExtract %float %2566 1
       %2571 = OpCompositeExtract %float %2567 1
       %2572 = OpFAdd %float %2568 %2570
       %2573 = OpFAdd %float %2569 %2571
       %2574 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_16 %int_1
       %2575 = OpLoad %float %2574
       %2576 = OpFMul %float %2572 %2575
       %2577 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_0
       %2578 = OpLoad %float %2577
       %2579 = OpFMul %float %2578 %1993
       %2580 = OpExtInst %float %1 Fma %2573 %2575 %2579
       %2581 = OpExtInst %float %1 Floor %2576
       %2582 = OpFNegate %float %2581
       %2583 = OpExtInst %float %1 Fma %2572 %2575 %2582
       %2584 = OpExtInst %float %1 Fma %2583 %float_2097152 %2580
       %2585 = OpExtInst %float %1 Floor %2584
       %2586 = OpFMul %float %2581 %float_n6_28318548
       %2587 = OpExtInst %float %1 Fma %2576 %float_6_28318548 %2586
       %2588 = OpFMul %float %2585 %float_n6_28318548
       %2589 = OpExtInst %float %1 Fma %2580 %float_6_28318548 %2588
       %2590 = OpExtInst %float %1 Fma %2587 %float_2097152 %2589
       %2591 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_2
       %2592 = OpLoad %float %2591
       %2593 = OpFMul %float %2554 %2592
       %2594 = OpExtInst %float %1 Sin %2590
       %2595 = OpFMul %float %2594 %2593
       %2596 = OpCompositeConstruct %v3float %548 %548 %2556
       %2597 = OpCompositeConstruct %v3float %548 %548 %2595
       %2598 = OpFAdd %v3float %2596 %2597
       %2599 = OpFSub %v3float %1683 %1686
       %2600 = OpExtInst %v3float %1 NMax %2599 %282
       %2601 = OpExtInst %v3float %1 NMin %2600 %130
       %2602 = OpCompositeExtract %float %2601 0
       %2603 = OpCompositeExtract %float %2601 1
       %2604 = OpCompositeConstruct %v2float %2602 %2603
       %2605 = OpFMul %v2float %1694 %2604
       %2606 = OpFMul %v2float %2604 %1695
       %2607 = OpCompositeExtract %float %2605 0
       %2608 = OpCompositeExtract %float %2606 0
       %2609 = OpCompositeExtract %float %2605 1
       %2610 = OpCompositeExtract %float %2606 1
       %2611 = OpFAdd %float %2607 %2609
       %2612 = OpFAdd %float %2608 %2610
       %2613 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_1
       %2614 = OpLoad %float %2613
       %2615 = OpFMul %float %2611 %2614
       %2616 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_3
       %2617 = OpLoad %float %2616
       %2618 = OpFMul %float %2617 %1993
       %2619 = OpExtInst %float %1 Fma %2612 %2614 %2618
       %2620 = OpExtInst %float %1 Floor %2615
       %2621 = OpFNegate %float %2620
       %2622 = OpExtInst %float %1 Fma %2611 %2614 %2621
       %2623 = OpExtInst %float %1 Fma %2622 %float_2097152 %2619
       %2624 = OpExtInst %float %1 Floor %2623
       %2625 = OpFMul %float %2620 %float_n6_28318548
       %2626 = OpExtInst %float %1 Fma %2615 %float_6_28318548 %2625
       %2627 = OpFMul %float %2624 %float_n6_28318548
       %2628 = OpExtInst %float %1 Fma %2619 %float_6_28318548 %2627
       %2629 = OpExtInst %float %1 Fma %2626 %float_2097152 %2628
       %2630 = OpFMul %float %2593 %2592
       %2631 = OpExtInst %float %1 Sin %2629
       %2632 = OpFMul %float %2631 %2630
       %2633 = OpCompositeConstruct %v3float %548 %548 %2632
       %2634 = OpFAdd %v3float %2598 %2633
       %2635 = OpFSub %v3float %1683 %2559
       %2636 = OpExtInst %v3float %1 NMax %2635 %282
       %2637 = OpExtInst %v3float %1 NMin %2636 %130
       %2638 = OpCompositeExtract %float %2637 0
       %2639 = OpCompositeExtract %float %2637 1
       %2640 = OpCompositeConstruct %v2float %2638 %2639
       %2641 = OpFMul %v2float %1694 %2640
       %2642 = OpFMul %v2float %2640 %1695
       %2643 = OpCompositeExtract %float %2641 0
       %2644 = OpCompositeExtract %float %2642 0
       %2645 = OpCompositeExtract %float %2641 1
       %2646 = OpCompositeExtract %float %2642 1
       %2647 = OpFAdd %float %2643 %2645
       %2648 = OpFAdd %float %2644 %2646
       %2649 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_19 %int_2
       %2650 = OpLoad %float %2649
       %2651 = OpFMul %float %2647 %2650
       %2652 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_20 %int_0
       %2653 = OpLoad %float %2652
       %2654 = OpFMul %float %2653 %1993
       %2655 = OpExtInst %float %1 Fma %2648 %2650 %2654
       %2656 = OpExtInst %float %1 Floor %2651
       %2657 = OpFNegate %float %2656
       %2658 = OpExtInst %float %1 Fma %2647 %2650 %2657
       %2659 = OpExtInst %float %1 Fma %2658 %float_2097152 %2655
       %2660 = OpExtInst %float %1 Floor %2659
       %2661 = OpFMul %float %2656 %float_n6_28318548
       %2662 = OpExtInst %float %1 Fma %2651 %float_6_28318548 %2661
       %2663 = OpFMul %float %2660 %float_n6_28318548
       %2664 = OpExtInst %float %1 Fma %2655 %float_6_28318548 %2663
       %2665 = OpExtInst %float %1 Fma %2662 %float_2097152 %2664
       %2666 = OpFMul %float %2630 %2592
       %2667 = OpExtInst %float %1 Sin %2665
       %2668 = OpFMul %float %2667 %2666
       %2669 = OpCompositeConstruct %v3float %548 %548 %2668
       %2670 = OpFAdd %v3float %2634 %2669
       %2671 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_20 %int_3
       %2672 = OpLoad %float %2671
       %2673 = OpFSub %float %2672 %float_n1
       %2674 = OpExtInst %float %1 FAbs %2673
       %2675 = OpFOrdGreaterThan %bool %2674 %float_9_99999975en06
       %2676 = OpFOrdGreaterThanEqual %bool %2672 %float_n1
       %2677 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_21 %int_0
       %2678 = OpLoad %float %2677
       %2679 = OpSelect %float %2676 %2672 %2678
       %2680 = OpSelect %float %2675 %2679 %2672
       %2681 = OpFSub %float %2680 %float_1
       %2682 = OpExtInst %float %1 FAbs %2681
       %2683 = OpFOrdGreaterThan %bool %2682 %float_9_99999975en06
       %2684 = OpFOrdGreaterThanEqual %bool %2680 %float_1
       %2685 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_21 %int_1
       %2686 = OpLoad %float %2685
       %2687 = OpSelect %float %2684 %2686 %2672
       %2688 = OpSelect %float %2683 %2687 %2672
       %2689 = OpExtInst %float %1 FAbs %2688
       %2690 = OpFOrdGreaterThan %bool %2689 %float_9_99999975en06
       %2691 = OpFOrdGreaterThanEqual %bool %2688 %float_0
       %2692 = OpSelect %float %2691 %float_1 %float_n1
       %2693 = OpSelect %float %2690 %2692 %float_1
       %2694 = OpExtInst %float %1 NMax %2693 %float_n1
       %2695 = OpExtInst %float %1 NMin %2694 %float_1
       %2696 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_22 %int_2
       %2697 = OpLoad %float %2696
       %2698 = OpCompositeConstruct %v3float %2695 %2697 %float_0
       %2699 = OpFAdd %v3float %2698 %1686
       %2700 = OpExtInst %v3float %1 NMax %2699 %282
       %2701 = OpExtInst %v3float %1 NMin %2700 %130
       %2702 = OpCompositeExtract %float %2701 0
       %2703 = OpCompositeExtract %float %2701 1
       %2704 = OpCompositeConstruct %v2float %2702 %2703
       %2705 = OpFMul %v2float %1694 %2704
       %2706 = OpFMul %v2float %2704 %1695
       %2707 = OpCompositeExtract %float %2705 0
       %2708 = OpCompositeExtract %float %2706 0
       %2709 = OpCompositeExtract %float %2705 1
       %2710 = OpCompositeExtract %float %2706 1
       %2711 = OpFAdd %float %2707 %2709
       %2712 = OpFAdd %float %2708 %2710
       %2713 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_24 %int_3
       %2714 = OpLoad %float %2713
       %2715 = OpFMul %float %2711 %2714
       %2716 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_25 %int_2
       %2717 = OpLoad %float %2716
       %2718 = OpFMul %float %2717 %1993
       %2719 = OpExtInst %float %1 Fma %2712 %2714 %2718
       %2720 = OpExtInst %float %1 Floor %2715
       %2721 = OpFNegate %float %2720
       %2722 = OpExtInst %float %1 Fma %2711 %2714 %2721
       %2723 = OpExtInst %float %1 Fma %2722 %float_2097152 %2719
       %2724 = OpExtInst %float %1 Floor %2723
       %2725 = OpFMul %float %2720 %float_n6_28318548
       %2726 = OpExtInst %float %1 Fma %2715 %float_6_28318548 %2725
       %2727 = OpFMul %float %2724 %float_n6_28318548
       %2728 = OpExtInst %float %1 Fma %2719 %float_6_28318548 %2727
       %2729 = OpExtInst %float %1 Fma %2726 %float_2097152 %2728
       %2730 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_25 %int_3
       %2731 = OpLoad %float %2730
       %2732 = OpFMul %float %2554 %2731
       %2733 = OpExtInst %float %1 Sin %2729
       %2734 = OpFMul %float %2733 %2732
       %2735 = OpFAdd %v3float %2698 %2559
       %2736 = OpExtInst %v3float %1 NMax %2735 %282
       %2737 = OpExtInst %v3float %1 NMin %2736 %130
       %2738 = OpCompositeExtract %float %2737 0
       %2739 = OpCompositeExtract %float %2737 1
       %2740 = OpCompositeConstruct %v2float %2738 %2739
       %2741 = OpFMul %v2float %1694 %2740
       %2742 = OpFMul %v2float %2740 %1695
       %2743 = OpCompositeExtract %float %2741 0
       %2744 = OpCompositeExtract %float %2742 0
       %2745 = OpCompositeExtract %float %2741 1
       %2746 = OpCompositeExtract %float %2742 1
       %2747 = OpFAdd %float %2743 %2745
       %2748 = OpFAdd %float %2744 %2746
       %2749 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_26 %int_1
       %2750 = OpLoad %float %2749
       %2751 = OpFMul %float %2747 %2750
       %2752 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_26 %int_3
       %2753 = OpLoad %float %2752
       %2754 = OpFMul %float %2753 %1993
       %2755 = OpExtInst %float %1 Fma %2748 %2750 %2754
       %2756 = OpExtInst %float %1 Floor %2751
       %2757 = OpFNegate %float %2756
       %2758 = OpExtInst %float %1 Fma %2747 %2750 %2757
       %2759 = OpExtInst %float %1 Fma %2758 %float_2097152 %2755
       %2760 = OpExtInst %float %1 Floor %2759
       %2761 = OpFMul %float %2756 %float_n6_28318548
       %2762 = OpExtInst %float %1 Fma %2751 %float_6_28318548 %2761
       %2763 = OpFMul %float %2760 %float_n6_28318548
       %2764 = OpExtInst %float %1 Fma %2755 %float_6_28318548 %2763
       %2765 = OpExtInst %float %1 Fma %2762 %float_2097152 %2764
       %2766 = OpFMul %float %2732 %2592
       %2767 = OpExtInst %float %1 Sin %2765
       %2768 = OpFMul %float %2767 %2766
       %2769 = OpCompositeConstruct %v3float %548 %548 %2734
       %2770 = OpCompositeConstruct %v3float %548 %548 %2768
       %2771 = OpFAdd %v3float %2769 %2770
       %2772 = OpFSub %v3float %2698 %1686
       %2773 = OpExtInst %v3float %1 NMax %2772 %282
       %2774 = OpExtInst %v3float %1 NMin %2773 %130
       %2775 = OpCompositeExtract %float %2774 0
       %2776 = OpCompositeExtract %float %2774 1
       %2777 = OpCompositeConstruct %v2float %2775 %2776
       %2778 = OpFMul %v2float %1694 %2777
       %2779 = OpFMul %v2float %2777 %1695
       %2780 = OpCompositeExtract %float %2778 0
       %2781 = OpCompositeExtract %float %2779 0
       %2782 = OpCompositeExtract %float %2778 1
       %2783 = OpCompositeExtract %float %2779 1
       %2784 = OpFAdd %float %2780 %2782
       %2785 = OpFAdd %float %2781 %2783
       %2786 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_27 %int_1
       %2787 = OpLoad %float %2786
       %2788 = OpFMul %float %2784 %2787
       %2789 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_27 %int_3
       %2790 = OpLoad %float %2789
       %2791 = OpFMul %float %2790 %1993
       %2792 = OpExtInst %float %1 Fma %2785 %2787 %2791
       %2793 = OpExtInst %float %1 Floor %2788
       %2794 = OpFNegate %float %2793
       %2795 = OpExtInst %float %1 Fma %2784 %2787 %2794
       %2796 = OpExtInst %float %1 Fma %2795 %float_2097152 %2792
       %2797 = OpExtInst %float %1 Floor %2796
       %2798 = OpFMul %float %2793 %float_n6_28318548
       %2799 = OpExtInst %float %1 Fma %2788 %float_6_28318548 %2798
       %2800 = OpFMul %float %2797 %float_n6_28318548
       %2801 = OpExtInst %float %1 Fma %2792 %float_6_28318548 %2800
       %2802 = OpExtInst %float %1 Fma %2799 %float_2097152 %2801
       %2803 = OpFMul %float %2766 %2592
       %2804 = OpExtInst %float %1 Sin %2802
       %2805 = OpFMul %float %2804 %2803
       %2806 = OpCompositeConstruct %v3float %548 %548 %2805
       %2807 = OpFAdd %v3float %2771 %2806
       %2808 = OpFSub %v3float %2698 %2559
       %2809 = OpExtInst %v3float %1 NMax %2808 %282
       %2810 = OpExtInst %v3float %1 NMin %2809 %130
       %2811 = OpCompositeExtract %float %2810 0
       %2812 = OpCompositeExtract %float %2810 1
       %2813 = OpCompositeConstruct %v2float %2811 %2812
       %2814 = OpFMul %v2float %1694 %2813
       %2815 = OpFMul %v2float %2813 %1695
       %2816 = OpCompositeExtract %float %2814 0
       %2817 = OpCompositeExtract %float %2815 0
       %2818 = OpCompositeExtract %float %2814 1
       %2819 = OpCompositeExtract %float %2815 1
       %2820 = OpFAdd %float %2816 %2818
       %2821 = OpFAdd %float %2817 %2819
       %2822 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_28 %int_1
       %2823 = OpLoad %float %2822
       %2824 = OpFMul %float %2820 %2823
       %2825 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_28 %int_3
       %2826 = OpLoad %float %2825
       %2827 = OpFMul %float %2826 %1993
       %2828 = OpExtInst %float %1 Fma %2821 %2823 %2827
       %2829 = OpExtInst %float %1 Floor %2824
       %2830 = OpFNegate %float %2829
       %2831 = OpExtInst %float %1 Fma %2820 %2823 %2830
       %2832 = OpExtInst %float %1 Fma %2831 %float_2097152 %2828
       %2833 = OpExtInst %float %1 Floor %2832
       %2834 = OpFMul %float %2829 %float_n6_28318548
       %2835 = OpExtInst %float %1 Fma %2824 %float_6_28318548 %2834
       %2836 = OpFMul %float %2833 %float_n6_28318548
       %2837 = OpExtInst %float %1 Fma %2828 %float_6_28318548 %2836
       %2838 = OpExtInst %float %1 Fma %2835 %float_2097152 %2837
       %2839 = OpFMul %float %2803 %2592
       %2840 = OpExtInst %float %1 Sin %2838
       %2841 = OpFMul %float %2840 %2839
       %2842 = OpCompositeConstruct %v3float %548 %548 %2841
       %2843 = OpFAdd %v3float %2807 %2842
       %2844 = OpFAdd %v3float %2670 %2843
       %2845 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_29 %int_0
       %2846 = OpLoad %float %2845
       %2847 = OpFSub %float %2846 %float_n1
       %2848 = OpExtInst %float %1 FAbs %2847
       %2849 = OpFOrdGreaterThan %bool %2848 %float_9_99999975en06
       %2850 = OpFOrdGreaterThanEqual %bool %2846 %float_n1
       %2851 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_29 %int_1
       %2852 = OpLoad %float %2851
       %2853 = OpSelect %float %2850 %2846 %2852
       %2854 = OpSelect %float %2849 %2853 %2846
       %2855 = OpFSub %float %2854 %float_1
       %2856 = OpExtInst %float %1 FAbs %2855
       %2857 = OpFOrdGreaterThan %bool %2856 %float_9_99999975en06
       %2858 = OpFOrdGreaterThanEqual %bool %2854 %float_1
       %2859 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_29 %int_2
       %2860 = OpLoad %float %2859
       %2861 = OpSelect %float %2858 %2860 %2846
       %2862 = OpSelect %float %2857 %2861 %2846
       %2863 = OpExtInst %float %1 FAbs %2862
       %2864 = OpFOrdGreaterThan %bool %2863 %float_9_99999975en06
       %2865 = OpFOrdGreaterThanEqual %bool %2862 %float_0
       %2866 = OpSelect %float %2865 %float_1 %float_n1
       %2867 = OpSelect %float %2864 %2866 %float_1
       %2868 = OpExtInst %float %1 NMax %2867 %float_n1
       %2869 = OpExtInst %float %1 NMin %2868 %float_1
       %2870 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_30 %int_3
       %2871 = OpLoad %float %2870
       %2872 = OpCompositeConstruct %v3float %2869 %2871 %float_0
       %2873 = OpFAdd %v3float %2872 %1686
       %2874 = OpExtInst %v3float %1 NMax %2873 %282
       %2875 = OpExtInst %v3float %1 NMin %2874 %130
       %2876 = OpCompositeExtract %float %2875 0
       %2877 = OpCompositeExtract %float %2875 1
       %2878 = OpCompositeConstruct %v2float %2876 %2877
       %2879 = OpFMul %v2float %1694 %2878
       %2880 = OpFMul %v2float %2878 %1695
       %2881 = OpCompositeExtract %float %2879 0
       %2882 = OpCompositeExtract %float %2880 0
       %2883 = OpCompositeExtract %float %2879 1
       %2884 = OpCompositeExtract %float %2880 1
       %2885 = OpFAdd %float %2881 %2883
       %2886 = OpFAdd %float %2882 %2884
       %2887 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_32 %int_2
       %2888 = OpLoad %float %2887
       %2889 = OpFMul %float %2885 %2888
       %2890 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_32 %int_3
       %2891 = OpLoad %float %2890
       %2892 = OpFMul %float %2891 %1993
       %2893 = OpExtInst %float %1 Fma %2886 %2888 %2892
       %2894 = OpExtInst %float %1 Floor %2889
       %2895 = OpFNegate %float %2894
       %2896 = OpExtInst %float %1 Fma %2885 %2888 %2895
       %2897 = OpExtInst %float %1 Fma %2896 %float_2097152 %2893
       %2898 = OpExtInst %float %1 Floor %2897
       %2899 = OpFMul %float %2894 %float_n6_28318548
       %2900 = OpExtInst %float %1 Fma %2889 %float_6_28318548 %2899
       %2901 = OpFMul %float %2898 %float_n6_28318548
       %2902 = OpExtInst %float %1 Fma %2893 %float_6_28318548 %2901
       %2903 = OpExtInst %float %1 Fma %2900 %float_2097152 %2902
       %2904 = OpExtInst %float %1 Sin %2903
       %2905 = OpFMul %float %2904 %2732
       %2906 = OpFAdd %v3float %2872 %2559
       %2907 = OpExtInst %v3float %1 NMax %2906 %282
       %2908 = OpExtInst %v3float %1 NMin %2907 %130
       %2909 = OpCompositeExtract %float %2908 0
       %2910 = OpCompositeExtract %float %2908 1
       %2911 = OpCompositeConstruct %v2float %2909 %2910
       %2912 = OpFMul %v2float %1694 %2911
       %2913 = OpFMul %v2float %2911 %1695
       %2914 = OpCompositeExtract %float %2912 0
       %2915 = OpCompositeExtract %float %2913 0
       %2916 = OpCompositeExtract %float %2912 1
       %2917 = OpCompositeExtract %float %2913 1
       %2918 = OpFAdd %float %2914 %2916
       %2919 = OpFAdd %float %2915 %2917
       %2920 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_33 %int_1
       %2921 = OpLoad %float %2920
       %2922 = OpFMul %float %2918 %2921
       %2923 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_33 %int_2
       %2924 = OpLoad %float %2923
       %2925 = OpFMul %float %2924 %1993
       %2926 = OpExtInst %float %1 Fma %2919 %2921 %2925
       %2927 = OpExtInst %float %1 Floor %2922
       %2928 = OpFNegate %float %2927
       %2929 = OpExtInst %float %1 Fma %2918 %2921 %2928
       %2930 = OpExtInst %float %1 Fma %2929 %float_2097152 %2926
       %2931 = OpExtInst %float %1 Floor %2930
       %2932 = OpFMul %float %2927 %float_n6_28318548
       %2933 = OpExtInst %float %1 Fma %2922 %float_6_28318548 %2932
       %2934 = OpFMul %float %2931 %float_n6_28318548
       %2935 = OpExtInst %float %1 Fma %2926 %float_6_28318548 %2934
       %2936 = OpExtInst %float %1 Fma %2933 %float_2097152 %2935
       %2937 = OpExtInst %float %1 Sin %2936
       %2938 = OpFMul %float %2937 %2766
       %2939 = OpCompositeConstruct %v3float %548 %548 %2905
       %2940 = OpCompositeConstruct %v3float %548 %548 %2938
       %2941 = OpFAdd %v3float %2939 %2940
       %2942 = OpFSub %v3float %2872 %1686
       %2943 = OpExtInst %v3float %1 NMax %2942 %282
       %2944 = OpExtInst %v3float %1 NMin %2943 %130
       %2945 = OpCompositeExtract %float %2944 0
       %2946 = OpCompositeExtract %float %2944 1
       %2947 = OpCompositeConstruct %v2float %2945 %2946
       %2948 = OpFMul %v2float %1694 %2947
       %2949 = OpFMul %v2float %2947 %1695
       %2950 = OpCompositeExtract %float %2948 0
       %2951 = OpCompositeExtract %float %2949 0
       %2952 = OpCompositeExtract %float %2948 1
       %2953 = OpCompositeExtract %float %2949 1
       %2954 = OpFAdd %float %2950 %2952
       %2955 = OpFAdd %float %2951 %2953
       %2956 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_0
       %2957 = OpLoad %float %2956
       %2958 = OpFMul %float %2954 %2957
       %2959 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_1
       %2960 = OpLoad %float %2959
       %2961 = OpFMul %float %2960 %1993
       %2962 = OpExtInst %float %1 Fma %2955 %2957 %2961
       %2963 = OpExtInst %float %1 Floor %2958
       %2964 = OpFNegate %float %2963
       %2965 = OpExtInst %float %1 Fma %2954 %2957 %2964
       %2966 = OpExtInst %float %1 Fma %2965 %float_2097152 %2962
       %2967 = OpExtInst %float %1 Floor %2966
       %2968 = OpFMul %float %2963 %float_n6_28318548
       %2969 = OpExtInst %float %1 Fma %2958 %float_6_28318548 %2968
       %2970 = OpFMul %float %2967 %float_n6_28318548
       %2971 = OpExtInst %float %1 Fma %2962 %float_6_28318548 %2970
       %2972 = OpExtInst %float %1 Fma %2969 %float_2097152 %2971
       %2973 = OpExtInst %float %1 Sin %2972
       %2974 = OpFMul %float %2973 %2803
       %2975 = OpCompositeConstruct %v3float %548 %548 %2974
       %2976 = OpFAdd %v3float %2941 %2975
       %2977 = OpFSub %v3float %2872 %2559
       %2978 = OpExtInst %v3float %1 NMax %2977 %282
       %2979 = OpExtInst %v3float %1 NMin %2978 %130
       %2980 = OpCompositeExtract %float %2979 0
       %2981 = OpCompositeExtract %float %2979 1
       %2982 = OpCompositeConstruct %v2float %2980 %2981
       %2983 = OpFMul %v2float %1694 %2982
       %2984 = OpFMul %v2float %2982 %1695
       %2985 = OpCompositeExtract %float %2983 0
       %2986 = OpCompositeExtract %float %2984 0
       %2987 = OpCompositeExtract %float %2983 1
       %2988 = OpCompositeExtract %float %2984 1
       %2989 = OpFAdd %float %2985 %2987
       %2990 = OpFAdd %float %2986 %2988
       %2991 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_3
       %2992 = OpLoad %float %2991
       %2993 = OpFMul %float %2989 %2992
       %2994 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_0
       %2995 = OpLoad %float %2994
       %2996 = OpFMul %float %2995 %1993
       %2997 = OpExtInst %float %1 Fma %2990 %2992 %2996
       %2998 = OpExtInst %float %1 Floor %2993
       %2999 = OpFNegate %float %2998
       %3000 = OpExtInst %float %1 Fma %2989 %2992 %2999
       %3001 = OpExtInst %float %1 Fma %3000 %float_2097152 %2997
       %3002 = OpExtInst %float %1 Floor %3001
       %3003 = OpFMul %float %2998 %float_n6_28318548
       %3004 = OpExtInst %float %1 Fma %2993 %float_6_28318548 %3003
       %3005 = OpFMul %float %3002 %float_n6_28318548
       %3006 = OpExtInst %float %1 Fma %2997 %float_6_28318548 %3005
       %3007 = OpExtInst %float %1 Fma %3004 %float_2097152 %3006
       %3008 = OpExtInst %float %1 Sin %3007
       %3009 = OpFMul %float %3008 %2839
       %3010 = OpCompositeConstruct %v3float %548 %548 %3009
       %3011 = OpFAdd %v3float %2976 %3010
       %3012 = OpFAdd %v3float %2844 %3011
       %3013 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_1
       %3014 = OpLoad %float %3013
       %3015 = OpFSub %float %3014 %float_n1
       %3016 = OpExtInst %float %1 FAbs %3015
       %3017 = OpFOrdGreaterThan %bool %3016 %float_9_99999975en06
       %3018 = OpFOrdGreaterThanEqual %bool %3014 %float_n1
       %3019 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_2
       %3020 = OpLoad %float %3019
       %3021 = OpSelect %float %3018 %3014 %3020
       %3022 = OpSelect %float %3017 %3021 %3014
       %3023 = OpFSub %float %3022 %float_1
       %3024 = OpExtInst %float %1 FAbs %3023
       %3025 = OpFOrdGreaterThan %bool %3024 %float_9_99999975en06
       %3026 = OpFOrdGreaterThanEqual %bool %3022 %float_1
       %3027 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_3
       %3028 = OpLoad %float %3027
       %3029 = OpSelect %float %3026 %3028 %3014
       %3030 = OpSelect %float %3025 %3029 %3014
       %3031 = OpExtInst %float %1 FAbs %3030
       %3032 = OpFOrdGreaterThan %bool %3031 %float_9_99999975en06
       %3033 = OpFOrdGreaterThanEqual %bool %3030 %float_0
       %3034 = OpSelect %float %3033 %float_1 %float_n1
       %3035 = OpSelect %float %3032 %3034 %float_1
       %3036 = OpExtInst %float %1 NMax %3035 %float_n1
       %3037 = OpExtInst %float %1 NMin %3036 %float_1
       %3038 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_37 %int_0
       %3039 = OpLoad %float %3038
       %3040 = OpCompositeConstruct %v3float %3037 %3039 %float_0
       %3041 = OpFAdd %v3float %3040 %1686
       %3042 = OpExtInst %v3float %1 NMax %3041 %282
       %3043 = OpExtInst %v3float %1 NMin %3042 %130
       %3044 = OpCompositeExtract %float %3043 0
       %3045 = OpCompositeExtract %float %3043 1
       %3046 = OpCompositeConstruct %v2float %3044 %3045
       %3047 = OpFMul %v2float %1694 %3046
       %3048 = OpFMul %v2float %3046 %1695
       %3049 = OpCompositeExtract %float %3047 0
       %3050 = OpCompositeExtract %float %3048 0
       %3051 = OpCompositeExtract %float %3047 1
       %3052 = OpCompositeExtract %float %3048 1
       %3053 = OpFAdd %float %3049 %3051
       %3054 = OpFAdd %float %3050 %3052
       %3055 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_38 %int_3
       %3056 = OpLoad %float %3055
       %3057 = OpFMul %float %3053 %3056
       %3058 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_0
       %3059 = OpLoad %float %3058
       %3060 = OpFMul %float %3059 %1993
       %3061 = OpExtInst %float %1 Fma %3054 %3056 %3060
       %3062 = OpExtInst %float %1 Floor %3057
       %3063 = OpFNegate %float %3062
       %3064 = OpExtInst %float %1 Fma %3053 %3056 %3063
       %3065 = OpExtInst %float %1 Fma %3064 %float_2097152 %3061
       %3066 = OpExtInst %float %1 Floor %3065
       %3067 = OpFMul %float %3062 %float_n6_28318548
       %3068 = OpExtInst %float %1 Fma %3057 %float_6_28318548 %3067
       %3069 = OpFMul %float %3066 %float_n6_28318548
       %3070 = OpExtInst %float %1 Fma %3061 %float_6_28318548 %3069
       %3071 = OpExtInst %float %1 Fma %3068 %float_2097152 %3070
       %3072 = OpExtInst %float %1 Sin %3071
       %3073 = OpFMul %float %3072 %2554
       %3074 = OpFAdd %v3float %3040 %2559
       %3075 = OpExtInst %v3float %1 NMax %3074 %282
       %3076 = OpExtInst %v3float %1 NMin %3075 %130
       %3077 = OpCompositeExtract %float %3076 0
       %3078 = OpCompositeExtract %float %3076 1
       %3079 = OpCompositeConstruct %v2float %3077 %3078
       %3080 = OpFMul %v2float %1694 %3079
       %3081 = OpFMul %v2float %3079 %1695
       %3082 = OpCompositeExtract %float %3080 0
       %3083 = OpCompositeExtract %float %3081 0
       %3084 = OpCompositeExtract %float %3080 1
       %3085 = OpCompositeExtract %float %3081 1
       %3086 = OpFAdd %float %3082 %3084
       %3087 = OpFAdd %float %3083 %3085
       %3088 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_2
       %3089 = OpLoad %float %3088
       %3090 = OpFMul %float %3086 %3089
       %3091 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_3
       %3092 = OpLoad %float %3091
       %3093 = OpFMul %float %3092 %1993
       %3094 = OpExtInst %float %1 Fma %3087 %3089 %3093
       %3095 = OpExtInst %float %1 Floor %3090
       %3096 = OpFNegate %float %3095
       %3097 = OpExtInst %float %1 Fma %3086 %3089 %3096
       %3098 = OpExtInst %float %1 Fma %3097 %float_2097152 %3094
       %3099 = OpExtInst %float %1 Floor %3098
       %3100 = OpFMul %float %3095 %float_n6_28318548
       %3101 = OpExtInst %float %1 Fma %3090 %float_6_28318548 %3100
       %3102 = OpFMul %float %3099 %float_n6_28318548
       %3103 = OpExtInst %float %1 Fma %3094 %float_6_28318548 %3102
       %3104 = OpExtInst %float %1 Fma %3101 %float_2097152 %3103
       %3105 = OpExtInst %float %1 Sin %3104
       %3106 = OpFMul %float %3105 %2593
       %3107 = OpCompositeConstruct %v3float %548 %548 %3073
       %3108 = OpCompositeConstruct %v3float %548 %548 %3106
       %3109 = OpFAdd %v3float %3107 %3108
       %3110 = OpFSub %v3float %3040 %1686
       %3111 = OpExtInst %v3float %1 NMax %3110 %282
       %3112 = OpExtInst %v3float %1 NMin %3111 %130
       %3113 = OpCompositeExtract %float %3112 0
       %3114 = OpCompositeExtract %float %3112 1
       %3115 = OpCompositeConstruct %v2float %3113 %3114
       %3116 = OpFMul %v2float %1694 %3115
       %3117 = OpFMul %v2float %3115 %1695
       %3118 = OpCompositeExtract %float %3116 0
       %3119 = OpCompositeExtract %float %3117 0
       %3120 = OpCompositeExtract %float %3116 1
       %3121 = OpCompositeExtract %float %3117 1
       %3122 = OpFAdd %float %3118 %3120
       %3123 = OpFAdd %float %3119 %3121
       %3124 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_1
       %3125 = OpLoad %float %3124
       %3126 = OpFMul %float %3122 %3125
       %3127 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_2
       %3128 = OpLoad %float %3127
       %3129 = OpFMul %float %3128 %1993
       %3130 = OpExtInst %float %1 Fma %3123 %3125 %3129
       %3131 = OpExtInst %float %1 Floor %3126
       %3132 = OpFNegate %float %3131
       %3133 = OpExtInst %float %1 Fma %3122 %3125 %3132
       %3134 = OpExtInst %float %1 Fma %3133 %float_2097152 %3130
       %3135 = OpExtInst %float %1 Floor %3134
       %3136 = OpFMul %float %3131 %float_n6_28318548
       %3137 = OpExtInst %float %1 Fma %3126 %float_6_28318548 %3136
       %3138 = OpFMul %float %3135 %float_n6_28318548
       %3139 = OpExtInst %float %1 Fma %3130 %float_6_28318548 %3138
       %3140 = OpExtInst %float %1 Fma %3137 %float_2097152 %3139
       %3141 = OpExtInst %float %1 Sin %3140
       %3142 = OpFMul %float %3141 %2630
       %3143 = OpCompositeConstruct %v3float %548 %548 %3142
       %3144 = OpFAdd %v3float %3109 %3143
       %3145 = OpFSub %v3float %3040 %2559
       %3146 = OpExtInst %v3float %1 NMax %3145 %282
       %3147 = OpExtInst %v3float %1 NMin %3146 %130
       %3148 = OpCompositeExtract %float %3147 0
       %3149 = OpCompositeExtract %float %3147 1
       %3150 = OpCompositeConstruct %v2float %3148 %3149
       %3151 = OpFMul %v2float %1694 %3150
       %3152 = OpFMul %v2float %3150 %1695
       %3153 = OpCompositeExtract %float %3151 0
       %3154 = OpCompositeExtract %float %3152 0
       %3155 = OpCompositeExtract %float %3151 1
       %3156 = OpCompositeExtract %float %3152 1
       %3157 = OpFAdd %float %3153 %3155
       %3158 = OpFAdd %float %3154 %3156
       %3159 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_41 %int_0
       %3160 = OpLoad %float %3159
       %3161 = OpFMul %float %3157 %3160
       %3162 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_41 %int_1
       %3163 = OpLoad %float %3162
       %3164 = OpFMul %float %3163 %1993
       %3165 = OpExtInst %float %1 Fma %3158 %3160 %3164
       %3166 = OpExtInst %float %1 Floor %3161
       %3167 = OpFNegate %float %3166
       %3168 = OpExtInst %float %1 Fma %3157 %3160 %3167
       %3169 = OpExtInst %float %1 Fma %3168 %float_2097152 %3165
       %3170 = OpExtInst %float %1 Floor %3169
       %3171 = OpFMul %float %3166 %float_n6_28318548
       %3172 = OpExtInst %float %1 Fma %3161 %float_6_28318548 %3171
       %3173 = OpFMul %float %3170 %float_n6_28318548
       %3174 = OpExtInst %float %1 Fma %3165 %float_6_28318548 %3173
       %3175 = OpExtInst %float %1 Fma %3172 %float_2097152 %3174
       %3176 = OpExtInst %float %1 Sin %3175
       %3177 = OpFMul %float %3176 %2666
       %3178 = OpCompositeConstruct %v3float %548 %548 %3177
       %3179 = OpFAdd %v3float %3144 %3178
       %3180 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_41 %int_2
       %3181 = OpLoad %float %3180
       %3182 = OpFSub %float %3181 %float_n1
       %3183 = OpExtInst %float %1 FAbs %3182
       %3184 = OpFOrdGreaterThan %bool %3183 %float_9_99999975en06
       %3185 = OpFOrdGreaterThanEqual %bool %3181 %float_n1
       %3186 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_41 %int_3
       %3187 = OpLoad %float %3186
       %3188 = OpSelect %float %3185 %3181 %3187
       %3189 = OpSelect %float %3184 %3188 %3181
       %3190 = OpFSub %float %3189 %float_1
       %3191 = OpExtInst %float %1 FAbs %3190
       %3192 = OpFOrdGreaterThan %bool %3191 %float_9_99999975en06
       %3193 = OpFOrdGreaterThanEqual %bool %3189 %float_1
       %3194 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_42 %int_0
       %3195 = OpLoad %float %3194
       %3196 = OpSelect %float %3193 %3195 %3181
       %3197 = OpSelect %float %3192 %3196 %3181
       %3198 = OpExtInst %float %1 FAbs %3197
       %3199 = OpFOrdGreaterThan %bool %3198 %float_9_99999975en06
       %3200 = OpFOrdGreaterThanEqual %bool %3197 %float_0
       %3201 = OpSelect %float %3200 %float_1 %float_n1
       %3202 = OpSelect %float %3199 %3201 %float_1
       %3203 = OpExtInst %float %1 NMax %3202 %float_n1
       %3204 = OpExtInst %float %1 NMin %3203 %float_1
       %3205 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_43 %int_1
       %3206 = OpLoad %float %3205
       %3207 = OpCompositeConstruct %v3float %3204 %3206 %float_0
       %3208 = OpFAdd %v3float %3207 %1686
       %3209 = OpExtInst %v3float %1 NMax %3208 %282
       %3210 = OpExtInst %v3float %1 NMin %3209 %130
       %3211 = OpCompositeExtract %float %3210 0
       %3212 = OpCompositeExtract %float %3210 1
       %3213 = OpCompositeConstruct %v2float %3211 %3212
       %3214 = OpFMul %v2float %1694 %3213
       %3215 = OpFMul %v2float %3213 %1695
       %3216 = OpCompositeExtract %float %3214 0
       %3217 = OpCompositeExtract %float %3215 0
       %3218 = OpCompositeExtract %float %3214 1
       %3219 = OpCompositeExtract %float %3215 1
       %3220 = OpFAdd %float %3216 %3218
       %3221 = OpFAdd %float %3217 %3219
       %3222 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_0
       %3223 = OpLoad %float %3222
       %3224 = OpFMul %float %3220 %3223
       %3225 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_1
       %3226 = OpLoad %float %3225
       %3227 = OpFMul %float %3226 %1993
       %3228 = OpExtInst %float %1 Fma %3221 %3223 %3227
       %3229 = OpExtInst %float %1 Floor %3224
       %3230 = OpFNegate %float %3229
       %3231 = OpExtInst %float %1 Fma %3220 %3223 %3230
       %3232 = OpExtInst %float %1 Fma %3231 %float_2097152 %3228
       %3233 = OpExtInst %float %1 Floor %3232
       %3234 = OpFMul %float %3229 %float_n6_28318548
       %3235 = OpExtInst %float %1 Fma %3224 %float_6_28318548 %3234
       %3236 = OpFMul %float %3233 %float_n6_28318548
       %3237 = OpExtInst %float %1 Fma %3228 %float_6_28318548 %3236
       %3238 = OpExtInst %float %1 Fma %3235 %float_2097152 %3237
       %3239 = OpExtInst %float %1 Sin %3238
       %3240 = OpFMul %float %3239 %2732
       %3241 = OpFAdd %v3float %3207 %2559
       %3242 = OpExtInst %v3float %1 NMax %3241 %282
       %3243 = OpExtInst %v3float %1 NMin %3242 %130
       %3244 = OpCompositeExtract %float %3243 0
       %3245 = OpCompositeExtract %float %3243 1
       %3246 = OpCompositeConstruct %v2float %3244 %3245
       %3247 = OpFMul %v2float %1694 %3246
       %3248 = OpFMul %v2float %3246 %1695
       %3249 = OpCompositeExtract %float %3247 0
       %3250 = OpCompositeExtract %float %3248 0
       %3251 = OpCompositeExtract %float %3247 1
       %3252 = OpCompositeExtract %float %3248 1
       %3253 = OpFAdd %float %3249 %3251
       %3254 = OpFAdd %float %3250 %3252
       %3255 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_3
       %3256 = OpLoad %float %3255
       %3257 = OpFMul %float %3253 %3256
       %3258 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_0
       %3259 = OpLoad %float %3258
       %3260 = OpFMul %float %3259 %1993
       %3261 = OpExtInst %float %1 Fma %3254 %3256 %3260
       %3262 = OpExtInst %float %1 Floor %3257
       %3263 = OpFNegate %float %3262
       %3264 = OpExtInst %float %1 Fma %3253 %3256 %3263
       %3265 = OpExtInst %float %1 Fma %3264 %float_2097152 %3261
       %3266 = OpExtInst %float %1 Floor %3265
       %3267 = OpFMul %float %3262 %float_n6_28318548
       %3268 = OpExtInst %float %1 Fma %3257 %float_6_28318548 %3267
       %3269 = OpFMul %float %3266 %float_n6_28318548
       %3270 = OpExtInst %float %1 Fma %3261 %float_6_28318548 %3269
       %3271 = OpExtInst %float %1 Fma %3268 %float_2097152 %3270
       %3272 = OpExtInst %float %1 Sin %3271
       %3273 = OpFMul %float %3272 %2766
       %3274 = OpCompositeConstruct %v3float %548 %548 %3240
       %3275 = OpCompositeConstruct %v3float %548 %548 %3273
       %3276 = OpFAdd %v3float %3274 %3275
       %3277 = OpFSub %v3float %3207 %1686
       %3278 = OpExtInst %v3float %1 NMax %3277 %282
       %3279 = OpExtInst %v3float %1 NMin %3278 %130
       %3280 = OpCompositeExtract %float %3279 0
       %3281 = OpCompositeExtract %float %3279 1
       %3282 = OpCompositeConstruct %v2float %3280 %3281
       %3283 = OpFMul %v2float %1694 %3282
       %3284 = OpFMul %v2float %3282 %1695
       %3285 = OpCompositeExtract %float %3283 0
       %3286 = OpCompositeExtract %float %3284 0
       %3287 = OpCompositeExtract %float %3283 1
       %3288 = OpCompositeExtract %float %3284 1
       %3289 = OpFAdd %float %3285 %3287
       %3290 = OpFAdd %float %3286 %3288
       %3291 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_2
       %3292 = OpLoad %float %3291
       %3293 = OpFMul %float %3289 %3292
       %3294 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_3
       %3295 = OpLoad %float %3294
       %3296 = OpFMul %float %3295 %1993
       %3297 = OpExtInst %float %1 Fma %3290 %3292 %3296
       %3298 = OpExtInst %float %1 Floor %3293
       %3299 = OpFNegate %float %3298
       %3300 = OpExtInst %float %1 Fma %3289 %3292 %3299
       %3301 = OpExtInst %float %1 Fma %3300 %float_2097152 %3297
       %3302 = OpExtInst %float %1 Floor %3301
       %3303 = OpFMul %float %3298 %float_n6_28318548
       %3304 = OpExtInst %float %1 Fma %3293 %float_6_28318548 %3303
       %3305 = OpFMul %float %3302 %float_n6_28318548
       %3306 = OpExtInst %float %1 Fma %3297 %float_6_28318548 %3305
       %3307 = OpExtInst %float %1 Fma %3304 %float_2097152 %3306
       %3308 = OpExtInst %float %1 Sin %3307
       %3309 = OpFMul %float %3308 %2803
       %3310 = OpCompositeConstruct %v3float %548 %548 %3309
       %3311 = OpFAdd %v3float %3276 %3310
       %3312 = OpFSub %v3float %3207 %2559
       %3313 = OpExtInst %v3float %1 NMax %3312 %282
       %3314 = OpExtInst %v3float %1 NMin %3313 %130
       %3315 = OpCompositeExtract %float %3314 0
       %3316 = OpCompositeExtract %float %3314 1
       %3317 = OpCompositeConstruct %v2float %3315 %3316
       %3318 = OpFMul %v2float %1694 %3317
       %3319 = OpFMul %v2float %3317 %1695
       %3320 = OpCompositeExtract %float %3318 0
       %3321 = OpCompositeExtract %float %3319 0
       %3322 = OpCompositeExtract %float %3318 1
       %3323 = OpCompositeExtract %float %3319 1
       %3324 = OpFAdd %float %3320 %3322
       %3325 = OpFAdd %float %3321 %3323
       %3326 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_47 %int_1
       %3327 = OpLoad %float %3326
       %3328 = OpFMul %float %3324 %3327
       %3329 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_47 %int_2
       %3330 = OpLoad %float %3329
       %3331 = OpFMul %float %3330 %1993
       %3332 = OpExtInst %float %1 Fma %3325 %3327 %3331
       %3333 = OpExtInst %float %1 Floor %3328
       %3334 = OpFNegate %float %3333
       %3335 = OpExtInst %float %1 Fma %3324 %3327 %3334
       %3336 = OpExtInst %float %1 Fma %3335 %float_2097152 %3332
       %3337 = OpExtInst %float %1 Floor %3336
       %3338 = OpFMul %float %3333 %float_n6_28318548
       %3339 = OpExtInst %float %1 Fma %3328 %float_6_28318548 %3338
       %3340 = OpFMul %float %3337 %float_n6_28318548
       %3341 = OpExtInst %float %1 Fma %3332 %float_6_28318548 %3340
       %3342 = OpExtInst %float %1 Fma %3339 %float_2097152 %3341
       %3343 = OpExtInst %float %1 Sin %3342
       %3344 = OpFMul %float %3343 %2839
       %3345 = OpCompositeConstruct %v3float %548 %548 %3344
       %3346 = OpFAdd %v3float %3311 %3345
       %3347 = OpFAdd %v3float %3179 %3346
       %3348 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_47 %int_3
       %3349 = OpLoad %float %3348
       %3350 = OpFSub %float %3349 %float_n1
       %3351 = OpExtInst %float %1 FAbs %3350
       %3352 = OpFOrdGreaterThan %bool %3351 %float_9_99999975en06
       %3353 = OpFOrdGreaterThanEqual %bool %3349 %float_n1
       %3354 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_48 %int_0
       %3355 = OpLoad %float %3354
       %3356 = OpSelect %float %3353 %3349 %3355
       %3357 = OpSelect %float %3352 %3356 %3349
       %3358 = OpFSub %float %3357 %float_1
       %3359 = OpExtInst %float %1 FAbs %3358
       %3360 = OpFOrdGreaterThan %bool %3359 %float_9_99999975en06
       %3361 = OpFOrdGreaterThanEqual %bool %3357 %float_1
       %3362 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_48 %int_1
       %3363 = OpLoad %float %3362
       %3364 = OpSelect %float %3361 %3363 %3349
       %3365 = OpSelect %float %3360 %3364 %3349
       %3366 = OpExtInst %float %1 FAbs %3365
       %3367 = OpFOrdGreaterThan %bool %3366 %float_9_99999975en06
       %3368 = OpFOrdGreaterThanEqual %bool %3365 %float_0
       %3369 = OpSelect %float %3368 %float_1 %float_n1
       %3370 = OpSelect %float %3367 %3369 %float_1
       %3371 = OpExtInst %float %1 NMax %3370 %float_n1
       %3372 = OpExtInst %float %1 NMin %3371 %float_1
       %3373 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_49 %int_2
       %3374 = OpLoad %float %3373
       %3375 = OpCompositeConstruct %v3float %3372 %3374 %float_0
       %3376 = OpFAdd %v3float %3375 %1686
       %3377 = OpExtInst %v3float %1 NMax %3376 %282
       %3378 = OpExtInst %v3float %1 NMin %3377 %130
       %3379 = OpCompositeExtract %float %3378 0
       %3380 = OpCompositeExtract %float %3378 1
       %3381 = OpCompositeConstruct %v2float %3379 %3380
       %3382 = OpFMul %v2float %1694 %3381
       %3383 = OpFMul %v2float %3381 %1695
       %3384 = OpCompositeExtract %float %3382 0
       %3385 = OpCompositeExtract %float %3383 0
       %3386 = OpCompositeExtract %float %3382 1
       %3387 = OpCompositeExtract %float %3383 1
       %3388 = OpFAdd %float %3384 %3386
       %3389 = OpFAdd %float %3385 %3387
       %3390 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_1
       %3391 = OpLoad %float %3390
       %3392 = OpFMul %float %3388 %3391
       %3393 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_2
       %3394 = OpLoad %float %3393
       %3395 = OpFMul %float %3394 %1993
       %3396 = OpExtInst %float %1 Fma %3389 %3391 %3395
       %3397 = OpExtInst %float %1 Floor %3392
       %3398 = OpFNegate %float %3397
       %3399 = OpExtInst %float %1 Fma %3388 %3391 %3398
       %3400 = OpExtInst %float %1 Fma %3399 %float_2097152 %3396
       %3401 = OpExtInst %float %1 Floor %3400
       %3402 = OpFMul %float %3397 %float_n6_28318548
       %3403 = OpExtInst %float %1 Fma %3392 %float_6_28318548 %3402
       %3404 = OpFMul %float %3401 %float_n6_28318548
       %3405 = OpExtInst %float %1 Fma %3396 %float_6_28318548 %3404
       %3406 = OpExtInst %float %1 Fma %3403 %float_2097152 %3405
       %3407 = OpExtInst %float %1 Sin %3406
       %3408 = OpFMul %float %3407 %2732
       %3409 = OpFAdd %v3float %3375 %2559
       %3410 = OpExtInst %v3float %1 NMax %3409 %282
       %3411 = OpExtInst %v3float %1 NMin %3410 %130
       %3412 = OpCompositeExtract %float %3411 0
       %3413 = OpCompositeExtract %float %3411 1
       %3414 = OpCompositeConstruct %v2float %3412 %3413
       %3415 = OpFMul %v2float %1694 %3414
       %3416 = OpFMul %v2float %3414 %1695
       %3417 = OpCompositeExtract %float %3415 0
       %3418 = OpCompositeExtract %float %3416 0
       %3419 = OpCompositeExtract %float %3415 1
       %3420 = OpCompositeExtract %float %3416 1
       %3421 = OpFAdd %float %3417 %3419
       %3422 = OpFAdd %float %3418 %3420
       %3423 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_0
       %3424 = OpLoad %float %3423
       %3425 = OpFMul %float %3421 %3424
       %3426 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_1
       %3427 = OpLoad %float %3426
       %3428 = OpFMul %float %3427 %1993
       %3429 = OpExtInst %float %1 Fma %3422 %3424 %3428
       %3430 = OpExtInst %float %1 Floor %3425
       %3431 = OpFNegate %float %3430
       %3432 = OpExtInst %float %1 Fma %3421 %3424 %3431
       %3433 = OpExtInst %float %1 Fma %3432 %float_2097152 %3429
       %3434 = OpExtInst %float %1 Floor %3433
       %3435 = OpFMul %float %3430 %float_n6_28318548
       %3436 = OpExtInst %float %1 Fma %3425 %float_6_28318548 %3435
       %3437 = OpFMul %float %3434 %float_n6_28318548
       %3438 = OpExtInst %float %1 Fma %3429 %float_6_28318548 %3437
       %3439 = OpExtInst %float %1 Fma %3436 %float_2097152 %3438
       %3440 = OpExtInst %float %1 Sin %3439
       %3441 = OpFMul %float %3440 %2766
       %3442 = OpCompositeConstruct %v3float %548 %548 %3408
       %3443 = OpCompositeConstruct %v3float %548 %548 %3441
       %3444 = OpFAdd %v3float %3442 %3443
       %3445 = OpFSub %v3float %3375 %1686
       %3446 = OpExtInst %v3float %1 NMax %3445 %282
       %3447 = OpExtInst %v3float %1 NMin %3446 %130
       %3448 = OpCompositeExtract %float %3447 0
       %3449 = OpCompositeExtract %float %3447 1
       %3450 = OpCompositeConstruct %v2float %3448 %3449
       %3451 = OpFMul %v2float %1694 %3450
       %3452 = OpFMul %v2float %3450 %1695
       %3453 = OpCompositeExtract %float %3451 0
       %3454 = OpCompositeExtract %float %3452 0
       %3455 = OpCompositeExtract %float %3451 1
       %3456 = OpCompositeExtract %float %3452 1
       %3457 = OpFAdd %float %3453 %3455
       %3458 = OpFAdd %float %3454 %3456
       %3459 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_3
       %3460 = OpLoad %float %3459
       %3461 = OpFMul %float %3457 %3460
       %3462 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_0
       %3463 = OpLoad %float %3462
       %3464 = OpFMul %float %3463 %1993
       %3465 = OpExtInst %float %1 Fma %3458 %3460 %3464
       %3466 = OpExtInst %float %1 Floor %3461
       %3467 = OpFNegate %float %3466
       %3468 = OpExtInst %float %1 Fma %3457 %3460 %3467
       %3469 = OpExtInst %float %1 Fma %3468 %float_2097152 %3465
       %3470 = OpExtInst %float %1 Floor %3469
       %3471 = OpFMul %float %3466 %float_n6_28318548
       %3472 = OpExtInst %float %1 Fma %3461 %float_6_28318548 %3471
       %3473 = OpFMul %float %3470 %float_n6_28318548
       %3474 = OpExtInst %float %1 Fma %3465 %float_6_28318548 %3473
       %3475 = OpExtInst %float %1 Fma %3472 %float_2097152 %3474
       %3476 = OpExtInst %float %1 Sin %3475
       %3477 = OpFMul %float %3476 %2803
       %3478 = OpCompositeConstruct %v3float %548 %548 %3477
       %3479 = OpFAdd %v3float %3444 %3478
       %3480 = OpFSub %v3float %3375 %2559
       %3481 = OpExtInst %v3float %1 NMax %3480 %282
       %3482 = OpExtInst %v3float %1 NMin %3481 %130
       %3483 = OpCompositeExtract %float %3482 0
       %3484 = OpCompositeExtract %float %3482 1
       %3485 = OpCompositeConstruct %v2float %3483 %3484
       %3486 = OpFMul %v2float %1694 %3485
       %3487 = OpFMul %v2float %3485 %1695
       %3488 = OpCompositeExtract %float %3486 0
       %3489 = OpCompositeExtract %float %3487 0
       %3490 = OpCompositeExtract %float %3486 1
       %3491 = OpCompositeExtract %float %3487 1
       %3492 = OpFAdd %float %3488 %3490
       %3493 = OpFAdd %float %3489 %3491
       %3494 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_2
       %3495 = OpLoad %float %3494
       %3496 = OpFMul %float %3492 %3495
       %3497 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_3
       %3498 = OpLoad %float %3497
       %3499 = OpFMul %float %3498 %1993
       %3500 = OpExtInst %float %1 Fma %3493 %3495 %3499
       %3501 = OpExtInst %float %1 Floor %3496
       %3502 = OpFNegate %float %3501
       %3503 = OpExtInst %float %1 Fma %3492 %3495 %3502
       %3504 = OpExtInst %float %1 Fma %3503 %float_2097152 %3500
       %3505 = OpExtInst %float %1 Floor %3504
       %3506 = OpFMul %float %3501 %float_n6_28318548
       %3507 = OpExtInst %float %1 Fma %3496 %float_6_28318548 %3506
       %3508 = OpFMul %float %3505 %float_n6_28318548
       %3509 = OpExtInst %float %1 Fma %3500 %float_6_28318548 %3508
       %3510 = OpExtInst %float %1 Fma %3507 %float_2097152 %3509
       %3511 = OpExtInst %float %1 Sin %3510
       %3512 = OpFMul %float %3511 %2839
       %3513 = OpCompositeConstruct %v3float %548 %548 %3512
       %3514 = OpFAdd %v3float %3479 %3513
       %3515 = OpFAdd %v3float %3347 %3514
       %3516 = OpFAdd %v3float %3012 %3515
       %3517 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_0
       %3518 = OpLoad %float %3517
       %3519 = OpCompositeConstruct %v3float %3518 %3518 %3518
       %3520 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_1
       %3521 = OpLoad %float %3520
       %3522 = OpFSub %float %3521 %float_n1
       %3523 = OpExtInst %float %1 FAbs %3522
       %3524 = OpFOrdGreaterThan %bool %3523 %float_9_99999975en06
       %3525 = OpFOrdGreaterThanEqual %bool %3521 %float_n1
       %3526 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_2
       %3527 = OpLoad %float %3526
       %3528 = OpSelect %float %3525 %3521 %3527
       %3529 = OpSelect %float %3524 %3528 %3521
       %3530 = OpFSub %float %3529 %float_1
       %3531 = OpExtInst %float %1 FAbs %3530
       %3532 = OpFOrdGreaterThan %bool %3531 %float_9_99999975en06
       %3533 = OpFOrdGreaterThanEqual %bool %3529 %float_1
       %3534 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_3
       %3535 = OpLoad %float %3534
       %3536 = OpSelect %float %3533 %3535 %3521
       %3537 = OpSelect %float %3532 %3536 %3521
       %3538 = OpExtInst %float %1 FAbs %3537
       %3539 = OpFOrdGreaterThan %bool %3538 %float_9_99999975en06
       %3540 = OpFOrdGreaterThanEqual %bool %3537 %float_0
       %3541 = OpSelect %float %3540 %float_1 %float_n1
       %3542 = OpSelect %float %3539 %3541 %float_1
       %3543 = OpExtInst %float %1 NMax %3542 %float_n1
       %3544 = OpExtInst %float %1 NMin %3543 %float_1
       %3545 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_56 %int_0
       %3546 = OpLoad %float %3545
       %3547 = OpCompositeConstruct %v3float %3544 %3546 %float_0
       %3548 = OpFAdd %v3float %3547 %1686
       %3549 = OpExtInst %v3float %1 NMax %3548 %282
       %3550 = OpExtInst %v3float %1 NMin %3549 %130
       %3551 = OpCompositeExtract %float %3550 0
       %3552 = OpCompositeExtract %float %3550 1
       %3553 = OpCompositeConstruct %v2float %3551 %3552
       %3554 = OpFMul %v2float %1694 %3553
       %3555 = OpFMul %v2float %3553 %1695
       %3556 = OpCompositeExtract %float %3554 0
       %3557 = OpCompositeExtract %float %3555 0
       %3558 = OpCompositeExtract %float %3554 1
       %3559 = OpCompositeExtract %float %3555 1
       %3560 = OpFAdd %float %3556 %3558
       %3561 = OpFAdd %float %3557 %3559
       %3562 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_1
       %3563 = OpLoad %float %3562
       %3564 = OpFMul %float %3563 %1723
       %3565 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_2
       %3566 = OpLoad %float %3565
       %3567 = OpFMul %float %3566 %3564
       %3568 = OpFDiv %float %float_2 %3567
       %3569 = OpFMul %float %3560 %3568
       %3570 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_3
       %3571 = OpLoad %float %3570
       %3572 = OpFMul %float %3568 %3571
       %3573 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_0
       %3574 = OpLoad %float %3573
       %3575 = OpCompositeConstruct %v3float %3574 %3574 %3574
       %3576 = OpFMul %v3float %591 %3575
       %3577 = OpFMul %v3float %3575 %640
       %3578 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_1
       %3579 = OpLoad %float %3578
       %3580 = OpCompositeConstruct %v3float %3579 %3579 %3579
       %3581 = OpFMul %v3float %3576 %3580
       %3582 = OpFMul %v3float %3577 %3580
       %3583 = OpFDiv %float %float_1 %1723
       %3584 = OpCompositeConstruct %v3float %3583 %3583 %3583
       %3585 = OpFMul %v3float %3582 %3584
       %3586 = OpCompositeExtract %float %3585 0
       %3587 = OpCompositeExtract %float %3585 1
       %3588 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_3
       %3589 = OpLoad %float %3588
       %3590 = OpFMul %float %1159 %3589
       %3591 = OpCompositeExtract %float %3585 2
       %3592 = OpCompositeConstruct %v2float %3590 %3590
       %3593 = OpCompositeConstruct %v2float %3591 %3591
       %3594 = OpFAdd %v2float %3592 %3593
       %3595 = OpCompositeExtract %float %3594 0
       %3596 = OpCompositeConstruct %v3float %3586 %3587 %3595
       %3597 = OpVectorTimesScalar %v3float %3596 %float_4_76837158en07
       %3598 = OpFAdd %v3float %3597 %140
       %3599 = OpExtInst %v3float %1 Fma %3581 %3584 %3598
       %3600 = OpExtInst %v3float %1 Floor %3599
       %3601 = OpFNegate %v3float %3600
       %3602 = OpExtInst %v3float %1 Fma %3581 %3584 %3601
       %3603 = OpVectorTimesScalar %v3float %3602 %float_2097152
       %3604 = OpFAdd %v3float %3603 %3596
       %3605 = OpVectorTimesScalar %v3float %3604 %float_1
               OpBranch %3606
       %3606 = OpLabel
       %3607 = OpPhi %v3float %3605 %2311 %3608 %3609
       %3610 = OpPhi %float %float_1 %2311 %3611 %3609
       %3612 = OpPhi %float %float_0 %2311 %3613 %3609
       %3614 = OpPhi %uint %uint_0 %2311 %3615 %3609
       %3616 = OpULessThan %bool %3614 %uint_6
               OpLoopMerge %3617 %3609 DontUnroll
               OpBranchConditional %3616 %3609 %3617
       %3609 = OpLabel
       %3618 = OpExtInst %v3float %1 Fract %3607
       %3619 = OpExtInst %v3float %1 Floor %3607
       %3620 = OpDot %float %3619 %387
       %3621 = OpFAdd %float %3620 %float_19
       %3622 = OpFAdd %float %3620 %float_47
       %3623 = OpFAdd %float %3620 %float_66
       %3624 = OpFAdd %float %3620 %float_101
       %3625 = OpFAdd %float %3620 %float_120
       %3626 = OpFAdd %float %3620 %float_148
       %3627 = OpFAdd %float %3620 %float_167
       %3628 = OpConvertFToS %int %3620
       %3629 = OpCompositeConstruct %v3int %3628 %int_0 %int_0
       %3630 = OpBitcast %v3uint %3629
       %3631 = OpIMul %v3uint %3630 %403
       %3632 = OpIAdd %v3uint %3631 %405
       %3633 = OpCompositeExtract %uint %3632 1
       %3634 = OpCompositeExtract %uint %3632 2
       %3635 = OpIMul %uint %3633 %3634
       %3636 = OpCompositeExtract %uint %3632 0
       %3637 = OpIAdd %uint %3636 %3635
       %3638 = OpIMul %uint %3634 %3637
       %3639 = OpIAdd %uint %3633 %3638
       %3640 = OpIMul %uint %3637 %3639
       %3641 = OpIAdd %uint %3634 %3640
       %3642 = OpIMul %uint %3639 %3641
       %3643 = OpIAdd %uint %3637 %3642
       %3644 = OpCompositeInsert %v3uint %3643 %549 0
       %3645 = OpBitwiseAnd %v3uint %406 %407
       %3646 = OpShiftRightLogical %v3uint %3644 %3645
       %3647 = OpCompositeExtract %uint %3646 0
       %3648 = OpCompositeConstruct %v3uint %3647 %3647 %3647
       %3649 = OpBitwiseAnd %v3uint %3648 %388
       %3650 = OpConvertUToF %v3float %3649
       %3651 = OpExtInst %v3float %1 Fma %3650 %392 %282
       %3652 = OpDot %float %3651 %3618
       %3653 = OpConvertFToS %int %3621
       %3654 = OpFSub %v3float %3618 %351
       %3655 = OpCompositeConstruct %v3int %3653 %int_0 %int_0
       %3656 = OpBitcast %v3uint %3655
       %3657 = OpIMul %v3uint %3656 %403
       %3658 = OpIAdd %v3uint %3657 %405
       %3659 = OpCompositeExtract %uint %3658 1
       %3660 = OpCompositeExtract %uint %3658 2
       %3661 = OpIMul %uint %3659 %3660
       %3662 = OpCompositeExtract %uint %3658 0
       %3663 = OpIAdd %uint %3662 %3661
       %3664 = OpIMul %uint %3660 %3663
       %3665 = OpIAdd %uint %3659 %3664
       %3666 = OpIMul %uint %3663 %3665
       %3667 = OpIAdd %uint %3660 %3666
       %3668 = OpIMul %uint %3665 %3667
       %3669 = OpIAdd %uint %3663 %3668
       %3670 = OpCompositeInsert %v3uint %3669 %549 0
       %3671 = OpShiftRightLogical %v3uint %3670 %3645
       %3672 = OpCompositeExtract %uint %3671 0
       %3673 = OpCompositeConstruct %v3uint %3672 %3672 %3672
       %3674 = OpBitwiseAnd %v3uint %3673 %388
       %3675 = OpConvertUToF %v3float %3674
       %3676 = OpExtInst %v3float %1 Fma %3675 %392 %282
       %3677 = OpDot %float %3676 %3654
       %3678 = OpConvertFToS %int %3622
       %3679 = OpFSub %v3float %3618 %352
       %3680 = OpCompositeConstruct %v3int %3678 %int_0 %int_0
       %3681 = OpBitcast %v3uint %3680
       %3682 = OpIMul %v3uint %3681 %403
       %3683 = OpIAdd %v3uint %3682 %405
       %3684 = OpCompositeExtract %uint %3683 1
       %3685 = OpCompositeExtract %uint %3683 2
       %3686 = OpIMul %uint %3684 %3685
       %3687 = OpCompositeExtract %uint %3683 0
       %3688 = OpIAdd %uint %3687 %3686
       %3689 = OpIMul %uint %3685 %3688
       %3690 = OpIAdd %uint %3684 %3689
       %3691 = OpIMul %uint %3688 %3690
       %3692 = OpIAdd %uint %3685 %3691
       %3693 = OpIMul %uint %3690 %3692
       %3694 = OpIAdd %uint %3688 %3693
       %3695 = OpCompositeInsert %v3uint %3694 %549 0
       %3696 = OpShiftRightLogical %v3uint %3695 %3645
       %3697 = OpCompositeExtract %uint %3696 0
       %3698 = OpCompositeConstruct %v3uint %3697 %3697 %3697
       %3699 = OpBitwiseAnd %v3uint %3698 %388
       %3700 = OpConvertUToF %v3float %3699
       %3701 = OpExtInst %v3float %1 Fma %3700 %392 %282
       %3702 = OpDot %float %3701 %3679
       %3703 = OpConvertFToS %int %3623
       %3704 = OpFSub %v3float %3618 %137
       %3705 = OpCompositeConstruct %v3int %3703 %int_0 %int_0
       %3706 = OpBitcast %v3uint %3705
       %3707 = OpIMul %v3uint %3706 %403
       %3708 = OpIAdd %v3uint %3707 %405
       %3709 = OpCompositeExtract %uint %3708 1
       %3710 = OpCompositeExtract %uint %3708 2
       %3711 = OpIMul %uint %3709 %3710
       %3712 = OpCompositeExtract %uint %3708 0
       %3713 = OpIAdd %uint %3712 %3711
       %3714 = OpIMul %uint %3710 %3713
       %3715 = OpIAdd %uint %3709 %3714
       %3716 = OpIMul %uint %3713 %3715
       %3717 = OpIAdd %uint %3710 %3716
       %3718 = OpIMul %uint %3715 %3717
       %3719 = OpIAdd %uint %3713 %3718
       %3720 = OpCompositeInsert %v3uint %3719 %549 0
       %3721 = OpShiftRightLogical %v3uint %3720 %3645
       %3722 = OpCompositeExtract %uint %3721 0
       %3723 = OpCompositeConstruct %v3uint %3722 %3722 %3722
       %3724 = OpBitwiseAnd %v3uint %3723 %388
       %3725 = OpConvertUToF %v3float %3724
       %3726 = OpExtInst %v3float %1 Fma %3725 %392 %282
       %3727 = OpDot %float %3726 %3704
       %3728 = OpConvertFToS %int %3624
       %3729 = OpFSub %v3float %3618 %294
       %3730 = OpCompositeConstruct %v3int %3728 %int_0 %int_0
       %3731 = OpBitcast %v3uint %3730
       %3732 = OpIMul %v3uint %3731 %403
       %3733 = OpIAdd %v3uint %3732 %405
       %3734 = OpCompositeExtract %uint %3733 1
       %3735 = OpCompositeExtract %uint %3733 2
       %3736 = OpIMul %uint %3734 %3735
       %3737 = OpCompositeExtract %uint %3733 0
       %3738 = OpIAdd %uint %3737 %3736
       %3739 = OpIMul %uint %3735 %3738
       %3740 = OpIAdd %uint %3734 %3739
       %3741 = OpIMul %uint %3738 %3740
       %3742 = OpIAdd %uint %3735 %3741
       %3743 = OpIMul %uint %3740 %3742
       %3744 = OpIAdd %uint %3738 %3743
       %3745 = OpCompositeInsert %v3uint %3744 %549 0
       %3746 = OpShiftRightLogical %v3uint %3745 %3645
       %3747 = OpCompositeExtract %uint %3746 0
       %3748 = OpCompositeConstruct %v3uint %3747 %3747 %3747
       %3749 = OpBitwiseAnd %v3uint %3748 %388
       %3750 = OpConvertUToF %v3float %3749
       %3751 = OpExtInst %v3float %1 Fma %3750 %392 %282
       %3752 = OpDot %float %3751 %3729
       %3753 = OpConvertFToS %int %3625
       %3754 = OpFSub %v3float %3618 %143
       %3755 = OpCompositeConstruct %v3int %3753 %int_0 %int_0
       %3756 = OpBitcast %v3uint %3755
       %3757 = OpIMul %v3uint %3756 %403
       %3758 = OpIAdd %v3uint %3757 %405
       %3759 = OpCompositeExtract %uint %3758 1
       %3760 = OpCompositeExtract %uint %3758 2
       %3761 = OpIMul %uint %3759 %3760
       %3762 = OpCompositeExtract %uint %3758 0
       %3763 = OpIAdd %uint %3762 %3761
       %3764 = OpIMul %uint %3760 %3763
       %3765 = OpIAdd %uint %3759 %3764
       %3766 = OpIMul %uint %3763 %3765
       %3767 = OpIAdd %uint %3760 %3766
       %3768 = OpIMul %uint %3765 %3767
       %3769 = OpIAdd %uint %3763 %3768
       %3770 = OpCompositeInsert %v3uint %3769 %549 0
       %3771 = OpShiftRightLogical %v3uint %3770 %3645
       %3772 = OpCompositeExtract %uint %3771 0
       %3773 = OpCompositeConstruct %v3uint %3772 %3772 %3772
       %3774 = OpBitwiseAnd %v3uint %3773 %388
       %3775 = OpConvertUToF %v3float %3774
       %3776 = OpExtInst %v3float %1 Fma %3775 %392 %282
       %3777 = OpDot %float %3776 %3754
       %3778 = OpConvertFToS %int %3626
       %3779 = OpFSub %v3float %3618 %138
       %3780 = OpCompositeConstruct %v3int %3778 %int_0 %int_0
       %3781 = OpBitcast %v3uint %3780
       %3782 = OpIMul %v3uint %3781 %403
       %3783 = OpIAdd %v3uint %3782 %405
       %3784 = OpCompositeExtract %uint %3783 1
       %3785 = OpCompositeExtract %uint %3783 2
       %3786 = OpIMul %uint %3784 %3785
       %3787 = OpCompositeExtract %uint %3783 0
       %3788 = OpIAdd %uint %3787 %3786
       %3789 = OpIMul %uint %3785 %3788
       %3790 = OpIAdd %uint %3784 %3789
       %3791 = OpIMul %uint %3788 %3790
       %3792 = OpIAdd %uint %3785 %3791
       %3793 = OpIMul %uint %3790 %3792
       %3794 = OpIAdd %uint %3788 %3793
       %3795 = OpCompositeInsert %v3uint %3794 %549 0
       %3796 = OpShiftRightLogical %v3uint %3795 %3645
       %3797 = OpCompositeExtract %uint %3796 0
       %3798 = OpCompositeConstruct %v3uint %3797 %3797 %3797
       %3799 = OpBitwiseAnd %v3uint %3798 %388
       %3800 = OpConvertUToF %v3float %3799
       %3801 = OpExtInst %v3float %1 Fma %3800 %392 %282
       %3802 = OpDot %float %3801 %3779
       %3803 = OpConvertFToS %int %3627
       %3804 = OpFSub %v3float %3618 %130
       %3805 = OpCompositeConstruct %v3int %3803 %int_0 %int_0
       %3806 = OpBitcast %v3uint %3805
       %3807 = OpIMul %v3uint %3806 %403
       %3808 = OpIAdd %v3uint %3807 %405
       %3809 = OpCompositeExtract %uint %3808 1
       %3810 = OpCompositeExtract %uint %3808 2
       %3811 = OpIMul %uint %3809 %3810
       %3812 = OpCompositeExtract %uint %3808 0
       %3813 = OpIAdd %uint %3812 %3811
       %3814 = OpIMul %uint %3810 %3813
       %3815 = OpIAdd %uint %3809 %3814
       %3816 = OpIMul %uint %3813 %3815
       %3817 = OpIAdd %uint %3810 %3816
       %3818 = OpIMul %uint %3815 %3817
       %3819 = OpIAdd %uint %3813 %3818
       %3820 = OpCompositeInsert %v3uint %3819 %549 0
       %3821 = OpShiftRightLogical %v3uint %3820 %3645
       %3822 = OpCompositeExtract %uint %3821 0
       %3823 = OpCompositeConstruct %v3uint %3822 %3822 %3822
       %3824 = OpBitwiseAnd %v3uint %3823 %388
       %3825 = OpConvertUToF %v3float %3824
       %3826 = OpExtInst %v3float %1 Fma %3825 %392 %282
       %3827 = OpDot %float %3826 %3804
       %3828 = OpCompositeExtract %float %3618 0
       %3829 = OpCompositeExtract %float %3618 1
       %3830 = OpCompositeExtract %float %3618 2
       %3831 = OpCompositeConstruct %v4float %3828 %3829 %3830 %float_0
       %3832 = OpFMul %v4float %3831 %3831
       %3833 = OpFMul %v4float %3832 %3831
       %3834 = OpVectorTimesScalar %v4float %3831 %float_6
       %3835 = OpFSub %v4float %3834 %383
       %3836 = OpExtInst %v4float %1 Fma %3831 %3835 %384
       %3837 = OpFMul %v4float %3833 %3836
       %3838 = OpCompositeExtract %float %3837 0
       %3839 = OpExtInst %float %1 FMix %3652 %3677 %3838
       %3840 = OpExtInst %float %1 FMix %3702 %3727 %3838
       %3841 = OpCompositeExtract %float %3837 1
       %3842 = OpExtInst %float %1 FMix %3839 %3840 %3841
       %3843 = OpExtInst %float %1 FMix %3752 %3777 %3838
       %3844 = OpExtInst %float %1 FMix %3802 %3827 %3838
       %3845 = OpExtInst %float %1 FMix %3843 %3844 %3841
       %3846 = OpCompositeExtract %float %3837 2
       %3847 = OpExtInst %float %1 FMix %3842 %3845 %3846
       %3613 = OpExtInst %float %1 Fma %3847 %3610 %3612
       %3608 = OpVectorTimesScalar %v3float %3607 %float_2
       %3611 = OpFMul %float %3610 %float_0_5
       %3615 = OpIAdd %uint %3614 %uint_1
               OpBranch %3606
       %3617 = OpLabel
       %3848 = OpExtInst %float %1 Fma %3612 %float_0_5 %float_0_5
       %3849 = OpExtInst %float %1 FMix %float_0 %float_1 %3848
       %3850 = OpExtInst %float %1 FClamp %3849 %float_0 %float_1
       %3851 = OpExtInst %float %1 FMix %1159 %1712 %3850
       %3852 = OpFMul %float %3572 %3851
       %3853 = OpExtInst %float %1 Fma %3561 %3568 %3852
       %3854 = OpExtInst %float %1 Floor %3569
       %3855 = OpFNegate %float %3854
       %3856 = OpExtInst %float %1 Fma %3560 %3568 %3855
       %3857 = OpExtInst %float %1 Fma %3856 %float_2097152 %3853
       %3858 = OpExtInst %float %1 Floor %3857
       %3859 = OpFMul %float %3854 %float_n6_28318548
       %3860 = OpExtInst %float %1 Fma %3569 %float_6_28318548 %3859
       %3861 = OpFMul %float %3858 %float_n6_28318548
       %3862 = OpExtInst %float %1 Fma %3853 %float_6_28318548 %3861
       %3863 = OpExtInst %float %1 Fma %3860 %float_2097152 %3862
       %3864 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_0
       %3865 = OpLoad %float %3864
       %3866 = OpFMul %float %3865 %1723
       %3867 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_1
       %3868 = OpLoad %float %3867
       %3869 = OpFMul %float %3868 %1723
       %3870 = OpFNegate %float %3869
       %3871 = OpExtInst %float %1 Fma %3865 %1723 %3870
       %3872 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_2
       %3873 = OpLoad %float %3872
       %3874 = OpCompositeConstruct %v3float %3873 %3873 %3873
       %3875 = OpFMul %v3float %591 %3874
       %3876 = OpFMul %v3float %3874 %640
       %3877 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_3
       %3878 = OpLoad %float %3877
       %3879 = OpCompositeConstruct %v3float %3878 %3878 %3878
       %3880 = OpFMul %v3float %3875 %3879
       %3881 = OpFMul %v3float %3876 %3879
       %3882 = OpFMul %v3float %3881 %3584
       %3883 = OpCompositeExtract %float %3882 0
       %3884 = OpCompositeExtract %float %3882 1
       %3885 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_60 %int_1
       %3886 = OpLoad %float %3885
       %3887 = OpFMul %float %1159 %3886
       %3888 = OpCompositeExtract %float %3882 2
       %3889 = OpCompositeConstruct %v2float %3887 %3887
       %3890 = OpCompositeConstruct %v2float %3888 %3888
       %3891 = OpFAdd %v2float %3889 %3890
       %3892 = OpCompositeExtract %float %3891 0
       %3893 = OpCompositeConstruct %v3float %3883 %3884 %3892
       %3894 = OpVectorTimesScalar %v3float %3893 %float_4_76837158en07
       %3895 = OpFAdd %v3float %3894 %140
       %3896 = OpExtInst %v3float %1 Fma %3880 %3584 %3895
       %3897 = OpExtInst %v3float %1 Floor %3896
       %3898 = OpFNegate %v3float %3897
       %3899 = OpExtInst %v3float %1 Fma %3880 %3584 %3898
       %3900 = OpVectorTimesScalar %v3float %3899 %float_2097152
       %3901 = OpFAdd %v3float %3900 %3893
       %3902 = OpVectorTimesScalar %v3float %3901 %float_1
               OpBranch %3903
       %3903 = OpLabel
       %3904 = OpPhi %v3float %3902 %3617 %3905 %3906
       %3907 = OpPhi %float %float_1 %3617 %3908 %3906
       %3909 = OpPhi %float %float_0 %3617 %3910 %3906
       %3911 = OpPhi %uint %uint_0 %3617 %3912 %3906
       %3913 = OpULessThan %bool %3911 %uint_10
               OpLoopMerge %3914 %3906 DontUnroll
               OpBranchConditional %3913 %3906 %3914
       %3906 = OpLabel
       %3915 = OpExtInst %v3float %1 Fract %3904
       %3916 = OpExtInst %v3float %1 Floor %3904
       %3917 = OpDot %float %3916 %387
       %3918 = OpFAdd %float %3917 %float_19
       %3919 = OpFAdd %float %3917 %float_47
       %3920 = OpFAdd %float %3917 %float_66
       %3921 = OpFAdd %float %3917 %float_101
       %3922 = OpFAdd %float %3917 %float_120
       %3923 = OpFAdd %float %3917 %float_148
       %3924 = OpFAdd %float %3917 %float_167
       %3925 = OpConvertFToS %int %3917
       %3926 = OpCompositeConstruct %v3int %3925 %int_0 %int_0
       %3927 = OpBitcast %v3uint %3926
       %3928 = OpIMul %v3uint %3927 %403
       %3929 = OpIAdd %v3uint %3928 %405
       %3930 = OpCompositeExtract %uint %3929 1
       %3931 = OpCompositeExtract %uint %3929 2
       %3932 = OpIMul %uint %3930 %3931
       %3933 = OpCompositeExtract %uint %3929 0
       %3934 = OpIAdd %uint %3933 %3932
       %3935 = OpIMul %uint %3931 %3934
       %3936 = OpIAdd %uint %3930 %3935
       %3937 = OpIMul %uint %3934 %3936
       %3938 = OpIAdd %uint %3931 %3937
       %3939 = OpIMul %uint %3936 %3938
       %3940 = OpIAdd %uint %3934 %3939
       %3941 = OpCompositeInsert %v3uint %3940 %549 0
       %3942 = OpBitwiseAnd %v3uint %406 %407
       %3943 = OpShiftRightLogical %v3uint %3941 %3942
       %3944 = OpCompositeExtract %uint %3943 0
       %3945 = OpCompositeConstruct %v3uint %3944 %3944 %3944
       %3946 = OpBitwiseAnd %v3uint %3945 %388
       %3947 = OpConvertUToF %v3float %3946
       %3948 = OpExtInst %v3float %1 Fma %3947 %392 %282
       %3949 = OpDot %float %3948 %3915
       %3950 = OpConvertFToS %int %3918
       %3951 = OpFSub %v3float %3915 %351
       %3952 = OpCompositeConstruct %v3int %3950 %int_0 %int_0
       %3953 = OpBitcast %v3uint %3952
       %3954 = OpIMul %v3uint %3953 %403
       %3955 = OpIAdd %v3uint %3954 %405
       %3956 = OpCompositeExtract %uint %3955 1
       %3957 = OpCompositeExtract %uint %3955 2
       %3958 = OpIMul %uint %3956 %3957
       %3959 = OpCompositeExtract %uint %3955 0
       %3960 = OpIAdd %uint %3959 %3958
       %3961 = OpIMul %uint %3957 %3960
       %3962 = OpIAdd %uint %3956 %3961
       %3963 = OpIMul %uint %3960 %3962
       %3964 = OpIAdd %uint %3957 %3963
       %3965 = OpIMul %uint %3962 %3964
       %3966 = OpIAdd %uint %3960 %3965
       %3967 = OpCompositeInsert %v3uint %3966 %549 0
       %3968 = OpShiftRightLogical %v3uint %3967 %3942
       %3969 = OpCompositeExtract %uint %3968 0
       %3970 = OpCompositeConstruct %v3uint %3969 %3969 %3969
       %3971 = OpBitwiseAnd %v3uint %3970 %388
       %3972 = OpConvertUToF %v3float %3971
       %3973 = OpExtInst %v3float %1 Fma %3972 %392 %282
       %3974 = OpDot %float %3973 %3951
       %3975 = OpConvertFToS %int %3919
       %3976 = OpFSub %v3float %3915 %352
       %3977 = OpCompositeConstruct %v3int %3975 %int_0 %int_0
       %3978 = OpBitcast %v3uint %3977
       %3979 = OpIMul %v3uint %3978 %403
       %3980 = OpIAdd %v3uint %3979 %405
       %3981 = OpCompositeExtract %uint %3980 1
       %3982 = OpCompositeExtract %uint %3980 2
       %3983 = OpIMul %uint %3981 %3982
       %3984 = OpCompositeExtract %uint %3980 0
       %3985 = OpIAdd %uint %3984 %3983
       %3986 = OpIMul %uint %3982 %3985
       %3987 = OpIAdd %uint %3981 %3986
       %3988 = OpIMul %uint %3985 %3987
       %3989 = OpIAdd %uint %3982 %3988
       %3990 = OpIMul %uint %3987 %3989
       %3991 = OpIAdd %uint %3985 %3990
       %3992 = OpCompositeInsert %v3uint %3991 %549 0
       %3993 = OpShiftRightLogical %v3uint %3992 %3942
       %3994 = OpCompositeExtract %uint %3993 0
       %3995 = OpCompositeConstruct %v3uint %3994 %3994 %3994
       %3996 = OpBitwiseAnd %v3uint %3995 %388
       %3997 = OpConvertUToF %v3float %3996
       %3998 = OpExtInst %v3float %1 Fma %3997 %392 %282
       %3999 = OpDot %float %3998 %3976
       %4000 = OpConvertFToS %int %3920
       %4001 = OpFSub %v3float %3915 %137
       %4002 = OpCompositeConstruct %v3int %4000 %int_0 %int_0
       %4003 = OpBitcast %v3uint %4002
       %4004 = OpIMul %v3uint %4003 %403
       %4005 = OpIAdd %v3uint %4004 %405
       %4006 = OpCompositeExtract %uint %4005 1
       %4007 = OpCompositeExtract %uint %4005 2
       %4008 = OpIMul %uint %4006 %4007
       %4009 = OpCompositeExtract %uint %4005 0
       %4010 = OpIAdd %uint %4009 %4008
       %4011 = OpIMul %uint %4007 %4010
       %4012 = OpIAdd %uint %4006 %4011
       %4013 = OpIMul %uint %4010 %4012
       %4014 = OpIAdd %uint %4007 %4013
       %4015 = OpIMul %uint %4012 %4014
       %4016 = OpIAdd %uint %4010 %4015
       %4017 = OpCompositeInsert %v3uint %4016 %549 0
       %4018 = OpShiftRightLogical %v3uint %4017 %3942
       %4019 = OpCompositeExtract %uint %4018 0
       %4020 = OpCompositeConstruct %v3uint %4019 %4019 %4019
       %4021 = OpBitwiseAnd %v3uint %4020 %388
       %4022 = OpConvertUToF %v3float %4021
       %4023 = OpExtInst %v3float %1 Fma %4022 %392 %282
       %4024 = OpDot %float %4023 %4001
       %4025 = OpConvertFToS %int %3921
       %4026 = OpFSub %v3float %3915 %294
       %4027 = OpCompositeConstruct %v3int %4025 %int_0 %int_0
       %4028 = OpBitcast %v3uint %4027
       %4029 = OpIMul %v3uint %4028 %403
       %4030 = OpIAdd %v3uint %4029 %405
       %4031 = OpCompositeExtract %uint %4030 1
       %4032 = OpCompositeExtract %uint %4030 2
       %4033 = OpIMul %uint %4031 %4032
       %4034 = OpCompositeExtract %uint %4030 0
       %4035 = OpIAdd %uint %4034 %4033
       %4036 = OpIMul %uint %4032 %4035
       %4037 = OpIAdd %uint %4031 %4036
       %4038 = OpIMul %uint %4035 %4037
       %4039 = OpIAdd %uint %4032 %4038
       %4040 = OpIMul %uint %4037 %4039
       %4041 = OpIAdd %uint %4035 %4040
       %4042 = OpCompositeInsert %v3uint %4041 %549 0
       %4043 = OpShiftRightLogical %v3uint %4042 %3942
       %4044 = OpCompositeExtract %uint %4043 0
       %4045 = OpCompositeConstruct %v3uint %4044 %4044 %4044
       %4046 = OpBitwiseAnd %v3uint %4045 %388
       %4047 = OpConvertUToF %v3float %4046
       %4048 = OpExtInst %v3float %1 Fma %4047 %392 %282
       %4049 = OpDot %float %4048 %4026
       %4050 = OpConvertFToS %int %3922
       %4051 = OpFSub %v3float %3915 %143
       %4052 = OpCompositeConstruct %v3int %4050 %int_0 %int_0
       %4053 = OpBitcast %v3uint %4052
       %4054 = OpIMul %v3uint %4053 %403
       %4055 = OpIAdd %v3uint %4054 %405
       %4056 = OpCompositeExtract %uint %4055 1
       %4057 = OpCompositeExtract %uint %4055 2
       %4058 = OpIMul %uint %4056 %4057
       %4059 = OpCompositeExtract %uint %4055 0
       %4060 = OpIAdd %uint %4059 %4058
       %4061 = OpIMul %uint %4057 %4060
       %4062 = OpIAdd %uint %4056 %4061
       %4063 = OpIMul %uint %4060 %4062
       %4064 = OpIAdd %uint %4057 %4063
       %4065 = OpIMul %uint %4062 %4064
       %4066 = OpIAdd %uint %4060 %4065
       %4067 = OpCompositeInsert %v3uint %4066 %549 0
       %4068 = OpShiftRightLogical %v3uint %4067 %3942
       %4069 = OpCompositeExtract %uint %4068 0
       %4070 = OpCompositeConstruct %v3uint %4069 %4069 %4069
       %4071 = OpBitwiseAnd %v3uint %4070 %388
       %4072 = OpConvertUToF %v3float %4071
       %4073 = OpExtInst %v3float %1 Fma %4072 %392 %282
       %4074 = OpDot %float %4073 %4051
       %4075 = OpConvertFToS %int %3923
       %4076 = OpFSub %v3float %3915 %138
       %4077 = OpCompositeConstruct %v3int %4075 %int_0 %int_0
       %4078 = OpBitcast %v3uint %4077
       %4079 = OpIMul %v3uint %4078 %403
       %4080 = OpIAdd %v3uint %4079 %405
       %4081 = OpCompositeExtract %uint %4080 1
       %4082 = OpCompositeExtract %uint %4080 2
       %4083 = OpIMul %uint %4081 %4082
       %4084 = OpCompositeExtract %uint %4080 0
       %4085 = OpIAdd %uint %4084 %4083
       %4086 = OpIMul %uint %4082 %4085
       %4087 = OpIAdd %uint %4081 %4086
       %4088 = OpIMul %uint %4085 %4087
       %4089 = OpIAdd %uint %4082 %4088
       %4090 = OpIMul %uint %4087 %4089
       %4091 = OpIAdd %uint %4085 %4090
       %4092 = OpCompositeInsert %v3uint %4091 %549 0
       %4093 = OpShiftRightLogical %v3uint %4092 %3942
       %4094 = OpCompositeExtract %uint %4093 0
       %4095 = OpCompositeConstruct %v3uint %4094 %4094 %4094
       %4096 = OpBitwiseAnd %v3uint %4095 %388
       %4097 = OpConvertUToF %v3float %4096
       %4098 = OpExtInst %v3float %1 Fma %4097 %392 %282
       %4099 = OpDot %float %4098 %4076
       %4100 = OpConvertFToS %int %3924
       %4101 = OpFSub %v3float %3915 %130
       %4102 = OpCompositeConstruct %v3int %4100 %int_0 %int_0
       %4103 = OpBitcast %v3uint %4102
       %4104 = OpIMul %v3uint %4103 %403
       %4105 = OpIAdd %v3uint %4104 %405
       %4106 = OpCompositeExtract %uint %4105 1
       %4107 = OpCompositeExtract %uint %4105 2
       %4108 = OpIMul %uint %4106 %4107
       %4109 = OpCompositeExtract %uint %4105 0
       %4110 = OpIAdd %uint %4109 %4108
       %4111 = OpIMul %uint %4107 %4110
       %4112 = OpIAdd %uint %4106 %4111
       %4113 = OpIMul %uint %4110 %4112
       %4114 = OpIAdd %uint %4107 %4113
       %4115 = OpIMul %uint %4112 %4114
       %4116 = OpIAdd %uint %4110 %4115
       %4117 = OpCompositeInsert %v3uint %4116 %549 0
       %4118 = OpShiftRightLogical %v3uint %4117 %3942
       %4119 = OpCompositeExtract %uint %4118 0
       %4120 = OpCompositeConstruct %v3uint %4119 %4119 %4119
       %4121 = OpBitwiseAnd %v3uint %4120 %388
       %4122 = OpConvertUToF %v3float %4121
       %4123 = OpExtInst %v3float %1 Fma %4122 %392 %282
       %4124 = OpDot %float %4123 %4101
       %4125 = OpCompositeExtract %float %3915 0
       %4126 = OpCompositeExtract %float %3915 1
       %4127 = OpCompositeExtract %float %3915 2
       %4128 = OpCompositeConstruct %v4float %4125 %4126 %4127 %float_0
       %4129 = OpFMul %v4float %4128 %4128
       %4130 = OpFMul %v4float %4129 %4128
       %4131 = OpVectorTimesScalar %v4float %4128 %float_6
       %4132 = OpFSub %v4float %4131 %383
       %4133 = OpExtInst %v4float %1 Fma %4128 %4132 %384
       %4134 = OpFMul %v4float %4130 %4133
       %4135 = OpCompositeExtract %float %4134 0
       %4136 = OpExtInst %float %1 FMix %3949 %3974 %4135
       %4137 = OpExtInst %float %1 FMix %3999 %4024 %4135
       %4138 = OpCompositeExtract %float %4134 1
       %4139 = OpExtInst %float %1 FMix %4136 %4137 %4138
       %4140 = OpExtInst %float %1 FMix %4049 %4074 %4135
       %4141 = OpExtInst %float %1 FMix %4099 %4124 %4135
       %4142 = OpExtInst %float %1 FMix %4140 %4141 %4138
       %4143 = OpCompositeExtract %float %4134 2
       %4144 = OpExtInst %float %1 FMix %4139 %4142 %4143
       %4145 = OpExtInst %float %1 FAbs %4144
       %3910 = OpExtInst %float %1 Fma %4145 %3907 %3909
       %3905 = OpVectorTimesScalar %v3float %3904 %float_2
       %3908 = OpFMul %float %3907 %float_0_5
       %3912 = OpIAdd %uint %3911 %uint_1
               OpBranch %3903
       %3914 = OpLabel
       %4146 = OpExtInst %float %1 FMix %float_0 %float_1 %3909
       %4147 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_60 %int_2
       %4148 = OpLoad %float %4147
       %4149 = OpCompositeConstruct %v3float %4148 %4148 %4148
       %4150 = OpFMul %v3float %591 %4149
       %4151 = OpFMul %v3float %4149 %640
       %4152 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_60 %int_3
       %4153 = OpLoad %float %4152
       %4154 = OpCompositeConstruct %v3float %4153 %4153 %4153
       %4155 = OpFMul %v3float %4150 %4154
       %4156 = OpFMul %v3float %4151 %4154
       %4157 = OpFMul %v3float %4156 %3584
       %4158 = OpCompositeExtract %float %4157 0
       %4159 = OpCompositeExtract %float %4157 1
       %4160 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_61 %int_1
       %4161 = OpLoad %float %4160
       %4162 = OpFMul %float %1159 %4161
       %4163 = OpCompositeExtract %float %4157 2
       %4164 = OpCompositeConstruct %v2float %4162 %4162
       %4165 = OpCompositeConstruct %v2float %4163 %4163
       %4166 = OpFAdd %v2float %4164 %4165
       %4167 = OpCompositeExtract %float %4166 0
       %4168 = OpCompositeConstruct %v3float %4158 %4159 %4167
       %4169 = OpVectorTimesScalar %v3float %4168 %float_4_76837158en07
       %4170 = OpFAdd %v3float %4169 %140
       %4171 = OpExtInst %v3float %1 Fma %4155 %3584 %4170
       %4172 = OpExtInst %v3float %1 Floor %4171
       %4173 = OpFNegate %v3float %4172
       %4174 = OpExtInst %v3float %1 Fma %4155 %3584 %4173
       %4175 = OpVectorTimesScalar %v3float %4174 %float_2097152
       %4176 = OpFAdd %v3float %4175 %4168
       %4177 = OpVectorTimesScalar %v3float %4176 %float_1
               OpBranch %4178
       %4178 = OpLabel
       %4179 = OpPhi %v3float %4177 %3914 %4180 %4181
       %4182 = OpPhi %float %float_1 %3914 %4183 %4181
       %4184 = OpPhi %float %float_0 %3914 %4185 %4181
       %4186 = OpPhi %uint %uint_0 %3914 %4187 %4181
       %4188 = OpULessThan %bool %4186 %uint_10
               OpLoopMerge %4189 %4181 DontUnroll
               OpBranchConditional %4188 %4181 %4189
       %4181 = OpLabel
       %4190 = OpExtInst %v3float %1 Fract %4179
       %4191 = OpExtInst %v3float %1 Floor %4179
       %4192 = OpDot %float %4191 %387
       %4193 = OpFAdd %float %4192 %float_19
       %4194 = OpFAdd %float %4192 %float_47
       %4195 = OpFAdd %float %4192 %float_66
       %4196 = OpFAdd %float %4192 %float_101
       %4197 = OpFAdd %float %4192 %float_120
       %4198 = OpFAdd %float %4192 %float_148
       %4199 = OpFAdd %float %4192 %float_167
       %4200 = OpConvertFToS %int %4192
       %4201 = OpCompositeConstruct %v3int %4200 %int_0 %int_0
       %4202 = OpBitcast %v3uint %4201
       %4203 = OpIMul %v3uint %4202 %403
       %4204 = OpIAdd %v3uint %4203 %405
       %4205 = OpCompositeExtract %uint %4204 1
       %4206 = OpCompositeExtract %uint %4204 2
       %4207 = OpIMul %uint %4205 %4206
       %4208 = OpCompositeExtract %uint %4204 0
       %4209 = OpIAdd %uint %4208 %4207
       %4210 = OpIMul %uint %4206 %4209
       %4211 = OpIAdd %uint %4205 %4210
       %4212 = OpIMul %uint %4209 %4211
       %4213 = OpIAdd %uint %4206 %4212
       %4214 = OpIMul %uint %4211 %4213
       %4215 = OpIAdd %uint %4209 %4214
       %4216 = OpCompositeInsert %v3uint %4215 %549 0
       %4217 = OpBitwiseAnd %v3uint %406 %407
       %4218 = OpShiftRightLogical %v3uint %4216 %4217
       %4219 = OpCompositeExtract %uint %4218 0
       %4220 = OpCompositeConstruct %v3uint %4219 %4219 %4219
       %4221 = OpBitwiseAnd %v3uint %4220 %388
       %4222 = OpConvertUToF %v3float %4221
       %4223 = OpExtInst %v3float %1 Fma %4222 %392 %282
       %4224 = OpDot %float %4223 %4190
       %4225 = OpConvertFToS %int %4193
       %4226 = OpFSub %v3float %4190 %351
       %4227 = OpCompositeConstruct %v3int %4225 %int_0 %int_0
       %4228 = OpBitcast %v3uint %4227
       %4229 = OpIMul %v3uint %4228 %403
       %4230 = OpIAdd %v3uint %4229 %405
       %4231 = OpCompositeExtract %uint %4230 1
       %4232 = OpCompositeExtract %uint %4230 2
       %4233 = OpIMul %uint %4231 %4232
       %4234 = OpCompositeExtract %uint %4230 0
       %4235 = OpIAdd %uint %4234 %4233
       %4236 = OpIMul %uint %4232 %4235
       %4237 = OpIAdd %uint %4231 %4236
       %4238 = OpIMul %uint %4235 %4237
       %4239 = OpIAdd %uint %4232 %4238
       %4240 = OpIMul %uint %4237 %4239
       %4241 = OpIAdd %uint %4235 %4240
       %4242 = OpCompositeInsert %v3uint %4241 %549 0
       %4243 = OpShiftRightLogical %v3uint %4242 %4217
       %4244 = OpCompositeExtract %uint %4243 0
       %4245 = OpCompositeConstruct %v3uint %4244 %4244 %4244
       %4246 = OpBitwiseAnd %v3uint %4245 %388
       %4247 = OpConvertUToF %v3float %4246
       %4248 = OpExtInst %v3float %1 Fma %4247 %392 %282
       %4249 = OpDot %float %4248 %4226
       %4250 = OpConvertFToS %int %4194
       %4251 = OpFSub %v3float %4190 %352
       %4252 = OpCompositeConstruct %v3int %4250 %int_0 %int_0
       %4253 = OpBitcast %v3uint %4252
       %4254 = OpIMul %v3uint %4253 %403
       %4255 = OpIAdd %v3uint %4254 %405
       %4256 = OpCompositeExtract %uint %4255 1
       %4257 = OpCompositeExtract %uint %4255 2
       %4258 = OpIMul %uint %4256 %4257
       %4259 = OpCompositeExtract %uint %4255 0
       %4260 = OpIAdd %uint %4259 %4258
       %4261 = OpIMul %uint %4257 %4260
       %4262 = OpIAdd %uint %4256 %4261
       %4263 = OpIMul %uint %4260 %4262
       %4264 = OpIAdd %uint %4257 %4263
       %4265 = OpIMul %uint %4262 %4264
       %4266 = OpIAdd %uint %4260 %4265
       %4267 = OpCompositeInsert %v3uint %4266 %549 0
       %4268 = OpShiftRightLogical %v3uint %4267 %4217
       %4269 = OpCompositeExtract %uint %4268 0
       %4270 = OpCompositeConstruct %v3uint %4269 %4269 %4269
       %4271 = OpBitwiseAnd %v3uint %4270 %388
       %4272 = OpConvertUToF %v3float %4271
       %4273 = OpExtInst %v3float %1 Fma %4272 %392 %282
       %4274 = OpDot %float %4273 %4251
       %4275 = OpConvertFToS %int %4195
       %4276 = OpFSub %v3float %4190 %137
       %4277 = OpCompositeConstruct %v3int %4275 %int_0 %int_0
       %4278 = OpBitcast %v3uint %4277
       %4279 = OpIMul %v3uint %4278 %403
       %4280 = OpIAdd %v3uint %4279 %405
       %4281 = OpCompositeExtract %uint %4280 1
       %4282 = OpCompositeExtract %uint %4280 2
       %4283 = OpIMul %uint %4281 %4282
       %4284 = OpCompositeExtract %uint %4280 0
       %4285 = OpIAdd %uint %4284 %4283
       %4286 = OpIMul %uint %4282 %4285
       %4287 = OpIAdd %uint %4281 %4286
       %4288 = OpIMul %uint %4285 %4287
       %4289 = OpIAdd %uint %4282 %4288
       %4290 = OpIMul %uint %4287 %4289
       %4291 = OpIAdd %uint %4285 %4290
       %4292 = OpCompositeInsert %v3uint %4291 %549 0
       %4293 = OpShiftRightLogical %v3uint %4292 %4217
       %4294 = OpCompositeExtract %uint %4293 0
       %4295 = OpCompositeConstruct %v3uint %4294 %4294 %4294
       %4296 = OpBitwiseAnd %v3uint %4295 %388
       %4297 = OpConvertUToF %v3float %4296
       %4298 = OpExtInst %v3float %1 Fma %4297 %392 %282
       %4299 = OpDot %float %4298 %4276
       %4300 = OpConvertFToS %int %4196
       %4301 = OpFSub %v3float %4190 %294
       %4302 = OpCompositeConstruct %v3int %4300 %int_0 %int_0
       %4303 = OpBitcast %v3uint %4302
       %4304 = OpIMul %v3uint %4303 %403
       %4305 = OpIAdd %v3uint %4304 %405
       %4306 = OpCompositeExtract %uint %4305 1
       %4307 = OpCompositeExtract %uint %4305 2
       %4308 = OpIMul %uint %4306 %4307
       %4309 = OpCompositeExtract %uint %4305 0
       %4310 = OpIAdd %uint %4309 %4308
       %4311 = OpIMul %uint %4307 %4310
       %4312 = OpIAdd %uint %4306 %4311
       %4313 = OpIMul %uint %4310 %4312
       %4314 = OpIAdd %uint %4307 %4313
       %4315 = OpIMul %uint %4312 %4314
       %4316 = OpIAdd %uint %4310 %4315
       %4317 = OpCompositeInsert %v3uint %4316 %549 0
       %4318 = OpShiftRightLogical %v3uint %4317 %4217
       %4319 = OpCompositeExtract %uint %4318 0
       %4320 = OpCompositeConstruct %v3uint %4319 %4319 %4319
       %4321 = OpBitwiseAnd %v3uint %4320 %388
       %4322 = OpConvertUToF %v3float %4321
       %4323 = OpExtInst %v3float %1 Fma %4322 %392 %282
       %4324 = OpDot %float %4323 %4301
       %4325 = OpConvertFToS %int %4197
       %4326 = OpFSub %v3float %4190 %143
       %4327 = OpCompositeConstruct %v3int %4325 %int_0 %int_0
       %4328 = OpBitcast %v3uint %4327
       %4329 = OpIMul %v3uint %4328 %403
       %4330 = OpIAdd %v3uint %4329 %405
       %4331 = OpCompositeExtract %uint %4330 1
       %4332 = OpCompositeExtract %uint %4330 2
       %4333 = OpIMul %uint %4331 %4332
       %4334 = OpCompositeExtract %uint %4330 0
       %4335 = OpIAdd %uint %4334 %4333
       %4336 = OpIMul %uint %4332 %4335
       %4337 = OpIAdd %uint %4331 %4336
       %4338 = OpIMul %uint %4335 %4337
       %4339 = OpIAdd %uint %4332 %4338
       %4340 = OpIMul %uint %4337 %4339
       %4341 = OpIAdd %uint %4335 %4340
       %4342 = OpCompositeInsert %v3uint %4341 %549 0
       %4343 = OpShiftRightLogical %v3uint %4342 %4217
       %4344 = OpCompositeExtract %uint %4343 0
       %4345 = OpCompositeConstruct %v3uint %4344 %4344 %4344
       %4346 = OpBitwiseAnd %v3uint %4345 %388
       %4347 = OpConvertUToF %v3float %4346
       %4348 = OpExtInst %v3float %1 Fma %4347 %392 %282
       %4349 = OpDot %float %4348 %4326
       %4350 = OpConvertFToS %int %4198
       %4351 = OpFSub %v3float %4190 %138
       %4352 = OpCompositeConstruct %v3int %4350 %int_0 %int_0
       %4353 = OpBitcast %v3uint %4352
       %4354 = OpIMul %v3uint %4353 %403
       %4355 = OpIAdd %v3uint %4354 %405
       %4356 = OpCompositeExtract %uint %4355 1
       %4357 = OpCompositeExtract %uint %4355 2
       %4358 = OpIMul %uint %4356 %4357
       %4359 = OpCompositeExtract %uint %4355 0
       %4360 = OpIAdd %uint %4359 %4358
       %4361 = OpIMul %uint %4357 %4360
       %4362 = OpIAdd %uint %4356 %4361
       %4363 = OpIMul %uint %4360 %4362
       %4364 = OpIAdd %uint %4357 %4363
       %4365 = OpIMul %uint %4362 %4364
       %4366 = OpIAdd %uint %4360 %4365
       %4367 = OpCompositeInsert %v3uint %4366 %549 0
       %4368 = OpShiftRightLogical %v3uint %4367 %4217
       %4369 = OpCompositeExtract %uint %4368 0
       %4370 = OpCompositeConstruct %v3uint %4369 %4369 %4369
       %4371 = OpBitwiseAnd %v3uint %4370 %388
       %4372 = OpConvertUToF %v3float %4371
       %4373 = OpExtInst %v3float %1 Fma %4372 %392 %282
       %4374 = OpDot %float %4373 %4351
       %4375 = OpConvertFToS %int %4199
       %4376 = OpFSub %v3float %4190 %130
       %4377 = OpCompositeConstruct %v3int %4375 %int_0 %int_0
       %4378 = OpBitcast %v3uint %4377
       %4379 = OpIMul %v3uint %4378 %403
       %4380 = OpIAdd %v3uint %4379 %405
       %4381 = OpCompositeExtract %uint %4380 1
       %4382 = OpCompositeExtract %uint %4380 2
       %4383 = OpIMul %uint %4381 %4382
       %4384 = OpCompositeExtract %uint %4380 0
       %4385 = OpIAdd %uint %4384 %4383
       %4386 = OpIMul %uint %4382 %4385
       %4387 = OpIAdd %uint %4381 %4386
       %4388 = OpIMul %uint %4385 %4387
       %4389 = OpIAdd %uint %4382 %4388
       %4390 = OpIMul %uint %4387 %4389
       %4391 = OpIAdd %uint %4385 %4390
       %4392 = OpCompositeInsert %v3uint %4391 %549 0
       %4393 = OpShiftRightLogical %v3uint %4392 %4217
       %4394 = OpCompositeExtract %uint %4393 0
       %4395 = OpCompositeConstruct %v3uint %4394 %4394 %4394
       %4396 = OpBitwiseAnd %v3uint %4395 %388
       %4397 = OpConvertUToF %v3float %4396
       %4398 = OpExtInst %v3float %1 Fma %4397 %392 %282
       %4399 = OpDot %float %4398 %4376
       %4400 = OpCompositeExtract %float %4190 0
       %4401 = OpCompositeExtract %float %4190 1
       %4402 = OpCompositeExtract %float %4190 2
       %4403 = OpCompositeConstruct %v4float %4400 %4401 %4402 %float_0
       %4404 = OpFMul %v4float %4403 %4403
       %4405 = OpFMul %v4float %4404 %4403
       %4406 = OpVectorTimesScalar %v4float %4403 %float_6
       %4407 = OpFSub %v4float %4406 %383
       %4408 = OpExtInst %v4float %1 Fma %4403 %4407 %384
       %4409 = OpFMul %v4float %4405 %4408
       %4410 = OpCompositeExtract %float %4409 0
       %4411 = OpExtInst %float %1 FMix %4224 %4249 %4410
       %4412 = OpExtInst %float %1 FMix %4274 %4299 %4410
       %4413 = OpCompositeExtract %float %4409 1
       %4414 = OpExtInst %float %1 FMix %4411 %4412 %4413
       %4415 = OpExtInst %float %1 FMix %4324 %4349 %4410
       %4416 = OpExtInst %float %1 FMix %4374 %4399 %4410
       %4417 = OpExtInst %float %1 FMix %4415 %4416 %4413
       %4418 = OpCompositeExtract %float %4409 2
       %4419 = OpExtInst %float %1 FMix %4414 %4417 %4418
       %4420 = OpExtInst %float %1 FAbs %4419
       %4185 = OpExtInst %float %1 Fma %4420 %4182 %4184
       %4180 = OpVectorTimesScalar %v3float %4179 %float_2
       %4183 = OpFMul %float %4182 %float_0_5
       %4187 = OpIAdd %uint %4186 %uint_1
               OpBranch %4178
       %4189 = OpLabel
       %4421 = OpExtInst %float %1 FMix %float_0 %float_1 %4184
       %4422 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_61 %int_3
       %4423 = OpLoad %float %4422
       %4424 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_61 %int_2
       %4425 = OpLoad %float %4424
       %4426 = OpExtInst %float %1 Fma %4421 %4423 %4425
       %4427 = OpFMul %float %4146 %4426
       %4428 = OpExtInst %float %1 FMix %3866 %3871 %4427
       %4429 = OpExtInst %float %1 Sin %3863
       %4430 = OpFMul %float %4429 %4428
       %4431 = OpFAdd %v3float %3547 %2559
       %4432 = OpExtInst %v3float %1 NMax %4431 %282
       %4433 = OpExtInst %v3float %1 NMin %4432 %130
       %4434 = OpCompositeExtract %float %4433 0
       %4435 = OpCompositeExtract %float %4433 1
       %4436 = OpCompositeConstruct %v2float %4434 %4435
       %4437 = OpFMul %v2float %1694 %4436
       %4438 = OpFMul %v2float %4436 %1695
       %4439 = OpCompositeExtract %float %4437 0
       %4440 = OpCompositeExtract %float %4438 0
       %4441 = OpCompositeExtract %float %4437 1
       %4442 = OpCompositeExtract %float %4438 1
       %4443 = OpFAdd %float %4439 %4441
       %4444 = OpFAdd %float %4440 %4442
       %4445 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_15 %int_3
       %4446 = OpLoad %float %4445
       %4447 = OpFMul %float %3567 %4446
       %4448 = OpFDiv %float %float_2 %4447
       %4449 = OpFMul %float %4443 %4448
       %4450 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_1
       %4451 = OpLoad %float %4450
       %4452 = OpFMul %float %4448 %4451
       %4453 = OpFMul %float %4452 %3851
       %4454 = OpExtInst %float %1 Fma %4444 %4448 %4453
       %4455 = OpExtInst %float %1 Floor %4449
       %4456 = OpFNegate %float %4455
       %4457 = OpExtInst %float %1 Fma %4443 %4448 %4456
       %4458 = OpExtInst %float %1 Fma %4457 %float_2097152 %4454
       %4459 = OpExtInst %float %1 Floor %4458
       %4460 = OpFMul %float %4455 %float_n6_28318548
       %4461 = OpExtInst %float %1 Fma %4449 %float_6_28318548 %4460
       %4462 = OpFMul %float %4459 %float_n6_28318548
       %4463 = OpExtInst %float %1 Fma %4454 %float_6_28318548 %4462
       %4464 = OpExtInst %float %1 Fma %4461 %float_2097152 %4463
       %4465 = OpFMul %float %4428 %2592
       %4466 = OpExtInst %float %1 Sin %4464
       %4467 = OpFMul %float %4466 %4465
       %4468 = OpCompositeConstruct %v3float %548 %548 %4430
       %4469 = OpCompositeConstruct %v3float %548 %548 %4467
       %4470 = OpFAdd %v3float %4468 %4469
       %4471 = OpFSub %v3float %3547 %1686
       %4472 = OpExtInst %v3float %1 NMax %4471 %282
       %4473 = OpExtInst %v3float %1 NMin %4472 %130
       %4474 = OpCompositeExtract %float %4473 0
       %4475 = OpCompositeExtract %float %4473 1
       %4476 = OpCompositeConstruct %v2float %4474 %4475
       %4477 = OpFMul %v2float %1694 %4476
       %4478 = OpFMul %v2float %4476 %1695
       %4479 = OpCompositeExtract %float %4477 0
       %4480 = OpCompositeExtract %float %4478 0
       %4481 = OpCompositeExtract %float %4477 1
       %4482 = OpCompositeExtract %float %4478 1
       %4483 = OpFAdd %float %4479 %4481
       %4484 = OpFAdd %float %4480 %4482
       %4485 = OpFMul %float %4447 %4446
       %4486 = OpFDiv %float %float_2 %4485
       %4487 = OpFMul %float %4483 %4486
       %4488 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_3
       %4489 = OpLoad %float %4488
       %4490 = OpFMul %float %4486 %4489
       %4491 = OpFMul %float %4490 %3851
       %4492 = OpExtInst %float %1 Fma %4484 %4486 %4491
       %4493 = OpExtInst %float %1 Floor %4487
       %4494 = OpFNegate %float %4493
       %4495 = OpExtInst %float %1 Fma %4483 %4486 %4494
       %4496 = OpExtInst %float %1 Fma %4495 %float_2097152 %4492
       %4497 = OpExtInst %float %1 Floor %4496
       %4498 = OpFMul %float %4493 %float_n6_28318548
       %4499 = OpExtInst %float %1 Fma %4487 %float_6_28318548 %4498
       %4500 = OpFMul %float %4497 %float_n6_28318548
       %4501 = OpExtInst %float %1 Fma %4492 %float_6_28318548 %4500
       %4502 = OpExtInst %float %1 Fma %4499 %float_2097152 %4501
       %4503 = OpFMul %float %4465 %2592
       %4504 = OpExtInst %float %1 Sin %4502
       %4505 = OpFMul %float %4504 %4503
       %4506 = OpCompositeConstruct %v3float %548 %548 %4505
       %4507 = OpFAdd %v3float %4470 %4506
       %4508 = OpFSub %v3float %3547 %2559
       %4509 = OpExtInst %v3float %1 NMax %4508 %282
       %4510 = OpExtInst %v3float %1 NMin %4509 %130
       %4511 = OpCompositeExtract %float %4510 0
       %4512 = OpCompositeExtract %float %4510 1
       %4513 = OpCompositeConstruct %v2float %4511 %4512
       %4514 = OpFMul %v2float %1694 %4513
       %4515 = OpFMul %v2float %4513 %1695
       %4516 = OpCompositeExtract %float %4514 0
       %4517 = OpCompositeExtract %float %4515 0
       %4518 = OpCompositeExtract %float %4514 1
       %4519 = OpCompositeExtract %float %4515 1
       %4520 = OpFAdd %float %4516 %4518
       %4521 = OpFAdd %float %4517 %4519
       %4522 = OpFMul %float %4485 %4446
       %4523 = OpFDiv %float %float_2 %4522
       %4524 = OpFMul %float %4520 %4523
       %4525 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_63 %int_1
       %4526 = OpLoad %float %4525
       %4527 = OpFMul %float %4523 %4526
       %4528 = OpFMul %float %4527 %3851
       %4529 = OpExtInst %float %1 Fma %4521 %4523 %4528
       %4530 = OpExtInst %float %1 Floor %4524
       %4531 = OpFNegate %float %4530
       %4532 = OpExtInst %float %1 Fma %4520 %4523 %4531
       %4533 = OpExtInst %float %1 Fma %4532 %float_2097152 %4529
       %4534 = OpExtInst %float %1 Floor %4533
       %4535 = OpFMul %float %4530 %float_n6_28318548
       %4536 = OpExtInst %float %1 Fma %4524 %float_6_28318548 %4535
       %4537 = OpFMul %float %4534 %float_n6_28318548
       %4538 = OpExtInst %float %1 Fma %4529 %float_6_28318548 %4537
       %4539 = OpExtInst %float %1 Fma %4536 %float_2097152 %4538
       %4540 = OpFMul %float %4503 %2592
       %4541 = OpExtInst %float %1 Sin %4539
       %4542 = OpFMul %float %4541 %4540
       %4543 = OpCompositeConstruct %v3float %548 %548 %4542
       %4544 = OpFAdd %v3float %4507 %4543
       %4545 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_0
       %4546 = OpLoad %float %4545
       %4547 = OpFSub %float %4546 %float_n1
       %4548 = OpExtInst %float %1 FAbs %4547
       %4549 = OpFOrdGreaterThan %bool %4548 %float_9_99999975en06
       %4550 = OpFOrdGreaterThanEqual %bool %4546 %float_n1
       %4551 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_1
       %4552 = OpLoad %float %4551
       %4553 = OpSelect %float %4550 %4546 %4552
       %4554 = OpSelect %float %4549 %4553 %4546
       %4555 = OpFSub %float %4554 %float_1
       %4556 = OpExtInst %float %1 FAbs %4555
       %4557 = OpFOrdGreaterThan %bool %4556 %float_9_99999975en06
       %4558 = OpFOrdGreaterThanEqual %bool %4554 %float_1
       %4559 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_2
       %4560 = OpLoad %float %4559
       %4561 = OpSelect %float %4558 %4560 %4546
       %4562 = OpSelect %float %4557 %4561 %4546
       %4563 = OpExtInst %float %1 FAbs %4562
       %4564 = OpFOrdGreaterThan %bool %4563 %float_9_99999975en06
       %4565 = OpFOrdGreaterThanEqual %bool %4562 %float_0
       %4566 = OpSelect %float %4565 %float_1 %float_n1
       %4567 = OpSelect %float %4564 %4566 %float_1
       %4568 = OpExtInst %float %1 NMax %4567 %float_n1
       %4569 = OpExtInst %float %1 NMin %4568 %float_1
       %4570 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_65 %int_3
       %4571 = OpLoad %float %4570
       %4572 = OpCompositeConstruct %v3float %4569 %4571 %float_0
       %4573 = OpFAdd %v3float %4572 %1686
       %4574 = OpExtInst %v3float %1 NMax %4573 %282
       %4575 = OpExtInst %v3float %1 NMin %4574 %130
       %4576 = OpCompositeExtract %float %4575 0
       %4577 = OpCompositeExtract %float %4575 1
       %4578 = OpCompositeConstruct %v2float %4576 %4577
       %4579 = OpFMul %v2float %1694 %4578
       %4580 = OpFMul %v2float %4578 %1695
       %4581 = OpCompositeExtract %float %4579 0
       %4582 = OpCompositeExtract %float %4580 0
       %4583 = OpCompositeExtract %float %4579 1
       %4584 = OpCompositeExtract %float %4580 1
       %4585 = OpFAdd %float %4581 %4583
       %4586 = OpFAdd %float %4582 %4584
       %4587 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_23 %int_3
       %4588 = OpLoad %float %4587
       %4589 = OpFMul %float %3564 %4588
       %4590 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_0
       %4591 = OpLoad %float %4590
       %4592 = OpFMul %float %4591 %4589
       %4593 = OpFDiv %float %float_2 %4592
       %4594 = OpFMul %float %4585 %4593
       %4595 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_1
       %4596 = OpLoad %float %4595
       %4597 = OpFMul %float %4593 %4596
       %4598 = OpFMul %float %4597 %3851
       %4599 = OpExtInst %float %1 Fma %4586 %4593 %4598
       %4600 = OpExtInst %float %1 Floor %4594
       %4601 = OpFNegate %float %4600
       %4602 = OpExtInst %float %1 Fma %4585 %4593 %4601
       %4603 = OpExtInst %float %1 Fma %4602 %float_2097152 %4599
       %4604 = OpExtInst %float %1 Floor %4603
       %4605 = OpFMul %float %4600 %float_n6_28318548
       %4606 = OpExtInst %float %1 Fma %4594 %float_6_28318548 %4605
       %4607 = OpFMul %float %4604 %float_n6_28318548
       %4608 = OpExtInst %float %1 Fma %4599 %float_6_28318548 %4607
       %4609 = OpExtInst %float %1 Fma %4606 %float_2097152 %4608
       %4610 = OpFMul %float %4428 %2731
       %4611 = OpExtInst %float %1 Sin %4609
       %4612 = OpFMul %float %4611 %4610
       %4613 = OpFAdd %v3float %4572 %2559
       %4614 = OpExtInst %v3float %1 NMax %4613 %282
       %4615 = OpExtInst %v3float %1 NMin %4614 %130
       %4616 = OpCompositeExtract %float %4615 0
       %4617 = OpCompositeExtract %float %4615 1
       %4618 = OpCompositeConstruct %v2float %4616 %4617
       %4619 = OpFMul %v2float %1694 %4618
       %4620 = OpFMul %v2float %4618 %1695
       %4621 = OpCompositeExtract %float %4619 0
       %4622 = OpCompositeExtract %float %4620 0
       %4623 = OpCompositeExtract %float %4619 1
       %4624 = OpCompositeExtract %float %4620 1
       %4625 = OpFAdd %float %4621 %4623
       %4626 = OpFAdd %float %4622 %4624
       %4627 = OpFMul %float %4592 %4446
       %4628 = OpFDiv %float %float_2 %4627
       %4629 = OpFMul %float %4625 %4628
       %4630 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_2
       %4631 = OpLoad %float %4630
       %4632 = OpFMul %float %4628 %4631
       %4633 = OpFMul %float %4632 %3851
       %4634 = OpExtInst %float %1 Fma %4626 %4628 %4633
       %4635 = OpExtInst %float %1 Floor %4629
       %4636 = OpFNegate %float %4635
       %4637 = OpExtInst %float %1 Fma %4625 %4628 %4636
       %4638 = OpExtInst %float %1 Fma %4637 %float_2097152 %4634
       %4639 = OpExtInst %float %1 Floor %4638
       %4640 = OpFMul %float %4635 %float_n6_28318548
       %4641 = OpExtInst %float %1 Fma %4629 %float_6_28318548 %4640
       %4642 = OpFMul %float %4639 %float_n6_28318548
       %4643 = OpExtInst %float %1 Fma %4634 %float_6_28318548 %4642
       %4644 = OpExtInst %float %1 Fma %4641 %float_2097152 %4643
       %4645 = OpFMul %float %4610 %2592
       %4646 = OpExtInst %float %1 Sin %4644
       %4647 = OpFMul %float %4646 %4645
       %4648 = OpCompositeConstruct %v3float %548 %548 %4612
       %4649 = OpCompositeConstruct %v3float %548 %548 %4647
       %4650 = OpFAdd %v3float %4648 %4649
       %4651 = OpFSub %v3float %4572 %1686
       %4652 = OpExtInst %v3float %1 NMax %4651 %282
       %4653 = OpExtInst %v3float %1 NMin %4652 %130
       %4654 = OpCompositeExtract %float %4653 0
       %4655 = OpCompositeExtract %float %4653 1
       %4656 = OpCompositeConstruct %v2float %4654 %4655
       %4657 = OpFMul %v2float %1694 %4656
       %4658 = OpFMul %v2float %4656 %1695
       %4659 = OpCompositeExtract %float %4657 0
       %4660 = OpCompositeExtract %float %4658 0
       %4661 = OpCompositeExtract %float %4657 1
       %4662 = OpCompositeExtract %float %4658 1
       %4663 = OpFAdd %float %4659 %4661
       %4664 = OpFAdd %float %4660 %4662
       %4665 = OpFMul %float %4627 %4446
       %4666 = OpFDiv %float %float_2 %4665
       %4667 = OpFMul %float %4663 %4666
       %4668 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_3
       %4669 = OpLoad %float %4668
       %4670 = OpFMul %float %4666 %4669
       %4671 = OpFMul %float %4670 %3851
       %4672 = OpExtInst %float %1 Fma %4664 %4666 %4671
       %4673 = OpExtInst %float %1 Floor %4667
       %4674 = OpFNegate %float %4673
       %4675 = OpExtInst %float %1 Fma %4663 %4666 %4674
       %4676 = OpExtInst %float %1 Fma %4675 %float_2097152 %4672
       %4677 = OpExtInst %float %1 Floor %4676
       %4678 = OpFMul %float %4673 %float_n6_28318548
       %4679 = OpExtInst %float %1 Fma %4667 %float_6_28318548 %4678
       %4680 = OpFMul %float %4677 %float_n6_28318548
       %4681 = OpExtInst %float %1 Fma %4672 %float_6_28318548 %4680
       %4682 = OpExtInst %float %1 Fma %4679 %float_2097152 %4681
       %4683 = OpFMul %float %4645 %2592
       %4684 = OpExtInst %float %1 Sin %4682
       %4685 = OpFMul %float %4684 %4683
       %4686 = OpCompositeConstruct %v3float %548 %548 %4685
       %4687 = OpFAdd %v3float %4650 %4686
       %4688 = OpFSub %v3float %4572 %2559
       %4689 = OpExtInst %v3float %1 NMax %4688 %282
       %4690 = OpExtInst %v3float %1 NMin %4689 %130
       %4691 = OpCompositeExtract %float %4690 0
       %4692 = OpCompositeExtract %float %4690 1
       %4693 = OpCompositeConstruct %v2float %4691 %4692
       %4694 = OpFMul %v2float %1694 %4693
       %4695 = OpFMul %v2float %4693 %1695
       %4696 = OpCompositeExtract %float %4694 0
       %4697 = OpCompositeExtract %float %4695 0
       %4698 = OpCompositeExtract %float %4694 1
       %4699 = OpCompositeExtract %float %4695 1
       %4700 = OpFAdd %float %4696 %4698
       %4701 = OpFAdd %float %4697 %4699
       %4702 = OpFMul %float %4665 %4446
       %4703 = OpFDiv %float %float_2 %4702
       %4704 = OpFMul %float %4700 %4703
       %4705 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_0
       %4706 = OpLoad %float %4705
       %4707 = OpFMul %float %4703 %4706
       %4708 = OpFMul %float %4707 %3851
       %4709 = OpExtInst %float %1 Fma %4701 %4703 %4708
       %4710 = OpExtInst %float %1 Floor %4704
       %4711 = OpFNegate %float %4710
       %4712 = OpExtInst %float %1 Fma %4700 %4703 %4711
       %4713 = OpExtInst %float %1 Fma %4712 %float_2097152 %4709
       %4714 = OpExtInst %float %1 Floor %4713
       %4715 = OpFMul %float %4710 %float_n6_28318548
       %4716 = OpExtInst %float %1 Fma %4704 %float_6_28318548 %4715
       %4717 = OpFMul %float %4714 %float_n6_28318548
       %4718 = OpExtInst %float %1 Fma %4709 %float_6_28318548 %4717
       %4719 = OpExtInst %float %1 Fma %4716 %float_2097152 %4718
       %4720 = OpFMul %float %4683 %2592
       %4721 = OpExtInst %float %1 Sin %4719
       %4722 = OpFMul %float %4721 %4720
       %4723 = OpCompositeConstruct %v3float %548 %548 %4722
       %4724 = OpFAdd %v3float %4687 %4723
       %4725 = OpFAdd %v3float %4544 %4724
       %4726 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_1
       %4727 = OpLoad %float %4726
       %4728 = OpFSub %float %4727 %float_n1
       %4729 = OpExtInst %float %1 FAbs %4728
       %4730 = OpFOrdGreaterThan %bool %4729 %float_9_99999975en06
       %4731 = OpFOrdGreaterThanEqual %bool %4727 %float_n1
       %4732 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_2
       %4733 = OpLoad %float %4732
       %4734 = OpSelect %float %4731 %4727 %4733
       %4735 = OpSelect %float %4730 %4734 %4727
       %4736 = OpFSub %float %4735 %float_1
       %4737 = OpExtInst %float %1 FAbs %4736
       %4738 = OpFOrdGreaterThan %bool %4737 %float_9_99999975en06
       %4739 = OpFOrdGreaterThanEqual %bool %4735 %float_1
       %4740 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_3
       %4741 = OpLoad %float %4740
       %4742 = OpSelect %float %4739 %4741 %4727
       %4743 = OpSelect %float %4738 %4742 %4727
       %4744 = OpExtInst %float %1 FAbs %4743
       %4745 = OpFOrdGreaterThan %bool %4744 %float_9_99999975en06
       %4746 = OpFOrdGreaterThanEqual %bool %4743 %float_0
       %4747 = OpSelect %float %4746 %float_1 %float_n1
       %4748 = OpSelect %float %4745 %4747 %float_1
       %4749 = OpExtInst %float %1 NMax %4748 %float_n1
       %4750 = OpExtInst %float %1 NMin %4749 %float_1
       %4751 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_70 %int_0
       %4752 = OpLoad %float %4751
       %4753 = OpCompositeConstruct %v3float %4750 %4752 %float_0
       %4754 = OpFAdd %v3float %4753 %1686
       %4755 = OpExtInst %v3float %1 NMax %4754 %282
       %4756 = OpExtInst %v3float %1 NMin %4755 %130
       %4757 = OpCompositeExtract %float %4756 0
       %4758 = OpCompositeExtract %float %4756 1
       %4759 = OpCompositeConstruct %v2float %4757 %4758
       %4760 = OpFMul %v2float %1694 %4759
       %4761 = OpFMul %v2float %4759 %1695
       %4762 = OpCompositeExtract %float %4760 0
       %4763 = OpCompositeExtract %float %4761 0
       %4764 = OpCompositeExtract %float %4760 1
       %4765 = OpCompositeExtract %float %4761 1
       %4766 = OpFAdd %float %4762 %4764
       %4767 = OpFAdd %float %4763 %4765
       %4768 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_71 %int_1
       %4769 = OpLoad %float %4768
       %4770 = OpFMul %float %4769 %4589
       %4771 = OpFDiv %float %float_2 %4770
       %4772 = OpFMul %float %4766 %4771
       %4773 = OpFMul %float %4771 %4596
       %4774 = OpFMul %float %4773 %3851
       %4775 = OpExtInst %float %1 Fma %4767 %4771 %4774
       %4776 = OpExtInst %float %1 Floor %4772
       %4777 = OpFNegate %float %4776
       %4778 = OpExtInst %float %1 Fma %4766 %4771 %4777
       %4779 = OpExtInst %float %1 Fma %4778 %float_2097152 %4775
       %4780 = OpExtInst %float %1 Floor %4779
       %4781 = OpFMul %float %4776 %float_n6_28318548
       %4782 = OpExtInst %float %1 Fma %4772 %float_6_28318548 %4781
       %4783 = OpFMul %float %4780 %float_n6_28318548
       %4784 = OpExtInst %float %1 Fma %4775 %float_6_28318548 %4783
       %4785 = OpExtInst %float %1 Fma %4782 %float_2097152 %4784
       %4786 = OpExtInst %float %1 Sin %4785
       %4787 = OpFMul %float %4786 %4610
       %4788 = OpFAdd %v3float %4753 %2559
       %4789 = OpExtInst %v3float %1 NMax %4788 %282
       %4790 = OpExtInst %v3float %1 NMin %4789 %130
       %4791 = OpCompositeExtract %float %4790 0
       %4792 = OpCompositeExtract %float %4790 1
       %4793 = OpCompositeConstruct %v2float %4791 %4792
       %4794 = OpFMul %v2float %1694 %4793
       %4795 = OpFMul %v2float %4793 %1695
       %4796 = OpCompositeExtract %float %4794 0
       %4797 = OpCompositeExtract %float %4795 0
       %4798 = OpCompositeExtract %float %4794 1
       %4799 = OpCompositeExtract %float %4795 1
       %4800 = OpFAdd %float %4796 %4798
       %4801 = OpFAdd %float %4797 %4799
       %4802 = OpFMul %float %4770 %4446
       %4803 = OpFDiv %float %float_2 %4802
       %4804 = OpFMul %float %4800 %4803
       %4805 = OpFMul %float %4803 %4631
       %4806 = OpFMul %float %4805 %3851
       %4807 = OpExtInst %float %1 Fma %4801 %4803 %4806
       %4808 = OpExtInst %float %1 Floor %4804
       %4809 = OpFNegate %float %4808
       %4810 = OpExtInst %float %1 Fma %4800 %4803 %4809
       %4811 = OpExtInst %float %1 Fma %4810 %float_2097152 %4807
       %4812 = OpExtInst %float %1 Floor %4811
       %4813 = OpFMul %float %4808 %float_n6_28318548
       %4814 = OpExtInst %float %1 Fma %4804 %float_6_28318548 %4813
       %4815 = OpFMul %float %4812 %float_n6_28318548
       %4816 = OpExtInst %float %1 Fma %4807 %float_6_28318548 %4815
       %4817 = OpExtInst %float %1 Fma %4814 %float_2097152 %4816
       %4818 = OpExtInst %float %1 Sin %4817
       %4819 = OpFMul %float %4818 %4645
       %4820 = OpCompositeConstruct %v3float %548 %548 %4787
       %4821 = OpCompositeConstruct %v3float %548 %548 %4819
       %4822 = OpFAdd %v3float %4820 %4821
       %4823 = OpFSub %v3float %4753 %1686
       %4824 = OpExtInst %v3float %1 NMax %4823 %282
       %4825 = OpExtInst %v3float %1 NMin %4824 %130
       %4826 = OpCompositeExtract %float %4825 0
       %4827 = OpCompositeExtract %float %4825 1
       %4828 = OpCompositeConstruct %v2float %4826 %4827
       %4829 = OpFMul %v2float %1694 %4828
       %4830 = OpFMul %v2float %4828 %1695
       %4831 = OpCompositeExtract %float %4829 0
       %4832 = OpCompositeExtract %float %4830 0
       %4833 = OpCompositeExtract %float %4829 1
       %4834 = OpCompositeExtract %float %4830 1
       %4835 = OpFAdd %float %4831 %4833
       %4836 = OpFAdd %float %4832 %4834
       %4837 = OpFMul %float %4802 %4446
       %4838 = OpFDiv %float %float_2 %4837
       %4839 = OpFMul %float %4835 %4838
       %4840 = OpFMul %float %4838 %4669
       %4841 = OpFMul %float %4840 %3851
       %4842 = OpExtInst %float %1 Fma %4836 %4838 %4841
       %4843 = OpExtInst %float %1 Floor %4839
       %4844 = OpFNegate %float %4843
       %4845 = OpExtInst %float %1 Fma %4835 %4838 %4844
       %4846 = OpExtInst %float %1 Fma %4845 %float_2097152 %4842
       %4847 = OpExtInst %float %1 Floor %4846
       %4848 = OpFMul %float %4843 %float_n6_28318548
       %4849 = OpExtInst %float %1 Fma %4839 %float_6_28318548 %4848
       %4850 = OpFMul %float %4847 %float_n6_28318548
       %4851 = OpExtInst %float %1 Fma %4842 %float_6_28318548 %4850
       %4852 = OpExtInst %float %1 Fma %4849 %float_2097152 %4851
       %4853 = OpExtInst %float %1 Sin %4852
       %4854 = OpFMul %float %4853 %4683
       %4855 = OpCompositeConstruct %v3float %548 %548 %4854
       %4856 = OpFAdd %v3float %4822 %4855
       %4857 = OpFSub %v3float %4753 %2559
       %4858 = OpExtInst %v3float %1 NMax %4857 %282
       %4859 = OpExtInst %v3float %1 NMin %4858 %130
       %4860 = OpCompositeExtract %float %4859 0
       %4861 = OpCompositeExtract %float %4859 1
       %4862 = OpCompositeConstruct %v2float %4860 %4861
       %4863 = OpFMul %v2float %1694 %4862
       %4864 = OpFMul %v2float %4862 %1695
       %4865 = OpCompositeExtract %float %4863 0
       %4866 = OpCompositeExtract %float %4864 0
       %4867 = OpCompositeExtract %float %4863 1
       %4868 = OpCompositeExtract %float %4864 1
       %4869 = OpFAdd %float %4865 %4867
       %4870 = OpFAdd %float %4866 %4868
       %4871 = OpFMul %float %4837 %4446
       %4872 = OpFDiv %float %float_2 %4871
       %4873 = OpFMul %float %4869 %4872
       %4874 = OpFMul %float %4872 %4706
       %4875 = OpFMul %float %4874 %3851
       %4876 = OpExtInst %float %1 Fma %4870 %4872 %4875
       %4877 = OpExtInst %float %1 Floor %4873
       %4878 = OpFNegate %float %4877
       %4879 = OpExtInst %float %1 Fma %4869 %4872 %4878
       %4880 = OpExtInst %float %1 Fma %4879 %float_2097152 %4876
       %4881 = OpExtInst %float %1 Floor %4880
       %4882 = OpFMul %float %4877 %float_n6_28318548
       %4883 = OpExtInst %float %1 Fma %4873 %float_6_28318548 %4882
       %4884 = OpFMul %float %4881 %float_n6_28318548
       %4885 = OpExtInst %float %1 Fma %4876 %float_6_28318548 %4884
       %4886 = OpExtInst %float %1 Fma %4883 %float_2097152 %4885
       %4887 = OpExtInst %float %1 Sin %4886
       %4888 = OpFMul %float %4887 %4720
       %4889 = OpCompositeConstruct %v3float %548 %548 %4888
       %4890 = OpFAdd %v3float %4856 %4889
       %4891 = OpFAdd %v3float %4725 %4890
       %4892 = OpFMul %float %3564 %float_0_800000012
       %4893 = OpFMul %float %3566 %4892
       %4894 = OpFDiv %float %float_2 %4893
       %4895 = OpFMul %float %3560 %4894
       %4896 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_71 %int_2
       %4897 = OpLoad %float %4896
       %4898 = OpFMul %float %4894 %4897
       %4899 = OpFMul %float %4898 %3851
       %4900 = OpExtInst %float %1 Fma %3561 %4894 %4899
       %4901 = OpExtInst %float %1 Floor %4895
       %4902 = OpFNegate %float %4901
       %4903 = OpExtInst %float %1 Fma %3560 %4894 %4902
       %4904 = OpExtInst %float %1 Fma %4903 %float_2097152 %4900
       %4905 = OpExtInst %float %1 Floor %4904
       %4906 = OpFMul %float %4901 %float_n6_28318548
       %4907 = OpExtInst %float %1 Fma %4895 %float_6_28318548 %4906
       %4908 = OpFMul %float %4905 %float_n6_28318548
       %4909 = OpExtInst %float %1 Fma %4900 %float_6_28318548 %4908
       %4910 = OpExtInst %float %1 Fma %4907 %float_2097152 %4909
       %4911 = OpFMul %float %4428 %float_0_800000012
       %4912 = OpExtInst %float %1 Sin %4910
       %4913 = OpFMul %float %4912 %4911
       %4914 = OpFMul %float %4893 %4446
       %4915 = OpFDiv %float %float_2 %4914
       %4916 = OpFMul %float %4443 %4915
       %4917 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_71 %int_3
       %4918 = OpLoad %float %4917
       %4919 = OpFMul %float %4915 %4918
       %4920 = OpFMul %float %4919 %3851
       %4921 = OpExtInst %float %1 Fma %4444 %4915 %4920
       %4922 = OpExtInst %float %1 Floor %4916
       %4923 = OpFNegate %float %4922
       %4924 = OpExtInst %float %1 Fma %4443 %4915 %4923
       %4925 = OpExtInst %float %1 Fma %4924 %float_2097152 %4921
       %4926 = OpExtInst %float %1 Floor %4925
       %4927 = OpFMul %float %4922 %float_n6_28318548
       %4928 = OpExtInst %float %1 Fma %4916 %float_6_28318548 %4927
       %4929 = OpFMul %float %4926 %float_n6_28318548
       %4930 = OpExtInst %float %1 Fma %4921 %float_6_28318548 %4929
       %4931 = OpExtInst %float %1 Fma %4928 %float_2097152 %4930
       %4932 = OpFMul %float %4911 %2592
       %4933 = OpExtInst %float %1 Sin %4931
       %4934 = OpFMul %float %4933 %4932
       %4935 = OpCompositeConstruct %v3float %548 %548 %4913
       %4936 = OpCompositeConstruct %v3float %548 %548 %4934
       %4937 = OpFAdd %v3float %4935 %4936
       %4938 = OpFMul %float %4914 %4446
       %4939 = OpFDiv %float %float_2 %4938
       %4940 = OpFMul %float %4483 %4939
       %4941 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_0
       %4942 = OpLoad %float %4941
       %4943 = OpFMul %float %4939 %4942
       %4944 = OpFMul %float %4943 %3851
       %4945 = OpExtInst %float %1 Fma %4484 %4939 %4944
       %4946 = OpExtInst %float %1 Floor %4940
       %4947 = OpFNegate %float %4946
       %4948 = OpExtInst %float %1 Fma %4483 %4939 %4947
       %4949 = OpExtInst %float %1 Fma %4948 %float_2097152 %4945
       %4950 = OpExtInst %float %1 Floor %4949
       %4951 = OpFMul %float %4946 %float_n6_28318548
       %4952 = OpExtInst %float %1 Fma %4940 %float_6_28318548 %4951
       %4953 = OpFMul %float %4950 %float_n6_28318548
       %4954 = OpExtInst %float %1 Fma %4945 %float_6_28318548 %4953
       %4955 = OpExtInst %float %1 Fma %4952 %float_2097152 %4954
       %4956 = OpFMul %float %4932 %2592
       %4957 = OpExtInst %float %1 Sin %4955
       %4958 = OpFMul %float %4957 %4956
       %4959 = OpCompositeConstruct %v3float %548 %548 %4958
       %4960 = OpFAdd %v3float %4937 %4959
       %4961 = OpFMul %float %4938 %4446
       %4962 = OpFDiv %float %float_2 %4961
       %4963 = OpFMul %float %4520 %4962
       %4964 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_1
       %4965 = OpLoad %float %4964
       %4966 = OpFMul %float %4962 %4965
       %4967 = OpFMul %float %4966 %3851
       %4968 = OpExtInst %float %1 Fma %4521 %4962 %4967
       %4969 = OpExtInst %float %1 Floor %4963
       %4970 = OpFNegate %float %4969
       %4971 = OpExtInst %float %1 Fma %4520 %4962 %4970
       %4972 = OpExtInst %float %1 Fma %4971 %float_2097152 %4968
       %4973 = OpExtInst %float %1 Floor %4972
       %4974 = OpFMul %float %4969 %float_n6_28318548
       %4975 = OpExtInst %float %1 Fma %4963 %float_6_28318548 %4974
       %4976 = OpFMul %float %4973 %float_n6_28318548
       %4977 = OpExtInst %float %1 Fma %4968 %float_6_28318548 %4976
       %4978 = OpExtInst %float %1 Fma %4975 %float_2097152 %4977
       %4979 = OpFMul %float %4956 %2592
       %4980 = OpExtInst %float %1 Sin %4978
       %4981 = OpFMul %float %4980 %4979
       %4982 = OpCompositeConstruct %v3float %548 %548 %4981
       %4983 = OpFAdd %v3float %4960 %4982
       %4984 = OpFMul %float %4892 %4588
       %4985 = OpFMul %float %4591 %4984
       %4986 = OpFDiv %float %float_2 %4985
       %4987 = OpFMul %float %4585 %4986
       %4988 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_2
       %4989 = OpLoad %float %4988
       %4990 = OpFMul %float %4986 %4989
       %4991 = OpFMul %float %4990 %3851
       %4992 = OpExtInst %float %1 Fma %4586 %4986 %4991
       %4993 = OpExtInst %float %1 Floor %4987
       %4994 = OpFNegate %float %4993
       %4995 = OpExtInst %float %1 Fma %4585 %4986 %4994
       %4996 = OpExtInst %float %1 Fma %4995 %float_2097152 %4992
       %4997 = OpExtInst %float %1 Floor %4996
       %4998 = OpFMul %float %4993 %float_n6_28318548
       %4999 = OpExtInst %float %1 Fma %4987 %float_6_28318548 %4998
       %5000 = OpFMul %float %4997 %float_n6_28318548
       %5001 = OpExtInst %float %1 Fma %4992 %float_6_28318548 %5000
       %5002 = OpExtInst %float %1 Fma %4999 %float_2097152 %5001
       %5003 = OpFMul %float %4911 %2731
       %5004 = OpExtInst %float %1 Sin %5002
       %5005 = OpFMul %float %5004 %5003
       %5006 = OpFMul %float %4985 %4446
       %5007 = OpFDiv %float %float_2 %5006
       %5008 = OpFMul %float %4625 %5007
       %5009 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_3
       %5010 = OpLoad %float %5009
       %5011 = OpFMul %float %5007 %5010
       %5012 = OpFMul %float %5011 %3851
       %5013 = OpExtInst %float %1 Fma %4626 %5007 %5012
       %5014 = OpExtInst %float %1 Floor %5008
       %5015 = OpFNegate %float %5014
       %5016 = OpExtInst %float %1 Fma %4625 %5007 %5015
       %5017 = OpExtInst %float %1 Fma %5016 %float_2097152 %5013
       %5018 = OpExtInst %float %1 Floor %5017
       %5019 = OpFMul %float %5014 %float_n6_28318548
       %5020 = OpExtInst %float %1 Fma %5008 %float_6_28318548 %5019
       %5021 = OpFMul %float %5018 %float_n6_28318548
       %5022 = OpExtInst %float %1 Fma %5013 %float_6_28318548 %5021
       %5023 = OpExtInst %float %1 Fma %5020 %float_2097152 %5022
       %5024 = OpFMul %float %5003 %2592
       %5025 = OpExtInst %float %1 Sin %5023
       %5026 = OpFMul %float %5025 %5024
       %5027 = OpCompositeConstruct %v3float %548 %548 %5005
       %5028 = OpCompositeConstruct %v3float %548 %548 %5026
       %5029 = OpFAdd %v3float %5027 %5028
       %5030 = OpFMul %float %5006 %4446
       %5031 = OpFDiv %float %float_2 %5030
       %5032 = OpFMul %float %4663 %5031
       %5033 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_0
       %5034 = OpLoad %float %5033
       %5035 = OpFMul %float %5031 %5034
       %5036 = OpFMul %float %5035 %3851
       %5037 = OpExtInst %float %1 Fma %4664 %5031 %5036
       %5038 = OpExtInst %float %1 Floor %5032
       %5039 = OpFNegate %float %5038
       %5040 = OpExtInst %float %1 Fma %4663 %5031 %5039
       %5041 = OpExtInst %float %1 Fma %5040 %float_2097152 %5037
       %5042 = OpExtInst %float %1 Floor %5041
       %5043 = OpFMul %float %5038 %float_n6_28318548
       %5044 = OpExtInst %float %1 Fma %5032 %float_6_28318548 %5043
       %5045 = OpFMul %float %5042 %float_n6_28318548
       %5046 = OpExtInst %float %1 Fma %5037 %float_6_28318548 %5045
       %5047 = OpExtInst %float %1 Fma %5044 %float_2097152 %5046
       %5048 = OpFMul %float %5024 %2592
       %5049 = OpExtInst %float %1 Sin %5047
       %5050 = OpFMul %float %5049 %5048
       %5051 = OpCompositeConstruct %v3float %548 %548 %5050
       %5052 = OpFAdd %v3float %5029 %5051
       %5053 = OpFMul %float %5030 %4446
       %5054 = OpFDiv %float %float_2 %5053
       %5055 = OpFMul %float %4700 %5054
       %5056 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_1
       %5057 = OpLoad %float %5056
       %5058 = OpFMul %float %5054 %5057
       %5059 = OpFMul %float %5058 %3851
       %5060 = OpExtInst %float %1 Fma %4701 %5054 %5059
       %5061 = OpExtInst %float %1 Floor %5055
       %5062 = OpFNegate %float %5061
       %5063 = OpExtInst %float %1 Fma %4700 %5054 %5062
       %5064 = OpExtInst %float %1 Fma %5063 %float_2097152 %5060
       %5065 = OpExtInst %float %1 Floor %5064
       %5066 = OpFMul %float %5061 %float_n6_28318548
       %5067 = OpExtInst %float %1 Fma %5055 %float_6_28318548 %5066
       %5068 = OpFMul %float %5065 %float_n6_28318548
       %5069 = OpExtInst %float %1 Fma %5060 %float_6_28318548 %5068
       %5070 = OpExtInst %float %1 Fma %5067 %float_2097152 %5069
       %5071 = OpFMul %float %5048 %2592
       %5072 = OpExtInst %float %1 Sin %5070
       %5073 = OpFMul %float %5072 %5071
       %5074 = OpCompositeConstruct %v3float %548 %548 %5073
       %5075 = OpFAdd %v3float %5052 %5074
       %5076 = OpFAdd %v3float %4983 %5075
       %5077 = OpFMul %float %4769 %4984
       %5078 = OpFDiv %float %float_2 %5077
       %5079 = OpFMul %float %4766 %5078
       %5080 = OpFMul %float %5078 %4989
       %5081 = OpFMul %float %5080 %3851
       %5082 = OpExtInst %float %1 Fma %4767 %5078 %5081
       %5083 = OpExtInst %float %1 Floor %5079
       %5084 = OpFNegate %float %5083
       %5085 = OpExtInst %float %1 Fma %4766 %5078 %5084
       %5086 = OpExtInst %float %1 Fma %5085 %float_2097152 %5082
       %5087 = OpExtInst %float %1 Floor %5086
       %5088 = OpFMul %float %5083 %float_n6_28318548
       %5089 = OpExtInst %float %1 Fma %5079 %float_6_28318548 %5088
       %5090 = OpFMul %float %5087 %float_n6_28318548
       %5091 = OpExtInst %float %1 Fma %5082 %float_6_28318548 %5090
       %5092 = OpExtInst %float %1 Fma %5089 %float_2097152 %5091
       %5093 = OpExtInst %float %1 Sin %5092
       %5094 = OpFMul %float %5093 %5003
       %5095 = OpFMul %float %5077 %4446
       %5096 = OpFDiv %float %float_2 %5095
       %5097 = OpFMul %float %4800 %5096
       %5098 = OpFMul %float %5096 %5010
       %5099 = OpFMul %float %5098 %3851
       %5100 = OpExtInst %float %1 Fma %4801 %5096 %5099
       %5101 = OpExtInst %float %1 Floor %5097
       %5102 = OpFNegate %float %5101
       %5103 = OpExtInst %float %1 Fma %4800 %5096 %5102
       %5104 = OpExtInst %float %1 Fma %5103 %float_2097152 %5100
       %5105 = OpExtInst %float %1 Floor %5104
       %5106 = OpFMul %float %5101 %float_n6_28318548
       %5107 = OpExtInst %float %1 Fma %5097 %float_6_28318548 %5106
       %5108 = OpFMul %float %5105 %float_n6_28318548
       %5109 = OpExtInst %float %1 Fma %5100 %float_6_28318548 %5108
       %5110 = OpExtInst %float %1 Fma %5107 %float_2097152 %5109
       %5111 = OpExtInst %float %1 Sin %5110
       %5112 = OpFMul %float %5111 %5024
       %5113 = OpCompositeConstruct %v3float %548 %548 %5094
       %5114 = OpCompositeConstruct %v3float %548 %548 %5112
       %5115 = OpFAdd %v3float %5113 %5114
       %5116 = OpFMul %float %5095 %4446
       %5117 = OpFDiv %float %float_2 %5116
       %5118 = OpFMul %float %4835 %5117
       %5119 = OpFMul %float %5117 %5034
       %5120 = OpFMul %float %5119 %3851
       %5121 = OpExtInst %float %1 Fma %4836 %5117 %5120
       %5122 = OpExtInst %float %1 Floor %5118
       %5123 = OpFNegate %float %5122
       %5124 = OpExtInst %float %1 Fma %4835 %5117 %5123
       %5125 = OpExtInst %float %1 Fma %5124 %float_2097152 %5121
       %5126 = OpExtInst %float %1 Floor %5125
       %5127 = OpFMul %float %5122 %float_n6_28318548
       %5128 = OpExtInst %float %1 Fma %5118 %float_6_28318548 %5127
       %5129 = OpFMul %float %5126 %float_n6_28318548
       %5130 = OpExtInst %float %1 Fma %5121 %float_6_28318548 %5129
       %5131 = OpExtInst %float %1 Fma %5128 %float_2097152 %5130
       %5132 = OpExtInst %float %1 Sin %5131
       %5133 = OpFMul %float %5132 %5048
       %5134 = OpCompositeConstruct %v3float %548 %548 %5133
       %5135 = OpFAdd %v3float %5115 %5134
       %5136 = OpFMul %float %5116 %4446
       %5137 = OpFDiv %float %float_2 %5136
       %5138 = OpFMul %float %4869 %5137
       %5139 = OpFMul %float %5137 %5057
       %5140 = OpFMul %float %5139 %3851
       %5141 = OpExtInst %float %1 Fma %4870 %5137 %5140
       %5142 = OpExtInst %float %1 Floor %5138
       %5143 = OpFNegate %float %5142
       %5144 = OpExtInst %float %1 Fma %4869 %5137 %5143
       %5145 = OpExtInst %float %1 Fma %5144 %float_2097152 %5141
       %5146 = OpExtInst %float %1 Floor %5145
       %5147 = OpFMul %float %5142 %float_n6_28318548
       %5148 = OpExtInst %float %1 Fma %5138 %float_6_28318548 %5147
       %5149 = OpFMul %float %5146 %float_n6_28318548
       %5150 = OpExtInst %float %1 Fma %5141 %float_6_28318548 %5149
       %5151 = OpExtInst %float %1 Fma %5148 %float_2097152 %5150
       %5152 = OpExtInst %float %1 Sin %5151
       %5153 = OpFMul %float %5152 %5071
       %5154 = OpCompositeConstruct %v3float %548 %548 %5153
       %5155 = OpFAdd %v3float %5135 %5154
       %5156 = OpFAdd %v3float %5076 %5155
       %5157 = OpFMul %float %3564 %float_4
       %5158 = OpFMul %float %3566 %5157
       %5159 = OpFDiv %float %float_2 %5158
       %5160 = OpFMul %float %3560 %5159
       %5161 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_2
       %5162 = OpLoad %float %5161
       %5163 = OpFMul %float %5159 %5162
       %5164 = OpFMul %float %5163 %3851
       %5165 = OpExtInst %float %1 Fma %3561 %5159 %5164
       %5166 = OpExtInst %float %1 Floor %5160
       %5167 = OpFNegate %float %5166
       %5168 = OpExtInst %float %1 Fma %3560 %5159 %5167
       %5169 = OpExtInst %float %1 Fma %5168 %float_2097152 %5165
       %5170 = OpExtInst %float %1 Floor %5169
       %5171 = OpFMul %float %5166 %float_n6_28318548
       %5172 = OpExtInst %float %1 Fma %5160 %float_6_28318548 %5171
       %5173 = OpFMul %float %5170 %float_n6_28318548
       %5174 = OpExtInst %float %1 Fma %5165 %float_6_28318548 %5173
       %5175 = OpExtInst %float %1 Fma %5172 %float_2097152 %5174
       %5176 = OpExtInst %float %1 Sin %5175
       %5177 = OpFMul %float %5176 %4911
       %5178 = OpFMul %float %5158 %4446
       %5179 = OpFDiv %float %float_2 %5178
       %5180 = OpFMul %float %4443 %5179
       %5181 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_3
       %5182 = OpLoad %float %5181
       %5183 = OpFMul %float %5179 %5182
       %5184 = OpFMul %float %5183 %3851
       %5185 = OpExtInst %float %1 Fma %4444 %5179 %5184
       %5186 = OpExtInst %float %1 Floor %5180
       %5187 = OpFNegate %float %5186
       %5188 = OpExtInst %float %1 Fma %4443 %5179 %5187
       %5189 = OpExtInst %float %1 Fma %5188 %float_2097152 %5185
       %5190 = OpExtInst %float %1 Floor %5189
       %5191 = OpFMul %float %5186 %float_n6_28318548
       %5192 = OpExtInst %float %1 Fma %5180 %float_6_28318548 %5191
       %5193 = OpFMul %float %5190 %float_n6_28318548
       %5194 = OpExtInst %float %1 Fma %5185 %float_6_28318548 %5193
       %5195 = OpExtInst %float %1 Fma %5192 %float_2097152 %5194
       %5196 = OpExtInst %float %1 Sin %5195
       %5197 = OpFMul %float %5196 %4932
       %5198 = OpCompositeConstruct %v3float %548 %548 %5177
       %5199 = OpCompositeConstruct %v3float %548 %548 %5197
       %5200 = OpFAdd %v3float %5198 %5199
       %5201 = OpFMul %float %5178 %4446
       %5202 = OpFDiv %float %float_2 %5201
       %5203 = OpFMul %float %4483 %5202
       %5204 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_74 %int_0
       %5205 = OpLoad %float %5204
       %5206 = OpFMul %float %5202 %5205
       %5207 = OpFMul %float %5206 %3851
       %5208 = OpExtInst %float %1 Fma %4484 %5202 %5207
       %5209 = OpExtInst %float %1 Floor %5203
       %5210 = OpFNegate %float %5209
       %5211 = OpExtInst %float %1 Fma %4483 %5202 %5210
       %5212 = OpExtInst %float %1 Fma %5211 %float_2097152 %5208
       %5213 = OpExtInst %float %1 Floor %5212
       %5214 = OpFMul %float %5209 %float_n6_28318548
       %5215 = OpExtInst %float %1 Fma %5203 %float_6_28318548 %5214
       %5216 = OpFMul %float %5213 %float_n6_28318548
       %5217 = OpExtInst %float %1 Fma %5208 %float_6_28318548 %5216
       %5218 = OpExtInst %float %1 Fma %5215 %float_2097152 %5217
       %5219 = OpExtInst %float %1 Sin %5218
       %5220 = OpFMul %float %5219 %4956
       %5221 = OpCompositeConstruct %v3float %548 %548 %5220
       %5222 = OpFAdd %v3float %5200 %5221
       %5223 = OpFMul %float %5201 %4446
       %5224 = OpFDiv %float %float_2 %5223
       %5225 = OpFMul %float %4520 %5224
       %5226 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_74 %int_1
       %5227 = OpLoad %float %5226
       %5228 = OpFMul %float %5224 %5227
       %5229 = OpFMul %float %5228 %3851
       %5230 = OpExtInst %float %1 Fma %4521 %5224 %5229
       %5231 = OpExtInst %float %1 Floor %5225
       %5232 = OpFNegate %float %5231
       %5233 = OpExtInst %float %1 Fma %4520 %5224 %5232
       %5234 = OpExtInst %float %1 Fma %5233 %float_2097152 %5230
       %5235 = OpExtInst %float %1 Floor %5234
       %5236 = OpFMul %float %5231 %float_n6_28318548
       %5237 = OpExtInst %float %1 Fma %5225 %float_6_28318548 %5236
       %5238 = OpFMul %float %5235 %float_n6_28318548
       %5239 = OpExtInst %float %1 Fma %5230 %float_6_28318548 %5238
       %5240 = OpExtInst %float %1 Fma %5237 %float_2097152 %5239
       %5241 = OpExtInst %float %1 Sin %5240
       %5242 = OpFMul %float %5241 %4979
       %5243 = OpCompositeConstruct %v3float %548 %548 %5242
       %5244 = OpFAdd %v3float %5222 %5243
       %5245 = OpFMul %float %5157 %4588
       %5246 = OpFMul %float %4591 %5245
       %5247 = OpFDiv %float %float_2 %5246
       %5248 = OpFMul %float %4585 %5247
       %5249 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_74 %int_2
       %5250 = OpLoad %float %5249
       %5251 = OpFMul %float %5247 %5250
       %5252 = OpFMul %float %5251 %3851
       %5253 = OpExtInst %float %1 Fma %4586 %5247 %5252
       %5254 = OpExtInst %float %1 Floor %5248
       %5255 = OpFNegate %float %5254
       %5256 = OpExtInst %float %1 Fma %4585 %5247 %5255
       %5257 = OpExtInst %float %1 Fma %5256 %float_2097152 %5253
       %5258 = OpExtInst %float %1 Floor %5257
       %5259 = OpFMul %float %5254 %float_n6_28318548
       %5260 = OpExtInst %float %1 Fma %5248 %float_6_28318548 %5259
       %5261 = OpFMul %float %5258 %float_n6_28318548
       %5262 = OpExtInst %float %1 Fma %5253 %float_6_28318548 %5261
       %5263 = OpExtInst %float %1 Fma %5260 %float_2097152 %5262
       %5264 = OpExtInst %float %1 Sin %5263
       %5265 = OpFMul %float %5264 %5003
       %5266 = OpFMul %float %5246 %4446
       %5267 = OpFDiv %float %float_2 %5266
       %5268 = OpFMul %float %4625 %5267
       %5269 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_74 %int_3
       %5270 = OpLoad %float %5269
       %5271 = OpFMul %float %5267 %5270
       %5272 = OpFMul %float %5271 %3851
       %5273 = OpExtInst %float %1 Fma %4626 %5267 %5272
       %5274 = OpExtInst %float %1 Floor %5268
       %5275 = OpFNegate %float %5274
       %5276 = OpExtInst %float %1 Fma %4625 %5267 %5275
       %5277 = OpExtInst %float %1 Fma %5276 %float_2097152 %5273
       %5278 = OpExtInst %float %1 Floor %5277
       %5279 = OpFMul %float %5274 %float_n6_28318548
       %5280 = OpExtInst %float %1 Fma %5268 %float_6_28318548 %5279
       %5281 = OpFMul %float %5278 %float_n6_28318548
       %5282 = OpExtInst %float %1 Fma %5273 %float_6_28318548 %5281
       %5283 = OpExtInst %float %1 Fma %5280 %float_2097152 %5282
       %5284 = OpExtInst %float %1 Sin %5283
       %5285 = OpFMul %float %5284 %5024
       %5286 = OpCompositeConstruct %v3float %548 %548 %5265
       %5287 = OpCompositeConstruct %v3float %548 %548 %5285
       %5288 = OpFAdd %v3float %5286 %5287
       %5289 = OpFMul %float %5266 %4446
       %5290 = OpFDiv %float %float_2 %5289
       %5291 = OpFMul %float %4663 %5290
       %5292 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_0
       %5293 = OpLoad %float %5292
       %5294 = OpFMul %float %5290 %5293
       %5295 = OpFMul %float %5294 %3851
       %5296 = OpExtInst %float %1 Fma %4664 %5290 %5295
       %5297 = OpExtInst %float %1 Floor %5291
       %5298 = OpFNegate %float %5297
       %5299 = OpExtInst %float %1 Fma %4663 %5290 %5298
       %5300 = OpExtInst %float %1 Fma %5299 %float_2097152 %5296
       %5301 = OpExtInst %float %1 Floor %5300
       %5302 = OpFMul %float %5297 %float_n6_28318548
       %5303 = OpExtInst %float %1 Fma %5291 %float_6_28318548 %5302
       %5304 = OpFMul %float %5301 %float_n6_28318548
       %5305 = OpExtInst %float %1 Fma %5296 %float_6_28318548 %5304
       %5306 = OpExtInst %float %1 Fma %5303 %float_2097152 %5305
       %5307 = OpExtInst %float %1 Sin %5306
       %5308 = OpFMul %float %5307 %5048
       %5309 = OpCompositeConstruct %v3float %548 %548 %5308
       %5310 = OpFAdd %v3float %5288 %5309
       %5311 = OpFMul %float %5289 %4446
       %5312 = OpFDiv %float %float_2 %5311
       %5313 = OpFMul %float %4700 %5312
       %5314 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_1
       %5315 = OpLoad %float %5314
       %5316 = OpFMul %float %5312 %5315
       %5317 = OpFMul %float %5316 %3851
       %5318 = OpExtInst %float %1 Fma %4701 %5312 %5317
       %5319 = OpExtInst %float %1 Floor %5313
       %5320 = OpFNegate %float %5319
       %5321 = OpExtInst %float %1 Fma %4700 %5312 %5320
       %5322 = OpExtInst %float %1 Fma %5321 %float_2097152 %5318
       %5323 = OpExtInst %float %1 Floor %5322
       %5324 = OpFMul %float %5319 %float_n6_28318548
       %5325 = OpExtInst %float %1 Fma %5313 %float_6_28318548 %5324
       %5326 = OpFMul %float %5323 %float_n6_28318548
       %5327 = OpExtInst %float %1 Fma %5318 %float_6_28318548 %5326
       %5328 = OpExtInst %float %1 Fma %5325 %float_2097152 %5327
       %5329 = OpExtInst %float %1 Sin %5328
       %5330 = OpFMul %float %5329 %5071
       %5331 = OpCompositeConstruct %v3float %548 %548 %5330
       %5332 = OpFAdd %v3float %5310 %5331
       %5333 = OpFAdd %v3float %5244 %5332
       %5334 = OpFMul %float %4769 %5245
       %5335 = OpFDiv %float %float_2 %5334
       %5336 = OpFMul %float %4766 %5335
       %5337 = OpFMul %float %5335 %5250
       %5338 = OpFMul %float %5337 %3851
       %5339 = OpExtInst %float %1 Fma %4767 %5335 %5338
       %5340 = OpExtInst %float %1 Floor %5336
       %5341 = OpFNegate %float %5340
       %5342 = OpExtInst %float %1 Fma %4766 %5335 %5341
       %5343 = OpExtInst %float %1 Fma %5342 %float_2097152 %5339
       %5344 = OpExtInst %float %1 Floor %5343
       %5345 = OpFMul %float %5340 %float_n6_28318548
       %5346 = OpExtInst %float %1 Fma %5336 %float_6_28318548 %5345
       %5347 = OpFMul %float %5344 %float_n6_28318548
       %5348 = OpExtInst %float %1 Fma %5339 %float_6_28318548 %5347
       %5349 = OpExtInst %float %1 Fma %5346 %float_2097152 %5348
       %5350 = OpExtInst %float %1 Sin %5349
       %5351 = OpFMul %float %5350 %5003
       %5352 = OpFMul %float %5334 %4446
       %5353 = OpFDiv %float %float_2 %5352
       %5354 = OpFMul %float %4800 %5353
       %5355 = OpFMul %float %5353 %5270
       %5356 = OpFMul %float %5355 %3851
       %5357 = OpExtInst %float %1 Fma %4801 %5353 %5356
       %5358 = OpExtInst %float %1 Floor %5354
       %5359 = OpFNegate %float %5358
       %5360 = OpExtInst %float %1 Fma %4800 %5353 %5359
       %5361 = OpExtInst %float %1 Fma %5360 %float_2097152 %5357
       %5362 = OpExtInst %float %1 Floor %5361
       %5363 = OpFMul %float %5358 %float_n6_28318548
       %5364 = OpExtInst %float %1 Fma %5354 %float_6_28318548 %5363
       %5365 = OpFMul %float %5362 %float_n6_28318548
       %5366 = OpExtInst %float %1 Fma %5357 %float_6_28318548 %5365
       %5367 = OpExtInst %float %1 Fma %5364 %float_2097152 %5366
       %5368 = OpExtInst %float %1 Sin %5367
       %5369 = OpFMul %float %5368 %5024
       %5370 = OpCompositeConstruct %v3float %548 %548 %5351
       %5371 = OpCompositeConstruct %v3float %548 %548 %5369
       %5372 = OpFAdd %v3float %5370 %5371
       %5373 = OpFMul %float %5352 %4446
       %5374 = OpFDiv %float %float_2 %5373
       %5375 = OpFMul %float %4835 %5374
       %5376 = OpFMul %float %5374 %5293
       %5377 = OpFMul %float %5376 %3851
       %5378 = OpExtInst %float %1 Fma %4836 %5374 %5377
       %5379 = OpExtInst %float %1 Floor %5375
       %5380 = OpFNegate %float %5379
       %5381 = OpExtInst %float %1 Fma %4835 %5374 %5380
       %5382 = OpExtInst %float %1 Fma %5381 %float_2097152 %5378
       %5383 = OpExtInst %float %1 Floor %5382
       %5384 = OpFMul %float %5379 %float_n6_28318548
       %5385 = OpExtInst %float %1 Fma %5375 %float_6_28318548 %5384
       %5386 = OpFMul %float %5383 %float_n6_28318548
       %5387 = OpExtInst %float %1 Fma %5378 %float_6_28318548 %5386
       %5388 = OpExtInst %float %1 Fma %5385 %float_2097152 %5387
       %5389 = OpExtInst %float %1 Sin %5388
       %5390 = OpFMul %float %5389 %5048
       %5391 = OpCompositeConstruct %v3float %548 %548 %5390
       %5392 = OpFAdd %v3float %5372 %5391
       %5393 = OpFMul %float %5373 %4446
       %5394 = OpFDiv %float %float_2 %5393
       %5395 = OpFMul %float %4869 %5394
       %5396 = OpFMul %float %5394 %5315
       %5397 = OpFMul %float %5396 %3851
       %5398 = OpExtInst %float %1 Fma %4870 %5394 %5397
       %5399 = OpExtInst %float %1 Floor %5395
       %5400 = OpFNegate %float %5399
       %5401 = OpExtInst %float %1 Fma %4869 %5394 %5400
       %5402 = OpExtInst %float %1 Fma %5401 %float_2097152 %5398
       %5403 = OpExtInst %float %1 Floor %5402
       %5404 = OpFMul %float %5399 %float_n6_28318548
       %5405 = OpExtInst %float %1 Fma %5395 %float_6_28318548 %5404
       %5406 = OpFMul %float %5403 %float_n6_28318548
       %5407 = OpExtInst %float %1 Fma %5398 %float_6_28318548 %5406
       %5408 = OpExtInst %float %1 Fma %5405 %float_2097152 %5407
       %5409 = OpExtInst %float %1 Sin %5408
       %5410 = OpFMul %float %5409 %5071
       %5411 = OpCompositeConstruct %v3float %548 %548 %5410
       %5412 = OpFAdd %v3float %5392 %5411
       %5413 = OpFAdd %v3float %5333 %5412
       %5414 = OpFMul %float %3564 %float_0_75
       %5415 = OpFMul %float %3566 %5414
       %5416 = OpFDiv %float %float_2 %5415
       %5417 = OpFMul %float %3560 %5416
       %5418 = OpFMul %float %5416 %4897
       %5419 = OpFMul %float %5418 %3851
       %5420 = OpExtInst %float %1 Fma %3561 %5416 %5419
       %5421 = OpExtInst %float %1 Floor %5417
       %5422 = OpFNegate %float %5421
       %5423 = OpExtInst %float %1 Fma %3560 %5416 %5422
       %5424 = OpExtInst %float %1 Fma %5423 %float_2097152 %5420
       %5425 = OpExtInst %float %1 Floor %5424
       %5426 = OpFMul %float %5421 %float_n6_28318548
       %5427 = OpExtInst %float %1 Fma %5417 %float_6_28318548 %5426
       %5428 = OpFMul %float %5425 %float_n6_28318548
       %5429 = OpExtInst %float %1 Fma %5420 %float_6_28318548 %5428
       %5430 = OpExtInst %float %1 Fma %5427 %float_2097152 %5429
       %5431 = OpFMul %float %4428 %float_0_5
       %5432 = OpExtInst %float %1 Sin %5430
       %5433 = OpFMul %float %5432 %5431
       %5434 = OpFMul %float %5415 %4446
       %5435 = OpFDiv %float %float_2 %5434
       %5436 = OpFMul %float %4443 %5435
       %5437 = OpFMul %float %5435 %4918
       %5438 = OpFMul %float %5437 %3851
       %5439 = OpExtInst %float %1 Fma %4444 %5435 %5438
       %5440 = OpExtInst %float %1 Floor %5436
       %5441 = OpFNegate %float %5440
       %5442 = OpExtInst %float %1 Fma %4443 %5435 %5441
       %5443 = OpExtInst %float %1 Fma %5442 %float_2097152 %5439
       %5444 = OpExtInst %float %1 Floor %5443
       %5445 = OpFMul %float %5440 %float_n6_28318548
       %5446 = OpExtInst %float %1 Fma %5436 %float_6_28318548 %5445
       %5447 = OpFMul %float %5444 %float_n6_28318548
       %5448 = OpExtInst %float %1 Fma %5439 %float_6_28318548 %5447
       %5449 = OpExtInst %float %1 Fma %5446 %float_2097152 %5448
       %5450 = OpFMul %float %5431 %2592
       %5451 = OpExtInst %float %1 Sin %5449
       %5452 = OpFMul %float %5451 %5450
       %5453 = OpCompositeConstruct %v3float %548 %548 %5433
       %5454 = OpCompositeConstruct %v3float %548 %548 %5452
       %5455 = OpFAdd %v3float %5453 %5454
       %5456 = OpFMul %float %5434 %4446
       %5457 = OpFDiv %float %float_2 %5456
       %5458 = OpFMul %float %4483 %5457
       %5459 = OpFMul %float %5457 %4942
       %5460 = OpFMul %float %5459 %3851
       %5461 = OpExtInst %float %1 Fma %4484 %5457 %5460
       %5462 = OpExtInst %float %1 Floor %5458
       %5463 = OpFNegate %float %5462
       %5464 = OpExtInst %float %1 Fma %4483 %5457 %5463
       %5465 = OpExtInst %float %1 Fma %5464 %float_2097152 %5461
       %5466 = OpExtInst %float %1 Floor %5465
       %5467 = OpFMul %float %5462 %float_n6_28318548
       %5468 = OpExtInst %float %1 Fma %5458 %float_6_28318548 %5467
       %5469 = OpFMul %float %5466 %float_n6_28318548
       %5470 = OpExtInst %float %1 Fma %5461 %float_6_28318548 %5469
       %5471 = OpExtInst %float %1 Fma %5468 %float_2097152 %5470
       %5472 = OpFMul %float %5450 %2592
       %5473 = OpExtInst %float %1 Sin %5471
       %5474 = OpFMul %float %5473 %5472
       %5475 = OpCompositeConstruct %v3float %548 %548 %5474
       %5476 = OpFAdd %v3float %5455 %5475
       %5477 = OpFMul %float %5456 %4446
       %5478 = OpFDiv %float %float_2 %5477
       %5479 = OpFMul %float %4520 %5478
       %5480 = OpFMul %float %5478 %4965
       %5481 = OpFMul %float %5480 %3851
       %5482 = OpExtInst %float %1 Fma %4521 %5478 %5481
       %5483 = OpExtInst %float %1 Floor %5479
       %5484 = OpFNegate %float %5483
       %5485 = OpExtInst %float %1 Fma %4520 %5478 %5484
       %5486 = OpExtInst %float %1 Fma %5485 %float_2097152 %5482
       %5487 = OpExtInst %float %1 Floor %5486
       %5488 = OpFMul %float %5483 %float_n6_28318548
       %5489 = OpExtInst %float %1 Fma %5479 %float_6_28318548 %5488
       %5490 = OpFMul %float %5487 %float_n6_28318548
       %5491 = OpExtInst %float %1 Fma %5482 %float_6_28318548 %5490
       %5492 = OpExtInst %float %1 Fma %5489 %float_2097152 %5491
       %5493 = OpFMul %float %5472 %2592
       %5494 = OpExtInst %float %1 Sin %5492
       %5495 = OpFMul %float %5494 %5493
       %5496 = OpCompositeConstruct %v3float %548 %548 %5495
       %5497 = OpFAdd %v3float %5476 %5496
       %5498 = OpFMul %float %5414 %4588
       %5499 = OpFMul %float %4591 %5498
       %5500 = OpFDiv %float %float_2 %5499
       %5501 = OpFMul %float %4585 %5500
       %5502 = OpFMul %float %5500 %4989
       %5503 = OpFMul %float %5502 %3851
       %5504 = OpExtInst %float %1 Fma %4586 %5500 %5503
       %5505 = OpExtInst %float %1 Floor %5501
       %5506 = OpFNegate %float %5505
       %5507 = OpExtInst %float %1 Fma %4585 %5500 %5506
       %5508 = OpExtInst %float %1 Fma %5507 %float_2097152 %5504
       %5509 = OpExtInst %float %1 Floor %5508
       %5510 = OpFMul %float %5505 %float_n6_28318548
       %5511 = OpExtInst %float %1 Fma %5501 %float_6_28318548 %5510
       %5512 = OpFMul %float %5509 %float_n6_28318548
       %5513 = OpExtInst %float %1 Fma %5504 %float_6_28318548 %5512
       %5514 = OpExtInst %float %1 Fma %5511 %float_2097152 %5513
       %5515 = OpFMul %float %5431 %2731
       %5516 = OpExtInst %float %1 Sin %5514
       %5517 = OpFMul %float %5516 %5515
       %5518 = OpFMul %float %5499 %4446
       %5519 = OpFDiv %float %float_2 %5518
       %5520 = OpFMul %float %4625 %5519
       %5521 = OpFMul %float %5519 %5010
       %5522 = OpFMul %float %5521 %3851
       %5523 = OpExtInst %float %1 Fma %4626 %5519 %5522
       %5524 = OpExtInst %float %1 Floor %5520
       %5525 = OpFNegate %float %5524
       %5526 = OpExtInst %float %1 Fma %4625 %5519 %5525
       %5527 = OpExtInst %float %1 Fma %5526 %float_2097152 %5523
       %5528 = OpExtInst %float %1 Floor %5527
       %5529 = OpFMul %float %5524 %float_n6_28318548
       %5530 = OpExtInst %float %1 Fma %5520 %float_6_28318548 %5529
       %5531 = OpFMul %float %5528 %float_n6_28318548
       %5532 = OpExtInst %float %1 Fma %5523 %float_6_28318548 %5531
       %5533 = OpExtInst %float %1 Fma %5530 %float_2097152 %5532
       %5534 = OpFMul %float %5515 %2592
       %5535 = OpExtInst %float %1 Sin %5533
       %5536 = OpFMul %float %5535 %5534
       %5537 = OpCompositeConstruct %v3float %548 %548 %5517
       %5538 = OpCompositeConstruct %v3float %548 %548 %5536
       %5539 = OpFAdd %v3float %5537 %5538
       %5540 = OpFMul %float %5518 %4446
       %5541 = OpFDiv %float %float_2 %5540
       %5542 = OpFMul %float %4663 %5541
       %5543 = OpFMul %float %5541 %5034
       %5544 = OpFMul %float %5543 %3851
       %5545 = OpExtInst %float %1 Fma %4664 %5541 %5544
       %5546 = OpExtInst %float %1 Floor %5542
       %5547 = OpFNegate %float %5546
       %5548 = OpExtInst %float %1 Fma %4663 %5541 %5547
       %5549 = OpExtInst %float %1 Fma %5548 %float_2097152 %5545
       %5550 = OpExtInst %float %1 Floor %5549
       %5551 = OpFMul %float %5546 %float_n6_28318548
       %5552 = OpExtInst %float %1 Fma %5542 %float_6_28318548 %5551
       %5553 = OpFMul %float %5550 %float_n6_28318548
       %5554 = OpExtInst %float %1 Fma %5545 %float_6_28318548 %5553
       %5555 = OpExtInst %float %1 Fma %5552 %float_2097152 %5554
       %5556 = OpFMul %float %5534 %2592
       %5557 = OpExtInst %float %1 Sin %5555
       %5558 = OpFMul %float %5557 %5556
       %5559 = OpCompositeConstruct %v3float %548 %548 %5558
       %5560 = OpFAdd %v3float %5539 %5559
       %5561 = OpFMul %float %5540 %4446
       %5562 = OpFDiv %float %float_2 %5561
       %5563 = OpFMul %float %4700 %5562
       %5564 = OpFMul %float %5562 %5057
       %5565 = OpFMul %float %5564 %3851
       %5566 = OpExtInst %float %1 Fma %4701 %5562 %5565
       %5567 = OpExtInst %float %1 Floor %5563
       %5568 = OpFNegate %float %5567
       %5569 = OpExtInst %float %1 Fma %4700 %5562 %5568
       %5570 = OpExtInst %float %1 Fma %5569 %float_2097152 %5566
       %5571 = OpExtInst %float %1 Floor %5570
       %5572 = OpFMul %float %5567 %float_n6_28318548
       %5573 = OpExtInst %float %1 Fma %5563 %float_6_28318548 %5572
       %5574 = OpFMul %float %5571 %float_n6_28318548
       %5575 = OpExtInst %float %1 Fma %5566 %float_6_28318548 %5574
       %5576 = OpExtInst %float %1 Fma %5573 %float_2097152 %5575
       %5577 = OpFMul %float %5556 %2592
       %5578 = OpExtInst %float %1 Sin %5576
       %5579 = OpFMul %float %5578 %5577
       %5580 = OpCompositeConstruct %v3float %548 %548 %5579
       %5581 = OpFAdd %v3float %5560 %5580
       %5582 = OpFAdd %v3float %5497 %5581
       %5583 = OpFMul %float %4769 %5498
       %5584 = OpFDiv %float %float_2 %5583
       %5585 = OpFMul %float %4766 %5584
       %5586 = OpFMul %float %5584 %4989
       %5587 = OpFMul %float %5586 %3851
       %5588 = OpExtInst %float %1 Fma %4767 %5584 %5587
       %5589 = OpExtInst %float %1 Floor %5585
       %5590 = OpFNegate %float %5589
       %5591 = OpExtInst %float %1 Fma %4766 %5584 %5590
       %5592 = OpExtInst %float %1 Fma %5591 %float_2097152 %5588
       %5593 = OpExtInst %float %1 Floor %5592
       %5594 = OpFMul %float %5589 %float_n6_28318548
       %5595 = OpExtInst %float %1 Fma %5585 %float_6_28318548 %5594
       %5596 = OpFMul %float %5593 %float_n6_28318548
       %5597 = OpExtInst %float %1 Fma %5588 %float_6_28318548 %5596
       %5598 = OpExtInst %float %1 Fma %5595 %float_2097152 %5597
       %5599 = OpExtInst %float %1 Sin %5598
       %5600 = OpFMul %float %5599 %5515
       %5601 = OpFMul %float %5583 %4446
       %5602 = OpFDiv %float %float_2 %5601
       %5603 = OpFMul %float %4800 %5602
       %5604 = OpFMul %float %5602 %5010
       %5605 = OpFMul %float %5604 %3851
       %5606 = OpExtInst %float %1 Fma %4801 %5602 %5605
       %5607 = OpExtInst %float %1 Floor %5603
       %5608 = OpFNegate %float %5607
       %5609 = OpExtInst %float %1 Fma %4800 %5602 %5608
       %5610 = OpExtInst %float %1 Fma %5609 %float_2097152 %5606
       %5611 = OpExtInst %float %1 Floor %5610
       %5612 = OpFMul %float %5607 %float_n6_28318548
       %5613 = OpExtInst %float %1 Fma %5603 %float_6_28318548 %5612
       %5614 = OpFMul %float %5611 %float_n6_28318548
       %5615 = OpExtInst %float %1 Fma %5606 %float_6_28318548 %5614
       %5616 = OpExtInst %float %1 Fma %5613 %float_2097152 %5615
       %5617 = OpExtInst %float %1 Sin %5616
       %5618 = OpFMul %float %5617 %5534
       %5619 = OpCompositeConstruct %v3float %548 %548 %5600
       %5620 = OpCompositeConstruct %v3float %548 %548 %5618
       %5621 = OpFAdd %v3float %5619 %5620
       %5622 = OpFMul %float %5601 %4446
       %5623 = OpFDiv %float %float_2 %5622
       %5624 = OpFMul %float %4835 %5623
       %5625 = OpFMul %float %5623 %5034
       %5626 = OpFMul %float %5625 %3851
       %5627 = OpExtInst %float %1 Fma %4836 %5623 %5626
       %5628 = OpExtInst %float %1 Floor %5624
       %5629 = OpFNegate %float %5628
       %5630 = OpExtInst %float %1 Fma %4835 %5623 %5629
       %5631 = OpExtInst %float %1 Fma %5630 %float_2097152 %5627
       %5632 = OpExtInst %float %1 Floor %5631
       %5633 = OpFMul %float %5628 %float_n6_28318548
       %5634 = OpExtInst %float %1 Fma %5624 %float_6_28318548 %5633
       %5635 = OpFMul %float %5632 %float_n6_28318548
       %5636 = OpExtInst %float %1 Fma %5627 %float_6_28318548 %5635
       %5637 = OpExtInst %float %1 Fma %5634 %float_2097152 %5636
       %5638 = OpExtInst %float %1 Sin %5637
       %5639 = OpFMul %float %5638 %5556
       %5640 = OpCompositeConstruct %v3float %548 %548 %5639
       %5641 = OpFAdd %v3float %5621 %5640
       %5642 = OpFMul %float %5622 %4446
       %5643 = OpFDiv %float %float_2 %5642
       %5644 = OpFMul %float %4869 %5643
       %5645 = OpFMul %float %5643 %5057
       %5646 = OpFMul %float %5645 %3851
       %5647 = OpExtInst %float %1 Fma %4870 %5643 %5646
       %5648 = OpExtInst %float %1 Floor %5644
       %5649 = OpFNegate %float %5648
       %5650 = OpExtInst %float %1 Fma %4869 %5643 %5649
       %5651 = OpExtInst %float %1 Fma %5650 %float_2097152 %5647
       %5652 = OpExtInst %float %1 Floor %5651
       %5653 = OpFMul %float %5648 %float_n6_28318548
       %5654 = OpExtInst %float %1 Fma %5644 %float_6_28318548 %5653
       %5655 = OpFMul %float %5652 %float_n6_28318548
       %5656 = OpExtInst %float %1 Fma %5647 %float_6_28318548 %5655
       %5657 = OpExtInst %float %1 Fma %5654 %float_2097152 %5656
       %5658 = OpExtInst %float %1 Sin %5657
       %5659 = OpFMul %float %5658 %5577
       %5660 = OpCompositeConstruct %v3float %548 %548 %5659
       %5661 = OpFAdd %v3float %5641 %5660
       %5662 = OpFAdd %v3float %5582 %5661
       %5663 = OpFAdd %v3float %5413 %5662
       %5664 = OpFAdd %v3float %5156 %5663
       %5665 = OpFAdd %v3float %4891 %5664
       %5666 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_2
       %5667 = OpLoad %float %5666
       %5668 = OpFSub %float %5667 %float_n1
       %5669 = OpExtInst %float %1 FAbs %5668
       %5670 = OpFOrdGreaterThan %bool %5669 %float_9_99999975en06
       %5671 = OpFOrdGreaterThanEqual %bool %5667 %float_n1
       %5672 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_3
       %5673 = OpLoad %float %5672
       %5674 = OpSelect %float %5671 %5667 %5673
       %5675 = OpSelect %float %5670 %5674 %5667
       %5676 = OpFSub %float %5675 %float_1
       %5677 = OpExtInst %float %1 FAbs %5676
       %5678 = OpFOrdGreaterThan %bool %5677 %float_9_99999975en06
       %5679 = OpFOrdGreaterThanEqual %bool %5675 %float_1
       %5680 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_76 %int_0
       %5681 = OpLoad %float %5680
       %5682 = OpSelect %float %5679 %5681 %5667
       %5683 = OpSelect %float %5678 %5682 %5667
       %5684 = OpExtInst %float %1 FAbs %5683
       %5685 = OpFOrdGreaterThan %bool %5684 %float_9_99999975en06
       %5686 = OpFOrdGreaterThanEqual %bool %5683 %float_0
       %5687 = OpSelect %float %5686 %float_1 %float_n1
       %5688 = OpSelect %float %5685 %5687 %float_1
       %5689 = OpExtInst %float %1 NMax %5688 %float_n1
       %5690 = OpExtInst %float %1 NMin %5689 %float_1
       %5691 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_77 %int_1
       %5692 = OpLoad %float %5691
       %5693 = OpCompositeConstruct %v3float %5690 %5692 %float_0
       %5694 = OpFAdd %v3float %5693 %1686
       %5695 = OpExtInst %v3float %1 NMax %5694 %282
       %5696 = OpExtInst %v3float %1 NMin %5695 %130
       %5697 = OpCompositeExtract %float %5696 0
       %5698 = OpCompositeExtract %float %5696 1
       %5699 = OpCompositeConstruct %v2float %5697 %5698
       %5700 = OpFMul %v2float %1694 %5699
       %5701 = OpFMul %v2float %5699 %1695
       %5702 = OpCompositeExtract %float %5700 0
       %5703 = OpCompositeExtract %float %5701 0
       %5704 = OpCompositeExtract %float %5700 1
       %5705 = OpCompositeExtract %float %5701 1
       %5706 = OpFAdd %float %5702 %5704
       %5707 = OpFAdd %float %5703 %5705
       %5708 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_2
       %5709 = OpLoad %float %5708
       %5710 = OpFMul %float %5709 %3564
       %5711 = OpFDiv %float %float_2 %5710
       %5712 = OpFMul %float %5706 %5711
       %5713 = OpFMul %float %5711 %3571
       %5714 = OpFAdd %v3float %640 %292
       %5715 = OpFMul %v3float %591 %3584
       %5716 = OpFMul %v3float %5714 %3584
       %5717 = OpFMul %v3float %5715 %3575
       %5718 = OpFMul %v3float %3575 %5716
       %5719 = OpFMul %v3float %5718 %3580
       %5720 = OpCompositeExtract %float %5719 0
       %5721 = OpCompositeExtract %float %5719 1
       %5722 = OpCompositeExtract %float %5719 2
       %5723 = OpCompositeConstruct %v2float %5722 %5722
       %5724 = OpFAdd %v2float %3592 %5723
       %5725 = OpCompositeExtract %float %5724 0
       %5726 = OpCompositeConstruct %v3float %5720 %5721 %5725
       %5727 = OpVectorTimesScalar %v3float %5726 %float_4_76837158en07
       %5728 = OpFAdd %v3float %5727 %140
       %5729 = OpExtInst %v3float %1 Fma %5717 %3580 %5728
       %5730 = OpExtInst %v3float %1 Floor %5729
       %5731 = OpFNegate %v3float %5730
       %5732 = OpExtInst %v3float %1 Fma %5717 %3580 %5731
       %5733 = OpVectorTimesScalar %v3float %5732 %float_2097152
       %5734 = OpFAdd %v3float %5733 %5726
       %5735 = OpVectorTimesScalar %v3float %5734 %float_1
               OpBranch %5736
       %5736 = OpLabel
       %5737 = OpPhi %v3float %5735 %4189 %5738 %5739
       %5740 = OpPhi %float %float_1 %4189 %5741 %5739
       %5742 = OpPhi %float %float_0 %4189 %5743 %5739
       %5744 = OpPhi %uint %uint_0 %4189 %5745 %5739
       %5746 = OpULessThan %bool %5744 %uint_6
               OpLoopMerge %5747 %5739 DontUnroll
               OpBranchConditional %5746 %5739 %5747
       %5739 = OpLabel
       %5748 = OpExtInst %v3float %1 Fract %5737
       %5749 = OpExtInst %v3float %1 Floor %5737
       %5750 = OpDot %float %5749 %387
       %5751 = OpFAdd %float %5750 %float_19
       %5752 = OpFAdd %float %5750 %float_47
       %5753 = OpFAdd %float %5750 %float_66
       %5754 = OpFAdd %float %5750 %float_101
       %5755 = OpFAdd %float %5750 %float_120
       %5756 = OpFAdd %float %5750 %float_148
       %5757 = OpFAdd %float %5750 %float_167
       %5758 = OpConvertFToS %int %5750
       %5759 = OpCompositeConstruct %v3int %5758 %int_0 %int_0
       %5760 = OpBitcast %v3uint %5759
       %5761 = OpIMul %v3uint %5760 %403
       %5762 = OpIAdd %v3uint %5761 %405
       %5763 = OpCompositeExtract %uint %5762 1
       %5764 = OpCompositeExtract %uint %5762 2
       %5765 = OpIMul %uint %5763 %5764
       %5766 = OpCompositeExtract %uint %5762 0
       %5767 = OpIAdd %uint %5766 %5765
       %5768 = OpIMul %uint %5764 %5767
       %5769 = OpIAdd %uint %5763 %5768
       %5770 = OpIMul %uint %5767 %5769
       %5771 = OpIAdd %uint %5764 %5770
       %5772 = OpIMul %uint %5769 %5771
       %5773 = OpIAdd %uint %5767 %5772
       %5774 = OpCompositeInsert %v3uint %5773 %549 0
       %5775 = OpBitwiseAnd %v3uint %406 %407
       %5776 = OpShiftRightLogical %v3uint %5774 %5775
       %5777 = OpCompositeExtract %uint %5776 0
       %5778 = OpCompositeConstruct %v3uint %5777 %5777 %5777
       %5779 = OpBitwiseAnd %v3uint %5778 %388
       %5780 = OpConvertUToF %v3float %5779
       %5781 = OpExtInst %v3float %1 Fma %5780 %392 %282
       %5782 = OpDot %float %5781 %5748
       %5783 = OpConvertFToS %int %5751
       %5784 = OpFSub %v3float %5748 %351
       %5785 = OpCompositeConstruct %v3int %5783 %int_0 %int_0
       %5786 = OpBitcast %v3uint %5785
       %5787 = OpIMul %v3uint %5786 %403
       %5788 = OpIAdd %v3uint %5787 %405
       %5789 = OpCompositeExtract %uint %5788 1
       %5790 = OpCompositeExtract %uint %5788 2
       %5791 = OpIMul %uint %5789 %5790
       %5792 = OpCompositeExtract %uint %5788 0
       %5793 = OpIAdd %uint %5792 %5791
       %5794 = OpIMul %uint %5790 %5793
       %5795 = OpIAdd %uint %5789 %5794
       %5796 = OpIMul %uint %5793 %5795
       %5797 = OpIAdd %uint %5790 %5796
       %5798 = OpIMul %uint %5795 %5797
       %5799 = OpIAdd %uint %5793 %5798
       %5800 = OpCompositeInsert %v3uint %5799 %549 0
       %5801 = OpShiftRightLogical %v3uint %5800 %5775
       %5802 = OpCompositeExtract %uint %5801 0
       %5803 = OpCompositeConstruct %v3uint %5802 %5802 %5802
       %5804 = OpBitwiseAnd %v3uint %5803 %388
       %5805 = OpConvertUToF %v3float %5804
       %5806 = OpExtInst %v3float %1 Fma %5805 %392 %282
       %5807 = OpDot %float %5806 %5784
       %5808 = OpConvertFToS %int %5752
       %5809 = OpFSub %v3float %5748 %352
       %5810 = OpCompositeConstruct %v3int %5808 %int_0 %int_0
       %5811 = OpBitcast %v3uint %5810
       %5812 = OpIMul %v3uint %5811 %403
       %5813 = OpIAdd %v3uint %5812 %405
       %5814 = OpCompositeExtract %uint %5813 1
       %5815 = OpCompositeExtract %uint %5813 2
       %5816 = OpIMul %uint %5814 %5815
       %5817 = OpCompositeExtract %uint %5813 0
       %5818 = OpIAdd %uint %5817 %5816
       %5819 = OpIMul %uint %5815 %5818
       %5820 = OpIAdd %uint %5814 %5819
       %5821 = OpIMul %uint %5818 %5820
       %5822 = OpIAdd %uint %5815 %5821
       %5823 = OpIMul %uint %5820 %5822
       %5824 = OpIAdd %uint %5818 %5823
       %5825 = OpCompositeInsert %v3uint %5824 %549 0
       %5826 = OpShiftRightLogical %v3uint %5825 %5775
       %5827 = OpCompositeExtract %uint %5826 0
       %5828 = OpCompositeConstruct %v3uint %5827 %5827 %5827
       %5829 = OpBitwiseAnd %v3uint %5828 %388
       %5830 = OpConvertUToF %v3float %5829
       %5831 = OpExtInst %v3float %1 Fma %5830 %392 %282
       %5832 = OpDot %float %5831 %5809
       %5833 = OpConvertFToS %int %5753
       %5834 = OpFSub %v3float %5748 %137
       %5835 = OpCompositeConstruct %v3int %5833 %int_0 %int_0
       %5836 = OpBitcast %v3uint %5835
       %5837 = OpIMul %v3uint %5836 %403
       %5838 = OpIAdd %v3uint %5837 %405
       %5839 = OpCompositeExtract %uint %5838 1
       %5840 = OpCompositeExtract %uint %5838 2
       %5841 = OpIMul %uint %5839 %5840
       %5842 = OpCompositeExtract %uint %5838 0
       %5843 = OpIAdd %uint %5842 %5841
       %5844 = OpIMul %uint %5840 %5843
       %5845 = OpIAdd %uint %5839 %5844
       %5846 = OpIMul %uint %5843 %5845
       %5847 = OpIAdd %uint %5840 %5846
       %5848 = OpIMul %uint %5845 %5847
       %5849 = OpIAdd %uint %5843 %5848
       %5850 = OpCompositeInsert %v3uint %5849 %549 0
       %5851 = OpShiftRightLogical %v3uint %5850 %5775
       %5852 = OpCompositeExtract %uint %5851 0
       %5853 = OpCompositeConstruct %v3uint %5852 %5852 %5852
       %5854 = OpBitwiseAnd %v3uint %5853 %388
       %5855 = OpConvertUToF %v3float %5854
       %5856 = OpExtInst %v3float %1 Fma %5855 %392 %282
       %5857 = OpDot %float %5856 %5834
       %5858 = OpConvertFToS %int %5754
       %5859 = OpFSub %v3float %5748 %294
       %5860 = OpCompositeConstruct %v3int %5858 %int_0 %int_0
       %5861 = OpBitcast %v3uint %5860
       %5862 = OpIMul %v3uint %5861 %403
       %5863 = OpIAdd %v3uint %5862 %405
       %5864 = OpCompositeExtract %uint %5863 1
       %5865 = OpCompositeExtract %uint %5863 2
       %5866 = OpIMul %uint %5864 %5865
       %5867 = OpCompositeExtract %uint %5863 0
       %5868 = OpIAdd %uint %5867 %5866
       %5869 = OpIMul %uint %5865 %5868
       %5870 = OpIAdd %uint %5864 %5869
       %5871 = OpIMul %uint %5868 %5870
       %5872 = OpIAdd %uint %5865 %5871
       %5873 = OpIMul %uint %5870 %5872
       %5874 = OpIAdd %uint %5868 %5873
       %5875 = OpCompositeInsert %v3uint %5874 %549 0
       %5876 = OpShiftRightLogical %v3uint %5875 %5775
       %5877 = OpCompositeExtract %uint %5876 0
       %5878 = OpCompositeConstruct %v3uint %5877 %5877 %5877
       %5879 = OpBitwiseAnd %v3uint %5878 %388
       %5880 = OpConvertUToF %v3float %5879
       %5881 = OpExtInst %v3float %1 Fma %5880 %392 %282
       %5882 = OpDot %float %5881 %5859
       %5883 = OpConvertFToS %int %5755
       %5884 = OpFSub %v3float %5748 %143
       %5885 = OpCompositeConstruct %v3int %5883 %int_0 %int_0
       %5886 = OpBitcast %v3uint %5885
       %5887 = OpIMul %v3uint %5886 %403
       %5888 = OpIAdd %v3uint %5887 %405
       %5889 = OpCompositeExtract %uint %5888 1
       %5890 = OpCompositeExtract %uint %5888 2
       %5891 = OpIMul %uint %5889 %5890
       %5892 = OpCompositeExtract %uint %5888 0
       %5893 = OpIAdd %uint %5892 %5891
       %5894 = OpIMul %uint %5890 %5893
       %5895 = OpIAdd %uint %5889 %5894
       %5896 = OpIMul %uint %5893 %5895
       %5897 = OpIAdd %uint %5890 %5896
       %5898 = OpIMul %uint %5895 %5897
       %5899 = OpIAdd %uint %5893 %5898
       %5900 = OpCompositeInsert %v3uint %5899 %549 0
       %5901 = OpShiftRightLogical %v3uint %5900 %5775
       %5902 = OpCompositeExtract %uint %5901 0
       %5903 = OpCompositeConstruct %v3uint %5902 %5902 %5902
       %5904 = OpBitwiseAnd %v3uint %5903 %388
       %5905 = OpConvertUToF %v3float %5904
       %5906 = OpExtInst %v3float %1 Fma %5905 %392 %282
       %5907 = OpDot %float %5906 %5884
       %5908 = OpConvertFToS %int %5756
       %5909 = OpFSub %v3float %5748 %138
       %5910 = OpCompositeConstruct %v3int %5908 %int_0 %int_0
       %5911 = OpBitcast %v3uint %5910
       %5912 = OpIMul %v3uint %5911 %403
       %5913 = OpIAdd %v3uint %5912 %405
       %5914 = OpCompositeExtract %uint %5913 1
       %5915 = OpCompositeExtract %uint %5913 2
       %5916 = OpIMul %uint %5914 %5915
       %5917 = OpCompositeExtract %uint %5913 0
       %5918 = OpIAdd %uint %5917 %5916
       %5919 = OpIMul %uint %5915 %5918
       %5920 = OpIAdd %uint %5914 %5919
       %5921 = OpIMul %uint %5918 %5920
       %5922 = OpIAdd %uint %5915 %5921
       %5923 = OpIMul %uint %5920 %5922
       %5924 = OpIAdd %uint %5918 %5923
       %5925 = OpCompositeInsert %v3uint %5924 %549 0
       %5926 = OpShiftRightLogical %v3uint %5925 %5775
       %5927 = OpCompositeExtract %uint %5926 0
       %5928 = OpCompositeConstruct %v3uint %5927 %5927 %5927
       %5929 = OpBitwiseAnd %v3uint %5928 %388
       %5930 = OpConvertUToF %v3float %5929
       %5931 = OpExtInst %v3float %1 Fma %5930 %392 %282
       %5932 = OpDot %float %5931 %5909
       %5933 = OpConvertFToS %int %5757
       %5934 = OpFSub %v3float %5748 %130
       %5935 = OpCompositeConstruct %v3int %5933 %int_0 %int_0
       %5936 = OpBitcast %v3uint %5935
       %5937 = OpIMul %v3uint %5936 %403
       %5938 = OpIAdd %v3uint %5937 %405
       %5939 = OpCompositeExtract %uint %5938 1
       %5940 = OpCompositeExtract %uint %5938 2
       %5941 = OpIMul %uint %5939 %5940
       %5942 = OpCompositeExtract %uint %5938 0
       %5943 = OpIAdd %uint %5942 %5941
       %5944 = OpIMul %uint %5940 %5943
       %5945 = OpIAdd %uint %5939 %5944
       %5946 = OpIMul %uint %5943 %5945
       %5947 = OpIAdd %uint %5940 %5946
       %5948 = OpIMul %uint %5945 %5947
       %5949 = OpIAdd %uint %5943 %5948
       %5950 = OpCompositeInsert %v3uint %5949 %549 0
       %5951 = OpShiftRightLogical %v3uint %5950 %5775
       %5952 = OpCompositeExtract %uint %5951 0
       %5953 = OpCompositeConstruct %v3uint %5952 %5952 %5952
       %5954 = OpBitwiseAnd %v3uint %5953 %388
       %5955 = OpConvertUToF %v3float %5954
       %5956 = OpExtInst %v3float %1 Fma %5955 %392 %282
       %5957 = OpDot %float %5956 %5934
       %5958 = OpCompositeExtract %float %5748 0
       %5959 = OpCompositeExtract %float %5748 1
       %5960 = OpCompositeExtract %float %5748 2
       %5961 = OpCompositeConstruct %v4float %5958 %5959 %5960 %float_0
       %5962 = OpFMul %v4float %5961 %5961
       %5963 = OpFMul %v4float %5962 %5961
       %5964 = OpVectorTimesScalar %v4float %5961 %float_6
       %5965 = OpFSub %v4float %5964 %383
       %5966 = OpExtInst %v4float %1 Fma %5961 %5965 %384
       %5967 = OpFMul %v4float %5963 %5966
       %5968 = OpCompositeExtract %float %5967 0
       %5969 = OpExtInst %float %1 FMix %5782 %5807 %5968
       %5970 = OpExtInst %float %1 FMix %5832 %5857 %5968
       %5971 = OpCompositeExtract %float %5967 1
       %5972 = OpExtInst %float %1 FMix %5969 %5970 %5971
       %5973 = OpExtInst %float %1 FMix %5882 %5907 %5968
       %5974 = OpExtInst %float %1 FMix %5932 %5957 %5968
       %5975 = OpExtInst %float %1 FMix %5973 %5974 %5971
       %5976 = OpCompositeExtract %float %5967 2
       %5977 = OpExtInst %float %1 FMix %5972 %5975 %5976
       %5743 = OpExtInst %float %1 Fma %5977 %5740 %5742
       %5738 = OpVectorTimesScalar %v3float %5737 %float_2
       %5741 = OpFMul %float %5740 %float_0_5
       %5745 = OpIAdd %uint %5744 %uint_1
               OpBranch %5736
       %5747 = OpLabel
       %5978 = OpExtInst %float %1 Fma %5742 %float_0_5 %float_0_5
       %5979 = OpExtInst %float %1 FMix %float_0 %float_1 %5978
       %5980 = OpExtInst %float %1 FClamp %5979 %float_0 %float_1
       %5981 = OpExtInst %float %1 FMix %1159 %1712 %5980
       %5982 = OpFMul %float %5713 %5981
       %5983 = OpExtInst %float %1 Fma %5707 %5711 %5982
       %5984 = OpExtInst %float %1 Floor %5712
       %5985 = OpFNegate %float %5984
       %5986 = OpExtInst %float %1 Fma %5706 %5711 %5985
       %5987 = OpExtInst %float %1 Fma %5986 %float_2097152 %5983
       %5988 = OpExtInst %float %1 Floor %5987
       %5989 = OpFMul %float %5984 %float_n6_28318548
       %5990 = OpExtInst %float %1 Fma %5712 %float_6_28318548 %5989
       %5991 = OpFMul %float %5988 %float_n6_28318548
       %5992 = OpExtInst %float %1 Fma %5983 %float_6_28318548 %5991
       %5993 = OpExtInst %float %1 Fma %5990 %float_2097152 %5992
       %5994 = OpFMul %v3float %5715 %3874
       %5995 = OpFMul %v3float %3874 %5716
       %5996 = OpFMul %v3float %5995 %3879
       %5997 = OpCompositeExtract %float %5996 0
       %5998 = OpCompositeExtract %float %5996 1
       %5999 = OpCompositeExtract %float %5996 2
       %6000 = OpCompositeConstruct %v2float %5999 %5999
       %6001 = OpFAdd %v2float %3889 %6000
       %6002 = OpCompositeExtract %float %6001 0
       %6003 = OpCompositeConstruct %v3float %5997 %5998 %6002
       %6004 = OpVectorTimesScalar %v3float %6003 %float_4_76837158en07
       %6005 = OpFAdd %v3float %6004 %140
       %6006 = OpExtInst %v3float %1 Fma %5994 %3879 %6005
       %6007 = OpExtInst %v3float %1 Floor %6006
       %6008 = OpFNegate %v3float %6007
       %6009 = OpExtInst %v3float %1 Fma %5994 %3879 %6008
       %6010 = OpVectorTimesScalar %v3float %6009 %float_2097152
       %6011 = OpFAdd %v3float %6010 %6003
       %6012 = OpVectorTimesScalar %v3float %6011 %float_1
               OpBranch %6013
       %6013 = OpLabel
       %6014 = OpPhi %v3float %6012 %5747 %6015 %6016
       %6017 = OpPhi %float %float_1 %5747 %6018 %6016
       %6019 = OpPhi %float %float_0 %5747 %6020 %6016
       %6021 = OpPhi %uint %uint_0 %5747 %6022 %6016
       %6023 = OpULessThan %bool %6021 %uint_10
               OpLoopMerge %6024 %6016 DontUnroll
               OpBranchConditional %6023 %6016 %6024
       %6016 = OpLabel
       %6025 = OpExtInst %v3float %1 Fract %6014
       %6026 = OpExtInst %v3float %1 Floor %6014
       %6027 = OpDot %float %6026 %387
       %6028 = OpFAdd %float %6027 %float_19
       %6029 = OpFAdd %float %6027 %float_47
       %6030 = OpFAdd %float %6027 %float_66
       %6031 = OpFAdd %float %6027 %float_101
       %6032 = OpFAdd %float %6027 %float_120
       %6033 = OpFAdd %float %6027 %float_148
       %6034 = OpFAdd %float %6027 %float_167
       %6035 = OpConvertFToS %int %6027
       %6036 = OpCompositeConstruct %v3int %6035 %int_0 %int_0
       %6037 = OpBitcast %v3uint %6036
       %6038 = OpIMul %v3uint %6037 %403
       %6039 = OpIAdd %v3uint %6038 %405
       %6040 = OpCompositeExtract %uint %6039 1
       %6041 = OpCompositeExtract %uint %6039 2
       %6042 = OpIMul %uint %6040 %6041
       %6043 = OpCompositeExtract %uint %6039 0
       %6044 = OpIAdd %uint %6043 %6042
       %6045 = OpIMul %uint %6041 %6044
       %6046 = OpIAdd %uint %6040 %6045
       %6047 = OpIMul %uint %6044 %6046
       %6048 = OpIAdd %uint %6041 %6047
       %6049 = OpIMul %uint %6046 %6048
       %6050 = OpIAdd %uint %6044 %6049
       %6051 = OpCompositeInsert %v3uint %6050 %549 0
       %6052 = OpBitwiseAnd %v3uint %406 %407
       %6053 = OpShiftRightLogical %v3uint %6051 %6052
       %6054 = OpCompositeExtract %uint %6053 0
       %6055 = OpCompositeConstruct %v3uint %6054 %6054 %6054
       %6056 = OpBitwiseAnd %v3uint %6055 %388
       %6057 = OpConvertUToF %v3float %6056
       %6058 = OpExtInst %v3float %1 Fma %6057 %392 %282
       %6059 = OpDot %float %6058 %6025
       %6060 = OpConvertFToS %int %6028
       %6061 = OpFSub %v3float %6025 %351
       %6062 = OpCompositeConstruct %v3int %6060 %int_0 %int_0
       %6063 = OpBitcast %v3uint %6062
       %6064 = OpIMul %v3uint %6063 %403
       %6065 = OpIAdd %v3uint %6064 %405
       %6066 = OpCompositeExtract %uint %6065 1
       %6067 = OpCompositeExtract %uint %6065 2
       %6068 = OpIMul %uint %6066 %6067
       %6069 = OpCompositeExtract %uint %6065 0
       %6070 = OpIAdd %uint %6069 %6068
       %6071 = OpIMul %uint %6067 %6070
       %6072 = OpIAdd %uint %6066 %6071
       %6073 = OpIMul %uint %6070 %6072
       %6074 = OpIAdd %uint %6067 %6073
       %6075 = OpIMul %uint %6072 %6074
       %6076 = OpIAdd %uint %6070 %6075
       %6077 = OpCompositeInsert %v3uint %6076 %549 0
       %6078 = OpShiftRightLogical %v3uint %6077 %6052
       %6079 = OpCompositeExtract %uint %6078 0
       %6080 = OpCompositeConstruct %v3uint %6079 %6079 %6079
       %6081 = OpBitwiseAnd %v3uint %6080 %388
       %6082 = OpConvertUToF %v3float %6081
       %6083 = OpExtInst %v3float %1 Fma %6082 %392 %282
       %6084 = OpDot %float %6083 %6061
       %6085 = OpConvertFToS %int %6029
       %6086 = OpFSub %v3float %6025 %352
       %6087 = OpCompositeConstruct %v3int %6085 %int_0 %int_0
       %6088 = OpBitcast %v3uint %6087
       %6089 = OpIMul %v3uint %6088 %403
       %6090 = OpIAdd %v3uint %6089 %405
       %6091 = OpCompositeExtract %uint %6090 1
       %6092 = OpCompositeExtract %uint %6090 2
       %6093 = OpIMul %uint %6091 %6092
       %6094 = OpCompositeExtract %uint %6090 0
       %6095 = OpIAdd %uint %6094 %6093
       %6096 = OpIMul %uint %6092 %6095
       %6097 = OpIAdd %uint %6091 %6096
       %6098 = OpIMul %uint %6095 %6097
       %6099 = OpIAdd %uint %6092 %6098
       %6100 = OpIMul %uint %6097 %6099
       %6101 = OpIAdd %uint %6095 %6100
       %6102 = OpCompositeInsert %v3uint %6101 %549 0
       %6103 = OpShiftRightLogical %v3uint %6102 %6052
       %6104 = OpCompositeExtract %uint %6103 0
       %6105 = OpCompositeConstruct %v3uint %6104 %6104 %6104
       %6106 = OpBitwiseAnd %v3uint %6105 %388
       %6107 = OpConvertUToF %v3float %6106
       %6108 = OpExtInst %v3float %1 Fma %6107 %392 %282
       %6109 = OpDot %float %6108 %6086
       %6110 = OpConvertFToS %int %6030
       %6111 = OpFSub %v3float %6025 %137
       %6112 = OpCompositeConstruct %v3int %6110 %int_0 %int_0
       %6113 = OpBitcast %v3uint %6112
       %6114 = OpIMul %v3uint %6113 %403
       %6115 = OpIAdd %v3uint %6114 %405
       %6116 = OpCompositeExtract %uint %6115 1
       %6117 = OpCompositeExtract %uint %6115 2
       %6118 = OpIMul %uint %6116 %6117
       %6119 = OpCompositeExtract %uint %6115 0
       %6120 = OpIAdd %uint %6119 %6118
       %6121 = OpIMul %uint %6117 %6120
       %6122 = OpIAdd %uint %6116 %6121
       %6123 = OpIMul %uint %6120 %6122
       %6124 = OpIAdd %uint %6117 %6123
       %6125 = OpIMul %uint %6122 %6124
       %6126 = OpIAdd %uint %6120 %6125
       %6127 = OpCompositeInsert %v3uint %6126 %549 0
       %6128 = OpShiftRightLogical %v3uint %6127 %6052
       %6129 = OpCompositeExtract %uint %6128 0
       %6130 = OpCompositeConstruct %v3uint %6129 %6129 %6129
       %6131 = OpBitwiseAnd %v3uint %6130 %388
       %6132 = OpConvertUToF %v3float %6131
       %6133 = OpExtInst %v3float %1 Fma %6132 %392 %282
       %6134 = OpDot %float %6133 %6111
       %6135 = OpConvertFToS %int %6031
       %6136 = OpFSub %v3float %6025 %294
       %6137 = OpCompositeConstruct %v3int %6135 %int_0 %int_0
       %6138 = OpBitcast %v3uint %6137
       %6139 = OpIMul %v3uint %6138 %403
       %6140 = OpIAdd %v3uint %6139 %405
       %6141 = OpCompositeExtract %uint %6140 1
       %6142 = OpCompositeExtract %uint %6140 2
       %6143 = OpIMul %uint %6141 %6142
       %6144 = OpCompositeExtract %uint %6140 0
       %6145 = OpIAdd %uint %6144 %6143
       %6146 = OpIMul %uint %6142 %6145
       %6147 = OpIAdd %uint %6141 %6146
       %6148 = OpIMul %uint %6145 %6147
       %6149 = OpIAdd %uint %6142 %6148
       %6150 = OpIMul %uint %6147 %6149
       %6151 = OpIAdd %uint %6145 %6150
       %6152 = OpCompositeInsert %v3uint %6151 %549 0
       %6153 = OpShiftRightLogical %v3uint %6152 %6052
       %6154 = OpCompositeExtract %uint %6153 0
       %6155 = OpCompositeConstruct %v3uint %6154 %6154 %6154
       %6156 = OpBitwiseAnd %v3uint %6155 %388
       %6157 = OpConvertUToF %v3float %6156
       %6158 = OpExtInst %v3float %1 Fma %6157 %392 %282
       %6159 = OpDot %float %6158 %6136
       %6160 = OpConvertFToS %int %6032
       %6161 = OpFSub %v3float %6025 %143
       %6162 = OpCompositeConstruct %v3int %6160 %int_0 %int_0
       %6163 = OpBitcast %v3uint %6162
       %6164 = OpIMul %v3uint %6163 %403
       %6165 = OpIAdd %v3uint %6164 %405
       %6166 = OpCompositeExtract %uint %6165 1
       %6167 = OpCompositeExtract %uint %6165 2
       %6168 = OpIMul %uint %6166 %6167
       %6169 = OpCompositeExtract %uint %6165 0
       %6170 = OpIAdd %uint %6169 %6168
       %6171 = OpIMul %uint %6167 %6170
       %6172 = OpIAdd %uint %6166 %6171
       %6173 = OpIMul %uint %6170 %6172
       %6174 = OpIAdd %uint %6167 %6173
       %6175 = OpIMul %uint %6172 %6174
       %6176 = OpIAdd %uint %6170 %6175
       %6177 = OpCompositeInsert %v3uint %6176 %549 0
       %6178 = OpShiftRightLogical %v3uint %6177 %6052
       %6179 = OpCompositeExtract %uint %6178 0
       %6180 = OpCompositeConstruct %v3uint %6179 %6179 %6179
       %6181 = OpBitwiseAnd %v3uint %6180 %388
       %6182 = OpConvertUToF %v3float %6181
       %6183 = OpExtInst %v3float %1 Fma %6182 %392 %282
       %6184 = OpDot %float %6183 %6161
       %6185 = OpConvertFToS %int %6033
       %6186 = OpFSub %v3float %6025 %138
       %6187 = OpCompositeConstruct %v3int %6185 %int_0 %int_0
       %6188 = OpBitcast %v3uint %6187
       %6189 = OpIMul %v3uint %6188 %403
       %6190 = OpIAdd %v3uint %6189 %405
       %6191 = OpCompositeExtract %uint %6190 1
       %6192 = OpCompositeExtract %uint %6190 2
       %6193 = OpIMul %uint %6191 %6192
       %6194 = OpCompositeExtract %uint %6190 0
       %6195 = OpIAdd %uint %6194 %6193
       %6196 = OpIMul %uint %6192 %6195
       %6197 = OpIAdd %uint %6191 %6196
       %6198 = OpIMul %uint %6195 %6197
       %6199 = OpIAdd %uint %6192 %6198
       %6200 = OpIMul %uint %6197 %6199
       %6201 = OpIAdd %uint %6195 %6200
       %6202 = OpCompositeInsert %v3uint %6201 %549 0
       %6203 = OpShiftRightLogical %v3uint %6202 %6052
       %6204 = OpCompositeExtract %uint %6203 0
       %6205 = OpCompositeConstruct %v3uint %6204 %6204 %6204
       %6206 = OpBitwiseAnd %v3uint %6205 %388
       %6207 = OpConvertUToF %v3float %6206
       %6208 = OpExtInst %v3float %1 Fma %6207 %392 %282
       %6209 = OpDot %float %6208 %6186
       %6210 = OpConvertFToS %int %6034
       %6211 = OpFSub %v3float %6025 %130
       %6212 = OpCompositeConstruct %v3int %6210 %int_0 %int_0
       %6213 = OpBitcast %v3uint %6212
       %6214 = OpIMul %v3uint %6213 %403
       %6215 = OpIAdd %v3uint %6214 %405
       %6216 = OpCompositeExtract %uint %6215 1
       %6217 = OpCompositeExtract %uint %6215 2
       %6218 = OpIMul %uint %6216 %6217
       %6219 = OpCompositeExtract %uint %6215 0
       %6220 = OpIAdd %uint %6219 %6218
       %6221 = OpIMul %uint %6217 %6220
       %6222 = OpIAdd %uint %6216 %6221
       %6223 = OpIMul %uint %6220 %6222
       %6224 = OpIAdd %uint %6217 %6223
       %6225 = OpIMul %uint %6222 %6224
       %6226 = OpIAdd %uint %6220 %6225
       %6227 = OpCompositeInsert %v3uint %6226 %549 0
       %6228 = OpShiftRightLogical %v3uint %6227 %6052
       %6229 = OpCompositeExtract %uint %6228 0
       %6230 = OpCompositeConstruct %v3uint %6229 %6229 %6229
       %6231 = OpBitwiseAnd %v3uint %6230 %388
       %6232 = OpConvertUToF %v3float %6231
       %6233 = OpExtInst %v3float %1 Fma %6232 %392 %282
       %6234 = OpDot %float %6233 %6211
       %6235 = OpCompositeExtract %float %6025 0
       %6236 = OpCompositeExtract %float %6025 1
       %6237 = OpCompositeExtract %float %6025 2
       %6238 = OpCompositeConstruct %v4float %6235 %6236 %6237 %float_0
       %6239 = OpFMul %v4float %6238 %6238
       %6240 = OpFMul %v4float %6239 %6238
       %6241 = OpVectorTimesScalar %v4float %6238 %float_6
       %6242 = OpFSub %v4float %6241 %383
       %6243 = OpExtInst %v4float %1 Fma %6238 %6242 %384
       %6244 = OpFMul %v4float %6240 %6243
       %6245 = OpCompositeExtract %float %6244 0
       %6246 = OpExtInst %float %1 FMix %6059 %6084 %6245
       %6247 = OpExtInst %float %1 FMix %6109 %6134 %6245
       %6248 = OpCompositeExtract %float %6244 1
       %6249 = OpExtInst %float %1 FMix %6246 %6247 %6248
       %6250 = OpExtInst %float %1 FMix %6159 %6184 %6245
       %6251 = OpExtInst %float %1 FMix %6209 %6234 %6245
       %6252 = OpExtInst %float %1 FMix %6250 %6251 %6248
       %6253 = OpCompositeExtract %float %6244 2
       %6254 = OpExtInst %float %1 FMix %6249 %6252 %6253
       %6255 = OpExtInst %float %1 FAbs %6254
       %6020 = OpExtInst %float %1 Fma %6255 %6017 %6019
       %6015 = OpVectorTimesScalar %v3float %6014 %float_2
       %6018 = OpFMul %float %6017 %float_0_5
       %6022 = OpIAdd %uint %6021 %uint_1
               OpBranch %6013
       %6024 = OpLabel
       %6256 = OpExtInst %float %1 FMix %float_0 %float_1 %6019
       %6257 = OpFMul %v3float %5715 %4149
       %6258 = OpFMul %v3float %4149 %5716
       %6259 = OpFMul %v3float %6258 %4154
       %6260 = OpCompositeExtract %float %6259 0
       %6261 = OpCompositeExtract %float %6259 1
       %6262 = OpCompositeExtract %float %6259 2
       %6263 = OpCompositeConstruct %v2float %6262 %6262
       %6264 = OpFAdd %v2float %4164 %6263
       %6265 = OpCompositeExtract %float %6264 0
       %6266 = OpCompositeConstruct %v3float %6260 %6261 %6265
       %6267 = OpVectorTimesScalar %v3float %6266 %float_4_76837158en07
       %6268 = OpFAdd %v3float %6267 %140
       %6269 = OpExtInst %v3float %1 Fma %6257 %4154 %6268
       %6270 = OpExtInst %v3float %1 Floor %6269
       %6271 = OpFNegate %v3float %6270
       %6272 = OpExtInst %v3float %1 Fma %6257 %4154 %6271
       %6273 = OpVectorTimesScalar %v3float %6272 %float_2097152
       %6274 = OpFAdd %v3float %6273 %6266
       %6275 = OpVectorTimesScalar %v3float %6274 %float_1
               OpBranch %6276
       %6276 = OpLabel
       %6277 = OpPhi %v3float %6275 %6024 %6278 %6279
       %6280 = OpPhi %float %float_1 %6024 %6281 %6279
       %6282 = OpPhi %float %float_0 %6024 %6283 %6279
       %6284 = OpPhi %uint %uint_0 %6024 %6285 %6279
       %6286 = OpULessThan %bool %6284 %uint_10
               OpLoopMerge %6287 %6279 DontUnroll
               OpBranchConditional %6286 %6279 %6287
       %6279 = OpLabel
       %6288 = OpExtInst %v3float %1 Fract %6277
       %6289 = OpExtInst %v3float %1 Floor %6277
       %6290 = OpDot %float %6289 %387
       %6291 = OpFAdd %float %6290 %float_19
       %6292 = OpFAdd %float %6290 %float_47
       %6293 = OpFAdd %float %6290 %float_66
       %6294 = OpFAdd %float %6290 %float_101
       %6295 = OpFAdd %float %6290 %float_120
       %6296 = OpFAdd %float %6290 %float_148
       %6297 = OpFAdd %float %6290 %float_167
       %6298 = OpConvertFToS %int %6290
       %6299 = OpCompositeConstruct %v3int %6298 %int_0 %int_0
       %6300 = OpBitcast %v3uint %6299
       %6301 = OpIMul %v3uint %6300 %403
       %6302 = OpIAdd %v3uint %6301 %405
       %6303 = OpCompositeExtract %uint %6302 1
       %6304 = OpCompositeExtract %uint %6302 2
       %6305 = OpIMul %uint %6303 %6304
       %6306 = OpCompositeExtract %uint %6302 0
       %6307 = OpIAdd %uint %6306 %6305
       %6308 = OpIMul %uint %6304 %6307
       %6309 = OpIAdd %uint %6303 %6308
       %6310 = OpIMul %uint %6307 %6309
       %6311 = OpIAdd %uint %6304 %6310
       %6312 = OpIMul %uint %6309 %6311
       %6313 = OpIAdd %uint %6307 %6312
       %6314 = OpCompositeInsert %v3uint %6313 %549 0
       %6315 = OpBitwiseAnd %v3uint %406 %407
       %6316 = OpShiftRightLogical %v3uint %6314 %6315
       %6317 = OpCompositeExtract %uint %6316 0
       %6318 = OpCompositeConstruct %v3uint %6317 %6317 %6317
       %6319 = OpBitwiseAnd %v3uint %6318 %388
       %6320 = OpConvertUToF %v3float %6319
       %6321 = OpExtInst %v3float %1 Fma %6320 %392 %282
       %6322 = OpDot %float %6321 %6288
       %6323 = OpConvertFToS %int %6291
       %6324 = OpFSub %v3float %6288 %351
       %6325 = OpCompositeConstruct %v3int %6323 %int_0 %int_0
       %6326 = OpBitcast %v3uint %6325
       %6327 = OpIMul %v3uint %6326 %403
       %6328 = OpIAdd %v3uint %6327 %405
       %6329 = OpCompositeExtract %uint %6328 1
       %6330 = OpCompositeExtract %uint %6328 2
       %6331 = OpIMul %uint %6329 %6330
       %6332 = OpCompositeExtract %uint %6328 0
       %6333 = OpIAdd %uint %6332 %6331
       %6334 = OpIMul %uint %6330 %6333
       %6335 = OpIAdd %uint %6329 %6334
       %6336 = OpIMul %uint %6333 %6335
       %6337 = OpIAdd %uint %6330 %6336
       %6338 = OpIMul %uint %6335 %6337
       %6339 = OpIAdd %uint %6333 %6338
       %6340 = OpCompositeInsert %v3uint %6339 %549 0
       %6341 = OpShiftRightLogical %v3uint %6340 %6315
       %6342 = OpCompositeExtract %uint %6341 0
       %6343 = OpCompositeConstruct %v3uint %6342 %6342 %6342
       %6344 = OpBitwiseAnd %v3uint %6343 %388
       %6345 = OpConvertUToF %v3float %6344
       %6346 = OpExtInst %v3float %1 Fma %6345 %392 %282
       %6347 = OpDot %float %6346 %6324
       %6348 = OpConvertFToS %int %6292
       %6349 = OpFSub %v3float %6288 %352
       %6350 = OpCompositeConstruct %v3int %6348 %int_0 %int_0
       %6351 = OpBitcast %v3uint %6350
       %6352 = OpIMul %v3uint %6351 %403
       %6353 = OpIAdd %v3uint %6352 %405
       %6354 = OpCompositeExtract %uint %6353 1
       %6355 = OpCompositeExtract %uint %6353 2
       %6356 = OpIMul %uint %6354 %6355
       %6357 = OpCompositeExtract %uint %6353 0
       %6358 = OpIAdd %uint %6357 %6356
       %6359 = OpIMul %uint %6355 %6358
       %6360 = OpIAdd %uint %6354 %6359
       %6361 = OpIMul %uint %6358 %6360
       %6362 = OpIAdd %uint %6355 %6361
       %6363 = OpIMul %uint %6360 %6362
       %6364 = OpIAdd %uint %6358 %6363
       %6365 = OpCompositeInsert %v3uint %6364 %549 0
       %6366 = OpShiftRightLogical %v3uint %6365 %6315
       %6367 = OpCompositeExtract %uint %6366 0
       %6368 = OpCompositeConstruct %v3uint %6367 %6367 %6367
       %6369 = OpBitwiseAnd %v3uint %6368 %388
       %6370 = OpConvertUToF %v3float %6369
       %6371 = OpExtInst %v3float %1 Fma %6370 %392 %282
       %6372 = OpDot %float %6371 %6349
       %6373 = OpConvertFToS %int %6293
       %6374 = OpFSub %v3float %6288 %137
       %6375 = OpCompositeConstruct %v3int %6373 %int_0 %int_0
       %6376 = OpBitcast %v3uint %6375
       %6377 = OpIMul %v3uint %6376 %403
       %6378 = OpIAdd %v3uint %6377 %405
       %6379 = OpCompositeExtract %uint %6378 1
       %6380 = OpCompositeExtract %uint %6378 2
       %6381 = OpIMul %uint %6379 %6380
       %6382 = OpCompositeExtract %uint %6378 0
       %6383 = OpIAdd %uint %6382 %6381
       %6384 = OpIMul %uint %6380 %6383
       %6385 = OpIAdd %uint %6379 %6384
       %6386 = OpIMul %uint %6383 %6385
       %6387 = OpIAdd %uint %6380 %6386
       %6388 = OpIMul %uint %6385 %6387
       %6389 = OpIAdd %uint %6383 %6388
       %6390 = OpCompositeInsert %v3uint %6389 %549 0
       %6391 = OpShiftRightLogical %v3uint %6390 %6315
       %6392 = OpCompositeExtract %uint %6391 0
       %6393 = OpCompositeConstruct %v3uint %6392 %6392 %6392
       %6394 = OpBitwiseAnd %v3uint %6393 %388
       %6395 = OpConvertUToF %v3float %6394
       %6396 = OpExtInst %v3float %1 Fma %6395 %392 %282
       %6397 = OpDot %float %6396 %6374
       %6398 = OpConvertFToS %int %6294
       %6399 = OpFSub %v3float %6288 %294
       %6400 = OpCompositeConstruct %v3int %6398 %int_0 %int_0
       %6401 = OpBitcast %v3uint %6400
       %6402 = OpIMul %v3uint %6401 %403
       %6403 = OpIAdd %v3uint %6402 %405
       %6404 = OpCompositeExtract %uint %6403 1
       %6405 = OpCompositeExtract %uint %6403 2
       %6406 = OpIMul %uint %6404 %6405
       %6407 = OpCompositeExtract %uint %6403 0
       %6408 = OpIAdd %uint %6407 %6406
       %6409 = OpIMul %uint %6405 %6408
       %6410 = OpIAdd %uint %6404 %6409
       %6411 = OpIMul %uint %6408 %6410
       %6412 = OpIAdd %uint %6405 %6411
       %6413 = OpIMul %uint %6410 %6412
       %6414 = OpIAdd %uint %6408 %6413
       %6415 = OpCompositeInsert %v3uint %6414 %549 0
       %6416 = OpShiftRightLogical %v3uint %6415 %6315
       %6417 = OpCompositeExtract %uint %6416 0
       %6418 = OpCompositeConstruct %v3uint %6417 %6417 %6417
       %6419 = OpBitwiseAnd %v3uint %6418 %388
       %6420 = OpConvertUToF %v3float %6419
       %6421 = OpExtInst %v3float %1 Fma %6420 %392 %282
       %6422 = OpDot %float %6421 %6399
       %6423 = OpConvertFToS %int %6295
       %6424 = OpFSub %v3float %6288 %143
       %6425 = OpCompositeConstruct %v3int %6423 %int_0 %int_0
       %6426 = OpBitcast %v3uint %6425
       %6427 = OpIMul %v3uint %6426 %403
       %6428 = OpIAdd %v3uint %6427 %405
       %6429 = OpCompositeExtract %uint %6428 1
       %6430 = OpCompositeExtract %uint %6428 2
       %6431 = OpIMul %uint %6429 %6430
       %6432 = OpCompositeExtract %uint %6428 0
       %6433 = OpIAdd %uint %6432 %6431
       %6434 = OpIMul %uint %6430 %6433
       %6435 = OpIAdd %uint %6429 %6434
       %6436 = OpIMul %uint %6433 %6435
       %6437 = OpIAdd %uint %6430 %6436
       %6438 = OpIMul %uint %6435 %6437
       %6439 = OpIAdd %uint %6433 %6438
       %6440 = OpCompositeInsert %v3uint %6439 %549 0
       %6441 = OpShiftRightLogical %v3uint %6440 %6315
       %6442 = OpCompositeExtract %uint %6441 0
       %6443 = OpCompositeConstruct %v3uint %6442 %6442 %6442
       %6444 = OpBitwiseAnd %v3uint %6443 %388
       %6445 = OpConvertUToF %v3float %6444
       %6446 = OpExtInst %v3float %1 Fma %6445 %392 %282
       %6447 = OpDot %float %6446 %6424
       %6448 = OpConvertFToS %int %6296
       %6449 = OpFSub %v3float %6288 %138
       %6450 = OpCompositeConstruct %v3int %6448 %int_0 %int_0
       %6451 = OpBitcast %v3uint %6450
       %6452 = OpIMul %v3uint %6451 %403
       %6453 = OpIAdd %v3uint %6452 %405
       %6454 = OpCompositeExtract %uint %6453 1
       %6455 = OpCompositeExtract %uint %6453 2
       %6456 = OpIMul %uint %6454 %6455
       %6457 = OpCompositeExtract %uint %6453 0
       %6458 = OpIAdd %uint %6457 %6456
       %6459 = OpIMul %uint %6455 %6458
       %6460 = OpIAdd %uint %6454 %6459
       %6461 = OpIMul %uint %6458 %6460
       %6462 = OpIAdd %uint %6455 %6461
       %6463 = OpIMul %uint %6460 %6462
       %6464 = OpIAdd %uint %6458 %6463
       %6465 = OpCompositeInsert %v3uint %6464 %549 0
       %6466 = OpShiftRightLogical %v3uint %6465 %6315
       %6467 = OpCompositeExtract %uint %6466 0
       %6468 = OpCompositeConstruct %v3uint %6467 %6467 %6467
       %6469 = OpBitwiseAnd %v3uint %6468 %388
       %6470 = OpConvertUToF %v3float %6469
       %6471 = OpExtInst %v3float %1 Fma %6470 %392 %282
       %6472 = OpDot %float %6471 %6449
       %6473 = OpConvertFToS %int %6297
       %6474 = OpFSub %v3float %6288 %130
       %6475 = OpCompositeConstruct %v3int %6473 %int_0 %int_0
       %6476 = OpBitcast %v3uint %6475
       %6477 = OpIMul %v3uint %6476 %403
       %6478 = OpIAdd %v3uint %6477 %405
       %6479 = OpCompositeExtract %uint %6478 1
       %6480 = OpCompositeExtract %uint %6478 2
       %6481 = OpIMul %uint %6479 %6480
       %6482 = OpCompositeExtract %uint %6478 0
       %6483 = OpIAdd %uint %6482 %6481
       %6484 = OpIMul %uint %6480 %6483
       %6485 = OpIAdd %uint %6479 %6484
       %6486 = OpIMul %uint %6483 %6485
       %6487 = OpIAdd %uint %6480 %6486
       %6488 = OpIMul %uint %6485 %6487
       %6489 = OpIAdd %uint %6483 %6488
       %6490 = OpCompositeInsert %v3uint %6489 %549 0
       %6491 = OpShiftRightLogical %v3uint %6490 %6315
       %6492 = OpCompositeExtract %uint %6491 0
       %6493 = OpCompositeConstruct %v3uint %6492 %6492 %6492
       %6494 = OpBitwiseAnd %v3uint %6493 %388
       %6495 = OpConvertUToF %v3float %6494
       %6496 = OpExtInst %v3float %1 Fma %6495 %392 %282
       %6497 = OpDot %float %6496 %6474
       %6498 = OpCompositeExtract %float %6288 0
       %6499 = OpCompositeExtract %float %6288 1
       %6500 = OpCompositeExtract %float %6288 2
       %6501 = OpCompositeConstruct %v4float %6498 %6499 %6500 %float_0
       %6502 = OpFMul %v4float %6501 %6501
       %6503 = OpFMul %v4float %6502 %6501
       %6504 = OpVectorTimesScalar %v4float %6501 %float_6
       %6505 = OpFSub %v4float %6504 %383
       %6506 = OpExtInst %v4float %1 Fma %6501 %6505 %384
       %6507 = OpFMul %v4float %6503 %6506
       %6508 = OpCompositeExtract %float %6507 0
       %6509 = OpExtInst %float %1 FMix %6322 %6347 %6508
       %6510 = OpExtInst %float %1 FMix %6372 %6397 %6508
       %6511 = OpCompositeExtract %float %6507 1
       %6512 = OpExtInst %float %1 FMix %6509 %6510 %6511
       %6513 = OpExtInst %float %1 FMix %6422 %6447 %6508
       %6514 = OpExtInst %float %1 FMix %6472 %6497 %6508
       %6515 = OpExtInst %float %1 FMix %6513 %6514 %6511
       %6516 = OpCompositeExtract %float %6507 2
       %6517 = OpExtInst %float %1 FMix %6512 %6515 %6516
       %6518 = OpExtInst %float %1 FAbs %6517
       %6283 = OpExtInst %float %1 Fma %6518 %6280 %6282
       %6278 = OpVectorTimesScalar %v3float %6277 %float_2
       %6281 = OpFMul %float %6280 %float_0_5
       %6285 = OpIAdd %uint %6284 %uint_1
               OpBranch %6276
       %6287 = OpLabel
       %6519 = OpExtInst %float %1 FMix %float_0 %float_1 %6282
       %6520 = OpExtInst %float %1 Fma %6519 %4423 %4425
       %6521 = OpFMul %float %6256 %6520
       %6522 = OpExtInst %float %1 FMix %3866 %3871 %6521
       %6523 = OpExtInst %float %1 Sin %5993
       %6524 = OpFMul %float %6523 %6522
       %6525 = OpFAdd %v3float %5693 %2559
       %6526 = OpExtInst %v3float %1 NMax %6525 %282
       %6527 = OpExtInst %v3float %1 NMin %6526 %130
       %6528 = OpCompositeExtract %float %6527 0
       %6529 = OpCompositeExtract %float %6527 1
       %6530 = OpCompositeConstruct %v2float %6528 %6529
       %6531 = OpFMul %v2float %1694 %6530
       %6532 = OpFMul %v2float %6530 %1695
       %6533 = OpCompositeExtract %float %6531 0
       %6534 = OpCompositeExtract %float %6532 0
       %6535 = OpCompositeExtract %float %6531 1
       %6536 = OpCompositeExtract %float %6532 1
       %6537 = OpFAdd %float %6533 %6535
       %6538 = OpFAdd %float %6534 %6536
       %6539 = OpFMul %float %5710 %4446
       %6540 = OpFDiv %float %float_2 %6539
       %6541 = OpFMul %float %6537 %6540
       %6542 = OpFMul %float %6540 %4451
       %6543 = OpFMul %float %6542 %5981
       %6544 = OpExtInst %float %1 Fma %6538 %6540 %6543
       %6545 = OpExtInst %float %1 Floor %6541
       %6546 = OpFNegate %float %6545
       %6547 = OpExtInst %float %1 Fma %6537 %6540 %6546
       %6548 = OpExtInst %float %1 Fma %6547 %float_2097152 %6544
       %6549 = OpExtInst %float %1 Floor %6548
       %6550 = OpFMul %float %6545 %float_n6_28318548
       %6551 = OpExtInst %float %1 Fma %6541 %float_6_28318548 %6550
       %6552 = OpFMul %float %6549 %float_n6_28318548
       %6553 = OpExtInst %float %1 Fma %6544 %float_6_28318548 %6552
       %6554 = OpExtInst %float %1 Fma %6551 %float_2097152 %6553
       %6555 = OpFMul %float %6522 %2592
       %6556 = OpExtInst %float %1 Sin %6554
       %6557 = OpFMul %float %6556 %6555
       %6558 = OpCompositeConstruct %v3float %548 %548 %6524
       %6559 = OpCompositeConstruct %v3float %548 %548 %6557
       %6560 = OpFAdd %v3float %6558 %6559
       %6561 = OpFSub %v3float %5693 %1686
       %6562 = OpExtInst %v3float %1 NMax %6561 %282
       %6563 = OpExtInst %v3float %1 NMin %6562 %130
       %6564 = OpCompositeExtract %float %6563 0
       %6565 = OpCompositeExtract %float %6563 1
       %6566 = OpCompositeConstruct %v2float %6564 %6565
       %6567 = OpFMul %v2float %1694 %6566
       %6568 = OpFMul %v2float %6566 %1695
       %6569 = OpCompositeExtract %float %6567 0
       %6570 = OpCompositeExtract %float %6568 0
       %6571 = OpCompositeExtract %float %6567 1
       %6572 = OpCompositeExtract %float %6568 1
       %6573 = OpFAdd %float %6569 %6571
       %6574 = OpFAdd %float %6570 %6572
       %6575 = OpFMul %float %6539 %4446
       %6576 = OpFDiv %float %float_2 %6575
       %6577 = OpFMul %float %6573 %6576
       %6578 = OpFMul %float %6576 %4489
       %6579 = OpFMul %float %6578 %5981
       %6580 = OpExtInst %float %1 Fma %6574 %6576 %6579
       %6581 = OpExtInst %float %1 Floor %6577
       %6582 = OpFNegate %float %6581
       %6583 = OpExtInst %float %1 Fma %6573 %6576 %6582
       %6584 = OpExtInst %float %1 Fma %6583 %float_2097152 %6580
       %6585 = OpExtInst %float %1 Floor %6584
       %6586 = OpFMul %float %6581 %float_n6_28318548
       %6587 = OpExtInst %float %1 Fma %6577 %float_6_28318548 %6586
       %6588 = OpFMul %float %6585 %float_n6_28318548
       %6589 = OpExtInst %float %1 Fma %6580 %float_6_28318548 %6588
       %6590 = OpExtInst %float %1 Fma %6587 %float_2097152 %6589
       %6591 = OpFMul %float %6555 %2592
       %6592 = OpExtInst %float %1 Sin %6590
       %6593 = OpFMul %float %6592 %6591
       %6594 = OpCompositeConstruct %v3float %548 %548 %6593
       %6595 = OpFAdd %v3float %6560 %6594
       %6596 = OpFSub %v3float %5693 %2559
       %6597 = OpExtInst %v3float %1 NMax %6596 %282
       %6598 = OpExtInst %v3float %1 NMin %6597 %130
       %6599 = OpCompositeExtract %float %6598 0
       %6600 = OpCompositeExtract %float %6598 1
       %6601 = OpCompositeConstruct %v2float %6599 %6600
       %6602 = OpFMul %v2float %1694 %6601
       %6603 = OpFMul %v2float %6601 %1695
       %6604 = OpCompositeExtract %float %6602 0
       %6605 = OpCompositeExtract %float %6603 0
       %6606 = OpCompositeExtract %float %6602 1
       %6607 = OpCompositeExtract %float %6603 1
       %6608 = OpFAdd %float %6604 %6606
       %6609 = OpFAdd %float %6605 %6607
       %6610 = OpFMul %float %6575 %4446
       %6611 = OpFDiv %float %float_2 %6610
       %6612 = OpFMul %float %6608 %6611
       %6613 = OpFMul %float %6611 %4526
       %6614 = OpFMul %float %6613 %5981
       %6615 = OpExtInst %float %1 Fma %6609 %6611 %6614
       %6616 = OpExtInst %float %1 Floor %6612
       %6617 = OpFNegate %float %6616
       %6618 = OpExtInst %float %1 Fma %6608 %6611 %6617
       %6619 = OpExtInst %float %1 Fma %6618 %float_2097152 %6615
       %6620 = OpExtInst %float %1 Floor %6619
       %6621 = OpFMul %float %6616 %float_n6_28318548
       %6622 = OpExtInst %float %1 Fma %6612 %float_6_28318548 %6621
       %6623 = OpFMul %float %6620 %float_n6_28318548
       %6624 = OpExtInst %float %1 Fma %6615 %float_6_28318548 %6623
       %6625 = OpExtInst %float %1 Fma %6622 %float_2097152 %6624
       %6626 = OpFMul %float %6591 %2592
       %6627 = OpExtInst %float %1 Sin %6625
       %6628 = OpFMul %float %6627 %6626
       %6629 = OpCompositeConstruct %v3float %548 %548 %6628
       %6630 = OpFAdd %v3float %6595 %6629
       %6631 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_3
       %6632 = OpLoad %float %6631
       %6633 = OpFSub %float %6632 %float_n1
       %6634 = OpExtInst %float %1 FAbs %6633
       %6635 = OpFOrdGreaterThan %bool %6634 %float_9_99999975en06
       %6636 = OpFOrdGreaterThanEqual %bool %6632 %float_n1
       %6637 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_0
       %6638 = OpLoad %float %6637
       %6639 = OpSelect %float %6636 %6632 %6638
       %6640 = OpSelect %float %6635 %6639 %6632
       %6641 = OpFSub %float %6640 %float_1
       %6642 = OpExtInst %float %1 FAbs %6641
       %6643 = OpFOrdGreaterThan %bool %6642 %float_9_99999975en06
       %6644 = OpFOrdGreaterThanEqual %bool %6640 %float_1
       %6645 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_1
       %6646 = OpLoad %float %6645
       %6647 = OpSelect %float %6644 %6646 %6632
       %6648 = OpSelect %float %6643 %6647 %6632
       %6649 = OpExtInst %float %1 FAbs %6648
       %6650 = OpFOrdGreaterThan %bool %6649 %float_9_99999975en06
       %6651 = OpFOrdGreaterThanEqual %bool %6648 %float_0
       %6652 = OpSelect %float %6651 %float_1 %float_n1
       %6653 = OpSelect %float %6650 %6652 %float_1
       %6654 = OpExtInst %float %1 NMax %6653 %float_n1
       %6655 = OpExtInst %float %1 NMin %6654 %float_1
       %6656 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_80 %int_2
       %6657 = OpLoad %float %6656
       %6658 = OpCompositeConstruct %v3float %6655 %6657 %float_0
       %6659 = OpFAdd %v3float %6658 %1686
       %6660 = OpExtInst %v3float %1 NMax %6659 %282
       %6661 = OpExtInst %v3float %1 NMin %6660 %130
       %6662 = OpCompositeExtract %float %6661 0
       %6663 = OpCompositeExtract %float %6661 1
       %6664 = OpCompositeConstruct %v2float %6662 %6663
       %6665 = OpFMul %v2float %1694 %6664
       %6666 = OpFMul %v2float %6664 %1695
       %6667 = OpCompositeExtract %float %6665 0
       %6668 = OpCompositeExtract %float %6666 0
       %6669 = OpCompositeExtract %float %6665 1
       %6670 = OpCompositeExtract %float %6666 1
       %6671 = OpFAdd %float %6667 %6669
       %6672 = OpFAdd %float %6668 %6670
       %6673 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_81 %int_3
       %6674 = OpLoad %float %6673
       %6675 = OpFMul %float %6674 %4589
       %6676 = OpFDiv %float %float_2 %6675
       %6677 = OpFMul %float %6671 %6676
       %6678 = OpFMul %float %6676 %4596
       %6679 = OpFMul %float %6678 %5981
       %6680 = OpExtInst %float %1 Fma %6672 %6676 %6679
       %6681 = OpExtInst %float %1 Floor %6677
       %6682 = OpFNegate %float %6681
       %6683 = OpExtInst %float %1 Fma %6671 %6676 %6682
       %6684 = OpExtInst %float %1 Fma %6683 %float_2097152 %6680
       %6685 = OpExtInst %float %1 Floor %6684
       %6686 = OpFMul %float %6681 %float_n6_28318548
       %6687 = OpExtInst %float %1 Fma %6677 %float_6_28318548 %6686
       %6688 = OpFMul %float %6685 %float_n6_28318548
       %6689 = OpExtInst %float %1 Fma %6680 %float_6_28318548 %6688
       %6690 = OpExtInst %float %1 Fma %6687 %float_2097152 %6689
       %6691 = OpFMul %float %6522 %2731
       %6692 = OpExtInst %float %1 Sin %6690
       %6693 = OpFMul %float %6692 %6691
       %6694 = OpFAdd %v3float %6658 %2559
       %6695 = OpExtInst %v3float %1 NMax %6694 %282
       %6696 = OpExtInst %v3float %1 NMin %6695 %130
       %6697 = OpCompositeExtract %float %6696 0
       %6698 = OpCompositeExtract %float %6696 1
       %6699 = OpCompositeConstruct %v2float %6697 %6698
       %6700 = OpFMul %v2float %1694 %6699
       %6701 = OpFMul %v2float %6699 %1695
       %6702 = OpCompositeExtract %float %6700 0
       %6703 = OpCompositeExtract %float %6701 0
       %6704 = OpCompositeExtract %float %6700 1
       %6705 = OpCompositeExtract %float %6701 1
       %6706 = OpFAdd %float %6702 %6704
       %6707 = OpFAdd %float %6703 %6705
       %6708 = OpFMul %float %6675 %4446
       %6709 = OpFDiv %float %float_2 %6708
       %6710 = OpFMul %float %6706 %6709
       %6711 = OpFMul %float %6709 %4631
       %6712 = OpFMul %float %6711 %5981
       %6713 = OpExtInst %float %1 Fma %6707 %6709 %6712
       %6714 = OpExtInst %float %1 Floor %6710
       %6715 = OpFNegate %float %6714
       %6716 = OpExtInst %float %1 Fma %6706 %6709 %6715
       %6717 = OpExtInst %float %1 Fma %6716 %float_2097152 %6713
       %6718 = OpExtInst %float %1 Floor %6717
       %6719 = OpFMul %float %6714 %float_n6_28318548
       %6720 = OpExtInst %float %1 Fma %6710 %float_6_28318548 %6719
       %6721 = OpFMul %float %6718 %float_n6_28318548
       %6722 = OpExtInst %float %1 Fma %6713 %float_6_28318548 %6721
       %6723 = OpExtInst %float %1 Fma %6720 %float_2097152 %6722
       %6724 = OpFMul %float %6691 %2592
       %6725 = OpExtInst %float %1 Sin %6723
       %6726 = OpFMul %float %6725 %6724
       %6727 = OpCompositeConstruct %v3float %548 %548 %6693
       %6728 = OpCompositeConstruct %v3float %548 %548 %6726
       %6729 = OpFAdd %v3float %6727 %6728
       %6730 = OpFSub %v3float %6658 %1686
       %6731 = OpExtInst %v3float %1 NMax %6730 %282
       %6732 = OpExtInst %v3float %1 NMin %6731 %130
       %6733 = OpCompositeExtract %float %6732 0
       %6734 = OpCompositeExtract %float %6732 1
       %6735 = OpCompositeConstruct %v2float %6733 %6734
       %6736 = OpFMul %v2float %1694 %6735
       %6737 = OpFMul %v2float %6735 %1695
       %6738 = OpCompositeExtract %float %6736 0
       %6739 = OpCompositeExtract %float %6737 0
       %6740 = OpCompositeExtract %float %6736 1
       %6741 = OpCompositeExtract %float %6737 1
       %6742 = OpFAdd %float %6738 %6740
       %6743 = OpFAdd %float %6739 %6741
       %6744 = OpFMul %float %6708 %4446
       %6745 = OpFDiv %float %float_2 %6744
       %6746 = OpFMul %float %6742 %6745
       %6747 = OpFMul %float %6745 %4669
       %6748 = OpFMul %float %6747 %5981
       %6749 = OpExtInst %float %1 Fma %6743 %6745 %6748
       %6750 = OpExtInst %float %1 Floor %6746
       %6751 = OpFNegate %float %6750
       %6752 = OpExtInst %float %1 Fma %6742 %6745 %6751
       %6753 = OpExtInst %float %1 Fma %6752 %float_2097152 %6749
       %6754 = OpExtInst %float %1 Floor %6753
       %6755 = OpFMul %float %6750 %float_n6_28318548
       %6756 = OpExtInst %float %1 Fma %6746 %float_6_28318548 %6755
       %6757 = OpFMul %float %6754 %float_n6_28318548
       %6758 = OpExtInst %float %1 Fma %6749 %float_6_28318548 %6757
       %6759 = OpExtInst %float %1 Fma %6756 %float_2097152 %6758
       %6760 = OpFMul %float %6724 %2592
       %6761 = OpExtInst %float %1 Sin %6759
       %6762 = OpFMul %float %6761 %6760
       %6763 = OpCompositeConstruct %v3float %548 %548 %6762
       %6764 = OpFAdd %v3float %6729 %6763
       %6765 = OpFSub %v3float %6658 %2559
       %6766 = OpExtInst %v3float %1 NMax %6765 %282
       %6767 = OpExtInst %v3float %1 NMin %6766 %130
       %6768 = OpCompositeExtract %float %6767 0
       %6769 = OpCompositeExtract %float %6767 1
       %6770 = OpCompositeConstruct %v2float %6768 %6769
       %6771 = OpFMul %v2float %1694 %6770
       %6772 = OpFMul %v2float %6770 %1695
       %6773 = OpCompositeExtract %float %6771 0
       %6774 = OpCompositeExtract %float %6772 0
       %6775 = OpCompositeExtract %float %6771 1
       %6776 = OpCompositeExtract %float %6772 1
       %6777 = OpFAdd %float %6773 %6775
       %6778 = OpFAdd %float %6774 %6776
       %6779 = OpFMul %float %6744 %4446
       %6780 = OpFDiv %float %float_2 %6779
       %6781 = OpFMul %float %6777 %6780
       %6782 = OpFMul %float %6780 %4706
       %6783 = OpFMul %float %6782 %5981
       %6784 = OpExtInst %float %1 Fma %6778 %6780 %6783
       %6785 = OpExtInst %float %1 Floor %6781
       %6786 = OpFNegate %float %6785
       %6787 = OpExtInst %float %1 Fma %6777 %6780 %6786
       %6788 = OpExtInst %float %1 Fma %6787 %float_2097152 %6784
       %6789 = OpExtInst %float %1 Floor %6788
       %6790 = OpFMul %float %6785 %float_n6_28318548
       %6791 = OpExtInst %float %1 Fma %6781 %float_6_28318548 %6790
       %6792 = OpFMul %float %6789 %float_n6_28318548
       %6793 = OpExtInst %float %1 Fma %6784 %float_6_28318548 %6792
       %6794 = OpExtInst %float %1 Fma %6791 %float_2097152 %6793
       %6795 = OpFMul %float %6760 %2592
       %6796 = OpExtInst %float %1 Sin %6794
       %6797 = OpFMul %float %6796 %6795
       %6798 = OpCompositeConstruct %v3float %548 %548 %6797
       %6799 = OpFAdd %v3float %6764 %6798
       %6800 = OpFAdd %v3float %6630 %6799
       %6801 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_82 %int_0
       %6802 = OpLoad %float %6801
       %6803 = OpFSub %float %6802 %float_n1
       %6804 = OpExtInst %float %1 FAbs %6803
       %6805 = OpFOrdGreaterThan %bool %6804 %float_9_99999975en06
       %6806 = OpFOrdGreaterThanEqual %bool %6802 %float_n1
       %6807 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_82 %int_1
       %6808 = OpLoad %float %6807
       %6809 = OpSelect %float %6806 %6802 %6808
       %6810 = OpSelect %float %6805 %6809 %6802
       %6811 = OpFSub %float %6810 %float_1
       %6812 = OpExtInst %float %1 FAbs %6811
       %6813 = OpFOrdGreaterThan %bool %6812 %float_9_99999975en06
       %6814 = OpFOrdGreaterThanEqual %bool %6810 %float_1
       %6815 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_82 %int_2
       %6816 = OpLoad %float %6815
       %6817 = OpSelect %float %6814 %6816 %6802
       %6818 = OpSelect %float %6813 %6817 %6802
       %6819 = OpExtInst %float %1 FAbs %6818
       %6820 = OpFOrdGreaterThan %bool %6819 %float_9_99999975en06
       %6821 = OpFOrdGreaterThanEqual %bool %6818 %float_0
       %6822 = OpSelect %float %6821 %float_1 %float_n1
       %6823 = OpSelect %float %6820 %6822 %float_1
       %6824 = OpExtInst %float %1 NMax %6823 %float_n1
       %6825 = OpExtInst %float %1 NMin %6824 %float_1
       %6826 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_83 %int_3
       %6827 = OpLoad %float %6826
       %6828 = OpCompositeConstruct %v3float %6825 %6827 %float_0
       %6829 = OpFAdd %v3float %6828 %1686
       %6830 = OpExtInst %v3float %1 NMax %6829 %282
       %6831 = OpExtInst %v3float %1 NMin %6830 %130
       %6832 = OpCompositeExtract %float %6831 0
       %6833 = OpCompositeExtract %float %6831 1
       %6834 = OpCompositeConstruct %v2float %6832 %6833
       %6835 = OpFMul %v2float %1694 %6834
       %6836 = OpFMul %v2float %6834 %1695
       %6837 = OpCompositeExtract %float %6835 0
       %6838 = OpCompositeExtract %float %6836 0
       %6839 = OpCompositeExtract %float %6835 1
       %6840 = OpCompositeExtract %float %6836 1
       %6841 = OpFAdd %float %6837 %6839
       %6842 = OpFAdd %float %6838 %6840
       %6843 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_85 %int_0
       %6844 = OpLoad %float %6843
       %6845 = OpFMul %float %6844 %4589
       %6846 = OpFDiv %float %float_2 %6845
       %6847 = OpFMul %float %6841 %6846
       %6848 = OpFMul %float %6846 %4596
       %6849 = OpFMul %float %6848 %5981
       %6850 = OpExtInst %float %1 Fma %6842 %6846 %6849
       %6851 = OpExtInst %float %1 Floor %6847
       %6852 = OpFNegate %float %6851
       %6853 = OpExtInst %float %1 Fma %6841 %6846 %6852
       %6854 = OpExtInst %float %1 Fma %6853 %float_2097152 %6850
       %6855 = OpExtInst %float %1 Floor %6854
       %6856 = OpFMul %float %6851 %float_n6_28318548
       %6857 = OpExtInst %float %1 Fma %6847 %float_6_28318548 %6856
       %6858 = OpFMul %float %6855 %float_n6_28318548
       %6859 = OpExtInst %float %1 Fma %6850 %float_6_28318548 %6858
       %6860 = OpExtInst %float %1 Fma %6857 %float_2097152 %6859
       %6861 = OpExtInst %float %1 Sin %6860
       %6862 = OpFMul %float %6861 %6691
       %6863 = OpFAdd %v3float %6828 %2559
       %6864 = OpExtInst %v3float %1 NMax %6863 %282
       %6865 = OpExtInst %v3float %1 NMin %6864 %130
       %6866 = OpCompositeExtract %float %6865 0
       %6867 = OpCompositeExtract %float %6865 1
       %6868 = OpCompositeConstruct %v2float %6866 %6867
       %6869 = OpFMul %v2float %1694 %6868
       %6870 = OpFMul %v2float %6868 %1695
       %6871 = OpCompositeExtract %float %6869 0
       %6872 = OpCompositeExtract %float %6870 0
       %6873 = OpCompositeExtract %float %6869 1
       %6874 = OpCompositeExtract %float %6870 1
       %6875 = OpFAdd %float %6871 %6873
       %6876 = OpFAdd %float %6872 %6874
       %6877 = OpFMul %float %6845 %4446
       %6878 = OpFDiv %float %float_2 %6877
       %6879 = OpFMul %float %6875 %6878
       %6880 = OpFMul %float %6878 %4631
       %6881 = OpFMul %float %6880 %5981
       %6882 = OpExtInst %float %1 Fma %6876 %6878 %6881
       %6883 = OpExtInst %float %1 Floor %6879
       %6884 = OpFNegate %float %6883
       %6885 = OpExtInst %float %1 Fma %6875 %6878 %6884
       %6886 = OpExtInst %float %1 Fma %6885 %float_2097152 %6882
       %6887 = OpExtInst %float %1 Floor %6886
       %6888 = OpFMul %float %6883 %float_n6_28318548
       %6889 = OpExtInst %float %1 Fma %6879 %float_6_28318548 %6888
       %6890 = OpFMul %float %6887 %float_n6_28318548
       %6891 = OpExtInst %float %1 Fma %6882 %float_6_28318548 %6890
       %6892 = OpExtInst %float %1 Fma %6889 %float_2097152 %6891
       %6893 = OpExtInst %float %1 Sin %6892
       %6894 = OpFMul %float %6893 %6724
       %6895 = OpCompositeConstruct %v3float %548 %548 %6862
       %6896 = OpCompositeConstruct %v3float %548 %548 %6894
       %6897 = OpFAdd %v3float %6895 %6896
       %6898 = OpFSub %v3float %6828 %1686
       %6899 = OpExtInst %v3float %1 NMax %6898 %282
       %6900 = OpExtInst %v3float %1 NMin %6899 %130
       %6901 = OpCompositeExtract %float %6900 0
       %6902 = OpCompositeExtract %float %6900 1
       %6903 = OpCompositeConstruct %v2float %6901 %6902
       %6904 = OpFMul %v2float %1694 %6903
       %6905 = OpFMul %v2float %6903 %1695
       %6906 = OpCompositeExtract %float %6904 0
       %6907 = OpCompositeExtract %float %6905 0
       %6908 = OpCompositeExtract %float %6904 1
       %6909 = OpCompositeExtract %float %6905 1
       %6910 = OpFAdd %float %6906 %6908
       %6911 = OpFAdd %float %6907 %6909
       %6912 = OpFMul %float %6877 %4446
       %6913 = OpFDiv %float %float_2 %6912
       %6914 = OpFMul %float %6910 %6913
       %6915 = OpFMul %float %6913 %4669
       %6916 = OpFMul %float %6915 %5981
       %6917 = OpExtInst %float %1 Fma %6911 %6913 %6916
       %6918 = OpExtInst %float %1 Floor %6914
       %6919 = OpFNegate %float %6918
       %6920 = OpExtInst %float %1 Fma %6910 %6913 %6919
       %6921 = OpExtInst %float %1 Fma %6920 %float_2097152 %6917
       %6922 = OpExtInst %float %1 Floor %6921
       %6923 = OpFMul %float %6918 %float_n6_28318548
       %6924 = OpExtInst %float %1 Fma %6914 %float_6_28318548 %6923
       %6925 = OpFMul %float %6922 %float_n6_28318548
       %6926 = OpExtInst %float %1 Fma %6917 %float_6_28318548 %6925
       %6927 = OpExtInst %float %1 Fma %6924 %float_2097152 %6926
       %6928 = OpExtInst %float %1 Sin %6927
       %6929 = OpFMul %float %6928 %6760
       %6930 = OpCompositeConstruct %v3float %548 %548 %6929
       %6931 = OpFAdd %v3float %6897 %6930
       %6932 = OpFSub %v3float %6828 %2559
       %6933 = OpExtInst %v3float %1 NMax %6932 %282
       %6934 = OpExtInst %v3float %1 NMin %6933 %130
       %6935 = OpCompositeExtract %float %6934 0
       %6936 = OpCompositeExtract %float %6934 1
       %6937 = OpCompositeConstruct %v2float %6935 %6936
       %6938 = OpFMul %v2float %1694 %6937
       %6939 = OpFMul %v2float %6937 %1695
       %6940 = OpCompositeExtract %float %6938 0
       %6941 = OpCompositeExtract %float %6939 0
       %6942 = OpCompositeExtract %float %6938 1
       %6943 = OpCompositeExtract %float %6939 1
       %6944 = OpFAdd %float %6940 %6942
       %6945 = OpFAdd %float %6941 %6943
       %6946 = OpFMul %float %6912 %4446
       %6947 = OpFDiv %float %float_2 %6946
       %6948 = OpFMul %float %6944 %6947
       %6949 = OpFMul %float %6947 %4706
       %6950 = OpFMul %float %6949 %5981
       %6951 = OpExtInst %float %1 Fma %6945 %6947 %6950
       %6952 = OpExtInst %float %1 Floor %6948
       %6953 = OpFNegate %float %6952
       %6954 = OpExtInst %float %1 Fma %6944 %6947 %6953
       %6955 = OpExtInst %float %1 Fma %6954 %float_2097152 %6951
       %6956 = OpExtInst %float %1 Floor %6955
       %6957 = OpFMul %float %6952 %float_n6_28318548
       %6958 = OpExtInst %float %1 Fma %6948 %float_6_28318548 %6957
       %6959 = OpFMul %float %6956 %float_n6_28318548
       %6960 = OpExtInst %float %1 Fma %6951 %float_6_28318548 %6959
       %6961 = OpExtInst %float %1 Fma %6958 %float_2097152 %6960
       %6962 = OpExtInst %float %1 Sin %6961
       %6963 = OpFMul %float %6962 %6795
       %6964 = OpCompositeConstruct %v3float %548 %548 %6963
       %6965 = OpFAdd %v3float %6931 %6964
       %6966 = OpFAdd %v3float %6800 %6965
       %6967 = OpFMul %float %3564 %float_8
       %6968 = OpFMul %float %5709 %6967
       %6969 = OpFDiv %float %float_2 %6968
       %6970 = OpFMul %float %5706 %6969
       %6971 = OpFMul %float %6969 %4897
       %6972 = OpFMul %float %6971 %5981
       %6973 = OpExtInst %float %1 Fma %5707 %6969 %6972
       %6974 = OpExtInst %float %1 Floor %6970
       %6975 = OpFNegate %float %6974
       %6976 = OpExtInst %float %1 Fma %5706 %6969 %6975
       %6977 = OpExtInst %float %1 Fma %6976 %float_2097152 %6973
       %6978 = OpExtInst %float %1 Floor %6977
       %6979 = OpFMul %float %6974 %float_n6_28318548
       %6980 = OpExtInst %float %1 Fma %6970 %float_6_28318548 %6979
       %6981 = OpFMul %float %6978 %float_n6_28318548
       %6982 = OpExtInst %float %1 Fma %6973 %float_6_28318548 %6981
       %6983 = OpExtInst %float %1 Fma %6980 %float_2097152 %6982
       %6984 = OpFMul %float %6522 %float_8
       %6985 = OpExtInst %float %1 Sin %6983
       %6986 = OpFMul %float %6985 %6984
       %6987 = OpFMul %float %6968 %4446
       %6988 = OpFDiv %float %float_2 %6987
       %6989 = OpFMul %float %6537 %6988
       %6990 = OpFMul %float %6988 %4918
       %6991 = OpFMul %float %6990 %5981
       %6992 = OpExtInst %float %1 Fma %6538 %6988 %6991
       %6993 = OpExtInst %float %1 Floor %6989
       %6994 = OpFNegate %float %6993
       %6995 = OpExtInst %float %1 Fma %6537 %6988 %6994
       %6996 = OpExtInst %float %1 Fma %6995 %float_2097152 %6992
       %6997 = OpExtInst %float %1 Floor %6996
       %6998 = OpFMul %float %6993 %float_n6_28318548
       %6999 = OpExtInst %float %1 Fma %6989 %float_6_28318548 %6998
       %7000 = OpFMul %float %6997 %float_n6_28318548
       %7001 = OpExtInst %float %1 Fma %6992 %float_6_28318548 %7000
       %7002 = OpExtInst %float %1 Fma %6999 %float_2097152 %7001
       %7003 = OpFMul %float %6984 %2592
       %7004 = OpExtInst %float %1 Sin %7002
       %7005 = OpFMul %float %7004 %7003
       %7006 = OpCompositeConstruct %v3float %548 %548 %6986
       %7007 = OpCompositeConstruct %v3float %548 %548 %7005
       %7008 = OpFAdd %v3float %7006 %7007
       %7009 = OpFMul %float %6987 %4446
       %7010 = OpFDiv %float %float_2 %7009
       %7011 = OpFMul %float %6573 %7010
       %7012 = OpFMul %float %7010 %4942
       %7013 = OpFMul %float %7012 %5981
       %7014 = OpExtInst %float %1 Fma %6574 %7010 %7013
       %7015 = OpExtInst %float %1 Floor %7011
       %7016 = OpFNegate %float %7015
       %7017 = OpExtInst %float %1 Fma %6573 %7010 %7016
       %7018 = OpExtInst %float %1 Fma %7017 %float_2097152 %7014
       %7019 = OpExtInst %float %1 Floor %7018
       %7020 = OpFMul %float %7015 %float_n6_28318548
       %7021 = OpExtInst %float %1 Fma %7011 %float_6_28318548 %7020
       %7022 = OpFMul %float %7019 %float_n6_28318548
       %7023 = OpExtInst %float %1 Fma %7014 %float_6_28318548 %7022
       %7024 = OpExtInst %float %1 Fma %7021 %float_2097152 %7023
       %7025 = OpFMul %float %7003 %2592
       %7026 = OpExtInst %float %1 Sin %7024
       %7027 = OpFMul %float %7026 %7025
       %7028 = OpCompositeConstruct %v3float %548 %548 %7027
       %7029 = OpFAdd %v3float %7008 %7028
       %7030 = OpFMul %float %7009 %4446
       %7031 = OpFDiv %float %float_2 %7030
       %7032 = OpFMul %float %6608 %7031
       %7033 = OpFMul %float %7031 %4965
       %7034 = OpFMul %float %7033 %5981
       %7035 = OpExtInst %float %1 Fma %6609 %7031 %7034
       %7036 = OpExtInst %float %1 Floor %7032
       %7037 = OpFNegate %float %7036
       %7038 = OpExtInst %float %1 Fma %6608 %7031 %7037
       %7039 = OpExtInst %float %1 Fma %7038 %float_2097152 %7035
       %7040 = OpExtInst %float %1 Floor %7039
       %7041 = OpFMul %float %7036 %float_n6_28318548
       %7042 = OpExtInst %float %1 Fma %7032 %float_6_28318548 %7041
       %7043 = OpFMul %float %7040 %float_n6_28318548
       %7044 = OpExtInst %float %1 Fma %7035 %float_6_28318548 %7043
       %7045 = OpExtInst %float %1 Fma %7042 %float_2097152 %7044
       %7046 = OpFMul %float %7025 %2592
       %7047 = OpExtInst %float %1 Sin %7045
       %7048 = OpFMul %float %7047 %7046
       %7049 = OpCompositeConstruct %v3float %548 %548 %7048
       %7050 = OpFAdd %v3float %7029 %7049
       %7051 = OpFMul %float %6967 %4588
       %7052 = OpFMul %float %6674 %7051
       %7053 = OpFDiv %float %float_2 %7052
       %7054 = OpFMul %float %6671 %7053
       %7055 = OpFMul %float %7053 %4989
       %7056 = OpFMul %float %7055 %5981
       %7057 = OpExtInst %float %1 Fma %6672 %7053 %7056
       %7058 = OpExtInst %float %1 Floor %7054
       %7059 = OpFNegate %float %7058
       %7060 = OpExtInst %float %1 Fma %6671 %7053 %7059
       %7061 = OpExtInst %float %1 Fma %7060 %float_2097152 %7057
       %7062 = OpExtInst %float %1 Floor %7061
       %7063 = OpFMul %float %7058 %float_n6_28318548
       %7064 = OpExtInst %float %1 Fma %7054 %float_6_28318548 %7063
       %7065 = OpFMul %float %7062 %float_n6_28318548
       %7066 = OpExtInst %float %1 Fma %7057 %float_6_28318548 %7065
       %7067 = OpExtInst %float %1 Fma %7064 %float_2097152 %7066
       %7068 = OpFMul %float %6984 %2731
       %7069 = OpExtInst %float %1 Sin %7067
       %7070 = OpFMul %float %7069 %7068
       %7071 = OpFMul %float %7052 %4446
       %7072 = OpFDiv %float %float_2 %7071
       %7073 = OpFMul %float %6706 %7072
       %7074 = OpFMul %float %7072 %5010
       %7075 = OpFMul %float %7074 %5981
       %7076 = OpExtInst %float %1 Fma %6707 %7072 %7075
       %7077 = OpExtInst %float %1 Floor %7073
       %7078 = OpFNegate %float %7077
       %7079 = OpExtInst %float %1 Fma %6706 %7072 %7078
       %7080 = OpExtInst %float %1 Fma %7079 %float_2097152 %7076
       %7081 = OpExtInst %float %1 Floor %7080
       %7082 = OpFMul %float %7077 %float_n6_28318548
       %7083 = OpExtInst %float %1 Fma %7073 %float_6_28318548 %7082
       %7084 = OpFMul %float %7081 %float_n6_28318548
       %7085 = OpExtInst %float %1 Fma %7076 %float_6_28318548 %7084
       %7086 = OpExtInst %float %1 Fma %7083 %float_2097152 %7085
       %7087 = OpFMul %float %7068 %2592
       %7088 = OpExtInst %float %1 Sin %7086
       %7089 = OpFMul %float %7088 %7087
       %7090 = OpCompositeConstruct %v3float %548 %548 %7070
       %7091 = OpCompositeConstruct %v3float %548 %548 %7089
       %7092 = OpFAdd %v3float %7090 %7091
       %7093 = OpFMul %float %7071 %4446
       %7094 = OpFDiv %float %float_2 %7093
       %7095 = OpFMul %float %6742 %7094
       %7096 = OpFMul %float %7094 %5034
       %7097 = OpFMul %float %7096 %5981
       %7098 = OpExtInst %float %1 Fma %6743 %7094 %7097
       %7099 = OpExtInst %float %1 Floor %7095
       %7100 = OpFNegate %float %7099
       %7101 = OpExtInst %float %1 Fma %6742 %7094 %7100
       %7102 = OpExtInst %float %1 Fma %7101 %float_2097152 %7098
       %7103 = OpExtInst %float %1 Floor %7102
       %7104 = OpFMul %float %7099 %float_n6_28318548
       %7105 = OpExtInst %float %1 Fma %7095 %float_6_28318548 %7104
       %7106 = OpFMul %float %7103 %float_n6_28318548
       %7107 = OpExtInst %float %1 Fma %7098 %float_6_28318548 %7106
       %7108 = OpExtInst %float %1 Fma %7105 %float_2097152 %7107
       %7109 = OpFMul %float %7087 %2592
       %7110 = OpExtInst %float %1 Sin %7108
       %7111 = OpFMul %float %7110 %7109
       %7112 = OpCompositeConstruct %v3float %548 %548 %7111
       %7113 = OpFAdd %v3float %7092 %7112
       %7114 = OpFMul %float %7093 %4446
       %7115 = OpFDiv %float %float_2 %7114
       %7116 = OpFMul %float %6777 %7115
       %7117 = OpFMul %float %7115 %5057
       %7118 = OpFMul %float %7117 %5981
       %7119 = OpExtInst %float %1 Fma %6778 %7115 %7118
       %7120 = OpExtInst %float %1 Floor %7116
       %7121 = OpFNegate %float %7120
       %7122 = OpExtInst %float %1 Fma %6777 %7115 %7121
       %7123 = OpExtInst %float %1 Fma %7122 %float_2097152 %7119
       %7124 = OpExtInst %float %1 Floor %7123
       %7125 = OpFMul %float %7120 %float_n6_28318548
       %7126 = OpExtInst %float %1 Fma %7116 %float_6_28318548 %7125
       %7127 = OpFMul %float %7124 %float_n6_28318548
       %7128 = OpExtInst %float %1 Fma %7119 %float_6_28318548 %7127
       %7129 = OpExtInst %float %1 Fma %7126 %float_2097152 %7128
       %7130 = OpFMul %float %7109 %2592
       %7131 = OpExtInst %float %1 Sin %7129
       %7132 = OpFMul %float %7131 %7130
       %7133 = OpCompositeConstruct %v3float %548 %548 %7132
       %7134 = OpFAdd %v3float %7113 %7133
       %7135 = OpFAdd %v3float %7050 %7134
       %7136 = OpFMul %float %6844 %7051
       %7137 = OpFDiv %float %float_2 %7136
       %7138 = OpFMul %float %6841 %7137
       %7139 = OpFMul %float %7137 %4989
       %7140 = OpFMul %float %7139 %5981
       %7141 = OpExtInst %float %1 Fma %6842 %7137 %7140
       %7142 = OpExtInst %float %1 Floor %7138
       %7143 = OpFNegate %float %7142
       %7144 = OpExtInst %float %1 Fma %6841 %7137 %7143
       %7145 = OpExtInst %float %1 Fma %7144 %float_2097152 %7141
       %7146 = OpExtInst %float %1 Floor %7145
       %7147 = OpFMul %float %7142 %float_n6_28318548
       %7148 = OpExtInst %float %1 Fma %7138 %float_6_28318548 %7147
       %7149 = OpFMul %float %7146 %float_n6_28318548
       %7150 = OpExtInst %float %1 Fma %7141 %float_6_28318548 %7149
       %7151 = OpExtInst %float %1 Fma %7148 %float_2097152 %7150
       %7152 = OpExtInst %float %1 Sin %7151
       %7153 = OpFMul %float %7152 %7068
       %7154 = OpFMul %float %7136 %4446
       %7155 = OpFDiv %float %float_2 %7154
       %7156 = OpFMul %float %6875 %7155
       %7157 = OpFMul %float %7155 %5010
       %7158 = OpFMul %float %7157 %5981
       %7159 = OpExtInst %float %1 Fma %6876 %7155 %7158
       %7160 = OpExtInst %float %1 Floor %7156
       %7161 = OpFNegate %float %7160
       %7162 = OpExtInst %float %1 Fma %6875 %7155 %7161
       %7163 = OpExtInst %float %1 Fma %7162 %float_2097152 %7159
       %7164 = OpExtInst %float %1 Floor %7163
       %7165 = OpFMul %float %7160 %float_n6_28318548
       %7166 = OpExtInst %float %1 Fma %7156 %float_6_28318548 %7165
       %7167 = OpFMul %float %7164 %float_n6_28318548
       %7168 = OpExtInst %float %1 Fma %7159 %float_6_28318548 %7167
       %7169 = OpExtInst %float %1 Fma %7166 %float_2097152 %7168
       %7170 = OpExtInst %float %1 Sin %7169
       %7171 = OpFMul %float %7170 %7087
       %7172 = OpCompositeConstruct %v3float %548 %548 %7153
       %7173 = OpCompositeConstruct %v3float %548 %548 %7171
       %7174 = OpFAdd %v3float %7172 %7173
       %7175 = OpFMul %float %7154 %4446
       %7176 = OpFDiv %float %float_2 %7175
       %7177 = OpFMul %float %6910 %7176
       %7178 = OpFMul %float %7176 %5034
       %7179 = OpFMul %float %7178 %5981
       %7180 = OpExtInst %float %1 Fma %6911 %7176 %7179
       %7181 = OpExtInst %float %1 Floor %7177
       %7182 = OpFNegate %float %7181
       %7183 = OpExtInst %float %1 Fma %6910 %7176 %7182
       %7184 = OpExtInst %float %1 Fma %7183 %float_2097152 %7180
       %7185 = OpExtInst %float %1 Floor %7184
       %7186 = OpFMul %float %7181 %float_n6_28318548
       %7187 = OpExtInst %float %1 Fma %7177 %float_6_28318548 %7186
       %7188 = OpFMul %float %7185 %float_n6_28318548
       %7189 = OpExtInst %float %1 Fma %7180 %float_6_28318548 %7188
       %7190 = OpExtInst %float %1 Fma %7187 %float_2097152 %7189
       %7191 = OpExtInst %float %1 Sin %7190
       %7192 = OpFMul %float %7191 %7109
       %7193 = OpCompositeConstruct %v3float %548 %548 %7192
       %7194 = OpFAdd %v3float %7174 %7193
       %7195 = OpFMul %float %7175 %4446
       %7196 = OpFDiv %float %float_2 %7195
       %7197 = OpFMul %float %6944 %7196
       %7198 = OpFMul %float %7196 %5057
       %7199 = OpFMul %float %7198 %5981
       %7200 = OpExtInst %float %1 Fma %6945 %7196 %7199
       %7201 = OpExtInst %float %1 Floor %7197
       %7202 = OpFNegate %float %7201
       %7203 = OpExtInst %float %1 Fma %6944 %7196 %7202
       %7204 = OpExtInst %float %1 Fma %7203 %float_2097152 %7200
       %7205 = OpExtInst %float %1 Floor %7204
       %7206 = OpFMul %float %7201 %float_n6_28318548
       %7207 = OpExtInst %float %1 Fma %7197 %float_6_28318548 %7206
       %7208 = OpFMul %float %7205 %float_n6_28318548
       %7209 = OpExtInst %float %1 Fma %7200 %float_6_28318548 %7208
       %7210 = OpExtInst %float %1 Fma %7207 %float_2097152 %7209
       %7211 = OpExtInst %float %1 Sin %7210
       %7212 = OpFMul %float %7211 %7130
       %7213 = OpCompositeConstruct %v3float %548 %548 %7212
       %7214 = OpFAdd %v3float %7194 %7213
       %7215 = OpFAdd %v3float %7135 %7214
       %7216 = OpFMul %float %5709 %5157
       %7217 = OpFDiv %float %float_2 %7216
       %7218 = OpFMul %float %5706 %7217
       %7219 = OpFMul %float %7217 %5162
       %7220 = OpFMul %float %7219 %5981
       %7221 = OpExtInst %float %1 Fma %5707 %7217 %7220
       %7222 = OpExtInst %float %1 Floor %7218
       %7223 = OpFNegate %float %7222
       %7224 = OpExtInst %float %1 Fma %5706 %7217 %7223
       %7225 = OpExtInst %float %1 Fma %7224 %float_2097152 %7221
       %7226 = OpExtInst %float %1 Floor %7225
       %7227 = OpFMul %float %7222 %float_n6_28318548
       %7228 = OpExtInst %float %1 Fma %7218 %float_6_28318548 %7227
       %7229 = OpFMul %float %7226 %float_n6_28318548
       %7230 = OpExtInst %float %1 Fma %7221 %float_6_28318548 %7229
       %7231 = OpExtInst %float %1 Fma %7228 %float_2097152 %7230
       %7232 = OpFMul %float %6522 %float_4
       %7233 = OpExtInst %float %1 Sin %7231
       %7234 = OpFMul %float %7233 %7232
       %7235 = OpFMul %float %7216 %4446
       %7236 = OpFDiv %float %float_2 %7235
       %7237 = OpFMul %float %6537 %7236
       %7238 = OpFMul %float %7236 %5182
       %7239 = OpFMul %float %7238 %5981
       %7240 = OpExtInst %float %1 Fma %6538 %7236 %7239
       %7241 = OpExtInst %float %1 Floor %7237
       %7242 = OpFNegate %float %7241
       %7243 = OpExtInst %float %1 Fma %6537 %7236 %7242
       %7244 = OpExtInst %float %1 Fma %7243 %float_2097152 %7240
       %7245 = OpExtInst %float %1 Floor %7244
       %7246 = OpFMul %float %7241 %float_n6_28318548
       %7247 = OpExtInst %float %1 Fma %7237 %float_6_28318548 %7246
       %7248 = OpFMul %float %7245 %float_n6_28318548
       %7249 = OpExtInst %float %1 Fma %7240 %float_6_28318548 %7248
       %7250 = OpExtInst %float %1 Fma %7247 %float_2097152 %7249
       %7251 = OpFMul %float %7232 %2592
       %7252 = OpExtInst %float %1 Sin %7250
       %7253 = OpFMul %float %7252 %7251
       %7254 = OpCompositeConstruct %v3float %548 %548 %7234
       %7255 = OpCompositeConstruct %v3float %548 %548 %7253
       %7256 = OpFAdd %v3float %7254 %7255
       %7257 = OpFMul %float %7235 %4446
       %7258 = OpFDiv %float %float_2 %7257
       %7259 = OpFMul %float %6573 %7258
       %7260 = OpFMul %float %7258 %5205
       %7261 = OpFMul %float %7260 %5981
       %7262 = OpExtInst %float %1 Fma %6574 %7258 %7261
       %7263 = OpExtInst %float %1 Floor %7259
       %7264 = OpFNegate %float %7263
       %7265 = OpExtInst %float %1 Fma %6573 %7258 %7264
       %7266 = OpExtInst %float %1 Fma %7265 %float_2097152 %7262
       %7267 = OpExtInst %float %1 Floor %7266
       %7268 = OpFMul %float %7263 %float_n6_28318548
       %7269 = OpExtInst %float %1 Fma %7259 %float_6_28318548 %7268
       %7270 = OpFMul %float %7267 %float_n6_28318548
       %7271 = OpExtInst %float %1 Fma %7262 %float_6_28318548 %7270
       %7272 = OpExtInst %float %1 Fma %7269 %float_2097152 %7271
       %7273 = OpFMul %float %7251 %2592
       %7274 = OpExtInst %float %1 Sin %7272
       %7275 = OpFMul %float %7274 %7273
       %7276 = OpCompositeConstruct %v3float %548 %548 %7275
       %7277 = OpFAdd %v3float %7256 %7276
       %7278 = OpFMul %float %7257 %4446
       %7279 = OpFDiv %float %float_2 %7278
       %7280 = OpFMul %float %6608 %7279
       %7281 = OpFMul %float %7279 %5227
       %7282 = OpFMul %float %7281 %5981
       %7283 = OpExtInst %float %1 Fma %6609 %7279 %7282
       %7284 = OpExtInst %float %1 Floor %7280
       %7285 = OpFNegate %float %7284
       %7286 = OpExtInst %float %1 Fma %6608 %7279 %7285
       %7287 = OpExtInst %float %1 Fma %7286 %float_2097152 %7283
       %7288 = OpExtInst %float %1 Floor %7287
       %7289 = OpFMul %float %7284 %float_n6_28318548
       %7290 = OpExtInst %float %1 Fma %7280 %float_6_28318548 %7289
       %7291 = OpFMul %float %7288 %float_n6_28318548
       %7292 = OpExtInst %float %1 Fma %7283 %float_6_28318548 %7291
       %7293 = OpExtInst %float %1 Fma %7290 %float_2097152 %7292
       %7294 = OpFMul %float %7273 %2592
       %7295 = OpExtInst %float %1 Sin %7293
       %7296 = OpFMul %float %7295 %7294
       %7297 = OpCompositeConstruct %v3float %548 %548 %7296
       %7298 = OpFAdd %v3float %7277 %7297
       %7299 = OpFMul %float %6674 %5245
       %7300 = OpFDiv %float %float_2 %7299
       %7301 = OpFMul %float %6671 %7300
       %7302 = OpFMul %float %7300 %5250
       %7303 = OpFMul %float %7302 %5981
       %7304 = OpExtInst %float %1 Fma %6672 %7300 %7303
       %7305 = OpExtInst %float %1 Floor %7301
       %7306 = OpFNegate %float %7305
       %7307 = OpExtInst %float %1 Fma %6671 %7300 %7306
       %7308 = OpExtInst %float %1 Fma %7307 %float_2097152 %7304
       %7309 = OpExtInst %float %1 Floor %7308
       %7310 = OpFMul %float %7305 %float_n6_28318548
       %7311 = OpExtInst %float %1 Fma %7301 %float_6_28318548 %7310
       %7312 = OpFMul %float %7309 %float_n6_28318548
       %7313 = OpExtInst %float %1 Fma %7304 %float_6_28318548 %7312
       %7314 = OpExtInst %float %1 Fma %7311 %float_2097152 %7313
       %7315 = OpFMul %float %7232 %2731
       %7316 = OpExtInst %float %1 Sin %7314
       %7317 = OpFMul %float %7316 %7315
       %7318 = OpFMul %float %7299 %4446
       %7319 = OpFDiv %float %float_2 %7318
       %7320 = OpFMul %float %6706 %7319
       %7321 = OpFMul %float %7319 %5270
       %7322 = OpFMul %float %7321 %5981
       %7323 = OpExtInst %float %1 Fma %6707 %7319 %7322
       %7324 = OpExtInst %float %1 Floor %7320
       %7325 = OpFNegate %float %7324
       %7326 = OpExtInst %float %1 Fma %6706 %7319 %7325
       %7327 = OpExtInst %float %1 Fma %7326 %float_2097152 %7323
       %7328 = OpExtInst %float %1 Floor %7327
       %7329 = OpFMul %float %7324 %float_n6_28318548
       %7330 = OpExtInst %float %1 Fma %7320 %float_6_28318548 %7329
       %7331 = OpFMul %float %7328 %float_n6_28318548
       %7332 = OpExtInst %float %1 Fma %7323 %float_6_28318548 %7331
       %7333 = OpExtInst %float %1 Fma %7330 %float_2097152 %7332
       %7334 = OpFMul %float %7315 %2592
       %7335 = OpExtInst %float %1 Sin %7333
       %7336 = OpFMul %float %7335 %7334
       %7337 = OpCompositeConstruct %v3float %548 %548 %7317
       %7338 = OpCompositeConstruct %v3float %548 %548 %7336
       %7339 = OpFAdd %v3float %7337 %7338
       %7340 = OpFMul %float %7318 %4446
       %7341 = OpFDiv %float %float_2 %7340
       %7342 = OpFMul %float %6742 %7341
       %7343 = OpFMul %float %7341 %5293
       %7344 = OpFMul %float %7343 %5981
       %7345 = OpExtInst %float %1 Fma %6743 %7341 %7344
       %7346 = OpExtInst %float %1 Floor %7342
       %7347 = OpFNegate %float %7346
       %7348 = OpExtInst %float %1 Fma %6742 %7341 %7347
       %7349 = OpExtInst %float %1 Fma %7348 %float_2097152 %7345
       %7350 = OpExtInst %float %1 Floor %7349
       %7351 = OpFMul %float %7346 %float_n6_28318548
       %7352 = OpExtInst %float %1 Fma %7342 %float_6_28318548 %7351
       %7353 = OpFMul %float %7350 %float_n6_28318548
       %7354 = OpExtInst %float %1 Fma %7345 %float_6_28318548 %7353
       %7355 = OpExtInst %float %1 Fma %7352 %float_2097152 %7354
       %7356 = OpFMul %float %7334 %2592
       %7357 = OpExtInst %float %1 Sin %7355
       %7358 = OpFMul %float %7357 %7356
       %7359 = OpCompositeConstruct %v3float %548 %548 %7358
       %7360 = OpFAdd %v3float %7339 %7359
       %7361 = OpFMul %float %7340 %4446
       %7362 = OpFDiv %float %float_2 %7361
       %7363 = OpFMul %float %6777 %7362
       %7364 = OpFMul %float %7362 %5315
       %7365 = OpFMul %float %7364 %5981
       %7366 = OpExtInst %float %1 Fma %6778 %7362 %7365
       %7367 = OpExtInst %float %1 Floor %7363
       %7368 = OpFNegate %float %7367
       %7369 = OpExtInst %float %1 Fma %6777 %7362 %7368
       %7370 = OpExtInst %float %1 Fma %7369 %float_2097152 %7366
       %7371 = OpExtInst %float %1 Floor %7370
       %7372 = OpFMul %float %7367 %float_n6_28318548
       %7373 = OpExtInst %float %1 Fma %7363 %float_6_28318548 %7372
       %7374 = OpFMul %float %7371 %float_n6_28318548
       %7375 = OpExtInst %float %1 Fma %7366 %float_6_28318548 %7374
       %7376 = OpExtInst %float %1 Fma %7373 %float_2097152 %7375
       %7377 = OpFMul %float %7356 %2592
       %7378 = OpExtInst %float %1 Sin %7376
       %7379 = OpFMul %float %7378 %7377
       %7380 = OpCompositeConstruct %v3float %548 %548 %7379
       %7381 = OpFAdd %v3float %7360 %7380
       %7382 = OpFAdd %v3float %7298 %7381
       %7383 = OpFMul %float %6844 %5245
       %7384 = OpFDiv %float %float_2 %7383
       %7385 = OpFMul %float %6841 %7384
       %7386 = OpFMul %float %7384 %5250
       %7387 = OpFMul %float %7386 %5981
       %7388 = OpExtInst %float %1 Fma %6842 %7384 %7387
       %7389 = OpExtInst %float %1 Floor %7385
       %7390 = OpFNegate %float %7389
       %7391 = OpExtInst %float %1 Fma %6841 %7384 %7390
       %7392 = OpExtInst %float %1 Fma %7391 %float_2097152 %7388
       %7393 = OpExtInst %float %1 Floor %7392
       %7394 = OpFMul %float %7389 %float_n6_28318548
       %7395 = OpExtInst %float %1 Fma %7385 %float_6_28318548 %7394
       %7396 = OpFMul %float %7393 %float_n6_28318548
       %7397 = OpExtInst %float %1 Fma %7388 %float_6_28318548 %7396
       %7398 = OpExtInst %float %1 Fma %7395 %float_2097152 %7397
       %7399 = OpExtInst %float %1 Sin %7398
       %7400 = OpFMul %float %7399 %7315
       %7401 = OpFMul %float %7383 %4446
       %7402 = OpFDiv %float %float_2 %7401
       %7403 = OpFMul %float %6875 %7402
       %7404 = OpFMul %float %7402 %5270
       %7405 = OpFMul %float %7404 %5981
       %7406 = OpExtInst %float %1 Fma %6876 %7402 %7405
       %7407 = OpExtInst %float %1 Floor %7403
       %7408 = OpFNegate %float %7407
       %7409 = OpExtInst %float %1 Fma %6875 %7402 %7408
       %7410 = OpExtInst %float %1 Fma %7409 %float_2097152 %7406
       %7411 = OpExtInst %float %1 Floor %7410
       %7412 = OpFMul %float %7407 %float_n6_28318548
       %7413 = OpExtInst %float %1 Fma %7403 %float_6_28318548 %7412
       %7414 = OpFMul %float %7411 %float_n6_28318548
       %7415 = OpExtInst %float %1 Fma %7406 %float_6_28318548 %7414
       %7416 = OpExtInst %float %1 Fma %7413 %float_2097152 %7415
       %7417 = OpExtInst %float %1 Sin %7416
       %7418 = OpFMul %float %7417 %7334
       %7419 = OpCompositeConstruct %v3float %548 %548 %7400
       %7420 = OpCompositeConstruct %v3float %548 %548 %7418
       %7421 = OpFAdd %v3float %7419 %7420
       %7422 = OpFMul %float %7401 %4446
       %7423 = OpFDiv %float %float_2 %7422
       %7424 = OpFMul %float %6910 %7423
       %7425 = OpFMul %float %7423 %5293
       %7426 = OpFMul %float %7425 %5981
       %7427 = OpExtInst %float %1 Fma %6911 %7423 %7426
       %7428 = OpExtInst %float %1 Floor %7424
       %7429 = OpFNegate %float %7428
       %7430 = OpExtInst %float %1 Fma %6910 %7423 %7429
       %7431 = OpExtInst %float %1 Fma %7430 %float_2097152 %7427
       %7432 = OpExtInst %float %1 Floor %7431
       %7433 = OpFMul %float %7428 %float_n6_28318548
       %7434 = OpExtInst %float %1 Fma %7424 %float_6_28318548 %7433
       %7435 = OpFMul %float %7432 %float_n6_28318548
       %7436 = OpExtInst %float %1 Fma %7427 %float_6_28318548 %7435
       %7437 = OpExtInst %float %1 Fma %7434 %float_2097152 %7436
       %7438 = OpExtInst %float %1 Sin %7437
       %7439 = OpFMul %float %7438 %7356
       %7440 = OpCompositeConstruct %v3float %548 %548 %7439
       %7441 = OpFAdd %v3float %7421 %7440
       %7442 = OpFMul %float %7422 %4446
       %7443 = OpFDiv %float %float_2 %7442
       %7444 = OpFMul %float %6944 %7443
       %7445 = OpFMul %float %7443 %5315
       %7446 = OpFMul %float %7445 %5981
       %7447 = OpExtInst %float %1 Fma %6945 %7443 %7446
       %7448 = OpExtInst %float %1 Floor %7444
       %7449 = OpFNegate %float %7448
       %7450 = OpExtInst %float %1 Fma %6944 %7443 %7449
       %7451 = OpExtInst %float %1 Fma %7450 %float_2097152 %7447
       %7452 = OpExtInst %float %1 Floor %7451
       %7453 = OpFMul %float %7448 %float_n6_28318548
       %7454 = OpExtInst %float %1 Fma %7444 %float_6_28318548 %7453
       %7455 = OpFMul %float %7452 %float_n6_28318548
       %7456 = OpExtInst %float %1 Fma %7447 %float_6_28318548 %7455
       %7457 = OpExtInst %float %1 Fma %7454 %float_2097152 %7456
       %7458 = OpExtInst %float %1 Sin %7457
       %7459 = OpFMul %float %7458 %7377
       %7460 = OpCompositeConstruct %v3float %548 %548 %7459
       %7461 = OpFAdd %v3float %7441 %7460
       %7462 = OpFAdd %v3float %7382 %7461
       %7463 = OpFMul %float %5709 %5414
       %7464 = OpFDiv %float %float_2 %7463
       %7465 = OpFMul %float %5706 %7464
       %7466 = OpFMul %float %7464 %4897
       %7467 = OpFMul %float %7466 %5981
       %7468 = OpExtInst %float %1 Fma %5707 %7464 %7467
       %7469 = OpExtInst %float %1 Floor %7465
       %7470 = OpFNegate %float %7469
       %7471 = OpExtInst %float %1 Fma %5706 %7464 %7470
       %7472 = OpExtInst %float %1 Fma %7471 %float_2097152 %7468
       %7473 = OpExtInst %float %1 Floor %7472
       %7474 = OpFMul %float %7469 %float_n6_28318548
       %7475 = OpExtInst %float %1 Fma %7465 %float_6_28318548 %7474
       %7476 = OpFMul %float %7473 %float_n6_28318548
       %7477 = OpExtInst %float %1 Fma %7468 %float_6_28318548 %7476
       %7478 = OpExtInst %float %1 Fma %7475 %float_2097152 %7477
       %7479 = OpFMul %float %6522 %float_0_5
       %7480 = OpExtInst %float %1 Sin %7478
       %7481 = OpFMul %float %7480 %7479
       %7482 = OpFMul %float %7463 %4446
       %7483 = OpFDiv %float %float_2 %7482
       %7484 = OpFMul %float %6537 %7483
       %7485 = OpFMul %float %7483 %4918
       %7486 = OpFMul %float %7485 %5981
       %7487 = OpExtInst %float %1 Fma %6538 %7483 %7486
       %7488 = OpExtInst %float %1 Floor %7484
       %7489 = OpFNegate %float %7488
       %7490 = OpExtInst %float %1 Fma %6537 %7483 %7489
       %7491 = OpExtInst %float %1 Fma %7490 %float_2097152 %7487
       %7492 = OpExtInst %float %1 Floor %7491
       %7493 = OpFMul %float %7488 %float_n6_28318548
       %7494 = OpExtInst %float %1 Fma %7484 %float_6_28318548 %7493
       %7495 = OpFMul %float %7492 %float_n6_28318548
       %7496 = OpExtInst %float %1 Fma %7487 %float_6_28318548 %7495
       %7497 = OpExtInst %float %1 Fma %7494 %float_2097152 %7496
       %7498 = OpFMul %float %7479 %2592
       %7499 = OpExtInst %float %1 Sin %7497
       %7500 = OpFMul %float %7499 %7498
       %7501 = OpCompositeConstruct %v3float %548 %548 %7481
       %7502 = OpCompositeConstruct %v3float %548 %548 %7500
       %7503 = OpFAdd %v3float %7501 %7502
       %7504 = OpFMul %float %7482 %4446
       %7505 = OpFDiv %float %float_2 %7504
       %7506 = OpFMul %float %6573 %7505
       %7507 = OpFMul %float %7505 %4942
       %7508 = OpFMul %float %7507 %5981
       %7509 = OpExtInst %float %1 Fma %6574 %7505 %7508
       %7510 = OpExtInst %float %1 Floor %7506
       %7511 = OpFNegate %float %7510
       %7512 = OpExtInst %float %1 Fma %6573 %7505 %7511
       %7513 = OpExtInst %float %1 Fma %7512 %float_2097152 %7509
       %7514 = OpExtInst %float %1 Floor %7513
       %7515 = OpFMul %float %7510 %float_n6_28318548
       %7516 = OpExtInst %float %1 Fma %7506 %float_6_28318548 %7515
       %7517 = OpFMul %float %7514 %float_n6_28318548
       %7518 = OpExtInst %float %1 Fma %7509 %float_6_28318548 %7517
       %7519 = OpExtInst %float %1 Fma %7516 %float_2097152 %7518
       %7520 = OpFMul %float %7498 %2592
       %7521 = OpExtInst %float %1 Sin %7519
       %7522 = OpFMul %float %7521 %7520
       %7523 = OpCompositeConstruct %v3float %548 %548 %7522
       %7524 = OpFAdd %v3float %7503 %7523
       %7525 = OpFMul %float %7504 %4446
       %7526 = OpFDiv %float %float_2 %7525
       %7527 = OpFMul %float %6608 %7526
       %7528 = OpFMul %float %7526 %4965
       %7529 = OpFMul %float %7528 %5981
       %7530 = OpExtInst %float %1 Fma %6609 %7526 %7529
       %7531 = OpExtInst %float %1 Floor %7527
       %7532 = OpFNegate %float %7531
       %7533 = OpExtInst %float %1 Fma %6608 %7526 %7532
       %7534 = OpExtInst %float %1 Fma %7533 %float_2097152 %7530
       %7535 = OpExtInst %float %1 Floor %7534
       %7536 = OpFMul %float %7531 %float_n6_28318548
       %7537 = OpExtInst %float %1 Fma %7527 %float_6_28318548 %7536
       %7538 = OpFMul %float %7535 %float_n6_28318548
       %7539 = OpExtInst %float %1 Fma %7530 %float_6_28318548 %7538
       %7540 = OpExtInst %float %1 Fma %7537 %float_2097152 %7539
       %7541 = OpFMul %float %7520 %2592
       %7542 = OpExtInst %float %1 Sin %7540
       %7543 = OpFMul %float %7542 %7541
       %7544 = OpCompositeConstruct %v3float %548 %548 %7543
       %7545 = OpFAdd %v3float %7524 %7544
       %7546 = OpFMul %float %6674 %5498
       %7547 = OpFDiv %float %float_2 %7546
       %7548 = OpFMul %float %6671 %7547
       %7549 = OpFMul %float %7547 %4989
       %7550 = OpFMul %float %7549 %5981
       %7551 = OpExtInst %float %1 Fma %6672 %7547 %7550
       %7552 = OpExtInst %float %1 Floor %7548
       %7553 = OpFNegate %float %7552
       %7554 = OpExtInst %float %1 Fma %6671 %7547 %7553
       %7555 = OpExtInst %float %1 Fma %7554 %float_2097152 %7551
       %7556 = OpExtInst %float %1 Floor %7555
       %7557 = OpFMul %float %7552 %float_n6_28318548
       %7558 = OpExtInst %float %1 Fma %7548 %float_6_28318548 %7557
       %7559 = OpFMul %float %7556 %float_n6_28318548
       %7560 = OpExtInst %float %1 Fma %7551 %float_6_28318548 %7559
       %7561 = OpExtInst %float %1 Fma %7558 %float_2097152 %7560
       %7562 = OpFMul %float %7479 %2731
       %7563 = OpExtInst %float %1 Sin %7561
       %7564 = OpFMul %float %7563 %7562
       %7565 = OpFMul %float %7546 %4446
       %7566 = OpFDiv %float %float_2 %7565
       %7567 = OpFMul %float %6706 %7566
       %7568 = OpFMul %float %7566 %5010
       %7569 = OpFMul %float %7568 %5981
       %7570 = OpExtInst %float %1 Fma %6707 %7566 %7569
       %7571 = OpExtInst %float %1 Floor %7567
       %7572 = OpFNegate %float %7571
       %7573 = OpExtInst %float %1 Fma %6706 %7566 %7572
       %7574 = OpExtInst %float %1 Fma %7573 %float_2097152 %7570
       %7575 = OpExtInst %float %1 Floor %7574
       %7576 = OpFMul %float %7571 %float_n6_28318548
       %7577 = OpExtInst %float %1 Fma %7567 %float_6_28318548 %7576
       %7578 = OpFMul %float %7575 %float_n6_28318548
       %7579 = OpExtInst %float %1 Fma %7570 %float_6_28318548 %7578
       %7580 = OpExtInst %float %1 Fma %7577 %float_2097152 %7579
       %7581 = OpFMul %float %7562 %2592
       %7582 = OpExtInst %float %1 Sin %7580
       %7583 = OpFMul %float %7582 %7581
       %7584 = OpCompositeConstruct %v3float %548 %548 %7564
       %7585 = OpCompositeConstruct %v3float %548 %548 %7583
       %7586 = OpFAdd %v3float %7584 %7585
       %7587 = OpFMul %float %7565 %4446
       %7588 = OpFDiv %float %float_2 %7587
       %7589 = OpFMul %float %6742 %7588
       %7590 = OpFMul %float %7588 %5034
       %7591 = OpFMul %float %7590 %5981
       %7592 = OpExtInst %float %1 Fma %6743 %7588 %7591
       %7593 = OpExtInst %float %1 Floor %7589
       %7594 = OpFNegate %float %7593
       %7595 = OpExtInst %float %1 Fma %6742 %7588 %7594
       %7596 = OpExtInst %float %1 Fma %7595 %float_2097152 %7592
       %7597 = OpExtInst %float %1 Floor %7596
       %7598 = OpFMul %float %7593 %float_n6_28318548
       %7599 = OpExtInst %float %1 Fma %7589 %float_6_28318548 %7598
       %7600 = OpFMul %float %7597 %float_n6_28318548
       %7601 = OpExtInst %float %1 Fma %7592 %float_6_28318548 %7600
       %7602 = OpExtInst %float %1 Fma %7599 %float_2097152 %7601
       %7603 = OpFMul %float %7581 %2592
       %7604 = OpExtInst %float %1 Sin %7602
       %7605 = OpFMul %float %7604 %7603
       %7606 = OpCompositeConstruct %v3float %548 %548 %7605
       %7607 = OpFAdd %v3float %7586 %7606
       %7608 = OpFMul %float %7587 %4446
       %7609 = OpFDiv %float %float_2 %7608
       %7610 = OpFMul %float %6777 %7609
       %7611 = OpFMul %float %7609 %5057
       %7612 = OpFMul %float %7611 %5981
       %7613 = OpExtInst %float %1 Fma %6778 %7609 %7612
       %7614 = OpExtInst %float %1 Floor %7610
       %7615 = OpFNegate %float %7614
       %7616 = OpExtInst %float %1 Fma %6777 %7609 %7615
       %7617 = OpExtInst %float %1 Fma %7616 %float_2097152 %7613
       %7618 = OpExtInst %float %1 Floor %7617
       %7619 = OpFMul %float %7614 %float_n6_28318548
       %7620 = OpExtInst %float %1 Fma %7610 %float_6_28318548 %7619
       %7621 = OpFMul %float %7618 %float_n6_28318548
       %7622 = OpExtInst %float %1 Fma %7613 %float_6_28318548 %7621
       %7623 = OpExtInst %float %1 Fma %7620 %float_2097152 %7622
       %7624 = OpFMul %float %7603 %2592
       %7625 = OpExtInst %float %1 Sin %7623
       %7626 = OpFMul %float %7625 %7624
       %7627 = OpCompositeConstruct %v3float %548 %548 %7626
       %7628 = OpFAdd %v3float %7607 %7627
       %7629 = OpFAdd %v3float %7545 %7628
       %7630 = OpFMul %float %6844 %5498
       %7631 = OpFDiv %float %float_2 %7630
       %7632 = OpFMul %float %6841 %7631
       %7633 = OpFMul %float %7631 %4989
       %7634 = OpFMul %float %7633 %5981
       %7635 = OpExtInst %float %1 Fma %6842 %7631 %7634
       %7636 = OpExtInst %float %1 Floor %7632
       %7637 = OpFNegate %float %7636
       %7638 = OpExtInst %float %1 Fma %6841 %7631 %7637
       %7639 = OpExtInst %float %1 Fma %7638 %float_2097152 %7635
       %7640 = OpExtInst %float %1 Floor %7639
       %7641 = OpFMul %float %7636 %float_n6_28318548
       %7642 = OpExtInst %float %1 Fma %7632 %float_6_28318548 %7641
       %7643 = OpFMul %float %7640 %float_n6_28318548
       %7644 = OpExtInst %float %1 Fma %7635 %float_6_28318548 %7643
       %7645 = OpExtInst %float %1 Fma %7642 %float_2097152 %7644
       %7646 = OpExtInst %float %1 Sin %7645
       %7647 = OpFMul %float %7646 %7562
       %7648 = OpFMul %float %7630 %4446
       %7649 = OpFDiv %float %float_2 %7648
       %7650 = OpFMul %float %6875 %7649
       %7651 = OpFMul %float %7649 %5010
       %7652 = OpFMul %float %7651 %5981
       %7653 = OpExtInst %float %1 Fma %6876 %7649 %7652
       %7654 = OpExtInst %float %1 Floor %7650
       %7655 = OpFNegate %float %7654
       %7656 = OpExtInst %float %1 Fma %6875 %7649 %7655
       %7657 = OpExtInst %float %1 Fma %7656 %float_2097152 %7653
       %7658 = OpExtInst %float %1 Floor %7657
       %7659 = OpFMul %float %7654 %float_n6_28318548
       %7660 = OpExtInst %float %1 Fma %7650 %float_6_28318548 %7659
       %7661 = OpFMul %float %7658 %float_n6_28318548
       %7662 = OpExtInst %float %1 Fma %7653 %float_6_28318548 %7661
       %7663 = OpExtInst %float %1 Fma %7660 %float_2097152 %7662
       %7664 = OpExtInst %float %1 Sin %7663
       %7665 = OpFMul %float %7664 %7581
       %7666 = OpCompositeConstruct %v3float %548 %548 %7647
       %7667 = OpCompositeConstruct %v3float %548 %548 %7665
       %7668 = OpFAdd %v3float %7666 %7667
       %7669 = OpFMul %float %7648 %4446
       %7670 = OpFDiv %float %float_2 %7669
       %7671 = OpFMul %float %6910 %7670
       %7672 = OpFMul %float %7670 %5034
       %7673 = OpFMul %float %7672 %5981
       %7674 = OpExtInst %float %1 Fma %6911 %7670 %7673
       %7675 = OpExtInst %float %1 Floor %7671
       %7676 = OpFNegate %float %7675
       %7677 = OpExtInst %float %1 Fma %6910 %7670 %7676
       %7678 = OpExtInst %float %1 Fma %7677 %float_2097152 %7674
       %7679 = OpExtInst %float %1 Floor %7678
       %7680 = OpFMul %float %7675 %float_n6_28318548
       %7681 = OpExtInst %float %1 Fma %7671 %float_6_28318548 %7680
       %7682 = OpFMul %float %7679 %float_n6_28318548
       %7683 = OpExtInst %float %1 Fma %7674 %float_6_28318548 %7682
       %7684 = OpExtInst %float %1 Fma %7681 %float_2097152 %7683
       %7685 = OpExtInst %float %1 Sin %7684
       %7686 = OpFMul %float %7685 %7603
       %7687 = OpCompositeConstruct %v3float %548 %548 %7686
       %7688 = OpFAdd %v3float %7668 %7687
       %7689 = OpFMul %float %7669 %4446
       %7690 = OpFDiv %float %float_2 %7689
       %7691 = OpFMul %float %6944 %7690
       %7692 = OpFMul %float %7690 %5057
       %7693 = OpFMul %float %7692 %5981
       %7694 = OpExtInst %float %1 Fma %6945 %7690 %7693
       %7695 = OpExtInst %float %1 Floor %7691
       %7696 = OpFNegate %float %7695
       %7697 = OpExtInst %float %1 Fma %6944 %7690 %7696
       %7698 = OpExtInst %float %1 Fma %7697 %float_2097152 %7694
       %7699 = OpExtInst %float %1 Floor %7698
       %7700 = OpFMul %float %7695 %float_n6_28318548
       %7701 = OpExtInst %float %1 Fma %7691 %float_6_28318548 %7700
       %7702 = OpFMul %float %7699 %float_n6_28318548
       %7703 = OpExtInst %float %1 Fma %7694 %float_6_28318548 %7702
       %7704 = OpExtInst %float %1 Fma %7701 %float_2097152 %7703
       %7705 = OpExtInst %float %1 Sin %7704
       %7706 = OpFMul %float %7705 %7624
       %7707 = OpCompositeConstruct %v3float %548 %548 %7706
       %7708 = OpFAdd %v3float %7688 %7707
       %7709 = OpFAdd %v3float %7629 %7708
       %7710 = OpFAdd %v3float %7462 %7709
       %7711 = OpFAdd %v3float %7215 %7710
       %7712 = OpFAdd %v3float %6966 %7711
       %7713 = OpFAdd %v3float %5665 %7712
       %7714 = OpExtInst %v3float %1 Fma %3516 %3519 %7713
       %7715 = OpCompositeExtract %float %7714 2
       %7716 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_3
       %7717 = OpLoad %float %7716
       %7718 = OpFNegate %float %7717
       %7719 = OpExtInst %float %1 Fma %7715 %1723 %7718
       %7720 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_2
       %7721 = OpLoad %float %7720
       %7722 = OpFMul %float %7719 %7721
       %7723 = OpExtInst %float %1 FClamp %7722 %float_0 %float_1
       %7724 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_3
       %7725 = OpLoad %float %7724
       %7726 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_92 %int_0
       %7727 = OpLoad %float %7726
       %7728 = OpFNegate %float %7727
       %7729 = OpExtInst %float %1 Fma %7723 %7725 %7728
       %7730 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_92 %int_3
       %7731 = OpLoad %float %7730
       %7732 = OpFMul %float %7729 %7731
       %7733 = OpExtInst %float %1 FClamp %7732 %float_0 %float_1
       %7734 = OpCompositeConstruct %v3float %7715 %7715 %7715
       %7735 = OpExtInst %v3float %1 Fma %7734 %619 %639
       %7736 = OpDPdx %v3float %591
       %7737 = OpVectorTimesScalar %v3float %7736 %float_2097152
       %7738 = OpDPdx %v3float %7735
       %7739 = OpFAdd %v3float %7737 %7738
       %7740 = OpDPdy %v3float %591
       %7741 = OpVectorTimesScalar %v3float %7740 %float_2097152
       %7742 = OpDPdy %v3float %7735
       %7743 = OpFAdd %v3float %7741 %7742
       %7744 = OpExtInst %v3float %1 Cross %7739 %7743
       %7745 = OpExtInst %v3float %1 Normalize %7744
       %7746 = OpDPdx %v3float %591
       %7747 = OpVectorTimesScalar %v3float %7746 %float_2097152
       %7748 = OpDPdx %v3float %639
       %7749 = OpFAdd %v3float %7747 %7748
       %7750 = OpDPdy %v3float %591
       %7751 = OpVectorTimesScalar %v3float %7750 %float_2097152
       %7752 = OpDPdy %v3float %639
       %7753 = OpFAdd %v3float %7751 %7752
       %7754 = OpExtInst %v3float %1 Cross %7749 %7753
       %7755 = OpExtInst %v3float %1 Normalize %7754
       %7756 = OpFSub %v3float %7745 %7755
       %7757 = OpFAdd %v3float %7756 %619
       %7758 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_1
       %7759 = OpLoad %float %7758
       %7760 = OpCompositeConstruct %v3float %7759 %7759 %7759
       %7761 = OpExtInst %v3float %1 FMix %7757 %294 %7760
       %7762 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_2
       %7763 = OpLoad %float %7762
       %7764 = OpCompositeConstruct %v3float %7763 %7763 %7763
       %7765 = OpExtInst %v3float %1 Fma %7761 %7764 %640
       %7766 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_3
       %7767 = OpLoad %float %7766
       %7768 = OpCompositeConstruct %v3float %7767 %7767 %7767
       %7769 = OpFMul %v3float %591 %7768
       %7770 = OpFMul %v3float %7765 %7768
       %7771 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_1
       %7772 = OpLoad %float %7771
       %7773 = OpFMul %float %1159 %7772
       %7774 = OpCompositeConstruct %v2float %7773 %7773
       %7775 = OpFAdd %v2float %7774 %279
       %7776 = OpCompositeExtract %float %7769 0
       %7777 = OpCompositeExtract %float %7770 0
       %7778 = OpCompositeExtract %float %7769 1
       %7779 = OpCompositeExtract %float %7770 1
       %7780 = OpCompositeExtract %float %7775 0
       %7781 = OpCompositeConstruct %v3float %7776 %7778 %float_0
       %7782 = OpCompositeConstruct %v3float %7777 %7779 %7780
       %7783 = OpVectorTimesScalar %v3float %7782 %float_4_76837158en07
       %7784 = OpFAdd %v3float %7783 %140
       %7785 = OpFAdd %v3float %7781 %7784
       %7786 = OpExtInst %v3float %1 Floor %7785
       %7787 = OpFSub %v3float %7781 %7786
       %7788 = OpVectorTimesScalar %v3float %7787 %float_2097152
       %7789 = OpFAdd %v3float %7788 %7782
       %7790 = OpVectorTimesScalar %v3float %7789 %float_1
               OpBranch %7791
       %7791 = OpLabel
       %7792 = OpPhi %v3float %7790 %6287 %7793 %7794
       %7795 = OpPhi %float %float_1 %6287 %7796 %7794
       %7797 = OpPhi %float %float_0 %6287 %7798 %7794
       %7799 = OpPhi %uint %uint_0 %6287 %7800 %7794
       %7801 = OpULessThan %bool %7799 %uint_10
               OpLoopMerge %7802 %7794 DontUnroll
               OpBranchConditional %7801 %7794 %7802
       %7794 = OpLabel
       %7803 = OpExtInst %v3float %1 Fract %7792
       %7804 = OpExtInst %v3float %1 Floor %7792
       %7805 = OpDot %float %7804 %387
       %7806 = OpFAdd %float %7805 %float_19
       %7807 = OpFAdd %float %7805 %float_47
       %7808 = OpFAdd %float %7805 %float_66
       %7809 = OpFAdd %float %7805 %float_101
       %7810 = OpFAdd %float %7805 %float_120
       %7811 = OpFAdd %float %7805 %float_148
       %7812 = OpFAdd %float %7805 %float_167
       %7813 = OpConvertFToS %int %7805
       %7814 = OpCompositeConstruct %v3int %7813 %int_0 %int_0
       %7815 = OpBitcast %v3uint %7814
       %7816 = OpIMul %v3uint %7815 %403
       %7817 = OpIAdd %v3uint %7816 %405
       %7818 = OpCompositeExtract %uint %7817 1
       %7819 = OpCompositeExtract %uint %7817 2
       %7820 = OpIMul %uint %7818 %7819
       %7821 = OpCompositeExtract %uint %7817 0
       %7822 = OpIAdd %uint %7821 %7820
       %7823 = OpIMul %uint %7819 %7822
       %7824 = OpIAdd %uint %7818 %7823
       %7825 = OpIMul %uint %7822 %7824
       %7826 = OpIAdd %uint %7819 %7825
       %7827 = OpIMul %uint %7824 %7826
       %7828 = OpIAdd %uint %7822 %7827
       %7829 = OpCompositeInsert %v3uint %7828 %549 0
       %7830 = OpBitwiseAnd %v3uint %406 %407
       %7831 = OpShiftRightLogical %v3uint %7829 %7830
       %7832 = OpCompositeExtract %uint %7831 0
       %7833 = OpCompositeConstruct %v3uint %7832 %7832 %7832
       %7834 = OpBitwiseAnd %v3uint %7833 %388
       %7835 = OpConvertUToF %v3float %7834
       %7836 = OpExtInst %v3float %1 Fma %7835 %392 %282
       %7837 = OpDot %float %7836 %7803
       %7838 = OpConvertFToS %int %7806
       %7839 = OpFSub %v3float %7803 %351
       %7840 = OpCompositeConstruct %v3int %7838 %int_0 %int_0
       %7841 = OpBitcast %v3uint %7840
       %7842 = OpIMul %v3uint %7841 %403
       %7843 = OpIAdd %v3uint %7842 %405
       %7844 = OpCompositeExtract %uint %7843 1
       %7845 = OpCompositeExtract %uint %7843 2
       %7846 = OpIMul %uint %7844 %7845
       %7847 = OpCompositeExtract %uint %7843 0
       %7848 = OpIAdd %uint %7847 %7846
       %7849 = OpIMul %uint %7845 %7848
       %7850 = OpIAdd %uint %7844 %7849
       %7851 = OpIMul %uint %7848 %7850
       %7852 = OpIAdd %uint %7845 %7851
       %7853 = OpIMul %uint %7850 %7852
       %7854 = OpIAdd %uint %7848 %7853
       %7855 = OpCompositeInsert %v3uint %7854 %549 0
       %7856 = OpShiftRightLogical %v3uint %7855 %7830
       %7857 = OpCompositeExtract %uint %7856 0
       %7858 = OpCompositeConstruct %v3uint %7857 %7857 %7857
       %7859 = OpBitwiseAnd %v3uint %7858 %388
       %7860 = OpConvertUToF %v3float %7859
       %7861 = OpExtInst %v3float %1 Fma %7860 %392 %282
       %7862 = OpDot %float %7861 %7839
       %7863 = OpConvertFToS %int %7807
       %7864 = OpFSub %v3float %7803 %352
       %7865 = OpCompositeConstruct %v3int %7863 %int_0 %int_0
       %7866 = OpBitcast %v3uint %7865
       %7867 = OpIMul %v3uint %7866 %403
       %7868 = OpIAdd %v3uint %7867 %405
       %7869 = OpCompositeExtract %uint %7868 1
       %7870 = OpCompositeExtract %uint %7868 2
       %7871 = OpIMul %uint %7869 %7870
       %7872 = OpCompositeExtract %uint %7868 0
       %7873 = OpIAdd %uint %7872 %7871
       %7874 = OpIMul %uint %7870 %7873
       %7875 = OpIAdd %uint %7869 %7874
       %7876 = OpIMul %uint %7873 %7875
       %7877 = OpIAdd %uint %7870 %7876
       %7878 = OpIMul %uint %7875 %7877
       %7879 = OpIAdd %uint %7873 %7878
       %7880 = OpCompositeInsert %v3uint %7879 %549 0
       %7881 = OpShiftRightLogical %v3uint %7880 %7830
       %7882 = OpCompositeExtract %uint %7881 0
       %7883 = OpCompositeConstruct %v3uint %7882 %7882 %7882
       %7884 = OpBitwiseAnd %v3uint %7883 %388
       %7885 = OpConvertUToF %v3float %7884
       %7886 = OpExtInst %v3float %1 Fma %7885 %392 %282
       %7887 = OpDot %float %7886 %7864
       %7888 = OpConvertFToS %int %7808
       %7889 = OpFSub %v3float %7803 %137
       %7890 = OpCompositeConstruct %v3int %7888 %int_0 %int_0
       %7891 = OpBitcast %v3uint %7890
       %7892 = OpIMul %v3uint %7891 %403
       %7893 = OpIAdd %v3uint %7892 %405
       %7894 = OpCompositeExtract %uint %7893 1
       %7895 = OpCompositeExtract %uint %7893 2
       %7896 = OpIMul %uint %7894 %7895
       %7897 = OpCompositeExtract %uint %7893 0
       %7898 = OpIAdd %uint %7897 %7896
       %7899 = OpIMul %uint %7895 %7898
       %7900 = OpIAdd %uint %7894 %7899
       %7901 = OpIMul %uint %7898 %7900
       %7902 = OpIAdd %uint %7895 %7901
       %7903 = OpIMul %uint %7900 %7902
       %7904 = OpIAdd %uint %7898 %7903
       %7905 = OpCompositeInsert %v3uint %7904 %549 0
       %7906 = OpShiftRightLogical %v3uint %7905 %7830
       %7907 = OpCompositeExtract %uint %7906 0
       %7908 = OpCompositeConstruct %v3uint %7907 %7907 %7907
       %7909 = OpBitwiseAnd %v3uint %7908 %388
       %7910 = OpConvertUToF %v3float %7909
       %7911 = OpExtInst %v3float %1 Fma %7910 %392 %282
       %7912 = OpDot %float %7911 %7889
       %7913 = OpConvertFToS %int %7809
       %7914 = OpFSub %v3float %7803 %294
       %7915 = OpCompositeConstruct %v3int %7913 %int_0 %int_0
       %7916 = OpBitcast %v3uint %7915
       %7917 = OpIMul %v3uint %7916 %403
       %7918 = OpIAdd %v3uint %7917 %405
       %7919 = OpCompositeExtract %uint %7918 1
       %7920 = OpCompositeExtract %uint %7918 2
       %7921 = OpIMul %uint %7919 %7920
       %7922 = OpCompositeExtract %uint %7918 0
       %7923 = OpIAdd %uint %7922 %7921
       %7924 = OpIMul %uint %7920 %7923
       %7925 = OpIAdd %uint %7919 %7924
       %7926 = OpIMul %uint %7923 %7925
       %7927 = OpIAdd %uint %7920 %7926
       %7928 = OpIMul %uint %7925 %7927
       %7929 = OpIAdd %uint %7923 %7928
       %7930 = OpCompositeInsert %v3uint %7929 %549 0
       %7931 = OpShiftRightLogical %v3uint %7930 %7830
       %7932 = OpCompositeExtract %uint %7931 0
       %7933 = OpCompositeConstruct %v3uint %7932 %7932 %7932
       %7934 = OpBitwiseAnd %v3uint %7933 %388
       %7935 = OpConvertUToF %v3float %7934
       %7936 = OpExtInst %v3float %1 Fma %7935 %392 %282
       %7937 = OpDot %float %7936 %7914
       %7938 = OpConvertFToS %int %7810
       %7939 = OpFSub %v3float %7803 %143
       %7940 = OpCompositeConstruct %v3int %7938 %int_0 %int_0
       %7941 = OpBitcast %v3uint %7940
       %7942 = OpIMul %v3uint %7941 %403
       %7943 = OpIAdd %v3uint %7942 %405
       %7944 = OpCompositeExtract %uint %7943 1
       %7945 = OpCompositeExtract %uint %7943 2
       %7946 = OpIMul %uint %7944 %7945
       %7947 = OpCompositeExtract %uint %7943 0
       %7948 = OpIAdd %uint %7947 %7946
       %7949 = OpIMul %uint %7945 %7948
       %7950 = OpIAdd %uint %7944 %7949
       %7951 = OpIMul %uint %7948 %7950
       %7952 = OpIAdd %uint %7945 %7951
       %7953 = OpIMul %uint %7950 %7952
       %7954 = OpIAdd %uint %7948 %7953
       %7955 = OpCompositeInsert %v3uint %7954 %549 0
       %7956 = OpShiftRightLogical %v3uint %7955 %7830
       %7957 = OpCompositeExtract %uint %7956 0
       %7958 = OpCompositeConstruct %v3uint %7957 %7957 %7957
       %7959 = OpBitwiseAnd %v3uint %7958 %388
       %7960 = OpConvertUToF %v3float %7959
       %7961 = OpExtInst %v3float %1 Fma %7960 %392 %282
       %7962 = OpDot %float %7961 %7939
       %7963 = OpConvertFToS %int %7811
       %7964 = OpFSub %v3float %7803 %138
       %7965 = OpCompositeConstruct %v3int %7963 %int_0 %int_0
       %7966 = OpBitcast %v3uint %7965
       %7967 = OpIMul %v3uint %7966 %403
       %7968 = OpIAdd %v3uint %7967 %405
       %7969 = OpCompositeExtract %uint %7968 1
       %7970 = OpCompositeExtract %uint %7968 2
       %7971 = OpIMul %uint %7969 %7970
       %7972 = OpCompositeExtract %uint %7968 0
       %7973 = OpIAdd %uint %7972 %7971
       %7974 = OpIMul %uint %7970 %7973
       %7975 = OpIAdd %uint %7969 %7974
       %7976 = OpIMul %uint %7973 %7975
       %7977 = OpIAdd %uint %7970 %7976
       %7978 = OpIMul %uint %7975 %7977
       %7979 = OpIAdd %uint %7973 %7978
       %7980 = OpCompositeInsert %v3uint %7979 %549 0
       %7981 = OpShiftRightLogical %v3uint %7980 %7830
       %7982 = OpCompositeExtract %uint %7981 0
       %7983 = OpCompositeConstruct %v3uint %7982 %7982 %7982
       %7984 = OpBitwiseAnd %v3uint %7983 %388
       %7985 = OpConvertUToF %v3float %7984
       %7986 = OpExtInst %v3float %1 Fma %7985 %392 %282
       %7987 = OpDot %float %7986 %7964
       %7988 = OpConvertFToS %int %7812
       %7989 = OpFSub %v3float %7803 %130
       %7990 = OpCompositeConstruct %v3int %7988 %int_0 %int_0
       %7991 = OpBitcast %v3uint %7990
       %7992 = OpIMul %v3uint %7991 %403
       %7993 = OpIAdd %v3uint %7992 %405
       %7994 = OpCompositeExtract %uint %7993 1
       %7995 = OpCompositeExtract %uint %7993 2
       %7996 = OpIMul %uint %7994 %7995
       %7997 = OpCompositeExtract %uint %7993 0
       %7998 = OpIAdd %uint %7997 %7996
       %7999 = OpIMul %uint %7995 %7998
       %8000 = OpIAdd %uint %7994 %7999
       %8001 = OpIMul %uint %7998 %8000
       %8002 = OpIAdd %uint %7995 %8001
       %8003 = OpIMul %uint %8000 %8002
       %8004 = OpIAdd %uint %7998 %8003
       %8005 = OpCompositeInsert %v3uint %8004 %549 0
       %8006 = OpShiftRightLogical %v3uint %8005 %7830
       %8007 = OpCompositeExtract %uint %8006 0
       %8008 = OpCompositeConstruct %v3uint %8007 %8007 %8007
       %8009 = OpBitwiseAnd %v3uint %8008 %388
       %8010 = OpConvertUToF %v3float %8009
       %8011 = OpExtInst %v3float %1 Fma %8010 %392 %282
       %8012 = OpDot %float %8011 %7989
       %8013 = OpCompositeExtract %float %7803 0
       %8014 = OpCompositeExtract %float %7803 1
       %8015 = OpCompositeExtract %float %7803 2
       %8016 = OpCompositeConstruct %v4float %8013 %8014 %8015 %float_0
       %8017 = OpFMul %v4float %8016 %8016
       %8018 = OpFMul %v4float %8017 %8016
       %8019 = OpVectorTimesScalar %v4float %8016 %float_6
       %8020 = OpFSub %v4float %8019 %383
       %8021 = OpExtInst %v4float %1 Fma %8016 %8020 %384
       %8022 = OpFMul %v4float %8018 %8021
       %8023 = OpCompositeExtract %float %8022 0
       %8024 = OpExtInst %float %1 FMix %7837 %7862 %8023
       %8025 = OpExtInst %float %1 FMix %7887 %7912 %8023
       %8026 = OpCompositeExtract %float %8022 1
       %8027 = OpExtInst %float %1 FMix %8024 %8025 %8026
       %8028 = OpExtInst %float %1 FMix %7937 %7962 %8023
       %8029 = OpExtInst %float %1 FMix %7987 %8012 %8023
       %8030 = OpExtInst %float %1 FMix %8028 %8029 %8026
       %8031 = OpCompositeExtract %float %8022 2
       %8032 = OpExtInst %float %1 FMix %8027 %8030 %8031
       %8033 = OpExtInst %float %1 FAbs %8032
       %7798 = OpExtInst %float %1 Fma %8033 %7795 %7797
       %7793 = OpVectorTimesScalar %v3float %7792 %float_2
       %7796 = OpFMul %float %7795 %float_0_5
       %7800 = OpIAdd %uint %7799 %uint_1
               OpBranch %7791
       %7802 = OpLabel
       %8034 = OpExtInst %float %1 FMix %float_0 %float_1 %7797
       %8035 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_2
       %8036 = OpLoad %float %8035
       %8037 = OpFNegate %float %7733
       %8038 = OpExtInst %float %1 Fma %8037 %8036 %8034
       %8039 = OpExtInst %float %1 Fma %7733 %8036 %float_1
       %8040 = OpExtInst %float %1 Fma %8037 %8036 %8039
       %8041 = OpFDiv %float %8038 %8040
       %8042 = OpExtInst %float %1 Fma %8041 %float_n1 %float_1
       %8043 = OpExtInst %float %1 FClamp %8042 %float_0 %float_1
       %8044 = OpFOrdLessThanEqual %bool %8043 %float_0
       %8045 = OpExtInst %float %1 Pow %8043 %float_2
       %8046 = OpSelect %float %8044 %float_0 %8045
       %8047 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_0
       %8048 = OpLoad %float %8047
       %8049 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_3
       %8050 = OpLoad %float %8049
       %8051 = OpExtInst %float %1 FMix %8048 %8050 %8046
       %8052 = OpExtInst %float %1 FClamp %8051 %float_0 %float_1
       %8053 = OpFMul %float %7733 %8052
       %8054 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_1
       %8055 = OpLoad %float %8054
       %8056 = OpCompositeConstruct %v3float %8055 %8055 %8055
       %8057 = OpFMul %v3float %591 %8056
       %8058 = OpFMul %v3float %640 %8056
       %8059 = OpVectorTimesScalar %v3float %8058 %float_4_76837158en07
       %8060 = OpFAdd %v3float %8059 %140
       %8061 = OpExtInst %v3float %1 Fma %591 %8056 %8060
       %8062 = OpExtInst %v3float %1 Floor %8061
       %8063 = OpFNegate %v3float %8062
       %8064 = OpExtInst %v3float %1 Fma %591 %8056 %8063
       %8065 = OpVectorTimesScalar %v3float %8064 %float_2097152
       %8066 = OpExtInst %v3float %1 Fma %640 %8056 %8065
       %8067 = OpVectorTimesScalar %v3float %8066 %float_1
               OpBranch %8068
       %8068 = OpLabel
       %8069 = OpPhi %v3float %541 %7802 %8070 %8071
       %8072 = OpPhi %v3float %8067 %7802 %8073 %8071
       %8074 = OpPhi %float %float_1 %7802 %8075 %8071
       %8076 = OpPhi %float %float_0 %7802 %8077 %8071
       %8078 = OpPhi %uint %uint_0 %7802 %8079 %8071
       %8080 = OpULessThan %bool %8078 %uint_1
               OpLoopMerge %8081 %8071 DontUnroll
               OpBranchConditional %8080 %8082 %8081
       %8082 = OpLabel
       %8083 = OpExtInst %v3float %1 Fract %8072
       %8084 = OpExtInst %v3float %1 Floor %8072
       %8085 = OpCompositeInsert %v3float %float_0 %8069 0
               OpBranch %8086
       %8086 = OpLabel
       %8087 = OpPhi %v4float %353 %8082 %8088 %8089
       %8070 = OpPhi %v3float %8085 %8082 %8090 %8089
       %8091 = OpCompositeExtract %float %8070 0
       %8092 = OpFOrdLessThanEqual %bool %8091 %float_1
               OpLoopMerge %8093 %8089 None
               OpBranchConditional %8092 %8094 %8093
       %8094 = OpLabel
       %8095 = OpCompositeInsert %v3float %float_0 %8070 1
               OpBranch %8096
       %8096 = OpLabel
       %8097 = OpPhi %v3float %8095 %8094 %8098 %8099
       %8088 = OpPhi %v4float %8087 %8094 %8100 %8099
       %8101 = OpCompositeExtract %float %8097 1
       %8102 = OpFOrdLessThanEqual %bool %8101 %float_1
               OpLoopMerge %8103 %8099 None
               OpBranchConditional %8102 %8104 %8103
       %8104 = OpLabel
       %8105 = OpCompositeInsert %v3float %float_0 %8097 2
               OpBranch %8106
       %8106 = OpLabel
       %8100 = OpPhi %v4float %8088 %8104 %8107 %8108
       %8109 = OpPhi %v3float %8105 %8104 %8110 %8108
       %8111 = OpCompositeExtract %float %8109 2
       %8112 = OpFOrdLessThanEqual %bool %8111 %float_1
               OpLoopMerge %8113 %8108 None
               OpBranchConditional %8112 %8108 %8113
       %8108 = OpLabel
       %8114 = OpFAdd %v3float %8084 %8109
       %8115 = OpVectorShuffle %v3float %537 %8114 3 4 5
       %8116 = OpConvertFToS %v3int %8115
       %8117 = OpBitcast %v3uint %8116
       %8118 = OpIMul %v3uint %8117 %403
       %8119 = OpIAdd %v3uint %8118 %405
       %8120 = OpCompositeExtract %uint %8119 1
       %8121 = OpCompositeExtract %uint %8119 2
       %8122 = OpIMul %uint %8120 %8121
       %8123 = OpCompositeExtract %uint %8119 0
       %8124 = OpIAdd %uint %8123 %8122
       %8125 = OpIMul %uint %8121 %8124
       %8126 = OpIAdd %uint %8120 %8125
       %8127 = OpIMul %uint %8124 %8126
       %8128 = OpIAdd %uint %8121 %8127
       %8129 = OpIMul %uint %8126 %8128
       %8130 = OpIAdd %uint %8124 %8129
       %8131 = OpCompositeInsert %v3uint %8130 %8119 0
       %8132 = OpIMul %uint %8128 %8130
       %8133 = OpIAdd %uint %8126 %8132
       %8134 = OpCompositeInsert %v3uint %8133 %8131 1
       %8135 = OpIMul %uint %8130 %8133
       %8136 = OpIAdd %uint %8128 %8135
       %8137 = OpCompositeInsert %v3uint %8136 %8134 2
       %8138 = OpBitwiseAnd %v3uint %406 %407
       %8139 = OpShiftRightLogical %v3uint %8137 %8138
       %8140 = OpConvertUToF %v3float %8139
       %8141 = OpExtInst %v3float %1 Fma %8140 %521 %510
       %8142 = OpExtInst %v3float %1 Normalize %8141
       %8143 = OpVectorTimesScalar %v3float %8142 %float_0_2588
       %8144 = OpFAdd %v3float %8109 %8143
       %8145 = OpFSub %v3float %8083 %8144
       %8146 = OpCompositeExtract %float %8100 3
       %8147 = OpDot %float %8145 %8145
       %8148 = OpExtInst %float %1 NMin %8146 %8147
       %8107 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %8148
       %8149 = OpFAdd %float %8111 %float_1
       %8110 = OpCompositeInsert %v3float %8149 %8109 2
               OpBranch %8106
       %8113 = OpLabel
               OpBranch %8099
       %8099 = OpLabel
       %8150 = OpCompositeExtract %float %8109 1
       %8151 = OpFAdd %float %8150 %float_1
       %8098 = OpCompositeInsert %v3float %8151 %8109 1
               OpBranch %8096
       %8103 = OpLabel
               OpBranch %8089
       %8089 = OpLabel
       %8152 = OpCompositeExtract %float %8097 0
       %8153 = OpFAdd %float %8152 %float_1
       %8090 = OpCompositeInsert %v3float %8153 %8097 0
               OpBranch %8086
       %8093 = OpLabel
       %8154 = OpCompositeExtract %float %8087 3
       %8155 = OpExtInst %float %1 Sqrt %8154
       %8156 = OpExtInst %float %1 Fma %8155 %float_2 %float_n1
       %8157 = OpExtInst %float %1 FAbs %8156
       %8077 = OpExtInst %float %1 Fma %8157 %8074 %8076
       %8073 = OpVectorTimesScalar %v3float %8072 %float_2
       %8075 = OpFMul %float %8074 %float_0_5
               OpBranch %8071
       %8071 = OpLabel
       %8079 = OpIAdd %uint %8078 %uint_1
               OpBranch %8068
       %8081 = OpLabel
       %8158 = OpExtInst %float %1 FMix %float_n1 %float_1 %8076
       %8159 = OpExtInst %float %1 FClamp %8158 %float_0 %float_1
       %8160 = OpFMul %v3float %8058 %281
       %8161 = OpVectorTimesScalar %v3float %8160 %float_4_76837158en07
       %8162 = OpFAdd %v3float %8161 %140
       %8163 = OpExtInst %v3float %1 Fma %8057 %281 %8162
       %8164 = OpExtInst %v3float %1 Floor %8163
       %8165 = OpFNegate %v3float %8164
       %8166 = OpExtInst %v3float %1 Fma %8057 %281 %8165
       %8167 = OpVectorTimesScalar %v3float %8166 %float_2097152
       %8168 = OpExtInst %v3float %1 Fma %8058 %281 %8167
       %8169 = OpVectorTimesScalar %v3float %8168 %float_1
               OpBranch %8170
       %8170 = OpLabel
       %8171 = OpPhi %v3float %541 %8081 %8172 %8173
       %8174 = OpPhi %v3float %8169 %8081 %8175 %8173
       %8176 = OpPhi %float %float_1 %8081 %8177 %8173
       %8178 = OpPhi %float %float_0 %8081 %8179 %8173
       %8180 = OpPhi %uint %uint_0 %8081 %8181 %8173
       %8182 = OpULessThan %bool %8180 %uint_1
               OpLoopMerge %8183 %8173 DontUnroll
               OpBranchConditional %8182 %8184 %8183
       %8184 = OpLabel
       %8185 = OpExtInst %v3float %1 Fract %8174
       %8186 = OpExtInst %v3float %1 Floor %8174
       %8187 = OpCompositeInsert %v3float %float_0 %8171 0
               OpBranch %8188
       %8188 = OpLabel
       %8189 = OpPhi %v4float %353 %8184 %8190 %8191
       %8172 = OpPhi %v3float %8187 %8184 %8192 %8191
       %8193 = OpCompositeExtract %float %8172 0
       %8194 = OpFOrdLessThanEqual %bool %8193 %float_1
               OpLoopMerge %8195 %8191 None
               OpBranchConditional %8194 %8196 %8195
       %8196 = OpLabel
       %8197 = OpCompositeInsert %v3float %float_0 %8172 1
               OpBranch %8198
       %8198 = OpLabel
       %8199 = OpPhi %v3float %8197 %8196 %8200 %8201
       %8190 = OpPhi %v4float %8189 %8196 %8202 %8201
       %8203 = OpCompositeExtract %float %8199 1
       %8204 = OpFOrdLessThanEqual %bool %8203 %float_1
               OpLoopMerge %8205 %8201 None
               OpBranchConditional %8204 %8206 %8205
       %8206 = OpLabel
       %8207 = OpCompositeInsert %v3float %float_0 %8199 2
               OpBranch %8208
       %8208 = OpLabel
       %8202 = OpPhi %v4float %8190 %8206 %8209 %8210
       %8211 = OpPhi %v3float %8207 %8206 %8212 %8210
       %8213 = OpCompositeExtract %float %8211 2
       %8214 = OpFOrdLessThanEqual %bool %8213 %float_1
               OpLoopMerge %8215 %8210 None
               OpBranchConditional %8214 %8210 %8215
       %8210 = OpLabel
       %8216 = OpFAdd %v3float %8186 %8211
       %8217 = OpVectorShuffle %v3float %537 %8216 3 4 5
       %8218 = OpConvertFToS %v3int %8217
       %8219 = OpBitcast %v3uint %8218
       %8220 = OpIMul %v3uint %8219 %403
       %8221 = OpIAdd %v3uint %8220 %405
       %8222 = OpCompositeExtract %uint %8221 1
       %8223 = OpCompositeExtract %uint %8221 2
       %8224 = OpIMul %uint %8222 %8223
       %8225 = OpCompositeExtract %uint %8221 0
       %8226 = OpIAdd %uint %8225 %8224
       %8227 = OpIMul %uint %8223 %8226
       %8228 = OpIAdd %uint %8222 %8227
       %8229 = OpIMul %uint %8226 %8228
       %8230 = OpIAdd %uint %8223 %8229
       %8231 = OpIMul %uint %8228 %8230
       %8232 = OpIAdd %uint %8226 %8231
       %8233 = OpCompositeInsert %v3uint %8232 %8221 0
       %8234 = OpIMul %uint %8230 %8232
       %8235 = OpIAdd %uint %8228 %8234
       %8236 = OpCompositeInsert %v3uint %8235 %8233 1
       %8237 = OpIMul %uint %8232 %8235
       %8238 = OpIAdd %uint %8230 %8237
       %8239 = OpCompositeInsert %v3uint %8238 %8236 2
       %8240 = OpBitwiseAnd %v3uint %406 %407
       %8241 = OpShiftRightLogical %v3uint %8239 %8240
       %8242 = OpConvertUToF %v3float %8241
       %8243 = OpExtInst %v3float %1 Fma %8242 %521 %510
       %8244 = OpExtInst %v3float %1 Normalize %8243
       %8245 = OpVectorTimesScalar %v3float %8244 %float_0_2588
       %8246 = OpFAdd %v3float %8211 %8245
       %8247 = OpFSub %v3float %8185 %8246
       %8248 = OpCompositeExtract %float %8202 3
       %8249 = OpDot %float %8247 %8247
       %8250 = OpExtInst %float %1 NMin %8248 %8249
       %8209 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %8250
       %8251 = OpFAdd %float %8213 %float_1
       %8212 = OpCompositeInsert %v3float %8251 %8211 2
               OpBranch %8208
       %8215 = OpLabel
               OpBranch %8201
       %8201 = OpLabel
       %8252 = OpCompositeExtract %float %8211 1
       %8253 = OpFAdd %float %8252 %float_1
       %8200 = OpCompositeInsert %v3float %8253 %8211 1
               OpBranch %8198
       %8205 = OpLabel
               OpBranch %8191
       %8191 = OpLabel
       %8254 = OpCompositeExtract %float %8199 0
       %8255 = OpFAdd %float %8254 %float_1
       %8192 = OpCompositeInsert %v3float %8255 %8199 0
               OpBranch %8188
       %8195 = OpLabel
       %8256 = OpCompositeExtract %float %8189 3
       %8257 = OpExtInst %float %1 Sqrt %8256
       %8258 = OpExtInst %float %1 Fma %8257 %float_2 %float_n1
       %8259 = OpExtInst %float %1 FAbs %8258
       %8179 = OpExtInst %float %1 Fma %8259 %8176 %8178
       %8175 = OpVectorTimesScalar %v3float %8174 %float_2
       %8177 = OpFMul %float %8176 %float_0_5
               OpBranch %8173
       %8173 = OpLabel
       %8181 = OpIAdd %uint %8180 %uint_1
               OpBranch %8170
       %8183 = OpLabel
       %8260 = OpExtInst %float %1 FMix %float_n1 %float_1 %8178
       %8261 = OpExtInst %float %1 FClamp %8260 %float_0 %float_1
       %8262 = OpFAdd %float %8159 %8261
       %8263 = OpFNegate %float %8262
       %8264 = OpExtInst %float %1 Fma %7733 %8052 %8263
       %8265 = OpExtInst %float %1 Fma %1653 %1655 %8264
       %8266 = OpFMul %float %772 %8265
       %8267 = OpExtInst %float %1 FClamp %8266 %float_0 %float_1
       %8268 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_3
       %8269 = OpLoad %float %8268
       %8270 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_2
       %8271 = OpLoad %float %8270
       %8272 = OpExtInst %float %1 FMix %8269 %8271 %8267
       %8273 = OpCompositeExtract %float %3516 2
       %8274 = OpCompositeConstruct %v3float %8273 %8273 %8273
       %8275 = OpExtInst %v3float %1 Fma %8274 %619 %639
       %8276 = OpDPdx %v3float %591
       %8277 = OpVectorTimesScalar %v3float %8276 %float_2097152
       %8278 = OpDPdx %v3float %8275
       %8279 = OpFAdd %v3float %8277 %8278
       %8280 = OpDPdy %v3float %591
       %8281 = OpVectorTimesScalar %v3float %8280 %float_2097152
       %8282 = OpDPdy %v3float %8275
       %8283 = OpFAdd %v3float %8281 %8282
       %8284 = OpExtInst %v3float %1 Cross %8279 %8283
       %8285 = OpExtInst %v3float %1 Normalize %8284
       %8286 = OpFSub %v3float %8285 %7755
       %8287 = OpFAdd %v3float %8286 %619
       %8288 = OpDot %float %7761 %656
       %8289 = OpExtInst %float %1 NMax %float_0 %8288
       %8290 = OpFSub %float %float_1 %8289
       %8291 = OpExtInst %float %1 FAbs %8290
       %8292 = OpExtInst %float %1 NMax %8291 %float_9_99999975en05
       %8293 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_0
       %8294 = OpLoad %float %8293
       %8295 = OpFOrdLessThanEqual %bool %8292 %float_0
       %8296 = OpExtInst %float %1 Pow %8292 %8294
       %8297 = OpSelect %float %8295 %float_0 %8296
       %8298 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_2
       %8299 = OpLoad %float %8298
       %8300 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_1
       %8301 = OpLoad %float %8300
       %8302 = OpExtInst %float %1 Fma %8297 %8299 %8301
       %8303 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_97 %int_0
       %8304 = OpLoad %float %8303
       %8305 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_3
       %8306 = OpLoad %float %8305
       %8307 = OpExtInst %float %1 FMix %8304 %8306 %8302
       %8308 = OpCompositeConstruct %v3float %8307 %8307 %8307
       %8309 = OpExtInst %v3float %1 FMix %7761 %294 %8308
       %8310 = OpCompositeConstruct %v3float %771 %771 %771
       %8311 = OpExtInst %v3float %1 FMix %8287 %8309 %8310
       %8312 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_97 %int_1
       %8313 = OpLoad %float %8312
       %8314 = OpExtInst %float %1 FMix %8313 %float_0 %771
       %8315 = OpCompositeConstruct %v3float %8314 %8314 %8314
       %8316 = OpExtInst %v3float %1 FMix %8311 %294 %8315
       %8317 = OpExtInst %float %1 Fma %1442 %1651 %1442
       %8318 = OpExtInst %float %1 Fma %8053 %8262 %8053
       %8319 = OpFAdd %float %8317 %8318
       %8320 = OpFMul %float %772 %8319
       %8321 = OpCompositeConstruct %v3float %8320 %8320 %8320
       %8322 = OpExtInst %v3float %1 Fma %8321 %619 %639
       %8323 = OpDPdx %v3float %591
       %8324 = OpVectorTimesScalar %v3float %8323 %float_2097152
       %8325 = OpDPdx %v3float %8322
       %8326 = OpFAdd %v3float %8324 %8325
       %8327 = OpDPdy %v3float %591
       %8328 = OpVectorTimesScalar %v3float %8327 %float_2097152
       %8329 = OpDPdy %v3float %8322
       %8330 = OpFAdd %v3float %8328 %8329
       %8331 = OpExtInst %v3float %1 Cross %8326 %8330
       %8332 = OpExtInst %v3float %1 Normalize %8331
       %8333 = OpFSub %v3float %8332 %7755
       %8334 = OpFAdd %v3float %8333 %619
       %8335 = OpCompositeConstruct %v3float %1442 %1442 %1442
       %8336 = OpExtInst %v3float %1 FMix %8316 %8334 %8335
       %8337 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_97 %int_2
       %8338 = OpLoad %float %8337
       %8339 = OpExtInst %float %1 FMix %8338 %float_1 %8267
       %8340 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_1
       %8341 = OpLoad %float %8340
       %8342 = OpExtInst %float %1 Pow %8292 %8341
       %8343 = OpSelect %float %8295 %float_0 %8342
       %8344 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_3
       %8345 = OpLoad %float %8344
       %8346 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_2
       %8347 = OpLoad %float %8346
       %8348 = OpExtInst %float %1 Fma %8343 %8345 %8347
       %8349 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_0
       %8350 = OpLoad %float %8349
       %8351 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_103 %int_3
       %8352 = OpLoad %float %8351
       %8353 = OpExtInst %float %1 FMix %8350 %8352 %8348
       %8354 = OpExtInst %float %1 FMix %8353 %float_1 %8267
       %8355 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_1
       %8356 = OpLoad %float %8355
       %8357 = OpExtInst %float %1 FMix %float_0 %8356 %8267
       %8358 = OpCompositeConstruct %v3float %8357 %8357 %8357
       %8359 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_107
       %8360 = OpLoad %v4float %8359
       %8361 = OpVectorShuffle %v3float %8360 %8360 0 1 2
       %8362 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_106
       %8363 = OpLoad %v4float %8362
       %8364 = OpVectorShuffle %v3float %8363 %8363 0 1 2
       %8365 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_2
       %8366 = OpLoad %float %8365
       %8367 = OpCompositeConstruct %v3float %8366 %8366 %8366
       %8368 = OpFAdd %v3float %8361 %8364
       %8369 = OpFDiv %v3float %8361 %8368
       %8370 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_107 %int_3
       %8371 = OpLoad %float %8370
       %8372 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_108 %int_0
       %8373 = OpLoad %float %8372
       %8374 = OpFSub %float %694 %float_0_333299994
       %8375 = OpFOrdLessThan %bool %8374 %float_0
               OpSelectionMerge %8376 None
               OpBranchConditional %8375 %8377 %8376
       %8377 = OpLabel
               OpKill
       %8376 = OpLabel
       %8378 = OpAccessChain %_ptr_Uniform_uint %View %uint_20
       %8379 = OpLoad %uint %8378
       %8380 = OpConvertUToF %float %8379
       %8381 = OpVectorTimesScalar %v2float %466 %8380
       %8382 = OpFAdd %v2float %620 %8381
       %8383 = OpDot %float %8382 %467
       %8384 = OpExtInst %float %1 Fract %8383
       %8385 = OpFMul %float %float_52_9829178 %8384
       %8386 = OpExtInst %float %1 Fract %8385
       %8387 = OpIMul %uint %579 %uint_41
       %8388 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %8387
       %8389 = OpLoad %v4float %8388
       %8390 = OpCompositeExtract %float %8389 0
       %8391 = OpBitcast %uint %8390
       %8392 = OpBitwiseAnd %uint %8391 %uint_512
       %8393 = OpINotEqual %bool %8392 %uint_0
       %8394 = OpSelect %uint %8393 %uint_32 %uint_0
       %8395 = OpBitwiseOr %uint %uint_1 %8394
       %8396 = OpLoad %v4float %8388
       %8397 = OpCompositeExtract %float %8396 0
       %8398 = OpBitcast %uint %8397
       %8399 = OpBitwiseAnd %uint %8398 %uint_256
       %8400 = OpINotEqual %bool %8399 %uint_0
       %8401 = OpSelect %uint %8400 %uint_64 %uint_0
       %8402 = OpBitwiseOr %uint %8395 %8401
       %8403 = OpBitwiseAnd %uint %8402 %uint_4294967288
       %8404 = OpBitwiseOr %uint %8403 %uint_4
       %8405 = OpVectorShuffle %v3float %8358 %459 0 1 2
       %8406 = OpExtInst %v3float %1 FClamp %8405 %105 %130
       %8407 = OpVectorShuffle %v3float %609 %609 3 3 3
       %8408 = OpVectorShuffle %v3float %609 %609 0 1 2
       %8409 = OpExtInst %v3float %1 Fma %8406 %8407 %8408
       %8410 = OpExtInst %float %1 FClamp %8354 %float_0 %float_1
       %8411 = OpCompositeExtract %float %611 3
       %8412 = OpCompositeExtract %float %611 0
       %8413 = OpExtInst %float %1 Fma %8410 %8411 %8412
       %8414 = OpCompositeInsert %v4float %8413 %542 1
       %8415 = OpCompositeExtract %float %613 1
       %8416 = OpCompositeExtract %float %613 0
       %8417 = OpExtInst %float %1 Fma %8272 %8415 %8416
       %8418 = OpAccessChain %_ptr_Uniform_float %View %uint_39
       %8419 = OpLoad %float %8418
       %8420 = OpExtInst %float %1 NMax %8419 %8417
       %8421 = OpExtInst %float %1 FClamp %8420 %float_0 %float_1
       %8422 = OpCompositeInsert %v4float %8421 %8414 2
       %8423 = OpExtInst %float %1 FClamp %8339 %float_0 %float_1
       %8424 = OpCompositeInsert %v4float %8423 %8422 3
       %8425 = OpVectorShuffle %v3float %8369 %459 0 1 2
       %8426 = OpExtInst %v3float %1 FClamp %8425 %105 %130
       %8427 = OpVectorShuffle %v4float %459 %8426 4 5 6 3
       %8428 = OpVectorShuffle %v3float %8368 %459 0 1 2
       %8429 = OpExtInst %v3float %1 FClamp %8428 %105 %166
       %8430 = OpCompositeInsert %v4float %float_0 %8427 3
       %8431 = OpVectorShuffle %v3float %8367 %459 0 1 2
       %8432 = OpExtInst %v3float %1 FClamp %8431 %105 %166
       %8433 = OpVectorShuffle %v3float %8409 %459 0 1 2
       %8434 = OpExtInst %v3float %1 Normalize %8336
       %8435 = OpDot %float %8434 %8434
       %8436 = OpBitcast %uint %8435
       %8437 = OpBitwiseAnd %uint %8436 %uint_2139095040
       %8438 = OpINotEqual %bool %8437 %uint_2139095040
       %8439 = OpLogicalNot %bool %8438
               OpSelectionMerge %8440 DontFlatten
               OpBranchConditional %8439 %8441 %8440
       %8441 = OpLabel
       %8442 = OpExtInst %v3float %1 Normalize %619
               OpBranch %8440
       %8440 = OpLabel
       %8443 = OpPhi %v3float %8336 %8376 %8442 %8441
       %8444 = OpPhi %v3float %8434 %8376 %8442 %8441
       %8445 = OpFSub %float %float_1 %8423
       %8446 = OpLoad %v4float %8388
       %8447 = OpCompositeExtract %float %8446 0
       %8448 = OpBitcast %uint %8447
       %8449 = OpBitwiseAnd %uint %8448 %uint_2
       %8450 = OpINotEqual %bool %8449 %uint_0
       %8451 = OpAccessChain %_ptr_Uniform_float %View %uint_38
       %8452 = OpLoad %float %8451
       %8453 = OpFOrdGreaterThan %bool %8452 %float_0
       %8454 = OpLogicalAnd %bool %8450 %8453
               OpSelectionMerge %8455 None
               OpBranchConditional %8454 %8456 %8455
       %8456 = OpLabel
       %8457 = OpAccessChain %_ptr_Uniform_float %IndirectLightingCache %uint_4
       %8458 = OpLoad %float %8457
               OpBranch %8455
       %8455 = OpLabel
       %8459 = OpPhi %float %float_1 %8440 %8458 %8456
       %8460 = OpLoad %v4float %8388
       %8461 = OpCompositeExtract %float %8460 0
       %8462 = OpBitcast %uint %8461
       %8463 = OpBitwiseAnd %uint %8462 %uint_4
       %8464 = OpINotEqual %bool %8463 %uint_0
               OpSelectionMerge %8465 DontFlatten
               OpBranchConditional %8464 %8466 %8465
       %8466 = OpLabel
       %8467 = OpVectorTimesScalar %v3float %591 %float_2097152
       %8468 = OpFAdd %v3float %8467 %639
       %8469 = OpAccessChain %_ptr_Uniform_v3float %View %uint_33
       %8470 = OpLoad %v3float %8469
       %8471 = OpAccessChain %_ptr_Uniform_v3float %View %uint_34
       %8472 = OpLoad %v3float %8471
       %8473 = OpExtInst %v3float %1 Fma %8468 %8470 %8472
       %8474 = OpExtInst %v3float %1 FClamp %8473 %105 %306
       %8475 = OpAccessChain %_ptr_Uniform_v3float %View %uint_35
       %8476 = OpLoad %v3float %8475
       %8477 = OpFMul %v3float %8474 %8476
       %8478 = OpCompositeExtract %float %8477 0
       %8479 = OpCompositeExtract %float %8477 1
       %8480 = OpCompositeExtract %float %8477 2
       %8481 = OpConvertFToS %int %8478
       %8482 = OpConvertFToS %int %8479
       %8483 = OpConvertFToS %int %8480
       %8484 = OpCompositeConstruct %v4int %8481 %8482 %8483 %int_0
       %8485 = OpVectorShuffle %v3int %8484 %8484 0 1 2
       %8486 = OpLoad %type_3d_image %View_VolumetricLightmapIndirectionTexture
       %8487 = OpImageFetch %v4uint %8486 %8485 Lod %int_0
       %8488 = OpConvertUToF %v4float %8487
       %8489 = OpAccessChain %_ptr_Uniform_float %View %uint_36
       %8490 = OpLoad %float %8489
       %8491 = OpFAdd %float %8490 %float_1
       %8492 = OpVectorShuffle %v3float %8488 %8488 0 1 2
       %8493 = OpVectorTimesScalar %v3float %8492 %8491
       %8494 = OpCompositeExtract %float %8488 3
       %8495 = OpCompositeConstruct %v3float %8494 %8494 %8494
       %8496 = OpFDiv %v3float %8477 %8495
       %8497 = OpExtInst %v3float %1 Fract %8496
       %8498 = OpVectorTimesScalar %v3float %8497 %8490
       %8499 = OpFAdd %v3float %8493 %8498
       %8500 = OpFAdd %v3float %8499 %140
       %8501 = OpAccessChain %_ptr_Uniform_v3float %View %uint_37
       %8502 = OpLoad %v3float %8501
       %8503 = OpFMul %v3float %8500 %8502
       %8504 = OpLoad %type_3d_image_0 %View_DirectionalLightShadowingBrickTexture
       %8505 = OpLoad %type_sampler %View_SharedBilinearClampedSampler
       %8506 = OpSampledImage %type_sampled_image_0 %8504 %8505
       %8507 = OpImageSampleExplicitLod %v4float %8506 %8503 Lod %float_0
       %8508 = OpCompositeExtract %float %8507 0
               OpBranch %8465
       %8465 = OpLabel
       %8509 = OpPhi %float %8459 %8455 %8508 %8466
       %8510 = OpCompositeConstruct %v4float %8509 %float_1 %float_1 %float_1
       %8511 = OpFOrdEqual %v4bool %8510 %101
       %8512 = OpAll %bool %8511
       %8513 = OpFOrdEqual %v4bool %8510 %120
       %8514 = OpAll %bool %8513
       %8515 = OpLogicalNot %bool %8512
       %8516 = OpLogicalNot %bool %8514
       %8517 = OpLogicalAnd %bool %8515 %8516
               OpSelectionMerge %8518 None
               OpBranchConditional %8517 %8519 %8520
       %8520 = OpLabel
               OpSelectionMerge %8521 None
               OpBranchConditional %8512 %8522 %8523
       %8523 = OpLabel
               OpSelectionMerge %8524 None
               OpBranchConditional %8514 %8525 %8524
       %8525 = OpLabel
       %8526 = OpBitwiseOr %uint %8404 %uint_0
       %8527 = OpBitwiseOr %uint %8526 %uint_0
               OpBranch %8524
       %8524 = OpLabel
       %8528 = OpPhi %uint %8404 %8523 %8527 %8525
               OpBranch %8521
       %8522 = OpLabel
       %8529 = OpBitwiseOr %uint %8404 %uint_0
       %8530 = OpBitwiseOr %uint %8529 %uint_16
               OpBranch %8521
       %8521 = OpLabel
       %8531 = OpPhi %uint %8528 %8524 %8530 %8522
               OpBranch %8518
       %8519 = OpLabel
       %8532 = OpBitwiseOr %uint %8404 %uint_8
               OpBranch %8518
       %8518 = OpLabel
       %8533 = OpPhi %uint %8531 %8521 %8532 %8519
       %8534 = OpFMul %float %float_0_0799999982 %8413
       %8535 = OpCompositeConstruct %v3float %8534 %8534 %8534
       %8536 = OpAccessChain %_ptr_Uniform_float %View %uint_15 %int_3
       %8537 = OpLoad %float %8536
       %8538 = OpVectorTimesScalar %v3float %8433 %8537
       %8539 = OpFAdd %v3float %8538 %8408
       %8540 = OpAccessChain %_ptr_Uniform_float %View %uint_16 %int_3
       %8541 = OpLoad %float %8540
       %8542 = OpVectorTimesScalar %v3float %8535 %8541
       %8543 = OpVectorShuffle %v3float %611 %611 0 1 2
       %8544 = OpFAdd %v3float %8542 %8543
       %8545 = OpAccessChain %_ptr_Uniform_float %View %uint_25
       %8546 = OpLoad %float %8545
       %8547 = OpFOrdNotEqual %bool %8546 %float_0
               OpSelectionMerge %8548 None
               OpBranchConditional %8547 %8549 %8548
       %8549 = OpLabel
       %8550 = OpVectorTimesScalar %v3float %8544 %float_0_449999988
       %8551 = OpFAdd %v3float %8539 %8550
               OpBranch %8548
       %8548 = OpLabel
       %8552 = OpPhi %v3float %8539 %8518 %8551 %8549
       %8553 = OpCompositeConstruct %v3bool %8547 %8547 %8547
       %8554 = OpSelect %v3float %8553 %105 %8544
               OpSelectionMerge %8555 None
               OpBranchConditional %8453 %8556 %8555
       %8556 = OpLabel
       %8557 = OpVectorTimesScalar %v3float %591 %float_2097152
       %8558 = OpFAdd %v3float %8557 %639
       %8559 = OpAccessChain %_ptr_Uniform_v3float %IndirectLightingCache %uint_1
       %8560 = OpLoad %v3float %8559
       %8561 = OpAccessChain %_ptr_Uniform_v3float %IndirectLightingCache %int_0
       %8562 = OpLoad %v3float %8561
       %8563 = OpExtInst %v3float %1 Fma %8558 %8560 %8562
       %8564 = OpAccessChain %_ptr_Uniform_v3float %IndirectLightingCache %uint_2
       %8565 = OpLoad %v3float %8564
       %8566 = OpAccessChain %_ptr_Uniform_v3float %IndirectLightingCache %uint_3
       %8567 = OpLoad %v3float %8566
       %8568 = OpExtInst %v3float %1 FClamp %8563 %8565 %8567
       %8569 = OpLoad %type_3d_image_0 %IndirectLightingCache_IndirectLightingCacheTexture0
       %8570 = OpLoad %type_sampler %IndirectLightingCache_IndirectLightingCacheTextureSampler0
       %8571 = OpSampledImage %type_sampled_image_0 %8569 %8570
       %8572 = OpImageSampleImplicitLod %v4float %8571 %8568 None
       %8573 = OpLoad %type_3d_image_0 %IndirectLightingCache_IndirectLightingCacheTexture1
       %8574 = OpLoad %type_sampler %View_SharedBilinearClampedSampler
       %8575 = OpSampledImage %type_sampled_image_0 %8573 %8574
       %8576 = OpImageSampleImplicitLod %v4float %8575 %8568 None
       %8577 = OpLoad %type_3d_image_0 %IndirectLightingCache_IndirectLightingCacheTexture2
       %8578 = OpSampledImage %type_sampled_image_0 %8577 %8574
       %8579 = OpImageSampleImplicitLod %v4float %8578 %8568 None
       %8580 = OpCompositeExtract %float %8572 0
       %8581 = OpCompositeExtract %float %8576 0
       %8582 = OpCompositeExtract %float %8579 0
       %8583 = OpCompositeExtract %float %8572 3
       %8584 = OpCompositeConstruct %v4float %8580 %8581 %8582 %8583
       %8585 = OpCompositeExtract %float %8572 1
       %8586 = OpCompositeExtract %float %8576 1
       %8587 = OpCompositeExtract %float %8579 1
       %8588 = OpCompositeExtract %float %8576 3
       %8589 = OpCompositeConstruct %v4float %8585 %8586 %8587 %8588
       %8590 = OpCompositeExtract %float %8572 2
       %8591 = OpCompositeExtract %float %8576 2
       %8592 = OpCompositeExtract %float %8579 2
       %8593 = OpCompositeExtract %float %8579 3
       %8594 = OpCompositeConstruct %v4float %8590 %8591 %8592 %8593
       %8595 = OpCompositeExtract %float %8444 1
       %8596 = OpFMul %float %float_n0_488602996 %8595
       %8597 = OpCompositeInsert %v4float %8596 %550 1
       %8598 = OpCompositeExtract %float %8444 2
       %8599 = OpFMul %float %float_0_488602996 %8598
       %8600 = OpCompositeInsert %v4float %8599 %8597 2
       %8601 = OpCompositeExtract %float %8444 0
       %8602 = OpFMul %float %float_n0_488602996 %8601
       %8603 = OpCompositeInsert %v4float %8602 %8600 3
       %8604 = OpCompositeInsert %v4float %float_0_886227548 %8603 0
       %8605 = OpVectorShuffle %v3float %8604 %8604 1 2 3
       %8606 = OpVectorTimesScalar %v3float %8605 %float_2_09439516
       %8607 = OpVectorShuffle %v4float %8604 %8606 0 4 5 6
       %8608 = OpDot %float %8584 %8607
       %8609 = OpCompositeInsert %v3float %8608 %551 0
       %8610 = OpDot %float %8589 %8607
       %8611 = OpCompositeInsert %v3float %8610 %8609 1
       %8612 = OpDot %float %8594 %8607
       %8613 = OpCompositeInsert %v3float %8612 %8611 2
       %8614 = OpExtInst %v3float %1 NMax %105 %8613
       %8615 = OpFMul %v3float %8614 %498
               OpBranch %8555
       %8555 = OpLabel
       %8616 = OpPhi %v3float %105 %8548 %8615 %8556
       %8617 = OpAccessChain %_ptr_Uniform_v3float %View %uint_24
       %8618 = OpLoad %v3float %8617
       %8619 = OpFMul %v3float %8616 %8618
       %8620 = OpFMul %v3float %8619 %8552
       %8621 = OpVectorTimesScalar %v3float %8433 %float_2_04040003
       %8622 = OpFSub %v3float %8621 %177
       %8623 = OpVectorTimesScalar %v3float %8433 %float_n4_79510021
       %8624 = OpFAdd %v3float %8623 %180
       %8625 = OpVectorTimesScalar %v3float %8433 %float_2_75519991
       %8626 = OpFAdd %v3float %8625 %183
       %8627 = OpVectorTimesScalar %v3float %8622 %float_1
       %8628 = OpFAdd %v3float %8627 %8624
       %8629 = OpVectorTimesScalar %v3float %8628 %float_1
       %8630 = OpFAdd %v3float %8629 %8626
       %8631 = OpVectorTimesScalar %v3float %8630 %float_1
       %8632 = OpExtInst %v3float %1 NMax %130 %8631
       %8633 = OpFMul %v3float %8620 %8632
       %8634 = OpVectorTimesScalar %v3float %8552 %8423
       %8635 = OpVectorTimesScalar %v3float %8633 %8423
       %8636 = OpAccessChain %_ptr_Uniform_v4float %View %uint_11
       %8637 = OpLoad %v4float %8636
       %8638 = OpVectorShuffle %v2float %8637 %8637 2 3
       %8639 = OpFMul %v2float %622 %8638
       %8640 = OpConvertFToU %v2uint %8639
       %8641 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_3
       %8642 = OpLoad %uint %8641
       %8643 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_4
       %8644 = OpLoad %v3float %8643
       %8645 = OpAccessChain %_ptr_Uniform_v3int %OpaqueBasePass %uint_2
       %8646 = OpLoad %v3int %8645
       %8647 = OpCompositeExtract %float %8644 0
       %8648 = OpCompositeExtract %float %8644 1
       %8649 = OpExtInst %float %1 Fma %583 %8647 %8648
       %8650 = OpExtInst %float %1 Log2 %8649
       %8651 = OpCompositeExtract %float %8644 2
       %8652 = OpFMul %float %8650 %8651
       %8653 = OpExtInst %float %1 NMax %float_0 %8652
       %8654 = OpConvertFToU %uint %8653
       %8655 = OpCompositeExtract %int %8646 2
       %8656 = OpISub %int %8655 %int_1
       %8657 = OpBitcast %uint %8656
       %8658 = OpExtInst %uint %1 UMin %8654 %8657
       %8659 = OpCompositeConstruct %v2uint %8642 %8642
       %8660 = OpBitwiseAnd %v2uint %8659 %308
       %8661 = OpShiftRightLogical %v2uint %8640 %8660
       %8662 = OpCompositeExtract %uint %8661 0
       %8663 = OpCompositeExtract %uint %8661 1
       %8664 = OpCompositeExtract %int %8646 1
       %8665 = OpBitcast %uint %8664
       %8666 = OpIMul %uint %8658 %8665
       %8667 = OpIAdd %uint %8666 %8663
       %8668 = OpCompositeExtract %int %8646 0
       %8669 = OpBitcast %uint %8668
       %8670 = OpIMul %uint %8667 %8669
       %8671 = OpIAdd %uint %8670 %8662
       %8672 = OpAccessChain %_ptr_Uniform_uint %SingleLayerWater %uint_3
       %8673 = OpLoad %uint %8672
       %8674 = OpINotEqual %bool %8673 %uint_0
       %8675 = OpAccessChain %_ptr_Uniform_uint %SingleLayerWater %uint_4
       %8676 = OpLoad %uint %8675
       %8677 = OpINotEqual %bool %8676 %uint_0
       %8678 = OpLogicalAnd %bool %true %8677
       %8679 = OpExtInst %v2float %1 Trunc %127
       %8680 = OpConvertFToS %v2int %8679
       %8681 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_18
       %8682 = OpLoad %int %8681
       %8683 = OpINotEqual %bool %8682 %int_0
               OpSelectionMerge %8684 DontFlatten
               OpBranchConditional %8683 %8685 %8684
       %8685 = OpLabel
       %8686 = OpCompositeExtract %int %8680 0
       %8687 = OpCompositeExtract %int %8680 1
       %8688 = OpCompositeConstruct %v3int %8686 %8687 %int_0
       %8689 = OpVectorShuffle %v2int %8688 %8688 0 1
       %8690 = OpLoad %type_2d_image %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture
       %8691 = OpImageFetch %v4float %8690 %8689 Lod %int_0
               OpBranch %8684
       %8684 = OpLabel
       %8692 = OpPhi %v4float %120 %8555 %8691 %8685
       %8693 = OpFMul %v4float %8692 %8692
       %8694 = OpLoad %v4float %8388
       %8695 = OpCompositeExtract %float %8694 0
       %8696 = OpBitcast %uint %8695
       %8697 = OpBitwiseAnd %uint %8696 %uint_2048
       %8698 = OpINotEqual %bool %8697 %uint_0
       %8699 = OpSelect %uint %8698 %uint_1 %uint_0
       %8700 = OpBitwiseAnd %uint %8696 %uint_4096
       %8701 = OpINotEqual %bool %8700 %uint_0
       %8702 = OpSelect %uint %8701 %uint_1 %uint_0
       %8703 = OpBitwiseAnd %uint %8696 %uint_8192
       %8704 = OpINotEqual %bool %8703 %uint_0
       %8705 = OpSelect %uint %8704 %uint_1 %uint_0
       %8706 = OpShiftLeftLogical %uint %8702 %uint_1
       %8707 = OpBitwiseOr %uint %8699 %8706
       %8708 = OpShiftLeftLogical %uint %8705 %uint_2
       %8709 = OpBitwiseOr %uint %8707 %8708
       %8710 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_1
       %8711 = OpLoad %uint %8710
       %8712 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_8
       %8713 = OpLoad %uint %8712
       %8714 = OpAccessChain %_ptr_Uniform_v2float %OpaqueBasePass %uint_9
       %8715 = OpLoad %v2float %8714
       %8716 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_7
       %8717 = OpLoad %v3float %8716
       %8718 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_5
       %8719 = OpLoad %v3float %8718
       %8720 = OpAccessChain %_ptr_Uniform_float %OpaqueBasePass %uint_6
       %8721 = OpLoad %float %8720
       %8722 = OpINotEqual %bool %8711 %uint_0
               OpSelectionMerge %8723 DontFlatten
               OpBranchConditional %8722 %8724 %8723
       %8724 = OpLabel
       %8725 = OpBitwiseAnd %uint %8713 %uint_2
       %8726 = OpShiftRightLogical %uint %8725 %uint_1
       %8727 = OpConvertUToF %float %8726
       %8728 = OpBitwiseAnd %uint %8713 %uint_4
       %8729 = OpShiftRightLogical %uint %8728 %uint_2
       %8730 = OpConvertUToF %float %8729
       %8731 = OpBitwiseAnd %uint %8713 %uint_8
       %8732 = OpShiftRightLogical %uint %8731 %uint_3
       %8733 = OpConvertUToF %float %8732
       %8734 = OpCompositeConstruct %v4float %548 %8727 %8730 %8733
       %8735 = OpShiftRightLogical %uint %8713 %uint_8
       %8736 = OpBitwiseAnd %uint %8735 %uint_7
       %8737 = OpCompositeInsert %v4float %float_1 %8734 0
       %8738 = OpCompositeInsert %v4float %float_1 %8510 0
       %8739 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_10
       %8740 = OpLoad %uint %8739
       %8741 = OpUGreaterThan %bool %8740 %uint_0
               OpSelectionMerge %8742 None
               OpBranchConditional %8741 %8743 %8742
       %8743 = OpLabel
       %8744 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_12
       %8745 = OpLoad %v4float %8744
       %8746 = OpCompositeConstruct %v4float %642 %642 %642 %642
       %8747 = OpFOrdGreaterThanEqual %v4bool %8746 %8745
       %8748 = OpSelect %v4float %8747 %120 %101
       %8749 = OpCompositeExtract %float %8748 0
       %8750 = OpCompositeExtract %float %8748 1
       %8751 = OpFAdd %float %8749 %8750
       %8752 = OpCompositeExtract %float %8748 2
       %8753 = OpFAdd %float %8751 %8752
       %8754 = OpCompositeExtract %float %8748 3
       %8755 = OpFAdd %float %8753 %8754
       %8756 = OpConvertFToU %uint %8755
       %8757 = OpULessThan %bool %8756 %8740
               OpSelectionMerge %8758 None
               OpBranchConditional %8757 %8759 %8758
       %8759 = OpLabel
       %8760 = OpCompositeExtract %float %638 0
       %8761 = OpCompositeExtract %float %638 1
       %8762 = OpCompositeExtract %float %638 2
       %8763 = OpCompositeConstruct %v4float %8760 %8761 %8762 %float_1
       %8764 = OpAccessChain %_ptr_Uniform_mat4v4float %OpaqueBasePass %uint_13 %8756
       %8765 = OpLoad %mat4v4float %8764
       %8766 = OpMatrixTimesVector %v4float %8765 %8763
       %8767 = OpVectorShuffle %v2float %8766 %8766 0 1
       %8768 = OpCompositeExtract %float %8766 3
       %8769 = OpCompositeConstruct %v2float %8768 %8768
       %8770 = OpFDiv %v2float %8767 %8769
       %8771 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_14 %8756
       %8772 = OpLoad %v4float %8771
       %8773 = OpVectorShuffle %v2float %8772 %8772 0 1
       %8774 = OpFOrdGreaterThanEqual %v2bool %8770 %8773
       %8775 = OpVectorShuffle %v2float %8772 %8772 2 3
       %8776 = OpFOrdLessThanEqual %v2bool %8770 %8775
       %8777 = OpCompositeExtract %bool %8774 0
       %8778 = OpCompositeExtract %bool %8776 0
       %8779 = OpLogicalAnd %bool %8777 %8778
       %8780 = OpCompositeExtract %bool %8774 1
       %8781 = OpCompositeExtract %bool %8776 1
       %8782 = OpLogicalAnd %bool %8780 %8781
       %8783 = OpCompositeConstruct %v2bool %8779 %8782
       %8784 = OpAll %bool %8783
               OpSelectionMerge %8785 None
               OpBranchConditional %8784 %8786 %8785
       %8786 = OpLabel
       %8787 = OpLoad %type_2d_image %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas
       %8788 = OpLoad %type_sampler %OpaqueBasePass_Shared_Forward_ShadowmapSampler
       %8789 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_15
       %8790 = OpLoad %v4float %8789
       %8791 = OpCompositeExtract %float %8766 2
       %8792 = OpFSub %float %float_1 %8791
       %8793 = OpVectorShuffle %v2float %8790 %8790 0 1
       %8794 = OpExtInst %v2float %1 Fma %8770 %8793 %526
       %8795 = OpExtInst %v2float %1 Fract %8794
       %8796 = OpExtInst %v2float %1 Floor %8794
       %8797 = OpFAdd %v2float %8796 %315
       %8798 = OpVectorShuffle %v2float %8790 %8790 2 3
       %8799 = OpFMul %v2float %8797 %8798
       %8800 = OpSampledImage %type_sampled_image %8787 %8788
       %8801 = OpImageGather %v4float %8800 %8799 %int_0 None
       %8802 = OpExtInst %float %1 Fma %8792 %float_4000 %float_n1
       %8803 = OpVectorTimesScalar %v4float %8801 %float_4000
       %8804 = OpCompositeConstruct %v4float %8802 %8802 %8802 %8802
       %8805 = OpFSub %v4float %8803 %8804
       %8806 = OpExtInst %v4float %1 FClamp %8805 %101 %120
       %8807 = OpVectorShuffle %v2float %8806 %8806 3 0
       %8808 = OpVectorShuffle %v2float %8806 %8806 2 1
       %8809 = OpVectorShuffle %v2float %8795 %8795 0 0
       %8810 = OpExtInst %v2float %1 FMix %8807 %8808 %8809
       %8811 = OpCompositeExtract %float %8810 0
       %8812 = OpCompositeExtract %float %8810 1
       %8813 = OpCompositeExtract %float %8795 1
       %8814 = OpExtInst %float %1 FMix %8811 %8812 %8813
               OpBranch %8785
       %8785 = OpLabel
       %8815 = OpPhi %float %float_1 %8759 %8814 %8786
               OpBranch %8758
       %8758 = OpLabel
       %8816 = OpPhi %float %float_1 %8743 %8815 %8785
               OpBranch %8742
       %8742 = OpLabel
       %8817 = OpPhi %float %float_1 %8724 %8816 %8758
       %8818 = OpLogicalNot %bool %8674
       %8819 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_11
       %8820 = OpLoad %int %8819
       %8821 = OpINotEqual %bool %8820 %int_n1
       %8822 = OpLogicalAnd %bool %8818 %8821
               OpSelectionMerge %8823 DontFlatten
               OpBranchConditional %8822 %8824 %8823
       %8824 = OpLabel
               OpSelectionMerge %8825 None
               OpSwitch %uint_0 %8826
       %8826 = OpLabel
       %8827 = OpExtInst %float %1 NMax %float_0 %float_0
       %8828 = OpBitcast %uint %8820
       %8829 = OpIMul %uint %8828 %uint_336
       %8830 = OpIAdd %uint %8829 %uint_96
       %8831 = OpShiftRightLogical %uint %8830 %uint_2
       %8832 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8831
       %8833 = OpLoad %uint %8832
       %8834 = OpIAdd %uint %8831 %uint_1
       %8835 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8834
       %8836 = OpLoad %uint %8835
       %8837 = OpIAdd %uint %8831 %uint_2
       %8838 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8837
       %8839 = OpLoad %uint %8838
       %8840 = OpIAdd %uint %8831 %uint_3
       %8841 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8840
       %8842 = OpLoad %uint %8841
       %8843 = OpCompositeConstruct %v4uint %8833 %8836 %8839 %8842
       %8844 = OpBitcast %v4float %8843
       %8845 = OpCompositeInsert %mat4v4float %8844 %540 2
       %8846 = OpIAdd %uint %8829 %uint_128
       %8847 = OpShiftRightLogical %uint %8846 %uint_2
       %8848 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8847
       %8849 = OpLoad %uint %8848
       %8850 = OpIAdd %uint %8847 %uint_1
       %8851 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8850
       %8852 = OpLoad %uint %8851
       %8853 = OpIAdd %uint %8847 %uint_2
       %8854 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8853
       %8855 = OpLoad %uint %8854
       %8856 = OpIAdd %uint %8847 %uint_3
       %8857 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8856
       %8858 = OpLoad %uint %8857
       %8859 = OpCompositeConstruct %v4uint %8849 %8852 %8855 %8858
       %8860 = OpBitcast %v4float %8859
       %8861 = OpCompositeInsert %mat4v4float %8860 %540 0
       %8862 = OpIAdd %uint %8829 %uint_144
       %8863 = OpShiftRightLogical %uint %8862 %uint_2
       %8864 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8863
       %8865 = OpLoad %uint %8864
       %8866 = OpIAdd %uint %8863 %uint_1
       %8867 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8866
       %8868 = OpLoad %uint %8867
       %8869 = OpIAdd %uint %8863 %uint_2
       %8870 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8869
       %8871 = OpLoad %uint %8870
       %8872 = OpIAdd %uint %8863 %uint_3
       %8873 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8872
       %8874 = OpLoad %uint %8873
       %8875 = OpCompositeConstruct %v4uint %8865 %8868 %8871 %8874
       %8876 = OpBitcast %v4float %8875
       %8877 = OpCompositeInsert %mat4v4float %8876 %8861 1
       %8878 = OpIAdd %uint %8829 %uint_160
       %8879 = OpShiftRightLogical %uint %8878 %uint_2
       %8880 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8879
       %8881 = OpLoad %uint %8880
       %8882 = OpIAdd %uint %8879 %uint_1
       %8883 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8882
       %8884 = OpLoad %uint %8883
       %8885 = OpIAdd %uint %8879 %uint_2
       %8886 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8885
       %8887 = OpLoad %uint %8886
       %8888 = OpIAdd %uint %8879 %uint_3
       %8889 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8888
       %8890 = OpLoad %uint %8889
       %8891 = OpCompositeConstruct %v4uint %8881 %8884 %8887 %8890
       %8892 = OpBitcast %v4float %8891
       %8893 = OpCompositeInsert %mat4v4float %8892 %8877 2
       %8894 = OpIAdd %uint %8829 %uint_176
       %8895 = OpShiftRightLogical %uint %8894 %uint_2
       %8896 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8895
       %8897 = OpLoad %uint %8896
       %8898 = OpIAdd %uint %8895 %uint_1
       %8899 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8898
       %8900 = OpLoad %uint %8899
       %8901 = OpIAdd %uint %8895 %uint_2
       %8902 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8901
       %8903 = OpLoad %uint %8902
       %8904 = OpIAdd %uint %8895 %uint_3
       %8905 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8904
       %8906 = OpLoad %uint %8905
       %8907 = OpCompositeConstruct %v4uint %8897 %8900 %8903 %8906
       %8908 = OpBitcast %v4float %8907
       %8909 = OpCompositeInsert %mat4v4float %8908 %8893 3
       %8910 = OpIAdd %uint %8829 %uint_256
       %8911 = OpShiftRightLogical %uint %8910 %uint_2
       %8912 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8911
       %8913 = OpLoad %uint %8912
       %8914 = OpIAdd %uint %8911 %uint_1
       %8915 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8914
       %8916 = OpLoad %uint %8915
       %8917 = OpIAdd %uint %8911 %uint_2
       %8918 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8917
       %8919 = OpLoad %uint %8918
       %8920 = OpCompositeConstruct %v3uint %8913 %8916 %8919
       %8921 = OpBitcast %v3float %8920
       %8922 = OpIAdd %uint %8829 %uint_268
       %8923 = OpShiftRightLogical %uint %8922 %uint_2
       %8924 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8923
       %8925 = OpLoad %uint %8924
       %8926 = OpIAdd %uint %8829 %uint_272
       %8927 = OpShiftRightLogical %uint %8926 %uint_2
       %8928 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8927
       %8929 = OpLoad %uint %8928
       %8930 = OpIAdd %uint %8927 %uint_1
       %8931 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8930
       %8932 = OpLoad %uint %8931
       %8933 = OpIAdd %uint %8927 %uint_2
       %8934 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8933
       %8935 = OpLoad %uint %8934
       %8936 = OpCompositeConstruct %v3uint %8929 %8932 %8935
       %8937 = OpBitcast %v3float %8936
       %8938 = OpIAdd %uint %8829 %uint_288
       %8939 = OpShiftRightLogical %uint %8938 %uint_2
       %8940 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8939
       %8941 = OpLoad %uint %8940
       %8942 = OpIAdd %uint %8939 %uint_1
       %8943 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8942
       %8944 = OpLoad %uint %8943
       %8945 = OpIAdd %uint %8939 %uint_2
       %8946 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8945
       %8947 = OpLoad %uint %8946
       %8948 = OpCompositeConstruct %v3uint %8941 %8944 %8947
       %8949 = OpBitcast %v3float %8948
       %8950 = OpIAdd %uint %8829 %uint_300
       %8951 = OpShiftRightLogical %uint %8950 %uint_2
       %8952 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8951
       %8953 = OpLoad %uint %8952
       %8954 = OpBitcast %float %8953
       %8955 = OpIAdd %uint %8829 %uint_312
       %8956 = OpShiftRightLogical %uint %8955 %uint_2
       %8957 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8956
       %8958 = OpLoad %uint %8957
       %8959 = OpBitcast %int %8958
       %8960 = OpIAdd %uint %8829 %uint_316
       %8961 = OpShiftRightLogical %uint %8960 %uint_2
       %8962 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8961
       %8963 = OpLoad %uint %8962
       %8964 = OpBitcast %int %8963
       %8965 = OpFNegate %v3float %8921
       %8966 = OpFNegate %v3float %8949
       %8967 = OpIEqual %bool %8925 %uint_0
               OpSelectionMerge %8968 None
               OpBranchConditional %8967 %8969 %8970
       %8970 = OpLabel
       %8971 = OpFAdd %v3float %591 %8921
       %8972 = OpFAdd %v3float %639 %8937
       %8973 = OpVectorTimesScalar %v3float %8971 %float_2097152
       %8974 = OpFAdd %v3float %8973 %8972
       %8975 = OpINotEqual %bool %8925 %uint_2
               OpSelectionMerge %8976 None
               OpBranchConditional %8975 %8977 %8976
       %8977 = OpLabel
               OpSelectionMerge %8978 None
               OpSwitch %uint_0 %8979
       %8979 = OpLabel
       %8980 = OpCompositeExtract %float %8974 0
       %8981 = OpExtInst %float %1 FAbs %8980
       %8982 = OpCompositeExtract %float %8974 1
       %8983 = OpExtInst %float %1 FAbs %8982
       %8984 = OpFOrdGreaterThanEqual %bool %8981 %8983
       %8985 = OpCompositeExtract %float %8974 2
       %8986 = OpExtInst %float %1 FAbs %8985
       %8987 = OpFOrdGreaterThanEqual %bool %8981 %8986
       %8988 = OpLogicalAnd %bool %8984 %8987
               OpSelectionMerge %8989 None
               OpBranchConditional %8988 %8990 %8991
       %8991 = OpLabel
       %8992 = OpFOrdGreaterThan %bool %8983 %8986
               OpSelectionMerge %8993 None
               OpBranchConditional %8992 %8994 %8995
       %8995 = OpLabel
       %8996 = OpFOrdGreaterThan %bool %8985 %float_0
       %8997 = OpSelect %uint %8996 %uint_4 %uint_5
               OpBranch %8978
       %8994 = OpLabel
       %8998 = OpFOrdGreaterThan %bool %8982 %float_0
       %8999 = OpSelect %uint %8998 %uint_2 %uint_3
               OpBranch %8978
       %8993 = OpLabel
               OpUnreachable
       %8990 = OpLabel
       %9000 = OpFOrdGreaterThan %bool %8980 %float_0
       %9001 = OpSelect %uint %9000 %uint_0 %uint_1
               OpBranch %8978
       %8989 = OpLabel
               OpUnreachable
       %8978 = OpLabel
       %9002 = OpPhi %uint %8997 %8995 %8999 %8994 %9001 %8990
       %9003 = OpIAdd %uint %8828 %9002
       %9004 = OpBitcast %int %9003
       %9005 = OpBitcast %uint %9004
       %9006 = OpIMul %uint %9005 %uint_336
       %9007 = OpIAdd %uint %9006 %uint_96
       %9008 = OpShiftRightLogical %uint %9007 %uint_2
       %9009 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9008
       %9010 = OpLoad %uint %9009
       %9011 = OpIAdd %uint %9008 %uint_1
       %9012 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9011
       %9013 = OpLoad %uint %9012
       %9014 = OpIAdd %uint %9008 %uint_2
       %9015 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9014
       %9016 = OpLoad %uint %9015
       %9017 = OpIAdd %uint %9008 %uint_3
       %9018 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9017
       %9019 = OpLoad %uint %9018
       %9020 = OpCompositeConstruct %v4uint %9010 %9013 %9016 %9019
       %9021 = OpBitcast %v4float %9020
       %9022 = OpCompositeInsert %mat4v4float %9021 %540 2
       %9023 = OpIAdd %uint %9006 %uint_128
       %9024 = OpShiftRightLogical %uint %9023 %uint_2
       %9025 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9024
       %9026 = OpLoad %uint %9025
       %9027 = OpIAdd %uint %9024 %uint_1
       %9028 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9027
       %9029 = OpLoad %uint %9028
       %9030 = OpIAdd %uint %9024 %uint_2
       %9031 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9030
       %9032 = OpLoad %uint %9031
       %9033 = OpIAdd %uint %9024 %uint_3
       %9034 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9033
       %9035 = OpLoad %uint %9034
       %9036 = OpCompositeConstruct %v4uint %9026 %9029 %9032 %9035
       %9037 = OpBitcast %v4float %9036
       %9038 = OpCompositeInsert %mat4v4float %9037 %540 0
       %9039 = OpIAdd %uint %9006 %uint_144
       %9040 = OpShiftRightLogical %uint %9039 %uint_2
       %9041 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9040
       %9042 = OpLoad %uint %9041
       %9043 = OpIAdd %uint %9040 %uint_1
       %9044 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9043
       %9045 = OpLoad %uint %9044
       %9046 = OpIAdd %uint %9040 %uint_2
       %9047 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9046
       %9048 = OpLoad %uint %9047
       %9049 = OpIAdd %uint %9040 %uint_3
       %9050 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9049
       %9051 = OpLoad %uint %9050
       %9052 = OpCompositeConstruct %v4uint %9042 %9045 %9048 %9051
       %9053 = OpBitcast %v4float %9052
       %9054 = OpCompositeInsert %mat4v4float %9053 %9038 1
       %9055 = OpIAdd %uint %9006 %uint_160
       %9056 = OpShiftRightLogical %uint %9055 %uint_2
       %9057 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9056
       %9058 = OpLoad %uint %9057
       %9059 = OpIAdd %uint %9056 %uint_1
       %9060 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9059
       %9061 = OpLoad %uint %9060
       %9062 = OpIAdd %uint %9056 %uint_2
       %9063 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9062
       %9064 = OpLoad %uint %9063
       %9065 = OpIAdd %uint %9056 %uint_3
       %9066 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9065
       %9067 = OpLoad %uint %9066
       %9068 = OpCompositeConstruct %v4uint %9058 %9061 %9064 %9067
       %9069 = OpBitcast %v4float %9068
       %9070 = OpCompositeInsert %mat4v4float %9069 %9054 2
       %9071 = OpIAdd %uint %9006 %uint_176
       %9072 = OpShiftRightLogical %uint %9071 %uint_2
       %9073 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9072
       %9074 = OpLoad %uint %9073
       %9075 = OpIAdd %uint %9072 %uint_1
       %9076 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9075
       %9077 = OpLoad %uint %9076
       %9078 = OpIAdd %uint %9072 %uint_2
       %9079 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9078
       %9080 = OpLoad %uint %9079
       %9081 = OpIAdd %uint %9072 %uint_3
       %9082 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9081
       %9083 = OpLoad %uint %9082
       %9084 = OpCompositeConstruct %v4uint %9074 %9077 %9080 %9083
       %9085 = OpBitcast %v4float %9084
       %9086 = OpCompositeInsert %mat4v4float %9085 %9070 3
               OpBranch %8976
       %8976 = OpLabel
       %9087 = OpPhi %mat4v4float %8845 %8970 %9022 %8978
       %9088 = OpPhi %int %8820 %8970 %9004 %8978
       %9089 = OpPhi %mat4v4float %8909 %8970 %9086 %8978
       %9090 = OpCompositeExtract %float %8974 0
       %9091 = OpCompositeExtract %float %8974 1
       %9092 = OpCompositeExtract %float %8974 2
       %9093 = OpCompositeConstruct %v4float %9090 %9091 %9092 %float_1
       %9094 = OpMatrixTimesVector %v4float %9089 %9093
       %9095 = OpCompositeExtract %float %9094 3
       %9096 = OpCompositeConstruct %v3float %9095 %9095 %9095
       %9097 = OpVectorShuffle %v3float %9094 %9094 0 1 2
       %9098 = OpFDiv %v3float %9097 %9096
       %9099 = OpVectorShuffle %v2float %9098 %459 0 1
               OpSelectionMerge %9100 None
               OpSwitch %uint_0 %9101
       %9101 = OpLabel
       %9102 = OpBitcast %uint %9088
       %9103 = OpVectorTimesScalar %v2float %9099 %float_128
       %9104 = OpConvertFToU %v2uint %9103
               OpSelectionMerge %9105 None
               OpSwitch %uint_0 %9106
       %9106 = OpLabel
       %9107 = OpBitcast %int %9102
       %9108 = OpBitcast %uint %9107
       %9109 = OpULessThan %bool %9108 %uint_8192
               OpSelectionMerge %9110 None
               OpBranchConditional %9109 %9111 %9110
       %9111 = OpLabel
               OpBranch %9105
       %9110 = OpLabel
       %9112 = OpISub %uint %9102 %uint_8192
       %9113 = OpIMul %uint %9112 %uint_21845
       %9114 = OpIAdd %uint %uint_8192 %9113
       %9115 = OpCompositeExtract %uint %9104 0
       %9116 = OpCompositeExtract %uint %9104 1
       %9117 = OpShiftLeftLogical %uint %9116 %uint_7
       %9118 = OpIAdd %uint %9115 %9117
       %9119 = OpIAdd %uint %9114 %9118
               OpBranch %9105
       %9105 = OpLabel
       %9120 = OpPhi %uint %9102 %9111 %9119 %9110
       %9121 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9120
       %9122 = OpLoad %uint %9121
       %9123 = OpBitwiseAnd %uint %9122 %uint_1023
       %9124 = OpShiftRightLogical %uint %9122 %uint_10
       %9125 = OpBitwiseAnd %uint %9124 %uint_1023
       %9126 = OpCompositeConstruct %v2uint %9123 %9125
       %9127 = OpShiftRightLogical %uint %9122 %uint_20
       %9128 = OpBitwiseAnd %uint %9127 %uint_63
       %9129 = OpBitwiseAnd %uint %9122 %uint_134217728
       %9130 = OpINotEqual %bool %9129 %uint_0
       %9131 = OpSelect %uint %9109 %uint_7 %9128
       %9132 = OpBitwiseAnd %uint %9131 %uint_31
       %9133 = OpShiftRightLogical %uint %uint_16384 %9132
       %9134 = OpConvertUToF %float %9133
       %9135 = OpVectorTimesScalar %v2float %9099 %9134
       %9136 = OpConvertFToU %v2uint %9135
       %9137 = OpIMul %v2uint %9126 %341
       %9138 = OpBitwiseAnd %v2uint %9136 %342
       %9139 = OpIAdd %v2uint %9137 %9138
               OpSelectionMerge %9140 None
               OpBranchConditional %9130 %9141 %9140
       %9141 = OpLabel
       %9142 = OpCompositeExtract %uint %9139 0
       %9143 = OpCompositeExtract %uint %9139 1
       %9144 = OpCompositeConstruct %v4uint %9142 %9143 %uint_0 %uint_0
       %9145 = OpBitcast %v4int %9144
       %9146 = OpVectorShuffle %v3int %9145 %9145 0 1 2
       %9147 = OpCompositeExtract %int %9145 3
       %9148 = OpLoad %type_2d_image_array_0 %VirtualShadowMap_PhysicalPagePool
       %9149 = OpImageFetch %v4uint %9148 %9146 Lod %9147
       %9150 = OpCompositeExtract %uint %9149 0
       %9151 = OpBitcast %float %9150
               OpBranch %9100
       %9140 = OpLabel
               OpBranch %9100
       %9100 = OpLabel
       %9152 = OpPhi %float %9151 %9141 %float_0 %9140
       %9153 = OpPhi %bool %true %9141 %false %9140
               OpSelectionMerge %9154 None
               OpBranchConditional %9153 %9155 %9154
       %9155 = OpLabel
       %9156 = OpFNegate %float %8827
       %9157 = OpCompositeExtract %float %9087 2 2
       %9158 = OpFMul %float %9156 %9157
       %9159 = OpFDiv %float %9158 %9095
       %9160 = OpFSub %float %9152 %9159
       %9161 = OpCompositeExtract %float %9098 2
       %9162 = OpFOrdGreaterThan %bool %9160 %9161
       %9163 = OpSelect %float %9162 %float_0 %float_1
               OpBranch %8825
       %9154 = OpLabel
               OpBranch %8968
       %8969 = OpLabel
       %9164 = OpFSub %v3float %591 %8965
       %9165 = OpFSub %v3float %639 %8966
       %9166 = OpVectorTimesScalar %v3float %9164 %float_2097152
       %9167 = OpFAdd %v3float %9166 %9165
       %9168 = OpExtInst %float %1 Length %9167
       %9169 = OpExtInst %float %1 Log2 %9168
       %9170 = OpFAdd %float %9169 %8954
       %9171 = OpExtInst %float %1 Floor %9170
       %9172 = OpConvertFToS %int %9171
       %9173 = OpISub %int %9172 %8959
       %9174 = OpExtInst %int %1 SMax %int_0 %9173
       %9175 = OpSLessThan %bool %9174 %8964
               OpSelectionMerge %9176 None
               OpBranchConditional %9175 %9177 %9176
       %9177 = OpLabel
       %9178 = OpIAdd %int %8820 %9174
       %9179 = OpBitcast %uint %9178
       %9180 = OpIMul %uint %9179 %uint_336
       %9181 = OpIAdd %uint %9180 %uint_96
       %9182 = OpShiftRightLogical %uint %9181 %uint_2
       %9183 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9182
       %9184 = OpLoad %uint %9183
       %9185 = OpIAdd %uint %9182 %uint_1
       %9186 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9185
       %9187 = OpLoad %uint %9186
       %9188 = OpIAdd %uint %9182 %uint_2
       %9189 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9188
       %9190 = OpLoad %uint %9189
       %9191 = OpIAdd %uint %9182 %uint_3
       %9192 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9191
       %9193 = OpLoad %uint %9192
       %9194 = OpCompositeConstruct %v4uint %9184 %9187 %9190 %9193
       %9195 = OpBitcast %v4float %9194
       %9196 = OpIAdd %uint %9180 %uint_112
       %9197 = OpShiftRightLogical %uint %9196 %uint_2
       %9198 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9197
       %9199 = OpIAdd %uint %9197 %uint_1
       %9200 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9199
       %9201 = OpIAdd %uint %9197 %uint_2
       %9202 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9201
       %9203 = OpIAdd %uint %9197 %uint_3
       %9204 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9203
       %9205 = OpIAdd %uint %9180 %uint_128
       %9206 = OpShiftRightLogical %uint %9205 %uint_2
       %9207 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9206
       %9208 = OpLoad %uint %9207
       %9209 = OpIAdd %uint %9206 %uint_1
       %9210 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9209
       %9211 = OpLoad %uint %9210
       %9212 = OpIAdd %uint %9206 %uint_2
       %9213 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9212
       %9214 = OpLoad %uint %9213
       %9215 = OpIAdd %uint %9206 %uint_3
       %9216 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9215
       %9217 = OpLoad %uint %9216
       %9218 = OpCompositeConstruct %v4uint %9208 %9211 %9214 %9217
       %9219 = OpBitcast %v4float %9218
       %9220 = OpCompositeInsert %mat4v4float %9219 %540 0
       %9221 = OpIAdd %uint %9180 %uint_144
       %9222 = OpShiftRightLogical %uint %9221 %uint_2
       %9223 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9222
       %9224 = OpLoad %uint %9223
       %9225 = OpIAdd %uint %9222 %uint_1
       %9226 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9225
       %9227 = OpLoad %uint %9226
       %9228 = OpIAdd %uint %9222 %uint_2
       %9229 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9228
       %9230 = OpLoad %uint %9229
       %9231 = OpIAdd %uint %9222 %uint_3
       %9232 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9231
       %9233 = OpLoad %uint %9232
       %9234 = OpCompositeConstruct %v4uint %9224 %9227 %9230 %9233
       %9235 = OpBitcast %v4float %9234
       %9236 = OpCompositeInsert %mat4v4float %9235 %9220 1
       %9237 = OpIAdd %uint %9180 %uint_160
       %9238 = OpShiftRightLogical %uint %9237 %uint_2
       %9239 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9238
       %9240 = OpLoad %uint %9239
       %9241 = OpIAdd %uint %9238 %uint_1
       %9242 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9241
       %9243 = OpLoad %uint %9242
       %9244 = OpIAdd %uint %9238 %uint_2
       %9245 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9244
       %9246 = OpLoad %uint %9245
       %9247 = OpIAdd %uint %9238 %uint_3
       %9248 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9247
       %9249 = OpLoad %uint %9248
       %9250 = OpCompositeConstruct %v4uint %9240 %9243 %9246 %9249
       %9251 = OpBitcast %v4float %9250
       %9252 = OpCompositeInsert %mat4v4float %9251 %9236 2
       %9253 = OpIAdd %uint %9180 %uint_176
       %9254 = OpShiftRightLogical %uint %9253 %uint_2
       %9255 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9254
       %9256 = OpLoad %uint %9255
       %9257 = OpIAdd %uint %9254 %uint_1
       %9258 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9257
       %9259 = OpLoad %uint %9258
       %9260 = OpIAdd %uint %9254 %uint_2
       %9261 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9260
       %9262 = OpLoad %uint %9261
       %9263 = OpIAdd %uint %9254 %uint_3
       %9264 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9263
       %9265 = OpLoad %uint %9264
       %9266 = OpCompositeConstruct %v4uint %9256 %9259 %9262 %9265
       %9267 = OpBitcast %v4float %9266
       %9268 = OpCompositeInsert %mat4v4float %9267 %9252 3
       %9269 = OpIAdd %uint %9180 %uint_256
       %9270 = OpShiftRightLogical %uint %9269 %uint_2
       %9271 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9270
       %9272 = OpLoad %uint %9271
       %9273 = OpIAdd %uint %9270 %uint_1
       %9274 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9273
       %9275 = OpLoad %uint %9274
       %9276 = OpIAdd %uint %9270 %uint_2
       %9277 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9276
       %9278 = OpLoad %uint %9277
       %9279 = OpCompositeConstruct %v3uint %9272 %9275 %9278
       %9280 = OpBitcast %v3float %9279
       %9281 = OpIAdd %uint %9180 %uint_272
       %9282 = OpShiftRightLogical %uint %9281 %uint_2
       %9283 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9282
       %9284 = OpLoad %uint %9283
       %9285 = OpIAdd %uint %9282 %uint_1
       %9286 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9285
       %9287 = OpLoad %uint %9286
       %9288 = OpIAdd %uint %9282 %uint_2
       %9289 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9288
       %9290 = OpLoad %uint %9289
       %9291 = OpCompositeConstruct %v3uint %9284 %9287 %9290
       %9292 = OpBitcast %v3float %9291
       %9293 = OpFAdd %v3float %591 %9280
       %9294 = OpFAdd %v3float %639 %9292
       %9295 = OpVectorTimesScalar %v3float %9293 %float_2097152
       %9296 = OpFAdd %v3float %9295 %9294
       %9297 = OpCompositeExtract %float %9296 0
       %9298 = OpCompositeExtract %float %9296 1
       %9299 = OpCompositeExtract %float %9296 2
       %9300 = OpCompositeConstruct %v4float %9297 %9298 %9299 %float_1
       %9301 = OpMatrixTimesVector %v4float %9268 %9300
       %9302 = OpVectorShuffle %v2float %9301 %9301 0 1
       %9303 = OpVectorTimesScalar %v2float %9302 %float_128
       %9304 = OpConvertFToU %v2uint %9303
               OpSelectionMerge %9305 None
               OpSwitch %uint_0 %9306
       %9306 = OpLabel
       %9307 = OpBitcast %int %9179
       %9308 = OpBitcast %uint %9307
       %9309 = OpULessThan %bool %9308 %uint_8192
               OpSelectionMerge %9310 None
               OpBranchConditional %9309 %9311 %9310
       %9311 = OpLabel
               OpBranch %9305
       %9310 = OpLabel
       %9312 = OpISub %uint %9179 %uint_8192
       %9313 = OpIMul %uint %9312 %uint_21845
       %9314 = OpIAdd %uint %uint_8192 %9313
       %9315 = OpCompositeExtract %uint %9304 0
       %9316 = OpCompositeExtract %uint %9304 1
       %9317 = OpShiftLeftLogical %uint %9316 %uint_7
       %9318 = OpIAdd %uint %9315 %9317
       %9319 = OpIAdd %uint %9314 %9318
               OpBranch %9305
       %9305 = OpLabel
       %9320 = OpPhi %uint %9179 %9311 %9319 %9310
       %9321 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9320
       %9322 = OpLoad %uint %9321
       %9323 = OpBitwiseAnd %uint %9322 %uint_1023
       %9324 = OpShiftRightLogical %uint %9322 %uint_10
       %9325 = OpBitwiseAnd %uint %9324 %uint_1023
       %9326 = OpCompositeConstruct %v2uint %9323 %9325
       %9327 = OpShiftRightLogical %uint %9322 %uint_20
       %9328 = OpBitwiseAnd %uint %9327 %uint_63
       %9329 = OpBitwiseAnd %uint %9322 %uint_134217728
       %9330 = OpINotEqual %bool %9329 %uint_0
       %9331 = OpIEqual %bool %9328 %uint_0
       %9332 = OpLogicalAnd %bool %9330 %9331
               OpSelectionMerge %9333 None
               OpBranchConditional %9330 %9334 %9333
       %9334 = OpLabel
       %9335 = OpIAdd %uint %9179 %9328
       %9336 = OpBitcast %int %9335
       %9337 = OpVectorTimesScalar %v2float %9302 %float_16384
       %9338 = OpConvertFToU %v2uint %9337
       %9339 = OpUGreaterThan %bool %9328 %uint_0
               OpSelectionMerge %9340 None
               OpBranchConditional %9339 %9341 %9340
       %9341 = OpLabel
       %9342 = OpIAdd %uint %9180 %uint_304
       %9343 = OpShiftRightLogical %uint %9342 %uint_2
       %9344 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9343
       %9345 = OpLoad %uint %9344
       %9346 = OpIAdd %uint %9343 %uint_1
       %9347 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9346
       %9348 = OpLoad %uint %9347
       %9349 = OpCompositeConstruct %v2uint %9345 %9348
       %9350 = OpBitcast %v2int %9349
       %9351 = OpBitcast %uint %9336
       %9352 = OpIMul %uint %9351 %uint_336
       %9353 = OpIAdd %uint %9352 %uint_304
       %9354 = OpShiftRightLogical %uint %9353 %uint_2
       %9355 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9354
       %9356 = OpLoad %uint %9355
       %9357 = OpIAdd %uint %9354 %uint_1
       %9358 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9357
       %9359 = OpLoad %uint %9358
       %9360 = OpCompositeConstruct %v2uint %9356 %9359
       %9361 = OpBitcast %v2int %9360
       %9362 = OpIMul %v2int %371 %9350
       %9363 = OpIMul %v2int %371 %9361
       %9364 = OpBitcast %v2uint %9362
       %9365 = OpISub %v2uint %9304 %9364
       %9366 = OpBitcast %int %9328
       %9367 = OpCompositeConstruct %v2int %9366 %9366
       %9368 = OpBitwiseAnd %v2int %9367 %372
       %9369 = OpShiftLeftLogical %v2int %9363 %9368
       %9370 = OpBitcast %v2uint %9369
       %9371 = OpIAdd %v2uint %9365 %9370
       %9372 = OpCompositeConstruct %v2uint %9328 %9328
       %9373 = OpBitwiseAnd %v2uint %9372 %308
       %9374 = OpShiftRightLogical %v2uint %9371 %9373
       %9375 = OpIMul %v2uint %9374 %341
       %9376 = OpIAdd %v2uint %9375 %342
       %9377 = OpLoad %uint %9198
       %9378 = OpLoad %uint %9200
       %9379 = OpLoad %uint %9202
       %9380 = OpLoad %uint %9204
       %9381 = OpCompositeConstruct %v4uint %9377 %9378 %9379 %9380
       %9382 = OpBitcast %v4float %9381
       %9383 = OpLoad %uint %9344
       %9384 = OpLoad %uint %9347
       %9385 = OpCompositeConstruct %v2uint %9383 %9384
       %9386 = OpBitcast %v2int %9385
       %9387 = OpIAdd %int %9178 %9366
       %9388 = OpBitcast %uint %9387
       %9389 = OpIMul %uint %9388 %uint_336
       %9390 = OpIAdd %uint %9389 %uint_112
       %9391 = OpShiftRightLogical %uint %9390 %uint_2
       %9392 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9391
       %9393 = OpLoad %uint %9392
       %9394 = OpIAdd %uint %9391 %uint_1
       %9395 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9394
       %9396 = OpLoad %uint %9395
       %9397 = OpIAdd %uint %9391 %uint_2
       %9398 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9397
       %9399 = OpLoad %uint %9398
       %9400 = OpIAdd %uint %9391 %uint_3
       %9401 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9400
       %9402 = OpLoad %uint %9401
       %9403 = OpCompositeConstruct %v4uint %9393 %9396 %9399 %9402
       %9404 = OpBitcast %v4float %9403
       %9405 = OpIAdd %uint %9389 %uint_304
       %9406 = OpShiftRightLogical %uint %9405 %uint_2
       %9407 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9406
       %9408 = OpLoad %uint %9407
       %9409 = OpIAdd %uint %9406 %uint_1
       %9410 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9409
       %9411 = OpLoad %uint %9410
       %9412 = OpCompositeConstruct %v2uint %9408 %9411
       %9413 = OpBitcast %v2int %9412
       %9414 = OpConvertSToF %v2float %9386
       %9415 = OpConvertSToF %v2float %9413
       %9416 = OpSGreaterThanEqual %bool %9366 %int_0
       %9417 = OpBitcast %uint %9366
       %9418 = OpBitwiseAnd %uint %9417 %uint_31
       %9419 = OpShiftLeftLogical %uint %uint_1 %9418
       %9420 = OpConvertUToF %float %9419
       %9421 = OpFDiv %float %float_1 %9420
       %9422 = OpSNegate %int %9366
       %9423 = OpBitcast %uint %9422
       %9424 = OpBitwiseAnd %uint %9423 %uint_31
       %9425 = OpShiftLeftLogical %uint %uint_1 %9424
       %9426 = OpConvertUToF %float %9425
       %9427 = OpSelect %float %9416 %9421 %9426
       %9428 = OpVectorTimesScalar %v2float %9414 %9427
       %9429 = OpFSub %v2float %9415 %9428
       %9430 = OpVectorTimesScalar %v2float %9429 %float_0_25
       %9431 = OpCompositeExtract %float %9382 2
       %9432 = OpCompositeExtract %float %9404 2
       %9433 = OpFNegate %float %9427
       %9434 = OpExtInst %float %1 Fma %9433 %9431 %9432
       %9435 = OpVectorTimesScalar %v2float %9302 %9427
       %9436 = OpVectorShuffle %v2float %9430 %460 0 1
       %9437 = OpFAdd %v2float %9435 %9436
       %9438 = OpVectorTimesScalar %v2float %9437 %float_16384
       %9439 = OpConvertFToU %v2uint %9438
       %9440 = OpExtInst %v2uint %1 UClamp %9439 %9375 %9376
               OpSelectionMerge %9441 None
               OpSwitch %uint_0 %9442
       %9442 = OpLabel
       %9443 = OpBitcast %int %9351
       %9444 = OpBitcast %uint %9443
       %9445 = OpULessThan %bool %9444 %uint_8192
               OpSelectionMerge %9446 None
               OpBranchConditional %9445 %9447 %9446
       %9447 = OpLabel
               OpBranch %9441
       %9446 = OpLabel
       %9448 = OpISub %uint %9351 %uint_8192
       %9449 = OpIMul %uint %9448 %uint_21845
       %9450 = OpIAdd %uint %uint_8192 %9449
       %9451 = OpCompositeExtract %uint %9374 0
       %9452 = OpCompositeExtract %uint %9374 1
       %9453 = OpShiftLeftLogical %uint %9452 %uint_7
       %9454 = OpIAdd %uint %9451 %9453
       %9455 = OpIAdd %uint %9450 %9454
               OpBranch %9441
       %9441 = OpLabel
       %9456 = OpPhi %uint %9351 %9447 %9455 %9446
       %9457 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9456
       %9458 = OpLoad %uint %9457
       %9459 = OpBitwiseAnd %uint %9458 %uint_1023
       %9460 = OpShiftRightLogical %uint %9458 %uint_10
       %9461 = OpBitwiseAnd %uint %9460 %uint_1023
       %9462 = OpCompositeConstruct %v2uint %9459 %9461
       %9463 = OpShiftRightLogical %uint %9458 %uint_20
       %9464 = OpBitwiseAnd %uint %9463 %uint_63
       %9465 = OpBitwiseAnd %uint %9458 %uint_134217728
       %9466 = OpINotEqual %bool %9465 %uint_0
       %9467 = OpIEqual %bool %9464 %uint_0
       %9468 = OpLogicalAnd %bool %9466 %9467
               OpBranch %9340
       %9340 = OpLabel
       %9469 = OpPhi %float %float_1 %9334 %9427 %9441
       %9470 = OpPhi %float %float_0 %9334 %9434 %9441
       %9471 = OpPhi %v2uint %9338 %9334 %9440 %9441
       %9472 = OpPhi %v2uint %9326 %9334 %9462 %9441
       %9473 = OpPhi %bool %9332 %9334 %9468 %9441
               OpSelectionMerge %9474 None
               OpBranchConditional %9473 %9475 %9474
       %9475 = OpLabel
       %9476 = OpIMul %v2uint %9472 %341
       %9477 = OpBitwiseAnd %v2uint %9471 %342
       %9478 = OpIAdd %v2uint %9476 %9477
       %9479 = OpCompositeExtract %uint %9478 0
       %9480 = OpCompositeExtract %uint %9478 1
       %9481 = OpCompositeConstruct %v4uint %9479 %9480 %uint_0 %uint_0
       %9482 = OpBitcast %v4int %9481
       %9483 = OpVectorShuffle %v3int %9482 %9482 0 1 2
       %9484 = OpCompositeExtract %int %9482 3
       %9485 = OpLoad %type_2d_image_array_0 %VirtualShadowMap_PhysicalPagePool
       %9486 = OpImageFetch %v4uint %9485 %9483 Lod %9484
       %9487 = OpCompositeExtract %uint %9486 0
       %9488 = OpBitcast %float %9487
       %9489 = OpFSub %float %9488 %9470
       %9490 = OpFDiv %float %9489 %9469
               OpBranch %9474
       %9474 = OpLabel
       %9491 = OpPhi %float %float_0 %9340 %9490 %9475
       %9492 = OpSelect %bool %9473 %true %false
               OpBranch %9333
       %9333 = OpLabel
       %9493 = OpPhi %float %float_0 %9305 %9491 %9474
       %9494 = OpPhi %bool %false %9305 %9492 %9474
               OpSelectionMerge %9495 None
               OpBranchConditional %9494 %9496 %9495
       %9496 = OpLabel
       %9497 = OpCompositeExtract %float %9195 2
       %9498 = OpExtInst %float %1 Fma %8827 %9497 %9493
       %9499 = OpCompositeExtract %float %9301 2
       %9500 = OpFOrdGreaterThan %bool %9498 %9499
       %9501 = OpSelect %float %9500 %float_0 %float_1
               OpBranch %8825
       %9495 = OpLabel
               OpBranch %9176
       %9176 = OpLabel
               OpBranch %8968
       %8968 = OpLabel
               OpBranch %8825
       %8825 = OpLabel
       %9502 = OpPhi %float %9163 %9155 %9501 %9496 %float_1 %8968
       %9503 = OpFMul %float %8817 %9502
               OpBranch %8823
       %8823 = OpLabel
       %9504 = OpPhi %float %8817 %8742 %9503 %8825
       %9505 = OpDot %float %8737 %120
       %9506 = OpDot %float %8738 %8737
       %9507 = OpExtInst %float %1 FMix %float_1 %9506 %9505
       %9508 = OpCompositeExtract %float %8715 0
       %9509 = OpCompositeExtract %float %8715 1
       %9510 = OpExtInst %float %1 Fma %642 %9508 %9509
       %9511 = OpExtInst %float %1 FClamp %9510 %float_0 %float_1
       %9512 = OpFMul %float %9511 %9511
       %9513 = OpExtInst %float %1 FMix %9504 %9507 %9512
       %9514 = OpExtInst %float %1 NMin %9513 %float_1
       %9515 = OpFAdd %float %9513 %9514
       %9516 = OpFOrdGreaterThan %bool %9515 %float_0
               OpSelectionMerge %9517 DontFlatten
               OpBranchConditional %9516 %9518 %9517
       %9518 = OpLabel
       %9519 = OpExtInst %float %1 NMax %8421 %8419
       %9520 = OpDot %float %8719 %8719
       %9521 = OpFAdd %float %9520 %float_1
       %9522 = OpFDiv %float %float_1 %9521
       %9523 = OpExtInst %float %1 InverseSqrt %9520
       %9524 = OpVectorTimesScalar %v3float %8719 %9523
       %9525 = OpDot %float %8444 %9524
       %9526 = OpFOrdGreaterThan %bool %8721 %float_0
               OpSelectionMerge %9527 None
               OpBranchConditional %9526 %9528 %9527
       %9528 = OpLabel
       %9529 = OpFMul %float %8721 %8721
       %9530 = OpFMul %float %9529 %9522
       %9531 = OpExtInst %float %1 FClamp %9530 %float_0 %float_1
       %9532 = OpExtInst %float %1 Sqrt %9531
       %9533 = OpFOrdLessThan %bool %9525 %9532
               OpSelectionMerge %9534 None
               OpBranchConditional %9533 %9535 %9534
       %9535 = OpLabel
       %9536 = OpFNegate %float %9532
       %9537 = OpExtInst %float %1 NMax %9525 %9536
       %9538 = OpFAdd %float %9532 %9537
       %9539 = OpFMul %float %9538 %9538
       %9540 = OpFMul %float %float_4 %9532
       %9541 = OpFDiv %float %9539 %9540
               OpBranch %9534
       %9534 = OpLabel
       %9542 = OpPhi %float %9525 %9528 %9541 %9535
               OpBranch %9527
       %9527 = OpLabel
       %9543 = OpPhi %float %9525 %9518 %9542 %9534
       %9544 = OpExtInst %float %1 FClamp %9543 %float_0 %float_1
       %9545 = OpExtInst %float %1 NMax %9519 %8419
       %9546 = OpFMul %float %8721 %9523
       %9547 = OpFNegate %float %9545
       %9548 = OpExtInst %float %1 Fma %9547 %9545 %float_1
       %9549 = OpFMul %float %9546 %9548
       %9550 = OpExtInst %float %1 FClamp %9549 %float_0 %float_1
       %9551 = OpExtInst %float %1 NMax %461 %8721
       %9552 = OpFNegate %float %9551
       %9553 = OpExtInst %float %1 Fma %9552 %float_0_0500000007 %float_1
       %9554 = OpExtInst %float %1 FClamp %9553 %float_0 %float_1
       %9555 = OpBitcast %uint %9554
       %9556 = OpShiftLeftLogical %uint %9555 %uint_1
       %9557 = OpBitwiseOr %uint %uint_0 %9556
       %9558 = OpDot %float %8444 %656
       %9559 = OpDot %float %656 %9524
       %9560 = OpExtInst %float %1 Fma %float_2 %9559 %float_2
       %9561 = OpExtInst %float %1 InverseSqrt %9560
       %9562 = OpFAdd %float %9525 %9558
       %9563 = OpFMul %float %9562 %9561
       %9564 = OpExtInst %float %1 FClamp %9563 %float_0 %float_1
       %9565 = OpExtInst %float %1 Fma %9561 %9559 %9561
       %9566 = OpExtInst %float %1 FClamp %9565 %float_0 %float_1
       %9567 = OpFOrdGreaterThan %bool %9550 %float_0
               OpSelectionMerge %9568 None
               OpBranchConditional %9567 %9569 %9568
       %9569 = OpLabel
       %9570 = OpFNegate %float %9550
       %9571 = OpExtInst %float %1 Fma %9570 %9550 %float_1
       %9572 = OpExtInst %float %1 Sqrt %9571
       %9573 = OpFMul %float %float_2 %9525
       %9574 = OpFNegate %float %9559
       %9575 = OpExtInst %float %1 Fma %9573 %9558 %9574
       %9576 = OpFOrdGreaterThanEqual %bool %9575 %9572
               OpSelectionMerge %9577 None
               OpBranchConditional %9576 %9578 %9579
       %9579 = OpLabel
       %9580 = OpFNegate %float %9575
       %9581 = OpExtInst %float %1 Fma %9580 %9575 %float_1
       %9582 = OpExtInst %float %1 InverseSqrt %9581
       %9583 = OpFMul %float %9550 %9582
       %9584 = OpExtInst %float %1 Fma %9580 %9525 %9558
       %9585 = OpFMul %float %9583 %9584
       %9586 = OpFMul %float %float_2 %9558
       %9587 = OpExtInst %float %1 Fma %9586 %9558 %float_n1
       %9588 = OpExtInst %float %1 Fma %9580 %9559 %9587
       %9589 = OpFMul %float %9583 %9588
       %9590 = OpFNegate %float %9525
       %9591 = OpExtInst %float %1 Fma %9590 %9525 %float_1
       %9592 = OpFNegate %float %9558
       %9593 = OpExtInst %float %1 Fma %9592 %9558 %9591
       %9594 = OpExtInst %float %1 Fma %9574 %9559 %9593
       %9595 = OpFMul %float %9573 %9558
       %9596 = OpExtInst %float %1 Fma %9595 %9559 %9594
       %9597 = OpExtInst %float %1 FClamp %9596 %float_0 %float_1
       %9598 = OpExtInst %float %1 Sqrt %9597
       %9599 = OpFMul %float %9583 %9598
       %9600 = OpFMul %float %9599 %float_2
       %9601 = OpFMul %float %9600 %9558
       %9602 = OpExtInst %float %1 Fma %9525 %9572 %9558
       %9603 = OpExtInst %float %1 Fma %9583 %9584 %9602
       %9604 = OpExtInst %float %1 Fma %9559 %9572 %float_1
       %9605 = OpExtInst %float %1 Fma %9583 %9588 %9604
       %9606 = OpFMul %float %9599 %9605
       %9607 = OpFMul %float %9603 %9605
       %9608 = OpFMul %float %9601 %9603
       %9609 = OpFMul %float %float_0_25 %9601
       %9610 = OpFMul %float %9609 %9603
       %9611 = OpExtInst %float %1 Fma %float_n0_5 %9606 %9610
       %9612 = OpFMul %float %9607 %9611
       %9613 = OpFMul %float %9606 %float_n2
       %9614 = OpExtInst %float %1 Fma %9601 %9603 %9613
       %9615 = OpFMul %float %9608 %9614
       %9616 = OpExtInst %float %1 Fma %9606 %9606 %9615
       %9617 = OpFMul %float %9605 %9605
       %9618 = OpExtInst %float %1 Fma %9559 %9572 %9605
       %9619 = OpExtInst %float %1 Fma %float_n0_5 %9618 %float_n0_5
       %9620 = OpFMul %float %9607 %9619
       %9621 = OpExtInst %float %1 Fma %9602 %9617 %9620
       %9622 = OpExtInst %float %1 Fma %9603 %9621 %9616
       %9623 = OpFMul %float %float_2 %9612
       %9624 = OpFMul %float %9612 %9612
       %9625 = OpExtInst %float %1 Fma %9622 %9622 %9624
       %9626 = OpFDiv %float %9623 %9625
       %9627 = OpFMul %float %9626 %9622
       %9628 = OpFNegate %float %9626
       %9629 = OpExtInst %float %1 Fma %9628 %9612 %float_1
       %9630 = OpFMul %float %9627 %9599
       %9631 = OpExtInst %float %1 Fma %9629 %9585 %9630
       %9632 = OpFMul %float %9627 %9601
       %9633 = OpExtInst %float %1 Fma %9629 %9589 %9632
       %9634 = OpExtInst %float %1 Fma %9525 %9572 %9631
       %9635 = OpExtInst %float %1 Fma %9559 %9572 %9633
       %9636 = OpExtInst %float %1 Fma %float_2 %9635 %float_2
       %9637 = OpExtInst %float %1 InverseSqrt %9636
       %9638 = OpFAdd %float %9634 %9558
       %9639 = OpFMul %float %9638 %9637
       %9640 = OpExtInst %float %1 FClamp %9639 %float_0 %float_1
       %9641 = OpExtInst %float %1 Fma %9637 %9635 %9637
       %9642 = OpExtInst %float %1 FClamp %9641 %float_0 %float_1
               OpBranch %9577
       %9578 = OpLabel
       %9643 = OpExtInst %float %1 FAbs %9558
               OpBranch %9577
       %9577 = OpLabel
       %9644 = OpPhi %float %9640 %9579 %float_1 %9578
       %9645 = OpPhi %float %9642 %9579 %9643 %9578
               OpBranch %9568
       %9568 = OpLabel
       %9646 = OpPhi %float %9564 %9527 %9644 %9577
       %9647 = OpPhi %float %9566 %9527 %9645 %9577
       %9648 = OpExtInst %float %1 FAbs %9558
       %9649 = OpFAdd %float %9648 %float_9_99999975en06
       %9650 = OpExtInst %float %1 FClamp %9649 %float_0 %float_1
       %9651 = OpFMul %float %9519 %9519
       %9652 = OpFMul %float %9651 %9651
       %9653 = OpShiftRightLogical %uint %9557 %uint_1
       %9654 = OpBitcast %float %9653
       %9655 = OpExtInst %float %1 FClamp %9558 %float_0 %float_1
       %9656 = OpExtInst %float %1 FClamp %9544 %float_0 %float_1
       %9657 = OpExtInst %float %1 FClamp %9566 %float_0 %float_1
       %9658 = OpExtInst %float %1 FClamp %9564 %float_0 %float_1
       %9659 = OpBitcast %int %9652
       %9660 = OpISub %int %int_2129859010 %9659
       %9661 = OpBitcast %float %9660
       %9662 = OpExtInst %float %1 Fma %float_2 %9661 %float_n1
       %9663 = OpExtInst %float %1 Log2 %9662
       %9664 = OpFMul %float %float_0_055555556 %9663
       %9665 = OpExtInst %float %1 FClamp %9664 %float_0 %float_1
       %9666 = OpFSub %float %float_1 %9657
       %9667 = OpFMul %float %9666 %9666
       %9668 = OpFMul %float %9667 %9667
       %9669 = OpExtInst %float %1 Fma %9668 %9666 %9657
       %9670 = OpFSub %float %float_1 %9655
       %9671 = OpFMul %float %9670 %9670
       %9672 = OpFMul %float %9671 %9671
       %9673 = OpFMul %float %9672 %9670
       %9674 = OpExtInst %float %1 Fma %float_n0_75 %9673 %float_1
       %9675 = OpFSub %float %float_1 %9656
       %9676 = OpFMul %float %9675 %9675
       %9677 = OpFMul %float %9676 %9676
       %9678 = OpFMul %float %9677 %9675
       %9679 = OpExtInst %float %1 Fma %float_n0_75 %9678 %float_1
       %9680 = OpFMul %float %9674 %9679
       %9681 = OpExtInst %float %1 Fma %float_2_20000005 %9665 %float_n0_5
       %9682 = OpExtInst %float %1 FClamp %9681 %float_0 %float_1
       %9683 = OpExtInst %float %1 FMix %9669 %9680 %9682
       %9684 = OpExtInst %float %1 Fma %float_34_5 %9665 %float_n59
       %9685 = OpExtInst %float %1 Fma %9684 %9665 %float_24_5
       %9686 = OpFMul %float %9685 %9657
       %9687 = OpExtInst %float %1 Fma %float_73_1999969 %9665 %float_n21_2000008
       %9688 = OpExtInst %float %1 NMax %9687 %float_8_89999962
       %9689 = OpFNegate %float %9688
       %9690 = OpBitcast %int %9658
       %9691 = OpShiftRightArithmetic %int %9690 %int_1
       %9692 = OpIAdd %int %int_532487669 %9691
       %9693 = OpBitcast %float %9692
       %9694 = OpFMul %float %9689 %9693
       %9695 = OpExtInst %float %1 Exp2 %9694
       %9696 = OpFMul %float %9686 %9695
       %9697 = OpExtInst %float %1 Fma %9696 %9654 %9683
       %9698 = OpFMul %float %float_0_318309873 %9697
       %9699 = OpVectorTimesScalar %v3float %8634 %9698
       %9700 = OpVectorTimesScalar %v3float %130 %9544
       %9701 = OpFMul %v3float %9699 %9700
       %9702 = OpBitwiseAnd %uint %9557 %uint_1
       %9703 = OpIEqual %bool %9702 %uint_1
               OpSelectionMerge %9704 None
               OpBranchConditional %9703 %9705 %9706
       %9706 = OpLabel
               OpSelectionMerge %9707 None
               OpBranchConditional %9567 %9708 %9707
       %9708 = OpLabel
       %9709 = OpFMul %float %float_0_25 %9550
       %9710 = OpShiftRightArithmetic %int %9659 %int_1
       %9711 = OpIAdd %int %int_532487669 %9710
       %9712 = OpBitcast %float %9711
       %9713 = OpExtInst %float %1 Fma %float_3 %9712 %9550
       %9714 = OpFMul %float %9709 %9713
       %9715 = OpFAdd %float %9647 %float_0_00100000005
       %9716 = OpFDiv %float %9714 %9715
       %9717 = OpExtInst %float %1 Fma %9651 %9651 %9716
       %9718 = OpFDiv %float %9652 %9717
               OpBranch %9707
       %9707 = OpLabel
       %9719 = OpPhi %float %float_1 %9706 %9718 %9708
       %9720 = OpFNegate %float %9646
       %9721 = OpExtInst %float %1 Fma %9646 %9652 %9720
       %9722 = OpExtInst %float %1 Fma %9721 %9646 %float_1
       %9723 = OpFMul %float %float_3_14159274 %9722
       %9724 = OpFMul %float %9723 %9722
       %9725 = OpFDiv %float %9652 %9724
       %9726 = OpFMul %float %9725 %9719
       %9727 = OpExtInst %float %1 Sqrt %9652
       %9728 = OpFSub %float %float_1 %9727
       %9729 = OpExtInst %float %1 Fma %9650 %9728 %9727
       %9730 = OpExtInst %float %1 Fma %9544 %9728 %9727
       %9731 = OpFMul %float %9650 %9730
       %9732 = OpExtInst %float %1 Fma %9544 %9729 %9731
       %9733 = OpFDiv %float %float_0_5 %9732
       %9734 = OpFSub %float %float_1 %9647
       %9735 = OpFMul %float %9734 %9734
       %9736 = OpFMul %float %9735 %9735
       %9737 = OpFMul %float %9736 %9734
       %9738 = OpCompositeExtract %float %8554 1
       %9739 = OpFMul %float %float_50 %9738
       %9740 = OpExtInst %float %1 FClamp %9739 %float_0 %float_1
       %9741 = OpFMul %float %9740 %9737
       %9742 = OpCompositeConstruct %v3float %9741 %9741 %9741
       %9743 = OpFNegate %float %9736
       %9744 = OpExtInst %float %1 Fma %9743 %9734 %float_1
       %9745 = OpVectorTimesScalar %v3float %8554 %9744
       %9746 = OpFAdd %v3float %9742 %9745
       %9747 = OpFMul %float %9726 %9733
       %9748 = OpVectorTimesScalar %v3float %9746 %9747
       %9749 = OpFMul %v3float %9700 %9748
               OpBranch %9704
       %9705 = OpLabel
               OpBranch %9704
       %9704 = OpLabel
       %9750 = OpPhi %v3float %9749 %9707 %105 %9705
       %9751 = OpCompositeExtract %float %8554 1
       %9752 = OpFMul %float %float_50 %9751
       %9753 = OpExtInst %float %1 FClamp %9752 %float_0 %float_1
       %9754 = OpCompositeConstruct %v3float %9753 %9753 %9753
       %9755 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
       %9756 = OpLoad %type_sampler %View_ShadingEnergySampler
       %9757 = OpCompositeConstruct %v2float %9650 %9519
       %9758 = OpSampledImage %type_sampled_image %9755 %9756
       %9759 = OpImageSampleExplicitLod %v4float %9758 %9757 Lod %float_0
       %9760 = OpAccessChain %_ptr_Uniform_uint %View %uint_40
       %9761 = OpLoad %uint %9760
       %9762 = OpINotEqual %bool %9761 %uint_0
       %9763 = OpCompositeConstruct %v3bool %9762 %9762 %9762
       %9764 = OpCompositeExtract %float %9759 0
       %9765 = OpFSub %float %float_1 %9764
       %9766 = OpFDiv %float %9765 %9764
       %9767 = OpVectorTimesScalar %v3float %8554 %9766
       %9768 = OpFAdd %v3float %130 %9767
       %9769 = OpSelect %v3float %9763 %9768 %130
       %9770 = OpVectorTimesScalar %v3float %8554 %9764
       %9771 = OpFSub %v3float %9754 %8554
       %9772 = OpCompositeExtract %float %9759 1
       %9773 = OpVectorTimesScalar %v3float %9771 %9772
       %9774 = OpFAdd %v3float %9770 %9773
       %9775 = OpFMul %v3float %9769 %9774
       %9776 = OpAccessChain %_ptr_Uniform_uint %View %uint_41
       %9777 = OpLoad %uint %9776
       %9778 = OpINotEqual %bool %9777 %uint_0
       %9779 = OpDot %float %9775 %174
       %9780 = OpFSub %float %float_1 %9779
       %9781 = OpSelect %float %9778 %9780 %float_1
       %9782 = OpVectorTimesScalar %v3float %9701 %9781
       %9783 = OpFMul %v3float %9750 %9769
       %9784 = OpVectorTimesScalar %v3float %9783 %float_1
       %9785 = OpVectorTimesScalar %v3float %8717 %9513
       %9786 = OpFMul %v3float %9784 %9785
       %9787 = OpExtInst %v3float %1 Fma %9782 %9785 %105
               OpBranch %9517
       %9517 = OpLabel
       %9788 = OpPhi %v3float %460 %8823 %9787 %9704
       %9789 = OpPhi %v3float %460 %8823 %9786 %9704
       %9790 = OpCompositeExtract %float %9788 0
       %9791 = OpCompositeExtract %float %9788 1
       %9792 = OpCompositeExtract %float %9788 2
       %9793 = OpCompositeConstruct %v4float %9790 %9791 %9792 %float_0
       %9794 = OpCompositeExtract %float %9789 0
       %9795 = OpCompositeExtract %float %9789 1
       %9796 = OpCompositeExtract %float %9789 2
       %9797 = OpCompositeConstruct %v4float %9794 %9795 %9796 %float_0
       %9798 = OpBitwiseAnd %uint %8736 %8709
       %9799 = OpINotEqual %bool %9798 %uint_0
               OpSelectionMerge %9800 Flatten
               OpBranchConditional %9799 %9801 %9800
       %9801 = OpLabel
       %9802 = OpVectorShuffle %v4float %9793 %9793 4 5 6 3
       %9803 = OpVectorShuffle %v4float %9797 %9797 4 5 6 3
               OpSelectionMerge %9804 None
               OpBranchConditional %8678 %9805 %9806
       %9806 = OpLabel
               OpBranch %9804
       %9805 = OpLabel
       %9807 = OpVectorShuffle %v3float %9793 %459 0 1 2
       %9808 = OpVectorShuffle %v3float %9797 %459 0 1 2
       %9809 = OpFAdd %v3float %9807 %9808
               OpBranch %9804
       %9804 = OpLabel
       %9810 = OpPhi %v3float %105 %9806 %9809 %9805
       %9811 = OpCompositeConstruct %v4bool %8678 %8678 %8678 %8678
       %9812 = OpSelect %v4float %9811 %101 %9802
       %9813 = OpSelect %v4float %9811 %101 %9803
               OpBranch %9800
       %9800 = OpLabel
       %9814 = OpPhi %v3float %105 %9517 %9810 %9804
       %9815 = OpPhi %v4float %101 %9517 %9812 %9804
       %9816 = OpPhi %v4float %101 %9517 %9813 %9804
               OpBranch %8723
       %8723 = OpLabel
       %9817 = OpPhi %v4float %8510 %8684 %8738 %9800
       %9818 = OpPhi %v3float %105 %8684 %9814 %9800
       %9819 = OpPhi %float %float_1 %8684 %9513 %9800
       %9820 = OpPhi %v4float %101 %8684 %9815 %9800
       %9821 = OpPhi %v4float %101 %8684 %9816 %9800
       %9822 = OpIMul %uint %8671 %uint_2
       %9823 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid %int_0 %9822
       %9824 = OpLoad %uint %9823
       %9825 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %int_0
       %9826 = OpLoad %uint %9825
       %9827 = OpExtInst %uint %1 UMin %9824 %9826
       %9828 = OpIAdd %uint %9822 %uint_1
       %9829 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid %int_0 %9828
       %9830 = OpLoad %uint %9829
       %9831 = OpExtInst %uint %1 UMin %9827 %9826
               OpBranch %9832
       %9832 = OpLabel
       %9833 = OpPhi %v4float %9820 %8723 %9834 %9835
       %9836 = OpPhi %v4float %9821 %8723 %9837 %9835
       %9838 = OpPhi %uint %uint_0 %8723 %9839 %9835
       %9840 = OpULessThan %bool %9838 %9831
               OpLoopMerge %9841 %9835 DontUnroll
               OpBranchConditional %9840 %9842 %9841
       %9842 = OpLabel
       %9843 = OpIAdd %uint %9830 %9838
       %9844 = OpLoad %type_buffer_image %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit
       %9845 = OpImageFetch %v4uint %9844 %9843 None
       %9846 = OpCompositeExtract %uint %9845 0
       %9847 = OpIMul %uint %9846 %uint_6
       %9848 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9847
       %9849 = OpLoad %v4float %9848
       %9850 = OpIAdd %uint %9847 %uint_1
       %9851 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9850
       %9852 = OpLoad %v4float %9851
       %9853 = OpIAdd %uint %9847 %uint_2
       %9854 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9853
       %9855 = OpLoad %v4float %9854
       %9856 = OpIAdd %uint %9847 %uint_3
       %9857 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9856
       %9858 = OpLoad %v4float %9857
       %9859 = OpIAdd %uint %9847 %uint_4
       %9860 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9859
       %9861 = OpLoad %v4float %9860
       %9862 = OpCompositeExtract %float %9855 3
       %9863 = OpBitcast %uint %9862
       %9864 = OpShiftRightLogical %uint %9863 %uint_16
       %9865 = OpBitwiseAnd %uint %9864 %uint_3
       %9866 = OpVectorShuffle %v3float %9849 %9849 0 1 2
       %9867 = OpCompositeExtract %float %9849 3
       %9868 = OpCompositeExtract %float %9852 1
       %9869 = OpBitcast %uint %9868
       %9870 = OpShiftRightLogical %uint %9869 %uint_0
       %9871 = OpBitwiseAnd %uint %9870 %uint_1023
       %9872 = OpConvertUToF %float %9871
       %9873 = OpShiftRightLogical %uint %9869 %uint_10
       %9874 = OpBitwiseAnd %uint %9873 %uint_1023
       %9875 = OpConvertUToF %float %9874
       %9876 = OpShiftRightLogical %uint %9869 %uint_20
       %9877 = OpBitwiseAnd %uint %9876 %uint_1023
       %9878 = OpConvertUToF %float %9877
       %9879 = OpCompositeConstruct %v3float %9872 %9875 %9878
       %9880 = OpCompositeExtract %float %9852 0
       %9881 = OpVectorTimesScalar %v3float %9879 %9880
       %9882 = OpCompositeExtract %float %9852 3
       %9883 = OpVectorShuffle %v3float %9855 %9855 0 1 2
       %9884 = OpCompositeExtract %float %9858 2
       %9885 = OpBitcast %uint %9884
       %9886 = OpBitwiseAnd %uint %9885 %uint_65535
       %9887 = OpExtInst %v2float %1 UnpackHalf2x16 %9886
       %9888 = OpCompositeExtract %float %9887 0
       %9889 = OpCompositeExtract %float %9858 3
       %9890 = OpBitcast %uint %9889
       %9891 = OpExtInst %v2float %1 UnpackHalf2x16 %9890
       %9892 = OpCompositeExtract %float %9891 0
       %9893 = OpVectorShuffle %v3float %9861 %9861 0 1 2
       %9894 = OpShiftRightLogical %uint %9885 %uint_16
       %9895 = OpExtInst %v2float %1 UnpackHalf2x16 %9894
       %9896 = OpCompositeExtract %float %9895 0
       %9897 = OpFOrdEqual %bool %9882 %float_0
       %9898 = OpCompositeExtract %float %9861 3
       %9899 = OpBitcast %uint %9898
       %9900 = OpBitwiseAnd %uint %9899 %uint_65535
       %9901 = OpExtInst %v2float %1 UnpackHalf2x16 %9900
       %9902 = OpCompositeExtract %float %9901 0
       %9903 = OpIEqual %bool %9865 %uint_2
       %9904 = OpBitwiseAnd %uint %9863 %uint_255
       %9905 = OpINotEqual %bool %9904 %uint_0
       %9906 = OpSelect %uint %9905 %uint_1 %uint_0
       %9907 = OpBitwiseAnd %uint %9863 %uint_1
       %9908 = OpConvertUToF %float %9907
       %9909 = OpBitwiseAnd %uint %9863 %uint_2
       %9910 = OpShiftRightLogical %uint %9909 %uint_1
       %9911 = OpConvertUToF %float %9910
       %9912 = OpBitwiseAnd %uint %9863 %uint_4
       %9913 = OpShiftRightLogical %uint %9912 %uint_2
       %9914 = OpConvertUToF %float %9913
       %9915 = OpBitwiseAnd %uint %9863 %uint_8
       %9916 = OpShiftRightLogical %uint %9915 %uint_3
       %9917 = OpConvertUToF %float %9916
       %9918 = OpCompositeConstruct %v4float %9908 %9911 %9914 %9917
       %9919 = OpShiftRightLogical %uint %9863 %uint_4
       %9920 = OpBitwiseAnd %uint %9919 %uint_1
       %9921 = OpConvertUToF %float %9920
       %9922 = OpBitwiseAnd %uint %9919 %uint_2
       %9923 = OpShiftRightLogical %uint %9922 %uint_1
       %9924 = OpConvertUToF %float %9923
       %9925 = OpBitwiseAnd %uint %9919 %uint_4
       %9926 = OpShiftRightLogical %uint %9925 %uint_2
       %9927 = OpConvertUToF %float %9926
       %9928 = OpBitwiseAnd %uint %9919 %uint_8
       %9929 = OpShiftRightLogical %uint %9928 %uint_3
       %9930 = OpConvertUToF %float %9929
       %9931 = OpCompositeConstruct %v4float %9921 %9924 %9927 %9930
       %9932 = OpShiftRightLogical %uint %9863 %uint_8
       %9933 = OpBitwiseAnd %uint %9932 %uint_7
       %9934 = OpDot %float %9931 %8693
       %9935 = OpFSub %v3float %9866 %638
       %9936 = OpDot %float %9935 %9935
       %9937 = OpExtInst %float %1 InverseSqrt %9936
       %9938 = OpVectorTimesScalar %v3float %9935 %9937
               OpSelectionMerge %9939 None
               OpBranchConditional %9897 %9940 %9941
       %9941 = OpLabel
       %9942 = OpVectorTimesScalar %v3float %9935 %9867
       %9943 = OpDot %float %9942 %9942
       %9944 = OpExtInst %float %1 FClamp %9943 %float_0 %float_1
       %9945 = OpFSub %float %float_1 %9944
       %9946 = OpExtInst %float %1 Pow %9945 %9882
               OpBranch %9939
       %9940 = OpLabel
       %9947 = OpFMul %float %9867 %9867
       %9948 = OpFMul %float %9936 %9947
       %9949 = OpFNegate %float %9948
       %9950 = OpExtInst %float %1 Fma %9949 %9948 %float_1
       %9951 = OpExtInst %float %1 FClamp %9950 %float_0 %float_1
       %9952 = OpFMul %float %9951 %9951
               OpBranch %9939
       %9939 = OpLabel
       %9953 = OpPhi %float %9946 %9941 %9952 %9940
               OpSelectionMerge %9954 None
               OpBranchConditional %9903 %9955 %9954
       %9955 = OpLabel
       %9956 = OpDot %float %9938 %9883
       %9957 = OpCompositeExtract %float %9858 0
       %9958 = OpFSub %float %9956 %9957
       %9959 = OpCompositeExtract %float %9858 1
       %9960 = OpFMul %float %9958 %9959
       %9961 = OpExtInst %float %1 FClamp %9960 %float_0 %float_1
       %9962 = OpFMul %float %9961 %9961
       %9963 = OpFMul %float %9953 %9962
               OpBranch %9954
       %9954 = OpLabel
       %9964 = OpPhi %float %9953 %9939 %9963 %9955
       %9965 = OpVectorTimesScalar %v3float %9881 %9964
       %9966 = OpFOrdGreaterThan %bool %9964 %float_0
               OpSelectionMerge %9967 DontFlatten
               OpBranchConditional %9966 %9968 %9967
       %9968 = OpLabel
       %9969 = OpINotEqual %bool %9906 %uint_0
               OpSelectionMerge %9970 DontFlatten
               OpBranchConditional %9969 %9971 %9970
       %9971 = OpLabel
       %9972 = OpDot %float %9918 %120
       %9973 = OpDot %float %9817 %9918
       %9974 = OpExtInst %float %1 FMix %float_1 %9973 %9972
       %9975 = OpFMul %float %9934 %9974
               OpBranch %9970
       %9970 = OpLabel
       %9976 = OpPhi %float %float_1 %9968 %9975 %9971
       %9977 = OpFAdd %float %9976 %9976
       %9978 = OpFOrdGreaterThan %bool %9977 %float_0
               OpSelectionMerge %9979 DontFlatten
               OpBranchConditional %9978 %9980 %9979
       %9980 = OpLabel
       %9981 = OpFMul %float %float_0_5 %9892
       %9982 = OpVectorTimesScalar %v3float %9893 %9981
       %9983 = OpFSub %v3float %9935 %9982
       %9984 = OpFAdd %v3float %9935 %9982
       %9985 = OpExtInst %float %1 NMax %8421 %8419
       %9986 = OpFOrdGreaterThan %bool %9892 %float_0
               OpSelectionMerge %9987 DontFlatten
               OpBranchConditional %9986 %9988 %9989
       %9989 = OpLabel
       %9990 = OpDot %float %9983 %9983
       %9991 = OpFAdd %float %9990 %float_1
       %9992 = OpFDiv %float %float_1 %9991
       %9993 = OpExtInst %float %1 InverseSqrt %9990
       %9994 = OpVectorTimesScalar %v3float %9983 %9993
       %9995 = OpDot %float %8444 %9994
               OpBranch %9987
       %9988 = OpLabel
       %9996 = OpDot %float %9983 %9983
       %9997 = OpDot %float %9984 %9984
       %9998 = OpExtInst %float %1 InverseSqrt %9996
       %9999 = OpExtInst %float %1 InverseSqrt %9997
      %10000 = OpFMul %float %9998 %9999
      %10001 = OpDot %float %9983 %9984
      %10002 = OpFMul %float %10001 %10000
      %10003 = OpExtInst %float %1 Fma %10002 %float_0_5 %float_0_5
      %10004 = OpExtInst %float %1 Fma %9998 %9999 %10003
      %10005 = OpFDiv %float %10000 %10004
      %10006 = OpDot %float %8444 %9983
      %10007 = OpDot %float %8444 %9984
      %10008 = OpFMul %float %10007 %9999
      %10009 = OpExtInst %float %1 Fma %10006 %9998 %10008
      %10010 = OpFMul %float %float_0_5 %10009
               OpBranch %9987
       %9987 = OpLabel
      %10011 = OpPhi %float %float_1 %9989 %10002 %9988
      %10012 = OpPhi %float %9995 %9989 %10010 %9988
      %10013 = OpPhi %float %9992 %9989 %10005 %9988
      %10014 = OpFOrdGreaterThan %bool %9888 %float_0
               OpSelectionMerge %10015 None
               OpBranchConditional %10014 %10016 %10015
      %10016 = OpLabel
      %10017 = OpFMul %float %9888 %9888
      %10018 = OpFMul %float %10017 %10013
      %10019 = OpExtInst %float %1 FClamp %10018 %float_0 %float_1
      %10020 = OpExtInst %float %1 Sqrt %10019
      %10021 = OpFOrdLessThan %bool %10012 %10020
               OpSelectionMerge %10022 None
               OpBranchConditional %10021 %10023 %10022
      %10023 = OpLabel
      %10024 = OpFNegate %float %10020
      %10025 = OpExtInst %float %1 NMax %10012 %10024
      %10026 = OpFAdd %float %10020 %10025
      %10027 = OpFMul %float %10026 %10026
      %10028 = OpFMul %float %float_4 %10020
      %10029 = OpFDiv %float %10027 %10028
               OpBranch %10022
      %10022 = OpLabel
      %10030 = OpPhi %float %10012 %10016 %10029 %10023
               OpBranch %10015
      %10015 = OpLabel
      %10031 = OpPhi %float %10012 %9987 %10030 %10022
      %10032 = OpExtInst %float %1 FClamp %10031 %float_0 %float_1
      %10033 = OpSelect %float %9897 %10013 %float_1
               OpSelectionMerge %10034 None
               OpBranchConditional %9986 %10035 %10034
      %10035 = OpLabel
      %10036 = OpFNegate %v3float %656
      %10037 = OpExtInst %v3float %1 Reflect %10036 %8444
      %10038 = OpFSub %v3float %9984 %9983
      %10039 = OpDot %float %10037 %10038
      %10040 = OpVectorTimesScalar %v3float %10037 %10039
      %10041 = OpFSub %v3float %10040 %10038
      %10042 = OpDot %float %9983 %10041
      %10043 = OpFMul %float %10039 %10039
      %10044 = OpFNegate %float %10043
      %10045 = OpExtInst %float %1 Fma %9892 %9892 %10044
      %10046 = OpFDiv %float %10042 %10045
      %10047 = OpExtInst %float %1 FClamp %10046 %float_0 %float_1
      %10048 = OpVectorTimesScalar %v3float %10038 %10047
      %10049 = OpFAdd %v3float %9983 %10048
               OpBranch %10034
      %10034 = OpLabel
      %10050 = OpPhi %v3float %9983 %10015 %10049 %10035
      %10051 = OpDot %float %10050 %10050
      %10052 = OpExtInst %float %1 InverseSqrt %10051
      %10053 = OpVectorTimesScalar %v3float %10050 %10052
      %10054 = OpExtInst %float %1 NMax %9985 %8419
      %10055 = OpFMul %float %9888 %10052
      %10056 = OpFNegate %float %10054
      %10057 = OpExtInst %float %1 Fma %10056 %10054 %float_1
      %10058 = OpFMul %float %10055 %10057
      %10059 = OpExtInst %float %1 FClamp %10058 %float_0 %float_1
      %10060 = OpFMul %float %9896 %10052
      %10061 = OpExtInst %float %1 FClamp %10060 %float_0 %float_1
      %10062 = OpExtInst %float %1 NMax %9892 %9888
      %10063 = OpFNegate %float %10062
      %10064 = OpExtInst %float %1 Fma %10063 %float_0_0500000007 %float_1
      %10065 = OpExtInst %float %1 FClamp %10064 %float_0 %float_1
      %10066 = OpBitcast %uint %10065
      %10067 = OpShiftLeftLogical %uint %10066 %uint_1
      %10068 = OpBitwiseOr %uint %uint_0 %10067
      %10069 = OpDot %float %8444 %10053
      %10070 = OpDot %float %8444 %656
      %10071 = OpDot %float %656 %10053
      %10072 = OpExtInst %float %1 Fma %float_2 %10071 %float_2
      %10073 = OpExtInst %float %1 InverseSqrt %10072
      %10074 = OpFAdd %float %10069 %10070
      %10075 = OpFMul %float %10074 %10073
      %10076 = OpExtInst %float %1 FClamp %10075 %float_0 %float_1
      %10077 = OpExtInst %float %1 Fma %10073 %10071 %10073
      %10078 = OpExtInst %float %1 FClamp %10077 %float_0 %float_1
      %10079 = OpFOrdGreaterThan %bool %10059 %float_0
               OpSelectionMerge %10080 None
               OpBranchConditional %10079 %10081 %10080
      %10081 = OpLabel
      %10082 = OpFNegate %float %10059
      %10083 = OpExtInst %float %1 Fma %10082 %10059 %float_1
      %10084 = OpExtInst %float %1 Sqrt %10083
      %10085 = OpFMul %float %float_2 %10069
      %10086 = OpFNegate %float %10071
      %10087 = OpExtInst %float %1 Fma %10085 %10070 %10086
      %10088 = OpFOrdGreaterThanEqual %bool %10087 %10084
               OpSelectionMerge %10089 None
               OpBranchConditional %10088 %10090 %10091
      %10091 = OpLabel
      %10092 = OpFNegate %float %10087
      %10093 = OpExtInst %float %1 Fma %10092 %10087 %float_1
      %10094 = OpExtInst %float %1 InverseSqrt %10093
      %10095 = OpFMul %float %10059 %10094
      %10096 = OpExtInst %float %1 Fma %10092 %10069 %10070
      %10097 = OpFMul %float %10095 %10096
      %10098 = OpFMul %float %float_2 %10070
      %10099 = OpExtInst %float %1 Fma %10098 %10070 %float_n1
      %10100 = OpExtInst %float %1 Fma %10092 %10071 %10099
      %10101 = OpFMul %float %10095 %10100
      %10102 = OpFNegate %float %10069
      %10103 = OpExtInst %float %1 Fma %10102 %10069 %float_1
      %10104 = OpFNegate %float %10070
      %10105 = OpExtInst %float %1 Fma %10104 %10070 %10103
      %10106 = OpExtInst %float %1 Fma %10086 %10071 %10105
      %10107 = OpFMul %float %10085 %10070
      %10108 = OpExtInst %float %1 Fma %10107 %10071 %10106
      %10109 = OpExtInst %float %1 FClamp %10108 %float_0 %float_1
      %10110 = OpExtInst %float %1 Sqrt %10109
      %10111 = OpFMul %float %10095 %10110
      %10112 = OpFMul %float %10111 %float_2
      %10113 = OpFMul %float %10112 %10070
      %10114 = OpExtInst %float %1 Fma %10069 %10084 %10070
      %10115 = OpExtInst %float %1 Fma %10095 %10096 %10114
      %10116 = OpExtInst %float %1 Fma %10071 %10084 %float_1
      %10117 = OpExtInst %float %1 Fma %10095 %10100 %10116
      %10118 = OpFMul %float %10111 %10117
      %10119 = OpFMul %float %10115 %10117
      %10120 = OpFMul %float %10113 %10115
      %10121 = OpFMul %float %float_0_25 %10113
      %10122 = OpFMul %float %10121 %10115
      %10123 = OpExtInst %float %1 Fma %float_n0_5 %10118 %10122
      %10124 = OpFMul %float %10119 %10123
      %10125 = OpFMul %float %10118 %float_n2
      %10126 = OpExtInst %float %1 Fma %10113 %10115 %10125
      %10127 = OpFMul %float %10120 %10126
      %10128 = OpExtInst %float %1 Fma %10118 %10118 %10127
      %10129 = OpFMul %float %10117 %10117
      %10130 = OpExtInst %float %1 Fma %10071 %10084 %10117
      %10131 = OpExtInst %float %1 Fma %float_n0_5 %10130 %float_n0_5
      %10132 = OpFMul %float %10119 %10131
      %10133 = OpExtInst %float %1 Fma %10114 %10129 %10132
      %10134 = OpExtInst %float %1 Fma %10115 %10133 %10128
      %10135 = OpFMul %float %float_2 %10124
      %10136 = OpFMul %float %10124 %10124
      %10137 = OpExtInst %float %1 Fma %10134 %10134 %10136
      %10138 = OpFDiv %float %10135 %10137
      %10139 = OpFMul %float %10138 %10134
      %10140 = OpFNegate %float %10138
      %10141 = OpExtInst %float %1 Fma %10140 %10124 %float_1
      %10142 = OpFMul %float %10139 %10111
      %10143 = OpExtInst %float %1 Fma %10141 %10097 %10142
      %10144 = OpFMul %float %10139 %10113
      %10145 = OpExtInst %float %1 Fma %10141 %10101 %10144
      %10146 = OpExtInst %float %1 Fma %10069 %10084 %10143
      %10147 = OpExtInst %float %1 Fma %10071 %10084 %10145
      %10148 = OpExtInst %float %1 Fma %float_2 %10147 %float_2
      %10149 = OpExtInst %float %1 InverseSqrt %10148
      %10150 = OpFAdd %float %10146 %10070
      %10151 = OpFMul %float %10150 %10149
      %10152 = OpExtInst %float %1 FClamp %10151 %float_0 %float_1
      %10153 = OpExtInst %float %1 Fma %10149 %10147 %10149
      %10154 = OpExtInst %float %1 FClamp %10153 %float_0 %float_1
               OpBranch %10089
      %10090 = OpLabel
      %10155 = OpExtInst %float %1 FAbs %10070
               OpBranch %10089
      %10089 = OpLabel
      %10156 = OpPhi %float %10152 %10091 %float_1 %10090
      %10157 = OpPhi %float %10154 %10091 %10155 %10090
               OpBranch %10080
      %10080 = OpLabel
      %10158 = OpPhi %float %10076 %10034 %10156 %10089
      %10159 = OpPhi %float %10078 %10034 %10157 %10089
      %10160 = OpExtInst %float %1 FAbs %10070
      %10161 = OpFAdd %float %10160 %float_9_99999975en06
      %10162 = OpExtInst %float %1 FClamp %10161 %float_0 %float_1
      %10163 = OpFMul %float %9985 %9985
      %10164 = OpFMul %float %10163 %10163
      %10165 = OpShiftRightLogical %uint %10068 %uint_1
      %10166 = OpBitcast %float %10165
      %10167 = OpExtInst %float %1 FClamp %10070 %float_0 %float_1
      %10168 = OpExtInst %float %1 FClamp %10032 %float_0 %float_1
      %10169 = OpExtInst %float %1 FClamp %10078 %float_0 %float_1
      %10170 = OpExtInst %float %1 FClamp %10076 %float_0 %float_1
      %10171 = OpBitcast %int %10164
      %10172 = OpISub %int %int_2129859010 %10171
      %10173 = OpBitcast %float %10172
      %10174 = OpExtInst %float %1 Fma %float_2 %10173 %float_n1
      %10175 = OpExtInst %float %1 Log2 %10174
      %10176 = OpFMul %float %float_0_055555556 %10175
      %10177 = OpExtInst %float %1 FClamp %10176 %float_0 %float_1
      %10178 = OpFSub %float %float_1 %10169
      %10179 = OpFMul %float %10178 %10178
      %10180 = OpFMul %float %10179 %10179
      %10181 = OpExtInst %float %1 Fma %10180 %10178 %10169
      %10182 = OpFSub %float %float_1 %10167
      %10183 = OpFMul %float %10182 %10182
      %10184 = OpFMul %float %10183 %10183
      %10185 = OpFMul %float %10184 %10182
      %10186 = OpExtInst %float %1 Fma %float_n0_75 %10185 %float_1
      %10187 = OpFSub %float %float_1 %10168
      %10188 = OpFMul %float %10187 %10187
      %10189 = OpFMul %float %10188 %10188
      %10190 = OpFMul %float %10189 %10187
      %10191 = OpExtInst %float %1 Fma %float_n0_75 %10190 %float_1
      %10192 = OpFMul %float %10186 %10191
      %10193 = OpExtInst %float %1 Fma %float_2_20000005 %10177 %float_n0_5
      %10194 = OpExtInst %float %1 FClamp %10193 %float_0 %float_1
      %10195 = OpExtInst %float %1 FMix %10181 %10192 %10194
      %10196 = OpExtInst %float %1 Fma %float_34_5 %10177 %float_n59
      %10197 = OpExtInst %float %1 Fma %10196 %10177 %float_24_5
      %10198 = OpFMul %float %10197 %10169
      %10199 = OpExtInst %float %1 Fma %float_73_1999969 %10177 %float_n21_2000008
      %10200 = OpExtInst %float %1 NMax %10199 %float_8_89999962
      %10201 = OpFNegate %float %10200
      %10202 = OpBitcast %int %10170
      %10203 = OpShiftRightArithmetic %int %10202 %int_1
      %10204 = OpIAdd %int %int_532487669 %10203
      %10205 = OpBitcast %float %10204
      %10206 = OpFMul %float %10201 %10205
      %10207 = OpExtInst %float %1 Exp2 %10206
      %10208 = OpFMul %float %10198 %10207
      %10209 = OpExtInst %float %1 Fma %10208 %10166 %10195
      %10210 = OpFMul %float %float_0_318309873 %10209
      %10211 = OpVectorTimesScalar %v3float %8634 %10210
      %10212 = OpFMul %float %10033 %10032
      %10213 = OpVectorTimesScalar %v3float %130 %10212
      %10214 = OpFMul %v3float %10211 %10213
      %10215 = OpBitwiseAnd %uint %10068 %uint_1
      %10216 = OpIEqual %bool %10215 %uint_1
               OpSelectionMerge %10217 None
               OpBranchConditional %10216 %10218 %10219
      %10219 = OpLabel
      %10220 = OpFOrdGreaterThan %bool %10061 %float_0
               OpSelectionMerge %10221 None
               OpBranchConditional %10220 %10222 %10221
      %10222 = OpLabel
      %10223 = OpFMul %float %10061 %10061
      %10224 = OpExtInst %float %1 Fma %10159 %float_3_5999999 %float_0_400000006
      %10225 = OpFDiv %float %10223 %10224
      %10226 = OpExtInst %float %1 Fma %10163 %10163 %10225
      %10227 = OpExtInst %float %1 FClamp %10226 %float_0 %float_1
               OpBranch %10221
      %10221 = OpLabel
      %10228 = OpPhi %float %10164 %10219 %10227 %10222
               OpSelectionMerge %10229 None
               OpBranchConditional %10079 %10230 %10229
      %10230 = OpLabel
      %10231 = OpFMul %float %float_0_25 %10059
      %10232 = OpBitcast %int %10228
      %10233 = OpShiftRightArithmetic %int %10232 %int_1
      %10234 = OpIAdd %int %int_532487669 %10233
      %10235 = OpBitcast %float %10234
      %10236 = OpExtInst %float %1 Fma %float_3 %10235 %10059
      %10237 = OpFMul %float %10231 %10236
      %10238 = OpFAdd %float %10159 %float_0_00100000005
      %10239 = OpFDiv %float %10237 %10238
      %10240 = OpFAdd %float %10228 %10239
      %10241 = OpFDiv %float %10228 %10240
               OpBranch %10229
      %10229 = OpLabel
      %10242 = OpPhi %float %float_1 %10221 %10241 %10230
      %10243 = OpPhi %float %10228 %10221 %10240 %10230
      %10244 = OpFOrdLessThan %bool %10011 %float_1
               OpSelectionMerge %10245 None
               OpBranchConditional %10244 %10246 %10245
      %10246 = OpLabel
      %10247 = OpFSub %float %float_1_00010002 %10011
      %10248 = OpFAdd %float %float_1 %10011
      %10249 = OpFDiv %float %10247 %10248
      %10250 = OpExtInst %float %1 Sqrt %10249
      %10251 = OpFMul %float %float_0_25 %10250
      %10252 = OpBitcast %int %10243
      %10253 = OpShiftRightArithmetic %int %10252 %int_1
      %10254 = OpIAdd %int %int_532487669 %10253
      %10255 = OpBitcast %float %10254
      %10256 = OpExtInst %float %1 Fma %float_3 %10255 %10250
      %10257 = OpFMul %float %10251 %10256
      %10258 = OpFAdd %float %10159 %float_0_00100000005
      %10259 = OpFDiv %float %10257 %10258
      %10260 = OpFAdd %float %10243 %10259
      %10261 = OpFDiv %float %10243 %10260
      %10262 = OpExtInst %float %1 Sqrt %10261
      %10263 = OpFMul %float %10242 %10262
               OpBranch %10245
      %10245 = OpLabel
      %10264 = OpPhi %float %10242 %10229 %10263 %10246
      %10265 = OpFNegate %float %10158
      %10266 = OpExtInst %float %1 Fma %10158 %10228 %10265
      %10267 = OpExtInst %float %1 Fma %10266 %10158 %float_1
      %10268 = OpFMul %float %float_3_14159274 %10267
      %10269 = OpFMul %float %10268 %10267
      %10270 = OpFDiv %float %10228 %10269
      %10271 = OpFMul %float %10270 %10264
      %10272 = OpExtInst %float %1 Sqrt %10228
      %10273 = OpFSub %float %float_1 %10272
      %10274 = OpExtInst %float %1 Fma %10162 %10273 %10272
      %10275 = OpExtInst %float %1 Fma %10032 %10273 %10272
      %10276 = OpFMul %float %10162 %10275
      %10277 = OpExtInst %float %1 Fma %10032 %10274 %10276
      %10278 = OpFDiv %float %float_0_5 %10277
      %10279 = OpFSub %float %float_1 %10159
      %10280 = OpFMul %float %10279 %10279
      %10281 = OpFMul %float %10280 %10280
      %10282 = OpFMul %float %10281 %10279
      %10283 = OpCompositeExtract %float %8554 1
      %10284 = OpFMul %float %float_50 %10283
      %10285 = OpExtInst %float %1 FClamp %10284 %float_0 %float_1
      %10286 = OpFMul %float %10285 %10282
      %10287 = OpCompositeConstruct %v3float %10286 %10286 %10286
      %10288 = OpFNegate %float %10281
      %10289 = OpExtInst %float %1 Fma %10288 %10279 %float_1
      %10290 = OpVectorTimesScalar %v3float %8554 %10289
      %10291 = OpFAdd %v3float %10287 %10290
      %10292 = OpFMul %float %10271 %10278
      %10293 = OpVectorTimesScalar %v3float %10291 %10292
      %10294 = OpFMul %v3float %10213 %10293
               OpBranch %10217
      %10218 = OpLabel
               OpBranch %10217
      %10217 = OpLabel
      %10295 = OpPhi %v3float %10294 %10245 %105 %10218
      %10296 = OpCompositeExtract %float %8554 1
      %10297 = OpFMul %float %float_50 %10296
      %10298 = OpExtInst %float %1 FClamp %10297 %float_0 %float_1
      %10299 = OpCompositeConstruct %v3float %10298 %10298 %10298
      %10300 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
      %10301 = OpLoad %type_sampler %View_ShadingEnergySampler
      %10302 = OpCompositeConstruct %v2float %10162 %9985
      %10303 = OpSampledImage %type_sampled_image %10300 %10301
      %10304 = OpImageSampleExplicitLod %v4float %10303 %10302 Lod %float_0
      %10305 = OpAccessChain %_ptr_Uniform_uint %View %uint_40
      %10306 = OpLoad %uint %10305
      %10307 = OpINotEqual %bool %10306 %uint_0
      %10308 = OpCompositeConstruct %v3bool %10307 %10307 %10307
      %10309 = OpCompositeExtract %float %10304 0
      %10310 = OpFSub %float %float_1 %10309
      %10311 = OpFDiv %float %10310 %10309
      %10312 = OpVectorTimesScalar %v3float %8554 %10311
      %10313 = OpFAdd %v3float %130 %10312
      %10314 = OpSelect %v3float %10308 %10313 %130
      %10315 = OpVectorTimesScalar %v3float %8554 %10309
      %10316 = OpFSub %v3float %10299 %8554
      %10317 = OpCompositeExtract %float %10304 1
      %10318 = OpVectorTimesScalar %v3float %10316 %10317
      %10319 = OpFAdd %v3float %10315 %10318
      %10320 = OpFMul %v3float %10314 %10319
      %10321 = OpAccessChain %_ptr_Uniform_uint %View %uint_41
      %10322 = OpLoad %uint %10321
      %10323 = OpINotEqual %bool %10322 %uint_0
      %10324 = OpDot %float %10320 %174
      %10325 = OpFSub %float %float_1 %10324
      %10326 = OpSelect %float %10323 %10325 %float_1
      %10327 = OpVectorTimesScalar %v3float %10214 %10326
      %10328 = OpFMul %v3float %10295 %10314
      %10329 = OpVectorTimesScalar %v3float %10328 %9902
      %10330 = OpVectorTimesScalar %v3float %9965 %9976
      %10331 = OpFMul %v3float %10329 %10330
      %10332 = OpExtInst %v3float %1 Fma %10327 %10330 %105
               OpBranch %9979
       %9979 = OpLabel
      %10333 = OpPhi %v3float %460 %9970 %10332 %10217
      %10334 = OpPhi %v3float %460 %9970 %10331 %10217
               OpBranch %9967
       %9967 = OpLabel
      %10335 = OpPhi %v3float %460 %9954 %10333 %9979
      %10336 = OpPhi %v3float %460 %9954 %10334 %9979
      %10337 = OpCompositeExtract %float %10335 0
      %10338 = OpCompositeExtract %float %10335 1
      %10339 = OpCompositeExtract %float %10335 2
      %10340 = OpCompositeConstruct %v4float %10337 %10338 %10339 %float_0
      %10341 = OpCompositeExtract %float %10336 0
      %10342 = OpCompositeExtract %float %10336 1
      %10343 = OpCompositeExtract %float %10336 2
      %10344 = OpCompositeConstruct %v4float %10341 %10342 %10343 %float_0
      %10345 = OpBitwiseAnd %uint %9933 %8709
      %10346 = OpINotEqual %bool %10345 %uint_0
               OpSelectionMerge %10347 Flatten
               OpBranchConditional %10346 %10348 %10347
      %10348 = OpLabel
      %10349 = OpFAdd %v4float %9833 %10340
      %10350 = OpFAdd %v4float %9836 %10344
               OpBranch %10347
      %10347 = OpLabel
       %9834 = OpPhi %v4float %9833 %9967 %10349 %10348
       %9837 = OpPhi %v4float %9836 %9967 %10350 %10348
               OpBranch %9835
       %9835 = OpLabel
       %9839 = OpIAdd %uint %9838 %uint_1
               OpBranch %9832
       %9841 = OpLabel
      %10351 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_16
      %10352 = OpLoad %uint %10351
      %10353 = OpIEqual %bool %10352 %uint_0
      %10354 = OpCompositeConstruct %v4bool %10353 %10353 %10353 %10353
      %10355 = OpSelect %v4float %10354 %101 %9833
      %10356 = OpSelect %v4float %10354 %101 %9836
      %10357 = OpVectorShuffle %v3float %10355 %10355 0 1 2
      %10358 = OpVectorShuffle %v3float %10356 %10356 0 1 2
      %10359 = OpFAdd %v3float %10357 %10358
      %10360 = OpAccessChain %_ptr_Uniform_float %View %uint_18
      %10361 = OpLoad %float %10360
      %10362 = OpFOrdGreaterThan %bool %10361 %float_0
               OpSelectionMerge %10363 DontFlatten
               OpBranchConditional %10362 %10364 %10363
      %10364 = OpLabel
      %10365 = OpIAdd %uint %8387 %uint_1
      %10366 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10365
      %10367 = OpLoad %v4float %10366
      %10368 = OpVectorShuffle %v3float %10367 %10367 0 1 2
      %10369 = OpIAdd %uint %8387 %uint_18
      %10370 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10369
      %10371 = OpLoad %v4float %10370
      %10372 = OpIAdd %uint %8387 %uint_17
      %10373 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10372
      %10374 = OpLoad %v4float %10373
      %10375 = OpCompositeExtract %float %10374 3
      %10376 = OpVectorShuffle %v3float %10371 %10371 0 1 2
      %10377 = OpIAdd %uint %8387 %uint_24
      %10378 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10377
      %10379 = OpLoad %v4float %10378
      %10380 = OpCompositeExtract %float %10379 3
      %10381 = OpIAdd %uint %8387 %uint_25
      %10382 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10381
      %10383 = OpLoad %v4float %10382
      %10384 = OpCompositeExtract %float %10383 3
      %10385 = OpIAdd %uint %8387 %uint_31
      %10386 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10385
      %10387 = OpLoad %v4float %10386
      %10388 = OpCompositeExtract %float %10387 0
      %10389 = OpCompositeConstruct %v3float %10375 %10380 %10384
      %10390 = OpFSub %v3float %591 %10368
      %10391 = OpFSub %v3float %639 %10376
      %10392 = OpVectorTimesScalar %v3float %10390 %float_2097152
      %10393 = OpFAdd %v3float %10392 %10391
      %10394 = OpExtInst %v3float %1 FAbs %10393
      %10395 = OpFAdd %v3float %10389 %130
      %10396 = OpFOrdGreaterThan %v3bool %10394 %10395
      %10397 = OpAny %bool %10396
               OpSelectionMerge %10398 None
               OpBranchConditional %10397 %10399 %10400
      %10400 = OpLabel
      %10401 = OpFOrdGreaterThan %bool %10388 %float_0
               OpSelectionMerge %10402 None
               OpBranchConditional %10401 %10403 %10402
      %10403 = OpLabel
      %10404 = OpFSub %v3float %638 %580
      %10405 = OpExtInst %v3float %1 FAbs %10404
      %10406 = OpCompositeExtract %float %10405 0
      %10407 = OpCompositeExtract %float %10405 1
      %10408 = OpCompositeExtract %float %10405 2
      %10409 = OpExtInst %float %1 NMax %10407 %10408
      %10410 = OpExtInst %float %1 NMax %10406 %10409
      %10411 = OpFSub %float %10410 %10388
      %10412 = OpExtInst %float %1 FAbs %10411
      %10413 = OpFMul %float %10412 %float_20
      %10414 = OpExtInst %float %1 FClamp %10413 %float_0 %float_1
      %10415 = OpFSub %float %float_1 %10414
      %10416 = OpVectorTimesScalar %v3float %143 %10415
               OpBranch %10402
      %10402 = OpLabel
      %10417 = OpPhi %v3float %105 %10400 %10416 %10403
               OpBranch %10398
      %10399 = OpLabel
      %10418 = OpFMul %v3float %591 %136
      %10419 = OpFMul %v3float %639 %136
      %10420 = OpCompositeExtract %float %10418 0
      %10421 = OpCompositeExtract %float %10419 0
      %10422 = OpCompositeExtract %float %10418 1
      %10423 = OpCompositeExtract %float %10419 1
      %10424 = OpFAdd %float %10420 %10422
      %10425 = OpFAdd %float %10421 %10423
      %10426 = OpCompositeExtract %float %10418 2
      %10427 = OpCompositeExtract %float %10419 2
      %10428 = OpFAdd %float %10424 %10426
      %10429 = OpFAdd %float %10425 %10427
      %10430 = OpFMul %float %10428 %float_4194_3042
      %10431 = OpExtInst %float %1 Fract %10430
      %10432 = OpExtInst %float %1 Fma %10429 %float_0_00200000009 %10431
      %10433 = OpExtInst %float %1 Fract %10432
      %10434 = OpCompositeConstruct %v3float %10433 %10433 %10433
      %10435 = OpFOrdGreaterThan %v3bool %10434 %140
      %10436 = OpSelect %v3float %10435 %130 %105
      %10437 = OpExtInst %v3float %1 FMix %137 %138 %10436
               OpBranch %10398
      %10398 = OpLabel
      %10438 = OpPhi %v3float %105 %10402 %10437 %10399
      %10439 = OpPhi %v3float %10417 %10402 %10437 %10399
               OpBranch %10363
      %10363 = OpLabel
      %10440 = OpPhi %v3float %105 %9841 %10438 %10398
      %10441 = OpPhi %v3float %105 %9841 %10439 %10398
      %10442 = OpFAdd %v3float %10359 %8635
      %10443 = OpFAdd %v3float %10442 %10441
      %10444 = OpVectorShuffle %v3float %615 %615 0 1 2
      %10445 = OpVectorTimesScalar %v3float %10444 %float_3_14159274
      %10446 = OpVectorTimesScalar %v3float %8619 %float_3_14159274
      %10447 = OpDot %float %8444 %656
      %10448 = OpExtInst %float %1 NMax %float_0 %10447
      %10449 = OpLoad %type_2d_image %OpaqueBasePass_PreIntegratedGFTexture
      %10450 = OpLoad %type_sampler %View_SharedBilinearClampedSampler
      %10451 = OpCompositeConstruct %v2float %10448 %8421
      %10452 = OpSampledImage %type_sampled_image %10449 %10450
      %10453 = OpImageSampleExplicitLod %v4float %10452 %10451 Lod %float_0
      %10454 = OpCompositeExtract %float %10453 0
      %10455 = OpVectorTimesScalar %v3float %8554 %10454
      %10456 = OpCompositeExtract %float %8554 1
      %10457 = OpFMul %float %float_50 %10456
      %10458 = OpExtInst %float %1 FClamp %10457 %float_0 %float_1
      %10459 = OpCompositeExtract %float %10453 1
      %10460 = OpFMul %float %10458 %10459
      %10461 = OpCompositeConstruct %v3float %10460 %10460 %10460
      %10462 = OpFAdd %v3float %10455 %10461
      %10463 = OpLoad %type_2d_image %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture
      %10464 = OpAccessChain %_ptr_Uniform_v2float %SingleLayerWater %uint_2
      %10465 = OpLoad %v2float %10464
      %10466 = OpLoad %type_2d_image %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture
      %10467 = OpAccessChain %_ptr_Uniform_v4float %SingleLayerWater %uint_0
      %10468 = OpLoad %v4float %10467
      %10469 = OpVectorShuffle %v2float %10468 %10468 0 1
      %10470 = OpVectorShuffle %v2float %10468 %10468 2 3
      %10471 = OpAccessChain %_ptr_Uniform_v4float %SingleLayerWater %uint_1
      %10472 = OpLoad %v4float %10471
      %10473 = OpFOrdGreaterThan %bool %8445 %float_0
               OpSelectionMerge %10474 None
               OpBranchConditional %10473 %10475 %10474
      %10475 = OpLabel
      %10476 = OpExtInst %float %1 NMin %8534 %float_0_99000001
      %10477 = OpExtInst %float %1 Sqrt %10476
      %10478 = OpFSub %float %float_1 %10477
      %10479 = OpFDiv %float %float_2 %10478
      %10480 = OpFSub %float %10479 %float_1
      %10481 = OpExtInst %v2float %1 FClamp %647 %10469 %10470
      %10482 = OpSampledImage %type_sampled_image %10463 %10450
      %10483 = OpImageSampleExplicitLod %v4float %10482 %10481 Lod %float_0
      %10484 = OpCompositeExtract %float %10483 0
      %10485 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_0
      %10486 = OpLoad %float %10485
      %10487 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_1
      %10488 = OpLoad %float %10487
      %10489 = OpExtInst %float %1 Fma %10484 %10486 %10488
      %10490 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_2
      %10491 = OpLoad %float %10490
      %10492 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_3
      %10493 = OpLoad %float %10492
      %10494 = OpFNegate %float %10493
      %10495 = OpExtInst %float %1 Fma %10484 %10491 %10494
      %10496 = OpFDiv %float %float_1 %10495
      %10497 = OpFAdd %float %10489 %10496
      %10498 = OpCompositeExtract %v4float %585 0
      %10499 = OpVectorShuffle %v3float %10498 %10498 0 1 2
      %10500 = OpCompositeExtract %v4float %585 1
      %10501 = OpVectorShuffle %v3float %10500 %10500 0 1 2
      %10502 = OpCompositeExtract %v4float %585 2
      %10503 = OpVectorShuffle %v3float %10502 %10502 0 1 2
      %10504 = OpCompositeConstruct %mat3v3float %10499 %10501 %10503
      %10505 = OpMatrixTimesVector %v3float %10504 %8444
      %10506 = OpExtInst %v3float %1 Normalize %10505
      %10507 = OpVectorShuffle %v2float %10506 %10506 0 1
      %10508 = OpFSub %float %8371 %float_1
      %10509 = OpVectorTimesScalar %v2float %10507 %10508
      %10510 = OpVectorShuffle %v2float %603 %603 0 1
      %10511 = OpFMul %v2float %10509 %10510
      %10512 = OpVectorShuffle %v2float %605 %605 2 3
      %10513 = OpFMul %v2float %10511 %10512
      %10514 = OpCompositeExtract %float %10472 0
      %10515 = OpCompositeExtract %float %10472 1
      %10516 = OpFMul %float %10515 %10514
      %10517 = OpCompositeConstruct %v2float %10514 %10516
      %10518 = OpVectorShuffle %v2float %10472 %10472 2 3
      %10519 = OpFMul %v2float %10518 %312
      %10520 = OpFMul %v2float %10519 %10517
      %10521 = OpFMul %v2float %10513 %10520
      %10522 = OpFNegate %float %8373
      %10523 = OpFMul %float %8373 %float_n0_5
      %10524 = OpExtInst %float %1 FAbs %10523
      %10525 = OpExtInst %float %1 FClamp %10524 %float_0 %float_50
      %10526 = OpExtInst %float %1 NMax %float_1 %10525
      %10527 = OpFDiv %float %float_1 %10526
      %10528 = OpFSub %float %10497 %642
      %10529 = OpExtInst %float %1 Fma %10528 %10527 %10522
      %10530 = OpExtInst %float %1 FClamp %10529 %float_0 %float_1
      %10531 = OpVectorTimesScalar %v2float %10521 %10530
      %10532 = OpVectorTimesScalar %v2float %10531 %float_4
      %10533 = OpFMul %float %10528 %float_0_0333333351
      %10534 = OpExtInst %float %1 FClamp %10533 %float_0 %float_1
      %10535 = OpVectorTimesScalar %v2float %10532 %10534
      %10536 = OpFAdd %v2float %10481 %10535
      %10537 = OpExtInst %v2float %1 FClamp %10536 %10469 %10470
      %10538 = OpSampledImage %type_sampled_image %10463 %10450
      %10539 = OpImageGather %v4float %10538 %10537 %int_0 None
      %10540 = OpCompositeExtract %float %10539 0
      %10541 = OpExtInst %float %1 Fma %10540 %10486 %10488
      %10542 = OpExtInst %float %1 Fma %10540 %10491 %10494
      %10543 = OpFDiv %float %float_1 %10542
      %10544 = OpFAdd %float %10541 %10543
      %10545 = OpCompositeExtract %float %10539 1
      %10546 = OpExtInst %float %1 Fma %10545 %10486 %10488
      %10547 = OpExtInst %float %1 Fma %10545 %10491 %10494
      %10548 = OpFDiv %float %float_1 %10547
      %10549 = OpFAdd %float %10546 %10548
      %10550 = OpCompositeExtract %float %10539 2
      %10551 = OpExtInst %float %1 Fma %10550 %10486 %10488
      %10552 = OpExtInst %float %1 Fma %10550 %10491 %10494
      %10553 = OpFDiv %float %float_1 %10552
      %10554 = OpFAdd %float %10551 %10553
      %10555 = OpCompositeExtract %float %10539 3
      %10556 = OpExtInst %float %1 Fma %10555 %10486 %10488
      %10557 = OpExtInst %float %1 Fma %10555 %10491 %10494
      %10558 = OpFDiv %float %float_1 %10557
      %10559 = OpFAdd %float %10556 %10558
      %10560 = OpCompositeConstruct %v4float %10544 %10549 %10554 %10559
      %10561 = OpCompositeConstruct %v4float %642 %642 %642 %642
      %10562 = OpFOrdLessThan %v4bool %10560 %10561
      %10563 = OpAny %bool %10562
               OpSelectionMerge %10564 None
               OpBranchConditional %10563 %10565 %10566
      %10566 = OpLabel
      %10567 = OpFMul %v2float %10537 %10465
      %10568 = OpVectorTimesScalar %v2float %10567 %float_1
      %10569 = OpFSub %v2float %10568 %152
      %10570 = OpExtInst %v2float %1 Fract %10569
      %10571 = OpVectorShuffle %v4float %10539 %10539 3 2 0 1
      %10572 = OpCompositeExtract %float %10570 0
      %10573 = OpFSub %float %float_1 %10572
      %10574 = OpCompositeExtract %float %10570 1
      %10575 = OpFSub %float %float_1 %10574
      %10576 = OpFMul %float %10573 %10575
      %10577 = OpCompositeInsert %v4float %10576 %539 0
      %10578 = OpFMul %float %10572 %10575
      %10579 = OpCompositeInsert %v4float %10578 %10577 1
      %10580 = OpFMul %float %10573 %10574
      %10581 = OpCompositeInsert %v4float %10580 %10579 2
      %10582 = OpFMul %float %10572 %10574
      %10583 = OpCompositeInsert %v4float %10582 %10581 3
      %10584 = OpDot %float %10571 %10583
      %10585 = OpExtInst %float %1 Fma %10584 %10486 %10488
      %10586 = OpExtInst %float %1 Fma %10584 %10491 %10494
      %10587 = OpFDiv %float %float_1 %10586
      %10588 = OpFAdd %float %10585 %10587
               OpBranch %10564
      %10565 = OpLabel
               OpBranch %10564
      %10564 = OpLabel
      %10589 = OpPhi %float %10588 %10566 %10497 %10565
      %10590 = OpPhi %float %10584 %10566 %10484 %10565
      %10591 = OpCompositeConstruct %v2bool %10563 %10563
      %10592 = OpSelect %v2float %10591 %10481 %10537
      %10593 = OpExtInst %float %1 NMax %float_9_99999996en13 %10590
      %10594 = OpFSub %float %10589 %642
      %10595 = OpExtInst %float %1 NMax %float_0 %10594
      %10596 = OpVectorShuffle %v3float %8430 %8430 0 1 2
      %10597 = OpVectorShuffle %v3float %8429 %459 0 1 2
      %10598 = OpFMul %v3float %10596 %10597
      %10599 = OpVectorShuffle %v3float %8432 %459 0 1 2
      %10600 = OpFMul %float %10595 %float_0_0199999996
      %10601 = OpExtInst %float %1 FClamp %10600 %float_0 %float_1
      %10602 = OpCompositeConstruct %v3float %10601 %10601 %10601
      %10603 = OpExtInst %v3float %1 FMix %130 %10599 %10602
      %10604 = OpExtInst %v3float %1 NMax %10597 %192
      %10605 = OpFDiv %float %float_1 %10480
               OpSelectionMerge %10606 None
               OpSwitch %uint_0 %10607
      %10607 = OpLabel
      %10608 = OpDot %float %656 %8444
      %10609 = OpFMul %float %10605 %10605
      %10610 = OpFNegate %float %10608
      %10611 = OpExtInst %float %1 Fma %10610 %10608 %float_1
      %10612 = OpFNegate %float %10609
      %10613 = OpExtInst %float %1 Fma %10612 %10611 %float_1
      %10614 = OpFOrdLessThan %bool %10613 %float_0
               OpSelectionMerge %10615 None
               OpBranchConditional %10614 %10616 %10615
      %10616 = OpLabel
      %10617 = OpFNegate %v3float %656
      %10618 = OpExtInst %v3float %1 Reflect %10617 %8444
               OpBranch %10606
      %10615 = OpLabel
      %10619 = OpFOrdGreaterThanEqual %bool %10608 %float_0
      %10620 = OpSelect %float %10619 %float_1 %float_n1
      %10621 = OpFNegate %float %10620
      %10622 = OpExtInst %float %1 Sqrt %10613
      %10623 = OpFMul %float %10621 %10622
      %10624 = OpExtInst %float %1 Fma %10605 %10608 %10623
      %10625 = OpVectorTimesScalar %v3float %8444 %10624
      %10626 = OpVectorTimesScalar %v3float %656 %10605
      %10627 = OpFSub %v3float %10625 %10626
               OpBranch %10606
      %10606 = OpLabel
      %10628 = OpPhi %v3float %10618 %10616 %10627 %10615
      %10629 = OpPhi %bool %false %10616 %true %10615
               OpSelectionMerge %10630 None
               OpBranchConditional %10629 %10631 %10630
      %10631 = OpLabel
      %10632 = OpFNegate %v3float %617
      %10633 = OpDot %float %10632 %10628
      %10634 = OpExtInst %float %1 Fma %float_1_54999995 %float_0 %float_n0
      %10635 = OpExtInst %float %1 Fma %10634 %10633 %float_1
      %10636 = OpFNegate %float %10634
      %10637 = OpExtInst %float %1 Fma %10636 %10634 %float_1
      %10638 = OpFMul %float %float_12_566371 %10635
      %10639 = OpFMul %float %10638 %10635
      %10640 = OpFDiv %float %10637 %10639
               OpBranch %10630
      %10630 = OpLabel
      %10641 = OpPhi %float %float_0 %10606 %10640 %10631
      %10642 = OpCompositeConstruct %v4float %630 %631 %10593 %float_1
      %10643 = OpMatrixTimesVector %v4float %589 %10642
      %10644 = OpVectorShuffle %v3float %10643 %10643 0 1 2
      %10645 = OpCompositeExtract %float %10643 3
      %10646 = OpCompositeConstruct %v3float %10645 %10645 %10645
      %10647 = OpFDiv %v3float %10644 %10646
      %10648 = OpFSub %v3float %10647 %599
      %10649 = OpFSub %v3float %591 %591
      %10650 = OpFSub %v3float %639 %10648
      %10651 = OpVectorTimesScalar %v3float %10649 %float_2097152
      %10652 = OpFAdd %v3float %10651 %10650
      %10653 = OpCompositeExtract %float %10652 2
      %10654 = OpExtInst %float %1 NMax %float_0 %10653
      %10655 = OpFNegate %float %10654
      %10656 = OpVectorTimesScalar %v3float %10597 %10655
      %10657 = OpExtInst %v3float %1 Exp %10656
      %10658 = OpSampledImage %type_sampled_image %10466 %10450
      %10659 = OpImageSampleExplicitLod %v4float %10658 %10592 Lod %float_0
      %10660 = OpVectorShuffle %v3float %10659 %10659 0 1 2
      %10661 = OpVectorTimesScalar %v3float %10657 %607
      %10662 = OpFMul %v3float %10661 %10660
      %10663 = OpVectorTimesScalar %v3float %10445 %10641
      %10664 = OpVectorTimesScalar %v3float %10446 %float_0_0795774683
      %10665 = OpSelect %float %8678 %float_0 %float_1
      %10666 = OpSelect %float %8678 %float_1 %float_0
      %10667 = OpVectorTimesScalar %v3float %10597 %10595
      %10668 = OpFNegate %v3float %10667
      %10669 = OpExtInst %v3float %1 Exp %10668
      %10670 = OpVectorTimesScalar %v3float %10663 %9819
      %10671 = OpVectorTimesScalar %v3float %10670 %10665
      %10672 = OpFAdd %v3float %10664 %10671
      %10673 = OpFSub %v3float %130 %10669
      %10674 = OpFMul %v3float %10598 %10673
      %10675 = OpFDiv %v3float %10674 %10604
      %10676 = OpExtInst %v3float %1 FClamp %10675 %105 %130
      %10677 = OpFMul %v3float %10672 %10676
      %10678 = OpVectorTimesScalar %v3float %10670 %10666
      %10679 = OpFMul %v3float %10678 %10676
      %10680 = OpFSub %v3float %130 %10462
      %10681 = OpVectorShuffle %v3float %130 %10680 3 4 5
      %10682 = OpFMul %v3float %10679 %10681
      %10683 = OpVectorTimesScalar %v3float %10682 %8445
      %10684 = OpFAdd %v3float %9818 %10683
      %10685 = OpVectorShuffle %v3float %537 %130 3 4 5
      %10686 = OpFMul %v3float %10669 %10685
      %10687 = OpFMul %v3float %10662 %10603
      %10688 = OpFMul %v3float %10686 %10687
      %10689 = OpExtInst %v3float %1 Fma %10677 %10681 %10688
      %10690 = OpVectorTimesScalar %v3float %10689 %8445
               OpBranch %10474
      %10474 = OpLabel
      %10691 = OpPhi %v3float %9818 %10363 %10684 %10630
      %10692 = OpPhi %v3float %105 %10363 %10690 %10630
      %10693 = OpFAdd %v3float %10443 %10692
      %10694 = OpExtInst %v3float %1 Normalize %8443
      %10695 = OpConvertFToU %v2uint %620
      %10696 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %10697 = OpExtInst %v3float %1 FClamp %8433 %105 %130
      %10698 = OpExtInst %v3float %1 Fma %10697 %8407 %8408
      %10699 = OpCompositeInsert %v4float %float_0 %8424 0
      %10700 = OpExtInst %float %1 FClamp %8413 %float_0 %float_1
      %10701 = OpExtInst %float %1 Fma %10700 %8411 %8412
      %10702 = OpCompositeInsert %v4float %10701 %10699 1
      %10703 = OpExtInst %float %1 Fma %8421 %8415 %8416
      %10704 = OpExtInst %float %1 NMax %8419 %10703
      %10705 = OpExtInst %float %1 FClamp %10704 %float_0 %float_1
      %10706 = OpCompositeInsert %v4float %10705 %10702 2
      %10707 = OpExtInst %float %1 FClamp %8423 %float_0 %float_1
      %10708 = OpCompositeInsert %v4float %10707 %10706 3
      %10709 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
      %10710 = OpLoad %type_sampler %View_ShadingEnergySampler
      %10711 = OpAccessChain %_ptr_Uniform_uint %View %uint_40
      %10712 = OpLoad %uint %10711
      %10713 = OpINotEqual %bool %10712 %uint_0
      %10714 = OpCompositeConstruct %v3bool %10713 %10713 %10713
      %10715 = OpAny %bool %554
               OpSelectionMerge %10716 None
               OpBranchConditional %10715 %10717 %10716
      %10717 = OpLabel
               OpSelectionMerge %10718 None
               OpSwitch %uint_4 %10718 0 %10719 3 %10720 5 %10721 4 %10722
      %10722 = OpLabel
      %10723 = OpExtInst %v3float %1 Fma %105 %130 %105
      %10724 = OpExtInst %float %1 Fma %float_1 %10705 %461
               OpSelectionMerge %10725 None
               OpSwitch %uint_0 %10726
      %10726 = OpLabel
               OpSelectionMerge %10727 None
               OpSwitch %uint_4 %10727 0 %10728 3 %10729 5 %10730 4 %10731
      %10731 = OpLabel
      %10732 = OpVectorShuffle %v3float %10698 %459 0 1 2
               OpBranch %10727
      %10730 = OpLabel
      %10733 = OpVectorShuffle %v3float %10698 %459 0 1 2
               OpBranch %10727
      %10729 = OpLabel
      %10734 = OpVectorShuffle %v3float %10698 %459 0 1 2
               OpBranch %10727
      %10728 = OpLabel
      %10735 = OpVectorShuffle %v3float %10698 %459 0 1 2
      %10736 = OpVectorShuffle %v3float %10708 %10708 0 1 2
      %10737 = OpExtInst %float %1 NMax %10701 %10705
      %10738 = OpExtInst %float %1 NMax %float_0 %10737
      %10739 = OpFSub %float %10738 %float_0_0799999982
      %10740 = OpFMul %float %10739 %float_3_125
      %10741 = OpExtInst %float %1 FClamp %10740 %float_0 %float_1
      %10742 = OpCompositeConstruct %v3float %10741 %10741 %10741
      %10743 = OpExtInst %v3float %1 FMix %10735 %10736 %10742
               OpBranch %10727
      %10727 = OpLabel
      %10744 = OpPhi %v3float %457 %10726 %10732 %10731 %10733 %10730 %10734 %10729 %10743 %10728
      %10745 = OpPhi %bool %false %10726 %true %10731 %true %10730 %true %10729 %true %10728
               OpSelectionMerge %10746 None
               OpBranchConditional %10745 %10725 %10746
      %10746 = OpLabel
               OpBranch %10725
      %10725 = OpLabel
      %10747 = OpPhi %v3float %10744 %10727 %105 %10746
      %10748 = OpVectorTimesScalar %v3float %10747 %float_1
      %10749 = OpBitwiseAnd %uint %8533 %uint_4294967288
      %10750 = OpBitwiseOr %uint %10749 %uint_4
               OpBranch %10718
      %10721 = OpLabel
      %10751 = OpBitwiseOr %uint %8533 %uint_0
      %10752 = OpBitwiseAnd %uint %10751 %uint_4294967288
      %10753 = OpBitwiseOr %uint %10752 %uint_6
               OpBranch %10718
      %10720 = OpLabel
      %10754 = OpExtInst %v3float %1 Fma %105 %130 %105
               OpSelectionMerge %10755 None
               OpSwitch %uint_0 %10756
      %10756 = OpLabel
               OpSelectionMerge %10757 None
               OpSwitch %uint_4 %10757 0 %10758 3 %10759 5 %10760 4 %10761
      %10761 = OpLabel
      %10762 = OpVectorShuffle %v3float %10698 %459 0 1 2
               OpBranch %10757
      %10760 = OpLabel
      %10763 = OpVectorShuffle %v3float %10698 %459 0 1 2
               OpBranch %10757
      %10759 = OpLabel
      %10764 = OpVectorShuffle %v3float %10698 %459 0 1 2
               OpBranch %10757
      %10758 = OpLabel
      %10765 = OpVectorShuffle %v3float %10698 %459 0 1 2
      %10766 = OpVectorShuffle %v3float %10708 %10708 0 1 2
      %10767 = OpExtInst %float %1 NMax %10701 %10705
      %10768 = OpExtInst %float %1 NMax %float_0 %10767
      %10769 = OpFSub %float %10768 %float_0_0799999982
      %10770 = OpFMul %float %10769 %float_3_125
      %10771 = OpExtInst %float %1 FClamp %10770 %float_0 %float_1
      %10772 = OpCompositeConstruct %v3float %10771 %10771 %10771
      %10773 = OpExtInst %v3float %1 FMix %10765 %10766 %10772
               OpBranch %10757
      %10757 = OpLabel
      %10774 = OpPhi %v3float %457 %10756 %10762 %10761 %10763 %10760 %10764 %10759 %10773 %10758
      %10775 = OpPhi %bool %false %10756 %true %10761 %true %10760 %true %10759 %true %10758
               OpSelectionMerge %10776 None
               OpBranchConditional %10775 %10755 %10776
      %10776 = OpLabel
               OpBranch %10755
      %10755 = OpLabel
      %10777 = OpPhi %v3float %10774 %10757 %105 %10776
      %10778 = OpVectorTimesScalar %v3float %10777 %float_1
      %10779 = OpBitwiseAnd %uint %8533 %uint_4294967288
      %10780 = OpBitwiseOr %uint %10779 %uint_5
               OpBranch %10718
      %10719 = OpLabel
      %10781 = OpExtInst %v3float %1 Fma %105 %130 %105
      %10782 = OpAll %bool %554
      %10783 = OpLogicalAnd %bool %true %10782
      %10784 = OpLogicalAnd %bool %10783 %true
               OpSelectionMerge %10785 None
               OpSwitch %uint_0 %10786
      %10786 = OpLabel
               OpSelectionMerge %10787 None
               OpSwitch %uint_4 %10787 0 %10788 3 %10789 5 %10790 4 %10791
      %10791 = OpLabel
      %10792 = OpVectorShuffle %v3float %10698 %459 0 1 2
               OpBranch %10787
      %10790 = OpLabel
      %10793 = OpVectorShuffle %v3float %10698 %459 0 1 2
               OpBranch %10787
      %10789 = OpLabel
      %10794 = OpVectorShuffle %v3float %10698 %459 0 1 2
               OpBranch %10787
      %10788 = OpLabel
      %10795 = OpVectorShuffle %v3float %10698 %459 0 1 2
      %10796 = OpVectorShuffle %v3float %10708 %10708 0 1 2
      %10797 = OpExtInst %float %1 NMax %10701 %10705
      %10798 = OpExtInst %float %1 NMax %float_0 %10797
      %10799 = OpFSub %float %10798 %float_0_0799999982
      %10800 = OpFMul %float %10799 %float_3_125
      %10801 = OpExtInst %float %1 FClamp %10800 %float_0 %float_1
      %10802 = OpCompositeConstruct %v3float %10801 %10801 %10801
      %10803 = OpExtInst %v3float %1 FMix %10795 %10796 %10802
               OpBranch %10787
      %10787 = OpLabel
      %10804 = OpPhi %v3float %457 %10786 %10792 %10791 %10793 %10790 %10794 %10789 %10803 %10788
      %10805 = OpPhi %bool %false %10786 %true %10791 %true %10790 %true %10789 %true %10788
               OpSelectionMerge %10806 None
               OpBranchConditional %10805 %10785 %10806
      %10806 = OpLabel
               OpBranch %10785
      %10785 = OpLabel
      %10807 = OpPhi %v3float %10804 %10787 %105 %10806
      %10808 = OpVectorTimesScalar %v3float %10807 %float_1
               OpSelectionMerge %10809 None
               OpBranchConditional %false %10810 %10809
      %10810 = OpLabel
               OpSelectionMerge %10811 None
               OpBranchConditional %false %10812 %10811
      %10812 = OpLabel
      %10813 = OpExtInst %float %1 NMax %float_0_0399999991 %float_0_0399999991
      %10814 = OpExtInst %float %1 NMax %float_0_0399999991 %10813
      %10815 = OpFSub %float %10814 %float_0_0799999982
      %10816 = OpFMul %float %10815 %float_3_125
      %10817 = OpExtInst %float %1 FClamp %10816 %float_0 %float_1
      %10818 = OpExtInst %float %1 FMix %float_0 %float_0_0399999991 %10817
      %10819 = OpCompositeConstruct %v3float %10818 %10818 %10818
               OpBranch %10811
      %10811 = OpLabel
      %10820 = OpPhi %v3float %10808 %10810 %10819 %10812
      %10821 = OpPhi %float %461 %10810 %float_0 %10812
               OpBranch %10809
      %10809 = OpLabel
      %10822 = OpPhi %v3float %10808 %10785 %10820 %10811
      %10823 = OpPhi %float %461 %10785 %10821 %10811
      %10824 = OpBitwiseOr %uint %8533 %uint_0
      %10825 = OpBitwiseOr %uint %10824 %uint_0
               OpBranch %10718
      %10718 = OpLabel
      %10826 = OpPhi %v3float %105 %10717 %10723 %10725 %105 %10721 %10754 %10755 %10781 %10809
      %10827 = OpPhi %uint %458 %10717 %uint_2 %10725 %uint_1 %10721 %uint_1 %10755 %uint_1 %10809
      %10828 = OpPhi %bool %true %10717 %false %10725 %false %10721 %false %10755 %10784 %10809
      %10829 = OpPhi %bool %true %10717 %false %10725 %false %10721 %false %10755 %true %10809
      %10830 = OpPhi %v3float %460 %10717 %10748 %10725 %460 %10721 %10778 %10755 %10822 %10809
      %10831 = OpPhi %float %461 %10717 %10724 %10725 %float_1 %10721 %float_1 %10755 %10823 %10809
      %10832 = OpPhi %float %float_0 %10717 %float_1 %10725 %float_1 %10721 %float_1 %10755 %float_1 %10809
      %10833 = OpPhi %uint %8533 %10717 %10750 %10725 %10753 %10721 %10780 %10755 %10825 %10809
      %10834 = OpCompositeConstruct %_arr_v3float_uint_4 %10694 %460 %460 %460
               OpStore %576 %10834
      %10835 = OpAccessChain %_ptr_Function_v3float %576 %uint_0
      %10836 = OpLoad %v3float %10835
      %10837 = OpVectorTimesScalar %v3float %10836 %float_1
               OpBranch %10716
      %10716 = OpLabel
      %10838 = OpPhi %uint %uint_8192 %10474 %uint_8194 %10718
      %10839 = OpPhi %v3float %105 %10474 %10826 %10718
      %10840 = OpPhi %uint %458 %10474 %10827 %10718
      %10841 = OpPhi %uint %8533 %10474 %10833 %10718
      %10842 = OpPhi %bool %true %10474 %10828 %10718
      %10843 = OpPhi %bool %true %10474 %10829 %10718
      %10844 = OpPhi %v3float %460 %10474 %10830 %10718
      %10845 = OpPhi %float %461 %10474 %10831 %10718
      %10846 = OpPhi %v3float %460 %10474 %10837 %10718
      %10847 = OpPhi %float %float_0 %10474 %10832 %10718
      %10848 = OpSelect %uint %10715 %uint_1 %uint_0
      %10849 = OpFOrdGreaterThan %bool %10847 %float_0
      %10850 = OpCompositeConstruct %v3bool %10849 %10849 %10849
      %10851 = OpExtInst %v3float %1 Normalize %10846
      %10852 = OpSelect %v3float %10850 %10851 %105
      %10853 = OpFDiv %float %10845 %10847
      %10854 = OpSelect %float %10849 %10853 %float_0
      %10855 = OpCompositeConstruct %v3float %10847 %10847 %10847
      %10856 = OpFDiv %v3float %10844 %10855
      %10857 = OpSelect %v3float %10850 %10856 %105
               OpSelectionMerge %10858 None
               OpBranchConditional %10843 %10859 %10858
      %10859 = OpLabel
      %10860 = OpIEqual %bool %10848 %uint_1
      %10861 = OpLogicalAnd %bool %10842 %10860
      %10862 = OpSelect %uint %10861 %uint_2 %uint_3
      %10863 = OpSelect %uint %10861 %uint_1 %10862
      %10864 = OpBitwiseAnd %uint %10841 %uint_4294967288
      %10865 = OpBitwiseAnd %uint %10863 %uint_7
      %10866 = OpBitwiseOr %uint %10864 %10865
               OpSelectionMerge %10867 None
               OpBranchConditional %10861 %10868 %10867
      %10868 = OpLabel
      %10869 = OpShiftRightLogical %uint %10838 %uint_6
      %10870 = OpBitwiseAnd %uint %10869 %uint_1
      %10871 = OpINotEqual %bool %10870 %uint_0
               OpSelectionMerge %10872 None
               OpBranchConditional %10871 %10873 %10872
      %10873 = OpLabel
               OpBranch %10872
      %10872 = OpLabel
      %10874 = OpPhi %uint %uint_0 %10868 %uint_1 %10873
      %10875 = OpShiftRightLogical %uint %10838 %uint_9
      %10876 = OpBitwiseAnd %uint %10875 %uint_1
      %10877 = OpINotEqual %bool %10876 %uint_0
      %10878 = OpLogicalAnd %bool %10877 %true
               OpSelectionMerge %10879 None
               OpBranchConditional %10878 %10880 %10879
      %10880 = OpLabel
      %10881 = OpBitwiseOr %uint %10874 %uint_4
               OpBranch %10879
      %10879 = OpLabel
      %10882 = OpPhi %uint %10874 %10872 %10881 %10880
      %10883 = OpShiftRightLogical %uint %10838 %uint_10
      %10884 = OpBitwiseAnd %uint %10883 %uint_1
      %10885 = OpINotEqual %bool %10884 %uint_0
               OpSelectionMerge %10886 None
               OpBranchConditional %10885 %10887 %10886
      %10887 = OpLabel
      %10888 = OpBitwiseOr %uint %10882 %uint_8
               OpBranch %10886
      %10886 = OpLabel
      %10889 = OpPhi %uint %10882 %10879 %10888 %10887
      %10890 = OpShiftRightLogical %uint %10838 %uint_2
      %10891 = OpBitwiseAnd %uint %10890 %uint_7
      %10892 = OpIEqual %bool %10891 %uint_4
               OpSelectionMerge %10893 None
               OpBranchConditional %10892 %10894 %10893
      %10894 = OpLabel
      %10895 = OpBitwiseOr %uint %10889 %uint_16
               OpBranch %10893
      %10893 = OpLabel
      %10896 = OpPhi %uint %10889 %10886 %10895 %10894
      %10897 = OpIEqual %bool %10891 %uint_1
               OpSelectionMerge %10898 None
               OpBranchConditional %10897 %10899 %10898
      %10899 = OpLabel
      %10900 = OpBitwiseOr %uint %10896 %uint_32
               OpBranch %10898
      %10898 = OpLabel
      %10901 = OpPhi %uint %10896 %10893 %10900 %10899
      %10902 = OpIEqual %bool %10891 %uint_3
               OpSelectionMerge %10903 None
               OpBranchConditional %10902 %10904 %10903
      %10904 = OpLabel
      %10905 = OpBitwiseOr %uint %10901 %uint_64
               OpBranch %10903
      %10903 = OpLabel
      %10906 = OpPhi %uint %10901 %10898 %10905 %10904
      %10907 = OpBitwiseAnd %uint %10906 %uint_2
      %10908 = OpIEqual %bool %10907 %uint_2
      %10909 = OpIEqual %bool %10907 %uint_3
      %10910 = OpLogicalOr %bool %10908 %10909
               OpSelectionMerge %10911 None
               OpBranchConditional %10910 %10912 %10913
      %10913 = OpLabel
      %10914 = OpBitwiseAnd %uint %10906 %uint_4
      %10915 = OpIEqual %bool %10914 %uint_4
               OpSelectionMerge %10916 None
               OpBranchConditional %10915 %10917 %10918
      %10918 = OpLabel
      %10919 = OpBitwiseAnd %uint %10906 %uint_40
      %10920 = OpIEqual %bool %10919 %uint_40
               OpSelectionMerge %10921 None
               OpBranchConditional %10920 %10922 %10923
      %10923 = OpLabel
      %10924 = OpBitwiseAnd %uint %10906 %uint_32
      %10925 = OpIEqual %bool %10924 %uint_32
               OpSelectionMerge %10926 None
               OpBranchConditional %10925 %10927 %10928
      %10928 = OpLabel
      %10929 = OpBitwiseAnd %uint %10906 %uint_72
      %10930 = OpIEqual %bool %10929 %uint_64
      %10931 = OpSelect %uint %10930 %uint_4 %uint_0
      %10932 = OpSelect %uint %10930 %uint_0 %458
               OpBranch %10926
      %10927 = OpLabel
               OpBranch %10926
      %10926 = OpLabel
      %10933 = OpPhi %uint %10931 %10928 %uint_3 %10927
      %10934 = OpPhi %uint %10932 %10928 %uint_0 %10927
               OpBranch %10921
      %10922 = OpLabel
               OpBranch %10921
      %10921 = OpLabel
      %10935 = OpPhi %uint %10933 %10926 %uint_5 %10922
      %10936 = OpPhi %uint %10934 %10926 %uint_0 %10922
               OpBranch %10916
      %10917 = OpLabel
               OpBranch %10916
      %10916 = OpLabel
      %10937 = OpPhi %uint %10935 %10921 %uint_2 %10917
      %10938 = OpPhi %uint %10936 %10921 %458 %10917
               OpBranch %10911
      %10912 = OpLabel
               OpBranch %10911
      %10911 = OpLabel
      %10939 = OpPhi %uint %10937 %10916 %uint_1 %10912
      %10940 = OpPhi %uint %10938 %10916 %458 %10912
               OpBranch %10867
      %10867 = OpLabel
      %10941 = OpPhi %uint %uint_0 %10859 %10939 %10911
      %10942 = OpPhi %uint %458 %10859 %10940 %10911
               OpBranch %10858
      %10858 = OpLabel
      %10943 = OpPhi %uint %uint_0 %10716 %10941 %10867
      %10944 = OpPhi %uint %458 %10716 %10942 %10867
      %10945 = OpPhi %uint %10841 %10716 %10866 %10867
               OpSelectionMerge %10946 DontFlatten
               OpBranchConditional %10715 %10947 %10946
      %10947 = OpLabel
      %10948 = OpCompositeConstruct %_arr_v3float_uint_4 %10694 %460 %460 %460
               OpStore %577 %10948
      %10949 = OpShiftRightLogical %uint %10838 %uint_14
      %10950 = OpBitwiseAnd %uint %10949 %uint_3
      %10951 = OpAccessChain %_ptr_Function_v3float %577 %10950
      %10952 = OpLoad %v3float %10951
      %10953 = OpDot %float %10952 %656
      %10954 = OpShiftRightLogical %uint %10838 %uint_11
      %10955 = OpBitwiseAnd %uint %10954 %uint_7
               OpSelectionMerge %10956 None
               OpSwitch %10955 %10956 0 %10957 3 %10958 5 %10959
      %10959 = OpLabel
      %10960 = OpVectorShuffle %v3float %10698 %459 0 1 2
      %10961 = OpVectorTimesScalar %v3float %10960 %float_1
               OpBranch %10956
      %10958 = OpLabel
      %10962 = OpVectorShuffle %v3float %10698 %459 0 1 2
      %10963 = OpDot %float %656 %10952
      %10964 = OpVectorTimesScalar %v3float %10952 %10963
      %10965 = OpFSub %v3float %656 %10964
      %10966 = OpExtInst %v3float %1 Normalize %10965
      %10967 = OpExtInst %float %1 NMin %float_0 %float_1
      %10968 = OpDot %float %656 %10966
      %10969 = OpDot %float %10952 %10966
      %10970 = OpExtInst %float %1 FClamp %10969 %float_n1 %float_1
      %10971 = OpExtInst %float %1 FClamp %10953 %float_n1 %float_1
      %10972 = OpExtInst %float %1 FAbs %10971
      %10973 = OpExtInst %float %1 Fma %float_n0_156582996 %10972 %float_1_57079637
      %10974 = OpFSub %float %float_1 %10972
      %10975 = OpExtInst %float %1 Sqrt %10974
      %10976 = OpFMul %float %10973 %10975
      %10977 = OpFOrdGreaterThanEqual %bool %10971 %float_0
      %10978 = OpFNegate %float %10973
      %10979 = OpExtInst %float %1 Fma %10978 %10975 %float_3_14159274
      %10980 = OpSelect %float %10977 %10976 %10979
      %10981 = OpFSub %float %float_1_57079637 %10980
      %10982 = OpExtInst %float %1 FAbs %10970
      %10983 = OpExtInst %float %1 Fma %float_n0_156582996 %10982 %float_1_57079637
      %10984 = OpFSub %float %float_1 %10982
      %10985 = OpExtInst %float %1 Sqrt %10984
      %10986 = OpFMul %float %10983 %10985
      %10987 = OpFOrdGreaterThanEqual %bool %10970 %float_0
      %10988 = OpFNegate %float %10983
      %10989 = OpExtInst %float %1 Fma %10988 %10985 %float_3_14159274
      %10990 = OpSelect %float %10987 %10986 %10989
      %10991 = OpFSub %float %float_1_57079637 %10990
      %10992 = OpFSub %float %10981 %10991
      %10993 = OpExtInst %float %1 FAbs %10992
      %10994 = OpFMul %float %float_0_5 %10993
      %10995 = OpExtInst %float %1 Cos %10994
      %10996 = OpVectorTimesScalar %v3float %10952 %10970
      %10997 = OpFSub %v3float %10966 %10996
      %10998 = OpVectorTimesScalar %v3float %10952 %10971
      %10999 = OpFSub %v3float %656 %10998
      %11000 = OpDot %float %10997 %10999
      %11001 = OpDot %float %10997 %10997
      %11002 = OpDot %float %10999 %10999
      %11003 = OpExtInst %float %1 Fma %11001 %11002 %float_9_99999975en05
      %11004 = OpExtInst %float %1 InverseSqrt %11003
      %11005 = OpFMul %float %11000 %11004
      %11006 = OpExtInst %float %1 Fma %float_0_5 %11005 %float_0_5
      %11007 = OpExtInst %float %1 FClamp %11006 %float_0 %float_1
      %11008 = OpExtInst %float %1 Sqrt %11007
      %11009 = OpFDiv %float %float_1_19000006 %10995
      %11010 = OpExtInst %float %1 Fma %float_0_360000014 %10995 %11009
      %11011 = OpExtInst %float %1 Fma %float_0_00392156886 %float_0_00392156886 %float_0_200000003
      %11012 = OpExtInst %float %1 Fma %float_1_53787023en05 %float_0_5 %float_0_200000003
      %11013 = OpExtInst %float %1 Fma %float_1_53787023en05 %float_2 %float_0_200000003
      %11014 = OpFMul %float %float_0_997551024 %11008
      %11015 = OpFNegate %float %10971
      %11016 = OpExtInst %float %1 Fma %11015 %10971 %float_1
      %11017 = OpExtInst %float %1 Sqrt %11016
      %11018 = OpFMul %float %float_n0_0699428469 %10971
      %11019 = OpExtInst %float %1 Fma %11014 %11017 %11018
      %11020 = OpFMul %float %float_1_41421354 %11008
      %11021 = OpFMul %float %11011 %11020
      %11022 = OpFAdd %float %10970 %10971
      %11023 = OpExtInst %float %1 Fma %float_0_139885694 %11019 %11022
      %11024 = OpFMul %float %11023 %11023
      %11025 = OpFMul %float %float_n0_5 %11024
      %11026 = OpFMul %float %11021 %11021
      %11027 = OpFDiv %float %11025 %11026
      %11028 = OpExtInst %float %1 Exp %11027
      %11029 = OpFMul %float %float_2_50662827 %11021
      %11030 = OpFDiv %float %11028 %11029
      %11031 = OpFMul %float %float_0_25 %11008
      %11032 = OpExtInst %float %1 Fma %float_0_5 %10968 %float_0_5
      %11033 = OpExtInst %float %1 FClamp %11032 %float_0 %float_1
      %11034 = OpExtInst %float %1 Sqrt %11033
      %11035 = OpFSub %float %float_1 %11034
      %11036 = OpFMul %float %11035 %11035
      %11037 = OpFMul %float %11036 %11036
      %11038 = OpFMul %float %11037 %11035
      %11039 = OpExtInst %float %1 Fma %float_0_953479409 %11038 %float_0_0465205647
      %11040 = OpFMul %float %11030 %11031
      %11041 = OpFMul %float %11040 %11039
      %11042 = OpFMul %float %10701 %float_2
      %11043 = OpFMul %float %11041 %11042
      %11044 = OpFNegate %float %10968
      %11045 = OpExtInst %float %1 FClamp %11044 %float_0 %float_1
      %11046 = OpExtInst %float %1 FMix %float_1 %10967 %11045
      %11047 = OpFMul %float %11043 %11046
      %11048 = OpCompositeConstruct %v3float %11047 %11047 %11047
      %11049 = OpFSub %float %11022 %float_0_0350000001
      %11050 = OpFMul %float %11049 %11049
      %11051 = OpFMul %float %float_n0_5 %11050
      %11052 = OpFMul %float %11012 %11012
      %11053 = OpFDiv %float %11051 %11052
      %11054 = OpExtInst %float %1 Exp %11053
      %11055 = OpFMul %float %float_2_50662827 %11012
      %11056 = OpFDiv %float %11054 %11055
      %11057 = OpFDiv %float %float_1 %11010
      %11058 = OpExtInst %float %1 Fma %float_n0_800000012 %11005 %float_0_600000024
      %11059 = OpExtInst %float %1 Fma %11057 %11058 %float_1
      %11060 = OpFMul %float %11008 %11059
      %11061 = OpFNegate %float %11060
      %11062 = OpExtInst %float %1 Fma %11061 %11060 %float_1
      %11063 = OpExtInst %float %1 FClamp %11062 %float_0 %float_1
      %11064 = OpExtInst %float %1 Sqrt %11063
      %11065 = OpFNegate %float %10995
      %11066 = OpExtInst %float %1 Fma %11065 %11064 %float_1
      %11067 = OpFMul %float %11066 %11066
      %11068 = OpFMul %float %11067 %11067
      %11069 = OpFMul %float %11068 %11066
      %11070 = OpExtInst %float %1 Fma %float_0_953479409 %11069 %float_0_0465205647
      %11071 = OpFSub %float %float_1 %11070
      %11072 = OpFMul %float %11071 %11071
      %11073 = OpExtInst %v3float %1 FAbs %10962
      %11074 = OpFMul %float %11060 %11057
      %11075 = OpFNegate %float %11074
      %11076 = OpExtInst %float %1 Fma %11075 %11074 %float_1
      %11077 = OpExtInst %float %1 Sqrt %11076
      %11078 = OpFMul %float %float_0_5 %11077
      %11079 = OpFDiv %float %11078 %10995
      %11080 = OpCompositeConstruct %v3float %11079 %11079 %11079
      %11081 = OpExtInst %v3float %1 Pow %11073 %11080
      %11082 = OpExtInst %float %1 Fma %float_n3_6500001 %11005 %float_n3_98000002
      %11083 = OpExtInst %float %1 Exp %11082
      %11084 = OpFMul %float %11056 %11083
      %11085 = OpFMul %float %11084 %11072
      %11086 = OpVectorTimesScalar %v3float %11081 %11085
      %11087 = OpVectorTimesScalar %v3float %11086 %10967
      %11088 = OpFAdd %v3float %11048 %11087
      %11089 = OpFSub %float %11022 %float_0_140000001
      %11090 = OpFMul %float %11089 %11089
      %11091 = OpFMul %float %float_n0_5 %11090
      %11092 = OpFMul %float %11013 %11013
      %11093 = OpFDiv %float %11091 %11092
      %11094 = OpExtInst %float %1 Exp %11093
      %11095 = OpFMul %float %float_2_50662827 %11013
      %11096 = OpFDiv %float %11094 %11095
      %11097 = OpExtInst %float %1 Fma %11065 %float_0_5 %float_1
      %11098 = OpFMul %float %11097 %11097
      %11099 = OpFMul %float %11098 %11098
      %11100 = OpFMul %float %11099 %11097
      %11101 = OpExtInst %float %1 Fma %float_0_953479409 %11100 %float_0_0465205647
      %11102 = OpFSub %float %float_1 %11101
      %11103 = OpFMul %float %11102 %11102
      %11104 = OpFMul %float %11103 %11101
      %11105 = OpFDiv %float %float_0_800000012 %10995
      %11106 = OpCompositeConstruct %v3float %11105 %11105 %11105
      %11107 = OpExtInst %v3float %1 Pow %11073 %11106
      %11108 = OpExtInst %float %1 Fma %float_17 %11005 %float_n16_7800007
      %11109 = OpExtInst %float %1 Exp %11108
      %11110 = OpFMul %float %11096 %11109
      %11111 = OpFMul %float %11110 %11104
      %11112 = OpVectorTimesScalar %v3float %11107 %11111
      %11113 = OpFAdd %v3float %11088 %11112
      %11114 = OpVectorTimesScalar %v3float %11113 %float_1
      %11115 = OpVectorShuffle %v3float %537 %130 3 4 5
      %11116 = OpExtInst %v3float %1 Fma %460 %11115 %11114
      %11117 = OpFNegate %v3float %11116
      %11118 = OpExtInst %v3float %1 NMin %11117 %105
      %11119 = OpFNegate %v3float %11118
      %11120 = OpVectorTimesScalar %v3float %11119 %float_6_28318548
      %11121 = OpExtInst %v3float %1 NMin %130 %11120
               OpBranch %10956
      %10957 = OpLabel
      %11122 = OpVectorShuffle %v3float %10698 %459 0 1 2
      %11123 = OpVectorShuffle %v3float %10708 %10708 0 1 2
      %11124 = OpCompositeConstruct %v2float %10953 %float_0_00100000005
      %11125 = OpSampledImage %type_sampled_image %10709 %10710
      %11126 = OpImageSampleExplicitLod %v4float %11125 %11124 Lod %float_0
      %11127 = OpCompositeExtract %float %11126 0
      %11128 = OpFSub %float %float_1 %11127
      %11129 = OpFDiv %float %11128 %11127
      %11130 = OpVectorTimesScalar %v3float %11123 %11129
      %11131 = OpFAdd %v3float %130 %11130
      %11132 = OpSelect %v3float %10714 %11131 %130
      %11133 = OpVectorTimesScalar %v3float %11123 %11127
      %11134 = OpFNegate %v3float %11123
      %11135 = OpCompositeExtract %float %11126 1
      %11136 = OpVectorTimesScalar %v3float %11134 %11135
      %11137 = OpFAdd %v3float %11133 %11136
      %11138 = OpFMul %v3float %11132 %11137
      %11139 = OpAccessChain %_ptr_Uniform_uint %View %uint_41
      %11140 = OpLoad %uint %11139
      %11141 = OpINotEqual %bool %11140 %uint_0
      %11142 = OpDot %float %11138 %174
      %11143 = OpFSub %float %float_1 %11142
      %11144 = OpSelect %float %11141 %11143 %float_1
      %11145 = OpVectorTimesScalar %v3float %11122 %11144
      %11146 = OpShiftRightLogical %uint %10838 %uint_2
      %11147 = OpBitwiseAnd %uint %11146 %uint_7
      %11148 = OpIEqual %bool %11147 %uint_4
               OpSelectionMerge %11149 DontFlatten
               OpBranchConditional %11148 %11150 %11149
      %11150 = OpLabel
      %11151 = OpExtInst %float %1 NMax %461 %461
      %11152 = OpExtInst %float %1 NMax %461 %11151
      %11153 = OpFSub %float %11152 %float_0_0399999991
      %11154 = OpExtInst %float %1 NMax %float_0 %11153
      %11155 = OpFMul %float %11154 %float_3
      %11156 = OpExtInst %float %1 FClamp %11155 %float_0 %float_1
      %11157 = OpFMul %float %11156 %11156
      %11158 = OpCompositeExtract %float %10698 0
      %11159 = OpExtInst %float %1 FClamp %10953 %float_0 %float_1
      %11160 = OpExtInst %float %1 FAbs %11159
      %11161 = OpExtInst %float %1 Fma %float_n0_156582996 %11160 %float_1_57079637
      %11162 = OpFSub %float %float_1 %11160
      %11163 = OpExtInst %float %1 Sqrt %11162
      %11164 = OpFMul %float %11161 %11163
      %11165 = OpFMul %float %11164 %float_0_636619747
      %11166 = OpExtInst %float %1 FClamp %11165 %float_0 %float_1
      %11167 = OpCompositeConstruct %v3float %float_0 %11158 %11166
      %11168 = OpExtInst %v3float %1 Fma %497 %11167 %496
      %11169 = OpLoad %type_3d_image_0 %View_SimpleVolumeEnvTexture
      %11170 = OpLoad %type_sampler %View_SimpleVolumeEnvTextureSampler
      %11171 = OpSampledImage %type_sampled_image_0 %11169 %11170
      %11172 = OpImageSampleExplicitLod %v4float %11171 %11168 Lod %float_0
      %11173 = OpCompositeExtract %float %11172 0
      %11174 = OpExtInst %float %1 Fma %float_10 %float_0_00158730161 %float_1
      %11175 = OpExtInst %float %1 FClamp %11174 %float_0 %float_1
      %11176 = OpFMul %float %11173 %11175
      %11177 = OpCompositeExtract %float %10698 1
      %11178 = OpCompositeConstruct %v3float %float_0 %11177 %11166
      %11179 = OpExtInst %v3float %1 Fma %497 %11178 %496
      %11180 = OpSampledImage %type_sampled_image_0 %11169 %11170
      %11181 = OpImageSampleExplicitLod %v4float %11180 %11179 Lod %float_0
      %11182 = OpCompositeExtract %float %11181 0
      %11183 = OpFMul %float %11182 %11175
      %11184 = OpCompositeExtract %float %10698 2
      %11185 = OpCompositeConstruct %v3float %float_0 %11184 %11166
      %11186 = OpExtInst %v3float %1 Fma %497 %11185 %496
      %11187 = OpSampledImage %type_sampled_image_0 %11169 %11170
      %11188 = OpImageSampleExplicitLod %v4float %11187 %11186 Lod %float_0
      %11189 = OpCompositeExtract %float %11188 0
      %11190 = OpFMul %float %11189 %11175
      %11191 = OpCompositeConstruct %v3float %11176 %11183 %11190
      %11192 = OpCompositeExtract %float %11145 0
      %11193 = OpCompositeExtract %float %11145 1
      %11194 = OpCompositeExtract %float %11145 2
      %11195 = OpExtInst %float %1 NMax %11193 %11194
      %11196 = OpExtInst %float %1 NMax %11192 %11195
      %11197 = OpExtInst %float %1 NMax %11183 %11190
      %11198 = OpExtInst %float %1 NMax %11176 %11197
      %11199 = OpFOrdLessThan %bool %11196 %11198
               OpSelectionMerge %11200 None
               OpBranchConditional %11199 %11201 %11200
      %11201 = OpLabel
      %11202 = OpFDiv %float %11196 %11198
      %11203 = OpVectorTimesScalar %v3float %11191 %11202
               OpBranch %11200
      %11200 = OpLabel
      %11204 = OpPhi %v3float %11191 %11150 %11203 %11201
      %11205 = OpVectorTimesScalar %v3float %11204 %11144
      %11206 = OpCompositeConstruct %v3float %11157 %11157 %11157
      %11207 = OpExtInst %v3float %1 FMix %11145 %11205 %11206
               OpBranch %11149
      %11149 = OpLabel
      %11208 = OpPhi %v3float %11145 %10957 %11207 %11200
      %11209 = OpIEqual %bool %11147 %uint_1
               OpSelectionMerge %11210 DontFlatten
               OpBranchConditional %11209 %11211 %11210
      %11211 = OpLabel
      %11212 = OpExtInst %v3float %1 NMax %356 %553
      %11213 = OpFDiv %v3float %130 %11212
      %11214 = OpExtInst %v3float %1 NMax %345 %11213
      %11215 = OpExtInst %float %1 FAbs %float_1
      %11216 = OpExtInst %float %1 NMax %float_9_99999975en05 %11215
      %11217 = OpFDiv %float %float_1 %11216
      %11218 = OpFNegate %v3float %11214
      %11219 = OpVectorTimesScalar %v3float %11218 %11217
      %11220 = OpExtInst %v3float %1 Exp %11219
      %11221 = OpFMul %v3float %498 %11220
      %11222 = OpVectorTimesScalar %v3float %11221 %11144
               OpBranch %11210
      %11210 = OpLabel
      %11223 = OpPhi %v3float %460 %11149 %11222 %11211
      %11224 = OpShiftRightLogical %uint %10838 %uint_9
      %11225 = OpBitwiseAnd %uint %11224 %uint_1
      %11226 = OpINotEqual %bool %11225 %uint_0
               OpSelectionMerge %11227 DontFlatten
               OpBranchConditional %11226 %11228 %11227
      %11228 = OpLabel
      %11229 = OpVectorTimesScalar %v3float %11122 %float_1
      %11230 = OpVectorTimesScalar %v3float %11208 %float_1
               OpBranch %10956
      %11227 = OpLabel
               OpBranch %10956
      %10956 = OpLabel
      %11231 = OpPhi %v3float %460 %10947 %10961 %10959 %11121 %10958 %11230 %11228 %11208 %11227
      %11232 = OpPhi %v3float %460 %10947 %10952 %10959 %10966 %10958 %10952 %11228 %10952 %11227
      %11233 = OpPhi %v3float %460 %10947 %460 %10959 %460 %10958 %11223 %11228 %11223 %11227
      %11234 = OpPhi %v3float %460 %10947 %10960 %10959 %460 %10958 %11229 %11228 %11122 %11227
      %11235 = OpFOrdGreaterThan %v3bool %11233 %105
      %11236 = OpAny %bool %11235
               OpSelectionMerge %11237 None
               OpBranchConditional %8453 %11238 %11237
      %11238 = OpLabel
      %11239 = OpVectorTimesScalar %v3float %591 %float_2097152
      %11240 = OpFAdd %v3float %11239 %639
      %11241 = OpAccessChain %_ptr_Uniform_v3float %IndirectLightingCache %uint_1
      %11242 = OpLoad %v3float %11241
      %11243 = OpAccessChain %_ptr_Uniform_v3float %IndirectLightingCache %int_0
      %11244 = OpLoad %v3float %11243
      %11245 = OpExtInst %v3float %1 Fma %11240 %11242 %11244
      %11246 = OpAccessChain %_ptr_Uniform_v3float %IndirectLightingCache %uint_2
      %11247 = OpLoad %v3float %11246
      %11248 = OpAccessChain %_ptr_Uniform_v3float %IndirectLightingCache %uint_3
      %11249 = OpLoad %v3float %11248
      %11250 = OpExtInst %v3float %1 FClamp %11245 %11247 %11249
      %11251 = OpLoad %type_3d_image_0 %IndirectLightingCache_IndirectLightingCacheTexture0
      %11252 = OpLoad %type_sampler %IndirectLightingCache_IndirectLightingCacheTextureSampler0
      %11253 = OpSampledImage %type_sampled_image_0 %11251 %11252
      %11254 = OpImageSampleImplicitLod %v4float %11253 %11250 None
      %11255 = OpLoad %type_3d_image_0 %IndirectLightingCache_IndirectLightingCacheTexture1
      %11256 = OpSampledImage %type_sampled_image_0 %11255 %10450
      %11257 = OpImageSampleImplicitLod %v4float %11256 %11250 None
      %11258 = OpLoad %type_3d_image_0 %IndirectLightingCache_IndirectLightingCacheTexture2
      %11259 = OpSampledImage %type_sampled_image_0 %11258 %10450
      %11260 = OpImageSampleImplicitLod %v4float %11259 %11250 None
      %11261 = OpCompositeExtract %float %11254 0
      %11262 = OpCompositeExtract %float %11257 0
      %11263 = OpCompositeExtract %float %11260 0
      %11264 = OpCompositeExtract %float %11254 3
      %11265 = OpCompositeConstruct %v4float %11261 %11262 %11263 %11264
      %11266 = OpCompositeExtract %float %11254 1
      %11267 = OpCompositeExtract %float %11257 1
      %11268 = OpCompositeExtract %float %11260 1
      %11269 = OpCompositeExtract %float %11257 3
      %11270 = OpCompositeConstruct %v4float %11266 %11267 %11268 %11269
      %11271 = OpCompositeExtract %float %11254 2
      %11272 = OpCompositeExtract %float %11257 2
      %11273 = OpCompositeExtract %float %11260 2
      %11274 = OpCompositeExtract %float %11260 3
      %11275 = OpCompositeConstruct %v4float %11271 %11272 %11273 %11274
      %11276 = OpCompositeExtract %float %11232 1
      %11277 = OpFMul %float %float_n0_488602996 %11276
      %11278 = OpCompositeInsert %v4float %11277 %550 1
      %11279 = OpCompositeExtract %float %11232 2
      %11280 = OpFMul %float %float_0_488602996 %11279
      %11281 = OpCompositeInsert %v4float %11280 %11278 2
      %11282 = OpCompositeExtract %float %11232 0
      %11283 = OpFMul %float %float_n0_488602996 %11282
      %11284 = OpCompositeInsert %v4float %11283 %11281 3
      %11285 = OpCompositeInsert %v4float %float_0_886227548 %11284 0
      %11286 = OpVectorShuffle %v3float %11285 %11285 1 2 3
      %11287 = OpVectorTimesScalar %v3float %11286 %float_2_09439516
      %11288 = OpVectorShuffle %v4float %11285 %11287 0 4 5 6
      %11289 = OpDot %float %11265 %11288
      %11290 = OpCompositeInsert %v3float %11289 %105 0
      %11291 = OpDot %float %11270 %11288
      %11292 = OpCompositeInsert %v3float %11291 %11290 1
      %11293 = OpDot %float %11275 %11288
      %11294 = OpCompositeInsert %v3float %11293 %11292 2
      %11295 = OpExtInst %v3float %1 NMax %105 %11294
      %11296 = OpFMul %v3float %11295 %498
               OpSelectionMerge %11297 None
               OpBranchConditional %11236 %11298 %11297
      %11298 = OpLabel
      %11299 = OpFNegate %v3float %11232
      %11300 = OpCompositeExtract %float %11299 1
      %11301 = OpFMul %float %float_n0_488602996 %11300
      %11302 = OpCompositeInsert %v4float %11301 %550 1
      %11303 = OpCompositeExtract %float %11299 2
      %11304 = OpFMul %float %float_0_488602996 %11303
      %11305 = OpCompositeInsert %v4float %11304 %11302 2
      %11306 = OpCompositeExtract %float %11299 0
      %11307 = OpFMul %float %float_n0_488602996 %11306
      %11308 = OpCompositeInsert %v4float %11307 %11305 3
      %11309 = OpCompositeInsert %v4float %float_0_886227548 %11308 0
      %11310 = OpVectorShuffle %v3float %11309 %11309 1 2 3
      %11311 = OpVectorTimesScalar %v3float %11310 %float_2_09439516
      %11312 = OpVectorShuffle %v4float %11309 %11311 0 4 5 6
      %11313 = OpDot %float %11265 %11312
      %11314 = OpCompositeInsert %v3float %11313 %551 0
      %11315 = OpDot %float %11270 %11312
      %11316 = OpCompositeInsert %v3float %11315 %11314 1
      %11317 = OpDot %float %11275 %11312
      %11318 = OpCompositeInsert %v3float %11317 %11316 2
      %11319 = OpExtInst %v3float %1 NMax %105 %11318
      %11320 = OpFMul %v3float %11319 %498
               OpBranch %11297
      %11297 = OpLabel
      %11321 = OpPhi %v3float %105 %11238 %11320 %11298
               OpBranch %11237
      %11237 = OpLabel
      %11322 = OpPhi %v3float %105 %10956 %11321 %11297
      %11323 = OpPhi %v3float %105 %10956 %11296 %11297
      %11324 = OpFMul %v3float %11323 %8618
      %11325 = OpFMul %v3float %11322 %8618
      %11326 = OpDot %float %11324 %174
      %11327 = OpVectorTimesScalar %v3float %11234 %float_2_04040003
      %11328 = OpFSub %v3float %11327 %177
      %11329 = OpVectorTimesScalar %v3float %11234 %float_n4_79510021
      %11330 = OpFAdd %v3float %11329 %180
      %11331 = OpVectorTimesScalar %v3float %11234 %float_2_75519991
      %11332 = OpFAdd %v3float %11331 %183
      %11333 = OpVectorTimesScalar %v3float %11328 %float_1
      %11334 = OpFAdd %v3float %11333 %11330
      %11335 = OpVectorTimesScalar %v3float %11334 %float_1
      %11336 = OpFAdd %v3float %11335 %11332
      %11337 = OpVectorTimesScalar %v3float %11336 %float_1
      %11338 = OpExtInst %v3float %1 NMax %130 %11337
      %11339 = OpExtInst %v3float %1 NMax %130 %519
      %11340 = OpCompositeExtract %float %11339 1
      %11341 = OpCompositeInsert %v2float %11340 %552 0
      %11342 = OpCompositeInsert %v2float %11326 %11341 1
      %11343 = OpFMul %v3float %11325 %11233
      %11344 = OpExtInst %v3float %1 Fma %11324 %11231 %11343
      %11345 = OpExtInst %v3float %1 Fma %11344 %11338 %10839
               OpBranch %10946
      %10946 = OpLabel
      %11346 = OpPhi %v3float %10839 %10858 %11345 %11237
      %11347 = OpPhi %float %float_0 %10858 %float_1 %11237
      %11348 = OpPhi %v2float %127 %10858 %11342 %11237
      %11349 = OpExtInst %float %1 NMax %float_1 %11347
      %11350 = OpFDiv %float %float_1 %11349
      %11351 = OpVectorTimesScalar %v2float %11348 %11350
      %11352 = OpCompositeExtract %float %11351 0
      %11353 = OpCompositeExtract %float %11351 1
      %11354 = OpBitwiseAnd %uint %10945 %uint_4294902015
      %11355 = OpFMul %float %11353 %11352
      %11356 = OpAccessChain %_ptr_Uniform_float %View %uint_13
      %11357 = OpLoad %float %11356
      %11358 = OpExtInst %float %1 Fma %11355 %11357 %float_0_00390625
      %11359 = OpExtInst %float %1 Log2 %11358
      %11360 = OpExtInst %float %1 Fma %11359 %float_0_0625 %float_0_5
      %11361 = OpFMul %float %11360 %float_255
      %11362 = OpExtInst %float %1 NMin %float_255 %11361
      %11363 = OpConvertFToU %uint %11362
      %11364 = OpBitwiseAnd %uint %11363 %uint_255
      %11365 = OpShiftLeftLogical %uint %11364 %uint_8
      %11366 = OpBitwiseOr %uint %11354 %11365
      %11367 = OpBitwiseAnd %uint %11366 %uint_7
      %11368 = OpIEqual %bool %11367 %uint_1
      %11369 = OpLogicalOr %bool %11368 %false
      %11370 = OpIEqual %bool %11367 %uint_4
      %11371 = OpIEqual %bool %11367 %uint_2
      %11372 = OpLogicalOr %bool %11371 %false
      %11373 = OpIEqual %bool %11367 %uint_5
      %11374 = OpIEqual %bool %11367 %uint_6
      %11375 = OpLogicalOr %bool %11373 %11374
      %11376 = OpLogicalNot %bool %11369
      %11377 = OpLogicalNot %bool %11372
      %11378 = OpLogicalAnd %bool %11376 %11377
      %11379 = OpLogicalNot %bool %11375
      %11380 = OpLogicalAnd %bool %11378 %11379
      %11381 = OpLogicalNot %bool %11370
      %11382 = OpLogicalAnd %bool %11380 %11381
               OpSelectionMerge %11383 None
               OpBranchConditional %11382 %11384 %11383
      %11384 = OpLabel
      %11385 = OpBitwiseAnd %uint %10848 %uint_15
      %11386 = OpShiftLeftLogical %uint %11385 %uint_16
      %11387 = OpBitwiseOr %uint %uint_0 %11386
      %11388 = OpBitwiseAnd %uint %11387 %uint_4287627263
      %11389 = OpBitwiseOr %uint %11388 %uint_1048576
      %11390 = OpBitwiseAnd %uint %11389 %uint_4169138175
      %11391 = OpBitwiseOr %uint %11390 %uint_0
      %11392 = OpBitwiseAnd %uint %11366 %uint_134217728
      %11393 = OpBitwiseOr %uint %11391 %11392
      %11394 = OpBitwiseAnd %uint %11393 %uint_4294901760
      %11395 = OpBitwiseAnd %uint %11366 %uint_65535
      %11396 = OpShiftLeftLogical %uint %11395 %uint_0
      %11397 = OpBitwiseOr %uint %11394 %11396
      %11398 = OpExtInst %v3float %1 FAbs %10694
      %11399 = OpDot %float %130 %11398
      %11400 = OpCompositeConstruct %v2float %11399 %11399
      %11401 = OpVectorShuffle %v2float %10694 %10694 0 1
      %11402 = OpFDiv %v2float %11401 %11400
      %11403 = OpVectorShuffle %v3float %10694 %11402 3 4 2
      %11404 = OpCompositeExtract %float %10694 2
      %11405 = OpFOrdLessThanEqual %bool %11404 %float_0
               OpSelectionMerge %11406 None
               OpBranchConditional %11405 %11407 %11406
      %11407 = OpLabel
      %11408 = OpVectorShuffle %v2float %11402 %460 1 0
      %11409 = OpExtInst %v2float %1 FAbs %11408
      %11410 = OpFSub %v2float %315 %11409
      %11411 = OpVectorShuffle %v2float %11402 %460 0 1
      %11412 = OpFOrdGreaterThanEqual %v2bool %11411 %127
      %11413 = OpCompositeExtract %bool %11412 0
      %11414 = OpSelect %float %11413 %float_1 %float_n1
      %11415 = OpCompositeExtract %bool %11412 1
      %11416 = OpSelect %float %11415 %float_1 %float_n1
      %11417 = OpCompositeConstruct %v2float %11414 %11416
      %11418 = OpFMul %v2float %11410 %11417
      %11419 = OpVectorShuffle %v3float %10694 %11418 3 4 2
               OpBranch %11406
      %11406 = OpLabel
      %11420 = OpPhi %v3float %11403 %11384 %11419 %11407
      %11421 = OpCompositeExtract %float %11420 0
      %11422 = OpCompositeExtract %float %11420 1
      %11423 = OpCompositeConstruct %v2float %11421 %float_0
      %11424 = OpExtInst %uint %1 PackHalf2x16 %11423
      %11425 = OpCompositeConstruct %v2float %11422 %float_0
      %11426 = OpExtInst %uint %1 PackHalf2x16 %11425
      %11427 = OpShiftLeftLogical %uint %11426 %uint_16
      %11428 = OpBitwiseOr %uint %11424 %11427
               OpBranch %11383
      %11383 = OpLabel
      %11429 = OpPhi %uint %uint_0 %10946 %11428 %11406
      %11430 = OpPhi %uint %uint_0 %10946 %11397 %11406
      %11431 = OpSelect %uint %11382 %uint_2 %uint_0
               OpSelectionMerge %11432 DontFlatten
               OpBranchConditional %10715 %11433 %11432
      %11433 = OpLabel
      %11434 = OpBitwiseAnd %uint %10838 %uint_4294967263
      %11435 = OpBitwiseOr %uint %11434 %uint_32
      %11436 = OpAny %bool %555
      %11437 = OpBitwiseAnd %uint %11435 %uint_4294901759
      %11438 = OpSelect %uint %11436 %uint_1 %uint_0
      %11439 = OpBitwiseAnd %uint %11438 %uint_1
      %11440 = OpShiftLeftLogical %uint %11439 %uint_16
      %11441 = OpBitwiseOr %uint %11437 %11440
      %11442 = OpLogicalAnd %bool %11369 %true
               OpSelectionMerge %11443 None
               OpBranchConditional %11442 %11444 %11445
      %11445 = OpLabel
      %11446 = OpLogicalAnd %bool %11372 %true
               OpSelectionMerge %11447 None
               OpBranchConditional %11446 %11448 %11449
      %11449 = OpLabel
               OpSelectionMerge %11450 None
               OpBranchConditional %11374 %11451 %11452
      %11452 = OpLabel
               OpSelectionMerge %11453 None
               OpBranchConditional %11373 %11454 %11455
      %11455 = OpLabel
               OpSelectionMerge %11456 None
               OpBranchConditional %11370 %11457 %11458
      %11458 = OpLabel
      %11459 = OpBitwiseAnd %uint %11441 %uint_4194303
      %11460 = OpExtInst %uint %1 PackHalf2x16 %279
      %11461 = OpShiftRightLogical %uint %11460 %uint_5
      %11462 = OpBitwiseAnd %uint %11461 %uint_1023
      %11463 = OpBitwiseAnd %uint %11462 %uint_1023
      %11464 = OpShiftLeftLogical %uint %11463 %uint_22
      %11465 = OpBitwiseOr %uint %11459 %11464
      %11466 = OpULessThan %bool %11431 %uint_3
               OpSelectionMerge %11467 None
               OpBranchConditional %11466 %11468 %11469
      %11469 = OpLabel
      %11470 = OpISub %uint %11431 %uint_3
      %11471 = OpCompositeExtract %uint %10695 0
      %11472 = OpCompositeExtract %uint %10695 1
      %11473 = OpCompositeConstruct %v3uint %11471 %11472 %11470
               OpImageWrite %10696 %11473 %11465 None
               OpBranch %11467
      %11468 = OpLabel
      %11474 = OpIEqual %bool %11431 %uint_0
      %11475 = OpSelect %uint %11474 %11465 %11430
      %11476 = OpIEqual %bool %11431 %uint_1
      %11477 = OpSelect %uint %11476 %11465 %11429
      %11478 = OpIEqual %bool %11431 %uint_2
      %11479 = OpSelect %uint %11478 %11465 %uint_0
               OpBranch %11467
      %11467 = OpLabel
      %11480 = OpPhi %uint %uint_0 %11469 %11479 %11468
      %11481 = OpPhi %uint %11429 %11469 %11477 %11468
      %11482 = OpPhi %uint %11430 %11469 %11475 %11468
      %11483 = OpIAdd %uint %11431 %uint_1
               OpBranch %11456
      %11457 = OpLabel
      %11484 = OpVectorShuffle %v3float %10698 %459 0 1 2
      %11485 = OpFSub %float %8386 %float_0_5
      %11486 = OpFMul %float %11485 %float_0_00787401572
      %11487 = OpFMul %float %11485 %float_0_0158730168
      %11488 = OpCompositeConstruct %v3float %11486 %11486 %11487
      %11489 = OpExtInst %v3float %1 FClamp %11484 %105 %130
      %11490 = OpCompositeExtract %float %11489 0
               OpSelectionMerge %11491 None
               OpSwitch %uint_0 %11492
      %11492 = OpLabel
      %11493 = OpFOrdLessThan %bool %11490 %float_0_00313066994
               OpSelectionMerge %11494 None
               OpBranchConditional %11493 %11495 %11494
      %11495 = OpLabel
      %11496 = OpFMul %float %11490 %float_12_9200001
               OpBranch %11491
      %11494 = OpLabel
      %11497 = OpExtInst %float %1 Pow %11490 %float_0_416666657
      %11498 = OpExtInst %float %1 Fma %11497 %float_1_05499995 %float_n0_0549999997
               OpBranch %11491
      %11491 = OpLabel
      %11499 = OpPhi %float %11496 %11495 %11498 %11494
      %11500 = OpCompositeExtract %float %11489 1
               OpSelectionMerge %11501 None
               OpSwitch %uint_0 %11502
      %11502 = OpLabel
      %11503 = OpFOrdLessThan %bool %11500 %float_0_00313066994
               OpSelectionMerge %11504 None
               OpBranchConditional %11503 %11505 %11504
      %11505 = OpLabel
      %11506 = OpFMul %float %11500 %float_12_9200001
               OpBranch %11501
      %11504 = OpLabel
      %11507 = OpExtInst %float %1 Pow %11500 %float_0_416666657
      %11508 = OpExtInst %float %1 Fma %11507 %float_1_05499995 %float_n0_0549999997
               OpBranch %11501
      %11501 = OpLabel
      %11509 = OpPhi %float %11506 %11505 %11508 %11504
      %11510 = OpCompositeExtract %float %11489 2
               OpSelectionMerge %11511 None
               OpSwitch %uint_0 %11512
      %11512 = OpLabel
      %11513 = OpFOrdLessThan %bool %11510 %float_0_00313066994
               OpSelectionMerge %11514 None
               OpBranchConditional %11513 %11515 %11514
      %11515 = OpLabel
      %11516 = OpFMul %float %11510 %float_12_9200001
               OpBranch %11511
      %11514 = OpLabel
      %11517 = OpExtInst %float %1 Pow %11510 %float_0_416666657
      %11518 = OpExtInst %float %1 Fma %11517 %float_1_05499995 %float_n0_0549999997
               OpBranch %11511
      %11511 = OpLabel
      %11519 = OpPhi %float %11516 %11515 %11518 %11514
      %11520 = OpCompositeConstruct %v3float %11499 %11509 %11519
      %11521 = OpBitcast %v3uint %11520
      %11522 = OpBitwiseAnd %v3uint %11521 %349
      %11523 = OpExtInst %v3uint %1 UMin %11522 %500
      %11524 = OpConvertUToF %v3float %11523
      %11525 = OpExtInst %v3float %1 Fma %11488 %11524 %11520
      %11526 = OpExtInst %v3float %1 FClamp %11525 %105 %130
      %11527 = OpCompositeExtract %float %11526 0
      %11528 = OpFMul %float %11527 %float_127
      %11529 = OpConvertFToU %uint %11528
      %11530 = OpShiftLeftLogical %uint %11529 %uint_0
      %11531 = OpCompositeExtract %float %11526 1
      %11532 = OpFMul %float %11531 %float_127
      %11533 = OpConvertFToU %uint %11532
      %11534 = OpShiftLeftLogical %uint %11533 %uint_7
      %11535 = OpCompositeExtract %float %11526 2
      %11536 = OpFMul %float %11535 %float_63
      %11537 = OpConvertFToU %uint %11536
      %11538 = OpShiftLeftLogical %uint %11537 %uint_14
      %11539 = OpBitwiseOr %uint %11530 %11534
      %11540 = OpBitwiseOr %uint %11539 %11538
      %11541 = OpBitwiseAnd %uint %11540 %uint_4095
      %11542 = OpShiftRightLogical %uint %11540 %uint_12
      %11543 = OpBitwiseAnd %uint %11542 %uint_255
      %11544 = OpExtInst %float %1 FClamp %10705 %float_0 %float_1
      %11545 = OpFMul %float %11544 %float_255
      %11546 = OpConvertFToU %uint %11545
      %11547 = OpCompositeConstruct %v3float %10707 %float_0 %10701
      %11548 = OpExtInst %v3float %1 FClamp %11547 %105 %130
      %11549 = OpBitcast %v3uint %11548
      %11550 = OpBitwiseAnd %v3uint %11549 %349
      %11551 = OpExtInst %v3uint %1 UMin %11550 %500
      %11552 = OpConvertUToF %v3float %11551
      %11553 = OpExtInst %v3float %1 Fma %11488 %11552 %11548
      %11554 = OpExtInst %v3float %1 FClamp %11553 %105 %130
      %11555 = OpCompositeExtract %float %11554 0
      %11556 = OpFMul %float %11555 %float_127
      %11557 = OpConvertFToU %uint %11556
      %11558 = OpShiftLeftLogical %uint %11557 %uint_0
      %11559 = OpCompositeExtract %float %11554 1
      %11560 = OpFMul %float %11559 %float_127
      %11561 = OpConvertFToU %uint %11560
      %11562 = OpShiftLeftLogical %uint %11561 %uint_7
      %11563 = OpCompositeExtract %float %11554 2
      %11564 = OpFMul %float %11563 %float_63
      %11565 = OpConvertFToU %uint %11564
      %11566 = OpShiftLeftLogical %uint %11565 %uint_14
      %11567 = OpBitwiseOr %uint %11558 %11562
      %11568 = OpBitwiseOr %uint %11567 %11566
      %11569 = OpBitwiseAnd %uint %11366 %uint_65535
      %11570 = OpShiftLeftLogical %uint %11569 %uint_0
      %11571 = OpBitwiseOr %uint %uint_0 %11570
      %11572 = OpShiftLeftLogical %uint %11543 %uint_8
      %11573 = OpBitwiseOr %uint %11572 %11546
      %11574 = OpBitwiseAnd %uint %11571 %uint_65535
      %11575 = OpShiftLeftLogical %uint %11573 %uint_16
      %11576 = OpBitwiseOr %uint %11574 %11575
      %11577 = OpULessThan %bool %11431 %uint_3
               OpSelectionMerge %11578 None
               OpBranchConditional %11577 %11579 %11580
      %11580 = OpLabel
      %11581 = OpISub %uint %11431 %uint_3
      %11582 = OpCompositeExtract %uint %10695 0
      %11583 = OpCompositeExtract %uint %10695 1
      %11584 = OpCompositeConstruct %v3uint %11582 %11583 %11581
               OpImageWrite %10696 %11584 %11576 None
               OpBranch %11578
      %11579 = OpLabel
      %11585 = OpIEqual %bool %11431 %uint_0
      %11586 = OpSelect %uint %11585 %11576 %11430
      %11587 = OpIEqual %bool %11431 %uint_1
      %11588 = OpSelect %uint %11587 %11576 %11429
      %11589 = OpIEqual %bool %11431 %uint_2
      %11590 = OpSelect %uint %11589 %11576 %uint_0
               OpBranch %11578
      %11578 = OpLabel
      %11591 = OpPhi %uint %uint_0 %11580 %11590 %11579
      %11592 = OpPhi %uint %11429 %11580 %11588 %11579
      %11593 = OpPhi %uint %11430 %11580 %11586 %11579
      %11594 = OpIAdd %uint %11431 %uint_1
      %11595 = OpShiftLeftLogical %uint %11541 %uint_20
      %11596 = OpBitwiseOr %uint %11595 %11568
      %11597 = OpULessThan %bool %11594 %uint_3
               OpSelectionMerge %11598 None
               OpBranchConditional %11597 %11599 %11600
      %11600 = OpLabel
      %11601 = OpIAdd %uint %11431 %uint_4294967294
      %11602 = OpCompositeExtract %uint %10695 0
      %11603 = OpCompositeExtract %uint %10695 1
      %11604 = OpCompositeConstruct %v3uint %11602 %11603 %11601
               OpImageWrite %10696 %11604 %11596 None
               OpBranch %11598
      %11599 = OpLabel
      %11605 = OpIEqual %bool %11594 %uint_0
      %11606 = OpSelect %uint %11605 %11596 %11593
      %11607 = OpIEqual %bool %11594 %uint_1
      %11608 = OpSelect %uint %11607 %11596 %11592
      %11609 = OpIEqual %bool %11594 %uint_2
      %11610 = OpSelect %uint %11609 %11596 %11591
               OpBranch %11598
      %11598 = OpLabel
      %11611 = OpPhi %uint %11591 %11600 %11610 %11599
      %11612 = OpPhi %uint %11592 %11600 %11608 %11599
      %11613 = OpPhi %uint %11593 %11600 %11606 %11599
      %11614 = OpIAdd %uint %11431 %uint_2
               OpBranch %11456
      %11456 = OpLabel
      %11615 = OpPhi %uint %11465 %11467 %uint_0 %11598
      %11616 = OpPhi %uint %11480 %11467 %11611 %11598
      %11617 = OpPhi %uint %11481 %11467 %11612 %11598
      %11618 = OpPhi %uint %11482 %11467 %11613 %11598
      %11619 = OpPhi %uint %11483 %11467 %11614 %11598
               OpBranch %11453
      %11454 = OpLabel
      %11620 = OpBitwiseAnd %uint %11366 %uint_65535
      %11621 = OpShiftLeftLogical %uint %11620 %uint_0
      %11622 = OpBitwiseOr %uint %uint_0 %11621
      %11623 = OpBitwiseAnd %uint %11622 %uint_65535
      %11624 = OpULessThan %bool %11431 %uint_3
               OpSelectionMerge %11625 None
               OpBranchConditional %11624 %11626 %11627
      %11627 = OpLabel
      %11628 = OpISub %uint %11431 %uint_3
      %11629 = OpCompositeExtract %uint %10695 0
      %11630 = OpCompositeExtract %uint %10695 1
      %11631 = OpCompositeConstruct %v3uint %11629 %11630 %11628
               OpImageWrite %10696 %11631 %11623 None
               OpBranch %11625
      %11626 = OpLabel
      %11632 = OpIEqual %bool %11431 %uint_0
      %11633 = OpSelect %uint %11632 %11623 %11430
      %11634 = OpIEqual %bool %11431 %uint_1
      %11635 = OpSelect %uint %11634 %11623 %11429
      %11636 = OpIEqual %bool %11431 %uint_2
      %11637 = OpSelect %uint %11636 %11623 %uint_0
               OpBranch %11625
      %11625 = OpLabel
      %11638 = OpPhi %uint %uint_0 %11627 %11637 %11626
      %11639 = OpPhi %uint %11429 %11627 %11635 %11626
      %11640 = OpPhi %uint %11430 %11627 %11633 %11626
      %11641 = OpIAdd %uint %11431 %uint_1
               OpBranch %11453
      %11453 = OpLabel
      %11642 = OpPhi %uint %11615 %11456 %11441 %11625
      %11643 = OpPhi %uint %11616 %11456 %11638 %11625
      %11644 = OpPhi %uint %11617 %11456 %11639 %11625
      %11645 = OpPhi %uint %11618 %11456 %11640 %11625
      %11646 = OpPhi %uint %11619 %11456 %11641 %11625
               OpBranch %11450
      %11451 = OpLabel
      %11647 = OpBitwiseAnd %uint %11366 %uint_65535
      %11648 = OpShiftLeftLogical %uint %11647 %uint_0
      %11649 = OpBitwiseOr %uint %uint_0 %11648
      %11650 = OpBitwiseAnd %uint %11649 %uint_65535
      %11651 = OpExtInst %float %1 FClamp %10701 %float_0 %float_1
      %11652 = OpFMul %float %11651 %float_255
      %11653 = OpConvertFToU %uint %11652
      %11654 = OpShiftLeftLogical %uint %11653 %uint_16
      %11655 = OpBitwiseOr %uint %uint_0 %11654
      %11656 = OpBitwiseOr %uint %11655 %uint_0
      %11657 = OpBitwiseOr %uint %11650 %11656
      %11658 = OpULessThan %bool %11431 %uint_3
               OpSelectionMerge %11659 None
               OpBranchConditional %11658 %11660 %11661
      %11661 = OpLabel
      %11662 = OpISub %uint %11431 %uint_3
      %11663 = OpCompositeExtract %uint %10695 0
      %11664 = OpCompositeExtract %uint %10695 1
      %11665 = OpCompositeConstruct %v3uint %11663 %11664 %11662
               OpImageWrite %10696 %11665 %11657 None
               OpBranch %11659
      %11660 = OpLabel
      %11666 = OpIEqual %bool %11431 %uint_0
      %11667 = OpSelect %uint %11666 %11657 %11430
      %11668 = OpIEqual %bool %11431 %uint_1
      %11669 = OpSelect %uint %11668 %11657 %11429
      %11670 = OpIEqual %bool %11431 %uint_2
      %11671 = OpSelect %uint %11670 %11657 %uint_0
               OpBranch %11659
      %11659 = OpLabel
      %11672 = OpPhi %uint %uint_0 %11661 %11671 %11660
      %11673 = OpPhi %uint %11429 %11661 %11669 %11660
      %11674 = OpPhi %uint %11430 %11661 %11667 %11660
      %11675 = OpIAdd %uint %11431 %uint_1
               OpBranch %11450
      %11450 = OpLabel
      %11676 = OpPhi %uint %11642 %11453 %11441 %11659
      %11677 = OpPhi %uint %11643 %11453 %11672 %11659
      %11678 = OpPhi %uint %11644 %11453 %11673 %11659
      %11679 = OpPhi %uint %11645 %11453 %11674 %11659
      %11680 = OpPhi %uint %11646 %11453 %11675 %11659
               OpBranch %11447
      %11448 = OpLabel
      %11681 = OpBitwiseAnd %uint %11441 %uint_4294967293
      %11682 = OpBitwiseOr %uint %11681 %uint_2
      %11683 = OpBitwiseAnd %uint %11366 %uint_65535
      %11684 = OpShiftLeftLogical %uint %11683 %uint_0
      %11685 = OpBitwiseOr %uint %uint_0 %11684
      %11686 = OpBitwiseAnd %uint %11685 %uint_65535
      %11687 = OpBitwiseAnd %uint %10943 %uint_7
      %11688 = OpShiftLeftLogical %uint %11687 %uint_16
      %11689 = OpBitwiseOr %uint %11686 %11688
      %11690 = OpIEqual %bool %10943 %uint_0
               OpSelectionMerge %11691 DontFlatten
               OpBranchConditional %11690 %11692 %11693
      %11693 = OpLabel
      %11694 = OpIEqual %bool %10943 %uint_1
               OpSelectionMerge %11695 None
               OpBranchConditional %11694 %11696 %11697
      %11697 = OpLabel
      %11698 = OpIEqual %bool %10943 %uint_2
               OpSelectionMerge %11699 None
               OpBranchConditional %11698 %11700 %11701
      %11701 = OpLabel
      %11702 = OpIEqual %bool %10943 %uint_3
      %11703 = OpIEqual %bool %10943 %uint_5
      %11704 = OpLogicalOr %bool %11702 %11703
               OpSelectionMerge %11705 None
               OpBranchConditional %11704 %11706 %11707
      %11707 = OpLabel
      %11708 = OpIEqual %bool %10943 %uint_4
               OpSelectionMerge %11709 None
               OpBranchConditional %11708 %11710 %11709
      %11710 = OpLabel
      %11711 = OpVectorShuffle %v3float %10698 %459 0 1 2
      %11712 = OpFSub %float %8386 %float_0_5
      %11713 = OpFMul %float %11712 %float_0_00787401572
      %11714 = OpFMul %float %11712 %float_0_0158730168
      %11715 = OpCompositeConstruct %v3float %11713 %11713 %11714
      %11716 = OpExtInst %v3float %1 FClamp %11711 %105 %130
      %11717 = OpCompositeExtract %float %11716 0
               OpSelectionMerge %11718 None
               OpSwitch %uint_0 %11719
      %11719 = OpLabel
      %11720 = OpFOrdLessThan %bool %11717 %float_0_00313066994
               OpSelectionMerge %11721 None
               OpBranchConditional %11720 %11722 %11721
      %11722 = OpLabel
      %11723 = OpFMul %float %11717 %float_12_9200001
               OpBranch %11718
      %11721 = OpLabel
      %11724 = OpExtInst %float %1 Pow %11717 %float_0_416666657
      %11725 = OpExtInst %float %1 Fma %11724 %float_1_05499995 %float_n0_0549999997
               OpBranch %11718
      %11718 = OpLabel
      %11726 = OpPhi %float %11723 %11722 %11725 %11721
      %11727 = OpCompositeExtract %float %11716 1
               OpSelectionMerge %11728 None
               OpSwitch %uint_0 %11729
      %11729 = OpLabel
      %11730 = OpFOrdLessThan %bool %11727 %float_0_00313066994
               OpSelectionMerge %11731 None
               OpBranchConditional %11730 %11732 %11731
      %11732 = OpLabel
      %11733 = OpFMul %float %11727 %float_12_9200001
               OpBranch %11728
      %11731 = OpLabel
      %11734 = OpExtInst %float %1 Pow %11727 %float_0_416666657
      %11735 = OpExtInst %float %1 Fma %11734 %float_1_05499995 %float_n0_0549999997
               OpBranch %11728
      %11728 = OpLabel
      %11736 = OpPhi %float %11733 %11732 %11735 %11731
      %11737 = OpCompositeExtract %float %11716 2
               OpSelectionMerge %11738 None
               OpSwitch %uint_0 %11739
      %11739 = OpLabel
      %11740 = OpFOrdLessThan %bool %11737 %float_0_00313066994
               OpSelectionMerge %11741 None
               OpBranchConditional %11740 %11742 %11741
      %11742 = OpLabel
      %11743 = OpFMul %float %11737 %float_12_9200001
               OpBranch %11738
      %11741 = OpLabel
      %11744 = OpExtInst %float %1 Pow %11737 %float_0_416666657
      %11745 = OpExtInst %float %1 Fma %11744 %float_1_05499995 %float_n0_0549999997
               OpBranch %11738
      %11738 = OpLabel
      %11746 = OpPhi %float %11743 %11742 %11745 %11741
      %11747 = OpCompositeConstruct %v3float %11726 %11736 %11746
      %11748 = OpBitcast %v3uint %11747
      %11749 = OpBitwiseAnd %v3uint %11748 %349
      %11750 = OpExtInst %v3uint %1 UMin %11749 %500
      %11751 = OpConvertUToF %v3float %11750
      %11752 = OpExtInst %v3float %1 Fma %11715 %11751 %11747
      %11753 = OpExtInst %v3float %1 FClamp %11752 %105 %130
      %11754 = OpCompositeExtract %float %11753 0
      %11755 = OpFMul %float %11754 %float_127
      %11756 = OpConvertFToU %uint %11755
      %11757 = OpShiftLeftLogical %uint %11756 %uint_0
      %11758 = OpCompositeExtract %float %11753 1
      %11759 = OpFMul %float %11758 %float_127
      %11760 = OpConvertFToU %uint %11759
      %11761 = OpShiftLeftLogical %uint %11760 %uint_7
      %11762 = OpCompositeExtract %float %11753 2
      %11763 = OpFMul %float %11762 %float_63
      %11764 = OpConvertFToU %uint %11763
      %11765 = OpShiftLeftLogical %uint %11764 %uint_14
      %11766 = OpBitwiseOr %uint %11757 %11761
      %11767 = OpBitwiseOr %uint %11766 %11765
      %11768 = OpVectorShuffle %v3float %10708 %10708 0 1 2
      %11769 = OpExtInst %v3float %1 FClamp %11768 %105 %130
      %11770 = OpCompositeExtract %float %11769 0
               OpSelectionMerge %11771 None
               OpSwitch %uint_0 %11772
      %11772 = OpLabel
      %11773 = OpFOrdLessThan %bool %11770 %float_0_00313066994
               OpSelectionMerge %11774 None
               OpBranchConditional %11773 %11775 %11774
      %11775 = OpLabel
      %11776 = OpFMul %float %11770 %float_12_9200001
               OpBranch %11771
      %11774 = OpLabel
      %11777 = OpExtInst %float %1 Pow %11770 %float_0_416666657
      %11778 = OpExtInst %float %1 Fma %11777 %float_1_05499995 %float_n0_0549999997
               OpBranch %11771
      %11771 = OpLabel
      %11779 = OpPhi %float %11776 %11775 %11778 %11774
      %11780 = OpCompositeExtract %float %11769 1
               OpSelectionMerge %11781 None
               OpSwitch %uint_0 %11782
      %11782 = OpLabel
      %11783 = OpFOrdLessThan %bool %11780 %float_0_00313066994
               OpSelectionMerge %11784 None
               OpBranchConditional %11783 %11785 %11784
      %11785 = OpLabel
      %11786 = OpFMul %float %11780 %float_12_9200001
               OpBranch %11781
      %11784 = OpLabel
      %11787 = OpExtInst %float %1 Pow %11780 %float_0_416666657
      %11788 = OpExtInst %float %1 Fma %11787 %float_1_05499995 %float_n0_0549999997
               OpBranch %11781
      %11781 = OpLabel
      %11789 = OpPhi %float %11786 %11785 %11788 %11784
      %11790 = OpCompositeExtract %float %11769 2
               OpSelectionMerge %11791 None
               OpSwitch %uint_0 %11792
      %11792 = OpLabel
      %11793 = OpFOrdLessThan %bool %11790 %float_0_00313066994
               OpSelectionMerge %11794 None
               OpBranchConditional %11793 %11795 %11794
      %11795 = OpLabel
      %11796 = OpFMul %float %11790 %float_12_9200001
               OpBranch %11791
      %11794 = OpLabel
      %11797 = OpExtInst %float %1 Pow %11790 %float_0_416666657
      %11798 = OpExtInst %float %1 Fma %11797 %float_1_05499995 %float_n0_0549999997
               OpBranch %11791
      %11791 = OpLabel
      %11799 = OpPhi %float %11796 %11795 %11798 %11794
      %11800 = OpCompositeConstruct %v3float %11779 %11789 %11799
      %11801 = OpBitcast %v3uint %11800
      %11802 = OpBitwiseAnd %v3uint %11801 %349
      %11803 = OpExtInst %v3uint %1 UMin %11802 %500
      %11804 = OpConvertUToF %v3float %11803
      %11805 = OpExtInst %v3float %1 Fma %11715 %11804 %11800
      %11806 = OpExtInst %v3float %1 FClamp %11805 %105 %130
      %11807 = OpCompositeExtract %float %11806 0
      %11808 = OpFMul %float %11807 %float_127
      %11809 = OpConvertFToU %uint %11808
      %11810 = OpShiftLeftLogical %uint %11809 %uint_0
      %11811 = OpCompositeExtract %float %11806 1
      %11812 = OpFMul %float %11811 %float_127
      %11813 = OpConvertFToU %uint %11812
      %11814 = OpShiftLeftLogical %uint %11813 %uint_7
      %11815 = OpCompositeExtract %float %11806 2
      %11816 = OpFMul %float %11815 %float_63
      %11817 = OpConvertFToU %uint %11816
      %11818 = OpShiftLeftLogical %uint %11817 %uint_14
      %11819 = OpBitwiseOr %uint %11810 %11814
      %11820 = OpBitwiseOr %uint %11819 %11818
      %11821 = OpBitwiseOr %uint %11689 %uint_0
      %11822 = OpULessThan %bool %11431 %uint_3
               OpSelectionMerge %11823 None
               OpBranchConditional %11822 %11824 %11825
      %11825 = OpLabel
      %11826 = OpISub %uint %11431 %uint_3
      %11827 = OpCompositeExtract %uint %10695 0
      %11828 = OpCompositeExtract %uint %10695 1
      %11829 = OpCompositeConstruct %v3uint %11827 %11828 %11826
               OpImageWrite %10696 %11829 %11821 None
               OpBranch %11823
      %11824 = OpLabel
      %11830 = OpIEqual %bool %11431 %uint_0
      %11831 = OpSelect %uint %11830 %11821 %11430
      %11832 = OpIEqual %bool %11431 %uint_1
      %11833 = OpSelect %uint %11832 %11821 %11429
      %11834 = OpIEqual %bool %11431 %uint_2
      %11835 = OpSelect %uint %11834 %11821 %uint_0
               OpBranch %11823
      %11823 = OpLabel
      %11836 = OpPhi %uint %uint_0 %11825 %11835 %11824
      %11837 = OpPhi %uint %11429 %11825 %11833 %11824
      %11838 = OpPhi %uint %11430 %11825 %11831 %11824
      %11839 = OpIAdd %uint %11431 %uint_1
      %11840 = OpBitwiseOr %uint %11767 %uint_0
      %11841 = OpULessThan %bool %11839 %uint_3
               OpSelectionMerge %11842 None
               OpBranchConditional %11841 %11843 %11844
      %11844 = OpLabel
      %11845 = OpIAdd %uint %11431 %uint_4294967294
      %11846 = OpCompositeExtract %uint %10695 0
      %11847 = OpCompositeExtract %uint %10695 1
      %11848 = OpCompositeConstruct %v3uint %11846 %11847 %11845
               OpImageWrite %10696 %11848 %11840 None
               OpBranch %11842
      %11843 = OpLabel
      %11849 = OpIEqual %bool %11839 %uint_0
      %11850 = OpSelect %uint %11849 %11840 %11838
      %11851 = OpIEqual %bool %11839 %uint_1
      %11852 = OpSelect %uint %11851 %11840 %11837
      %11853 = OpIEqual %bool %11839 %uint_2
      %11854 = OpSelect %uint %11853 %11840 %11836
               OpBranch %11842
      %11842 = OpLabel
      %11855 = OpPhi %uint %11836 %11844 %11854 %11843
      %11856 = OpPhi %uint %11837 %11844 %11852 %11843
      %11857 = OpPhi %uint %11838 %11844 %11850 %11843
      %11858 = OpIAdd %uint %11431 %uint_2
      %11859 = OpBitwiseOr %uint %11820 %uint_0
      %11860 = OpULessThan %bool %11858 %uint_3
               OpSelectionMerge %11861 None
               OpBranchConditional %11860 %11862 %11863
      %11863 = OpLabel
      %11864 = OpIAdd %uint %11431 %uint_4294967295
      %11865 = OpCompositeExtract %uint %10695 0
      %11866 = OpCompositeExtract %uint %10695 1
      %11867 = OpCompositeConstruct %v3uint %11865 %11866 %11864
               OpImageWrite %10696 %11867 %11859 None
               OpBranch %11861
      %11862 = OpLabel
      %11868 = OpIEqual %bool %11858 %uint_0
      %11869 = OpSelect %uint %11868 %11859 %11857
      %11870 = OpIEqual %bool %11858 %uint_1
      %11871 = OpSelect %uint %11870 %11859 %11856
      %11872 = OpIEqual %bool %11858 %uint_2
      %11873 = OpSelect %uint %11872 %11859 %11855
               OpBranch %11861
      %11861 = OpLabel
      %11874 = OpPhi %uint %11855 %11863 %11873 %11862
      %11875 = OpPhi %uint %11856 %11863 %11871 %11862
      %11876 = OpPhi %uint %11857 %11863 %11869 %11862
      %11877 = OpIAdd %uint %11431 %uint_3
               OpBranch %11709
      %11709 = OpLabel
      %11878 = OpPhi %uint %uint_0 %11707 %11874 %11861
      %11879 = OpPhi %uint %11429 %11707 %11875 %11861
      %11880 = OpPhi %uint %11430 %11707 %11876 %11861
      %11881 = OpPhi %uint %11431 %11707 %11877 %11861
      %11882 = OpSelect %uint %11708 %uint_0 %11682
               OpBranch %11705
      %11706 = OpLabel
      %11883 = OpExtInst %float %1 FAbs %461
      %11884 = OpFSub %float %float_1 %11883
      %11885 = OpVectorShuffle %v3float %10698 %459 0 1 2
      %11886 = OpFSub %float %8386 %float_0_5
      %11887 = OpFMul %float %11886 %float_0_00787401572
      %11888 = OpFMul %float %11886 %float_0_0158730168
      %11889 = OpCompositeConstruct %v3float %11887 %11887 %11888
      %11890 = OpExtInst %v3float %1 FClamp %11885 %105 %130
      %11891 = OpCompositeExtract %float %11890 0
               OpSelectionMerge %11892 None
               OpSwitch %uint_0 %11893
      %11893 = OpLabel
      %11894 = OpFOrdLessThan %bool %11891 %float_0_00313066994
               OpSelectionMerge %11895 None
               OpBranchConditional %11894 %11896 %11895
      %11896 = OpLabel
      %11897 = OpFMul %float %11891 %float_12_9200001
               OpBranch %11892
      %11895 = OpLabel
      %11898 = OpExtInst %float %1 Pow %11891 %float_0_416666657
      %11899 = OpExtInst %float %1 Fma %11898 %float_1_05499995 %float_n0_0549999997
               OpBranch %11892
      %11892 = OpLabel
      %11900 = OpPhi %float %11897 %11896 %11899 %11895
      %11901 = OpCompositeExtract %float %11890 1
               OpSelectionMerge %11902 None
               OpSwitch %uint_0 %11903
      %11903 = OpLabel
      %11904 = OpFOrdLessThan %bool %11901 %float_0_00313066994
               OpSelectionMerge %11905 None
               OpBranchConditional %11904 %11906 %11905
      %11906 = OpLabel
      %11907 = OpFMul %float %11901 %float_12_9200001
               OpBranch %11902
      %11905 = OpLabel
      %11908 = OpExtInst %float %1 Pow %11901 %float_0_416666657
      %11909 = OpExtInst %float %1 Fma %11908 %float_1_05499995 %float_n0_0549999997
               OpBranch %11902
      %11902 = OpLabel
      %11910 = OpPhi %float %11907 %11906 %11909 %11905
      %11911 = OpCompositeExtract %float %11890 2
               OpSelectionMerge %11912 None
               OpSwitch %uint_0 %11913
      %11913 = OpLabel
      %11914 = OpFOrdLessThan %bool %11911 %float_0_00313066994
               OpSelectionMerge %11915 None
               OpBranchConditional %11914 %11916 %11915
      %11916 = OpLabel
      %11917 = OpFMul %float %11911 %float_12_9200001
               OpBranch %11912
      %11915 = OpLabel
      %11918 = OpExtInst %float %1 Pow %11911 %float_0_416666657
      %11919 = OpExtInst %float %1 Fma %11918 %float_1_05499995 %float_n0_0549999997
               OpBranch %11912
      %11912 = OpLabel
      %11920 = OpPhi %float %11917 %11916 %11919 %11915
      %11921 = OpCompositeConstruct %v3float %11900 %11910 %11920
      %11922 = OpBitcast %v3uint %11921
      %11923 = OpBitwiseAnd %v3uint %11922 %349
      %11924 = OpExtInst %v3uint %1 UMin %11923 %500
      %11925 = OpConvertUToF %v3float %11924
      %11926 = OpExtInst %v3float %1 Fma %11889 %11925 %11921
      %11927 = OpExtInst %v3float %1 FClamp %11926 %105 %130
      %11928 = OpCompositeExtract %float %11927 0
      %11929 = OpFMul %float %11928 %float_127
      %11930 = OpConvertFToU %uint %11929
      %11931 = OpShiftLeftLogical %uint %11930 %uint_0
      %11932 = OpCompositeExtract %float %11927 1
      %11933 = OpFMul %float %11932 %float_127
      %11934 = OpConvertFToU %uint %11933
      %11935 = OpShiftLeftLogical %uint %11934 %uint_7
      %11936 = OpCompositeExtract %float %11927 2
      %11937 = OpFMul %float %11936 %float_63
      %11938 = OpConvertFToU %uint %11937
      %11939 = OpShiftLeftLogical %uint %11938 %uint_14
      %11940 = OpBitwiseOr %uint %11931 %11935
      %11941 = OpBitwiseOr %uint %11940 %11939
      %11942 = OpVectorShuffle %v3float %10708 %10708 0 1 2
      %11943 = OpExtInst %v3float %1 FClamp %11942 %105 %130
      %11944 = OpCompositeExtract %float %11943 0
               OpSelectionMerge %11945 None
               OpSwitch %uint_0 %11946
      %11946 = OpLabel
      %11947 = OpFOrdLessThan %bool %11944 %float_0_00313066994
               OpSelectionMerge %11948 None
               OpBranchConditional %11947 %11949 %11948
      %11949 = OpLabel
      %11950 = OpFMul %float %11944 %float_12_9200001
               OpBranch %11945
      %11948 = OpLabel
      %11951 = OpExtInst %float %1 Pow %11944 %float_0_416666657
      %11952 = OpExtInst %float %1 Fma %11951 %float_1_05499995 %float_n0_0549999997
               OpBranch %11945
      %11945 = OpLabel
      %11953 = OpPhi %float %11950 %11949 %11952 %11948
      %11954 = OpCompositeExtract %float %11943 1
               OpSelectionMerge %11955 None
               OpSwitch %uint_0 %11956
      %11956 = OpLabel
      %11957 = OpFOrdLessThan %bool %11954 %float_0_00313066994
               OpSelectionMerge %11958 None
               OpBranchConditional %11957 %11959 %11958
      %11959 = OpLabel
      %11960 = OpFMul %float %11954 %float_12_9200001
               OpBranch %11955
      %11958 = OpLabel
      %11961 = OpExtInst %float %1 Pow %11954 %float_0_416666657
      %11962 = OpExtInst %float %1 Fma %11961 %float_1_05499995 %float_n0_0549999997
               OpBranch %11955
      %11955 = OpLabel
      %11963 = OpPhi %float %11960 %11959 %11962 %11958
      %11964 = OpCompositeExtract %float %11943 2
               OpSelectionMerge %11965 None
               OpSwitch %uint_0 %11966
      %11966 = OpLabel
      %11967 = OpFOrdLessThan %bool %11964 %float_0_00313066994
               OpSelectionMerge %11968 None
               OpBranchConditional %11967 %11969 %11968
      %11969 = OpLabel
      %11970 = OpFMul %float %11964 %float_12_9200001
               OpBranch %11965
      %11968 = OpLabel
      %11971 = OpExtInst %float %1 Pow %11964 %float_0_416666657
      %11972 = OpExtInst %float %1 Fma %11971 %float_1_05499995 %float_n0_0549999997
               OpBranch %11965
      %11965 = OpLabel
      %11973 = OpPhi %float %11970 %11969 %11972 %11968
      %11974 = OpCompositeConstruct %v3float %11953 %11963 %11973
      %11975 = OpBitcast %v3uint %11974
      %11976 = OpBitwiseAnd %v3uint %11975 %349
      %11977 = OpExtInst %v3uint %1 UMin %11976 %500
      %11978 = OpConvertUToF %v3float %11977
      %11979 = OpExtInst %v3float %1 Fma %11889 %11978 %11974
      %11980 = OpExtInst %v3float %1 FClamp %11979 %105 %130
      %11981 = OpCompositeExtract %float %11980 0
      %11982 = OpFMul %float %11981 %float_127
      %11983 = OpConvertFToU %uint %11982
      %11984 = OpShiftLeftLogical %uint %11983 %uint_0
      %11985 = OpCompositeExtract %float %11980 1
      %11986 = OpFMul %float %11985 %float_127
      %11987 = OpConvertFToU %uint %11986
      %11988 = OpShiftLeftLogical %uint %11987 %uint_7
      %11989 = OpCompositeExtract %float %11980 2
      %11990 = OpFMul %float %11989 %float_63
      %11991 = OpConvertFToU %uint %11990
      %11992 = OpShiftLeftLogical %uint %11991 %uint_14
      %11993 = OpBitwiseOr %uint %11984 %11988
      %11994 = OpBitwiseOr %uint %11993 %11992
      %11995 = OpExtInst %float %1 FClamp %11884 %float_0 %float_1
      %11996 = OpExtInst %float %1 FClamp %11995 %float_0 %float_1
      %11997 = OpFMul %float %11996 %float_127
      %11998 = OpConvertFToU %uint %11997
      %11999 = OpExtInst %uint %1 PackHalf2x16 %556
      %12000 = OpShiftLeftLogical %uint %11999 %uint_15
      %12001 = OpBitwiseAnd %uint %12000 %uint_1072693248
      %12002 = OpShiftLeftLogical %uint %11999 %uint_5
      %12003 = OpBitwiseAnd %uint %12002 %uint_1047552
      %12004 = OpShiftRightLogical %uint %11999 %uint_5
      %12005 = OpBitwiseAnd %uint %12004 %uint_1023
      %12006 = OpBitwiseOr %uint %12001 %12003
      %12007 = OpBitwiseOr %uint %12006 %12005
      %12008 = OpBitwiseAnd %uint %12007 %uint_4095
      %12009 = OpShiftRightLogical %uint %12007 %uint_12
      %12010 = OpBitwiseAnd %uint %12009 %uint_4095
      %12011 = OpShiftRightLogical %uint %12007 %uint_24
      %12012 = OpBitwiseAnd %uint %12011 %uint_63
      %12013 = OpBitwiseAnd %uint %11998 %uint_127
      %12014 = OpShiftLeftLogical %uint %12013 %uint_19
      %12015 = OpBitwiseOr %uint %11689 %12014
      %12016 = OpShiftLeftLogical %uint %12012 %uint_26
      %12017 = OpBitwiseOr %uint %12015 %12016
      %12018 = OpULessThan %bool %11431 %uint_3
               OpSelectionMerge %12019 None
               OpBranchConditional %12018 %12020 %12021
      %12021 = OpLabel
      %12022 = OpISub %uint %11431 %uint_3
      %12023 = OpCompositeExtract %uint %10695 0
      %12024 = OpCompositeExtract %uint %10695 1
      %12025 = OpCompositeConstruct %v3uint %12023 %12024 %12022
               OpImageWrite %10696 %12025 %12017 None
               OpBranch %12019
      %12020 = OpLabel
      %12026 = OpIEqual %bool %11431 %uint_0
      %12027 = OpSelect %uint %12026 %12017 %11430
      %12028 = OpIEqual %bool %11431 %uint_1
      %12029 = OpSelect %uint %12028 %12017 %11429
      %12030 = OpIEqual %bool %11431 %uint_2
      %12031 = OpSelect %uint %12030 %12017 %uint_0
               OpBranch %12019
      %12019 = OpLabel
      %12032 = OpPhi %uint %uint_0 %12021 %12031 %12020
      %12033 = OpPhi %uint %11429 %12021 %12029 %12020
      %12034 = OpPhi %uint %11430 %12021 %12027 %12020
      %12035 = OpIAdd %uint %11431 %uint_1
      %12036 = OpShiftLeftLogical %uint %12008 %uint_20
      %12037 = OpBitwiseOr %uint %11941 %12036
      %12038 = OpULessThan %bool %12035 %uint_3
               OpSelectionMerge %12039 None
               OpBranchConditional %12038 %12040 %12041
      %12041 = OpLabel
      %12042 = OpIAdd %uint %11431 %uint_4294967294
      %12043 = OpCompositeExtract %uint %10695 0
      %12044 = OpCompositeExtract %uint %10695 1
      %12045 = OpCompositeConstruct %v3uint %12043 %12044 %12042
               OpImageWrite %10696 %12045 %12037 None
               OpBranch %12039
      %12040 = OpLabel
      %12046 = OpIEqual %bool %12035 %uint_0
      %12047 = OpSelect %uint %12046 %12037 %12034
      %12048 = OpIEqual %bool %12035 %uint_1
      %12049 = OpSelect %uint %12048 %12037 %12033
      %12050 = OpIEqual %bool %12035 %uint_2
      %12051 = OpSelect %uint %12050 %12037 %12032
               OpBranch %12039
      %12039 = OpLabel
      %12052 = OpPhi %uint %12032 %12041 %12051 %12040
      %12053 = OpPhi %uint %12033 %12041 %12049 %12040
      %12054 = OpPhi %uint %12034 %12041 %12047 %12040
      %12055 = OpIAdd %uint %11431 %uint_2
      %12056 = OpShiftLeftLogical %uint %12010 %uint_20
      %12057 = OpBitwiseOr %uint %11994 %12056
      %12058 = OpULessThan %bool %12055 %uint_3
               OpSelectionMerge %12059 None
               OpBranchConditional %12058 %12060 %12061
      %12061 = OpLabel
      %12062 = OpIAdd %uint %11431 %uint_4294967295
      %12063 = OpCompositeExtract %uint %10695 0
      %12064 = OpCompositeExtract %uint %10695 1
      %12065 = OpCompositeConstruct %v3uint %12063 %12064 %12062
               OpImageWrite %10696 %12065 %12057 None
               OpBranch %12059
      %12060 = OpLabel
      %12066 = OpIEqual %bool %12055 %uint_0
      %12067 = OpSelect %uint %12066 %12057 %12054
      %12068 = OpIEqual %bool %12055 %uint_1
      %12069 = OpSelect %uint %12068 %12057 %12053
      %12070 = OpIEqual %bool %12055 %uint_2
      %12071 = OpSelect %uint %12070 %12057 %12052
               OpBranch %12059
      %12059 = OpLabel
      %12072 = OpPhi %uint %12052 %12061 %12071 %12060
      %12073 = OpPhi %uint %12053 %12061 %12069 %12060
      %12074 = OpPhi %uint %12054 %12061 %12067 %12060
      %12075 = OpIAdd %uint %11431 %uint_3
               OpBranch %11705
      %11705 = OpLabel
      %12076 = OpPhi %uint %11882 %11709 %uint_0 %12059
      %12077 = OpPhi %uint %11878 %11709 %12072 %12059
      %12078 = OpPhi %uint %11879 %11709 %12073 %12059
      %12079 = OpPhi %uint %11880 %11709 %12074 %12059
      %12080 = OpPhi %uint %11881 %11709 %12075 %12059
               OpBranch %11699
      %11700 = OpLabel
      %12081 = OpVectorShuffle %v3float %10698 %459 0 1 2
      %12082 = OpFSub %float %8386 %float_0_5
      %12083 = OpFMul %float %12082 %float_0_00787401572
      %12084 = OpFMul %float %12082 %float_0_0158730168
      %12085 = OpCompositeConstruct %v3float %12083 %12083 %12084
      %12086 = OpExtInst %v3float %1 FClamp %12081 %105 %130
      %12087 = OpCompositeExtract %float %12086 0
               OpSelectionMerge %12088 None
               OpSwitch %uint_0 %12089
      %12089 = OpLabel
      %12090 = OpFOrdLessThan %bool %12087 %float_0_00313066994
               OpSelectionMerge %12091 None
               OpBranchConditional %12090 %12092 %12091
      %12092 = OpLabel
      %12093 = OpFMul %float %12087 %float_12_9200001
               OpBranch %12088
      %12091 = OpLabel
      %12094 = OpExtInst %float %1 Pow %12087 %float_0_416666657
      %12095 = OpExtInst %float %1 Fma %12094 %float_1_05499995 %float_n0_0549999997
               OpBranch %12088
      %12088 = OpLabel
      %12096 = OpPhi %float %12093 %12092 %12095 %12091
      %12097 = OpCompositeExtract %float %12086 1
               OpSelectionMerge %12098 None
               OpSwitch %uint_0 %12099
      %12099 = OpLabel
      %12100 = OpFOrdLessThan %bool %12097 %float_0_00313066994
               OpSelectionMerge %12101 None
               OpBranchConditional %12100 %12102 %12101
      %12102 = OpLabel
      %12103 = OpFMul %float %12097 %float_12_9200001
               OpBranch %12098
      %12101 = OpLabel
      %12104 = OpExtInst %float %1 Pow %12097 %float_0_416666657
      %12105 = OpExtInst %float %1 Fma %12104 %float_1_05499995 %float_n0_0549999997
               OpBranch %12098
      %12098 = OpLabel
      %12106 = OpPhi %float %12103 %12102 %12105 %12101
      %12107 = OpCompositeExtract %float %12086 2
               OpSelectionMerge %12108 None
               OpSwitch %uint_0 %12109
      %12109 = OpLabel
      %12110 = OpFOrdLessThan %bool %12107 %float_0_00313066994
               OpSelectionMerge %12111 None
               OpBranchConditional %12110 %12112 %12111
      %12112 = OpLabel
      %12113 = OpFMul %float %12107 %float_12_9200001
               OpBranch %12108
      %12111 = OpLabel
      %12114 = OpExtInst %float %1 Pow %12107 %float_0_416666657
      %12115 = OpExtInst %float %1 Fma %12114 %float_1_05499995 %float_n0_0549999997
               OpBranch %12108
      %12108 = OpLabel
      %12116 = OpPhi %float %12113 %12112 %12115 %12111
      %12117 = OpCompositeConstruct %v3float %12096 %12106 %12116
      %12118 = OpBitcast %v3uint %12117
      %12119 = OpBitwiseAnd %v3uint %12118 %349
      %12120 = OpExtInst %v3uint %1 UMin %12119 %500
      %12121 = OpConvertUToF %v3float %12120
      %12122 = OpExtInst %v3float %1 Fma %12085 %12121 %12117
      %12123 = OpExtInst %v3float %1 FClamp %12122 %105 %130
      %12124 = OpCompositeExtract %float %12123 0
      %12125 = OpFMul %float %12124 %float_127
      %12126 = OpConvertFToU %uint %12125
      %12127 = OpShiftLeftLogical %uint %12126 %uint_0
      %12128 = OpCompositeExtract %float %12123 1
      %12129 = OpFMul %float %12128 %float_127
      %12130 = OpConvertFToU %uint %12129
      %12131 = OpShiftLeftLogical %uint %12130 %uint_7
      %12132 = OpCompositeExtract %float %12123 2
      %12133 = OpFMul %float %12132 %float_63
      %12134 = OpConvertFToU %uint %12133
      %12135 = OpShiftLeftLogical %uint %12134 %uint_14
      %12136 = OpBitwiseOr %uint %12127 %12131
      %12137 = OpBitwiseOr %uint %12136 %12135
      %12138 = OpVectorShuffle %v3float %10708 %10708 0 1 2
      %12139 = OpExtInst %v3float %1 FClamp %12138 %105 %130
      %12140 = OpCompositeExtract %float %12139 0
               OpSelectionMerge %12141 None
               OpSwitch %uint_0 %12142
      %12142 = OpLabel
      %12143 = OpFOrdLessThan %bool %12140 %float_0_00313066994
               OpSelectionMerge %12144 None
               OpBranchConditional %12143 %12145 %12144
      %12145 = OpLabel
      %12146 = OpFMul %float %12140 %float_12_9200001
               OpBranch %12141
      %12144 = OpLabel
      %12147 = OpExtInst %float %1 Pow %12140 %float_0_416666657
      %12148 = OpExtInst %float %1 Fma %12147 %float_1_05499995 %float_n0_0549999997
               OpBranch %12141
      %12141 = OpLabel
      %12149 = OpPhi %float %12146 %12145 %12148 %12144
      %12150 = OpCompositeExtract %float %12139 1
               OpSelectionMerge %12151 None
               OpSwitch %uint_0 %12152
      %12152 = OpLabel
      %12153 = OpFOrdLessThan %bool %12150 %float_0_00313066994
               OpSelectionMerge %12154 None
               OpBranchConditional %12153 %12155 %12154
      %12155 = OpLabel
      %12156 = OpFMul %float %12150 %float_12_9200001
               OpBranch %12151
      %12154 = OpLabel
      %12157 = OpExtInst %float %1 Pow %12150 %float_0_416666657
      %12158 = OpExtInst %float %1 Fma %12157 %float_1_05499995 %float_n0_0549999997
               OpBranch %12151
      %12151 = OpLabel
      %12159 = OpPhi %float %12156 %12155 %12158 %12154
      %12160 = OpCompositeExtract %float %12139 2
               OpSelectionMerge %12161 None
               OpSwitch %uint_0 %12162
      %12162 = OpLabel
      %12163 = OpFOrdLessThan %bool %12160 %float_0_00313066994
               OpSelectionMerge %12164 None
               OpBranchConditional %12163 %12165 %12164
      %12165 = OpLabel
      %12166 = OpFMul %float %12160 %float_12_9200001
               OpBranch %12161
      %12164 = OpLabel
      %12167 = OpExtInst %float %1 Pow %12160 %float_0_416666657
      %12168 = OpExtInst %float %1 Fma %12167 %float_1_05499995 %float_n0_0549999997
               OpBranch %12161
      %12161 = OpLabel
      %12169 = OpPhi %float %12166 %12165 %12168 %12164
      %12170 = OpCompositeConstruct %v3float %12149 %12159 %12169
      %12171 = OpBitcast %v3uint %12170
      %12172 = OpBitwiseAnd %v3uint %12171 %349
      %12173 = OpExtInst %v3uint %1 UMin %12172 %500
      %12174 = OpConvertUToF %v3float %12173
      %12175 = OpExtInst %v3float %1 Fma %12085 %12174 %12170
      %12176 = OpExtInst %v3float %1 FClamp %12175 %105 %130
      %12177 = OpCompositeExtract %float %12176 0
      %12178 = OpFMul %float %12177 %float_127
      %12179 = OpConvertFToU %uint %12178
      %12180 = OpShiftLeftLogical %uint %12179 %uint_0
      %12181 = OpCompositeExtract %float %12176 1
      %12182 = OpFMul %float %12181 %float_127
      %12183 = OpConvertFToU %uint %12182
      %12184 = OpShiftLeftLogical %uint %12183 %uint_7
      %12185 = OpCompositeExtract %float %12176 2
      %12186 = OpFMul %float %12185 %float_63
      %12187 = OpConvertFToU %uint %12186
      %12188 = OpShiftLeftLogical %uint %12187 %uint_14
      %12189 = OpBitwiseOr %uint %12180 %12184
      %12190 = OpBitwiseOr %uint %12189 %12188
               OpSelectionMerge %12191 None
               OpSwitch %uint_0 %12192
      %12192 = OpLabel
               OpSelectionMerge %12193 None
               OpBranchConditional %true %12194 %12193
      %12194 = OpLabel
               OpBranch %12191
      %12193 = OpLabel
      %12195 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12191
      %12191 = OpLabel
      %12196 = OpPhi %float %float_0 %12194 %12195 %12193
               OpSelectionMerge %12197 None
               OpSwitch %uint_0 %12198
      %12198 = OpLabel
               OpSelectionMerge %12199 None
               OpBranchConditional %true %12200 %12199
      %12200 = OpLabel
               OpBranch %12197
      %12199 = OpLabel
      %12201 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12197
      %12197 = OpLabel
      %12202 = OpPhi %float %float_0 %12200 %12201 %12199
               OpSelectionMerge %12203 None
               OpSwitch %uint_0 %12204
      %12204 = OpLabel
               OpSelectionMerge %12205 None
               OpBranchConditional %true %12206 %12205
      %12206 = OpLabel
               OpBranch %12203
      %12205 = OpLabel
      %12207 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12203
      %12203 = OpLabel
      %12208 = OpPhi %float %float_0 %12206 %12207 %12205
      %12209 = OpCompositeConstruct %v3float %12196 %12202 %12208
      %12210 = OpBitcast %v3uint %12209
      %12211 = OpBitwiseAnd %v3uint %12210 %349
      %12212 = OpExtInst %v3uint %1 UMin %12211 %500
      %12213 = OpConvertUToF %v3float %12212
      %12214 = OpExtInst %v3float %1 Fma %12085 %12213 %12209
      %12215 = OpExtInst %v3float %1 FClamp %12214 %105 %130
      %12216 = OpCompositeExtract %float %12215 0
      %12217 = OpFMul %float %12216 %float_127
      %12218 = OpConvertFToU %uint %12217
      %12219 = OpShiftLeftLogical %uint %12218 %uint_0
      %12220 = OpCompositeExtract %float %12215 1
      %12221 = OpFMul %float %12220 %float_127
      %12222 = OpConvertFToU %uint %12221
      %12223 = OpShiftLeftLogical %uint %12222 %uint_7
      %12224 = OpCompositeExtract %float %12215 2
      %12225 = OpFMul %float %12224 %float_63
      %12226 = OpConvertFToU %uint %12225
      %12227 = OpShiftLeftLogical %uint %12226 %uint_14
      %12228 = OpBitwiseOr %uint %12219 %12223
      %12229 = OpBitwiseOr %uint %12228 %12227
      %12230 = OpBitwiseOr %uint %11689 %uint_0
      %12231 = OpULessThan %bool %11431 %uint_3
               OpSelectionMerge %12232 None
               OpBranchConditional %12231 %12233 %12234
      %12234 = OpLabel
      %12235 = OpISub %uint %11431 %uint_3
      %12236 = OpCompositeExtract %uint %10695 0
      %12237 = OpCompositeExtract %uint %10695 1
      %12238 = OpCompositeConstruct %v3uint %12236 %12237 %12235
               OpImageWrite %10696 %12238 %12230 None
               OpBranch %12232
      %12233 = OpLabel
      %12239 = OpIEqual %bool %11431 %uint_0
      %12240 = OpSelect %uint %12239 %12230 %11430
      %12241 = OpIEqual %bool %11431 %uint_1
      %12242 = OpSelect %uint %12241 %12230 %11429
      %12243 = OpIEqual %bool %11431 %uint_2
      %12244 = OpSelect %uint %12243 %12230 %uint_0
               OpBranch %12232
      %12232 = OpLabel
      %12245 = OpPhi %uint %uint_0 %12234 %12244 %12233
      %12246 = OpPhi %uint %11429 %12234 %12242 %12233
      %12247 = OpPhi %uint %11430 %12234 %12240 %12233
      %12248 = OpIAdd %uint %11431 %uint_1
      %12249 = OpBitwiseAnd %uint %12229 %uint_1047552
      %12250 = OpShiftLeftLogical %uint %12249 %uint_10
      %12251 = OpBitwiseOr %uint %12137 %12250
      %12252 = OpULessThan %bool %12248 %uint_3
               OpSelectionMerge %12253 None
               OpBranchConditional %12252 %12254 %12255
      %12255 = OpLabel
      %12256 = OpIAdd %uint %11431 %uint_4294967294
      %12257 = OpCompositeExtract %uint %10695 0
      %12258 = OpCompositeExtract %uint %10695 1
      %12259 = OpCompositeConstruct %v3uint %12257 %12258 %12256
               OpImageWrite %10696 %12259 %12251 None
               OpBranch %12253
      %12254 = OpLabel
      %12260 = OpIEqual %bool %12248 %uint_0
      %12261 = OpSelect %uint %12260 %12251 %12247
      %12262 = OpIEqual %bool %12248 %uint_1
      %12263 = OpSelect %uint %12262 %12251 %12246
      %12264 = OpIEqual %bool %12248 %uint_2
      %12265 = OpSelect %uint %12264 %12251 %12245
               OpBranch %12253
      %12253 = OpLabel
      %12266 = OpPhi %uint %12245 %12255 %12265 %12254
      %12267 = OpPhi %uint %12246 %12255 %12263 %12254
      %12268 = OpPhi %uint %12247 %12255 %12261 %12254
      %12269 = OpIAdd %uint %11431 %uint_2
      %12270 = OpBitwiseAnd %uint %12229 %uint_1023
      %12271 = OpShiftLeftLogical %uint %12270 %uint_20
      %12272 = OpBitwiseOr %uint %12190 %12271
      %12273 = OpULessThan %bool %12269 %uint_3
               OpSelectionMerge %12274 None
               OpBranchConditional %12273 %12275 %12276
      %12276 = OpLabel
      %12277 = OpIAdd %uint %11431 %uint_4294967295
      %12278 = OpCompositeExtract %uint %10695 0
      %12279 = OpCompositeExtract %uint %10695 1
      %12280 = OpCompositeConstruct %v3uint %12278 %12279 %12277
               OpImageWrite %10696 %12280 %12272 None
               OpBranch %12274
      %12275 = OpLabel
      %12281 = OpIEqual %bool %12269 %uint_0
      %12282 = OpSelect %uint %12281 %12272 %12268
      %12283 = OpIEqual %bool %12269 %uint_1
      %12284 = OpSelect %uint %12283 %12272 %12267
      %12285 = OpIEqual %bool %12269 %uint_2
      %12286 = OpSelect %uint %12285 %12272 %12266
               OpBranch %12274
      %12274 = OpLabel
      %12287 = OpPhi %uint %12266 %12276 %12286 %12275
      %12288 = OpPhi %uint %12267 %12276 %12284 %12275
      %12289 = OpPhi %uint %12268 %12276 %12282 %12275
      %12290 = OpIAdd %uint %11431 %uint_3
               OpBranch %11699
      %11699 = OpLabel
      %12291 = OpPhi %uint %12076 %11705 %uint_0 %12274
      %12292 = OpPhi %uint %12077 %11705 %12287 %12274
      %12293 = OpPhi %uint %12078 %11705 %12288 %12274
      %12294 = OpPhi %uint %12079 %11705 %12289 %12274
      %12295 = OpPhi %uint %12080 %11705 %12290 %12274
               OpBranch %11695
      %11696 = OpLabel
      %12296 = OpVectorShuffle %v3float %10698 %459 0 1 2
      %12297 = OpFSub %float %8386 %float_0_5
      %12298 = OpFMul %float %12297 %float_0_00787401572
      %12299 = OpFMul %float %12297 %float_0_0158730168
      %12300 = OpCompositeConstruct %v3float %12298 %12298 %12299
      %12301 = OpExtInst %v3float %1 FClamp %12296 %105 %130
      %12302 = OpCompositeExtract %float %12301 0
               OpSelectionMerge %12303 None
               OpSwitch %uint_0 %12304
      %12304 = OpLabel
      %12305 = OpFOrdLessThan %bool %12302 %float_0_00313066994
               OpSelectionMerge %12306 None
               OpBranchConditional %12305 %12307 %12306
      %12307 = OpLabel
      %12308 = OpFMul %float %12302 %float_12_9200001
               OpBranch %12303
      %12306 = OpLabel
      %12309 = OpExtInst %float %1 Pow %12302 %float_0_416666657
      %12310 = OpExtInst %float %1 Fma %12309 %float_1_05499995 %float_n0_0549999997
               OpBranch %12303
      %12303 = OpLabel
      %12311 = OpPhi %float %12308 %12307 %12310 %12306
      %12312 = OpCompositeExtract %float %12301 1
               OpSelectionMerge %12313 None
               OpSwitch %uint_0 %12314
      %12314 = OpLabel
      %12315 = OpFOrdLessThan %bool %12312 %float_0_00313066994
               OpSelectionMerge %12316 None
               OpBranchConditional %12315 %12317 %12316
      %12317 = OpLabel
      %12318 = OpFMul %float %12312 %float_12_9200001
               OpBranch %12313
      %12316 = OpLabel
      %12319 = OpExtInst %float %1 Pow %12312 %float_0_416666657
      %12320 = OpExtInst %float %1 Fma %12319 %float_1_05499995 %float_n0_0549999997
               OpBranch %12313
      %12313 = OpLabel
      %12321 = OpPhi %float %12318 %12317 %12320 %12316
      %12322 = OpCompositeExtract %float %12301 2
               OpSelectionMerge %12323 None
               OpSwitch %uint_0 %12324
      %12324 = OpLabel
      %12325 = OpFOrdLessThan %bool %12322 %float_0_00313066994
               OpSelectionMerge %12326 None
               OpBranchConditional %12325 %12327 %12326
      %12327 = OpLabel
      %12328 = OpFMul %float %12322 %float_12_9200001
               OpBranch %12323
      %12326 = OpLabel
      %12329 = OpExtInst %float %1 Pow %12322 %float_0_416666657
      %12330 = OpExtInst %float %1 Fma %12329 %float_1_05499995 %float_n0_0549999997
               OpBranch %12323
      %12323 = OpLabel
      %12331 = OpPhi %float %12328 %12327 %12330 %12326
      %12332 = OpCompositeConstruct %v3float %12311 %12321 %12331
      %12333 = OpBitcast %v3uint %12332
      %12334 = OpBitwiseAnd %v3uint %12333 %349
      %12335 = OpExtInst %v3uint %1 UMin %12334 %500
      %12336 = OpConvertUToF %v3float %12335
      %12337 = OpExtInst %v3float %1 Fma %12300 %12336 %12332
      %12338 = OpExtInst %v3float %1 FClamp %12337 %105 %130
      %12339 = OpCompositeExtract %float %12338 0
      %12340 = OpFMul %float %12339 %float_127
      %12341 = OpConvertFToU %uint %12340
      %12342 = OpShiftLeftLogical %uint %12341 %uint_0
      %12343 = OpCompositeExtract %float %12338 1
      %12344 = OpFMul %float %12343 %float_127
      %12345 = OpConvertFToU %uint %12344
      %12346 = OpShiftLeftLogical %uint %12345 %uint_7
      %12347 = OpCompositeExtract %float %12338 2
      %12348 = OpFMul %float %12347 %float_63
      %12349 = OpConvertFToU %uint %12348
      %12350 = OpShiftLeftLogical %uint %12349 %uint_14
      %12351 = OpBitwiseOr %uint %12342 %12346
      %12352 = OpBitwiseOr %uint %12351 %12350
      %12353 = OpExtInst %float %1 FClamp %10701 %float_0 %float_1
      %12354 = OpFMul %float %12353 %float_255
      %12355 = OpConvertFToU %uint %12354
      %12356 = OpShiftLeftLogical %uint %12355 %uint_8
      %12357 = OpExtInst %float %1 FClamp %10705 %float_0 %float_1
      %12358 = OpFMul %float %12357 %float_255
      %12359 = OpConvertFToU %uint %12358
      %12360 = OpShiftLeftLogical %uint %12359 %uint_16
      %12361 = OpBitwiseOr %uint %uint_0 %12356
      %12362 = OpBitwiseOr %uint %12361 %12360
      %12363 = OpBitwiseOr %uint %12362 %uint_0
      %12364 = OpBitwiseOr %uint %11689 %uint_0
      %12365 = OpULessThan %bool %11431 %uint_3
               OpSelectionMerge %12366 None
               OpBranchConditional %12365 %12367 %12368
      %12368 = OpLabel
      %12369 = OpISub %uint %11431 %uint_3
      %12370 = OpCompositeExtract %uint %10695 0
      %12371 = OpCompositeExtract %uint %10695 1
      %12372 = OpCompositeConstruct %v3uint %12370 %12371 %12369
               OpImageWrite %10696 %12372 %12364 None
               OpBranch %12366
      %12367 = OpLabel
      %12373 = OpIEqual %bool %11431 %uint_0
      %12374 = OpSelect %uint %12373 %12364 %11430
      %12375 = OpIEqual %bool %11431 %uint_1
      %12376 = OpSelect %uint %12375 %12364 %11429
      %12377 = OpIEqual %bool %11431 %uint_2
      %12378 = OpSelect %uint %12377 %12364 %uint_0
               OpBranch %12366
      %12366 = OpLabel
      %12379 = OpPhi %uint %uint_0 %12368 %12378 %12367
      %12380 = OpPhi %uint %11429 %12368 %12376 %12367
      %12381 = OpPhi %uint %11430 %12368 %12374 %12367
      %12382 = OpIAdd %uint %11431 %uint_1
      %12383 = OpBitwiseOr %uint %12352 %uint_0
      %12384 = OpULessThan %bool %12382 %uint_3
               OpSelectionMerge %12385 None
               OpBranchConditional %12384 %12386 %12387
      %12387 = OpLabel
      %12388 = OpIAdd %uint %11431 %uint_4294967294
      %12389 = OpCompositeExtract %uint %10695 0
      %12390 = OpCompositeExtract %uint %10695 1
      %12391 = OpCompositeConstruct %v3uint %12389 %12390 %12388
               OpImageWrite %10696 %12391 %12383 None
               OpBranch %12385
      %12386 = OpLabel
      %12392 = OpIEqual %bool %12382 %uint_0
      %12393 = OpSelect %uint %12392 %12383 %12381
      %12394 = OpIEqual %bool %12382 %uint_1
      %12395 = OpSelect %uint %12394 %12383 %12380
      %12396 = OpIEqual %bool %12382 %uint_2
      %12397 = OpSelect %uint %12396 %12383 %12379
               OpBranch %12385
      %12385 = OpLabel
      %12398 = OpPhi %uint %12379 %12387 %12397 %12386
      %12399 = OpPhi %uint %12380 %12387 %12395 %12386
      %12400 = OpPhi %uint %12381 %12387 %12393 %12386
      %12401 = OpIAdd %uint %11431 %uint_2
      %12402 = OpBitwiseOr %uint %12363 %uint_0
      %12403 = OpULessThan %bool %12401 %uint_3
               OpSelectionMerge %12404 None
               OpBranchConditional %12403 %12405 %12406
      %12406 = OpLabel
      %12407 = OpIAdd %uint %11431 %uint_4294967295
      %12408 = OpCompositeExtract %uint %10695 0
      %12409 = OpCompositeExtract %uint %10695 1
      %12410 = OpCompositeConstruct %v3uint %12408 %12409 %12407
               OpImageWrite %10696 %12410 %12402 None
               OpBranch %12404
      %12405 = OpLabel
      %12411 = OpIEqual %bool %12401 %uint_0
      %12412 = OpSelect %uint %12411 %12402 %12400
      %12413 = OpIEqual %bool %12401 %uint_1
      %12414 = OpSelect %uint %12413 %12402 %12399
      %12415 = OpIEqual %bool %12401 %uint_2
      %12416 = OpSelect %uint %12415 %12402 %12398
               OpBranch %12404
      %12404 = OpLabel
      %12417 = OpPhi %uint %12398 %12406 %12416 %12405
      %12418 = OpPhi %uint %12399 %12406 %12414 %12405
      %12419 = OpPhi %uint %12400 %12406 %12412 %12405
      %12420 = OpIAdd %uint %11431 %uint_3
               OpBranch %11695
      %11695 = OpLabel
      %12421 = OpPhi %uint %12291 %11699 %uint_0 %12404
      %12422 = OpPhi %uint %12292 %11699 %12417 %12404
      %12423 = OpPhi %uint %12293 %11699 %12418 %12404
      %12424 = OpPhi %uint %12294 %11699 %12419 %12404
      %12425 = OpPhi %uint %12295 %11699 %12420 %12404
               OpBranch %11691
      %11692 = OpLabel
      %12426 = OpBitwiseAnd %uint %11682 %uint_2047
      %12427 = OpShiftLeftLogical %uint %12426 %uint_19
      %12428 = OpBitwiseOr %uint %11689 %12427
      %12429 = OpULessThan %bool %11431 %uint_3
               OpSelectionMerge %12430 None
               OpBranchConditional %12429 %12431 %12432
      %12432 = OpLabel
      %12433 = OpISub %uint %11431 %uint_3
      %12434 = OpCompositeExtract %uint %10695 0
      %12435 = OpCompositeExtract %uint %10695 1
      %12436 = OpCompositeConstruct %v3uint %12434 %12435 %12433
               OpImageWrite %10696 %12436 %12428 None
               OpBranch %12430
      %12431 = OpLabel
      %12437 = OpIEqual %bool %11431 %uint_0
      %12438 = OpSelect %uint %12437 %12428 %11430
      %12439 = OpIEqual %bool %11431 %uint_1
      %12440 = OpSelect %uint %12439 %12428 %11429
      %12441 = OpIEqual %bool %11431 %uint_2
      %12442 = OpSelect %uint %12441 %12428 %uint_0
               OpBranch %12430
      %12430 = OpLabel
      %12443 = OpPhi %uint %uint_0 %12432 %12442 %12431
      %12444 = OpPhi %uint %11429 %12432 %12440 %12431
      %12445 = OpPhi %uint %11430 %12432 %12438 %12431
      %12446 = OpIAdd %uint %11431 %uint_1
               OpBranch %11691
      %11691 = OpLabel
      %12447 = OpPhi %uint %12421 %11695 %11682 %12430
      %12448 = OpPhi %uint %12422 %11695 %12443 %12430
      %12449 = OpPhi %uint %12423 %11695 %12444 %12430
      %12450 = OpPhi %uint %12424 %11695 %12445 %12430
      %12451 = OpPhi %uint %12425 %11695 %12446 %12430
               OpBranch %11447
      %11447 = OpLabel
      %12452 = OpPhi %uint %11676 %11450 %12447 %11691
      %12453 = OpPhi %uint %11677 %11450 %12448 %11691
      %12454 = OpPhi %uint %11678 %11450 %12449 %11691
      %12455 = OpPhi %uint %11679 %11450 %12450 %11691
      %12456 = OpPhi %uint %11680 %11450 %12451 %11691
               OpBranch %11443
      %11444 = OpLabel
      %12457 = OpVectorShuffle %v3float %10698 %459 0 1 2
      %12458 = OpFSub %float %8386 %float_0_5
      %12459 = OpFMul %float %12458 %float_0_00787401572
      %12460 = OpFMul %float %12458 %float_0_0158730168
      %12461 = OpCompositeConstruct %v3float %12459 %12459 %12460
      %12462 = OpExtInst %v3float %1 FClamp %12457 %105 %130
      %12463 = OpCompositeExtract %float %12462 0
               OpSelectionMerge %12464 None
               OpSwitch %uint_0 %12465
      %12465 = OpLabel
      %12466 = OpFOrdLessThan %bool %12463 %float_0_00313066994
               OpSelectionMerge %12467 None
               OpBranchConditional %12466 %12468 %12467
      %12468 = OpLabel
      %12469 = OpFMul %float %12463 %float_12_9200001
               OpBranch %12464
      %12467 = OpLabel
      %12470 = OpExtInst %float %1 Pow %12463 %float_0_416666657
      %12471 = OpExtInst %float %1 Fma %12470 %float_1_05499995 %float_n0_0549999997
               OpBranch %12464
      %12464 = OpLabel
      %12472 = OpPhi %float %12469 %12468 %12471 %12467
      %12473 = OpCompositeExtract %float %12462 1
               OpSelectionMerge %12474 None
               OpSwitch %uint_0 %12475
      %12475 = OpLabel
      %12476 = OpFOrdLessThan %bool %12473 %float_0_00313066994
               OpSelectionMerge %12477 None
               OpBranchConditional %12476 %12478 %12477
      %12478 = OpLabel
      %12479 = OpFMul %float %12473 %float_12_9200001
               OpBranch %12474
      %12477 = OpLabel
      %12480 = OpExtInst %float %1 Pow %12473 %float_0_416666657
      %12481 = OpExtInst %float %1 Fma %12480 %float_1_05499995 %float_n0_0549999997
               OpBranch %12474
      %12474 = OpLabel
      %12482 = OpPhi %float %12479 %12478 %12481 %12477
      %12483 = OpCompositeExtract %float %12462 2
               OpSelectionMerge %12484 None
               OpSwitch %uint_0 %12485
      %12485 = OpLabel
      %12486 = OpFOrdLessThan %bool %12483 %float_0_00313066994
               OpSelectionMerge %12487 None
               OpBranchConditional %12486 %12488 %12487
      %12488 = OpLabel
      %12489 = OpFMul %float %12483 %float_12_9200001
               OpBranch %12484
      %12487 = OpLabel
      %12490 = OpExtInst %float %1 Pow %12483 %float_0_416666657
      %12491 = OpExtInst %float %1 Fma %12490 %float_1_05499995 %float_n0_0549999997
               OpBranch %12484
      %12484 = OpLabel
      %12492 = OpPhi %float %12489 %12488 %12491 %12487
      %12493 = OpCompositeConstruct %v3float %12472 %12482 %12492
      %12494 = OpBitcast %v3uint %12493
      %12495 = OpBitwiseAnd %v3uint %12494 %349
      %12496 = OpExtInst %v3uint %1 UMin %12495 %500
      %12497 = OpConvertUToF %v3float %12496
      %12498 = OpExtInst %v3float %1 Fma %12461 %12497 %12493
      %12499 = OpExtInst %v3float %1 FClamp %12498 %105 %130
      %12500 = OpCompositeExtract %float %12499 0
      %12501 = OpFMul %float %12500 %float_127
      %12502 = OpConvertFToU %uint %12501
      %12503 = OpShiftLeftLogical %uint %12502 %uint_0
      %12504 = OpCompositeExtract %float %12499 1
      %12505 = OpFMul %float %12504 %float_127
      %12506 = OpConvertFToU %uint %12505
      %12507 = OpShiftLeftLogical %uint %12506 %uint_7
      %12508 = OpCompositeExtract %float %12499 2
      %12509 = OpFMul %float %12508 %float_63
      %12510 = OpConvertFToU %uint %12509
      %12511 = OpShiftLeftLogical %uint %12510 %uint_14
      %12512 = OpBitwiseOr %uint %12503 %12507
      %12513 = OpBitwiseOr %uint %12512 %12511
      %12514 = OpBitwiseAnd %uint %12513 %uint_4095
      %12515 = OpShiftRightLogical %uint %12513 %uint_12
      %12516 = OpBitwiseAnd %uint %12515 %uint_255
      %12517 = OpVectorShuffle %v3float %10708 %10708 0 1 2
      %12518 = OpExtInst %v3float %1 FClamp %12517 %105 %130
      %12519 = OpCompositeExtract %float %12518 0
               OpSelectionMerge %12520 None
               OpSwitch %uint_0 %12521
      %12521 = OpLabel
      %12522 = OpFOrdLessThan %bool %12519 %float_0_00313066994
               OpSelectionMerge %12523 None
               OpBranchConditional %12522 %12524 %12523
      %12524 = OpLabel
      %12525 = OpFMul %float %12519 %float_12_9200001
               OpBranch %12520
      %12523 = OpLabel
      %12526 = OpExtInst %float %1 Pow %12519 %float_0_416666657
      %12527 = OpExtInst %float %1 Fma %12526 %float_1_05499995 %float_n0_0549999997
               OpBranch %12520
      %12520 = OpLabel
      %12528 = OpPhi %float %12525 %12524 %12527 %12523
      %12529 = OpCompositeExtract %float %12518 1
               OpSelectionMerge %12530 None
               OpSwitch %uint_0 %12531
      %12531 = OpLabel
      %12532 = OpFOrdLessThan %bool %12529 %float_0_00313066994
               OpSelectionMerge %12533 None
               OpBranchConditional %12532 %12534 %12533
      %12534 = OpLabel
      %12535 = OpFMul %float %12529 %float_12_9200001
               OpBranch %12530
      %12533 = OpLabel
      %12536 = OpExtInst %float %1 Pow %12529 %float_0_416666657
      %12537 = OpExtInst %float %1 Fma %12536 %float_1_05499995 %float_n0_0549999997
               OpBranch %12530
      %12530 = OpLabel
      %12538 = OpPhi %float %12535 %12534 %12537 %12533
      %12539 = OpCompositeExtract %float %12518 2
               OpSelectionMerge %12540 None
               OpSwitch %uint_0 %12541
      %12541 = OpLabel
      %12542 = OpFOrdLessThan %bool %12539 %float_0_00313066994
               OpSelectionMerge %12543 None
               OpBranchConditional %12542 %12544 %12543
      %12544 = OpLabel
      %12545 = OpFMul %float %12539 %float_12_9200001
               OpBranch %12540
      %12543 = OpLabel
      %12546 = OpExtInst %float %1 Pow %12539 %float_0_416666657
      %12547 = OpExtInst %float %1 Fma %12546 %float_1_05499995 %float_n0_0549999997
               OpBranch %12540
      %12540 = OpLabel
      %12548 = OpPhi %float %12545 %12544 %12547 %12543
      %12549 = OpCompositeConstruct %v3float %12528 %12538 %12548
      %12550 = OpBitcast %v3uint %12549
      %12551 = OpBitwiseAnd %v3uint %12550 %349
      %12552 = OpExtInst %v3uint %1 UMin %12551 %500
      %12553 = OpConvertUToF %v3float %12552
      %12554 = OpExtInst %v3float %1 Fma %12461 %12553 %12549
      %12555 = OpExtInst %v3float %1 FClamp %12554 %105 %130
      %12556 = OpCompositeExtract %float %12555 0
      %12557 = OpFMul %float %12556 %float_127
      %12558 = OpConvertFToU %uint %12557
      %12559 = OpShiftLeftLogical %uint %12558 %uint_0
      %12560 = OpCompositeExtract %float %12555 1
      %12561 = OpFMul %float %12560 %float_127
      %12562 = OpConvertFToU %uint %12561
      %12563 = OpShiftLeftLogical %uint %12562 %uint_7
      %12564 = OpCompositeExtract %float %12555 2
      %12565 = OpFMul %float %12564 %float_63
      %12566 = OpConvertFToU %uint %12565
      %12567 = OpShiftLeftLogical %uint %12566 %uint_14
      %12568 = OpBitwiseOr %uint %12559 %12563
      %12569 = OpBitwiseOr %uint %12568 %12567
      %12570 = OpBitwiseAnd %uint %11366 %uint_65535
      %12571 = OpShiftLeftLogical %uint %12570 %uint_0
      %12572 = OpBitwiseOr %uint %uint_0 %12571
      %12573 = OpShiftLeftLogical %uint %12516 %uint_8
      %12574 = OpBitwiseOr %uint %12573 %uint_0
      %12575 = OpBitwiseAnd %uint %12572 %uint_65535
      %12576 = OpShiftLeftLogical %uint %12574 %uint_16
      %12577 = OpBitwiseOr %uint %12575 %12576
      %12578 = OpULessThan %bool %11431 %uint_3
               OpSelectionMerge %12579 None
               OpBranchConditional %12578 %12580 %12581
      %12581 = OpLabel
      %12582 = OpISub %uint %11431 %uint_3
      %12583 = OpCompositeExtract %uint %10695 0
      %12584 = OpCompositeExtract %uint %10695 1
      %12585 = OpCompositeConstruct %v3uint %12583 %12584 %12582
               OpImageWrite %10696 %12585 %12577 None
               OpBranch %12579
      %12580 = OpLabel
      %12586 = OpIEqual %bool %11431 %uint_0
      %12587 = OpSelect %uint %12586 %12577 %11430
      %12588 = OpIEqual %bool %11431 %uint_1
      %12589 = OpSelect %uint %12588 %12577 %11429
      %12590 = OpIEqual %bool %11431 %uint_2
      %12591 = OpSelect %uint %12590 %12577 %uint_0
               OpBranch %12579
      %12579 = OpLabel
      %12592 = OpPhi %uint %uint_0 %12581 %12591 %12580
      %12593 = OpPhi %uint %11429 %12581 %12589 %12580
      %12594 = OpPhi %uint %11430 %12581 %12587 %12580
      %12595 = OpIAdd %uint %11431 %uint_1
      %12596 = OpShiftLeftLogical %uint %12514 %uint_20
      %12597 = OpBitwiseOr %uint %12569 %12596
      %12598 = OpULessThan %bool %12595 %uint_3
               OpSelectionMerge %12599 None
               OpBranchConditional %12598 %12600 %12601
      %12601 = OpLabel
      %12602 = OpIAdd %uint %11431 %uint_4294967294
      %12603 = OpCompositeExtract %uint %10695 0
      %12604 = OpCompositeExtract %uint %10695 1
      %12605 = OpCompositeConstruct %v3uint %12603 %12604 %12602
               OpImageWrite %10696 %12605 %12597 None
               OpBranch %12599
      %12600 = OpLabel
      %12606 = OpIEqual %bool %12595 %uint_0
      %12607 = OpSelect %uint %12606 %12597 %12594
      %12608 = OpIEqual %bool %12595 %uint_1
      %12609 = OpSelect %uint %12608 %12597 %12593
      %12610 = OpIEqual %bool %12595 %uint_2
      %12611 = OpSelect %uint %12610 %12597 %12592
               OpBranch %12599
      %12599 = OpLabel
      %12612 = OpPhi %uint %12592 %12601 %12611 %12600
      %12613 = OpPhi %uint %12593 %12601 %12609 %12600
      %12614 = OpPhi %uint %12594 %12601 %12607 %12600
      %12615 = OpIAdd %uint %11431 %uint_2
               OpBranch %11443
      %11443 = OpLabel
      %12616 = OpPhi %uint %12452 %11447 %uint_0 %12599
      %12617 = OpPhi %uint %12453 %11447 %12612 %12599
      %12618 = OpPhi %uint %12454 %11447 %12613 %12599
      %12619 = OpPhi %uint %12455 %11447 %12614 %12599
      %12620 = OpPhi %uint %12456 %11447 %12615 %12599
      %12621 = OpLogicalNot %bool %11442
      %12622 = OpLogicalAnd %bool %12621 %11381
      %12623 = OpIEqual %bool %10943 %uint_0
      %12624 = OpLogicalAnd %bool %12622 %12623
               OpSelectionMerge %12625 None
               OpBranchConditional %12624 %12626 %12625
      %12626 = OpLabel
      %12627 = OpShiftRightLogical %uint %12616 %uint_11
      %12628 = OpBitwiseAnd %uint %12627 %uint_7
               OpSelectionMerge %12629 None
               OpSwitch %12628 %12629 0 %12630 3 %12631 5 %12632
      %12632 = OpLabel
               OpSelectionMerge %12633 None
               OpBranchConditional %true %12634 %12633
      %12634 = OpLabel
      %12635 = OpExtInst %v2float %1 FAbs %559
      %12636 = OpFSub %v2float %315 %12635
      %12637 = OpVectorShuffle %v3float %459 %12636 4 5 2
               OpBranch %12633
      %12633 = OpLabel
      %12638 = OpPhi %v3float %553 %12632 %12637 %12634
      %12639 = OpVectorShuffle %v2float %12638 %12638 0 1
               OpSelectionMerge %12640 None
               OpBranchConditional %true %12641 %12640
      %12641 = OpLabel
      %12642 = OpExtInst %v2float %1 FAbs %559
      %12643 = OpFSub %v2float %315 %12642
      %12644 = OpVectorShuffle %v3float %459 %12643 4 5 2
               OpBranch %12640
      %12640 = OpLabel
      %12645 = OpPhi %v3float %553 %12633 %12644 %12641
      %12646 = OpVectorShuffle %v2float %12645 %12645 0 1
      %12647 = OpVectorShuffle %v3float %10698 %459 0 1 2
      %12648 = OpExtInst %v3float %1 FClamp %12647 %105 %130
      %12649 = OpCompositeExtract %float %12648 0
               OpSelectionMerge %12650 None
               OpSwitch %uint_0 %12651
      %12651 = OpLabel
      %12652 = OpFOrdLessThan %bool %12649 %float_0_00313066994
               OpSelectionMerge %12653 None
               OpBranchConditional %12652 %12654 %12653
      %12654 = OpLabel
      %12655 = OpFMul %float %12649 %float_12_9200001
               OpBranch %12650
      %12653 = OpLabel
      %12656 = OpExtInst %float %1 Pow %12649 %float_0_416666657
      %12657 = OpExtInst %float %1 Fma %12656 %float_1_05499995 %float_n0_0549999997
               OpBranch %12650
      %12650 = OpLabel
      %12658 = OpPhi %float %12655 %12654 %12657 %12653
      %12659 = OpCompositeExtract %float %12648 1
               OpSelectionMerge %12660 None
               OpSwitch %uint_0 %12661
      %12661 = OpLabel
      %12662 = OpFOrdLessThan %bool %12659 %float_0_00313066994
               OpSelectionMerge %12663 None
               OpBranchConditional %12662 %12664 %12663
      %12664 = OpLabel
      %12665 = OpFMul %float %12659 %float_12_9200001
               OpBranch %12660
      %12663 = OpLabel
      %12666 = OpExtInst %float %1 Pow %12659 %float_0_416666657
      %12667 = OpExtInst %float %1 Fma %12666 %float_1_05499995 %float_n0_0549999997
               OpBranch %12660
      %12660 = OpLabel
      %12668 = OpPhi %float %12665 %12664 %12667 %12663
      %12669 = OpCompositeExtract %float %12648 2
               OpSelectionMerge %12670 None
               OpSwitch %uint_0 %12671
      %12671 = OpLabel
      %12672 = OpFOrdLessThan %bool %12669 %float_0_00313066994
               OpSelectionMerge %12673 None
               OpBranchConditional %12672 %12674 %12673
      %12674 = OpLabel
      %12675 = OpFMul %float %12669 %float_12_9200001
               OpBranch %12670
      %12673 = OpLabel
      %12676 = OpExtInst %float %1 Pow %12669 %float_0_416666657
      %12677 = OpExtInst %float %1 Fma %12676 %float_1_05499995 %float_n0_0549999997
               OpBranch %12670
      %12670 = OpLabel
      %12678 = OpPhi %float %12675 %12674 %12677 %12673
      %12679 = OpExtInst %float %1 FClamp %12658 %float_0 %float_1
      %12680 = OpFMul %float %12679 %float_255
      %12681 = OpConvertFToU %uint %12680
      %12682 = OpShiftLeftLogical %uint %12681 %uint_0
      %12683 = OpExtInst %float %1 FClamp %12668 %float_0 %float_1
      %12684 = OpFMul %float %12683 %float_255
      %12685 = OpConvertFToU %uint %12684
      %12686 = OpShiftLeftLogical %uint %12685 %uint_8
      %12687 = OpExtInst %float %1 FClamp %12678 %float_0 %float_1
      %12688 = OpFMul %float %12687 %float_255
      %12689 = OpConvertFToU %uint %12688
      %12690 = OpShiftLeftLogical %uint %12689 %uint_16
      %12691 = OpBitwiseOr %uint %12682 %12686
      %12692 = OpBitwiseOr %uint %12691 %12690
      %12693 = OpBitwiseOr %uint %12692 %uint_0
      %12694 = OpULessThan %bool %12620 %uint_3
               OpSelectionMerge %12695 None
               OpBranchConditional %12694 %12696 %12697
      %12697 = OpLabel
      %12698 = OpISub %uint %12620 %uint_3
      %12699 = OpCompositeExtract %uint %10695 0
      %12700 = OpCompositeExtract %uint %10695 1
      %12701 = OpCompositeConstruct %v3uint %12699 %12700 %12698
               OpImageWrite %10696 %12701 %12693 None
               OpBranch %12695
      %12696 = OpLabel
      %12702 = OpIEqual %bool %12620 %uint_0
      %12703 = OpSelect %uint %12702 %12693 %12619
      %12704 = OpIEqual %bool %12620 %uint_1
      %12705 = OpSelect %uint %12704 %12693 %12618
      %12706 = OpIEqual %bool %12620 %uint_2
      %12707 = OpSelect %uint %12706 %12693 %12617
               OpBranch %12695
      %12695 = OpLabel
      %12708 = OpPhi %uint %12617 %12697 %12707 %12696
      %12709 = OpPhi %uint %12618 %12697 %12705 %12696
      %12710 = OpPhi %uint %12619 %12697 %12703 %12696
      %12711 = OpIAdd %uint %12620 %uint_1
      %12712 = OpVectorTimesScalar %v2float %12639 %float_0_5
      %12713 = OpFAdd %v2float %12712 %152
      %12714 = OpVectorTimesScalar %v2float %12646 %float_0_5
      %12715 = OpFAdd %v2float %12714 %152
      %12716 = OpCompositeExtract %float %12713 0
      %12717 = OpCompositeExtract %float %12713 1
      %12718 = OpCompositeExtract %float %12715 0
      %12719 = OpCompositeExtract %float %12715 1
      %12720 = OpExtInst %float %1 FClamp %12716 %float_0 %float_1
      %12721 = OpFMul %float %12720 %float_255
      %12722 = OpConvertFToU %uint %12721
      %12723 = OpShiftLeftLogical %uint %12722 %uint_0
      %12724 = OpExtInst %float %1 FClamp %12717 %float_0 %float_1
      %12725 = OpFMul %float %12724 %float_255
      %12726 = OpConvertFToU %uint %12725
      %12727 = OpShiftLeftLogical %uint %12726 %uint_8
      %12728 = OpExtInst %float %1 FClamp %12718 %float_0 %float_1
      %12729 = OpFMul %float %12728 %float_255
      %12730 = OpConvertFToU %uint %12729
      %12731 = OpShiftLeftLogical %uint %12730 %uint_16
      %12732 = OpExtInst %float %1 FClamp %12719 %float_0 %float_1
      %12733 = OpFMul %float %12732 %float_255
      %12734 = OpConvertFToU %uint %12733
      %12735 = OpShiftLeftLogical %uint %12734 %uint_24
      %12736 = OpBitwiseOr %uint %12723 %12727
      %12737 = OpBitwiseOr %uint %12736 %12731
      %12738 = OpBitwiseOr %uint %12737 %12735
      %12739 = OpULessThan %bool %12711 %uint_3
               OpSelectionMerge %12740 None
               OpBranchConditional %12739 %12741 %12742
      %12742 = OpLabel
      %12743 = OpIAdd %uint %12620 %uint_4294967294
      %12744 = OpCompositeExtract %uint %10695 0
      %12745 = OpCompositeExtract %uint %10695 1
      %12746 = OpCompositeConstruct %v3uint %12744 %12745 %12743
               OpImageWrite %10696 %12746 %12738 None
               OpBranch %12740
      %12741 = OpLabel
      %12747 = OpIEqual %bool %12711 %uint_0
      %12748 = OpSelect %uint %12747 %12738 %12710
      %12749 = OpIEqual %bool %12711 %uint_1
      %12750 = OpSelect %uint %12749 %12738 %12709
      %12751 = OpIEqual %bool %12711 %uint_2
      %12752 = OpSelect %uint %12751 %12738 %12708
               OpBranch %12740
      %12740 = OpLabel
      %12753 = OpPhi %uint %12708 %12742 %12752 %12741
      %12754 = OpPhi %uint %12709 %12742 %12750 %12741
      %12755 = OpPhi %uint %12710 %12742 %12748 %12741
      %12756 = OpShiftRightLogical %uint %12616 %uint_2
      %12757 = OpBitwiseAnd %uint %12756 %uint_7
      %12758 = OpIEqual %bool %12757 %uint_3
               OpSelectionMerge %12759 None
               OpBranchConditional %12758 %12760 %12759
      %12760 = OpLabel
      %12761 = OpBitwiseAnd %uint %10944 %uint_4294967292
      %12762 = OpBitwiseOr %uint %12761 %uint_3
      %12763 = OpExtInst %float %1 Fma %10705 %float_255 %float_0_5
      %12764 = OpConvertFToU %uint %12763
      %12765 = OpBitwiseAnd %uint %12762 %uint_3
      %12766 = OpShiftLeftLogical %uint %12764 %uint_24
      %12767 = OpBitwiseOr %uint %12765 %12766
      %12768 = OpBitwiseOr %uint %12767 %uint_16711680
      %12769 = OpCompositeExtract %float %10698 0
      %12770 = OpCompositeExtract %float %10698 1
      %12771 = OpCompositeExtract %float %10698 2
      %12772 = OpCompositeConstruct %v4float %12769 %12770 %12771 %float_0
      %12773 = OpVectorShuffle %v3float %12772 %12772 0 1 2
      %12774 = OpExtInst %v3float %1 FClamp %12773 %105 %130
      %12775 = OpCompositeExtract %float %12774 0
               OpSelectionMerge %12776 None
               OpSwitch %uint_0 %12777
      %12777 = OpLabel
      %12778 = OpFOrdLessThan %bool %12775 %float_0_00313066994
               OpSelectionMerge %12779 None
               OpBranchConditional %12778 %12780 %12779
      %12780 = OpLabel
      %12781 = OpFMul %float %12775 %float_12_9200001
               OpBranch %12776
      %12779 = OpLabel
      %12782 = OpExtInst %float %1 Pow %12775 %float_0_416666657
      %12783 = OpExtInst %float %1 Fma %12782 %float_1_05499995 %float_n0_0549999997
               OpBranch %12776
      %12776 = OpLabel
      %12784 = OpPhi %float %12781 %12780 %12783 %12779
      %12785 = OpCompositeExtract %float %12774 1
               OpSelectionMerge %12786 None
               OpSwitch %uint_0 %12787
      %12787 = OpLabel
      %12788 = OpFOrdLessThan %bool %12785 %float_0_00313066994
               OpSelectionMerge %12789 None
               OpBranchConditional %12788 %12790 %12789
      %12790 = OpLabel
      %12791 = OpFMul %float %12785 %float_12_9200001
               OpBranch %12786
      %12789 = OpLabel
      %12792 = OpExtInst %float %1 Pow %12785 %float_0_416666657
      %12793 = OpExtInst %float %1 Fma %12792 %float_1_05499995 %float_n0_0549999997
               OpBranch %12786
      %12786 = OpLabel
      %12794 = OpPhi %float %12791 %12790 %12793 %12789
      %12795 = OpCompositeExtract %float %12774 2
               OpSelectionMerge %12796 None
               OpSwitch %uint_0 %12797
      %12797 = OpLabel
      %12798 = OpFOrdLessThan %bool %12795 %float_0_00313066994
               OpSelectionMerge %12799 None
               OpBranchConditional %12798 %12800 %12799
      %12800 = OpLabel
      %12801 = OpFMul %float %12795 %float_12_9200001
               OpBranch %12796
      %12799 = OpLabel
      %12802 = OpExtInst %float %1 Pow %12795 %float_0_416666657
      %12803 = OpExtInst %float %1 Fma %12802 %float_1_05499995 %float_n0_0549999997
               OpBranch %12796
      %12796 = OpLabel
      %12804 = OpPhi %float %12801 %12800 %12803 %12799
      %12805 = OpExtInst %float %1 FClamp %12784 %float_0 %float_1
      %12806 = OpFMul %float %12805 %float_255
      %12807 = OpConvertFToU %uint %12806
      %12808 = OpShiftLeftLogical %uint %12807 %uint_0
      %12809 = OpExtInst %float %1 FClamp %12794 %float_0 %float_1
      %12810 = OpFMul %float %12809 %float_255
      %12811 = OpConvertFToU %uint %12810
      %12812 = OpShiftLeftLogical %uint %12811 %uint_8
      %12813 = OpExtInst %float %1 FClamp %12804 %float_0 %float_1
      %12814 = OpFMul %float %12813 %float_255
      %12815 = OpConvertFToU %uint %12814
      %12816 = OpShiftLeftLogical %uint %12815 %uint_16
      %12817 = OpBitwiseOr %uint %12808 %12812
      %12818 = OpBitwiseOr %uint %12817 %12816
      %12819 = OpBitwiseOr %uint %12818 %uint_0
               OpBranch %12759
      %12759 = OpLabel
      %12820 = OpPhi %uint %458 %12740 %12819 %12796
      %12821 = OpPhi %uint %10944 %12740 %12768 %12796
               OpBranch %12629
      %12631 = OpLabel
      %12822 = OpCompositeExtract %float %10698 0
      %12823 = OpCompositeExtract %float %10698 1
      %12824 = OpCompositeExtract %float %10698 2
      %12825 = OpCompositeConstruct %v4float %12822 %12823 %12824 %float_0
      %12826 = OpVectorShuffle %v3float %12825 %12825 0 1 2
      %12827 = OpExtInst %v3float %1 FClamp %12826 %105 %130
      %12828 = OpCompositeExtract %float %12827 0
               OpSelectionMerge %12829 None
               OpSwitch %uint_0 %12830
      %12830 = OpLabel
      %12831 = OpFOrdLessThan %bool %12828 %float_0_00313066994
               OpSelectionMerge %12832 None
               OpBranchConditional %12831 %12833 %12832
      %12833 = OpLabel
      %12834 = OpFMul %float %12828 %float_12_9200001
               OpBranch %12829
      %12832 = OpLabel
      %12835 = OpExtInst %float %1 Pow %12828 %float_0_416666657
      %12836 = OpExtInst %float %1 Fma %12835 %float_1_05499995 %float_n0_0549999997
               OpBranch %12829
      %12829 = OpLabel
      %12837 = OpPhi %float %12834 %12833 %12836 %12832
      %12838 = OpCompositeExtract %float %12827 1
               OpSelectionMerge %12839 None
               OpSwitch %uint_0 %12840
      %12840 = OpLabel
      %12841 = OpFOrdLessThan %bool %12838 %float_0_00313066994
               OpSelectionMerge %12842 None
               OpBranchConditional %12841 %12843 %12842
      %12843 = OpLabel
      %12844 = OpFMul %float %12838 %float_12_9200001
               OpBranch %12839
      %12842 = OpLabel
      %12845 = OpExtInst %float %1 Pow %12838 %float_0_416666657
      %12846 = OpExtInst %float %1 Fma %12845 %float_1_05499995 %float_n0_0549999997
               OpBranch %12839
      %12839 = OpLabel
      %12847 = OpPhi %float %12844 %12843 %12846 %12842
      %12848 = OpCompositeExtract %float %12827 2
               OpSelectionMerge %12849 None
               OpSwitch %uint_0 %12850
      %12850 = OpLabel
      %12851 = OpFOrdLessThan %bool %12848 %float_0_00313066994
               OpSelectionMerge %12852 None
               OpBranchConditional %12851 %12853 %12852
      %12853 = OpLabel
      %12854 = OpFMul %float %12848 %float_12_9200001
               OpBranch %12849
      %12852 = OpLabel
      %12855 = OpExtInst %float %1 Pow %12848 %float_0_416666657
      %12856 = OpExtInst %float %1 Fma %12855 %float_1_05499995 %float_n0_0549999997
               OpBranch %12849
      %12849 = OpLabel
      %12857 = OpPhi %float %12854 %12853 %12856 %12852
      %12858 = OpExtInst %float %1 FClamp %12837 %float_0 %float_1
      %12859 = OpFMul %float %12858 %float_255
      %12860 = OpConvertFToU %uint %12859
      %12861 = OpShiftLeftLogical %uint %12860 %uint_0
      %12862 = OpExtInst %float %1 FClamp %12847 %float_0 %float_1
      %12863 = OpFMul %float %12862 %float_255
      %12864 = OpConvertFToU %uint %12863
      %12865 = OpShiftLeftLogical %uint %12864 %uint_8
      %12866 = OpExtInst %float %1 FClamp %12857 %float_0 %float_1
      %12867 = OpFMul %float %12866 %float_255
      %12868 = OpConvertFToU %uint %12867
      %12869 = OpShiftLeftLogical %uint %12868 %uint_16
      %12870 = OpBitwiseOr %uint %12861 %12865
      %12871 = OpBitwiseOr %uint %12870 %12869
      %12872 = OpBitwiseOr %uint %12871 %uint_0
      %12873 = OpULessThan %bool %12620 %uint_3
               OpSelectionMerge %12874 None
               OpBranchConditional %12873 %12875 %12876
      %12876 = OpLabel
      %12877 = OpISub %uint %12620 %uint_3
      %12878 = OpCompositeExtract %uint %10695 0
      %12879 = OpCompositeExtract %uint %10695 1
      %12880 = OpCompositeConstruct %v3uint %12878 %12879 %12877
               OpImageWrite %10696 %12880 %12872 None
               OpBranch %12874
      %12875 = OpLabel
      %12881 = OpIEqual %bool %12620 %uint_0
      %12882 = OpSelect %uint %12881 %12872 %12619
      %12883 = OpIEqual %bool %12620 %uint_1
      %12884 = OpSelect %uint %12883 %12872 %12618
      %12885 = OpIEqual %bool %12620 %uint_2
      %12886 = OpSelect %uint %12885 %12872 %12617
               OpBranch %12874
      %12874 = OpLabel
      %12887 = OpPhi %uint %12617 %12876 %12886 %12875
      %12888 = OpPhi %uint %12618 %12876 %12884 %12875
      %12889 = OpPhi %uint %12619 %12876 %12882 %12875
      %12890 = OpIAdd %uint %12620 %uint_1
      %12891 = OpExtInst %float %1 FClamp %10701 %float_0 %float_1
      %12892 = OpFMul %float %12891 %float_255
      %12893 = OpConvertFToU %uint %12892
      %12894 = OpShiftLeftLogical %uint %12893 %uint_8
      %12895 = OpExtInst %float %1 FClamp %10705 %float_0 %float_1
      %12896 = OpFMul %float %12895 %float_255
      %12897 = OpConvertFToU %uint %12896
      %12898 = OpShiftLeftLogical %uint %12897 %uint_16
      %12899 = OpExtInst %float %1 FClamp %10707 %float_0 %float_1
      %12900 = OpFMul %float %12899 %float_255
      %12901 = OpConvertFToU %uint %12900
      %12902 = OpShiftLeftLogical %uint %12901 %uint_24
      %12903 = OpBitwiseOr %uint %uint_0 %12894
      %12904 = OpBitwiseOr %uint %12903 %12898
      %12905 = OpBitwiseOr %uint %12904 %12902
      %12906 = OpULessThan %bool %12890 %uint_3
               OpSelectionMerge %12907 None
               OpBranchConditional %12906 %12908 %12909
      %12909 = OpLabel
      %12910 = OpIAdd %uint %12620 %uint_4294967294
      %12911 = OpCompositeExtract %uint %10695 0
      %12912 = OpCompositeExtract %uint %10695 1
      %12913 = OpCompositeConstruct %v3uint %12911 %12912 %12910
               OpImageWrite %10696 %12913 %12905 None
               OpBranch %12907
      %12908 = OpLabel
      %12914 = OpIEqual %bool %12890 %uint_0
      %12915 = OpSelect %uint %12914 %12905 %12889
      %12916 = OpIEqual %bool %12890 %uint_1
      %12917 = OpSelect %uint %12916 %12905 %12888
      %12918 = OpIEqual %bool %12890 %uint_2
      %12919 = OpSelect %uint %12918 %12905 %12887
               OpBranch %12907
      %12907 = OpLabel
      %12920 = OpPhi %uint %12887 %12909 %12919 %12908
      %12921 = OpPhi %uint %12888 %12909 %12917 %12908
      %12922 = OpPhi %uint %12889 %12909 %12915 %12908
               OpBranch %12629
      %12630 = OpLabel
      %12923 = OpVectorShuffle %v3float %10698 %459 0 1 2
      %12924 = OpFSub %float %8386 %float_0_5
      %12925 = OpFMul %float %12924 %float_0_00787401572
      %12926 = OpFMul %float %12924 %float_0_0158730168
      %12927 = OpCompositeConstruct %v3float %12925 %12925 %12926
      %12928 = OpExtInst %v3float %1 FClamp %12923 %105 %130
      %12929 = OpCompositeExtract %float %12928 0
               OpSelectionMerge %12930 None
               OpSwitch %uint_0 %12931
      %12931 = OpLabel
      %12932 = OpFOrdLessThan %bool %12929 %float_0_00313066994
               OpSelectionMerge %12933 None
               OpBranchConditional %12932 %12934 %12933
      %12934 = OpLabel
      %12935 = OpFMul %float %12929 %float_12_9200001
               OpBranch %12930
      %12933 = OpLabel
      %12936 = OpExtInst %float %1 Pow %12929 %float_0_416666657
      %12937 = OpExtInst %float %1 Fma %12936 %float_1_05499995 %float_n0_0549999997
               OpBranch %12930
      %12930 = OpLabel
      %12938 = OpPhi %float %12935 %12934 %12937 %12933
      %12939 = OpCompositeExtract %float %12928 1
               OpSelectionMerge %12940 None
               OpSwitch %uint_0 %12941
      %12941 = OpLabel
      %12942 = OpFOrdLessThan %bool %12939 %float_0_00313066994
               OpSelectionMerge %12943 None
               OpBranchConditional %12942 %12944 %12943
      %12944 = OpLabel
      %12945 = OpFMul %float %12939 %float_12_9200001
               OpBranch %12940
      %12943 = OpLabel
      %12946 = OpExtInst %float %1 Pow %12939 %float_0_416666657
      %12947 = OpExtInst %float %1 Fma %12946 %float_1_05499995 %float_n0_0549999997
               OpBranch %12940
      %12940 = OpLabel
      %12948 = OpPhi %float %12945 %12944 %12947 %12943
      %12949 = OpCompositeExtract %float %12928 2
               OpSelectionMerge %12950 None
               OpSwitch %uint_0 %12951
      %12951 = OpLabel
      %12952 = OpFOrdLessThan %bool %12949 %float_0_00313066994
               OpSelectionMerge %12953 None
               OpBranchConditional %12952 %12954 %12953
      %12954 = OpLabel
      %12955 = OpFMul %float %12949 %float_12_9200001
               OpBranch %12950
      %12953 = OpLabel
      %12956 = OpExtInst %float %1 Pow %12949 %float_0_416666657
      %12957 = OpExtInst %float %1 Fma %12956 %float_1_05499995 %float_n0_0549999997
               OpBranch %12950
      %12950 = OpLabel
      %12958 = OpPhi %float %12955 %12954 %12957 %12953
      %12959 = OpCompositeConstruct %v3float %12938 %12948 %12958
      %12960 = OpBitcast %v3uint %12959
      %12961 = OpBitwiseAnd %v3uint %12960 %349
      %12962 = OpExtInst %v3uint %1 UMin %12961 %500
      %12963 = OpConvertUToF %v3float %12962
      %12964 = OpExtInst %v3float %1 Fma %12927 %12963 %12959
      %12965 = OpExtInst %v3float %1 FClamp %12964 %105 %130
      %12966 = OpCompositeExtract %float %12965 0
      %12967 = OpFMul %float %12966 %float_127
      %12968 = OpConvertFToU %uint %12967
      %12969 = OpShiftLeftLogical %uint %12968 %uint_0
      %12970 = OpCompositeExtract %float %12965 1
      %12971 = OpFMul %float %12970 %float_127
      %12972 = OpConvertFToU %uint %12971
      %12973 = OpShiftLeftLogical %uint %12972 %uint_7
      %12974 = OpCompositeExtract %float %12965 2
      %12975 = OpFMul %float %12974 %float_63
      %12976 = OpConvertFToU %uint %12975
      %12977 = OpShiftLeftLogical %uint %12976 %uint_14
      %12978 = OpBitwiseOr %uint %12969 %12973
      %12979 = OpBitwiseOr %uint %12978 %12977
      %12980 = OpVectorShuffle %v3float %10708 %10708 0 1 2
      %12981 = OpExtInst %v3float %1 FClamp %12980 %105 %130
      %12982 = OpCompositeExtract %float %12981 0
               OpSelectionMerge %12983 None
               OpSwitch %uint_0 %12984
      %12984 = OpLabel
      %12985 = OpFOrdLessThan %bool %12982 %float_0_00313066994
               OpSelectionMerge %12986 None
               OpBranchConditional %12985 %12987 %12986
      %12987 = OpLabel
      %12988 = OpFMul %float %12982 %float_12_9200001
               OpBranch %12983
      %12986 = OpLabel
      %12989 = OpExtInst %float %1 Pow %12982 %float_0_416666657
      %12990 = OpExtInst %float %1 Fma %12989 %float_1_05499995 %float_n0_0549999997
               OpBranch %12983
      %12983 = OpLabel
      %12991 = OpPhi %float %12988 %12987 %12990 %12986
      %12992 = OpCompositeExtract %float %12981 1
               OpSelectionMerge %12993 None
               OpSwitch %uint_0 %12994
      %12994 = OpLabel
      %12995 = OpFOrdLessThan %bool %12992 %float_0_00313066994
               OpSelectionMerge %12996 None
               OpBranchConditional %12995 %12997 %12996
      %12997 = OpLabel
      %12998 = OpFMul %float %12992 %float_12_9200001
               OpBranch %12993
      %12996 = OpLabel
      %12999 = OpExtInst %float %1 Pow %12992 %float_0_416666657
      %13000 = OpExtInst %float %1 Fma %12999 %float_1_05499995 %float_n0_0549999997
               OpBranch %12993
      %12993 = OpLabel
      %13001 = OpPhi %float %12998 %12997 %13000 %12996
      %13002 = OpCompositeExtract %float %12981 2
               OpSelectionMerge %13003 None
               OpSwitch %uint_0 %13004
      %13004 = OpLabel
      %13005 = OpFOrdLessThan %bool %13002 %float_0_00313066994
               OpSelectionMerge %13006 None
               OpBranchConditional %13005 %13007 %13006
      %13007 = OpLabel
      %13008 = OpFMul %float %13002 %float_12_9200001
               OpBranch %13003
      %13006 = OpLabel
      %13009 = OpExtInst %float %1 Pow %13002 %float_0_416666657
      %13010 = OpExtInst %float %1 Fma %13009 %float_1_05499995 %float_n0_0549999997
               OpBranch %13003
      %13003 = OpLabel
      %13011 = OpPhi %float %13008 %13007 %13010 %13006
      %13012 = OpCompositeConstruct %v3float %12991 %13001 %13011
      %13013 = OpBitcast %v3uint %13012
      %13014 = OpBitwiseAnd %v3uint %13013 %349
      %13015 = OpExtInst %v3uint %1 UMin %13014 %500
      %13016 = OpConvertUToF %v3float %13015
      %13017 = OpExtInst %v3float %1 Fma %12927 %13016 %13012
      %13018 = OpExtInst %v3float %1 FClamp %13017 %105 %130
      %13019 = OpCompositeExtract %float %13018 0
      %13020 = OpFMul %float %13019 %float_127
      %13021 = OpConvertFToU %uint %13020
      %13022 = OpShiftLeftLogical %uint %13021 %uint_0
      %13023 = OpCompositeExtract %float %13018 1
      %13024 = OpFMul %float %13023 %float_127
      %13025 = OpConvertFToU %uint %13024
      %13026 = OpShiftLeftLogical %uint %13025 %uint_7
      %13027 = OpCompositeExtract %float %13018 2
      %13028 = OpFMul %float %13027 %float_63
      %13029 = OpConvertFToU %uint %13028
      %13030 = OpShiftLeftLogical %uint %13029 %uint_14
      %13031 = OpBitwiseOr %uint %13022 %13026
      %13032 = OpBitwiseOr %uint %13031 %13030
      %13033 = OpShiftLeftLogical %uint %12979 %uint_12
      %13034 = OpBitwiseAnd %uint %13033 %uint_4294963200
      %13035 = OpBitwiseAnd %uint %13032 %uint_4095
      %13036 = OpBitwiseOr %uint %13034 %13035
      %13037 = OpShiftRightLogical %uint %13032 %uint_12
      %13038 = OpBitwiseAnd %uint %13037 %uint_255
      %13039 = OpULessThan %bool %12620 %uint_3
               OpSelectionMerge %13040 None
               OpBranchConditional %13039 %13041 %13042
      %13042 = OpLabel
      %13043 = OpISub %uint %12620 %uint_3
      %13044 = OpCompositeExtract %uint %10695 0
      %13045 = OpCompositeExtract %uint %10695 1
      %13046 = OpCompositeConstruct %v3uint %13044 %13045 %13043
               OpImageWrite %10696 %13046 %13036 None
               OpBranch %13040
      %13041 = OpLabel
      %13047 = OpIEqual %bool %12620 %uint_0
      %13048 = OpSelect %uint %13047 %13036 %12619
      %13049 = OpIEqual %bool %12620 %uint_1
      %13050 = OpSelect %uint %13049 %13036 %12618
      %13051 = OpIEqual %bool %12620 %uint_2
      %13052 = OpSelect %uint %13051 %13036 %12617
               OpBranch %13040
      %13040 = OpLabel
      %13053 = OpPhi %uint %12617 %13042 %13052 %13041
      %13054 = OpPhi %uint %12618 %13042 %13050 %13041
      %13055 = OpPhi %uint %12619 %13042 %13048 %13041
      %13056 = OpIAdd %uint %12620 %uint_1
      %13057 = OpFAdd %float %10707 %float_1
      %13058 = OpFMul %float %13057 %float_0_5
      %13059 = OpExtInst %float %1 FClamp %13058 %float_0 %float_1
      %13060 = OpFMul %float %13059 %float_255
      %13061 = OpConvertFToU %uint %13060
      %13062 = OpShiftLeftLogical %uint %13061 %uint_16
      %13063 = OpBitwiseOr %uint %uint_0 %13062
      %13064 = OpBitwiseOr %uint %13063 %uint_2130706432
      %13065 = OpBitwiseOr %uint %13038 %13064
      %13066 = OpULessThan %bool %13056 %uint_3
               OpSelectionMerge %13067 None
               OpBranchConditional %13066 %13068 %13069
      %13069 = OpLabel
      %13070 = OpIAdd %uint %12620 %uint_4294967294
      %13071 = OpCompositeExtract %uint %10695 0
      %13072 = OpCompositeExtract %uint %10695 1
      %13073 = OpCompositeConstruct %v3uint %13071 %13072 %13070
               OpImageWrite %10696 %13073 %13065 None
               OpBranch %13067
      %13068 = OpLabel
      %13074 = OpIEqual %bool %13056 %uint_0
      %13075 = OpSelect %uint %13074 %13065 %13055
      %13076 = OpIEqual %bool %13056 %uint_1
      %13077 = OpSelect %uint %13076 %13065 %13054
      %13078 = OpIEqual %bool %13056 %uint_2
      %13079 = OpSelect %uint %13078 %13065 %13053
               OpBranch %13067
      %13067 = OpLabel
      %13080 = OpPhi %uint %13053 %13069 %13079 %13068
      %13081 = OpPhi %uint %13054 %13069 %13077 %13068
      %13082 = OpPhi %uint %13055 %13069 %13075 %13068
      %13083 = OpIAdd %uint %12620 %uint_2
      %13084 = OpShiftRightLogical %uint %12616 %uint_7
      %13085 = OpBitwiseAnd %uint %13084 %uint_1
      %13086 = OpINotEqual %bool %13085 %uint_0
      %13087 = OpShiftRightLogical %uint %12616 %uint_6
      %13088 = OpBitwiseAnd %uint %13087 %uint_1
      %13089 = OpINotEqual %bool %13088 %uint_0
      %13090 = OpLogicalOr %bool %13086 %13089
               OpSelectionMerge %13091 None
               OpBranchConditional %13090 %13092 %13091
      %13092 = OpLabel
      %13093 = OpExtInst %float %1 NMax %float_0 %float_0
      %13094 = OpExtInst %float %1 NMax %float_0 %13093
      %13095 = OpFOrdGreaterThan %bool %13094 %float_0
      %13096 = OpCompositeConstruct %v3bool %13095 %13095 %13095
      %13097 = OpSelect %v3float %13096 %105 %130
      %13098 = OpDot %float %13097 %337
      %13099 = OpDot %float %13097 %338
      %13100 = OpCompositeConstruct %v3float %548 %13098 %13099
      %13101 = OpExtInst %v3float %1 Fma %13100 %324 %325
      %13102 = OpCompositeExtract %float %13101 1
      %13103 = OpCompositeExtract %float %13101 2
      %13104 = OpExtInst %float %1 FClamp %13102 %float_0 %float_1
      %13105 = OpFMul %float %13104 %float_255
      %13106 = OpConvertFToU %uint %13105
      %13107 = OpShiftLeftLogical %uint %13106 %uint_0
      %13108 = OpExtInst %float %1 FClamp %13103 %float_0 %float_1
      %13109 = OpFMul %float %13108 %float_255
      %13110 = OpConvertFToU %uint %13109
      %13111 = OpShiftLeftLogical %uint %13110 %uint_8
      %13112 = OpBitwiseOr %uint %13107 %13111
      %13113 = OpBitwiseOr %uint %13112 %uint_0
      %13114 = OpBitwiseOr %uint %13113 %uint_0
      %13115 = OpBitwiseOr %uint %uint_0 %13114
      %13116 = OpULessThan %bool %13083 %uint_3
               OpSelectionMerge %13117 None
               OpBranchConditional %13116 %13118 %13119
      %13119 = OpLabel
      %13120 = OpIAdd %uint %12620 %uint_4294967295
      %13121 = OpCompositeExtract %uint %10695 0
      %13122 = OpCompositeExtract %uint %10695 1
      %13123 = OpCompositeConstruct %v3uint %13121 %13122 %13120
               OpImageWrite %10696 %13123 %13115 None
               OpBranch %13117
      %13118 = OpLabel
      %13124 = OpIEqual %bool %13083 %uint_0
      %13125 = OpSelect %uint %13124 %13115 %13082
      %13126 = OpIEqual %bool %13083 %uint_1
      %13127 = OpSelect %uint %13126 %13115 %13081
      %13128 = OpIEqual %bool %13083 %uint_2
      %13129 = OpSelect %uint %13128 %13115 %13080
               OpBranch %13117
      %13117 = OpLabel
      %13130 = OpPhi %uint %13080 %13119 %13129 %13118
      %13131 = OpPhi %uint %13081 %13119 %13127 %13118
      %13132 = OpPhi %uint %13082 %13119 %13125 %13118
      %13133 = OpIAdd %uint %12620 %uint_3
               OpBranch %13091
      %13091 = OpLabel
      %13134 = OpPhi %uint %13080 %13067 %13130 %13117
      %13135 = OpPhi %uint %13081 %13067 %13131 %13117
      %13136 = OpPhi %uint %13082 %13067 %13132 %13117
      %13137 = OpPhi %uint %13083 %13067 %13133 %13117
      %13138 = OpShiftRightLogical %uint %12616 %uint_2
      %13139 = OpBitwiseAnd %uint %13138 %uint_7
      %13140 = OpINotEqual %bool %13139 %uint_0
               OpSelectionMerge %13141 None
               OpBranchConditional %13140 %13142 %13141
      %13142 = OpLabel
      %13143 = OpINotEqual %bool %13139 %uint_4
               OpSelectionMerge %13144 None
               OpBranchConditional %13143 %13145 %13144
      %13145 = OpLabel
      %13146 = OpBitwiseAnd %uint %10944 %uint_4294967292
      %13147 = OpBitwiseAnd %uint %13139 %uint_3
      %13148 = OpBitwiseOr %uint %13146 %13147
      %13149 = OpIEqual %bool %13139 %uint_1
               OpSelectionMerge %13150 None
               OpBranchConditional %13149 %13151 %13152
      %13152 = OpLabel
      %13153 = OpIEqual %bool %13139 %uint_3
               OpSelectionMerge %13154 None
               OpBranchConditional %13153 %13155 %13156
      %13156 = OpLabel
      %13157 = OpBitwiseAnd %uint %13148 %uint_3
      %13158 = OpExtInst %uint %1 PackHalf2x16 %556
      %13159 = OpShiftRightLogical %uint %13158 %uint_5
      %13160 = OpBitwiseAnd %uint %13159 %uint_1023
      %13161 = OpShiftLeftLogical %uint %13160 %uint_22
      %13162 = OpShiftLeftLogical %uint %13160 %uint_12
      %13163 = OpBitwiseOr %uint %13161 %13162
      %13164 = OpShiftLeftLogical %uint %13160 %uint_2
      %13165 = OpBitwiseOr %uint %13163 %13164
      %13166 = OpBitwiseOr %uint %13157 %13165
               OpBranch %13154
      %13155 = OpLabel
      %13167 = OpExtInst %float %1 Fma %461 %float_255 %float_0_5
      %13168 = OpConvertFToU %uint %13167
      %13169 = OpBitwiseAnd %uint %13148 %uint_3
      %13170 = OpShiftLeftLogical %uint %13168 %uint_24
      %13171 = OpBitwiseOr %uint %13169 %13170
      %13172 = OpBitwiseOr %uint %13171 %uint_0
               OpBranch %13154
      %13154 = OpLabel
      %13173 = OpPhi %uint %13166 %13156 %13172 %13155
               OpBranch %13150
      %13151 = OpLabel
      %13174 = OpExtInst %float %1 FAbs %461
      %13175 = OpFSub %float %float_1 %13174
      %13176 = OpBitwiseAnd %uint %13148 %uint_3
      %13177 = OpExtInst %float %1 FClamp %13175 %float_0 %float_1
      %13178 = OpFMul %float %13177 %float_255
      %13179 = OpConvertFToU %uint %13178
      %13180 = OpShiftLeftLogical %uint %13179 %uint_2
      %13181 = OpBitwiseOr %uint %13176 %13180
               OpBranch %13150
      %13150 = OpLabel
      %13182 = OpPhi %uint %13173 %13154 %13181 %13151
      %13183 = OpCompositeExtract %float %10698 0
      %13184 = OpCompositeExtract %float %10698 1
      %13185 = OpCompositeExtract %float %10698 2
      %13186 = OpCompositeConstruct %v4float %13183 %13184 %13185 %float_0
      %13187 = OpVectorShuffle %v3float %13186 %13186 0 1 2
      %13188 = OpExtInst %v3float %1 FClamp %13187 %105 %130
      %13189 = OpCompositeExtract %float %13188 0
               OpSelectionMerge %13190 None
               OpSwitch %uint_0 %13191
      %13191 = OpLabel
      %13192 = OpFOrdLessThan %bool %13189 %float_0_00313066994
               OpSelectionMerge %13193 None
               OpBranchConditional %13192 %13194 %13193
      %13194 = OpLabel
      %13195 = OpFMul %float %13189 %float_12_9200001
               OpBranch %13190
      %13193 = OpLabel
      %13196 = OpExtInst %float %1 Pow %13189 %float_0_416666657
      %13197 = OpExtInst %float %1 Fma %13196 %float_1_05499995 %float_n0_0549999997
               OpBranch %13190
      %13190 = OpLabel
      %13198 = OpPhi %float %13195 %13194 %13197 %13193
      %13199 = OpCompositeExtract %float %13188 1
               OpSelectionMerge %13200 None
               OpSwitch %uint_0 %13201
      %13201 = OpLabel
      %13202 = OpFOrdLessThan %bool %13199 %float_0_00313066994
               OpSelectionMerge %13203 None
               OpBranchConditional %13202 %13204 %13203
      %13204 = OpLabel
      %13205 = OpFMul %float %13199 %float_12_9200001
               OpBranch %13200
      %13203 = OpLabel
      %13206 = OpExtInst %float %1 Pow %13199 %float_0_416666657
      %13207 = OpExtInst %float %1 Fma %13206 %float_1_05499995 %float_n0_0549999997
               OpBranch %13200
      %13200 = OpLabel
      %13208 = OpPhi %float %13205 %13204 %13207 %13203
      %13209 = OpCompositeExtract %float %13188 2
               OpSelectionMerge %13210 None
               OpSwitch %uint_0 %13211
      %13211 = OpLabel
      %13212 = OpFOrdLessThan %bool %13209 %float_0_00313066994
               OpSelectionMerge %13213 None
               OpBranchConditional %13212 %13214 %13213
      %13214 = OpLabel
      %13215 = OpFMul %float %13209 %float_12_9200001
               OpBranch %13210
      %13213 = OpLabel
      %13216 = OpExtInst %float %1 Pow %13209 %float_0_416666657
      %13217 = OpExtInst %float %1 Fma %13216 %float_1_05499995 %float_n0_0549999997
               OpBranch %13210
      %13210 = OpLabel
      %13218 = OpPhi %float %13215 %13214 %13217 %13213
      %13219 = OpExtInst %float %1 FClamp %13198 %float_0 %float_1
      %13220 = OpFMul %float %13219 %float_255
      %13221 = OpConvertFToU %uint %13220
      %13222 = OpShiftLeftLogical %uint %13221 %uint_0
      %13223 = OpExtInst %float %1 FClamp %13208 %float_0 %float_1
      %13224 = OpFMul %float %13223 %float_255
      %13225 = OpConvertFToU %uint %13224
      %13226 = OpShiftLeftLogical %uint %13225 %uint_8
      %13227 = OpExtInst %float %1 FClamp %13218 %float_0 %float_1
      %13228 = OpFMul %float %13227 %float_255
      %13229 = OpConvertFToU %uint %13228
      %13230 = OpShiftLeftLogical %uint %13229 %uint_16
      %13231 = OpBitwiseOr %uint %13222 %13226
      %13232 = OpBitwiseOr %uint %13231 %13230
      %13233 = OpBitwiseOr %uint %13232 %uint_0
               OpBranch %13144
      %13144 = OpLabel
      %13234 = OpPhi %uint %458 %13142 %13233 %13210
      %13235 = OpPhi %uint %10944 %13142 %13182 %13210
      %13236 = OpIEqual %bool %13139 %uint_3
      %13237 = OpIAdd %uint %13137 %uint_1
               OpSelectionMerge %13238 None
               OpBranchConditional %13236 %13239 %13240
      %13240 = OpLabel
      %13241 = OpShiftRightLogical %uint %12616 %uint_10
      %13242 = OpBitwiseAnd %uint %13241 %uint_1
      %13243 = OpINotEqual %bool %13242 %uint_0
      %13244 = OpIEqual %bool %13139 %uint_2
      %13245 = OpLogicalAnd %bool %13243 %13244
               OpSelectionMerge %13246 None
               OpBranchConditional %13245 %13247 %13246
      %13247 = OpLabel
      %13248 = OpExtInst %v3float %1 NMax %553 %105
      %13249 = OpVectorShuffle %v4float %459 %13248 4 5 6 3
               OpBranch %13246
      %13246 = OpLabel
      %13250 = OpPhi %v4float %459 %13240 %13249 %13247
      %13251 = OpCompositeExtract %float %13250 0
      %13252 = OpCompositeConstruct %v2float %13251 %float_0
      %13253 = OpExtInst %uint %1 PackHalf2x16 %13252
      %13254 = OpShiftLeftLogical %uint %13253 %uint_17
      %13255 = OpBitwiseAnd %uint %13254 %uint_4292870144
      %13256 = OpCompositeExtract %float %13250 1
      %13257 = OpCompositeConstruct %v2float %13256 %float_0
      %13258 = OpExtInst %uint %1 PackHalf2x16 %13257
      %13259 = OpShiftLeftLogical %uint %13258 %uint_6
      %13260 = OpBitwiseAnd %uint %13259 %uint_2096128
      %13261 = OpCompositeExtract %float %13250 2
      %13262 = OpCompositeConstruct %v2float %13261 %float_0
      %13263 = OpExtInst %uint %1 PackHalf2x16 %13262
      %13264 = OpShiftRightLogical %uint %13263 %uint_5
      %13265 = OpBitwiseAnd %uint %13264 %uint_1023
      %13266 = OpBitwiseOr %uint %13255 %13260
      %13267 = OpBitwiseOr %uint %13266 %13265
      %13268 = OpULessThan %bool %13137 %uint_3
               OpSelectionMerge %13269 None
               OpBranchConditional %13268 %13270 %13271
      %13271 = OpLabel
      %13272 = OpISub %uint %13137 %uint_3
      %13273 = OpCompositeExtract %uint %10695 0
      %13274 = OpCompositeExtract %uint %10695 1
      %13275 = OpCompositeConstruct %v3uint %13273 %13274 %13272
               OpImageWrite %10696 %13275 %13267 None
               OpBranch %13269
      %13270 = OpLabel
      %13276 = OpIEqual %bool %13137 %uint_0
      %13277 = OpSelect %uint %13276 %13267 %13136
      %13278 = OpIEqual %bool %13137 %uint_1
      %13279 = OpSelect %uint %13278 %13267 %13135
      %13280 = OpIEqual %bool %13137 %uint_2
      %13281 = OpSelect %uint %13280 %13267 %13134
               OpBranch %13269
      %13269 = OpLabel
      %13282 = OpPhi %uint %13134 %13271 %13281 %13270
      %13283 = OpPhi %uint %13135 %13271 %13279 %13270
      %13284 = OpPhi %uint %13136 %13271 %13277 %13270
               OpBranch %13238
      %13239 = OpLabel
      %13285 = OpExtInst %uint %1 PackHalf2x16 %556
      %13286 = OpShiftRightLogical %uint %13285 %uint_5
      %13287 = OpBitwiseAnd %uint %13286 %uint_1023
      %13288 = OpShiftLeftLogical %uint %13287 %uint_16
      %13289 = OpBitwiseOr %uint %uint_0 %13288
      %13290 = OpULessThan %bool %13137 %uint_3
               OpSelectionMerge %13291 None
               OpBranchConditional %13290 %13292 %13293
      %13293 = OpLabel
      %13294 = OpISub %uint %13137 %uint_3
      %13295 = OpCompositeExtract %uint %10695 0
      %13296 = OpCompositeExtract %uint %10695 1
      %13297 = OpCompositeConstruct %v3uint %13295 %13296 %13294
               OpImageWrite %10696 %13297 %13289 None
               OpBranch %13291
      %13292 = OpLabel
      %13298 = OpIEqual %bool %13137 %uint_0
      %13299 = OpSelect %uint %13298 %13289 %13136
      %13300 = OpIEqual %bool %13137 %uint_1
      %13301 = OpSelect %uint %13300 %13289 %13135
      %13302 = OpIEqual %bool %13137 %uint_2
      %13303 = OpSelect %uint %13302 %13289 %13134
               OpBranch %13291
      %13291 = OpLabel
      %13304 = OpPhi %uint %13134 %13293 %13303 %13292
      %13305 = OpPhi %uint %13135 %13293 %13301 %13292
      %13306 = OpPhi %uint %13136 %13293 %13299 %13292
               OpBranch %13238
      %13238 = OpLabel
      %13307 = OpPhi %uint %13282 %13269 %13304 %13291
      %13308 = OpPhi %uint %13283 %13269 %13305 %13291
      %13309 = OpPhi %uint %13284 %13269 %13306 %13291
               OpBranch %13141
      %13141 = OpLabel
      %13310 = OpPhi %uint %458 %13091 %13234 %13238
      %13311 = OpPhi %uint %10944 %13091 %13235 %13238
      %13312 = OpPhi %uint %13134 %13091 %13307 %13238
      %13313 = OpPhi %uint %13135 %13091 %13308 %13238
      %13314 = OpPhi %uint %13136 %13091 %13309 %13238
      %13315 = OpPhi %uint %13137 %13091 %13237 %13238
      %13316 = OpShiftRightLogical %uint %12616 %uint_9
      %13317 = OpBitwiseAnd %uint %13316 %uint_1
      %13318 = OpINotEqual %bool %13317 %uint_0
               OpSelectionMerge %13319 None
               OpBranchConditional %13318 %13320 %13319
      %13320 = OpLabel
               OpSelectionMerge %13321 None
               OpSwitch %uint_0 %13322
      %13322 = OpLabel
               OpSelectionMerge %13323 None
               OpBranchConditional %true %13324 %13323
      %13324 = OpLabel
               OpBranch %13321
      %13323 = OpLabel
      %13325 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13321
      %13321 = OpLabel
      %13326 = OpPhi %float %float_0 %13324 %13325 %13323
               OpSelectionMerge %13327 None
               OpSwitch %uint_0 %13328
      %13328 = OpLabel
               OpSelectionMerge %13329 None
               OpBranchConditional %true %13330 %13329
      %13330 = OpLabel
               OpBranch %13327
      %13329 = OpLabel
      %13331 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13327
      %13327 = OpLabel
      %13332 = OpPhi %float %float_0 %13330 %13331 %13329
               OpSelectionMerge %13333 None
               OpSwitch %uint_0 %13334
      %13334 = OpLabel
               OpSelectionMerge %13335 None
               OpBranchConditional %true %13336 %13335
      %13336 = OpLabel
               OpBranch %13333
      %13335 = OpLabel
      %13337 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13333
      %13333 = OpLabel
      %13338 = OpPhi %float %float_0 %13336 %13337 %13335
      %13339 = OpCompositeConstruct %v3float %13326 %13332 %13338
      %13340 = OpBitcast %v3uint %13339
      %13341 = OpBitwiseAnd %v3uint %13340 %349
      %13342 = OpExtInst %v3uint %1 UMin %13341 %500
      %13343 = OpConvertUToF %v3float %13342
      %13344 = OpExtInst %v3float %1 Fma %12927 %13343 %13339
      %13345 = OpExtInst %v3float %1 FClamp %13344 %105 %130
      %13346 = OpCompositeExtract %float %13345 0
      %13347 = OpFMul %float %13346 %float_127
      %13348 = OpConvertFToU %uint %13347
      %13349 = OpShiftLeftLogical %uint %13348 %uint_0
      %13350 = OpCompositeExtract %float %13345 1
      %13351 = OpFMul %float %13350 %float_127
      %13352 = OpConvertFToU %uint %13351
      %13353 = OpShiftLeftLogical %uint %13352 %uint_7
      %13354 = OpCompositeExtract %float %13345 2
      %13355 = OpFMul %float %13354 %float_63
      %13356 = OpConvertFToU %uint %13355
      %13357 = OpShiftLeftLogical %uint %13356 %uint_14
      %13358 = OpBitwiseOr %uint %13349 %13353
      %13359 = OpBitwiseOr %uint %13358 %13357
      %13360 = OpExtInst %float %1 Fma %12926 %float_0 %float_0
      %13361 = OpExtInst %float %1 FClamp %13360 %float_0 %float_1
      %13362 = OpFMul %float %13361 %float_63
      %13363 = OpConvertFToU %uint %13362
      %13364 = OpShiftLeftLogical %uint %13363 %uint_20
      %13365 = OpBitwiseOr %uint %13359 %13364
      %13366 = OpShiftLeftLogical %uint %13363 %uint_26
      %13367 = OpBitwiseOr %uint %13365 %13366
      %13368 = OpULessThan %bool %13315 %uint_3
               OpSelectionMerge %13369 None
               OpBranchConditional %13368 %13370 %13371
      %13371 = OpLabel
      %13372 = OpISub %uint %13315 %uint_3
      %13373 = OpCompositeExtract %uint %10695 0
      %13374 = OpCompositeExtract %uint %10695 1
      %13375 = OpCompositeConstruct %v3uint %13373 %13374 %13372
               OpImageWrite %10696 %13375 %13367 None
               OpBranch %13369
      %13370 = OpLabel
      %13376 = OpIEqual %bool %13315 %uint_0
      %13377 = OpSelect %uint %13376 %13367 %13314
      %13378 = OpIEqual %bool %13315 %uint_1
      %13379 = OpSelect %uint %13378 %13367 %13313
      %13380 = OpIEqual %bool %13315 %uint_2
      %13381 = OpSelect %uint %13380 %13367 %13312
               OpBranch %13369
      %13369 = OpLabel
      %13382 = OpPhi %uint %13312 %13371 %13381 %13370
      %13383 = OpPhi %uint %13313 %13371 %13379 %13370
      %13384 = OpPhi %uint %13314 %13371 %13377 %13370
      %13385 = OpIAdd %uint %13315 %uint_1
               OpBranch %13319
      %13319 = OpLabel
      %13386 = OpPhi %uint %13312 %13141 %13382 %13369
      %13387 = OpPhi %uint %13313 %13141 %13383 %13369
      %13388 = OpPhi %uint %13314 %13141 %13384 %13369
      %13389 = OpPhi %uint %13315 %13141 %13385 %13369
      %13390 = OpShiftRightLogical %uint %12616 %uint_16
      %13391 = OpBitwiseAnd %uint %13390 %uint_1
      %13392 = OpINotEqual %bool %13391 %uint_0
               OpSelectionMerge %13393 None
               OpBranchConditional %13392 %13394 %13393
      %13394 = OpLabel
               OpSelectionMerge %13395 None
               OpSwitch %uint_0 %13396
      %13396 = OpLabel
      %13397 = OpExtInst %float %1 Fma %float_1 %float_1_05499995 %float_n0_0549999997
               OpBranch %13395
      %13395 = OpLabel
               OpBranch %13398
      %13398 = OpLabel
               OpBranch %13399
      %13399 = OpLabel
      %13400 = OpExtInst %float %1 FClamp %13397 %float_0 %float_1
      %13401 = OpFMul %float %13400 %float_255
      %13402 = OpConvertFToU %uint %13401
      %13403 = OpShiftLeftLogical %uint %13402 %uint_0
      %13404 = OpShiftLeftLogical %uint %13402 %uint_8
      %13405 = OpShiftLeftLogical %uint %13402 %uint_16
      %13406 = OpBitwiseOr %uint %13403 %13404
      %13407 = OpBitwiseOr %uint %13406 %13405
      %13408 = OpBitwiseOr %uint %13407 %uint_0
      %13409 = OpULessThan %bool %13389 %uint_3
               OpSelectionMerge %13410 None
               OpBranchConditional %13409 %13411 %13412
      %13412 = OpLabel
      %13413 = OpISub %uint %13389 %uint_3
      %13414 = OpCompositeExtract %uint %10695 0
      %13415 = OpCompositeExtract %uint %10695 1
      %13416 = OpCompositeConstruct %v3uint %13414 %13415 %13413
               OpImageWrite %10696 %13416 %13408 None
               OpBranch %13410
      %13411 = OpLabel
      %13417 = OpIEqual %bool %13389 %uint_0
      %13418 = OpSelect %uint %13417 %13408 %13388
      %13419 = OpIEqual %bool %13389 %uint_1
      %13420 = OpSelect %uint %13419 %13408 %13387
      %13421 = OpIEqual %bool %13389 %uint_2
      %13422 = OpSelect %uint %13421 %13408 %13386
               OpBranch %13410
      %13410 = OpLabel
      %13423 = OpPhi %uint %13386 %13412 %13422 %13411
      %13424 = OpPhi %uint %13387 %13412 %13420 %13411
      %13425 = OpPhi %uint %13388 %13412 %13418 %13411
               OpBranch %13393
      %13393 = OpLabel
      %13426 = OpPhi %uint %13386 %13319 %13423 %13410
      %13427 = OpPhi %uint %13387 %13319 %13424 %13410
      %13428 = OpPhi %uint %13388 %13319 %13425 %13410
               OpBranch %12629
      %12629 = OpLabel
      %13429 = OpPhi %uint %458 %12626 %12820 %12759 %458 %12907 %13310 %13393
      %13430 = OpPhi %uint %10944 %12626 %12821 %12759 %10944 %12907 %13311 %13393
      %13431 = OpPhi %uint %12617 %12626 %12753 %12759 %12920 %12907 %13426 %13393
      %13432 = OpPhi %uint %12618 %12626 %12754 %12759 %12921 %12907 %13427 %13393
      %13433 = OpPhi %uint %12619 %12626 %12755 %12759 %12922 %12907 %13428 %13393
               OpBranch %12625
      %12625 = OpLabel
      %13434 = OpPhi %uint %458 %11443 %13429 %12629
      %13435 = OpPhi %uint %10944 %11443 %13430 %12629
      %13436 = OpPhi %uint %12617 %11443 %13431 %12629
      %13437 = OpPhi %uint %12618 %11443 %13432 %12629
      %13438 = OpPhi %uint %12619 %11443 %13433 %12629
               OpBranch %11432
      %11432 = OpLabel
      %13439 = OpPhi %uint %458 %11383 %13434 %12625
      %13440 = OpPhi %uint %10944 %11383 %13435 %12625
      %13441 = OpPhi %uint %uint_0 %11383 %13436 %12625
      %13442 = OpPhi %uint %11429 %11383 %13437 %12625
      %13443 = OpPhi %uint %11430 %11383 %13438 %12625
      %13444 = OpExtInst %v3float %1 FAbs %10852
      %13445 = OpDot %float %130 %13444
      %13446 = OpCompositeConstruct %v2float %13445 %13445
      %13447 = OpVectorShuffle %v2float %10852 %10852 0 1
      %13448 = OpFDiv %v2float %13447 %13446
      %13449 = OpVectorShuffle %v3float %10852 %13448 3 4 2
      %13450 = OpCompositeExtract %float %10852 2
      %13451 = OpFOrdLessThanEqual %bool %13450 %float_0
               OpSelectionMerge %13452 None
               OpBranchConditional %13451 %13453 %13452
      %13453 = OpLabel
      %13454 = OpVectorShuffle %v2float %13448 %460 1 0
      %13455 = OpExtInst %v2float %1 FAbs %13454
      %13456 = OpFSub %v2float %315 %13455
      %13457 = OpVectorShuffle %v2float %13448 %460 0 1
      %13458 = OpFOrdGreaterThanEqual %v2bool %13457 %127
      %13459 = OpCompositeExtract %bool %13458 0
      %13460 = OpSelect %float %13459 %float_1 %float_n1
      %13461 = OpCompositeExtract %bool %13458 1
      %13462 = OpSelect %float %13461 %float_1 %float_n1
      %13463 = OpCompositeConstruct %v2float %13460 %13462
      %13464 = OpFMul %v2float %13456 %13463
      %13465 = OpVectorShuffle %v3float %10852 %13464 3 4 2
               OpBranch %13452
      %13452 = OpLabel
      %13466 = OpPhi %v3float %13449 %11432 %13465 %13453
      %13467 = OpVectorShuffle %v2float %13466 %13466 0 1
      %13468 = OpVectorTimesScalar %v2float %13467 %float_1023
      %13469 = OpFAdd %v2float %13468 %328
      %13470 = OpExtInst %v2float %1 FClamp %13469 %127 %329
      %13471 = OpConvertFToU %v2uint %13470
      %13472 = OpCompositeExtract %uint %13471 0
      %13473 = OpCompositeExtract %uint %13471 1
      %13474 = OpShiftLeftLogical %uint %13473 %uint_11
      %13475 = OpBitwiseOr %uint %13472 %13474
      %13476 = OpShiftLeftLogical %uint %13475 %uint_10
      %13477 = OpExtInst %float %1 FClamp %10854 %float_0 %float_1
      %13478 = OpFMul %float %13477 %float_255
      %13479 = OpConvertFToU %uint %13478
      %13480 = OpShiftLeftLogical %uint %13479 %uint_2
      %13481 = OpBitwiseOr %uint %13476 %13480
      %13482 = OpBitwiseOr %uint %13481 %10840
      %13483 = OpBitwiseAnd %uint %13440 %uint_3
      %13484 = OpINotEqual %bool %13483 %uint_0
               OpSelectionMerge %13485 DontFlatten
               OpBranchConditional %13484 %13486 %13485
      %13486 = OpLabel
      %13487 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %13488 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_17
      %13489 = OpLoad %int %13488
      %13490 = OpBitcast %uint %13489
      %13491 = OpCompositeExtract %uint %10695 0
      %13492 = OpCompositeExtract %uint %10695 1
      %13493 = OpCompositeConstruct %v3uint %13491 %13492 %13490
               OpImageWrite %13487 %13493 %13440 None
      %13494 = OpIEqual %bool %13483 %uint_2
      %13495 = OpIEqual %bool %13483 %uint_3
      %13496 = OpLogicalOr %bool %13494 %13495
               OpSelectionMerge %13497 None
               OpBranchConditional %13496 %13498 %13497
      %13498 = OpLabel
      %13499 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %13500 = OpIAdd %uint %13490 %uint_1
      %13501 = OpCompositeConstruct %v3uint %13491 %13492 %13500
               OpImageWrite %13499 %13501 %13439 None
               OpBranch %13497
      %13497 = OpLabel
               OpBranch %13485
      %13485 = OpLabel
      %13502 = OpAccessChain %_ptr_Uniform_float %View %uint_21
      %13503 = OpLoad %float %13502
      %13504 = OpCompositeConstruct %v3float %13503 %13503 %13503
      %13505 = OpExtInst %v3float %1 FMix %10693 %10857 %13504
      %13506 = OpFAdd %v3float %11346 %10440
      %13507 = OpFAdd %v3float %13505 %13506
      %13508 = OpVectorTimesScalar %v3float %13507 %float_1
      %13509 = OpCompositeExtract %float %13508 0
      %13510 = OpCompositeExtract %float %13508 1
      %13511 = OpCompositeExtract %float %13508 2
      %13512 = OpCompositeConstruct %v4float %13509 %13510 %13511 %float_0
      %13513 = OpAccessChain %_ptr_Uniform_float %View %uint_32
      %13514 = OpLoad %float %13513
      %13515 = OpFOrdEqual %bool %13514 %float_0
               OpSelectionMerge %13516 None
               OpBranchConditional %13515 %13517 %13516
      %13517 = OpLabel
      %13518 = OpCompositeInsert %v4float %461 %13512 3
               OpBranch %13516
      %13516 = OpLabel
      %13519 = OpPhi %v4float %13512 %13485 %13518 %13517
      %13520 = OpCompositeInsert %v4float %8509 %101 0
      %13521 = OpCompositeInsert %v4float %float_1 %13520 1
      %13522 = OpCompositeInsert %v4float %float_1 %13521 2
      %13523 = OpCompositeInsert %v4float %float_1 %13522 3
      %13524 = OpVectorTimesScalar %v3float %10691 %11357
      %13525 = OpCompositeExtract %float %13524 0
      %13526 = OpCompositeExtract %float %13524 1
      %13527 = OpCompositeExtract %float %13524 2
      %13528 = OpCompositeConstruct %v4float %13525 %13526 %13527 %float_1
      %13529 = OpVectorTimesScalar %v4float %13519 %11357
      %13530 = OpVectorShuffle %v3float %13529 %13529 0 1 2
      %13531 = OpExtInst %v3float %1 NMin %13530 %484
      %13532 = OpVectorShuffle %v4float %13529 %13531 4 5 6 3
               OpStore %out_var_SV_Target0 %13532
               OpStore %out_var_SV_Target1 %13523
               OpStore %out_var_SV_Target2 %13528
               OpStore %out_var_SV_Target3 %13443
               OpStore %out_var_SV_Target4 %13442
               OpStore %out_var_SV_Target5 %13441
               OpStore %out_var_SV_Target6 %13482
               OpReturn
               OpFunctionEnd
