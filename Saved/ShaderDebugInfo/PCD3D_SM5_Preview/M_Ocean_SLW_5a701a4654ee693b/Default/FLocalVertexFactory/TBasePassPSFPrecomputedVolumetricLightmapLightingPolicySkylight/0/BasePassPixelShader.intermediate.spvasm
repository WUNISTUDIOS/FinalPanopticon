; SPIR-V
; Version: 1.3
; Generator: Google spiregg; 0
; Bound: 13877
; Schema: 0
               OpCapability Shader
               OpCapability SampledBuffer
               OpCapability StorageImageReadWithoutFormat
               OpExtension "SPV_GOOGLE_hlsl_functionality1"
               OpExtension "SPV_GOOGLE_user_type"
          %1 = OpExtInstImport "GLSL.std.450"
               OpMemoryModel Logical GLSL450
               OpEntryPoint Fragment %MainPS "MainPS" %in_var_TEXCOORD10_centroid %in_var_TEXCOORD11_centroid %in_var_PRIMITIVE_ID %in_var_TEXCOORD9 %gl_FragCoord %gl_FrontFacing %out_var_SV_Target0 %out_var_SV_Target1 %out_var_SV_Target2 %out_var_SV_Target3 %out_var_SV_Target4 %out_var_SV_Target5 %out_var_SV_Target6
               OpExecutionMode %MainPS OriginUpperLeft
               OpExecutionMode %MainPS EarlyFragmentTests

               ; Debug Information
               OpSource HLSL 620
               OpName %type_View "type.View"  ; id %16
               OpMemberName %type_View 0 "View_TranslatedWorldToView"
               OpMemberName %type_View 1 "View_ViewToClip"
               OpMemberName %type_View 2 "View_SVPositionToTranslatedWorld"
               OpMemberName %type_View 3 "View_ViewTilePosition"
               OpMemberName %type_View 4 "View_ViewForward"
               OpMemberName %type_View 5 "View_InvDeviceZToWorldZTransform"
               OpMemberName %type_View 6 "View_ScreenPositionScaleBias"
               OpMemberName %type_View 7 "View_RelativeWorldCameraOrigin"
               OpMemberName %type_View 8 "View_RelativePreViewTranslation"
               OpMemberName %type_View 9 "View_ViewRectMin"
               OpMemberName %type_View 10 "View_ViewSizeAndInvSize"
               OpMemberName %type_View 11 "View_LightProbeSizeRatioAndInvSizeRatio"
               OpMemberName %type_View 12 "View_BufferSizeAndInvSize"
               OpMemberName %type_View 13 "View_PreExposure"
               OpMemberName %type_View 14 "View_OneOverPreExposure"
               OpMemberName %type_View 15 "View_DiffuseOverrideParameter"
               OpMemberName %type_View 16 "View_SpecularOverrideParameter"
               OpMemberName %type_View 17 "View_RoughnessOverrideParameter"
               OpMemberName %type_View 18 "View_OutOfBoundsMask"
               OpMemberName %type_View 19 "View_GameTime"
               OpMemberName %type_View 20 "View_StateFrameIndexMod8"
               OpMemberName %type_View 21 "View_UnlitViewmodeMask"
               OpMemberName %type_View 22 "View_DirectionalLightColor"
               OpMemberName %type_View 23 "View_DirectionalLightDirection"
               OpMemberName %type_View 24 "View_PrecomputedIndirectLightingColorScale"
               OpMemberName %type_View 25 "View_RenderingReflectionCaptureMask"
               OpMemberName %type_View 26 "View_SkyLightApplyPrecomputedBentNormalShadowingFlag"
               OpMemberName %type_View 27 "View_SkyLightColor"
               OpMemberName %type_View 28 "View_GlobalVolumeTranslatedCenterAndExtent"
               OpMemberName %type_View 29 "View_GlobalVolumeTranslatedWorldToUVAddAndMul"
               OpMemberName %type_View 30 "View_GlobalDistanceFieldClipmapSizeInPages"
               OpMemberName %type_View 31 "View_GlobalDistanceFieldInvPageAtlasSize"
               OpMemberName %type_View 32 "View_GlobalVolumeTexelSize"
               OpMemberName %type_View 33 "View_NumGlobalSDFClipmaps"
               OpMemberName %type_View 34 "View_bCheckerboardSubsurfaceProfileRendering"
               OpMemberName %type_View 35 "View_VolumetricLightmapWorldToUVScale"
               OpMemberName %type_View 36 "View_VolumetricLightmapWorldToUVAdd"
               OpMemberName %type_View 37 "View_VolumetricLightmapIndirectionTextureSize"
               OpMemberName %type_View 38 "View_VolumetricLightmapBrickSize"
               OpMemberName %type_View 39 "View_VolumetricLightmapBrickTexelSize"
               OpMemberName %type_View 40 "View_MinRoughness"
               OpMemberName %type_View 41 "View_bShadingEnergyConservation"
               OpMemberName %type_View 42 "View_bShadingEnergyPreservation"
               OpName %View "View"  ; id %17
               OpName %type_3d_image "type.3d.image"  ; id %18
               OpName %View_VolumetricLightmapIndirectionTexture "View_VolumetricLightmapIndirectionTexture"  ; id %19
               OpName %type_3d_image_0 "type.3d.image"  ; id %20
               OpName %View_VolumetricLightmapBrickAmbientVector "View_VolumetricLightmapBrickAmbientVector"  ; id %21
               OpName %View_VolumetricLightmapBrickSHCoefficients0 "View_VolumetricLightmapBrickSHCoefficients0"  ; id %22
               OpName %View_VolumetricLightmapBrickSHCoefficients1 "View_VolumetricLightmapBrickSHCoefficients1"  ; id %23
               OpName %View_VolumetricLightmapBrickSHCoefficients2 "View_VolumetricLightmapBrickSHCoefficients2"  ; id %24
               OpName %View_VolumetricLightmapBrickSHCoefficients3 "View_VolumetricLightmapBrickSHCoefficients3"  ; id %25
               OpName %View_VolumetricLightmapBrickSHCoefficients4 "View_VolumetricLightmapBrickSHCoefficients4"  ; id %26
               OpName %View_VolumetricLightmapBrickSHCoefficients5 "View_VolumetricLightmapBrickSHCoefficients5"  ; id %27
               OpName %View_SkyBentNormalBrickTexture "View_SkyBentNormalBrickTexture"  ; id %28
               OpName %View_DirectionalLightShadowingBrickTexture "View_DirectionalLightShadowingBrickTexture"  ; id %29
               OpName %View_GlobalDistanceFieldPageAtlasTexture "View_GlobalDistanceFieldPageAtlasTexture"  ; id %30
               OpName %View_GlobalDistanceFieldPageTableTexture "View_GlobalDistanceFieldPageTableTexture"  ; id %31
               OpName %type_2d_image "type.2d.image"  ; id %32
               OpName %type_sampler "type.sampler"  ; id %33
               OpName %View_PerlinNoise3DTexture "View_PerlinNoise3DTexture"  ; id %34
               OpName %View_PerlinNoise3DTextureSampler "View_PerlinNoise3DTextureSampler"  ; id %35
               OpName %View_SharedBilinearClampedSampler "View_SharedBilinearClampedSampler"  ; id %36
               OpName %View_SharedTrilinearWrappedSampler "View_SharedTrilinearWrappedSampler"  ; id %37
               OpName %type_StructuredBuffer_v4float "type.StructuredBuffer.v4float"  ; id %38
               OpName %View_SkyIrradianceEnvironmentMap "View_SkyIrradianceEnvironmentMap"  ; id %39
               OpName %View_ShadingEnergyGGXSpecTexture "View_ShadingEnergyGGXSpecTexture"  ; id %40
               OpName %View_ShadingEnergySampler "View_ShadingEnergySampler"  ; id %41
               OpName %View_SimpleVolumeEnvTexture "View_SimpleVolumeEnvTexture"  ; id %42
               OpName %View_SimpleVolumeEnvTextureSampler "View_SimpleVolumeEnvTextureSampler"  ; id %43
               OpName %type_SingleLayerWater "type.SingleLayerWater"  ; id %44
               OpMemberName %type_SingleLayerWater 0 "SingleLayerWater_SceneWithoutSingleLayerWaterMinMaxUV"
               OpMemberName %type_SingleLayerWater 1 "SingleLayerWater_DistortionParams"
               OpMemberName %type_SingleLayerWater 2 "SingleLayerWater_SceneWithoutSingleLayerWaterTextureSize"
               OpMemberName %type_SingleLayerWater 3 "SingleLayerWater_bMainDirectionalLightVSMFiltering"
               OpMemberName %type_SingleLayerWater 4 "SingleLayerWater_bSeparateMainDirLightLuminance"
               OpName %SingleLayerWater "SingleLayerWater"  ; id %45
               OpName %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture "SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture"  ; id %46
               OpName %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture "SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture"  ; id %47
               OpName %Scene_GPUScene_GPUScenePrimitiveSceneData "Scene_GPUScene_GPUScenePrimitiveSceneData"  ; id %48
               OpName %type_OpaqueBasePass "type.OpaqueBasePass"  ; id %49
               OpMemberName %type_OpaqueBasePass 0 "OpaqueBasePass_Shared_Forward_NumLocalLights"
               OpMemberName %type_OpaqueBasePass 1 "OpaqueBasePass_Shared_Forward_HasDirectionalLight"
               OpMemberName %type_OpaqueBasePass 2 "OpaqueBasePass_Shared_Forward_CulledGridSize"
               OpMemberName %type_OpaqueBasePass 3 "OpaqueBasePass_Shared_Forward_LightGridPixelSizeShift"
               OpMemberName %type_OpaqueBasePass 4 "OpaqueBasePass_Shared_Forward_LightGridZParams"
               OpMemberName %type_OpaqueBasePass 5 "OpaqueBasePass_Shared_Forward_DirectionalLightDirection"
               OpMemberName %type_OpaqueBasePass 6 "OpaqueBasePass_Shared_Forward_DirectionalLightSourceRadius"
               OpMemberName %type_OpaqueBasePass 7 "OpaqueBasePass_Shared_Forward_DirectionalLightColor"
               OpMemberName %type_OpaqueBasePass 8 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowMapChannelMask"
               OpMemberName %type_OpaqueBasePass 9 "OpaqueBasePass_Shared_Forward_DirectionalLightDistanceFadeMAD"
               OpMemberName %type_OpaqueBasePass 10 "OpaqueBasePass_Shared_Forward_NumDirectionalLightCascades"
               OpMemberName %type_OpaqueBasePass 11 "OpaqueBasePass_Shared_Forward_DirectionalLightVSM"
               OpMemberName %type_OpaqueBasePass 12 "OpaqueBasePass_Shared_Forward_CascadeEndDepths"
               OpMemberName %type_OpaqueBasePass 13 "OpaqueBasePass_Shared_Forward_DirectionalLightTranslatedWorldToShadowMatrix"
               OpMemberName %type_OpaqueBasePass 14 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapMinMax"
               OpMemberName %type_OpaqueBasePass 15 "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlasBufferSize"
               OpMemberName %type_OpaqueBasePass 16 "OpaqueBasePass_Shared_Forward_DirectLightingShowFlag"
               OpMemberName %type_OpaqueBasePass 17 "OpaqueBasePass_Shared_UseBasePassSkylight"
               OpMemberName %type_OpaqueBasePass 18 "OpaqueBasePass_Strata_FirstSliceStoringStrataSSSDataWithoutMRT"
               OpMemberName %type_OpaqueBasePass 19 "OpaqueBasePass_UseForwardScreenSpaceShadowMask"
               OpName %OpaqueBasePass "OpaqueBasePass"  ; id %50
               OpName %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas "OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas"  ; id %51
               OpName %OpaqueBasePass_Shared_Forward_ShadowmapSampler "OpaqueBasePass_Shared_Forward_ShadowmapSampler"  ; id %52
               OpName %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer "OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer"  ; id %53
               OpName %type_StructuredBuffer_uint "type.StructuredBuffer.uint"  ; id %54
               OpName %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid "OpaqueBasePass_Shared_Forward_NumCulledLightsGrid"  ; id %55
               OpName %type_buffer_image "type.buffer.image"  ; id %56
               OpName %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit "OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit"  ; id %57
               OpName %type_2d_image_array "type.2d.image.array"  ; id %58
               OpName %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs "OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs"  ; id %59
               OpName %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture "OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture"  ; id %60
               OpName %OpaqueBasePass_PreIntegratedGFTexture "OpaqueBasePass_PreIntegratedGFTexture"  ; id %61
               OpName %type_ByteAddressBuffer "type.ByteAddressBuffer"  ; id %62
               OpName %VirtualShadowMap_ProjectionData "VirtualShadowMap_ProjectionData"  ; id %63
               OpName %VirtualShadowMap_PageTable "VirtualShadowMap_PageTable"  ; id %64
               OpName %type_2d_image_array_0 "type.2d.image.array"  ; id %65
               OpName %VirtualShadowMap_PhysicalPagePool "VirtualShadowMap_PhysicalPagePool"  ; id %66
               OpName %type_MaterialCollection0 "type.MaterialCollection0"  ; id %67
               OpMemberName %type_MaterialCollection0 0 "MaterialCollection0_Vectors"
               OpName %MaterialCollection0 "MaterialCollection0"  ; id %68
               OpName %type_Material "type.Material"  ; id %69
               OpMemberName %type_Material 0 "Material_PreshaderBuffer"
               OpName %Material "Material"  ; id %70
               OpName %in_var_TEXCOORD10_centroid "in.var.TEXCOORD10_centroid"  ; id %3
               OpName %in_var_TEXCOORD11_centroid "in.var.TEXCOORD11_centroid"  ; id %4
               OpName %in_var_PRIMITIVE_ID "in.var.PRIMITIVE_ID"  ; id %5
               OpName %in_var_TEXCOORD9 "in.var.TEXCOORD9"  ; id %6
               OpName %out_var_SV_Target0 "out.var.SV_Target0"  ; id %9
               OpName %out_var_SV_Target1 "out.var.SV_Target1"  ; id %10
               OpName %out_var_SV_Target2 "out.var.SV_Target2"  ; id %11
               OpName %out_var_SV_Target3 "out.var.SV_Target3"  ; id %12
               OpName %out_var_SV_Target4 "out.var.SV_Target4"  ; id %13
               OpName %out_var_SV_Target5 "out.var.SV_Target5"  ; id %14
               OpName %out_var_SV_Target6 "out.var.SV_Target6"  ; id %15
               OpName %MainPS "MainPS"  ; id %2
               OpName %type_sampled_image "type.sampled.image"  ; id %71
               OpName %type_sampled_image_0 "type.sampled.image"  ; id %72

               ; Annotations
               OpDecorateString %in_var_TEXCOORD10_centroid UserSemantic "TEXCOORD10_centroid"
               OpDecorateString %in_var_TEXCOORD11_centroid UserSemantic "TEXCOORD11_centroid"
               OpDecorateString %in_var_PRIMITIVE_ID UserSemantic "PRIMITIVE_ID"
               OpDecorate %in_var_PRIMITIVE_ID Flat
               OpDecorateString %in_var_TEXCOORD9 UserSemantic "TEXCOORD9"
               OpDecorate %gl_FragCoord BuiltIn FragCoord
               OpDecorateString %gl_FragCoord UserSemantic "SV_Position"
               OpDecorate %gl_FrontFacing BuiltIn FrontFacing
               OpDecorateString %gl_FrontFacing UserSemantic "SV_IsFrontFace"
               OpDecorate %gl_FrontFacing Flat
               OpDecorateString %out_var_SV_Target0 UserSemantic "SV_Target0"
               OpDecorateString %out_var_SV_Target1 UserSemantic "SV_Target1"
               OpDecorateString %out_var_SV_Target2 UserSemantic "SV_Target2"
               OpDecorateString %out_var_SV_Target3 UserSemantic "SV_Target3"
               OpDecorateString %out_var_SV_Target4 UserSemantic "SV_Target4"
               OpDecorateString %out_var_SV_Target5 UserSemantic "SV_Target5"
               OpDecorateString %out_var_SV_Target6 UserSemantic "SV_Target6"
               OpDecorate %in_var_TEXCOORD10_centroid Location 0
               OpDecorate %in_var_TEXCOORD11_centroid Location 1
               OpDecorate %in_var_PRIMITIVE_ID Location 2
               OpDecorate %in_var_TEXCOORD9 Location 3
               OpDecorate %out_var_SV_Target0 Location 0
               OpDecorate %out_var_SV_Target1 Location 1
               OpDecorate %out_var_SV_Target2 Location 2
               OpDecorate %out_var_SV_Target3 Location 3
               OpDecorate %out_var_SV_Target4 Location 4
               OpDecorate %out_var_SV_Target5 Location 5
               OpDecorate %out_var_SV_Target6 Location 6
               OpDecorate %View DescriptorSet 0
               OpDecorate %View Binding 0
               OpDecorate %View_VolumetricLightmapIndirectionTexture DescriptorSet 0
               OpDecorate %View_VolumetricLightmapIndirectionTexture Binding 1
               OpDecorate %View_VolumetricLightmapBrickAmbientVector DescriptorSet 0
               OpDecorate %View_VolumetricLightmapBrickAmbientVector Binding 2
               OpDecorate %View_VolumetricLightmapBrickSHCoefficients0 DescriptorSet 0
               OpDecorate %View_VolumetricLightmapBrickSHCoefficients0 Binding 3
               OpDecorate %View_VolumetricLightmapBrickSHCoefficients1 DescriptorSet 0
               OpDecorate %View_VolumetricLightmapBrickSHCoefficients1 Binding 4
               OpDecorate %View_VolumetricLightmapBrickSHCoefficients2 DescriptorSet 0
               OpDecorate %View_VolumetricLightmapBrickSHCoefficients2 Binding 5
               OpDecorate %View_VolumetricLightmapBrickSHCoefficients3 DescriptorSet 0
               OpDecorate %View_VolumetricLightmapBrickSHCoefficients3 Binding 6
               OpDecorate %View_VolumetricLightmapBrickSHCoefficients4 DescriptorSet 0
               OpDecorate %View_VolumetricLightmapBrickSHCoefficients4 Binding 7
               OpDecorate %View_VolumetricLightmapBrickSHCoefficients5 DescriptorSet 0
               OpDecorate %View_VolumetricLightmapBrickSHCoefficients5 Binding 8
               OpDecorate %View_SkyBentNormalBrickTexture DescriptorSet 0
               OpDecorate %View_SkyBentNormalBrickTexture Binding 9
               OpDecorate %View_DirectionalLightShadowingBrickTexture DescriptorSet 0
               OpDecorate %View_DirectionalLightShadowingBrickTexture Binding 10
               OpDecorate %View_GlobalDistanceFieldPageAtlasTexture DescriptorSet 0
               OpDecorate %View_GlobalDistanceFieldPageAtlasTexture Binding 11
               OpDecorate %View_GlobalDistanceFieldPageTableTexture DescriptorSet 0
               OpDecorate %View_GlobalDistanceFieldPageTableTexture Binding 12
               OpDecorate %View_PerlinNoise3DTexture DescriptorSet 0
               OpDecorate %View_PerlinNoise3DTexture Binding 15
               OpDecorate %View_PerlinNoise3DTextureSampler DescriptorSet 0
               OpDecorate %View_PerlinNoise3DTextureSampler Binding 16
               OpDecorate %View_SharedBilinearClampedSampler DescriptorSet 0
               OpDecorate %View_SharedBilinearClampedSampler Binding 18
               OpDecorate %View_SharedTrilinearWrappedSampler DescriptorSet 0
               OpDecorate %View_SharedTrilinearWrappedSampler Binding 19
               OpDecorate %View_SkyIrradianceEnvironmentMap DescriptorSet 0
               OpDecorate %View_SkyIrradianceEnvironmentMap Binding 23
               OpDecorate %View_ShadingEnergyGGXSpecTexture DescriptorSet 0
               OpDecorate %View_ShadingEnergyGGXSpecTexture Binding 32
               OpDecorate %View_ShadingEnergySampler DescriptorSet 0
               OpDecorate %View_ShadingEnergySampler Binding 35
               OpDecorate %View_SimpleVolumeEnvTexture DescriptorSet 0
               OpDecorate %View_SimpleVolumeEnvTexture Binding 38
               OpDecorate %View_SimpleVolumeEnvTextureSampler DescriptorSet 0
               OpDecorate %View_SimpleVolumeEnvTextureSampler Binding 39
               OpDecorate %SingleLayerWater DescriptorSet 0
               OpDecorate %SingleLayerWater Binding 43
               OpDecorate %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture DescriptorSet 0
               OpDecorate %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture Binding 44
               OpDecorate %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture DescriptorSet 0
               OpDecorate %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture Binding 45
               OpDecorate %Scene_GPUScene_GPUScenePrimitiveSceneData DescriptorSet 0
               OpDecorate %Scene_GPUScene_GPUScenePrimitiveSceneData Binding 47
               OpDecorate %OpaqueBasePass DescriptorSet 0
               OpDecorate %OpaqueBasePass Binding 48
               OpDecorate %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas Binding 49
               OpDecorate %OpaqueBasePass_Shared_Forward_ShadowmapSampler DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_ShadowmapSampler Binding 50
               OpDecorate %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer Binding 51
               OpDecorate %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid Binding 52
               OpDecorate %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit DescriptorSet 0
               OpDecorate %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit Binding 53
               OpDecorate %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs DescriptorSet 0
               OpDecorate %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs Binding 54
               OpDecorate %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture DescriptorSet 0
               OpDecorate %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture Binding 55
               OpDecorate %OpaqueBasePass_PreIntegratedGFTexture DescriptorSet 0
               OpDecorate %OpaqueBasePass_PreIntegratedGFTexture Binding 56
               OpDecorate %VirtualShadowMap_ProjectionData DescriptorSet 0
               OpDecorate %VirtualShadowMap_ProjectionData Binding 57
               OpDecorate %VirtualShadowMap_PageTable DescriptorSet 0
               OpDecorate %VirtualShadowMap_PageTable Binding 58
               OpDecorate %VirtualShadowMap_PhysicalPagePool DescriptorSet 0
               OpDecorate %VirtualShadowMap_PhysicalPagePool Binding 59
               OpDecorate %MaterialCollection0 DescriptorSet 0
               OpDecorate %MaterialCollection0 Binding 60
               OpDecorate %Material DescriptorSet 0
               OpDecorate %Material Binding 61
               OpDecorate %_arr_v4float_uint_6 ArrayStride 16
               OpMemberDecorate %type_View 0 Offset 192
               OpMemberDecorate %type_View 0 MatrixStride 16
               OpMemberDecorate %type_View 0 ColMajor
               OpMemberDecorate %type_View 1 Offset 448
               OpMemberDecorate %type_View 1 MatrixStride 16
               OpMemberDecorate %type_View 1 ColMajor
               OpMemberDecorate %type_View 2 Offset 704
               OpMemberDecorate %type_View 2 MatrixStride 16
               OpMemberDecorate %type_View 2 ColMajor
               OpMemberDecorate %type_View 3 Offset 960
               OpMemberDecorate %type_View 4 Offset 992
               OpMemberDecorate %type_View 5 Offset 1072
               OpMemberDecorate %type_View 6 Offset 1088
               OpMemberDecorate %type_View 7 Offset 1104
               OpMemberDecorate %type_View 8 Offset 1152
               OpMemberDecorate %type_View 9 Offset 1984
               OpMemberDecorate %type_View 10 Offset 2000
               OpMemberDecorate %type_View 11 Offset 2032
               OpMemberDecorate %type_View 12 Offset 2048
               OpMemberDecorate %type_View 13 Offset 2120
               OpMemberDecorate %type_View 14 Offset 2124
               OpMemberDecorate %type_View 15 Offset 2128
               OpMemberDecorate %type_View 16 Offset 2144
               OpMemberDecorate %type_View 17 Offset 2176
               OpMemberDecorate %type_View 18 Offset 2192
               OpMemberDecorate %type_View 19 Offset 2228
               OpMemberDecorate %type_View 20 Offset 2260
               OpMemberDecorate %type_View 21 Offset 2280
               OpMemberDecorate %type_View 22 Offset 2288
               OpMemberDecorate %type_View 23 Offset 2304
               OpMemberDecorate %type_View 24 Offset 2480
               OpMemberDecorate %type_View 25 Offset 2876
               OpMemberDecorate %type_View 26 Offset 2916
               OpMemberDecorate %type_View 27 Offset 2928
               OpMemberDecorate %type_View 28 Offset 3120
               OpMemberDecorate %type_View 29 Offset 3216
               OpMemberDecorate %type_View 30 Offset 3512
               OpMemberDecorate %type_View 31 Offset 3520
               OpMemberDecorate %type_View 32 Offset 3552
               OpMemberDecorate %type_View 33 Offset 3560
               OpMemberDecorate %type_View 34 Offset 3592
               OpMemberDecorate %type_View 35 Offset 3696
               OpMemberDecorate %type_View 36 Offset 3712
               OpMemberDecorate %type_View 37 Offset 3728
               OpMemberDecorate %type_View 38 Offset 3740
               OpMemberDecorate %type_View 39 Offset 3744
               OpMemberDecorate %type_View 40 Offset 3896
               OpMemberDecorate %type_View 41 Offset 5160
               OpMemberDecorate %type_View 42 Offset 5164
               OpDecorate %type_View Block
               OpDecorateString %View UserTypeGOOGLE "cbuffer"
               OpDecorateString %View_VolumetricLightmapIndirectionTexture UserTypeGOOGLE "texture3d:<uint4>"
               OpDecorateString %View_VolumetricLightmapBrickAmbientVector UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_VolumetricLightmapBrickSHCoefficients0 UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_VolumetricLightmapBrickSHCoefficients1 UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_VolumetricLightmapBrickSHCoefficients2 UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_VolumetricLightmapBrickSHCoefficients3 UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_VolumetricLightmapBrickSHCoefficients4 UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_VolumetricLightmapBrickSHCoefficients5 UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_SkyBentNormalBrickTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_DirectionalLightShadowingBrickTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_GlobalDistanceFieldPageAtlasTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorateString %View_GlobalDistanceFieldPageTableTexture UserTypeGOOGLE "texture3d:<uint>"
               OpDecorateString %View_PerlinNoise3DTexture UserTypeGOOGLE "texture3d:<vector<float,4> >"
               OpDecorate %_runtimearr_v4float ArrayStride 16
               OpMemberDecorate %type_StructuredBuffer_v4float 0 Offset 0
               OpMemberDecorate %type_StructuredBuffer_v4float 0 NonWritable
               OpDecorate %type_StructuredBuffer_v4float BufferBlock
               OpDecorateString %View_SkyIrradianceEnvironmentMap UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorateString %View_ShadingEnergyGGXSpecTexture UserTypeGOOGLE "texture2d:<float2>"
               OpDecorateString %View_SimpleVolumeEnvTexture UserTypeGOOGLE "texture3d:<float>"
               OpMemberDecorate %type_SingleLayerWater 0 Offset 64
               OpMemberDecorate %type_SingleLayerWater 1 Offset 80
               OpMemberDecorate %type_SingleLayerWater 2 Offset 96
               OpMemberDecorate %type_SingleLayerWater 3 Offset 112
               OpMemberDecorate %type_SingleLayerWater 4 Offset 116
               OpDecorate %type_SingleLayerWater Block
               OpDecorateString %SingleLayerWater UserTypeGOOGLE "cbuffer"
               OpDecorateString %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %Scene_GPUScene_GPUScenePrimitiveSceneData UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorate %_arr_mat4v4float_uint_4 ArrayStride 64
               OpDecorate %_arr_v4float_uint_4 ArrayStride 16
               OpMemberDecorate %type_OpaqueBasePass 0 Offset 0
               OpMemberDecorate %type_OpaqueBasePass 1 Offset 8
               OpMemberDecorate %type_OpaqueBasePass 2 Offset 16
               OpMemberDecorate %type_OpaqueBasePass 3 Offset 32
               OpMemberDecorate %type_OpaqueBasePass 4 Offset 48
               OpMemberDecorate %type_OpaqueBasePass 5 Offset 64
               OpMemberDecorate %type_OpaqueBasePass 6 Offset 76
               OpMemberDecorate %type_OpaqueBasePass 7 Offset 80
               OpMemberDecorate %type_OpaqueBasePass 8 Offset 96
               OpMemberDecorate %type_OpaqueBasePass 9 Offset 104
               OpMemberDecorate %type_OpaqueBasePass 10 Offset 112
               OpMemberDecorate %type_OpaqueBasePass 11 Offset 116
               OpMemberDecorate %type_OpaqueBasePass 12 Offset 128
               OpMemberDecorate %type_OpaqueBasePass 13 Offset 144
               OpMemberDecorate %type_OpaqueBasePass 13 MatrixStride 16
               OpMemberDecorate %type_OpaqueBasePass 13 ColMajor
               OpMemberDecorate %type_OpaqueBasePass 14 Offset 400
               OpMemberDecorate %type_OpaqueBasePass 15 Offset 464
               OpMemberDecorate %type_OpaqueBasePass 16 Offset 592
               OpMemberDecorate %type_OpaqueBasePass 17 Offset 2240
               OpMemberDecorate %type_OpaqueBasePass 18 Offset 2276
               OpMemberDecorate %type_OpaqueBasePass 19 Offset 2304
               OpDecorate %type_OpaqueBasePass Block
               OpDecorateString %OpaqueBasePass UserTypeGOOGLE "cbuffer"
               OpDecorateString %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer UserTypeGOOGLE "structuredbuffer:<float4>"
               OpDecorate %_runtimearr_uint ArrayStride 4
               OpMemberDecorate %type_StructuredBuffer_uint 0 Offset 0
               OpMemberDecorate %type_StructuredBuffer_uint 0 NonWritable
               OpDecorate %type_StructuredBuffer_uint BufferBlock
               OpDecorateString %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid UserTypeGOOGLE "structuredbuffer:<uint>"
               OpDecorateString %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit UserTypeGOOGLE "buffer:<uint>"
               OpDecorateString %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs UserTypeGOOGLE "rwtexture2darray:<uint>"
               OpDecorateString %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpDecorateString %OpaqueBasePass_PreIntegratedGFTexture UserTypeGOOGLE "texture2d:<vector<float,4> >"
               OpMemberDecorate %type_ByteAddressBuffer 0 Offset 0
               OpMemberDecorate %type_ByteAddressBuffer 0 NonWritable
               OpDecorate %type_ByteAddressBuffer BufferBlock
               OpDecorateString %VirtualShadowMap_ProjectionData UserTypeGOOGLE "byteaddressbuffer"
               OpDecorateString %VirtualShadowMap_PageTable UserTypeGOOGLE "structuredbuffer:<uint>"
               OpDecorateString %VirtualShadowMap_PhysicalPagePool UserTypeGOOGLE "texture2darray:<uint>"
               OpDecorate %_arr_v4float_uint_5 ArrayStride 16
               OpMemberDecorate %type_MaterialCollection0 0 Offset 0
               OpDecorate %type_MaterialCollection0 Block
               OpDecorateString %MaterialCollection0 UserTypeGOOGLE "cbuffer"
               OpDecorate %_arr_v4float_uint_109 ArrayStride 16
               OpMemberDecorate %type_Material 0 Offset 0
               OpDecorate %type_Material Block
               OpDecorateString %Material UserTypeGOOGLE "cbuffer"

               ; Types, variables and constants
      %float = OpTypeFloat 32
%float_3_14159274 = OpConstant %float 3.14159274
%float_64512 = OpConstant %float 64512
    %v3float = OpTypeVector %float 3
    %v4float = OpTypeVector %float 4
%mat4v4float = OpTypeMatrix %v4float 4
    %v2float = OpTypeVector %float 2
       %uint = OpTypeInt 32 0
     %v4uint = OpTypeVector %uint 4
        %int = OpTypeInt 32 1
     %uint_2 = OpConstant %uint 2
     %uint_8 = OpConstant %uint 8
     %uint_6 = OpConstant %uint 6
      %v2int = OpTypeVector %int 2
    %uint_32 = OpConstant %uint 32
      %v4int = OpTypeVector %int 4
    %float_1 = OpConstant %float 1
       %bool = OpTypeBool
     %uint_3 = OpConstant %uint 3
      %int_0 = OpConstant %int 0
      %int_2 = OpConstant %int 2
      %int_1 = OpConstant %int 1
     %uint_0 = OpConstant %uint 0
    %float_0 = OpConstant %float 0
        %104 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_0
      %false = OpConstantFalse %bool
      %int_6 = OpConstant %int 6
     %int_96 = OpConstant %int 96
        %108 = OpConstantComposite %v3float %float_0 %float_0 %float_0
      %int_4 = OpConstant %int 4
   %uint_512 = OpConstant %uint 512
   %uint_256 = OpConstant %uint 256
     %uint_4 = OpConstant %uint 4
      %int_3 = OpConstant %int 3
     %int_13 = OpConstant %int 13
    %uint_14 = OpConstant %uint 14
    %uint_31 = OpConstant %uint 31
     %uint_1 = OpConstant %uint 1
     %int_11 = OpConstant %int 11
     %int_12 = OpConstant %int 12
     %int_24 = OpConstant %int 24
     %int_17 = OpConstant %int 17
     %int_20 = OpConstant %int 20
     %int_10 = OpConstant %int 10
        %124 = OpConstantComposite %v4float %float_1 %float_1 %float_1 %float_1
       %true = OpConstantTrue %bool
     %int_16 = OpConstant %int 16
     %int_21 = OpConstant %int 21
     %int_75 = OpConstant %int 75
     %int_76 = OpConstant %int 76
     %int_15 = OpConstant %int 15
        %131 = OpConstantComposite %v2float %float_0 %float_0
     %int_47 = OpConstant %int 47
     %int_65 = OpConstant %int 65
        %134 = OpConstantComposite %v3float %float_1 %float_1 %float_1
     %int_81 = OpConstant %int 81
     %int_27 = OpConstant %int 27
     %int_29 = OpConstant %int 29
%float_0_577000022 = OpConstant %float 0.577000022
        %139 = OpConstantComposite %v3float %float_0_577000022 %float_0_577000022 %float_0_577000022
        %140 = OpConstantComposite %v3float %float_1 %float_1 %float_0
        %141 = OpConstantComposite %v3float %float_0 %float_1 %float_1
  %float_0_5 = OpConstant %float 0.5
        %143 = OpConstantComposite %v3float %float_0_5 %float_0_5 %float_0_5
     %int_41 = OpConstant %int 41
%float_0_0500000007 = OpConstant %float 0.0500000007
        %146 = OpConstantComposite %v3float %float_1 %float_0 %float_1
     %int_18 = OpConstant %int 18
     %int_19 = OpConstant %int 19
     %int_51 = OpConstant %int 51
      %int_9 = OpConstant %int 9
%float_0_00392156886 = OpConstant %float 0.00392156886
     %int_73 = OpConstant %int 73
     %int_25 = OpConstant %int 25
     %int_48 = OpConstant %int 48
        %155 = OpConstantComposite %v2float %float_0_5 %float_0_5
    %float_2 = OpConstant %float 2
   %float_n2 = OpConstant %float -2
        %158 = OpConstantComposite %v2float %float_2 %float_n2
   %float_47 = OpConstant %float 47
   %float_17 = OpConstant %float 17
%float_0_0671105608 = OpConstant %float 0.0671105608
%float_0_00583714992 = OpConstant %float 0.00583714992
%float_52_9829178 = OpConstant %float 52.9829178
     %int_28 = OpConstant %int 28
     %uint_5 = OpConstant %uint 5
%uint_4294967288 = OpConstant %uint 4294967288
     %uint_7 = OpConstant %uint 7
    %uint_11 = OpConstant %uint 11
        %169 = OpConstantComposite %v3float %float_64512 %float_64512 %float_64512
%uint_2139095040 = OpConstant %uint 2139095040
%float_0_99000001 = OpConstant %float 0.99000001
        %172 = OpConstantComposite %v3float %float_0_99000001 %float_0_99000001 %float_0_99000001
   %uint_128 = OpConstant %uint 128
    %int_108 = OpConstant %int 108
%float_0_449999988 = OpConstant %float 0.449999988
%float_0_300000012 = OpConstant %float 0.300000012
%float_0_589999974 = OpConstant %float 0.589999974
%float_0_109999999 = OpConstant %float 0.109999999
        %179 = OpConstantComposite %v3float %float_0_300000012 %float_0_589999974 %float_0_109999999
%float_2_04040003 = OpConstant %float 2.04040003
%float_0_332399994 = OpConstant %float 0.332399994
        %182 = OpConstantComposite %v3float %float_0_332399994 %float_0_332399994 %float_0_332399994
%float_n4_79510021 = OpConstant %float -4.79510021
%float_0_641700029 = OpConstant %float 0.641700029
        %185 = OpConstantComposite %v3float %float_0_641700029 %float_0_641700029 %float_0_641700029
%float_2_75519991 = OpConstant %float 2.75519991
%float_0_690299988 = OpConstant %float 0.690299988
        %188 = OpConstantComposite %v3float %float_0_690299988 %float_0_690299988 %float_0_690299988
     %int_n1 = OpConstant %int -1
     %v2uint = OpTypeVector %uint 2
     %int_37 = OpConstant %int 37
%float_2097152 = OpConstant %float 2097152
   %float_50 = OpConstant %float 50
%float_9_99999996en13 = OpConstant %float 9.99999996e-13
%float_0_0199999996 = OpConstant %float 0.0199999996
%float_9_99999975en06 = OpConstant %float 9.99999975e-06
        %197 = OpConstantComposite %v3float %float_9_99999975en06 %float_9_99999975en06 %float_9_99999975en06
     %int_85 = OpConstant %int 85
     %int_59 = OpConstant %int 59
%float_0_0399999991 = OpConstant %float 0.0399999991
    %uint_16 = OpConstant %uint 16
    %uint_64 = OpConstant %uint 64
    %uint_40 = OpConstant %uint 40
     %uint_9 = OpConstant %uint 9
    %uint_10 = OpConstant %uint 10
  %uint_4095 = OpConstant %uint 4095
    %uint_12 = OpConstant %uint 12
   %uint_255 = OpConstant %uint 255
    %uint_20 = OpConstant %uint 20
    %uint_19 = OpConstant %uint 19
    %uint_24 = OpConstant %uint 24
%uint_1047552 = OpConstant %uint 1047552
  %uint_1023 = OpConstant %uint 1023
    %uint_63 = OpConstant %uint 63
   %uint_127 = OpConstant %uint 127
    %uint_26 = OpConstant %uint 26
    %uint_22 = OpConstant %uint 22
%uint_4294963200 = OpConstant %uint 4294963200
  %float_100 = OpConstant %float 100
  %float_128 = OpConstant %float 128
%float_0_00390625 = OpConstant %float 0.00390625
   %float_16 = OpConstant %float 16
     %int_23 = OpConstant %int 23
     %int_22 = OpConstant %int 22
     %int_30 = OpConstant %int 30
     %int_31 = OpConstant %int 31
     %int_33 = OpConstant %int 33
     %int_35 = OpConstant %int 35
     %int_26 = OpConstant %int 26
     %int_39 = OpConstant %int 39
     %int_40 = OpConstant %int 40
     %int_42 = OpConstant %int 42
     %int_43 = OpConstant %int 43
     %int_32 = OpConstant %int 32
     %int_45 = OpConstant %int 45
     %int_34 = OpConstant %int 34
     %int_46 = OpConstant %int 46
     %int_52 = OpConstant %int 52
     %int_38 = OpConstant %int 38
     %int_54 = OpConstant %int 54
     %int_56 = OpConstant %int 56
     %int_57 = OpConstant %int 57
     %int_58 = OpConstant %int 58
     %int_60 = OpConstant %int 60
     %int_61 = OpConstant %int 61
     %int_62 = OpConstant %int 62
     %int_63 = OpConstant %int 63
     %int_64 = OpConstant %int 64
     %int_49 = OpConstant %int 49
     %int_67 = OpConstant %int 67
     %int_68 = OpConstant %int 68
     %int_53 = OpConstant %int 53
     %int_70 = OpConstant %int 70
     %int_71 = OpConstant %int 71
     %int_72 = OpConstant %int 72
     %int_74 = OpConstant %int 74
     %int_77 = OpConstant %int 77
     %int_78 = OpConstant %int 78
     %int_79 = OpConstant %int 79
     %int_80 = OpConstant %int 80
     %int_86 = OpConstant %int 86
     %int_87 = OpConstant %int 87
     %int_88 = OpConstant %int 88
     %int_89 = OpConstant %int 89
     %int_90 = OpConstant %int 90
     %int_91 = OpConstant %int 91
     %int_92 = OpConstant %int 92
     %int_93 = OpConstant %int 93
     %int_94 = OpConstant %int 94
     %int_95 = OpConstant %int 95
     %int_97 = OpConstant %int 97
     %int_82 = OpConstant %int 82
     %int_83 = OpConstant %int 83
    %int_103 = OpConstant %int 103
    %int_104 = OpConstant %int 104
    %int_106 = OpConstant %int 106
    %int_107 = OpConstant %int 107
    %int_105 = OpConstant %int 105
%mat3v3float = OpTypeMatrix %v3float 3
%_arr_v3float_uint_4 = OpTypeArray %v3float %uint_4
    %uint_15 = OpConstant %uint 15
%float_100000 = OpConstant %float 100000
   %float_n1 = OpConstant %float -1
        %284 = OpConstantComposite %v2float %float_1 %float_0
%float_1_20000005 = OpConstant %float 1.20000005
        %286 = OpConstantComposite %v3float %float_1_20000005 %float_1_20000005 %float_1_20000005
        %287 = OpConstantComposite %v3float %float_n1 %float_n1 %float_n1
%float_0_100000001 = OpConstant %float 0.100000001
        %289 = OpConstantComposite %v3float %float_0_100000001 %float_0_100000001 %float_0_100000001
%float_6_28318548 = OpConstant %float 6.28318548
%float_0_00100000005 = OpConstant %float 0.00100000005
%float_0_00200000009 = OpConstant %float 0.00200000009
%float_0_800000012 = OpConstant %float 0.800000012
    %float_4 = OpConstant %float 4
 %float_0_75 = OpConstant %float 0.75
%float_10000 = OpConstant %float 10000
        %297 = OpConstantComposite %v3float %float_10000 %float_10000 %float_10000
    %float_8 = OpConstant %float 8
        %299 = OpConstantComposite %v3float %float_0 %float_0 %float_1
%float_9_99999975en05 = OpConstant %float 9.99999975e-05
    %uint_41 = OpConstant %uint 41
    %uint_18 = OpConstant %uint 18
 %uint_65535 = OpConstant %uint 65535
    %uint_17 = OpConstant %uint 17
    %uint_25 = OpConstant %uint 25
%uint_16777215 = OpConstant %uint 16777215
 %uint_32768 = OpConstant %uint 32768
  %float_127 = OpConstant %float 127
    %float_3 = OpConstant %float 3
%float_0_0799999982 = OpConstant %float 0.0799999982
%float_3_87297916 = OpConstant %float 3.87297916
%float_4_47213888 = OpConstant %float 4.47213888
        %313 = OpConstantComposite %v4float %float_3_87297916 %float_4_47213888 %float_3_87297916 %float_3_87297916
    %float_6 = OpConstant %float 6
        %315 = OpConstantComposite %v2uint %uint_31 %uint_31
 %float_4000 = OpConstant %float 4000
%float_0_000230000005 = OpConstant %float 0.000230000005
%float_n0_000230000005 = OpConstant %float -0.000230000005
        %319 = OpConstantComposite %v2float %float_0_000230000005 %float_n0_000230000005
%float_1_54999995 = OpConstant %float 1.54999995
  %float_255 = OpConstant %float 255
        %322 = OpConstantComposite %v2float %float_1 %float_1
 %float_1023 = OpConstant %float 1023
 %float_2047 = OpConstant %float 2047
  %uint_2047 = OpConstant %uint 2047
   %float_63 = OpConstant %float 63
%uint_1072693248 = OpConstant %uint 1072693248
%uint_4292870144 = OpConstant %uint 4292870144
%uint_2096128 = OpConstant %uint 2096128
 %float_0_25 = OpConstant %float 0.25
        %331 = OpConstantComposite %v3float %float_0_25 %float_0_25 %float_0_25
        %332 = OpConstantComposite %v3float %float_0 %float_0_5 %float_0_5
%uint_4294967292 = OpConstant %uint 4294967292
 %float_1024 = OpConstant %float 1024
        %335 = OpConstantComposite %v2float %float_1024 %float_1024
        %336 = OpConstantComposite %v2float %float_2047 %float_2047
%float_4_76837158en07 = OpConstant %float 4.76837158e-07
%float_0_333299994 = OpConstant %float 0.333299994
%float_1_73205137 = OpConstant %float 1.73205137
        %340 = OpConstantComposite %v4float %float_1_73205137 %float_1_73205137 %float_1_73205137 %float_3_87297916
%float_0_488602996 = OpConstant %float 0.488602996
%float_1_09254801 = OpConstant %float 1.09254801
%float_0_315391988 = OpConstant %float 0.315391988
  %uint_2048 = OpConstant %uint 2048
  %uint_4096 = OpConstant %uint 4096
  %uint_8192 = OpConstant %uint 8192
%float_0_400000006 = OpConstant %float 0.400000006
        %348 = OpConstantComposite %v3float %float_2 %float_0 %float_n2
        %349 = OpConstantComposite %v3float %float_n1 %float_2 %float_n1
        %350 = OpConstantComposite %v3float %float_0 %float_0 %float_0_00100000005
%float_0_899999976 = OpConstant %float 0.899999976
        %352 = OpConstantComposite %v2uint %uint_128 %uint_128
        %353 = OpConstantComposite %v2uint %uint_127 %uint_127
%uint_4294967295 = OpConstant %uint 4294967295
%float_9_99999997en07 = OpConstant %float 9.99999997e-07
        %356 = OpConstantComposite %v3float %float_9_99999997en07 %float_9_99999997en07 %float_9_99999997en07
%float_0_200000003 = OpConstant %float 0.200000003
%uint_2147483647 = OpConstant %uint 2147483647
     %v3uint = OpTypeVector %uint 3
        %360 = OpConstantComposite %v3uint %uint_2147483647 %uint_2147483647 %uint_2147483647
%float_0_600000024 = OpConstant %float 0.600000024
        %362 = OpConstantComposite %v3float %float_1 %float_0 %float_0
        %363 = OpConstantComposite %v3float %float_0 %float_1 %float_0
        %364 = OpConstantComposite %v4float %float_0 %float_0 %float_0 %float_100
        %365 = OpConstantComposite %v3uint %uint_8 %uint_8 %uint_8
    %float_7 = OpConstant %float 7
        %367 = OpConstantComposite %v3float %float_9_99999996en13 %float_9_99999996en13 %float_9_99999996en13
   %uint_336 = OpConstant %uint 336
    %uint_96 = OpConstant %uint 96
   %uint_112 = OpConstant %uint 112
   %uint_144 = OpConstant %uint 144
   %uint_160 = OpConstant %uint 160
   %uint_176 = OpConstant %uint 176
   %uint_268 = OpConstant %uint 268
   %uint_272 = OpConstant %uint 272
   %uint_288 = OpConstant %uint 288
   %uint_300 = OpConstant %uint 300
   %uint_304 = OpConstant %uint 304
   %uint_312 = OpConstant %uint 312
   %uint_316 = OpConstant %uint 316
 %uint_16384 = OpConstant %uint 16384
        %382 = OpConstantComposite %v2int %int_32 %int_32
        %383 = OpConstantComposite %v2int %int_31 %int_31
%float_0_0350000001 = OpConstant %float 0.0350000001
   %float_20 = OpConstant %float 20
%float_1_57079637 = OpConstant %float 1.57079637
   %float_10 = OpConstant %float 10
%float_1_19000006 = OpConstant %float 1.19000006
%float_0_360000014 = OpConstant %float 0.360000014
%float_n3_6500001 = OpConstant %float -3.6500001
%int_532487669 = OpConstant %int 532487669
   %float_15 = OpConstant %float 15
        %393 = OpConstantComposite %v4float %float_15 %float_15 %float_15 %float_15
        %394 = OpConstantComposite %v4float %float_10 %float_10 %float_10 %float_10
   %float_19 = OpConstant %float 19
  %float_101 = OpConstant %float 101
        %397 = OpConstantComposite %v3float %float_19 %float_47 %float_101
        %398 = OpConstantComposite %v3uint %uint_32768 %uint_16384 %uint_8192
%float_6_10351562en05 = OpConstant %float 6.10351562e-05
%float_0_000122070312 = OpConstant %float 0.000122070312
%float_0_000244140625 = OpConstant %float 0.000244140625
        %402 = OpConstantComposite %v3float %float_6_10351562en05 %float_0_000122070312 %float_0_000244140625
%float_0_2588 = OpConstant %float 0.2588
 %uint_21845 = OpConstant %uint 21845
%uint_134217728 = OpConstant %uint 134217728
 %float_n0_5 = OpConstant %float -0.5
%uint_4294967294 = OpConstant %uint 4294967294
%float_0_00313066994 = OpConstant %float 0.00313066994
%float_12_9200001 = OpConstant %float 12.9200001
%float_0_416666657 = OpConstant %float 0.416666657
%float_1_05499995 = OpConstant %float 1.05499995
%uint_1664525 = OpConstant %uint 1664525
        %413 = OpConstantComposite %v3uint %uint_1664525 %uint_1664525 %uint_1664525
%uint_1013904223 = OpConstant %uint 1013904223
        %415 = OpConstantComposite %v3uint %uint_1013904223 %uint_1013904223 %uint_1013904223
        %416 = OpConstantComposite %v3uint %uint_16 %uint_16 %uint_16
        %417 = OpConstantComposite %v3uint %uint_31 %uint_31 %uint_31
%float_0_055555556 = OpConstant %float 0.055555556
%float_2_20000005 = OpConstant %float 2.20000005
 %float_34_5 = OpConstant %float 34.5
 %float_24_5 = OpConstant %float 24.5
%float_73_1999969 = OpConstant %float 73.1999969
%float_8_89999962 = OpConstant %float 8.89999962
%float_3_5999999 = OpConstant %float 3.5999999
%float_1_00010002 = OpConstant %float 1.00010002
%int_2129859010 = OpConstant %int 2129859010
%float_0_140000001 = OpConstant %float 0.140000001
%_arr_v4float_uint_6 = OpTypeArray %v4float %uint_6
  %type_View = OpTypeStruct %mat4v4float %mat4v4float %mat4v4float %v3float %v3float %v4float %v4float %v3float %v3float %v4float %v4float %v4float %v4float %float %float %v4float %v4float %v2float %float %float %uint %float %v4float %v3float %v3float %float %float %v4float %_arr_v4float_uint_6 %_arr_v4float_uint_6 %int %v3float %float %uint %float %v3float %v3float %v3float %float %v3float %float %uint %uint
%_ptr_Uniform_type_View = OpTypePointer Uniform %type_View
%type_3d_image = OpTypeImage %uint 3D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_3d_image = OpTypePointer UniformConstant %type_3d_image
%type_3d_image_0 = OpTypeImage %float 3D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_3d_image_0 = OpTypePointer UniformConstant %type_3d_image_0
%type_2d_image = OpTypeImage %float 2D 2 0 0 1 Unknown
%_ptr_UniformConstant_type_2d_image = OpTypePointer UniformConstant %type_2d_image
%type_sampler = OpTypeSampler
%_ptr_UniformConstant_type_sampler = OpTypePointer UniformConstant %type_sampler
%_runtimearr_v4float = OpTypeRuntimeArray %v4float
%type_StructuredBuffer_v4float = OpTypeStruct %_runtimearr_v4float
%_ptr_Uniform_type_StructuredBuffer_v4float = OpTypePointer Uniform %type_StructuredBuffer_v4float
      %v3int = OpTypeVector %int 3
%type_SingleLayerWater = OpTypeStruct %v4float %v4float %v2float %uint %uint
%_ptr_Uniform_type_SingleLayerWater = OpTypePointer Uniform %type_SingleLayerWater
%_arr_mat4v4float_uint_4 = OpTypeArray %mat4v4float %uint_4
%_arr_v4float_uint_4 = OpTypeArray %v4float %uint_4
%type_OpaqueBasePass = OpTypeStruct %uint %uint %v3int %uint %v3float %v3float %float %v3float %uint %v2float %uint %int %v4float %_arr_mat4v4float_uint_4 %_arr_v4float_uint_4 %v4float %uint %uint %int %int
%_ptr_Uniform_type_OpaqueBasePass = OpTypePointer Uniform %type_OpaqueBasePass
%_runtimearr_uint = OpTypeRuntimeArray %uint
%type_StructuredBuffer_uint = OpTypeStruct %_runtimearr_uint
%_ptr_Uniform_type_StructuredBuffer_uint = OpTypePointer Uniform %type_StructuredBuffer_uint
%type_buffer_image = OpTypeImage %uint Buffer 2 0 0 1 R32ui
%_ptr_UniformConstant_type_buffer_image = OpTypePointer UniformConstant %type_buffer_image
%type_2d_image_array = OpTypeImage %uint 2D 2 1 0 2 R32ui
%_ptr_UniformConstant_type_2d_image_array = OpTypePointer UniformConstant %type_2d_image_array
%type_ByteAddressBuffer = OpTypeStruct %_runtimearr_uint
%_ptr_Uniform_type_ByteAddressBuffer = OpTypePointer Uniform %type_ByteAddressBuffer
%type_2d_image_array_0 = OpTypeImage %uint 2D 2 1 0 1 Unknown
%_ptr_UniformConstant_type_2d_image_array_0 = OpTypePointer UniformConstant %type_2d_image_array_0
%_arr_v4float_uint_5 = OpTypeArray %v4float %uint_5
%type_MaterialCollection0 = OpTypeStruct %_arr_v4float_uint_5
%_ptr_Uniform_type_MaterialCollection0 = OpTypePointer Uniform %type_MaterialCollection0
   %uint_109 = OpConstant %uint 109
%_arr_v4float_uint_109 = OpTypeArray %v4float %uint_109
%type_Material = OpTypeStruct %_arr_v4float_uint_109
%_ptr_Uniform_type_Material = OpTypePointer Uniform %type_Material
%_ptr_Input_v4float = OpTypePointer Input %v4float
%_ptr_Input_uint = OpTypePointer Input %uint
%_ptr_Input_v3float = OpTypePointer Input %v3float
%_ptr_Input_bool = OpTypePointer Input %bool
%_ptr_Output_v4float = OpTypePointer Output %v4float
%_ptr_Output_uint = OpTypePointer Output %uint
       %void = OpTypeVoid
        %452 = OpTypeFunction %void
%_ptr_Function_v3float = OpTypePointer Function %v3float
%_ptr_Uniform_uint = OpTypePointer Uniform %uint
     %v4bool = OpTypeVector %bool 4
%_ptr_Uniform_v4float = OpTypePointer Uniform %v4float
%_ptr_Uniform_float = OpTypePointer Uniform %float
     %v3bool = OpTypeVector %bool 3
%_ptr_Uniform_v2float = OpTypePointer Uniform %v2float
%_ptr_Uniform_int = OpTypePointer Uniform %int
%_ptr_Uniform_v3float = OpTypePointer Uniform %v3float
%type_sampled_image = OpTypeSampledImage %type_2d_image
%_ptr_Uniform_mat4v4float = OpTypePointer Uniform %mat4v4float
     %v2bool = OpTypeVector %bool 2
%type_sampled_image_0 = OpTypeSampledImage %type_3d_image_0
%_ptr_Uniform_v3int = OpTypePointer Uniform %v3int
%_ptr_Function__arr_v3float_uint_4 = OpTypePointer Function %_arr_v3float_uint_4
       %View = OpVariable %_ptr_Uniform_type_View Uniform
%View_VolumetricLightmapIndirectionTexture = OpVariable %_ptr_UniformConstant_type_3d_image UniformConstant
%View_VolumetricLightmapBrickAmbientVector = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_VolumetricLightmapBrickSHCoefficients0 = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_VolumetricLightmapBrickSHCoefficients1 = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_VolumetricLightmapBrickSHCoefficients2 = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_VolumetricLightmapBrickSHCoefficients3 = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_VolumetricLightmapBrickSHCoefficients4 = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_VolumetricLightmapBrickSHCoefficients5 = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_SkyBentNormalBrickTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_DirectionalLightShadowingBrickTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_GlobalDistanceFieldPageAtlasTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_GlobalDistanceFieldPageTableTexture = OpVariable %_ptr_UniformConstant_type_3d_image UniformConstant
%View_PerlinNoise3DTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_PerlinNoise3DTextureSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SharedBilinearClampedSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SharedTrilinearWrappedSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SkyIrradianceEnvironmentMap = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%View_ShadingEnergyGGXSpecTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%View_ShadingEnergySampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%View_SimpleVolumeEnvTexture = OpVariable %_ptr_UniformConstant_type_3d_image_0 UniformConstant
%View_SimpleVolumeEnvTextureSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%SingleLayerWater = OpVariable %_ptr_Uniform_type_SingleLayerWater Uniform
%SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%Scene_GPUScene_GPUScenePrimitiveSceneData = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%OpaqueBasePass = OpVariable %_ptr_Uniform_type_OpaqueBasePass Uniform
%OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%OpaqueBasePass_Shared_Forward_ShadowmapSampler = OpVariable %_ptr_UniformConstant_type_sampler UniformConstant
%OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer = OpVariable %_ptr_Uniform_type_StructuredBuffer_v4float Uniform
%OpaqueBasePass_Shared_Forward_NumCulledLightsGrid = OpVariable %_ptr_Uniform_type_StructuredBuffer_uint Uniform
%OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit = OpVariable %_ptr_UniformConstant_type_buffer_image UniformConstant
%OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs = OpVariable %_ptr_UniformConstant_type_2d_image_array UniformConstant
%OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%OpaqueBasePass_PreIntegratedGFTexture = OpVariable %_ptr_UniformConstant_type_2d_image UniformConstant
%VirtualShadowMap_ProjectionData = OpVariable %_ptr_Uniform_type_ByteAddressBuffer Uniform
%VirtualShadowMap_PageTable = OpVariable %_ptr_Uniform_type_StructuredBuffer_uint Uniform
%VirtualShadowMap_PhysicalPagePool = OpVariable %_ptr_UniformConstant_type_2d_image_array_0 UniformConstant
%MaterialCollection0 = OpVariable %_ptr_Uniform_type_MaterialCollection0 Uniform
   %Material = OpVariable %_ptr_Uniform_type_Material Uniform
%in_var_TEXCOORD10_centroid = OpVariable %_ptr_Input_v4float Input
%in_var_TEXCOORD11_centroid = OpVariable %_ptr_Input_v4float Input
%in_var_PRIMITIVE_ID = OpVariable %_ptr_Input_uint Input
%in_var_TEXCOORD9 = OpVariable %_ptr_Input_v3float Input
%gl_FragCoord = OpVariable %_ptr_Input_v4float Input
%gl_FrontFacing = OpVariable %_ptr_Input_bool Input
%out_var_SV_Target0 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target1 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target2 = OpVariable %_ptr_Output_v4float Output
%out_var_SV_Target3 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target4 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target5 = OpVariable %_ptr_Output_uint Output
%out_var_SV_Target6 = OpVariable %_ptr_Output_uint Output
        %466 = OpUndef %v3float
        %467 = OpConstantNull %uint
        %468 = OpConstantNull %v4float
        %469 = OpConstantNull %v3float
        %470 = OpConstantNull %float
%float_0_03125 = OpConstant %float 0.03125
        %472 = OpConstantComposite %v3float %float_0_03125 %float_0_03125 %float_0_03125
%float_32_6650009 = OpConstant %float 32.6650009
%float_11_8149996 = OpConstant %float 11.8149996
        %475 = OpConstantComposite %v2float %float_32_6650009 %float_11_8149996
        %476 = OpConstantComposite %v2float %float_0_0671105608 %float_0_00583714992
%float_0_00787401572 = OpConstant %float 0.00787401572
%float_n0_488602996 = OpConstant %float -0.488602996
%float_n1_09254801 = OpConstant %float -1.09254801
%float_2_09439516 = OpConstant %float 2.09439516
%float_0_785398185 = OpConstant %float 0.785398185
%float_16384 = OpConstant %float 16384
%float_0_318309873 = OpConstant %float 0.318309873
   %float_n0 = OpConstant %float -0
%float_n0_156582996 = OpConstant %float -0.156582996
%float_n0_0699428469 = OpConstant %float -0.0699428469
%float_0_997551024 = OpConstant %float 0.997551024
%float_1_41421354 = OpConstant %float 1.41421354
%float_2_50662827 = OpConstant %float 2.50662827
%float_0_0465205647 = OpConstant %float 0.0465205647
%float_0_953479409 = OpConstant %float 0.953479409
%float_12_566371 = OpConstant %float 12.566371
%float_0_0795774683 = OpConstant %float 0.0795774683
%float_32256 = OpConstant %float 32256
        %495 = OpConstantComposite %v3float %float_32256 %float_32256 %float_32256
%uint_4294967293 = OpConstant %uint 4294967293
%uint_4294902015 = OpConstant %uint 4294902015
%float_0_0454545468 = OpConstant %float 0.0454545468
%float_0_0625 = OpConstant %float 0.0625
%float_0_909090936 = OpConstant %float 0.909090936
%float_0_875 = OpConstant %float 0.875
%uint_4287627263 = OpConstant %uint 4287627263
%uint_4169138175 = OpConstant %uint 4169138175
%uint_4294901760 = OpConstant %uint 4294901760
%uint_4294967263 = OpConstant %uint 4294967263
%uint_4294901759 = OpConstant %uint 4294901759
        %507 = OpConstantComposite %v3float %float_0_0454545468 %float_0_0454545468 %float_0_0625
        %508 = OpConstantComposite %v3float %float_0_909090936 %float_0_909090936 %float_0_875
        %509 = OpConstantComposite %v3float %float_0_318309873 %float_0_318309873 %float_0_318309873
%uint_4194303 = OpConstant %uint 4194303
        %511 = OpConstantComposite %v3uint %uint_1 %uint_1 %uint_1
%uint_16711680 = OpConstant %uint 16711680
    %uint_72 = OpConstant %uint 72
        %514 = OpConstantComposite %v3float %float_n1 %float_n1 %float_n0
%float_9_53674316en07 = OpConstant %float 9.53674316e-07
%float_n2_097152e_11 = OpConstant %float -2.097152e+11
%float_0_000100000005 = OpConstant %float 0.000100000005
        %518 = OpConstantComposite %v3float %float_0_000100000005 %float_0_000100000005 %float_0_000100000005
%float_0_000200000009 = OpConstant %float 0.000200000009
        %520 = OpConstantComposite %v3float %float_0_000200000009 %float_0_000200000009 %float_0_000200000009
%float_0_429042608 = OpConstant %float 0.429042608
        %522 = OpConstantComposite %v3float %float_n0_5 %float_n0_5 %float_n0_5
%float_4194_3042 = OpConstant %float 4194.3042
%float_0_0333333351 = OpConstant %float 0.0333333351
%float_3_125 = OpConstant %float 3.125
%float_0_636619747 = OpConstant %float 0.636619747
%float_0_00158730161 = OpConstant %float 0.00158730161
%uint_1048576 = OpConstant %uint 1048576
%float_0_0158730168 = OpConstant %float 0.0158730168
%float_0_999600053 = OpConstant %float 0.999600053
        %531 = OpConstantComposite %v3float %float_0_999600053 %float_0_999600053 %float_0_999600053
%float_1_52590219en05 = OpConstant %float 1.52590219e-05
        %533 = OpConstantComposite %v3float %float_1_52590219en05 %float_1_52590219en05 %float_1_52590219en05
%float_0_0666666701 = OpConstant %float 0.0666666701
        %535 = OpConstantComposite %v3float %float_0_0666666701 %float_0_0666666701 %float_0_0666666701
        %536 = OpConstantComposite %v3float %float_0_0625 %float_0_0625 %float_0_0625
        %537 = OpConstantComposite %v3float %float_0_00787401572 %float_0_00787401572 %float_0_00787401572
        %538 = OpConstantComposite %v2float %float_n0_5 %float_n0_5
%float_n6_28318548 = OpConstant %float -6.28318548
%float_0_139885694 = OpConstant %float 0.139885694
%float_n0_800000012 = OpConstant %float -0.800000012
%float_n3_98000002 = OpConstant %float -3.98000002
%float_n16_7800007 = OpConstant %float -16.7800007
%float_n0_75 = OpConstant %float -0.75
  %float_n59 = OpConstant %float -59
%float_n21_2000008 = OpConstant %float -21.2000008
%float_n0_0549999997 = OpConstant %float -0.0549999997
 %float_n127 = OpConstant %float -127
        %549 = OpUndef %v3float
        %550 = OpUndef %v3uint
        %551 = OpUndef %v4float
        %552 = OpUndef %v3float
        %553 = OpUndef %mat4v4float
        %554 = OpConstantComposite %v4float %float_0 %470 %470 %470
%float_0_886227548 = OpConstant %float 0.886227548
   %float_66 = OpConstant %float 66
  %float_120 = OpConstant %float 120
  %float_148 = OpConstant %float 148
  %float_167 = OpConstant %float 167
        %560 = OpUndef %float
        %561 = OpUndef %v3uint
        %562 = OpUndef %v4float
        %563 = OpUndef %v3float
        %564 = OpUndef %v2float
        %565 = OpConstantComposite %v3float %470 %470 %470
        %566 = OpConstantComposite %v3bool %true %true %true
        %567 = OpConstantComposite %v3bool %false %false %false
        %568 = OpConstantComposite %v2float %470 %float_0
  %uint_8194 = OpConstant %uint 8194
%float_1_53787023en05 = OpConstant %float 1.53787023e-05
        %571 = OpConstantComposite %v2float %470 %470
%uint_2130706432 = OpConstant %uint 2130706432
    %uint_23 = OpConstant %uint 23
    %uint_27 = OpConstant %uint 27
    %uint_33 = OpConstant %uint 33
    %uint_28 = OpConstant %uint 28
    %uint_29 = OpConstant %uint 29
    %uint_30 = OpConstant %uint 30
    %uint_35 = OpConstant %uint 35
    %uint_36 = OpConstant %uint 36
    %uint_37 = OpConstant %uint 37
    %uint_38 = OpConstant %uint 38
    %uint_39 = OpConstant %uint 39
    %uint_13 = OpConstant %uint 13
    %uint_42 = OpConstant %uint 42
    %uint_21 = OpConstant %uint 21
    %uint_34 = OpConstant %uint 34

               ; Function MainPS
     %MainPS = OpFunction %void None %452
        %588 = OpLabel
        %589 = OpVariable %_ptr_Function__arr_v3float_uint_4 Function
        %590 = OpVariable %_ptr_Function__arr_v3float_uint_4 Function
        %591 = OpLoad %v4float %in_var_TEXCOORD11_centroid
        %592 = OpLoad %uint %in_var_PRIMITIVE_ID
        %593 = OpLoad %v3float %in_var_TEXCOORD9
        %594 = OpLoad %v4float %gl_FragCoord
        %595 = OpCompositeExtract %float %594 3
        %596 = OpFDiv %float %float_1 %595
        %597 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_0
        %598 = OpLoad %mat4v4float %597
        %599 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_1
        %600 = OpLoad %mat4v4float %599
        %601 = OpAccessChain %_ptr_Uniform_mat4v4float %View %uint_2
        %602 = OpLoad %mat4v4float %601
        %603 = OpAccessChain %_ptr_Uniform_v3float %View %uint_3
        %604 = OpLoad %v3float %603
        %605 = OpAccessChain %_ptr_Uniform_v3float %View %uint_4
        %606 = OpLoad %v3float %605
        %607 = OpAccessChain %_ptr_Uniform_v4float %View %uint_6
        %608 = OpLoad %v4float %607
        %609 = OpAccessChain %_ptr_Uniform_v3float %View %uint_7
        %610 = OpLoad %v3float %609
        %611 = OpAccessChain %_ptr_Uniform_v3float %View %uint_8
        %612 = OpLoad %v3float %611
        %613 = OpAccessChain %_ptr_Uniform_v4float %View %uint_9
        %614 = OpLoad %v4float %613
        %615 = OpAccessChain %_ptr_Uniform_v4float %View %uint_10
        %616 = OpLoad %v4float %615
        %617 = OpAccessChain %_ptr_Uniform_v4float %View %uint_12
        %618 = OpLoad %v4float %617
        %619 = OpAccessChain %_ptr_Uniform_float %View %uint_14
        %620 = OpLoad %float %619
        %621 = OpAccessChain %_ptr_Uniform_v4float %View %uint_15
        %622 = OpLoad %v4float %621
        %623 = OpAccessChain %_ptr_Uniform_v4float %View %uint_16
        %624 = OpLoad %v4float %623
        %625 = OpAccessChain %_ptr_Uniform_v2float %View %uint_17
        %626 = OpLoad %v2float %625
        %627 = OpAccessChain %_ptr_Uniform_v4float %View %uint_22
        %628 = OpLoad %v4float %627
        %629 = OpAccessChain %_ptr_Uniform_v3float %View %uint_23
        %630 = OpLoad %v3float %629
        %631 = OpAccessChain %_ptr_Uniform_v4float %View %uint_27
        %632 = OpLoad %v4float %631
        %633 = OpFNegate %v3float %604
        %634 = OpVectorShuffle %v3float %591 %591 0 1 2
        %635 = OpVectorShuffle %v2float %594 %594 0 1
        %636 = OpVectorShuffle %v2float %614 %614 0 1
        %637 = OpFSub %v2float %635 %636
        %638 = OpVectorShuffle %v2float %616 %616 2 3
        %639 = OpExtInst %v2float %1 Fma %637 %638 %538
        %640 = OpFMul %v2float %639 %158
        %641 = OpCompositeExtract %float %640 0
        %642 = OpCompositeExtract %float %640 1
        %643 = OpCompositeConstruct %v4float %641 %642 %560 %float_1
        %644 = OpVectorTimesScalar %v4float %643 %596
        %645 = OpCompositeExtract %float %594 0
        %646 = OpCompositeExtract %float %594 1
        %647 = OpCompositeExtract %float %594 2
        %648 = OpCompositeConstruct %v4float %645 %646 %647 %float_1
        %649 = OpMatrixTimesVector %v4float %602 %648
        %650 = OpVectorShuffle %v3float %649 %649 0 1 2
        %651 = OpCompositeExtract %float %649 3
        %652 = OpCompositeConstruct %v3float %651 %651 %651
        %653 = OpFDiv %v3float %650 %652
        %654 = OpFSub %v3float %653 %612
        %655 = OpFSub %v3float %593 %612
        %656 = OpVectorShuffle %v2float %644 %644 0 1
        %657 = OpCompositeExtract %float %644 3
        %658 = OpCompositeConstruct %v2float %657 %657
        %659 = OpFDiv %v2float %656 %658
        %660 = OpVectorShuffle %v2float %608 %608 0 1
        %661 = OpVectorShuffle %v2float %608 %608 3 2
        %662 = OpExtInst %v2float %1 Fma %659 %660 %661
        %663 = OpCompositeExtract %float %600 3 3
        %664 = OpFOrdGreaterThanEqual %bool %663 %float_1
               OpSelectionMerge %665 None
               OpBranchConditional %664 %666 %667
        %667 = OpLabel
        %668 = OpFNegate %v3float %653
        %669 = OpExtInst %v3float %1 Normalize %668
               OpBranch %665
        %666 = OpLabel
        %670 = OpFNegate %v3float %606
               OpBranch %665
        %665 = OpLabel
        %671 = OpPhi %v3float %669 %667 %670 %666
        %672 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_4
        %673 = OpLoad %v4float %672
        %674 = OpCompositeExtract %float %673 0
        %675 = OpCompositeExtract %float %673 1
        %676 = OpCompositeExtract %float %673 2
        %677 = OpCompositeConstruct %v3float %674 %675 %676
        %678 = OpFMul %v3float %604 %514
        %679 = OpFNegate %v3float %654
        %680 = OpExtInst %v3float %1 Fma %679 %140 %677
        %681 = OpCompositeExtract %float %678 0
        %682 = OpCompositeExtract %float %680 0
        %683 = OpFMul %float %682 %float_4_76837158en07
        %684 = OpExtInst %float %1 Fma %682 %float_9_53674316en07 %681
        %685 = OpCompositeExtract %float %678 1
        %686 = OpCompositeExtract %float %680 1
        %687 = OpFMul %float %686 %float_4_76837158en07
        %688 = OpExtInst %float %1 Fma %686 %float_9_53674316en07 %685
        %689 = OpFMul %float %685 %688
        %690 = OpFMul %float %686 %687
        %691 = OpCompositeExtract %float %678 2
        %692 = OpCompositeExtract %float %680 2
        %693 = OpFMul %float %692 %float_4_76837158en07
        %694 = OpExtInst %float %1 Fma %692 %float_9_53674316en07 %691
        %695 = OpExtInst %float %1 Fma %681 %684 %689
        %696 = OpExtInst %float %1 Fma %682 %683 %690
        %697 = OpExtInst %float %1 Fma %691 %694 %695
        %698 = OpExtInst %float %1 Fma %692 %693 %696
        %699 = OpExtInst %float %1 Fma %698 %float_4_76837158en07 %697
        %700 = OpExtInst %float %1 Sqrt %699
        %701 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_1
        %702 = OpLoad %v4float %701
        %703 = OpCompositeExtract %float %702 0
        %704 = OpExtInst %float %1 NMax %float_9_99999975en06 %703
        %705 = OpFDiv %float %float_1 %704
        %706 = OpFMul %float %700 %705
        %707 = OpExtInst %float %1 Fma %706 %float_n2_097152e_11 %float_100000
        %708 = OpExtInst %float %1 FClamp %707 %float_0 %float_1
        %709 = OpExtInst %float %1 FMix %float_1 %float_0 %708
        %710 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_86 %int_2
        %711 = OpLoad %float %710
        %712 = OpCompositeConstruct %v3float %711 %711 %711
        %713 = OpFMul %v3float %654 %712
        %714 = OpVectorTimesScalar %v3float %713 %float_4_76837158en07
        %715 = OpFAdd %v3float %714 %143
        %716 = OpExtInst %v3float %1 Fma %604 %712 %715
        %717 = OpExtInst %v3float %1 Floor %716
        %718 = OpFNegate %v3float %717
        %719 = OpExtInst %v3float %1 Fma %604 %712 %718
        %720 = OpVectorTimesScalar %v3float %719 %float_2097152
        %721 = OpExtInst %v3float %1 Fma %654 %712 %720
        %722 = OpVectorTimesScalar %v3float %721 %float_1
               OpBranch %723
        %723 = OpLabel
        %724 = OpPhi %v3float %722 %665 %725 %726
        %727 = OpPhi %float %float_1 %665 %728 %726
        %729 = OpPhi %float %float_0 %665 %730 %726
        %731 = OpPhi %uint %uint_0 %665 %732 %726
        %733 = OpULessThan %bool %731 %uint_6
               OpLoopMerge %734 %726 DontUnroll
               OpBranchConditional %733 %726 %734
        %726 = OpLabel
        %735 = OpFMul %v3float %724 %535
        %736 = OpExtInst %v3float %1 Fract %735
        %737 = OpVectorTimesScalar %v3float %736 %float_15
        %738 = OpExtInst %v3float %1 Fract %737
        %739 = OpFSub %v3float %737 %738
        %740 = OpCompositeExtract %float %738 0
        %741 = OpCompositeExtract %float %738 1
        %742 = OpCompositeExtract %float %738 2
        %743 = OpCompositeConstruct %v4float %740 %741 %742 %float_0
        %744 = OpFMul %v4float %743 %743
        %745 = OpFMul %v4float %744 %743
        %746 = OpVectorTimesScalar %v4float %743 %float_6
        %747 = OpFSub %v4float %746 %393
        %748 = OpExtInst %v4float %1 Fma %743 %747 %394
        %749 = OpFMul %v4float %745 %748
        %750 = OpVectorShuffle %v3float %749 %749 0 1 2
        %751 = OpFAdd %v3float %739 %750
        %752 = OpLoad %type_3d_image_0 %View_PerlinNoise3DTexture
        %753 = OpLoad %type_sampler %View_PerlinNoise3DTextureSampler
        %754 = OpExtInst %v3float %1 Fma %751 %536 %472
        %755 = OpSampledImage %type_sampled_image_0 %752 %753
        %756 = OpImageSampleExplicitLod %v4float %755 %754 Lod %float_0
        %757 = OpVectorShuffle %v3float %756 %756 0 1 2
        %758 = OpVectorTimesScalar %v3float %757 %float_255
        %759 = OpExtInst %v3float %1 Fma %758 %537 %287
        %760 = OpCompositeExtract %float %756 3
        %761 = OpExtInst %float %1 Fma %760 %float_255 %float_n127
        %762 = OpDot %float %737 %759
        %763 = OpFSub %float %762 %761
        %764 = OpExtInst %float %1 FAbs %763
        %730 = OpExtInst %float %1 Fma %764 %727 %729
        %725 = OpVectorTimesScalar %v3float %724 %float_2
        %728 = OpFMul %float %727 %float_0_5
        %732 = OpIAdd %uint %731 %uint_1
               OpBranch %723
        %734 = OpLabel
        %765 = OpExtInst %float %1 FMix %float_n1 %float_1 %729
        %766 = OpExtInst %float %1 FClamp %765 %float_0 %float_1
        %767 = OpExtInst %v3float %1 Fma %604 %140 %678
        %768 = OpFMul %v3float %654 %514
        %769 = OpExtInst %v3float %1 Fma %610 %140 %768
        %770 = OpVectorTimesScalar %v3float %767 %float_2097152
        %771 = OpFAdd %v3float %770 %769
        %772 = OpExtInst %float %1 Length %771
        %773 = OpAccessChain %_ptr_Uniform_v4float %MaterialCollection0 %int_0 %int_0
        %774 = OpLoad %v4float %773
        %775 = OpCompositeExtract %float %774 0
        %776 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_85 %int_1
        %777 = OpLoad %float %776
        %778 = OpFMul %float %775 %777
        %779 = OpExtInst %float %1 NMax %float_9_99999975en06 %778
        %780 = OpFDiv %float %float_1 %779
        %781 = OpFNegate %float %772
        %782 = OpExtInst %float %1 Fma %781 %780 %float_1
        %783 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_86 %int_1
        %784 = OpLoad %float %783
        %785 = OpFMul %float %782 %784
        %786 = OpExtInst %float %1 FClamp %785 %float_0 %float_1
        %787 = OpExtInst %float %1 FMix %766 %float_1 %786
        %788 = OpFAdd %v3float %604 %633
        %789 = OpVectorTimesScalar %v3float %788 %float_2097152
        %790 = OpFAdd %v3float %789 %653
               OpBranch %791
        %791 = OpLabel
        %792 = OpPhi %v3uint %550 %734 %793 %794
        %795 = OpPhi %uint %uint_0 %734 %796 %794
        %797 = OpPhi %float %float_0 %734 %798 %794
        %799 = OpAccessChain %_ptr_Uniform_uint %View %uint_33
        %800 = OpLoad %uint %799
        %801 = OpULessThan %bool %795 %800
               OpLoopMerge %802 %794 None
               OpBranchConditional %801 %803 %802
        %803 = OpLabel
        %804 = OpAccessChain %_ptr_Uniform_v4float %View %uint_28 %795
        %805 = OpLoad %v4float %804
        %806 = OpVectorShuffle %v3float %805 %805 0 1 2
        %807 = OpVectorShuffle %v3float %805 %805 3 3 3
        %808 = OpFSub %v3float %790 %806
        %809 = OpFAdd %v3float %808 %807
        %810 = OpExtInst %v3float %1 NMax %809 %108
        %811 = OpFAdd %v3float %806 %807
        %812 = OpFSub %v3float %811 %790
        %813 = OpExtInst %v3float %1 NMax %812 %108
        %814 = OpExtInst %v3float %1 NMin %810 %813
        %815 = OpCompositeExtract %float %814 0
        %816 = OpCompositeExtract %float %814 1
        %817 = OpCompositeExtract %float %814 2
        %818 = OpExtInst %float %1 NMin %816 %817
        %819 = OpExtInst %float %1 NMin %815 %818
        %820 = OpAccessChain %_ptr_Uniform_float %View %uint_28 %795 %int_3
        %821 = OpLoad %float %820
        %822 = OpAccessChain %_ptr_Uniform_float %View %uint_32
        %823 = OpLoad %float %822
        %824 = OpFMul %float %821 %823
        %798 = OpFMul %float %float_8 %824
        %825 = OpFOrdGreaterThan %bool %819 %824
               OpSelectionMerge %826 None
               OpBranchConditional %825 %827 %826
        %827 = OpLabel
        %828 = OpAccessChain %_ptr_Uniform_v4float %View %uint_29 %795
        %829 = OpLoad %v4float %828
        %830 = OpVectorShuffle %v3float %829 %829 3 3 3
        %831 = OpVectorShuffle %v3float %829 %829 0 1 2
        %832 = OpExtInst %v3float %1 Fma %790 %830 %831
        %833 = OpExtInst %v3float %1 Fract %832
        %834 = OpExtInst %v3float %1 Fract %833
        %835 = OpExtInst %v3float %1 FClamp %834 %108 %134
        %836 = OpAccessChain %_ptr_Uniform_int %View %uint_30
        %837 = OpLoad %int %836
        %838 = OpConvertSToF %float %837
        %839 = OpVectorTimesScalar %v3float %835 %838
        %840 = OpBitcast %uint %837
        %841 = OpIMul %uint %795 %840
        %842 = OpBitcast %int %841
        %843 = OpCompositeConstruct %v3int %int_0 %int_0 %842
        %844 = OpConvertSToF %v3float %843
        %845 = OpFAdd %v3float %839 %844
        %846 = OpCompositeExtract %float %845 0
        %847 = OpCompositeExtract %float %845 1
        %848 = OpCompositeExtract %float %845 2
        %849 = OpConvertFToS %int %846
        %850 = OpConvertFToS %int %847
        %851 = OpConvertFToS %int %848
        %852 = OpCompositeConstruct %v4int %849 %850 %851 %int_0
        %853 = OpVectorShuffle %v3int %852 %852 0 1 2
        %854 = OpLoad %type_3d_image %View_GlobalDistanceFieldPageTableTexture
        %855 = OpImageFetch %v4uint %854 %853 Lod %int_0
        %856 = OpCompositeExtract %uint %855 0
        %857 = OpBitwiseAnd %uint %856 %uint_16777215
        %858 = OpULessThan %bool %856 %uint_4294967295
               OpSelectionMerge %859 None
               OpBranchConditional %858 %860 %859
        %860 = OpLabel
        %861 = OpBitwiseAnd %uint %857 %uint_127
        %862 = OpCompositeInsert %v3uint %861 %792 0
        %863 = OpShiftRightLogical %uint %857 %uint_7
        %864 = OpBitwiseAnd %uint %863 %uint_127
        %865 = OpCompositeInsert %v3uint %864 %862 1
        %866 = OpShiftRightLogical %uint %857 %uint_14
        %867 = OpCompositeInsert %v3uint %866 %865 2
        %868 = OpVectorTimesScalar %v3float %834 %838
        %869 = OpExtInst %v3float %1 Fract %868
        %870 = OpIMul %v3uint %867 %365
        %871 = OpConvertUToF %v3float %870
        %872 = OpVectorTimesScalar %v3float %869 %float_7
        %873 = OpFAdd %v3float %871 %872
        %874 = OpFAdd %v3float %873 %143
        %875 = OpAccessChain %_ptr_Uniform_v3float %View %uint_31
        %876 = OpLoad %v3float %875
        %877 = OpFMul %v3float %874 %876
        %878 = OpLoad %type_3d_image_0 %View_GlobalDistanceFieldPageAtlasTexture
        %879 = OpLoad %type_sampler %View_SharedTrilinearWrappedSampler
        %880 = OpSampledImage %type_sampled_image_0 %878 %879
        %881 = OpImageSampleExplicitLod %v4float %880 %877 Lod %float_0
        %882 = OpCompositeExtract %float %881 0
        %883 = OpFOrdLessThan %bool %882 %float_1
               OpSelectionMerge %884 None
               OpBranchConditional %883 %885 %884
        %885 = OpLabel
        %886 = OpExtInst %float %1 Fma %882 %float_2 %float_n1
        %887 = OpFMul %float %886 %798
               OpBranch %802
        %884 = OpLabel
               OpBranch %859
        %859 = OpLabel
        %888 = OpPhi %v3uint %792 %827 %867 %884
               OpBranch %826
        %826 = OpLabel
        %793 = OpPhi %v3uint %792 %803 %888 %859
               OpBranch %794
        %794 = OpLabel
        %796 = OpIAdd %uint %795 %uint_1
               OpBranch %791
        %802 = OpLabel
        %889 = OpPhi %float %797 %791 %887 %885
        %890 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_0
        %891 = OpLoad %float %890
        %892 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_87 %int_1
        %893 = OpLoad %float %892
        %894 = OpFNegate %float %893
        %895 = OpExtInst %float %1 Fma %889 %891 %894
        %896 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_88 %int_0
        %897 = OpLoad %float %896
        %898 = OpFMul %float %895 %897
        %899 = OpExtInst %float %1 Fma %898 %float_n1 %float_1
        %900 = OpExtInst %float %1 FClamp %899 %float_0 %float_1
               OpBranch %901
        %901 = OpLabel
        %902 = OpPhi %v3uint %550 %802 %903 %904
        %905 = OpPhi %uint %uint_0 %802 %906 %904
        %907 = OpULessThan %bool %905 %800
               OpLoopMerge %908 %904 None
               OpBranchConditional %907 %909 %908
        %909 = OpLabel
        %910 = OpAccessChain %_ptr_Uniform_v4float %View %uint_28 %905
        %911 = OpAccessChain %_ptr_Uniform_float %View %uint_28 %905 %int_3
        %912 = OpLoad %float %911
        %913 = OpAccessChain %_ptr_Uniform_float %View %uint_32
        %914 = OpLoad %float %913
        %915 = OpFMul %float %912 %914
        %916 = OpLoad %v4float %910
        %917 = OpVectorShuffle %v3float %916 %916 0 1 2
        %918 = OpVectorShuffle %v3float %916 %916 3 3 3
        %919 = OpFSub %v3float %790 %917
        %920 = OpFAdd %v3float %919 %918
        %921 = OpExtInst %v3float %1 NMax %920 %108
        %922 = OpFAdd %v3float %917 %918
        %923 = OpFSub %v3float %922 %790
        %924 = OpExtInst %v3float %1 NMax %923 %108
        %925 = OpExtInst %v3float %1 NMin %921 %924
        %926 = OpCompositeExtract %float %925 0
        %927 = OpCompositeExtract %float %925 1
        %928 = OpCompositeExtract %float %925 2
        %929 = OpExtInst %float %1 NMin %927 %928
        %930 = OpExtInst %float %1 NMin %926 %929
        %931 = OpFOrdGreaterThanEqual %bool %930 %915
               OpSelectionMerge %932 None
               OpBranchConditional %931 %933 %932
        %933 = OpLabel
        %934 = OpAccessChain %_ptr_Uniform_v4float %View %uint_29 %905
        %935 = OpLoad %v4float %934
        %936 = OpVectorShuffle %v3float %935 %935 3 3 3
        %937 = OpVectorShuffle %v3float %935 %935 0 1 2
        %938 = OpExtInst %v3float %1 Fma %790 %936 %937
        %939 = OpExtInst %v3float %1 Fract %938
        %940 = OpExtInst %v3float %1 Fract %939
        %941 = OpExtInst %v3float %1 FClamp %940 %108 %134
        %942 = OpAccessChain %_ptr_Uniform_int %View %uint_30
        %943 = OpLoad %int %942
        %944 = OpConvertSToF %float %943
        %945 = OpVectorTimesScalar %v3float %941 %944
        %946 = OpBitcast %uint %943
        %947 = OpIMul %uint %905 %946
        %948 = OpBitcast %int %947
        %949 = OpCompositeConstruct %v3int %int_0 %int_0 %948
        %950 = OpConvertSToF %v3float %949
        %951 = OpFAdd %v3float %945 %950
        %952 = OpCompositeExtract %float %951 0
        %953 = OpCompositeExtract %float %951 1
        %954 = OpCompositeExtract %float %951 2
        %955 = OpConvertFToS %int %952
        %956 = OpConvertFToS %int %953
        %957 = OpConvertFToS %int %954
        %958 = OpCompositeConstruct %v4int %955 %956 %957 %int_0
        %959 = OpVectorShuffle %v3int %958 %958 0 1 2
        %960 = OpLoad %type_3d_image %View_GlobalDistanceFieldPageTableTexture
        %961 = OpImageFetch %v4uint %960 %959 Lod %int_0
        %962 = OpCompositeExtract %uint %961 0
        %963 = OpBitwiseAnd %uint %962 %uint_16777215
        %964 = OpULessThan %bool %962 %uint_4294967295
               OpSelectionMerge %965 None
               OpBranchConditional %964 %966 %965
        %966 = OpLabel
        %967 = OpBitwiseAnd %uint %963 %uint_127
        %968 = OpCompositeInsert %v3uint %967 %902 0
        %969 = OpShiftRightLogical %uint %963 %uint_7
        %970 = OpBitwiseAnd %uint %969 %uint_127
        %971 = OpCompositeInsert %v3uint %970 %968 1
        %972 = OpShiftRightLogical %uint %963 %uint_14
        %973 = OpCompositeInsert %v3uint %972 %971 2
        %974 = OpVectorTimesScalar %v3float %940 %944
        %975 = OpExtInst %v3float %1 Fract %974
        %976 = OpIMul %v3uint %973 %365
        %977 = OpConvertUToF %v3float %976
        %978 = OpVectorTimesScalar %v3float %975 %float_7
        %979 = OpFAdd %v3float %977 %978
        %980 = OpFAdd %v3float %979 %143
        %981 = OpAccessChain %_ptr_Uniform_v3float %View %uint_31
        %982 = OpLoad %v3float %981
        %983 = OpFMul %v3float %980 %982
        %984 = OpLoad %type_3d_image_0 %View_GlobalDistanceFieldPageAtlasTexture
        %985 = OpLoad %type_sampler %View_SharedTrilinearWrappedSampler
        %986 = OpSampledImage %type_sampled_image_0 %984 %985
        %987 = OpImageSampleExplicitLod %v4float %986 %983 Lod %float_0
        %988 = OpCompositeExtract %float %987 0
        %989 = OpFOrdLessThan %bool %988 %float_0_899999976
               OpSelectionMerge %990 None
               OpBranchConditional %989 %991 %990
        %991 = OpLabel
        %992 = OpFMul %float %float_0_5 %914
        %993 = OpCompositeConstruct %v3float %992 %float_0 %float_0
        %994 = OpFAdd %v3float %940 %993
        %995 = OpExtInst %v3float %1 Fract %994
        %996 = OpExtInst %v3float %1 FClamp %995 %108 %134
        %997 = OpVectorTimesScalar %v3float %996 %944
        %998 = OpFAdd %v3float %997 %950
        %999 = OpCompositeExtract %float %998 0
       %1000 = OpCompositeExtract %float %998 1
       %1001 = OpCompositeExtract %float %998 2
       %1002 = OpConvertFToS %int %999
       %1003 = OpConvertFToS %int %1000
       %1004 = OpConvertFToS %int %1001
       %1005 = OpCompositeConstruct %v4int %1002 %1003 %1004 %int_0
       %1006 = OpVectorShuffle %v3int %1005 %1005 0 1 2
       %1007 = OpImageFetch %v4uint %960 %1006 Lod %int_0
       %1008 = OpCompositeExtract %uint %1007 0
       %1009 = OpBitwiseAnd %uint %1008 %uint_16777215
       %1010 = OpULessThan %bool %1008 %uint_4294967295
               OpSelectionMerge %1011 None
               OpBranchConditional %1010 %1012 %1011
       %1012 = OpLabel
       %1013 = OpBitwiseAnd %uint %1009 %uint_127
       %1014 = OpCompositeInsert %v3uint %1013 %550 0
       %1015 = OpShiftRightLogical %uint %1009 %uint_7
       %1016 = OpBitwiseAnd %uint %1015 %uint_127
       %1017 = OpCompositeInsert %v3uint %1016 %1014 1
       %1018 = OpShiftRightLogical %uint %1009 %uint_14
       %1019 = OpCompositeInsert %v3uint %1018 %1017 2
       %1020 = OpVectorTimesScalar %v3float %995 %944
       %1021 = OpExtInst %v3float %1 Fract %1020
       %1022 = OpIMul %v3uint %1019 %365
       %1023 = OpConvertUToF %v3float %1022
       %1024 = OpVectorTimesScalar %v3float %1021 %float_7
       %1025 = OpFAdd %v3float %1023 %1024
       %1026 = OpFAdd %v3float %1025 %143
       %1027 = OpFMul %v3float %1026 %982
       %1028 = OpSampledImage %type_sampled_image_0 %984 %985
       %1029 = OpImageSampleExplicitLod %v4float %1028 %1027 Lod %float_0
       %1030 = OpCompositeExtract %float %1029 0
               OpBranch %1011
       %1011 = OpLabel
       %1031 = OpPhi %float %float_1 %991 %1030 %1012
       %1032 = OpFMul %float %914 %float_n0_5
       %1033 = OpCompositeConstruct %v3float %1032 %float_0 %float_0
       %1034 = OpFAdd %v3float %940 %1033
       %1035 = OpExtInst %v3float %1 Fract %1034
       %1036 = OpExtInst %v3float %1 FClamp %1035 %108 %134
       %1037 = OpVectorTimesScalar %v3float %1036 %944
       %1038 = OpFAdd %v3float %1037 %950
       %1039 = OpCompositeExtract %float %1038 0
       %1040 = OpCompositeExtract %float %1038 1
       %1041 = OpCompositeExtract %float %1038 2
       %1042 = OpConvertFToS %int %1039
       %1043 = OpConvertFToS %int %1040
       %1044 = OpConvertFToS %int %1041
       %1045 = OpCompositeConstruct %v4int %1042 %1043 %1044 %int_0
       %1046 = OpVectorShuffle %v3int %1045 %1045 0 1 2
       %1047 = OpImageFetch %v4uint %960 %1046 Lod %int_0
       %1048 = OpCompositeExtract %uint %1047 0
       %1049 = OpBitwiseAnd %uint %1048 %uint_16777215
       %1050 = OpULessThan %bool %1048 %uint_4294967295
               OpSelectionMerge %1051 None
               OpBranchConditional %1050 %1052 %1051
       %1052 = OpLabel
       %1053 = OpBitwiseAnd %uint %1049 %uint_127
       %1054 = OpCompositeInsert %v3uint %1053 %550 0
       %1055 = OpShiftRightLogical %uint %1049 %uint_7
       %1056 = OpBitwiseAnd %uint %1055 %uint_127
       %1057 = OpCompositeInsert %v3uint %1056 %1054 1
       %1058 = OpShiftRightLogical %uint %1049 %uint_14
       %1059 = OpCompositeInsert %v3uint %1058 %1057 2
       %1060 = OpVectorTimesScalar %v3float %1035 %944
       %1061 = OpExtInst %v3float %1 Fract %1060
       %1062 = OpIMul %v3uint %1059 %365
       %1063 = OpConvertUToF %v3float %1062
       %1064 = OpVectorTimesScalar %v3float %1061 %float_7
       %1065 = OpFAdd %v3float %1063 %1064
       %1066 = OpFAdd %v3float %1065 %143
       %1067 = OpFMul %v3float %1066 %982
       %1068 = OpSampledImage %type_sampled_image_0 %984 %985
       %1069 = OpImageSampleExplicitLod %v4float %1068 %1067 Lod %float_0
       %1070 = OpCompositeExtract %float %1069 0
               OpBranch %1051
       %1051 = OpLabel
       %1071 = OpPhi %float %float_1 %1011 %1070 %1052
       %1072 = OpCompositeConstruct %v3float %float_0 %992 %float_0
       %1073 = OpFAdd %v3float %940 %1072
       %1074 = OpExtInst %v3float %1 Fract %1073
       %1075 = OpExtInst %v3float %1 FClamp %1074 %108 %134
       %1076 = OpVectorTimesScalar %v3float %1075 %944
       %1077 = OpFAdd %v3float %1076 %950
       %1078 = OpCompositeExtract %float %1077 0
       %1079 = OpCompositeExtract %float %1077 1
       %1080 = OpCompositeExtract %float %1077 2
       %1081 = OpConvertFToS %int %1078
       %1082 = OpConvertFToS %int %1079
       %1083 = OpConvertFToS %int %1080
       %1084 = OpCompositeConstruct %v4int %1081 %1082 %1083 %int_0
       %1085 = OpVectorShuffle %v3int %1084 %1084 0 1 2
       %1086 = OpImageFetch %v4uint %960 %1085 Lod %int_0
       %1087 = OpCompositeExtract %uint %1086 0
       %1088 = OpBitwiseAnd %uint %1087 %uint_16777215
       %1089 = OpULessThan %bool %1087 %uint_4294967295
               OpSelectionMerge %1090 None
               OpBranchConditional %1089 %1091 %1090
       %1091 = OpLabel
       %1092 = OpBitwiseAnd %uint %1088 %uint_127
       %1093 = OpCompositeInsert %v3uint %1092 %550 0
       %1094 = OpShiftRightLogical %uint %1088 %uint_7
       %1095 = OpBitwiseAnd %uint %1094 %uint_127
       %1096 = OpCompositeInsert %v3uint %1095 %1093 1
       %1097 = OpShiftRightLogical %uint %1088 %uint_14
       %1098 = OpCompositeInsert %v3uint %1097 %1096 2
       %1099 = OpVectorTimesScalar %v3float %1074 %944
       %1100 = OpExtInst %v3float %1 Fract %1099
       %1101 = OpIMul %v3uint %1098 %365
       %1102 = OpConvertUToF %v3float %1101
       %1103 = OpVectorTimesScalar %v3float %1100 %float_7
       %1104 = OpFAdd %v3float %1102 %1103
       %1105 = OpFAdd %v3float %1104 %143
       %1106 = OpFMul %v3float %1105 %982
       %1107 = OpSampledImage %type_sampled_image_0 %984 %985
       %1108 = OpImageSampleExplicitLod %v4float %1107 %1106 Lod %float_0
       %1109 = OpCompositeExtract %float %1108 0
               OpBranch %1090
       %1090 = OpLabel
       %1110 = OpPhi %float %float_1 %1051 %1109 %1091
       %1111 = OpCompositeConstruct %v3float %float_0 %1032 %float_0
       %1112 = OpFAdd %v3float %940 %1111
       %1113 = OpExtInst %v3float %1 Fract %1112
       %1114 = OpExtInst %v3float %1 FClamp %1113 %108 %134
       %1115 = OpVectorTimesScalar %v3float %1114 %944
       %1116 = OpFAdd %v3float %1115 %950
       %1117 = OpCompositeExtract %float %1116 0
       %1118 = OpCompositeExtract %float %1116 1
       %1119 = OpCompositeExtract %float %1116 2
       %1120 = OpConvertFToS %int %1117
       %1121 = OpConvertFToS %int %1118
       %1122 = OpConvertFToS %int %1119
       %1123 = OpCompositeConstruct %v4int %1120 %1121 %1122 %int_0
       %1124 = OpVectorShuffle %v3int %1123 %1123 0 1 2
       %1125 = OpImageFetch %v4uint %960 %1124 Lod %int_0
       %1126 = OpCompositeExtract %uint %1125 0
       %1127 = OpBitwiseAnd %uint %1126 %uint_16777215
       %1128 = OpULessThan %bool %1126 %uint_4294967295
               OpSelectionMerge %1129 None
               OpBranchConditional %1128 %1130 %1129
       %1130 = OpLabel
       %1131 = OpBitwiseAnd %uint %1127 %uint_127
       %1132 = OpCompositeInsert %v3uint %1131 %550 0
       %1133 = OpShiftRightLogical %uint %1127 %uint_7
       %1134 = OpBitwiseAnd %uint %1133 %uint_127
       %1135 = OpCompositeInsert %v3uint %1134 %1132 1
       %1136 = OpShiftRightLogical %uint %1127 %uint_14
       %1137 = OpCompositeInsert %v3uint %1136 %1135 2
       %1138 = OpVectorTimesScalar %v3float %1113 %944
       %1139 = OpExtInst %v3float %1 Fract %1138
       %1140 = OpIMul %v3uint %1137 %365
       %1141 = OpConvertUToF %v3float %1140
       %1142 = OpVectorTimesScalar %v3float %1139 %float_7
       %1143 = OpFAdd %v3float %1141 %1142
       %1144 = OpFAdd %v3float %1143 %143
       %1145 = OpFMul %v3float %1144 %982
       %1146 = OpSampledImage %type_sampled_image_0 %984 %985
       %1147 = OpImageSampleExplicitLod %v4float %1146 %1145 Lod %float_0
       %1148 = OpCompositeExtract %float %1147 0
               OpBranch %1129
       %1129 = OpLabel
       %1149 = OpPhi %float %float_1 %1090 %1148 %1130
       %1150 = OpFSub %float %1031 %1071
       %1151 = OpFSub %float %1110 %1149
       %1152 = OpCompositeConstruct %v3float %1150 %1151 %560
       %1153 = OpFMul %float %915 %float_16
       %1154 = OpFMul %float %float_128 %914
       %1155 = OpVectorTimesScalar %v3float %1152 %1153
       %1156 = OpFMul %float %912 %1154
       %1157 = OpCompositeConstruct %v3float %1156 %1156 %1156
       %1158 = OpFDiv %v3float %1155 %1157
               OpBranch %908
        %990 = OpLabel
               OpBranch %965
        %965 = OpLabel
       %1159 = OpPhi %v3uint %902 %933 %973 %990
               OpBranch %932
        %932 = OpLabel
        %903 = OpPhi %v3uint %902 %909 %1159 %965
               OpBranch %904
        %904 = OpLabel
        %906 = OpIAdd %uint %905 %uint_1
               OpBranch %901
        %908 = OpLabel
       %1160 = OpPhi %v3float %350 %901 %1158 %1129
       %1161 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_88 %int_2
       %1162 = OpLoad %float %1161
       %1163 = OpCompositeConstruct %v3float %1162 %1162 %1162
       %1164 = OpExtInst %v3float %1 Fma %1160 %1163 %655
       %1165 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_88 %int_3
       %1166 = OpLoad %float %1165
       %1167 = OpCompositeConstruct %v3float %1166 %1166 %1166
       %1168 = OpFMul %v3float %604 %1167
       %1169 = OpFMul %v3float %1164 %1167
       %1170 = OpAccessChain %_ptr_Uniform_float %View %uint_19
       %1171 = OpLoad %float %1170
       %1172 = OpCompositeExtract %float %774 2
       %1173 = OpCompositeExtract %float %774 3
       %1174 = OpExtInst %float %1 FMix %1171 %1172 %1173
       %1175 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_89 %int_1
       %1176 = OpLoad %float %1175
       %1177 = OpFMul %float %1174 %1176
       %1178 = OpCompositeConstruct %v2float %1177 %1177
       %1179 = OpFAdd %v2float %1178 %284
       %1180 = OpCompositeExtract %float %1168 0
       %1181 = OpCompositeExtract %float %1169 0
       %1182 = OpCompositeExtract %float %1168 1
       %1183 = OpCompositeExtract %float %1169 1
       %1184 = OpCompositeExtract %float %1179 0
       %1185 = OpCompositeConstruct %v3float %1180 %1182 %float_0
       %1186 = OpCompositeConstruct %v3float %1181 %1183 %1184
       %1187 = OpVectorTimesScalar %v3float %1186 %float_4_76837158en07
       %1188 = OpFAdd %v3float %1187 %143
       %1189 = OpFAdd %v3float %1185 %1188
       %1190 = OpExtInst %v3float %1 Floor %1189
       %1191 = OpFSub %v3float %1185 %1190
       %1192 = OpVectorTimesScalar %v3float %1191 %float_2097152
       %1193 = OpFAdd %v3float %1192 %1186
       %1194 = OpVectorTimesScalar %v3float %1193 %float_1
               OpBranch %1195
       %1195 = OpLabel
       %1196 = OpPhi %v3float %1194 %908 %1197 %1198
       %1199 = OpPhi %float %float_1 %908 %1200 %1198
       %1201 = OpPhi %float %float_0 %908 %1202 %1198
       %1203 = OpPhi %uint %uint_0 %908 %1204 %1198
       %1205 = OpULessThan %bool %1203 %uint_10
               OpLoopMerge %1206 %1198 DontUnroll
               OpBranchConditional %1205 %1198 %1206
       %1198 = OpLabel
       %1207 = OpExtInst %v3float %1 Fract %1196
       %1208 = OpExtInst %v3float %1 Floor %1196
       %1209 = OpDot %float %1208 %397
       %1210 = OpFAdd %float %1209 %float_19
       %1211 = OpFAdd %float %1209 %float_47
       %1212 = OpFAdd %float %1209 %float_66
       %1213 = OpFAdd %float %1209 %float_101
       %1214 = OpFAdd %float %1209 %float_120
       %1215 = OpFAdd %float %1209 %float_148
       %1216 = OpFAdd %float %1209 %float_167
       %1217 = OpConvertFToS %int %1209
       %1218 = OpCompositeConstruct %v3int %1217 %int_0 %int_0
       %1219 = OpBitcast %v3uint %1218
       %1220 = OpIMul %v3uint %1219 %413
       %1221 = OpIAdd %v3uint %1220 %415
       %1222 = OpCompositeExtract %uint %1221 1
       %1223 = OpCompositeExtract %uint %1221 2
       %1224 = OpIMul %uint %1222 %1223
       %1225 = OpCompositeExtract %uint %1221 0
       %1226 = OpIAdd %uint %1225 %1224
       %1227 = OpIMul %uint %1223 %1226
       %1228 = OpIAdd %uint %1222 %1227
       %1229 = OpIMul %uint %1226 %1228
       %1230 = OpIAdd %uint %1223 %1229
       %1231 = OpIMul %uint %1228 %1230
       %1232 = OpIAdd %uint %1226 %1231
       %1233 = OpCompositeInsert %v3uint %1232 %561 0
       %1234 = OpBitwiseAnd %v3uint %416 %417
       %1235 = OpShiftRightLogical %v3uint %1233 %1234
       %1236 = OpCompositeExtract %uint %1235 0
       %1237 = OpCompositeConstruct %v3uint %1236 %1236 %1236
       %1238 = OpBitwiseAnd %v3uint %1237 %398
       %1239 = OpConvertUToF %v3float %1238
       %1240 = OpExtInst %v3float %1 Fma %1239 %402 %287
       %1241 = OpDot %float %1240 %1207
       %1242 = OpConvertFToS %int %1210
       %1243 = OpFSub %v3float %1207 %362
       %1244 = OpCompositeConstruct %v3int %1242 %int_0 %int_0
       %1245 = OpBitcast %v3uint %1244
       %1246 = OpIMul %v3uint %1245 %413
       %1247 = OpIAdd %v3uint %1246 %415
       %1248 = OpCompositeExtract %uint %1247 1
       %1249 = OpCompositeExtract %uint %1247 2
       %1250 = OpIMul %uint %1248 %1249
       %1251 = OpCompositeExtract %uint %1247 0
       %1252 = OpIAdd %uint %1251 %1250
       %1253 = OpIMul %uint %1249 %1252
       %1254 = OpIAdd %uint %1248 %1253
       %1255 = OpIMul %uint %1252 %1254
       %1256 = OpIAdd %uint %1249 %1255
       %1257 = OpIMul %uint %1254 %1256
       %1258 = OpIAdd %uint %1252 %1257
       %1259 = OpCompositeInsert %v3uint %1258 %561 0
       %1260 = OpShiftRightLogical %v3uint %1259 %1234
       %1261 = OpCompositeExtract %uint %1260 0
       %1262 = OpCompositeConstruct %v3uint %1261 %1261 %1261
       %1263 = OpBitwiseAnd %v3uint %1262 %398
       %1264 = OpConvertUToF %v3float %1263
       %1265 = OpExtInst %v3float %1 Fma %1264 %402 %287
       %1266 = OpDot %float %1265 %1243
       %1267 = OpConvertFToS %int %1211
       %1268 = OpFSub %v3float %1207 %363
       %1269 = OpCompositeConstruct %v3int %1267 %int_0 %int_0
       %1270 = OpBitcast %v3uint %1269
       %1271 = OpIMul %v3uint %1270 %413
       %1272 = OpIAdd %v3uint %1271 %415
       %1273 = OpCompositeExtract %uint %1272 1
       %1274 = OpCompositeExtract %uint %1272 2
       %1275 = OpIMul %uint %1273 %1274
       %1276 = OpCompositeExtract %uint %1272 0
       %1277 = OpIAdd %uint %1276 %1275
       %1278 = OpIMul %uint %1274 %1277
       %1279 = OpIAdd %uint %1273 %1278
       %1280 = OpIMul %uint %1277 %1279
       %1281 = OpIAdd %uint %1274 %1280
       %1282 = OpIMul %uint %1279 %1281
       %1283 = OpIAdd %uint %1277 %1282
       %1284 = OpCompositeInsert %v3uint %1283 %561 0
       %1285 = OpShiftRightLogical %v3uint %1284 %1234
       %1286 = OpCompositeExtract %uint %1285 0
       %1287 = OpCompositeConstruct %v3uint %1286 %1286 %1286
       %1288 = OpBitwiseAnd %v3uint %1287 %398
       %1289 = OpConvertUToF %v3float %1288
       %1290 = OpExtInst %v3float %1 Fma %1289 %402 %287
       %1291 = OpDot %float %1290 %1268
       %1292 = OpConvertFToS %int %1212
       %1293 = OpFSub %v3float %1207 %140
       %1294 = OpCompositeConstruct %v3int %1292 %int_0 %int_0
       %1295 = OpBitcast %v3uint %1294
       %1296 = OpIMul %v3uint %1295 %413
       %1297 = OpIAdd %v3uint %1296 %415
       %1298 = OpCompositeExtract %uint %1297 1
       %1299 = OpCompositeExtract %uint %1297 2
       %1300 = OpIMul %uint %1298 %1299
       %1301 = OpCompositeExtract %uint %1297 0
       %1302 = OpIAdd %uint %1301 %1300
       %1303 = OpIMul %uint %1299 %1302
       %1304 = OpIAdd %uint %1298 %1303
       %1305 = OpIMul %uint %1302 %1304
       %1306 = OpIAdd %uint %1299 %1305
       %1307 = OpIMul %uint %1304 %1306
       %1308 = OpIAdd %uint %1302 %1307
       %1309 = OpCompositeInsert %v3uint %1308 %561 0
       %1310 = OpShiftRightLogical %v3uint %1309 %1234
       %1311 = OpCompositeExtract %uint %1310 0
       %1312 = OpCompositeConstruct %v3uint %1311 %1311 %1311
       %1313 = OpBitwiseAnd %v3uint %1312 %398
       %1314 = OpConvertUToF %v3float %1313
       %1315 = OpExtInst %v3float %1 Fma %1314 %402 %287
       %1316 = OpDot %float %1315 %1293
       %1317 = OpConvertFToS %int %1213
       %1318 = OpFSub %v3float %1207 %299
       %1319 = OpCompositeConstruct %v3int %1317 %int_0 %int_0
       %1320 = OpBitcast %v3uint %1319
       %1321 = OpIMul %v3uint %1320 %413
       %1322 = OpIAdd %v3uint %1321 %415
       %1323 = OpCompositeExtract %uint %1322 1
       %1324 = OpCompositeExtract %uint %1322 2
       %1325 = OpIMul %uint %1323 %1324
       %1326 = OpCompositeExtract %uint %1322 0
       %1327 = OpIAdd %uint %1326 %1325
       %1328 = OpIMul %uint %1324 %1327
       %1329 = OpIAdd %uint %1323 %1328
       %1330 = OpIMul %uint %1327 %1329
       %1331 = OpIAdd %uint %1324 %1330
       %1332 = OpIMul %uint %1329 %1331
       %1333 = OpIAdd %uint %1327 %1332
       %1334 = OpCompositeInsert %v3uint %1333 %561 0
       %1335 = OpShiftRightLogical %v3uint %1334 %1234
       %1336 = OpCompositeExtract %uint %1335 0
       %1337 = OpCompositeConstruct %v3uint %1336 %1336 %1336
       %1338 = OpBitwiseAnd %v3uint %1337 %398
       %1339 = OpConvertUToF %v3float %1338
       %1340 = OpExtInst %v3float %1 Fma %1339 %402 %287
       %1341 = OpDot %float %1340 %1318
       %1342 = OpConvertFToS %int %1214
       %1343 = OpFSub %v3float %1207 %146
       %1344 = OpCompositeConstruct %v3int %1342 %int_0 %int_0
       %1345 = OpBitcast %v3uint %1344
       %1346 = OpIMul %v3uint %1345 %413
       %1347 = OpIAdd %v3uint %1346 %415
       %1348 = OpCompositeExtract %uint %1347 1
       %1349 = OpCompositeExtract %uint %1347 2
       %1350 = OpIMul %uint %1348 %1349
       %1351 = OpCompositeExtract %uint %1347 0
       %1352 = OpIAdd %uint %1351 %1350
       %1353 = OpIMul %uint %1349 %1352
       %1354 = OpIAdd %uint %1348 %1353
       %1355 = OpIMul %uint %1352 %1354
       %1356 = OpIAdd %uint %1349 %1355
       %1357 = OpIMul %uint %1354 %1356
       %1358 = OpIAdd %uint %1352 %1357
       %1359 = OpCompositeInsert %v3uint %1358 %561 0
       %1360 = OpShiftRightLogical %v3uint %1359 %1234
       %1361 = OpCompositeExtract %uint %1360 0
       %1362 = OpCompositeConstruct %v3uint %1361 %1361 %1361
       %1363 = OpBitwiseAnd %v3uint %1362 %398
       %1364 = OpConvertUToF %v3float %1363
       %1365 = OpExtInst %v3float %1 Fma %1364 %402 %287
       %1366 = OpDot %float %1365 %1343
       %1367 = OpConvertFToS %int %1215
       %1368 = OpFSub %v3float %1207 %141
       %1369 = OpCompositeConstruct %v3int %1367 %int_0 %int_0
       %1370 = OpBitcast %v3uint %1369
       %1371 = OpIMul %v3uint %1370 %413
       %1372 = OpIAdd %v3uint %1371 %415
       %1373 = OpCompositeExtract %uint %1372 1
       %1374 = OpCompositeExtract %uint %1372 2
       %1375 = OpIMul %uint %1373 %1374
       %1376 = OpCompositeExtract %uint %1372 0
       %1377 = OpIAdd %uint %1376 %1375
       %1378 = OpIMul %uint %1374 %1377
       %1379 = OpIAdd %uint %1373 %1378
       %1380 = OpIMul %uint %1377 %1379
       %1381 = OpIAdd %uint %1374 %1380
       %1382 = OpIMul %uint %1379 %1381
       %1383 = OpIAdd %uint %1377 %1382
       %1384 = OpCompositeInsert %v3uint %1383 %561 0
       %1385 = OpShiftRightLogical %v3uint %1384 %1234
       %1386 = OpCompositeExtract %uint %1385 0
       %1387 = OpCompositeConstruct %v3uint %1386 %1386 %1386
       %1388 = OpBitwiseAnd %v3uint %1387 %398
       %1389 = OpConvertUToF %v3float %1388
       %1390 = OpExtInst %v3float %1 Fma %1389 %402 %287
       %1391 = OpDot %float %1390 %1368
       %1392 = OpConvertFToS %int %1216
       %1393 = OpFSub %v3float %1207 %134
       %1394 = OpCompositeConstruct %v3int %1392 %int_0 %int_0
       %1395 = OpBitcast %v3uint %1394
       %1396 = OpIMul %v3uint %1395 %413
       %1397 = OpIAdd %v3uint %1396 %415
       %1398 = OpCompositeExtract %uint %1397 1
       %1399 = OpCompositeExtract %uint %1397 2
       %1400 = OpIMul %uint %1398 %1399
       %1401 = OpCompositeExtract %uint %1397 0
       %1402 = OpIAdd %uint %1401 %1400
       %1403 = OpIMul %uint %1399 %1402
       %1404 = OpIAdd %uint %1398 %1403
       %1405 = OpIMul %uint %1402 %1404
       %1406 = OpIAdd %uint %1399 %1405
       %1407 = OpIMul %uint %1404 %1406
       %1408 = OpIAdd %uint %1402 %1407
       %1409 = OpCompositeInsert %v3uint %1408 %561 0
       %1410 = OpShiftRightLogical %v3uint %1409 %1234
       %1411 = OpCompositeExtract %uint %1410 0
       %1412 = OpCompositeConstruct %v3uint %1411 %1411 %1411
       %1413 = OpBitwiseAnd %v3uint %1412 %398
       %1414 = OpConvertUToF %v3float %1413
       %1415 = OpExtInst %v3float %1 Fma %1414 %402 %287
       %1416 = OpDot %float %1415 %1393
       %1417 = OpCompositeExtract %float %1207 0
       %1418 = OpCompositeExtract %float %1207 1
       %1419 = OpCompositeExtract %float %1207 2
       %1420 = OpCompositeConstruct %v4float %1417 %1418 %1419 %float_0
       %1421 = OpFMul %v4float %1420 %1420
       %1422 = OpFMul %v4float %1421 %1420
       %1423 = OpVectorTimesScalar %v4float %1420 %float_6
       %1424 = OpFSub %v4float %1423 %393
       %1425 = OpExtInst %v4float %1 Fma %1420 %1424 %394
       %1426 = OpFMul %v4float %1422 %1425
       %1427 = OpCompositeExtract %float %1426 0
       %1428 = OpExtInst %float %1 FMix %1241 %1266 %1427
       %1429 = OpExtInst %float %1 FMix %1291 %1316 %1427
       %1430 = OpCompositeExtract %float %1426 1
       %1431 = OpExtInst %float %1 FMix %1428 %1429 %1430
       %1432 = OpExtInst %float %1 FMix %1341 %1366 %1427
       %1433 = OpExtInst %float %1 FMix %1391 %1416 %1427
       %1434 = OpExtInst %float %1 FMix %1432 %1433 %1430
       %1435 = OpCompositeExtract %float %1426 2
       %1436 = OpExtInst %float %1 FMix %1431 %1434 %1435
       %1437 = OpExtInst %float %1 FAbs %1436
       %1202 = OpExtInst %float %1 Fma %1437 %1199 %1201
       %1197 = OpVectorTimesScalar %v3float %1196 %float_2
       %1200 = OpFMul %float %1199 %float_0_5
       %1204 = OpIAdd %uint %1203 %uint_1
               OpBranch %1195
       %1206 = OpLabel
       %1438 = OpExtInst %float %1 FMix %float_0 %float_1 %1201
       %1439 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_89 %int_2
       %1440 = OpLoad %float %1439
       %1441 = OpFNegate %float %900
       %1442 = OpExtInst %float %1 Fma %1441 %1440 %1438
       %1443 = OpExtInst %float %1 Fma %900 %1440 %float_1
       %1444 = OpExtInst %float %1 Fma %1441 %1440 %1443
       %1445 = OpFDiv %float %1442 %1444
       %1446 = OpExtInst %float %1 Fma %1445 %float_n1 %float_1
       %1447 = OpExtInst %float %1 FClamp %1446 %float_0 %float_1
       %1448 = OpFOrdLessThanEqual %bool %1447 %float_0
       %1449 = OpExtInst %float %1 Pow %1447 %float_2
       %1450 = OpSelect %float %1448 %float_0 %1449
       %1451 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_0
       %1452 = OpLoad %float %1451
       %1453 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_89 %int_3
       %1454 = OpLoad %float %1453
       %1455 = OpExtInst %float %1 FMix %1452 %1454 %1450
       %1456 = OpExtInst %float %1 FClamp %1455 %float_0 %float_1
       %1457 = OpFMul %float %900 %1456
       %1458 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_1
       %1459 = OpLoad %float %1458
       %1460 = OpCompositeConstruct %v3float %1459 %1459 %1459
       %1461 = OpFMul %v3float %604 %1460
       %1462 = OpFMul %v3float %655 %1460
       %1463 = OpVectorTimesScalar %v3float %1462 %float_4_76837158en07
       %1464 = OpFAdd %v3float %1463 %143
       %1465 = OpExtInst %v3float %1 Fma %604 %1460 %1464
       %1466 = OpExtInst %v3float %1 Floor %1465
       %1467 = OpFNegate %v3float %1466
       %1468 = OpExtInst %v3float %1 Fma %604 %1460 %1467
       %1469 = OpVectorTimesScalar %v3float %1468 %float_2097152
       %1470 = OpExtInst %v3float %1 Fma %655 %1460 %1469
       %1471 = OpVectorTimesScalar %v3float %1470 %float_1
               OpBranch %1472
       %1472 = OpLabel
       %1473 = OpPhi %v3float %552 %1206 %1474 %1475
       %1476 = OpPhi %v3float %1471 %1206 %1477 %1475
       %1478 = OpPhi %float %float_1 %1206 %1479 %1475
       %1480 = OpPhi %float %float_0 %1206 %1481 %1475
       %1482 = OpPhi %uint %uint_0 %1206 %1483 %1475
       %1484 = OpULessThan %bool %1482 %uint_1
               OpLoopMerge %1485 %1475 DontUnroll
               OpBranchConditional %1484 %1486 %1485
       %1486 = OpLabel
       %1487 = OpExtInst %v3float %1 Fract %1476
       %1488 = OpExtInst %v3float %1 Floor %1476
       %1489 = OpCompositeInsert %v3float %float_0 %1473 0
               OpBranch %1490
       %1490 = OpLabel
       %1491 = OpPhi %v4float %364 %1486 %1492 %1493
       %1474 = OpPhi %v3float %1489 %1486 %1494 %1493
       %1495 = OpCompositeExtract %float %1474 0
       %1496 = OpFOrdLessThanEqual %bool %1495 %float_1
               OpLoopMerge %1497 %1493 None
               OpBranchConditional %1496 %1498 %1497
       %1498 = OpLabel
       %1499 = OpCompositeInsert %v3float %float_0 %1474 1
               OpBranch %1500
       %1500 = OpLabel
       %1501 = OpPhi %v3float %1499 %1498 %1502 %1503
       %1492 = OpPhi %v4float %1491 %1498 %1504 %1503
       %1505 = OpCompositeExtract %float %1501 1
       %1506 = OpFOrdLessThanEqual %bool %1505 %float_1
               OpLoopMerge %1507 %1503 None
               OpBranchConditional %1506 %1508 %1507
       %1508 = OpLabel
       %1509 = OpCompositeInsert %v3float %float_0 %1501 2
               OpBranch %1510
       %1510 = OpLabel
       %1504 = OpPhi %v4float %1492 %1508 %1511 %1512
       %1513 = OpPhi %v3float %1509 %1508 %1514 %1512
       %1515 = OpCompositeExtract %float %1513 2
       %1516 = OpFOrdLessThanEqual %bool %1515 %float_1
               OpLoopMerge %1517 %1512 None
               OpBranchConditional %1516 %1512 %1517
       %1512 = OpLabel
       %1518 = OpFAdd %v3float %1488 %1513
       %1519 = OpVectorShuffle %v3float %549 %1518 3 4 5
       %1520 = OpConvertFToS %v3int %1519
       %1521 = OpBitcast %v3uint %1520
       %1522 = OpIMul %v3uint %1521 %413
       %1523 = OpIAdd %v3uint %1522 %415
       %1524 = OpCompositeExtract %uint %1523 1
       %1525 = OpCompositeExtract %uint %1523 2
       %1526 = OpIMul %uint %1524 %1525
       %1527 = OpCompositeExtract %uint %1523 0
       %1528 = OpIAdd %uint %1527 %1526
       %1529 = OpIMul %uint %1525 %1528
       %1530 = OpIAdd %uint %1524 %1529
       %1531 = OpIMul %uint %1528 %1530
       %1532 = OpIAdd %uint %1525 %1531
       %1533 = OpIMul %uint %1530 %1532
       %1534 = OpIAdd %uint %1528 %1533
       %1535 = OpCompositeInsert %v3uint %1534 %1523 0
       %1536 = OpIMul %uint %1532 %1534
       %1537 = OpIAdd %uint %1530 %1536
       %1538 = OpCompositeInsert %v3uint %1537 %1535 1
       %1539 = OpIMul %uint %1534 %1537
       %1540 = OpIAdd %uint %1532 %1539
       %1541 = OpCompositeInsert %v3uint %1540 %1538 2
       %1542 = OpBitwiseAnd %v3uint %416 %417
       %1543 = OpShiftRightLogical %v3uint %1541 %1542
       %1544 = OpConvertUToF %v3float %1543
       %1545 = OpExtInst %v3float %1 Fma %1544 %533 %522
       %1546 = OpExtInst %v3float %1 Normalize %1545
       %1547 = OpVectorTimesScalar %v3float %1546 %float_0_2588
       %1548 = OpFAdd %v3float %1513 %1547
       %1549 = OpFSub %v3float %1487 %1548
       %1550 = OpCompositeExtract %float %1504 3
       %1551 = OpDot %float %1549 %1549
       %1552 = OpExtInst %float %1 NMin %1550 %1551
       %1511 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %1552
       %1553 = OpFAdd %float %1515 %float_1
       %1514 = OpCompositeInsert %v3float %1553 %1513 2
               OpBranch %1510
       %1517 = OpLabel
               OpBranch %1503
       %1503 = OpLabel
       %1554 = OpCompositeExtract %float %1513 1
       %1555 = OpFAdd %float %1554 %float_1
       %1502 = OpCompositeInsert %v3float %1555 %1513 1
               OpBranch %1500
       %1507 = OpLabel
               OpBranch %1493
       %1493 = OpLabel
       %1556 = OpCompositeExtract %float %1501 0
       %1557 = OpFAdd %float %1556 %float_1
       %1494 = OpCompositeInsert %v3float %1557 %1501 0
               OpBranch %1490
       %1497 = OpLabel
       %1558 = OpCompositeExtract %float %1491 3
       %1559 = OpExtInst %float %1 Sqrt %1558
       %1560 = OpExtInst %float %1 Fma %1559 %float_2 %float_n1
       %1561 = OpExtInst %float %1 FAbs %1560
       %1481 = OpExtInst %float %1 Fma %1561 %1478 %1480
       %1477 = OpVectorTimesScalar %v3float %1476 %float_2
       %1479 = OpFMul %float %1478 %float_0_5
               OpBranch %1475
       %1475 = OpLabel
       %1483 = OpIAdd %uint %1482 %uint_1
               OpBranch %1472
       %1485 = OpLabel
       %1562 = OpExtInst %float %1 FMix %float_n1 %float_1 %1480
       %1563 = OpExtInst %float %1 FClamp %1562 %float_0 %float_1
       %1564 = OpFMul %v3float %1462 %286
       %1565 = OpVectorTimesScalar %v3float %1564 %float_4_76837158en07
       %1566 = OpFAdd %v3float %1565 %143
       %1567 = OpExtInst %v3float %1 Fma %1461 %286 %1566
       %1568 = OpExtInst %v3float %1 Floor %1567
       %1569 = OpFNegate %v3float %1568
       %1570 = OpExtInst %v3float %1 Fma %1461 %286 %1569
       %1571 = OpVectorTimesScalar %v3float %1570 %float_2097152
       %1572 = OpExtInst %v3float %1 Fma %1462 %286 %1571
       %1573 = OpVectorTimesScalar %v3float %1572 %float_1
               OpBranch %1574
       %1574 = OpLabel
       %1575 = OpPhi %v3float %552 %1485 %1576 %1577
       %1578 = OpPhi %v3float %1573 %1485 %1579 %1577
       %1580 = OpPhi %float %float_1 %1485 %1581 %1577
       %1582 = OpPhi %float %float_0 %1485 %1583 %1577
       %1584 = OpPhi %uint %uint_0 %1485 %1585 %1577
       %1586 = OpULessThan %bool %1584 %uint_1
               OpLoopMerge %1587 %1577 DontUnroll
               OpBranchConditional %1586 %1588 %1587
       %1588 = OpLabel
       %1589 = OpExtInst %v3float %1 Fract %1578
       %1590 = OpExtInst %v3float %1 Floor %1578
       %1591 = OpCompositeInsert %v3float %float_0 %1575 0
               OpBranch %1592
       %1592 = OpLabel
       %1593 = OpPhi %v4float %364 %1588 %1594 %1595
       %1576 = OpPhi %v3float %1591 %1588 %1596 %1595
       %1597 = OpCompositeExtract %float %1576 0
       %1598 = OpFOrdLessThanEqual %bool %1597 %float_1
               OpLoopMerge %1599 %1595 None
               OpBranchConditional %1598 %1600 %1599
       %1600 = OpLabel
       %1601 = OpCompositeInsert %v3float %float_0 %1576 1
               OpBranch %1602
       %1602 = OpLabel
       %1603 = OpPhi %v3float %1601 %1600 %1604 %1605
       %1594 = OpPhi %v4float %1593 %1600 %1606 %1605
       %1607 = OpCompositeExtract %float %1603 1
       %1608 = OpFOrdLessThanEqual %bool %1607 %float_1
               OpLoopMerge %1609 %1605 None
               OpBranchConditional %1608 %1610 %1609
       %1610 = OpLabel
       %1611 = OpCompositeInsert %v3float %float_0 %1603 2
               OpBranch %1612
       %1612 = OpLabel
       %1606 = OpPhi %v4float %1594 %1610 %1613 %1614
       %1615 = OpPhi %v3float %1611 %1610 %1616 %1614
       %1617 = OpCompositeExtract %float %1615 2
       %1618 = OpFOrdLessThanEqual %bool %1617 %float_1
               OpLoopMerge %1619 %1614 None
               OpBranchConditional %1618 %1614 %1619
       %1614 = OpLabel
       %1620 = OpFAdd %v3float %1590 %1615
       %1621 = OpVectorShuffle %v3float %549 %1620 3 4 5
       %1622 = OpConvertFToS %v3int %1621
       %1623 = OpBitcast %v3uint %1622
       %1624 = OpIMul %v3uint %1623 %413
       %1625 = OpIAdd %v3uint %1624 %415
       %1626 = OpCompositeExtract %uint %1625 1
       %1627 = OpCompositeExtract %uint %1625 2
       %1628 = OpIMul %uint %1626 %1627
       %1629 = OpCompositeExtract %uint %1625 0
       %1630 = OpIAdd %uint %1629 %1628
       %1631 = OpIMul %uint %1627 %1630
       %1632 = OpIAdd %uint %1626 %1631
       %1633 = OpIMul %uint %1630 %1632
       %1634 = OpIAdd %uint %1627 %1633
       %1635 = OpIMul %uint %1632 %1634
       %1636 = OpIAdd %uint %1630 %1635
       %1637 = OpCompositeInsert %v3uint %1636 %1625 0
       %1638 = OpIMul %uint %1634 %1636
       %1639 = OpIAdd %uint %1632 %1638
       %1640 = OpCompositeInsert %v3uint %1639 %1637 1
       %1641 = OpIMul %uint %1636 %1639
       %1642 = OpIAdd %uint %1634 %1641
       %1643 = OpCompositeInsert %v3uint %1642 %1640 2
       %1644 = OpBitwiseAnd %v3uint %416 %417
       %1645 = OpShiftRightLogical %v3uint %1643 %1644
       %1646 = OpConvertUToF %v3float %1645
       %1647 = OpExtInst %v3float %1 Fma %1646 %533 %522
       %1648 = OpExtInst %v3float %1 Normalize %1647
       %1649 = OpVectorTimesScalar %v3float %1648 %float_0_2588
       %1650 = OpFAdd %v3float %1615 %1649
       %1651 = OpFSub %v3float %1589 %1650
       %1652 = OpCompositeExtract %float %1606 3
       %1653 = OpDot %float %1651 %1651
       %1654 = OpExtInst %float %1 NMin %1652 %1653
       %1613 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %1654
       %1655 = OpFAdd %float %1617 %float_1
       %1616 = OpCompositeInsert %v3float %1655 %1615 2
               OpBranch %1612
       %1619 = OpLabel
               OpBranch %1605
       %1605 = OpLabel
       %1656 = OpCompositeExtract %float %1615 1
       %1657 = OpFAdd %float %1656 %float_1
       %1604 = OpCompositeInsert %v3float %1657 %1615 1
               OpBranch %1602
       %1609 = OpLabel
               OpBranch %1595
       %1595 = OpLabel
       %1658 = OpCompositeExtract %float %1603 0
       %1659 = OpFAdd %float %1658 %float_1
       %1596 = OpCompositeInsert %v3float %1659 %1603 0
               OpBranch %1592
       %1599 = OpLabel
       %1660 = OpCompositeExtract %float %1593 3
       %1661 = OpExtInst %float %1 Sqrt %1660
       %1662 = OpExtInst %float %1 Fma %1661 %float_2 %float_n1
       %1663 = OpExtInst %float %1 FAbs %1662
       %1583 = OpExtInst %float %1 Fma %1663 %1580 %1582
       %1579 = OpVectorTimesScalar %v3float %1578 %float_2
       %1581 = OpFMul %float %1580 %float_0_5
               OpBranch %1577
       %1577 = OpLabel
       %1585 = OpIAdd %uint %1584 %uint_1
               OpBranch %1574
       %1587 = OpLabel
       %1664 = OpExtInst %float %1 FMix %float_n1 %float_1 %1582
       %1665 = OpExtInst %float %1 FClamp %1664 %float_0 %float_1
       %1666 = OpFAdd %float %1563 %1665
       %1667 = OpFNegate %float %1666
       %1668 = OpExtInst %float %1 Fma %900 %1456 %1667
       %1669 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_2
       %1670 = OpLoad %float %1669
       %1671 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_0
       %1672 = OpLoad %float %1671
       %1673 = OpFSub %float %1672 %float_n1
       %1674 = OpExtInst %float %1 FAbs %1673
       %1675 = OpFOrdGreaterThan %bool %1674 %float_9_99999975en06
       %1676 = OpFOrdGreaterThanEqual %bool %1672 %float_n1
       %1677 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_1
       %1678 = OpLoad %float %1677
       %1679 = OpSelect %float %1676 %1672 %1678
       %1680 = OpSelect %float %1675 %1679 %1672
       %1681 = OpFSub %float %1680 %float_1
       %1682 = OpExtInst %float %1 FAbs %1681
       %1683 = OpFOrdGreaterThan %bool %1682 %float_9_99999975en06
       %1684 = OpFOrdGreaterThanEqual %bool %1680 %float_1
       %1685 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_2 %int_2
       %1686 = OpLoad %float %1685
       %1687 = OpSelect %float %1684 %1686 %1672
       %1688 = OpSelect %float %1683 %1687 %1672
       %1689 = OpExtInst %float %1 FAbs %1688
       %1690 = OpFOrdGreaterThan %bool %1689 %float_9_99999975en06
       %1691 = OpFOrdGreaterThanEqual %bool %1688 %float_0
       %1692 = OpSelect %float %1691 %float_1 %float_n1
       %1693 = OpSelect %float %1690 %1692 %float_1
       %1694 = OpExtInst %float %1 NMax %1693 %float_n1
       %1695 = OpExtInst %float %1 NMin %1694 %float_1
       %1696 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_4 %int_3
       %1697 = OpLoad %float %1696
       %1698 = OpCompositeConstruct %v3float %1695 %1697 %float_0
       %1699 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_6
       %1700 = OpLoad %v4float %1699
       %1701 = OpVectorShuffle %v3float %1700 %1700 0 1 2
       %1702 = OpFAdd %v3float %1698 %1701
       %1703 = OpExtInst %v3float %1 NMax %1702 %287
       %1704 = OpExtInst %v3float %1 NMin %1703 %134
       %1705 = OpCompositeExtract %float %604 0
       %1706 = OpCompositeExtract %float %655 0
       %1707 = OpCompositeExtract %float %604 1
       %1708 = OpCompositeExtract %float %655 1
       %1709 = OpCompositeConstruct %v2float %1705 %1707
       %1710 = OpCompositeConstruct %v2float %1706 %1708
       %1711 = OpCompositeExtract %float %1704 0
       %1712 = OpCompositeExtract %float %1704 1
       %1713 = OpCompositeConstruct %v2float %1711 %1712
       %1714 = OpFMul %v2float %1709 %1713
       %1715 = OpFMul %v2float %1713 %1710
       %1716 = OpCompositeExtract %float %1714 0
       %1717 = OpCompositeExtract %float %1715 0
       %1718 = OpCompositeExtract %float %1714 1
       %1719 = OpCompositeExtract %float %1715 1
       %1720 = OpFAdd %float %1716 %1718
       %1721 = OpFAdd %float %1717 %1719
       %1722 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_9 %int_0
       %1723 = OpLoad %float %1722
       %1724 = OpFMul %float %1720 %1723
       %1725 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_9 %int_2
       %1726 = OpLoad %float %1725
       %1727 = OpFSub %float %1174 %1726
       %1728 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_9 %int_3
       %1729 = OpLoad %float %1728
       %1730 = OpCompositeConstruct %v3float %1729 %1729 %1729
       %1731 = OpFMul %v3float %604 %1730
       %1732 = OpFMul %v3float %1730 %655
       %1733 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_10 %int_0
       %1734 = OpLoad %float %1733
       %1735 = OpCompositeConstruct %v3float %1734 %1734 %1734
       %1736 = OpFMul %v3float %1731 %1735
       %1737 = OpFMul %v3float %1732 %1735
       %1738 = OpCompositeExtract %float %774 1
       %1739 = OpCompositeConstruct %v3float %1738 %1738 %1738
       %1740 = OpFMul %v3float %1736 %1739
       %1741 = OpFMul %v3float %1737 %1739
       %1742 = OpFMul %v3float %1741 %289
       %1743 = OpCompositeExtract %float %1742 0
       %1744 = OpCompositeExtract %float %1742 1
       %1745 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_10 %int_2
       %1746 = OpLoad %float %1745
       %1747 = OpFMul %float %1174 %1746
       %1748 = OpCompositeExtract %float %1742 2
       %1749 = OpCompositeConstruct %v2float %1747 %1747
       %1750 = OpCompositeConstruct %v2float %1748 %1748
       %1751 = OpFAdd %v2float %1749 %1750
       %1752 = OpCompositeExtract %float %1751 0
       %1753 = OpCompositeConstruct %v3float %1743 %1744 %1752
       %1754 = OpVectorTimesScalar %v3float %1753 %float_4_76837158en07
       %1755 = OpFAdd %v3float %1754 %143
       %1756 = OpExtInst %v3float %1 Fma %1740 %289 %1755
       %1757 = OpExtInst %v3float %1 Floor %1756
       %1758 = OpFNegate %v3float %1757
       %1759 = OpExtInst %v3float %1 Fma %1740 %289 %1758
       %1760 = OpVectorTimesScalar %v3float %1759 %float_2097152
       %1761 = OpFAdd %v3float %1760 %1753
       %1762 = OpVectorTimesScalar %v3float %1761 %float_1
               OpBranch %1763
       %1763 = OpLabel
       %1764 = OpPhi %v3float %1762 %1587 %1765 %1766
       %1767 = OpPhi %float %float_1 %1587 %1768 %1766
       %1769 = OpPhi %float %float_0 %1587 %1770 %1766
       %1771 = OpPhi %uint %uint_0 %1587 %1772 %1766
       %1773 = OpULessThan %bool %1771 %uint_6
               OpLoopMerge %1774 %1766 DontUnroll
               OpBranchConditional %1773 %1766 %1774
       %1766 = OpLabel
       %1775 = OpExtInst %v3float %1 Fract %1764
       %1776 = OpExtInst %v3float %1 Floor %1764
       %1777 = OpDot %float %1776 %397
       %1778 = OpFAdd %float %1777 %float_19
       %1779 = OpFAdd %float %1777 %float_47
       %1780 = OpFAdd %float %1777 %float_66
       %1781 = OpFAdd %float %1777 %float_101
       %1782 = OpFAdd %float %1777 %float_120
       %1783 = OpFAdd %float %1777 %float_148
       %1784 = OpFAdd %float %1777 %float_167
       %1785 = OpConvertFToS %int %1777
       %1786 = OpCompositeConstruct %v3int %1785 %int_0 %int_0
       %1787 = OpBitcast %v3uint %1786
       %1788 = OpIMul %v3uint %1787 %413
       %1789 = OpIAdd %v3uint %1788 %415
       %1790 = OpCompositeExtract %uint %1789 1
       %1791 = OpCompositeExtract %uint %1789 2
       %1792 = OpIMul %uint %1790 %1791
       %1793 = OpCompositeExtract %uint %1789 0
       %1794 = OpIAdd %uint %1793 %1792
       %1795 = OpIMul %uint %1791 %1794
       %1796 = OpIAdd %uint %1790 %1795
       %1797 = OpIMul %uint %1794 %1796
       %1798 = OpIAdd %uint %1791 %1797
       %1799 = OpIMul %uint %1796 %1798
       %1800 = OpIAdd %uint %1794 %1799
       %1801 = OpCompositeInsert %v3uint %1800 %561 0
       %1802 = OpBitwiseAnd %v3uint %416 %417
       %1803 = OpShiftRightLogical %v3uint %1801 %1802
       %1804 = OpCompositeExtract %uint %1803 0
       %1805 = OpCompositeConstruct %v3uint %1804 %1804 %1804
       %1806 = OpBitwiseAnd %v3uint %1805 %398
       %1807 = OpConvertUToF %v3float %1806
       %1808 = OpExtInst %v3float %1 Fma %1807 %402 %287
       %1809 = OpDot %float %1808 %1775
       %1810 = OpConvertFToS %int %1778
       %1811 = OpFSub %v3float %1775 %362
       %1812 = OpCompositeConstruct %v3int %1810 %int_0 %int_0
       %1813 = OpBitcast %v3uint %1812
       %1814 = OpIMul %v3uint %1813 %413
       %1815 = OpIAdd %v3uint %1814 %415
       %1816 = OpCompositeExtract %uint %1815 1
       %1817 = OpCompositeExtract %uint %1815 2
       %1818 = OpIMul %uint %1816 %1817
       %1819 = OpCompositeExtract %uint %1815 0
       %1820 = OpIAdd %uint %1819 %1818
       %1821 = OpIMul %uint %1817 %1820
       %1822 = OpIAdd %uint %1816 %1821
       %1823 = OpIMul %uint %1820 %1822
       %1824 = OpIAdd %uint %1817 %1823
       %1825 = OpIMul %uint %1822 %1824
       %1826 = OpIAdd %uint %1820 %1825
       %1827 = OpCompositeInsert %v3uint %1826 %561 0
       %1828 = OpShiftRightLogical %v3uint %1827 %1802
       %1829 = OpCompositeExtract %uint %1828 0
       %1830 = OpCompositeConstruct %v3uint %1829 %1829 %1829
       %1831 = OpBitwiseAnd %v3uint %1830 %398
       %1832 = OpConvertUToF %v3float %1831
       %1833 = OpExtInst %v3float %1 Fma %1832 %402 %287
       %1834 = OpDot %float %1833 %1811
       %1835 = OpConvertFToS %int %1779
       %1836 = OpFSub %v3float %1775 %363
       %1837 = OpCompositeConstruct %v3int %1835 %int_0 %int_0
       %1838 = OpBitcast %v3uint %1837
       %1839 = OpIMul %v3uint %1838 %413
       %1840 = OpIAdd %v3uint %1839 %415
       %1841 = OpCompositeExtract %uint %1840 1
       %1842 = OpCompositeExtract %uint %1840 2
       %1843 = OpIMul %uint %1841 %1842
       %1844 = OpCompositeExtract %uint %1840 0
       %1845 = OpIAdd %uint %1844 %1843
       %1846 = OpIMul %uint %1842 %1845
       %1847 = OpIAdd %uint %1841 %1846
       %1848 = OpIMul %uint %1845 %1847
       %1849 = OpIAdd %uint %1842 %1848
       %1850 = OpIMul %uint %1847 %1849
       %1851 = OpIAdd %uint %1845 %1850
       %1852 = OpCompositeInsert %v3uint %1851 %561 0
       %1853 = OpShiftRightLogical %v3uint %1852 %1802
       %1854 = OpCompositeExtract %uint %1853 0
       %1855 = OpCompositeConstruct %v3uint %1854 %1854 %1854
       %1856 = OpBitwiseAnd %v3uint %1855 %398
       %1857 = OpConvertUToF %v3float %1856
       %1858 = OpExtInst %v3float %1 Fma %1857 %402 %287
       %1859 = OpDot %float %1858 %1836
       %1860 = OpConvertFToS %int %1780
       %1861 = OpFSub %v3float %1775 %140
       %1862 = OpCompositeConstruct %v3int %1860 %int_0 %int_0
       %1863 = OpBitcast %v3uint %1862
       %1864 = OpIMul %v3uint %1863 %413
       %1865 = OpIAdd %v3uint %1864 %415
       %1866 = OpCompositeExtract %uint %1865 1
       %1867 = OpCompositeExtract %uint %1865 2
       %1868 = OpIMul %uint %1866 %1867
       %1869 = OpCompositeExtract %uint %1865 0
       %1870 = OpIAdd %uint %1869 %1868
       %1871 = OpIMul %uint %1867 %1870
       %1872 = OpIAdd %uint %1866 %1871
       %1873 = OpIMul %uint %1870 %1872
       %1874 = OpIAdd %uint %1867 %1873
       %1875 = OpIMul %uint %1872 %1874
       %1876 = OpIAdd %uint %1870 %1875
       %1877 = OpCompositeInsert %v3uint %1876 %561 0
       %1878 = OpShiftRightLogical %v3uint %1877 %1802
       %1879 = OpCompositeExtract %uint %1878 0
       %1880 = OpCompositeConstruct %v3uint %1879 %1879 %1879
       %1881 = OpBitwiseAnd %v3uint %1880 %398
       %1882 = OpConvertUToF %v3float %1881
       %1883 = OpExtInst %v3float %1 Fma %1882 %402 %287
       %1884 = OpDot %float %1883 %1861
       %1885 = OpConvertFToS %int %1781
       %1886 = OpFSub %v3float %1775 %299
       %1887 = OpCompositeConstruct %v3int %1885 %int_0 %int_0
       %1888 = OpBitcast %v3uint %1887
       %1889 = OpIMul %v3uint %1888 %413
       %1890 = OpIAdd %v3uint %1889 %415
       %1891 = OpCompositeExtract %uint %1890 1
       %1892 = OpCompositeExtract %uint %1890 2
       %1893 = OpIMul %uint %1891 %1892
       %1894 = OpCompositeExtract %uint %1890 0
       %1895 = OpIAdd %uint %1894 %1893
       %1896 = OpIMul %uint %1892 %1895
       %1897 = OpIAdd %uint %1891 %1896
       %1898 = OpIMul %uint %1895 %1897
       %1899 = OpIAdd %uint %1892 %1898
       %1900 = OpIMul %uint %1897 %1899
       %1901 = OpIAdd %uint %1895 %1900
       %1902 = OpCompositeInsert %v3uint %1901 %561 0
       %1903 = OpShiftRightLogical %v3uint %1902 %1802
       %1904 = OpCompositeExtract %uint %1903 0
       %1905 = OpCompositeConstruct %v3uint %1904 %1904 %1904
       %1906 = OpBitwiseAnd %v3uint %1905 %398
       %1907 = OpConvertUToF %v3float %1906
       %1908 = OpExtInst %v3float %1 Fma %1907 %402 %287
       %1909 = OpDot %float %1908 %1886
       %1910 = OpConvertFToS %int %1782
       %1911 = OpFSub %v3float %1775 %146
       %1912 = OpCompositeConstruct %v3int %1910 %int_0 %int_0
       %1913 = OpBitcast %v3uint %1912
       %1914 = OpIMul %v3uint %1913 %413
       %1915 = OpIAdd %v3uint %1914 %415
       %1916 = OpCompositeExtract %uint %1915 1
       %1917 = OpCompositeExtract %uint %1915 2
       %1918 = OpIMul %uint %1916 %1917
       %1919 = OpCompositeExtract %uint %1915 0
       %1920 = OpIAdd %uint %1919 %1918
       %1921 = OpIMul %uint %1917 %1920
       %1922 = OpIAdd %uint %1916 %1921
       %1923 = OpIMul %uint %1920 %1922
       %1924 = OpIAdd %uint %1917 %1923
       %1925 = OpIMul %uint %1922 %1924
       %1926 = OpIAdd %uint %1920 %1925
       %1927 = OpCompositeInsert %v3uint %1926 %561 0
       %1928 = OpShiftRightLogical %v3uint %1927 %1802
       %1929 = OpCompositeExtract %uint %1928 0
       %1930 = OpCompositeConstruct %v3uint %1929 %1929 %1929
       %1931 = OpBitwiseAnd %v3uint %1930 %398
       %1932 = OpConvertUToF %v3float %1931
       %1933 = OpExtInst %v3float %1 Fma %1932 %402 %287
       %1934 = OpDot %float %1933 %1911
       %1935 = OpConvertFToS %int %1783
       %1936 = OpFSub %v3float %1775 %141
       %1937 = OpCompositeConstruct %v3int %1935 %int_0 %int_0
       %1938 = OpBitcast %v3uint %1937
       %1939 = OpIMul %v3uint %1938 %413
       %1940 = OpIAdd %v3uint %1939 %415
       %1941 = OpCompositeExtract %uint %1940 1
       %1942 = OpCompositeExtract %uint %1940 2
       %1943 = OpIMul %uint %1941 %1942
       %1944 = OpCompositeExtract %uint %1940 0
       %1945 = OpIAdd %uint %1944 %1943
       %1946 = OpIMul %uint %1942 %1945
       %1947 = OpIAdd %uint %1941 %1946
       %1948 = OpIMul %uint %1945 %1947
       %1949 = OpIAdd %uint %1942 %1948
       %1950 = OpIMul %uint %1947 %1949
       %1951 = OpIAdd %uint %1945 %1950
       %1952 = OpCompositeInsert %v3uint %1951 %561 0
       %1953 = OpShiftRightLogical %v3uint %1952 %1802
       %1954 = OpCompositeExtract %uint %1953 0
       %1955 = OpCompositeConstruct %v3uint %1954 %1954 %1954
       %1956 = OpBitwiseAnd %v3uint %1955 %398
       %1957 = OpConvertUToF %v3float %1956
       %1958 = OpExtInst %v3float %1 Fma %1957 %402 %287
       %1959 = OpDot %float %1958 %1936
       %1960 = OpConvertFToS %int %1784
       %1961 = OpFSub %v3float %1775 %134
       %1962 = OpCompositeConstruct %v3int %1960 %int_0 %int_0
       %1963 = OpBitcast %v3uint %1962
       %1964 = OpIMul %v3uint %1963 %413
       %1965 = OpIAdd %v3uint %1964 %415
       %1966 = OpCompositeExtract %uint %1965 1
       %1967 = OpCompositeExtract %uint %1965 2
       %1968 = OpIMul %uint %1966 %1967
       %1969 = OpCompositeExtract %uint %1965 0
       %1970 = OpIAdd %uint %1969 %1968
       %1971 = OpIMul %uint %1967 %1970
       %1972 = OpIAdd %uint %1966 %1971
       %1973 = OpIMul %uint %1970 %1972
       %1974 = OpIAdd %uint %1967 %1973
       %1975 = OpIMul %uint %1972 %1974
       %1976 = OpIAdd %uint %1970 %1975
       %1977 = OpCompositeInsert %v3uint %1976 %561 0
       %1978 = OpShiftRightLogical %v3uint %1977 %1802
       %1979 = OpCompositeExtract %uint %1978 0
       %1980 = OpCompositeConstruct %v3uint %1979 %1979 %1979
       %1981 = OpBitwiseAnd %v3uint %1980 %398
       %1982 = OpConvertUToF %v3float %1981
       %1983 = OpExtInst %v3float %1 Fma %1982 %402 %287
       %1984 = OpDot %float %1983 %1961
       %1985 = OpCompositeExtract %float %1775 0
       %1986 = OpCompositeExtract %float %1775 1
       %1987 = OpCompositeExtract %float %1775 2
       %1988 = OpCompositeConstruct %v4float %1985 %1986 %1987 %float_0
       %1989 = OpFMul %v4float %1988 %1988
       %1990 = OpFMul %v4float %1989 %1988
       %1991 = OpVectorTimesScalar %v4float %1988 %float_6
       %1992 = OpFSub %v4float %1991 %393
       %1993 = OpExtInst %v4float %1 Fma %1988 %1992 %394
       %1994 = OpFMul %v4float %1990 %1993
       %1995 = OpCompositeExtract %float %1994 0
       %1996 = OpExtInst %float %1 FMix %1809 %1834 %1995
       %1997 = OpExtInst %float %1 FMix %1859 %1884 %1995
       %1998 = OpCompositeExtract %float %1994 1
       %1999 = OpExtInst %float %1 FMix %1996 %1997 %1998
       %2000 = OpExtInst %float %1 FMix %1909 %1934 %1995
       %2001 = OpExtInst %float %1 FMix %1959 %1984 %1995
       %2002 = OpExtInst %float %1 FMix %2000 %2001 %1998
       %2003 = OpCompositeExtract %float %1994 2
       %2004 = OpExtInst %float %1 FMix %1999 %2002 %2003
       %1770 = OpExtInst %float %1 Fma %2004 %1767 %1769
       %1765 = OpVectorTimesScalar %v3float %1764 %float_2
       %1768 = OpFMul %float %1767 %float_0_5
       %1772 = OpIAdd %uint %1771 %uint_1
               OpBranch %1763
       %1774 = OpLabel
       %2005 = OpExtInst %float %1 Fma %1769 %float_0_5 %float_0_5
       %2006 = OpExtInst %float %1 FMix %float_0 %float_1 %2005
       %2007 = OpExtInst %float %1 FClamp %2006 %float_0 %float_1
       %2008 = OpExtInst %float %1 FMix %1174 %1727 %2007
       %2009 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_10 %int_3
       %2010 = OpLoad %float %2009
       %2011 = OpFMul %float %2010 %2008
       %2012 = OpExtInst %float %1 Fma %1721 %1723 %2011
       %2013 = OpExtInst %float %1 Floor %1724
       %2014 = OpFNegate %float %2013
       %2015 = OpExtInst %float %1 Fma %1720 %1723 %2014
       %2016 = OpExtInst %float %1 Fma %2015 %float_2097152 %2012
       %2017 = OpExtInst %float %1 Floor %2016
       %2018 = OpFMul %float %2013 %float_n6_28318548
       %2019 = OpExtInst %float %1 Fma %1724 %float_6_28318548 %2018
       %2020 = OpFMul %float %2017 %float_n6_28318548
       %2021 = OpExtInst %float %1 Fma %2012 %float_6_28318548 %2020
       %2022 = OpExtInst %float %1 Fma %2019 %float_2097152 %2021
       %2023 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_12 %int_0
       %2024 = OpLoad %float %2023
       %2025 = OpCompositeConstruct %v3float %2024 %2024 %2024
       %2026 = OpFMul %v3float %604 %2025
       %2027 = OpFMul %v3float %2025 %655
       %2028 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_12 %int_1
       %2029 = OpLoad %float %2028
       %2030 = OpCompositeConstruct %v3float %2029 %2029 %2029
       %2031 = OpFMul %v3float %2026 %2030
       %2032 = OpFMul %v3float %2027 %2030
       %2033 = OpFMul %v3float %2032 %518
       %2034 = OpCompositeExtract %float %2033 0
       %2035 = OpCompositeExtract %float %2033 1
       %2036 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_12 %int_3
       %2037 = OpLoad %float %2036
       %2038 = OpFMul %float %1174 %2037
       %2039 = OpCompositeExtract %float %2033 2
       %2040 = OpCompositeConstruct %v2float %2038 %2038
       %2041 = OpCompositeConstruct %v2float %2039 %2039
       %2042 = OpFAdd %v2float %2040 %2041
       %2043 = OpCompositeExtract %float %2042 0
       %2044 = OpCompositeConstruct %v3float %2034 %2035 %2043
       %2045 = OpVectorTimesScalar %v3float %2044 %float_4_76837158en07
       %2046 = OpFAdd %v3float %2045 %143
       %2047 = OpExtInst %v3float %1 Fma %2031 %518 %2046
       %2048 = OpExtInst %v3float %1 Floor %2047
       %2049 = OpFNegate %v3float %2048
       %2050 = OpExtInst %v3float %1 Fma %2031 %518 %2049
       %2051 = OpVectorTimesScalar %v3float %2050 %float_2097152
       %2052 = OpFAdd %v3float %2051 %2044
       %2053 = OpVectorTimesScalar %v3float %2052 %float_1
               OpBranch %2054
       %2054 = OpLabel
       %2055 = OpPhi %v3float %2053 %1774 %2056 %2057
       %2058 = OpPhi %float %float_1 %1774 %2059 %2057
       %2060 = OpPhi %float %float_0 %1774 %2061 %2057
       %2062 = OpPhi %uint %uint_0 %1774 %2063 %2057
       %2064 = OpULessThan %bool %2062 %uint_10
               OpLoopMerge %2065 %2057 DontUnroll
               OpBranchConditional %2064 %2057 %2065
       %2057 = OpLabel
       %2066 = OpExtInst %v3float %1 Fract %2055
       %2067 = OpExtInst %v3float %1 Floor %2055
       %2068 = OpDot %float %2067 %397
       %2069 = OpFAdd %float %2068 %float_19
       %2070 = OpFAdd %float %2068 %float_47
       %2071 = OpFAdd %float %2068 %float_66
       %2072 = OpFAdd %float %2068 %float_101
       %2073 = OpFAdd %float %2068 %float_120
       %2074 = OpFAdd %float %2068 %float_148
       %2075 = OpFAdd %float %2068 %float_167
       %2076 = OpConvertFToS %int %2068
       %2077 = OpCompositeConstruct %v3int %2076 %int_0 %int_0
       %2078 = OpBitcast %v3uint %2077
       %2079 = OpIMul %v3uint %2078 %413
       %2080 = OpIAdd %v3uint %2079 %415
       %2081 = OpCompositeExtract %uint %2080 1
       %2082 = OpCompositeExtract %uint %2080 2
       %2083 = OpIMul %uint %2081 %2082
       %2084 = OpCompositeExtract %uint %2080 0
       %2085 = OpIAdd %uint %2084 %2083
       %2086 = OpIMul %uint %2082 %2085
       %2087 = OpIAdd %uint %2081 %2086
       %2088 = OpIMul %uint %2085 %2087
       %2089 = OpIAdd %uint %2082 %2088
       %2090 = OpIMul %uint %2087 %2089
       %2091 = OpIAdd %uint %2085 %2090
       %2092 = OpCompositeInsert %v3uint %2091 %561 0
       %2093 = OpBitwiseAnd %v3uint %416 %417
       %2094 = OpShiftRightLogical %v3uint %2092 %2093
       %2095 = OpCompositeExtract %uint %2094 0
       %2096 = OpCompositeConstruct %v3uint %2095 %2095 %2095
       %2097 = OpBitwiseAnd %v3uint %2096 %398
       %2098 = OpConvertUToF %v3float %2097
       %2099 = OpExtInst %v3float %1 Fma %2098 %402 %287
       %2100 = OpDot %float %2099 %2066
       %2101 = OpConvertFToS %int %2069
       %2102 = OpFSub %v3float %2066 %362
       %2103 = OpCompositeConstruct %v3int %2101 %int_0 %int_0
       %2104 = OpBitcast %v3uint %2103
       %2105 = OpIMul %v3uint %2104 %413
       %2106 = OpIAdd %v3uint %2105 %415
       %2107 = OpCompositeExtract %uint %2106 1
       %2108 = OpCompositeExtract %uint %2106 2
       %2109 = OpIMul %uint %2107 %2108
       %2110 = OpCompositeExtract %uint %2106 0
       %2111 = OpIAdd %uint %2110 %2109
       %2112 = OpIMul %uint %2108 %2111
       %2113 = OpIAdd %uint %2107 %2112
       %2114 = OpIMul %uint %2111 %2113
       %2115 = OpIAdd %uint %2108 %2114
       %2116 = OpIMul %uint %2113 %2115
       %2117 = OpIAdd %uint %2111 %2116
       %2118 = OpCompositeInsert %v3uint %2117 %561 0
       %2119 = OpShiftRightLogical %v3uint %2118 %2093
       %2120 = OpCompositeExtract %uint %2119 0
       %2121 = OpCompositeConstruct %v3uint %2120 %2120 %2120
       %2122 = OpBitwiseAnd %v3uint %2121 %398
       %2123 = OpConvertUToF %v3float %2122
       %2124 = OpExtInst %v3float %1 Fma %2123 %402 %287
       %2125 = OpDot %float %2124 %2102
       %2126 = OpConvertFToS %int %2070
       %2127 = OpFSub %v3float %2066 %363
       %2128 = OpCompositeConstruct %v3int %2126 %int_0 %int_0
       %2129 = OpBitcast %v3uint %2128
       %2130 = OpIMul %v3uint %2129 %413
       %2131 = OpIAdd %v3uint %2130 %415
       %2132 = OpCompositeExtract %uint %2131 1
       %2133 = OpCompositeExtract %uint %2131 2
       %2134 = OpIMul %uint %2132 %2133
       %2135 = OpCompositeExtract %uint %2131 0
       %2136 = OpIAdd %uint %2135 %2134
       %2137 = OpIMul %uint %2133 %2136
       %2138 = OpIAdd %uint %2132 %2137
       %2139 = OpIMul %uint %2136 %2138
       %2140 = OpIAdd %uint %2133 %2139
       %2141 = OpIMul %uint %2138 %2140
       %2142 = OpIAdd %uint %2136 %2141
       %2143 = OpCompositeInsert %v3uint %2142 %561 0
       %2144 = OpShiftRightLogical %v3uint %2143 %2093
       %2145 = OpCompositeExtract %uint %2144 0
       %2146 = OpCompositeConstruct %v3uint %2145 %2145 %2145
       %2147 = OpBitwiseAnd %v3uint %2146 %398
       %2148 = OpConvertUToF %v3float %2147
       %2149 = OpExtInst %v3float %1 Fma %2148 %402 %287
       %2150 = OpDot %float %2149 %2127
       %2151 = OpConvertFToS %int %2071
       %2152 = OpFSub %v3float %2066 %140
       %2153 = OpCompositeConstruct %v3int %2151 %int_0 %int_0
       %2154 = OpBitcast %v3uint %2153
       %2155 = OpIMul %v3uint %2154 %413
       %2156 = OpIAdd %v3uint %2155 %415
       %2157 = OpCompositeExtract %uint %2156 1
       %2158 = OpCompositeExtract %uint %2156 2
       %2159 = OpIMul %uint %2157 %2158
       %2160 = OpCompositeExtract %uint %2156 0
       %2161 = OpIAdd %uint %2160 %2159
       %2162 = OpIMul %uint %2158 %2161
       %2163 = OpIAdd %uint %2157 %2162
       %2164 = OpIMul %uint %2161 %2163
       %2165 = OpIAdd %uint %2158 %2164
       %2166 = OpIMul %uint %2163 %2165
       %2167 = OpIAdd %uint %2161 %2166
       %2168 = OpCompositeInsert %v3uint %2167 %561 0
       %2169 = OpShiftRightLogical %v3uint %2168 %2093
       %2170 = OpCompositeExtract %uint %2169 0
       %2171 = OpCompositeConstruct %v3uint %2170 %2170 %2170
       %2172 = OpBitwiseAnd %v3uint %2171 %398
       %2173 = OpConvertUToF %v3float %2172
       %2174 = OpExtInst %v3float %1 Fma %2173 %402 %287
       %2175 = OpDot %float %2174 %2152
       %2176 = OpConvertFToS %int %2072
       %2177 = OpFSub %v3float %2066 %299
       %2178 = OpCompositeConstruct %v3int %2176 %int_0 %int_0
       %2179 = OpBitcast %v3uint %2178
       %2180 = OpIMul %v3uint %2179 %413
       %2181 = OpIAdd %v3uint %2180 %415
       %2182 = OpCompositeExtract %uint %2181 1
       %2183 = OpCompositeExtract %uint %2181 2
       %2184 = OpIMul %uint %2182 %2183
       %2185 = OpCompositeExtract %uint %2181 0
       %2186 = OpIAdd %uint %2185 %2184
       %2187 = OpIMul %uint %2183 %2186
       %2188 = OpIAdd %uint %2182 %2187
       %2189 = OpIMul %uint %2186 %2188
       %2190 = OpIAdd %uint %2183 %2189
       %2191 = OpIMul %uint %2188 %2190
       %2192 = OpIAdd %uint %2186 %2191
       %2193 = OpCompositeInsert %v3uint %2192 %561 0
       %2194 = OpShiftRightLogical %v3uint %2193 %2093
       %2195 = OpCompositeExtract %uint %2194 0
       %2196 = OpCompositeConstruct %v3uint %2195 %2195 %2195
       %2197 = OpBitwiseAnd %v3uint %2196 %398
       %2198 = OpConvertUToF %v3float %2197
       %2199 = OpExtInst %v3float %1 Fma %2198 %402 %287
       %2200 = OpDot %float %2199 %2177
       %2201 = OpConvertFToS %int %2073
       %2202 = OpFSub %v3float %2066 %146
       %2203 = OpCompositeConstruct %v3int %2201 %int_0 %int_0
       %2204 = OpBitcast %v3uint %2203
       %2205 = OpIMul %v3uint %2204 %413
       %2206 = OpIAdd %v3uint %2205 %415
       %2207 = OpCompositeExtract %uint %2206 1
       %2208 = OpCompositeExtract %uint %2206 2
       %2209 = OpIMul %uint %2207 %2208
       %2210 = OpCompositeExtract %uint %2206 0
       %2211 = OpIAdd %uint %2210 %2209
       %2212 = OpIMul %uint %2208 %2211
       %2213 = OpIAdd %uint %2207 %2212
       %2214 = OpIMul %uint %2211 %2213
       %2215 = OpIAdd %uint %2208 %2214
       %2216 = OpIMul %uint %2213 %2215
       %2217 = OpIAdd %uint %2211 %2216
       %2218 = OpCompositeInsert %v3uint %2217 %561 0
       %2219 = OpShiftRightLogical %v3uint %2218 %2093
       %2220 = OpCompositeExtract %uint %2219 0
       %2221 = OpCompositeConstruct %v3uint %2220 %2220 %2220
       %2222 = OpBitwiseAnd %v3uint %2221 %398
       %2223 = OpConvertUToF %v3float %2222
       %2224 = OpExtInst %v3float %1 Fma %2223 %402 %287
       %2225 = OpDot %float %2224 %2202
       %2226 = OpConvertFToS %int %2074
       %2227 = OpFSub %v3float %2066 %141
       %2228 = OpCompositeConstruct %v3int %2226 %int_0 %int_0
       %2229 = OpBitcast %v3uint %2228
       %2230 = OpIMul %v3uint %2229 %413
       %2231 = OpIAdd %v3uint %2230 %415
       %2232 = OpCompositeExtract %uint %2231 1
       %2233 = OpCompositeExtract %uint %2231 2
       %2234 = OpIMul %uint %2232 %2233
       %2235 = OpCompositeExtract %uint %2231 0
       %2236 = OpIAdd %uint %2235 %2234
       %2237 = OpIMul %uint %2233 %2236
       %2238 = OpIAdd %uint %2232 %2237
       %2239 = OpIMul %uint %2236 %2238
       %2240 = OpIAdd %uint %2233 %2239
       %2241 = OpIMul %uint %2238 %2240
       %2242 = OpIAdd %uint %2236 %2241
       %2243 = OpCompositeInsert %v3uint %2242 %561 0
       %2244 = OpShiftRightLogical %v3uint %2243 %2093
       %2245 = OpCompositeExtract %uint %2244 0
       %2246 = OpCompositeConstruct %v3uint %2245 %2245 %2245
       %2247 = OpBitwiseAnd %v3uint %2246 %398
       %2248 = OpConvertUToF %v3float %2247
       %2249 = OpExtInst %v3float %1 Fma %2248 %402 %287
       %2250 = OpDot %float %2249 %2227
       %2251 = OpConvertFToS %int %2075
       %2252 = OpFSub %v3float %2066 %134
       %2253 = OpCompositeConstruct %v3int %2251 %int_0 %int_0
       %2254 = OpBitcast %v3uint %2253
       %2255 = OpIMul %v3uint %2254 %413
       %2256 = OpIAdd %v3uint %2255 %415
       %2257 = OpCompositeExtract %uint %2256 1
       %2258 = OpCompositeExtract %uint %2256 2
       %2259 = OpIMul %uint %2257 %2258
       %2260 = OpCompositeExtract %uint %2256 0
       %2261 = OpIAdd %uint %2260 %2259
       %2262 = OpIMul %uint %2258 %2261
       %2263 = OpIAdd %uint %2257 %2262
       %2264 = OpIMul %uint %2261 %2263
       %2265 = OpIAdd %uint %2258 %2264
       %2266 = OpIMul %uint %2263 %2265
       %2267 = OpIAdd %uint %2261 %2266
       %2268 = OpCompositeInsert %v3uint %2267 %561 0
       %2269 = OpShiftRightLogical %v3uint %2268 %2093
       %2270 = OpCompositeExtract %uint %2269 0
       %2271 = OpCompositeConstruct %v3uint %2270 %2270 %2270
       %2272 = OpBitwiseAnd %v3uint %2271 %398
       %2273 = OpConvertUToF %v3float %2272
       %2274 = OpExtInst %v3float %1 Fma %2273 %402 %287
       %2275 = OpDot %float %2274 %2252
       %2276 = OpCompositeExtract %float %2066 0
       %2277 = OpCompositeExtract %float %2066 1
       %2278 = OpCompositeExtract %float %2066 2
       %2279 = OpCompositeConstruct %v4float %2276 %2277 %2278 %float_0
       %2280 = OpFMul %v4float %2279 %2279
       %2281 = OpFMul %v4float %2280 %2279
       %2282 = OpVectorTimesScalar %v4float %2279 %float_6
       %2283 = OpFSub %v4float %2282 %393
       %2284 = OpExtInst %v4float %1 Fma %2279 %2283 %394
       %2285 = OpFMul %v4float %2281 %2284
       %2286 = OpCompositeExtract %float %2285 0
       %2287 = OpExtInst %float %1 FMix %2100 %2125 %2286
       %2288 = OpExtInst %float %1 FMix %2150 %2175 %2286
       %2289 = OpCompositeExtract %float %2285 1
       %2290 = OpExtInst %float %1 FMix %2287 %2288 %2289
       %2291 = OpExtInst %float %1 FMix %2200 %2225 %2286
       %2292 = OpExtInst %float %1 FMix %2250 %2275 %2286
       %2293 = OpExtInst %float %1 FMix %2291 %2292 %2289
       %2294 = OpCompositeExtract %float %2285 2
       %2295 = OpExtInst %float %1 FMix %2290 %2293 %2294
       %2296 = OpExtInst %float %1 FAbs %2295
       %2061 = OpExtInst %float %1 Fma %2296 %2058 %2060
       %2056 = OpVectorTimesScalar %v3float %2055 %float_2
       %2059 = OpFMul %float %2058 %float_0_5
       %2063 = OpIAdd %uint %2062 %uint_1
               OpBranch %2054
       %2065 = OpLabel
       %2297 = OpExtInst %float %1 FMix %float_0 %float_1 %2060
       %2298 = OpFMul %v3float %2032 %520
       %2299 = OpCompositeExtract %float %2298 0
       %2300 = OpCompositeExtract %float %2298 1
       %2301 = OpCompositeExtract %float %2298 2
       %2302 = OpCompositeConstruct %v2float %2301 %2301
       %2303 = OpFAdd %v2float %2040 %2302
       %2304 = OpCompositeExtract %float %2303 0
       %2305 = OpCompositeConstruct %v3float %2299 %2300 %2304
       %2306 = OpVectorTimesScalar %v3float %2305 %float_4_76837158en07
       %2307 = OpFAdd %v3float %2306 %143
       %2308 = OpExtInst %v3float %1 Fma %2031 %520 %2307
       %2309 = OpExtInst %v3float %1 Floor %2308
       %2310 = OpFNegate %v3float %2309
       %2311 = OpExtInst %v3float %1 Fma %2031 %520 %2310
       %2312 = OpVectorTimesScalar %v3float %2311 %float_2097152
       %2313 = OpFAdd %v3float %2312 %2305
       %2314 = OpVectorTimesScalar %v3float %2313 %float_1
               OpBranch %2315
       %2315 = OpLabel
       %2316 = OpPhi %v3float %2314 %2065 %2317 %2318
       %2319 = OpPhi %float %float_1 %2065 %2320 %2318
       %2321 = OpPhi %float %float_0 %2065 %2322 %2318
       %2323 = OpPhi %uint %uint_0 %2065 %2324 %2318
       %2325 = OpULessThan %bool %2323 %uint_10
               OpLoopMerge %2326 %2318 DontUnroll
               OpBranchConditional %2325 %2318 %2326
       %2318 = OpLabel
       %2327 = OpExtInst %v3float %1 Fract %2316
       %2328 = OpExtInst %v3float %1 Floor %2316
       %2329 = OpDot %float %2328 %397
       %2330 = OpFAdd %float %2329 %float_19
       %2331 = OpFAdd %float %2329 %float_47
       %2332 = OpFAdd %float %2329 %float_66
       %2333 = OpFAdd %float %2329 %float_101
       %2334 = OpFAdd %float %2329 %float_120
       %2335 = OpFAdd %float %2329 %float_148
       %2336 = OpFAdd %float %2329 %float_167
       %2337 = OpConvertFToS %int %2329
       %2338 = OpCompositeConstruct %v3int %2337 %int_0 %int_0
       %2339 = OpBitcast %v3uint %2338
       %2340 = OpIMul %v3uint %2339 %413
       %2341 = OpIAdd %v3uint %2340 %415
       %2342 = OpCompositeExtract %uint %2341 1
       %2343 = OpCompositeExtract %uint %2341 2
       %2344 = OpIMul %uint %2342 %2343
       %2345 = OpCompositeExtract %uint %2341 0
       %2346 = OpIAdd %uint %2345 %2344
       %2347 = OpIMul %uint %2343 %2346
       %2348 = OpIAdd %uint %2342 %2347
       %2349 = OpIMul %uint %2346 %2348
       %2350 = OpIAdd %uint %2343 %2349
       %2351 = OpIMul %uint %2348 %2350
       %2352 = OpIAdd %uint %2346 %2351
       %2353 = OpCompositeInsert %v3uint %2352 %561 0
       %2354 = OpBitwiseAnd %v3uint %416 %417
       %2355 = OpShiftRightLogical %v3uint %2353 %2354
       %2356 = OpCompositeExtract %uint %2355 0
       %2357 = OpCompositeConstruct %v3uint %2356 %2356 %2356
       %2358 = OpBitwiseAnd %v3uint %2357 %398
       %2359 = OpConvertUToF %v3float %2358
       %2360 = OpExtInst %v3float %1 Fma %2359 %402 %287
       %2361 = OpDot %float %2360 %2327
       %2362 = OpConvertFToS %int %2330
       %2363 = OpFSub %v3float %2327 %362
       %2364 = OpCompositeConstruct %v3int %2362 %int_0 %int_0
       %2365 = OpBitcast %v3uint %2364
       %2366 = OpIMul %v3uint %2365 %413
       %2367 = OpIAdd %v3uint %2366 %415
       %2368 = OpCompositeExtract %uint %2367 1
       %2369 = OpCompositeExtract %uint %2367 2
       %2370 = OpIMul %uint %2368 %2369
       %2371 = OpCompositeExtract %uint %2367 0
       %2372 = OpIAdd %uint %2371 %2370
       %2373 = OpIMul %uint %2369 %2372
       %2374 = OpIAdd %uint %2368 %2373
       %2375 = OpIMul %uint %2372 %2374
       %2376 = OpIAdd %uint %2369 %2375
       %2377 = OpIMul %uint %2374 %2376
       %2378 = OpIAdd %uint %2372 %2377
       %2379 = OpCompositeInsert %v3uint %2378 %561 0
       %2380 = OpShiftRightLogical %v3uint %2379 %2354
       %2381 = OpCompositeExtract %uint %2380 0
       %2382 = OpCompositeConstruct %v3uint %2381 %2381 %2381
       %2383 = OpBitwiseAnd %v3uint %2382 %398
       %2384 = OpConvertUToF %v3float %2383
       %2385 = OpExtInst %v3float %1 Fma %2384 %402 %287
       %2386 = OpDot %float %2385 %2363
       %2387 = OpConvertFToS %int %2331
       %2388 = OpFSub %v3float %2327 %363
       %2389 = OpCompositeConstruct %v3int %2387 %int_0 %int_0
       %2390 = OpBitcast %v3uint %2389
       %2391 = OpIMul %v3uint %2390 %413
       %2392 = OpIAdd %v3uint %2391 %415
       %2393 = OpCompositeExtract %uint %2392 1
       %2394 = OpCompositeExtract %uint %2392 2
       %2395 = OpIMul %uint %2393 %2394
       %2396 = OpCompositeExtract %uint %2392 0
       %2397 = OpIAdd %uint %2396 %2395
       %2398 = OpIMul %uint %2394 %2397
       %2399 = OpIAdd %uint %2393 %2398
       %2400 = OpIMul %uint %2397 %2399
       %2401 = OpIAdd %uint %2394 %2400
       %2402 = OpIMul %uint %2399 %2401
       %2403 = OpIAdd %uint %2397 %2402
       %2404 = OpCompositeInsert %v3uint %2403 %561 0
       %2405 = OpShiftRightLogical %v3uint %2404 %2354
       %2406 = OpCompositeExtract %uint %2405 0
       %2407 = OpCompositeConstruct %v3uint %2406 %2406 %2406
       %2408 = OpBitwiseAnd %v3uint %2407 %398
       %2409 = OpConvertUToF %v3float %2408
       %2410 = OpExtInst %v3float %1 Fma %2409 %402 %287
       %2411 = OpDot %float %2410 %2388
       %2412 = OpConvertFToS %int %2332
       %2413 = OpFSub %v3float %2327 %140
       %2414 = OpCompositeConstruct %v3int %2412 %int_0 %int_0
       %2415 = OpBitcast %v3uint %2414
       %2416 = OpIMul %v3uint %2415 %413
       %2417 = OpIAdd %v3uint %2416 %415
       %2418 = OpCompositeExtract %uint %2417 1
       %2419 = OpCompositeExtract %uint %2417 2
       %2420 = OpIMul %uint %2418 %2419
       %2421 = OpCompositeExtract %uint %2417 0
       %2422 = OpIAdd %uint %2421 %2420
       %2423 = OpIMul %uint %2419 %2422
       %2424 = OpIAdd %uint %2418 %2423
       %2425 = OpIMul %uint %2422 %2424
       %2426 = OpIAdd %uint %2419 %2425
       %2427 = OpIMul %uint %2424 %2426
       %2428 = OpIAdd %uint %2422 %2427
       %2429 = OpCompositeInsert %v3uint %2428 %561 0
       %2430 = OpShiftRightLogical %v3uint %2429 %2354
       %2431 = OpCompositeExtract %uint %2430 0
       %2432 = OpCompositeConstruct %v3uint %2431 %2431 %2431
       %2433 = OpBitwiseAnd %v3uint %2432 %398
       %2434 = OpConvertUToF %v3float %2433
       %2435 = OpExtInst %v3float %1 Fma %2434 %402 %287
       %2436 = OpDot %float %2435 %2413
       %2437 = OpConvertFToS %int %2333
       %2438 = OpFSub %v3float %2327 %299
       %2439 = OpCompositeConstruct %v3int %2437 %int_0 %int_0
       %2440 = OpBitcast %v3uint %2439
       %2441 = OpIMul %v3uint %2440 %413
       %2442 = OpIAdd %v3uint %2441 %415
       %2443 = OpCompositeExtract %uint %2442 1
       %2444 = OpCompositeExtract %uint %2442 2
       %2445 = OpIMul %uint %2443 %2444
       %2446 = OpCompositeExtract %uint %2442 0
       %2447 = OpIAdd %uint %2446 %2445
       %2448 = OpIMul %uint %2444 %2447
       %2449 = OpIAdd %uint %2443 %2448
       %2450 = OpIMul %uint %2447 %2449
       %2451 = OpIAdd %uint %2444 %2450
       %2452 = OpIMul %uint %2449 %2451
       %2453 = OpIAdd %uint %2447 %2452
       %2454 = OpCompositeInsert %v3uint %2453 %561 0
       %2455 = OpShiftRightLogical %v3uint %2454 %2354
       %2456 = OpCompositeExtract %uint %2455 0
       %2457 = OpCompositeConstruct %v3uint %2456 %2456 %2456
       %2458 = OpBitwiseAnd %v3uint %2457 %398
       %2459 = OpConvertUToF %v3float %2458
       %2460 = OpExtInst %v3float %1 Fma %2459 %402 %287
       %2461 = OpDot %float %2460 %2438
       %2462 = OpConvertFToS %int %2334
       %2463 = OpFSub %v3float %2327 %146
       %2464 = OpCompositeConstruct %v3int %2462 %int_0 %int_0
       %2465 = OpBitcast %v3uint %2464
       %2466 = OpIMul %v3uint %2465 %413
       %2467 = OpIAdd %v3uint %2466 %415
       %2468 = OpCompositeExtract %uint %2467 1
       %2469 = OpCompositeExtract %uint %2467 2
       %2470 = OpIMul %uint %2468 %2469
       %2471 = OpCompositeExtract %uint %2467 0
       %2472 = OpIAdd %uint %2471 %2470
       %2473 = OpIMul %uint %2469 %2472
       %2474 = OpIAdd %uint %2468 %2473
       %2475 = OpIMul %uint %2472 %2474
       %2476 = OpIAdd %uint %2469 %2475
       %2477 = OpIMul %uint %2474 %2476
       %2478 = OpIAdd %uint %2472 %2477
       %2479 = OpCompositeInsert %v3uint %2478 %561 0
       %2480 = OpShiftRightLogical %v3uint %2479 %2354
       %2481 = OpCompositeExtract %uint %2480 0
       %2482 = OpCompositeConstruct %v3uint %2481 %2481 %2481
       %2483 = OpBitwiseAnd %v3uint %2482 %398
       %2484 = OpConvertUToF %v3float %2483
       %2485 = OpExtInst %v3float %1 Fma %2484 %402 %287
       %2486 = OpDot %float %2485 %2463
       %2487 = OpConvertFToS %int %2335
       %2488 = OpFSub %v3float %2327 %141
       %2489 = OpCompositeConstruct %v3int %2487 %int_0 %int_0
       %2490 = OpBitcast %v3uint %2489
       %2491 = OpIMul %v3uint %2490 %413
       %2492 = OpIAdd %v3uint %2491 %415
       %2493 = OpCompositeExtract %uint %2492 1
       %2494 = OpCompositeExtract %uint %2492 2
       %2495 = OpIMul %uint %2493 %2494
       %2496 = OpCompositeExtract %uint %2492 0
       %2497 = OpIAdd %uint %2496 %2495
       %2498 = OpIMul %uint %2494 %2497
       %2499 = OpIAdd %uint %2493 %2498
       %2500 = OpIMul %uint %2497 %2499
       %2501 = OpIAdd %uint %2494 %2500
       %2502 = OpIMul %uint %2499 %2501
       %2503 = OpIAdd %uint %2497 %2502
       %2504 = OpCompositeInsert %v3uint %2503 %561 0
       %2505 = OpShiftRightLogical %v3uint %2504 %2354
       %2506 = OpCompositeExtract %uint %2505 0
       %2507 = OpCompositeConstruct %v3uint %2506 %2506 %2506
       %2508 = OpBitwiseAnd %v3uint %2507 %398
       %2509 = OpConvertUToF %v3float %2508
       %2510 = OpExtInst %v3float %1 Fma %2509 %402 %287
       %2511 = OpDot %float %2510 %2488
       %2512 = OpConvertFToS %int %2336
       %2513 = OpFSub %v3float %2327 %134
       %2514 = OpCompositeConstruct %v3int %2512 %int_0 %int_0
       %2515 = OpBitcast %v3uint %2514
       %2516 = OpIMul %v3uint %2515 %413
       %2517 = OpIAdd %v3uint %2516 %415
       %2518 = OpCompositeExtract %uint %2517 1
       %2519 = OpCompositeExtract %uint %2517 2
       %2520 = OpIMul %uint %2518 %2519
       %2521 = OpCompositeExtract %uint %2517 0
       %2522 = OpIAdd %uint %2521 %2520
       %2523 = OpIMul %uint %2519 %2522
       %2524 = OpIAdd %uint %2518 %2523
       %2525 = OpIMul %uint %2522 %2524
       %2526 = OpIAdd %uint %2519 %2525
       %2527 = OpIMul %uint %2524 %2526
       %2528 = OpIAdd %uint %2522 %2527
       %2529 = OpCompositeInsert %v3uint %2528 %561 0
       %2530 = OpShiftRightLogical %v3uint %2529 %2354
       %2531 = OpCompositeExtract %uint %2530 0
       %2532 = OpCompositeConstruct %v3uint %2531 %2531 %2531
       %2533 = OpBitwiseAnd %v3uint %2532 %398
       %2534 = OpConvertUToF %v3float %2533
       %2535 = OpExtInst %v3float %1 Fma %2534 %402 %287
       %2536 = OpDot %float %2535 %2513
       %2537 = OpCompositeExtract %float %2327 0
       %2538 = OpCompositeExtract %float %2327 1
       %2539 = OpCompositeExtract %float %2327 2
       %2540 = OpCompositeConstruct %v4float %2537 %2538 %2539 %float_0
       %2541 = OpFMul %v4float %2540 %2540
       %2542 = OpFMul %v4float %2541 %2540
       %2543 = OpVectorTimesScalar %v4float %2540 %float_6
       %2544 = OpFSub %v4float %2543 %393
       %2545 = OpExtInst %v4float %1 Fma %2540 %2544 %394
       %2546 = OpFMul %v4float %2542 %2545
       %2547 = OpCompositeExtract %float %2546 0
       %2548 = OpExtInst %float %1 FMix %2361 %2386 %2547
       %2549 = OpExtInst %float %1 FMix %2411 %2436 %2547
       %2550 = OpCompositeExtract %float %2546 1
       %2551 = OpExtInst %float %1 FMix %2548 %2549 %2550
       %2552 = OpExtInst %float %1 FMix %2461 %2486 %2547
       %2553 = OpExtInst %float %1 FMix %2511 %2536 %2547
       %2554 = OpExtInst %float %1 FMix %2552 %2553 %2550
       %2555 = OpCompositeExtract %float %2546 2
       %2556 = OpExtInst %float %1 FMix %2551 %2554 %2555
       %2557 = OpExtInst %float %1 FAbs %2556
       %2322 = OpExtInst %float %1 Fma %2557 %2319 %2321
       %2317 = OpVectorTimesScalar %v3float %2316 %float_2
       %2320 = OpFMul %float %2319 %float_0_5
       %2324 = OpIAdd %uint %2323 %uint_1
               OpBranch %2315
       %2326 = OpLabel
       %2558 = OpExtInst %float %1 FMix %float_0 %float_1 %2321
       %2559 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_13 %int_1
       %2560 = OpLoad %float %2559
       %2561 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_13 %int_0
       %2562 = OpLoad %float %2561
       %2563 = OpExtInst %float %1 Fma %2558 %2560 %2562
       %2564 = OpFMul %float %2297 %2563
       %2565 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_11 %int_3
       %2566 = OpLoad %float %2565
       %2567 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_13 %int_2
       %2568 = OpLoad %float %2567
       %2569 = OpExtInst %float %1 FMix %2566 %2568 %2564
       %2570 = OpExtInst %float %1 Sin %2022
       %2571 = OpFMul %float %2570 %2569
       %2572 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_15
       %2573 = OpLoad %v4float %2572
       %2574 = OpVectorShuffle %v3float %2573 %2573 0 1 2
       %2575 = OpFAdd %v3float %1698 %2574
       %2576 = OpExtInst %v3float %1 NMax %2575 %287
       %2577 = OpExtInst %v3float %1 NMin %2576 %134
       %2578 = OpCompositeExtract %float %2577 0
       %2579 = OpCompositeExtract %float %2577 1
       %2580 = OpCompositeConstruct %v2float %2578 %2579
       %2581 = OpFMul %v2float %1709 %2580
       %2582 = OpFMul %v2float %2580 %1710
       %2583 = OpCompositeExtract %float %2581 0
       %2584 = OpCompositeExtract %float %2582 0
       %2585 = OpCompositeExtract %float %2581 1
       %2586 = OpCompositeExtract %float %2582 1
       %2587 = OpFAdd %float %2583 %2585
       %2588 = OpFAdd %float %2584 %2586
       %2589 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_16 %int_1
       %2590 = OpLoad %float %2589
       %2591 = OpFMul %float %2587 %2590
       %2592 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_0
       %2593 = OpLoad %float %2592
       %2594 = OpFMul %float %2593 %2008
       %2595 = OpExtInst %float %1 Fma %2588 %2590 %2594
       %2596 = OpExtInst %float %1 Floor %2591
       %2597 = OpFNegate %float %2596
       %2598 = OpExtInst %float %1 Fma %2587 %2590 %2597
       %2599 = OpExtInst %float %1 Fma %2598 %float_2097152 %2595
       %2600 = OpExtInst %float %1 Floor %2599
       %2601 = OpFMul %float %2596 %float_n6_28318548
       %2602 = OpExtInst %float %1 Fma %2591 %float_6_28318548 %2601
       %2603 = OpFMul %float %2600 %float_n6_28318548
       %2604 = OpExtInst %float %1 Fma %2595 %float_6_28318548 %2603
       %2605 = OpExtInst %float %1 Fma %2602 %float_2097152 %2604
       %2606 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_17 %int_2
       %2607 = OpLoad %float %2606
       %2608 = OpFMul %float %2569 %2607
       %2609 = OpExtInst %float %1 Sin %2605
       %2610 = OpFMul %float %2609 %2608
       %2611 = OpCompositeConstruct %v3float %560 %560 %2571
       %2612 = OpCompositeConstruct %v3float %560 %560 %2610
       %2613 = OpFAdd %v3float %2611 %2612
       %2614 = OpFSub %v3float %1698 %1701
       %2615 = OpExtInst %v3float %1 NMax %2614 %287
       %2616 = OpExtInst %v3float %1 NMin %2615 %134
       %2617 = OpCompositeExtract %float %2616 0
       %2618 = OpCompositeExtract %float %2616 1
       %2619 = OpCompositeConstruct %v2float %2617 %2618
       %2620 = OpFMul %v2float %1709 %2619
       %2621 = OpFMul %v2float %2619 %1710
       %2622 = OpCompositeExtract %float %2620 0
       %2623 = OpCompositeExtract %float %2621 0
       %2624 = OpCompositeExtract %float %2620 1
       %2625 = OpCompositeExtract %float %2621 1
       %2626 = OpFAdd %float %2622 %2624
       %2627 = OpFAdd %float %2623 %2625
       %2628 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_1
       %2629 = OpLoad %float %2628
       %2630 = OpFMul %float %2626 %2629
       %2631 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_18 %int_3
       %2632 = OpLoad %float %2631
       %2633 = OpFMul %float %2632 %2008
       %2634 = OpExtInst %float %1 Fma %2627 %2629 %2633
       %2635 = OpExtInst %float %1 Floor %2630
       %2636 = OpFNegate %float %2635
       %2637 = OpExtInst %float %1 Fma %2626 %2629 %2636
       %2638 = OpExtInst %float %1 Fma %2637 %float_2097152 %2634
       %2639 = OpExtInst %float %1 Floor %2638
       %2640 = OpFMul %float %2635 %float_n6_28318548
       %2641 = OpExtInst %float %1 Fma %2630 %float_6_28318548 %2640
       %2642 = OpFMul %float %2639 %float_n6_28318548
       %2643 = OpExtInst %float %1 Fma %2634 %float_6_28318548 %2642
       %2644 = OpExtInst %float %1 Fma %2641 %float_2097152 %2643
       %2645 = OpFMul %float %2608 %2607
       %2646 = OpExtInst %float %1 Sin %2644
       %2647 = OpFMul %float %2646 %2645
       %2648 = OpCompositeConstruct %v3float %560 %560 %2647
       %2649 = OpFAdd %v3float %2613 %2648
       %2650 = OpFSub %v3float %1698 %2574
       %2651 = OpExtInst %v3float %1 NMax %2650 %287
       %2652 = OpExtInst %v3float %1 NMin %2651 %134
       %2653 = OpCompositeExtract %float %2652 0
       %2654 = OpCompositeExtract %float %2652 1
       %2655 = OpCompositeConstruct %v2float %2653 %2654
       %2656 = OpFMul %v2float %1709 %2655
       %2657 = OpFMul %v2float %2655 %1710
       %2658 = OpCompositeExtract %float %2656 0
       %2659 = OpCompositeExtract %float %2657 0
       %2660 = OpCompositeExtract %float %2656 1
       %2661 = OpCompositeExtract %float %2657 1
       %2662 = OpFAdd %float %2658 %2660
       %2663 = OpFAdd %float %2659 %2661
       %2664 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_19 %int_2
       %2665 = OpLoad %float %2664
       %2666 = OpFMul %float %2662 %2665
       %2667 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_20 %int_0
       %2668 = OpLoad %float %2667
       %2669 = OpFMul %float %2668 %2008
       %2670 = OpExtInst %float %1 Fma %2663 %2665 %2669
       %2671 = OpExtInst %float %1 Floor %2666
       %2672 = OpFNegate %float %2671
       %2673 = OpExtInst %float %1 Fma %2662 %2665 %2672
       %2674 = OpExtInst %float %1 Fma %2673 %float_2097152 %2670
       %2675 = OpExtInst %float %1 Floor %2674
       %2676 = OpFMul %float %2671 %float_n6_28318548
       %2677 = OpExtInst %float %1 Fma %2666 %float_6_28318548 %2676
       %2678 = OpFMul %float %2675 %float_n6_28318548
       %2679 = OpExtInst %float %1 Fma %2670 %float_6_28318548 %2678
       %2680 = OpExtInst %float %1 Fma %2677 %float_2097152 %2679
       %2681 = OpFMul %float %2645 %2607
       %2682 = OpExtInst %float %1 Sin %2680
       %2683 = OpFMul %float %2682 %2681
       %2684 = OpCompositeConstruct %v3float %560 %560 %2683
       %2685 = OpFAdd %v3float %2649 %2684
       %2686 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_20 %int_3
       %2687 = OpLoad %float %2686
       %2688 = OpFSub %float %2687 %float_n1
       %2689 = OpExtInst %float %1 FAbs %2688
       %2690 = OpFOrdGreaterThan %bool %2689 %float_9_99999975en06
       %2691 = OpFOrdGreaterThanEqual %bool %2687 %float_n1
       %2692 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_21 %int_0
       %2693 = OpLoad %float %2692
       %2694 = OpSelect %float %2691 %2687 %2693
       %2695 = OpSelect %float %2690 %2694 %2687
       %2696 = OpFSub %float %2695 %float_1
       %2697 = OpExtInst %float %1 FAbs %2696
       %2698 = OpFOrdGreaterThan %bool %2697 %float_9_99999975en06
       %2699 = OpFOrdGreaterThanEqual %bool %2695 %float_1
       %2700 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_21 %int_1
       %2701 = OpLoad %float %2700
       %2702 = OpSelect %float %2699 %2701 %2687
       %2703 = OpSelect %float %2698 %2702 %2687
       %2704 = OpExtInst %float %1 FAbs %2703
       %2705 = OpFOrdGreaterThan %bool %2704 %float_9_99999975en06
       %2706 = OpFOrdGreaterThanEqual %bool %2703 %float_0
       %2707 = OpSelect %float %2706 %float_1 %float_n1
       %2708 = OpSelect %float %2705 %2707 %float_1
       %2709 = OpExtInst %float %1 NMax %2708 %float_n1
       %2710 = OpExtInst %float %1 NMin %2709 %float_1
       %2711 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_22 %int_2
       %2712 = OpLoad %float %2711
       %2713 = OpCompositeConstruct %v3float %2710 %2712 %float_0
       %2714 = OpFAdd %v3float %2713 %1701
       %2715 = OpExtInst %v3float %1 NMax %2714 %287
       %2716 = OpExtInst %v3float %1 NMin %2715 %134
       %2717 = OpCompositeExtract %float %2716 0
       %2718 = OpCompositeExtract %float %2716 1
       %2719 = OpCompositeConstruct %v2float %2717 %2718
       %2720 = OpFMul %v2float %1709 %2719
       %2721 = OpFMul %v2float %2719 %1710
       %2722 = OpCompositeExtract %float %2720 0
       %2723 = OpCompositeExtract %float %2721 0
       %2724 = OpCompositeExtract %float %2720 1
       %2725 = OpCompositeExtract %float %2721 1
       %2726 = OpFAdd %float %2722 %2724
       %2727 = OpFAdd %float %2723 %2725
       %2728 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_24 %int_3
       %2729 = OpLoad %float %2728
       %2730 = OpFMul %float %2726 %2729
       %2731 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_25 %int_2
       %2732 = OpLoad %float %2731
       %2733 = OpFMul %float %2732 %2008
       %2734 = OpExtInst %float %1 Fma %2727 %2729 %2733
       %2735 = OpExtInst %float %1 Floor %2730
       %2736 = OpFNegate %float %2735
       %2737 = OpExtInst %float %1 Fma %2726 %2729 %2736
       %2738 = OpExtInst %float %1 Fma %2737 %float_2097152 %2734
       %2739 = OpExtInst %float %1 Floor %2738
       %2740 = OpFMul %float %2735 %float_n6_28318548
       %2741 = OpExtInst %float %1 Fma %2730 %float_6_28318548 %2740
       %2742 = OpFMul %float %2739 %float_n6_28318548
       %2743 = OpExtInst %float %1 Fma %2734 %float_6_28318548 %2742
       %2744 = OpExtInst %float %1 Fma %2741 %float_2097152 %2743
       %2745 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_25 %int_3
       %2746 = OpLoad %float %2745
       %2747 = OpFMul %float %2569 %2746
       %2748 = OpExtInst %float %1 Sin %2744
       %2749 = OpFMul %float %2748 %2747
       %2750 = OpFAdd %v3float %2713 %2574
       %2751 = OpExtInst %v3float %1 NMax %2750 %287
       %2752 = OpExtInst %v3float %1 NMin %2751 %134
       %2753 = OpCompositeExtract %float %2752 0
       %2754 = OpCompositeExtract %float %2752 1
       %2755 = OpCompositeConstruct %v2float %2753 %2754
       %2756 = OpFMul %v2float %1709 %2755
       %2757 = OpFMul %v2float %2755 %1710
       %2758 = OpCompositeExtract %float %2756 0
       %2759 = OpCompositeExtract %float %2757 0
       %2760 = OpCompositeExtract %float %2756 1
       %2761 = OpCompositeExtract %float %2757 1
       %2762 = OpFAdd %float %2758 %2760
       %2763 = OpFAdd %float %2759 %2761
       %2764 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_26 %int_1
       %2765 = OpLoad %float %2764
       %2766 = OpFMul %float %2762 %2765
       %2767 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_26 %int_3
       %2768 = OpLoad %float %2767
       %2769 = OpFMul %float %2768 %2008
       %2770 = OpExtInst %float %1 Fma %2763 %2765 %2769
       %2771 = OpExtInst %float %1 Floor %2766
       %2772 = OpFNegate %float %2771
       %2773 = OpExtInst %float %1 Fma %2762 %2765 %2772
       %2774 = OpExtInst %float %1 Fma %2773 %float_2097152 %2770
       %2775 = OpExtInst %float %1 Floor %2774
       %2776 = OpFMul %float %2771 %float_n6_28318548
       %2777 = OpExtInst %float %1 Fma %2766 %float_6_28318548 %2776
       %2778 = OpFMul %float %2775 %float_n6_28318548
       %2779 = OpExtInst %float %1 Fma %2770 %float_6_28318548 %2778
       %2780 = OpExtInst %float %1 Fma %2777 %float_2097152 %2779
       %2781 = OpFMul %float %2747 %2607
       %2782 = OpExtInst %float %1 Sin %2780
       %2783 = OpFMul %float %2782 %2781
       %2784 = OpCompositeConstruct %v3float %560 %560 %2749
       %2785 = OpCompositeConstruct %v3float %560 %560 %2783
       %2786 = OpFAdd %v3float %2784 %2785
       %2787 = OpFSub %v3float %2713 %1701
       %2788 = OpExtInst %v3float %1 NMax %2787 %287
       %2789 = OpExtInst %v3float %1 NMin %2788 %134
       %2790 = OpCompositeExtract %float %2789 0
       %2791 = OpCompositeExtract %float %2789 1
       %2792 = OpCompositeConstruct %v2float %2790 %2791
       %2793 = OpFMul %v2float %1709 %2792
       %2794 = OpFMul %v2float %2792 %1710
       %2795 = OpCompositeExtract %float %2793 0
       %2796 = OpCompositeExtract %float %2794 0
       %2797 = OpCompositeExtract %float %2793 1
       %2798 = OpCompositeExtract %float %2794 1
       %2799 = OpFAdd %float %2795 %2797
       %2800 = OpFAdd %float %2796 %2798
       %2801 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_27 %int_1
       %2802 = OpLoad %float %2801
       %2803 = OpFMul %float %2799 %2802
       %2804 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_27 %int_3
       %2805 = OpLoad %float %2804
       %2806 = OpFMul %float %2805 %2008
       %2807 = OpExtInst %float %1 Fma %2800 %2802 %2806
       %2808 = OpExtInst %float %1 Floor %2803
       %2809 = OpFNegate %float %2808
       %2810 = OpExtInst %float %1 Fma %2799 %2802 %2809
       %2811 = OpExtInst %float %1 Fma %2810 %float_2097152 %2807
       %2812 = OpExtInst %float %1 Floor %2811
       %2813 = OpFMul %float %2808 %float_n6_28318548
       %2814 = OpExtInst %float %1 Fma %2803 %float_6_28318548 %2813
       %2815 = OpFMul %float %2812 %float_n6_28318548
       %2816 = OpExtInst %float %1 Fma %2807 %float_6_28318548 %2815
       %2817 = OpExtInst %float %1 Fma %2814 %float_2097152 %2816
       %2818 = OpFMul %float %2781 %2607
       %2819 = OpExtInst %float %1 Sin %2817
       %2820 = OpFMul %float %2819 %2818
       %2821 = OpCompositeConstruct %v3float %560 %560 %2820
       %2822 = OpFAdd %v3float %2786 %2821
       %2823 = OpFSub %v3float %2713 %2574
       %2824 = OpExtInst %v3float %1 NMax %2823 %287
       %2825 = OpExtInst %v3float %1 NMin %2824 %134
       %2826 = OpCompositeExtract %float %2825 0
       %2827 = OpCompositeExtract %float %2825 1
       %2828 = OpCompositeConstruct %v2float %2826 %2827
       %2829 = OpFMul %v2float %1709 %2828
       %2830 = OpFMul %v2float %2828 %1710
       %2831 = OpCompositeExtract %float %2829 0
       %2832 = OpCompositeExtract %float %2830 0
       %2833 = OpCompositeExtract %float %2829 1
       %2834 = OpCompositeExtract %float %2830 1
       %2835 = OpFAdd %float %2831 %2833
       %2836 = OpFAdd %float %2832 %2834
       %2837 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_28 %int_1
       %2838 = OpLoad %float %2837
       %2839 = OpFMul %float %2835 %2838
       %2840 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_28 %int_3
       %2841 = OpLoad %float %2840
       %2842 = OpFMul %float %2841 %2008
       %2843 = OpExtInst %float %1 Fma %2836 %2838 %2842
       %2844 = OpExtInst %float %1 Floor %2839
       %2845 = OpFNegate %float %2844
       %2846 = OpExtInst %float %1 Fma %2835 %2838 %2845
       %2847 = OpExtInst %float %1 Fma %2846 %float_2097152 %2843
       %2848 = OpExtInst %float %1 Floor %2847
       %2849 = OpFMul %float %2844 %float_n6_28318548
       %2850 = OpExtInst %float %1 Fma %2839 %float_6_28318548 %2849
       %2851 = OpFMul %float %2848 %float_n6_28318548
       %2852 = OpExtInst %float %1 Fma %2843 %float_6_28318548 %2851
       %2853 = OpExtInst %float %1 Fma %2850 %float_2097152 %2852
       %2854 = OpFMul %float %2818 %2607
       %2855 = OpExtInst %float %1 Sin %2853
       %2856 = OpFMul %float %2855 %2854
       %2857 = OpCompositeConstruct %v3float %560 %560 %2856
       %2858 = OpFAdd %v3float %2822 %2857
       %2859 = OpFAdd %v3float %2685 %2858
       %2860 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_29 %int_0
       %2861 = OpLoad %float %2860
       %2862 = OpFSub %float %2861 %float_n1
       %2863 = OpExtInst %float %1 FAbs %2862
       %2864 = OpFOrdGreaterThan %bool %2863 %float_9_99999975en06
       %2865 = OpFOrdGreaterThanEqual %bool %2861 %float_n1
       %2866 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_29 %int_1
       %2867 = OpLoad %float %2866
       %2868 = OpSelect %float %2865 %2861 %2867
       %2869 = OpSelect %float %2864 %2868 %2861
       %2870 = OpFSub %float %2869 %float_1
       %2871 = OpExtInst %float %1 FAbs %2870
       %2872 = OpFOrdGreaterThan %bool %2871 %float_9_99999975en06
       %2873 = OpFOrdGreaterThanEqual %bool %2869 %float_1
       %2874 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_29 %int_2
       %2875 = OpLoad %float %2874
       %2876 = OpSelect %float %2873 %2875 %2861
       %2877 = OpSelect %float %2872 %2876 %2861
       %2878 = OpExtInst %float %1 FAbs %2877
       %2879 = OpFOrdGreaterThan %bool %2878 %float_9_99999975en06
       %2880 = OpFOrdGreaterThanEqual %bool %2877 %float_0
       %2881 = OpSelect %float %2880 %float_1 %float_n1
       %2882 = OpSelect %float %2879 %2881 %float_1
       %2883 = OpExtInst %float %1 NMax %2882 %float_n1
       %2884 = OpExtInst %float %1 NMin %2883 %float_1
       %2885 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_30 %int_3
       %2886 = OpLoad %float %2885
       %2887 = OpCompositeConstruct %v3float %2884 %2886 %float_0
       %2888 = OpFAdd %v3float %2887 %1701
       %2889 = OpExtInst %v3float %1 NMax %2888 %287
       %2890 = OpExtInst %v3float %1 NMin %2889 %134
       %2891 = OpCompositeExtract %float %2890 0
       %2892 = OpCompositeExtract %float %2890 1
       %2893 = OpCompositeConstruct %v2float %2891 %2892
       %2894 = OpFMul %v2float %1709 %2893
       %2895 = OpFMul %v2float %2893 %1710
       %2896 = OpCompositeExtract %float %2894 0
       %2897 = OpCompositeExtract %float %2895 0
       %2898 = OpCompositeExtract %float %2894 1
       %2899 = OpCompositeExtract %float %2895 1
       %2900 = OpFAdd %float %2896 %2898
       %2901 = OpFAdd %float %2897 %2899
       %2902 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_32 %int_2
       %2903 = OpLoad %float %2902
       %2904 = OpFMul %float %2900 %2903
       %2905 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_32 %int_3
       %2906 = OpLoad %float %2905
       %2907 = OpFMul %float %2906 %2008
       %2908 = OpExtInst %float %1 Fma %2901 %2903 %2907
       %2909 = OpExtInst %float %1 Floor %2904
       %2910 = OpFNegate %float %2909
       %2911 = OpExtInst %float %1 Fma %2900 %2903 %2910
       %2912 = OpExtInst %float %1 Fma %2911 %float_2097152 %2908
       %2913 = OpExtInst %float %1 Floor %2912
       %2914 = OpFMul %float %2909 %float_n6_28318548
       %2915 = OpExtInst %float %1 Fma %2904 %float_6_28318548 %2914
       %2916 = OpFMul %float %2913 %float_n6_28318548
       %2917 = OpExtInst %float %1 Fma %2908 %float_6_28318548 %2916
       %2918 = OpExtInst %float %1 Fma %2915 %float_2097152 %2917
       %2919 = OpExtInst %float %1 Sin %2918
       %2920 = OpFMul %float %2919 %2747
       %2921 = OpFAdd %v3float %2887 %2574
       %2922 = OpExtInst %v3float %1 NMax %2921 %287
       %2923 = OpExtInst %v3float %1 NMin %2922 %134
       %2924 = OpCompositeExtract %float %2923 0
       %2925 = OpCompositeExtract %float %2923 1
       %2926 = OpCompositeConstruct %v2float %2924 %2925
       %2927 = OpFMul %v2float %1709 %2926
       %2928 = OpFMul %v2float %2926 %1710
       %2929 = OpCompositeExtract %float %2927 0
       %2930 = OpCompositeExtract %float %2928 0
       %2931 = OpCompositeExtract %float %2927 1
       %2932 = OpCompositeExtract %float %2928 1
       %2933 = OpFAdd %float %2929 %2931
       %2934 = OpFAdd %float %2930 %2932
       %2935 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_33 %int_1
       %2936 = OpLoad %float %2935
       %2937 = OpFMul %float %2933 %2936
       %2938 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_33 %int_2
       %2939 = OpLoad %float %2938
       %2940 = OpFMul %float %2939 %2008
       %2941 = OpExtInst %float %1 Fma %2934 %2936 %2940
       %2942 = OpExtInst %float %1 Floor %2937
       %2943 = OpFNegate %float %2942
       %2944 = OpExtInst %float %1 Fma %2933 %2936 %2943
       %2945 = OpExtInst %float %1 Fma %2944 %float_2097152 %2941
       %2946 = OpExtInst %float %1 Floor %2945
       %2947 = OpFMul %float %2942 %float_n6_28318548
       %2948 = OpExtInst %float %1 Fma %2937 %float_6_28318548 %2947
       %2949 = OpFMul %float %2946 %float_n6_28318548
       %2950 = OpExtInst %float %1 Fma %2941 %float_6_28318548 %2949
       %2951 = OpExtInst %float %1 Fma %2948 %float_2097152 %2950
       %2952 = OpExtInst %float %1 Sin %2951
       %2953 = OpFMul %float %2952 %2781
       %2954 = OpCompositeConstruct %v3float %560 %560 %2920
       %2955 = OpCompositeConstruct %v3float %560 %560 %2953
       %2956 = OpFAdd %v3float %2954 %2955
       %2957 = OpFSub %v3float %2887 %1701
       %2958 = OpExtInst %v3float %1 NMax %2957 %287
       %2959 = OpExtInst %v3float %1 NMin %2958 %134
       %2960 = OpCompositeExtract %float %2959 0
       %2961 = OpCompositeExtract %float %2959 1
       %2962 = OpCompositeConstruct %v2float %2960 %2961
       %2963 = OpFMul %v2float %1709 %2962
       %2964 = OpFMul %v2float %2962 %1710
       %2965 = OpCompositeExtract %float %2963 0
       %2966 = OpCompositeExtract %float %2964 0
       %2967 = OpCompositeExtract %float %2963 1
       %2968 = OpCompositeExtract %float %2964 1
       %2969 = OpFAdd %float %2965 %2967
       %2970 = OpFAdd %float %2966 %2968
       %2971 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_0
       %2972 = OpLoad %float %2971
       %2973 = OpFMul %float %2969 %2972
       %2974 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_1
       %2975 = OpLoad %float %2974
       %2976 = OpFMul %float %2975 %2008
       %2977 = OpExtInst %float %1 Fma %2970 %2972 %2976
       %2978 = OpExtInst %float %1 Floor %2973
       %2979 = OpFNegate %float %2978
       %2980 = OpExtInst %float %1 Fma %2969 %2972 %2979
       %2981 = OpExtInst %float %1 Fma %2980 %float_2097152 %2977
       %2982 = OpExtInst %float %1 Floor %2981
       %2983 = OpFMul %float %2978 %float_n6_28318548
       %2984 = OpExtInst %float %1 Fma %2973 %float_6_28318548 %2983
       %2985 = OpFMul %float %2982 %float_n6_28318548
       %2986 = OpExtInst %float %1 Fma %2977 %float_6_28318548 %2985
       %2987 = OpExtInst %float %1 Fma %2984 %float_2097152 %2986
       %2988 = OpExtInst %float %1 Sin %2987
       %2989 = OpFMul %float %2988 %2818
       %2990 = OpCompositeConstruct %v3float %560 %560 %2989
       %2991 = OpFAdd %v3float %2956 %2990
       %2992 = OpFSub %v3float %2887 %2574
       %2993 = OpExtInst %v3float %1 NMax %2992 %287
       %2994 = OpExtInst %v3float %1 NMin %2993 %134
       %2995 = OpCompositeExtract %float %2994 0
       %2996 = OpCompositeExtract %float %2994 1
       %2997 = OpCompositeConstruct %v2float %2995 %2996
       %2998 = OpFMul %v2float %1709 %2997
       %2999 = OpFMul %v2float %2997 %1710
       %3000 = OpCompositeExtract %float %2998 0
       %3001 = OpCompositeExtract %float %2999 0
       %3002 = OpCompositeExtract %float %2998 1
       %3003 = OpCompositeExtract %float %2999 1
       %3004 = OpFAdd %float %3000 %3002
       %3005 = OpFAdd %float %3001 %3003
       %3006 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_34 %int_3
       %3007 = OpLoad %float %3006
       %3008 = OpFMul %float %3004 %3007
       %3009 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_0
       %3010 = OpLoad %float %3009
       %3011 = OpFMul %float %3010 %2008
       %3012 = OpExtInst %float %1 Fma %3005 %3007 %3011
       %3013 = OpExtInst %float %1 Floor %3008
       %3014 = OpFNegate %float %3013
       %3015 = OpExtInst %float %1 Fma %3004 %3007 %3014
       %3016 = OpExtInst %float %1 Fma %3015 %float_2097152 %3012
       %3017 = OpExtInst %float %1 Floor %3016
       %3018 = OpFMul %float %3013 %float_n6_28318548
       %3019 = OpExtInst %float %1 Fma %3008 %float_6_28318548 %3018
       %3020 = OpFMul %float %3017 %float_n6_28318548
       %3021 = OpExtInst %float %1 Fma %3012 %float_6_28318548 %3020
       %3022 = OpExtInst %float %1 Fma %3019 %float_2097152 %3021
       %3023 = OpExtInst %float %1 Sin %3022
       %3024 = OpFMul %float %3023 %2854
       %3025 = OpCompositeConstruct %v3float %560 %560 %3024
       %3026 = OpFAdd %v3float %2991 %3025
       %3027 = OpFAdd %v3float %2859 %3026
       %3028 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_1
       %3029 = OpLoad %float %3028
       %3030 = OpFSub %float %3029 %float_n1
       %3031 = OpExtInst %float %1 FAbs %3030
       %3032 = OpFOrdGreaterThan %bool %3031 %float_9_99999975en06
       %3033 = OpFOrdGreaterThanEqual %bool %3029 %float_n1
       %3034 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_2
       %3035 = OpLoad %float %3034
       %3036 = OpSelect %float %3033 %3029 %3035
       %3037 = OpSelect %float %3032 %3036 %3029
       %3038 = OpFSub %float %3037 %float_1
       %3039 = OpExtInst %float %1 FAbs %3038
       %3040 = OpFOrdGreaterThan %bool %3039 %float_9_99999975en06
       %3041 = OpFOrdGreaterThanEqual %bool %3037 %float_1
       %3042 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_35 %int_3
       %3043 = OpLoad %float %3042
       %3044 = OpSelect %float %3041 %3043 %3029
       %3045 = OpSelect %float %3040 %3044 %3029
       %3046 = OpExtInst %float %1 FAbs %3045
       %3047 = OpFOrdGreaterThan %bool %3046 %float_9_99999975en06
       %3048 = OpFOrdGreaterThanEqual %bool %3045 %float_0
       %3049 = OpSelect %float %3048 %float_1 %float_n1
       %3050 = OpSelect %float %3047 %3049 %float_1
       %3051 = OpExtInst %float %1 NMax %3050 %float_n1
       %3052 = OpExtInst %float %1 NMin %3051 %float_1
       %3053 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_37 %int_0
       %3054 = OpLoad %float %3053
       %3055 = OpCompositeConstruct %v3float %3052 %3054 %float_0
       %3056 = OpFAdd %v3float %3055 %1701
       %3057 = OpExtInst %v3float %1 NMax %3056 %287
       %3058 = OpExtInst %v3float %1 NMin %3057 %134
       %3059 = OpCompositeExtract %float %3058 0
       %3060 = OpCompositeExtract %float %3058 1
       %3061 = OpCompositeConstruct %v2float %3059 %3060
       %3062 = OpFMul %v2float %1709 %3061
       %3063 = OpFMul %v2float %3061 %1710
       %3064 = OpCompositeExtract %float %3062 0
       %3065 = OpCompositeExtract %float %3063 0
       %3066 = OpCompositeExtract %float %3062 1
       %3067 = OpCompositeExtract %float %3063 1
       %3068 = OpFAdd %float %3064 %3066
       %3069 = OpFAdd %float %3065 %3067
       %3070 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_38 %int_3
       %3071 = OpLoad %float %3070
       %3072 = OpFMul %float %3068 %3071
       %3073 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_0
       %3074 = OpLoad %float %3073
       %3075 = OpFMul %float %3074 %2008
       %3076 = OpExtInst %float %1 Fma %3069 %3071 %3075
       %3077 = OpExtInst %float %1 Floor %3072
       %3078 = OpFNegate %float %3077
       %3079 = OpExtInst %float %1 Fma %3068 %3071 %3078
       %3080 = OpExtInst %float %1 Fma %3079 %float_2097152 %3076
       %3081 = OpExtInst %float %1 Floor %3080
       %3082 = OpFMul %float %3077 %float_n6_28318548
       %3083 = OpExtInst %float %1 Fma %3072 %float_6_28318548 %3082
       %3084 = OpFMul %float %3081 %float_n6_28318548
       %3085 = OpExtInst %float %1 Fma %3076 %float_6_28318548 %3084
       %3086 = OpExtInst %float %1 Fma %3083 %float_2097152 %3085
       %3087 = OpExtInst %float %1 Sin %3086
       %3088 = OpFMul %float %3087 %2569
       %3089 = OpFAdd %v3float %3055 %2574
       %3090 = OpExtInst %v3float %1 NMax %3089 %287
       %3091 = OpExtInst %v3float %1 NMin %3090 %134
       %3092 = OpCompositeExtract %float %3091 0
       %3093 = OpCompositeExtract %float %3091 1
       %3094 = OpCompositeConstruct %v2float %3092 %3093
       %3095 = OpFMul %v2float %1709 %3094
       %3096 = OpFMul %v2float %3094 %1710
       %3097 = OpCompositeExtract %float %3095 0
       %3098 = OpCompositeExtract %float %3096 0
       %3099 = OpCompositeExtract %float %3095 1
       %3100 = OpCompositeExtract %float %3096 1
       %3101 = OpFAdd %float %3097 %3099
       %3102 = OpFAdd %float %3098 %3100
       %3103 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_2
       %3104 = OpLoad %float %3103
       %3105 = OpFMul %float %3101 %3104
       %3106 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_39 %int_3
       %3107 = OpLoad %float %3106
       %3108 = OpFMul %float %3107 %2008
       %3109 = OpExtInst %float %1 Fma %3102 %3104 %3108
       %3110 = OpExtInst %float %1 Floor %3105
       %3111 = OpFNegate %float %3110
       %3112 = OpExtInst %float %1 Fma %3101 %3104 %3111
       %3113 = OpExtInst %float %1 Fma %3112 %float_2097152 %3109
       %3114 = OpExtInst %float %1 Floor %3113
       %3115 = OpFMul %float %3110 %float_n6_28318548
       %3116 = OpExtInst %float %1 Fma %3105 %float_6_28318548 %3115
       %3117 = OpFMul %float %3114 %float_n6_28318548
       %3118 = OpExtInst %float %1 Fma %3109 %float_6_28318548 %3117
       %3119 = OpExtInst %float %1 Fma %3116 %float_2097152 %3118
       %3120 = OpExtInst %float %1 Sin %3119
       %3121 = OpFMul %float %3120 %2608
       %3122 = OpCompositeConstruct %v3float %560 %560 %3088
       %3123 = OpCompositeConstruct %v3float %560 %560 %3121
       %3124 = OpFAdd %v3float %3122 %3123
       %3125 = OpFSub %v3float %3055 %1701
       %3126 = OpExtInst %v3float %1 NMax %3125 %287
       %3127 = OpExtInst %v3float %1 NMin %3126 %134
       %3128 = OpCompositeExtract %float %3127 0
       %3129 = OpCompositeExtract %float %3127 1
       %3130 = OpCompositeConstruct %v2float %3128 %3129
       %3131 = OpFMul %v2float %1709 %3130
       %3132 = OpFMul %v2float %3130 %1710
       %3133 = OpCompositeExtract %float %3131 0
       %3134 = OpCompositeExtract %float %3132 0
       %3135 = OpCompositeExtract %float %3131 1
       %3136 = OpCompositeExtract %float %3132 1
       %3137 = OpFAdd %float %3133 %3135
       %3138 = OpFAdd %float %3134 %3136
       %3139 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_1
       %3140 = OpLoad %float %3139
       %3141 = OpFMul %float %3137 %3140
       %3142 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_40 %int_2
       %3143 = OpLoad %float %3142
       %3144 = OpFMul %float %3143 %2008
       %3145 = OpExtInst %float %1 Fma %3138 %3140 %3144
       %3146 = OpExtInst %float %1 Floor %3141
       %3147 = OpFNegate %float %3146
       %3148 = OpExtInst %float %1 Fma %3137 %3140 %3147
       %3149 = OpExtInst %float %1 Fma %3148 %float_2097152 %3145
       %3150 = OpExtInst %float %1 Floor %3149
       %3151 = OpFMul %float %3146 %float_n6_28318548
       %3152 = OpExtInst %float %1 Fma %3141 %float_6_28318548 %3151
       %3153 = OpFMul %float %3150 %float_n6_28318548
       %3154 = OpExtInst %float %1 Fma %3145 %float_6_28318548 %3153
       %3155 = OpExtInst %float %1 Fma %3152 %float_2097152 %3154
       %3156 = OpExtInst %float %1 Sin %3155
       %3157 = OpFMul %float %3156 %2645
       %3158 = OpCompositeConstruct %v3float %560 %560 %3157
       %3159 = OpFAdd %v3float %3124 %3158
       %3160 = OpFSub %v3float %3055 %2574
       %3161 = OpExtInst %v3float %1 NMax %3160 %287
       %3162 = OpExtInst %v3float %1 NMin %3161 %134
       %3163 = OpCompositeExtract %float %3162 0
       %3164 = OpCompositeExtract %float %3162 1
       %3165 = OpCompositeConstruct %v2float %3163 %3164
       %3166 = OpFMul %v2float %1709 %3165
       %3167 = OpFMul %v2float %3165 %1710
       %3168 = OpCompositeExtract %float %3166 0
       %3169 = OpCompositeExtract %float %3167 0
       %3170 = OpCompositeExtract %float %3166 1
       %3171 = OpCompositeExtract %float %3167 1
       %3172 = OpFAdd %float %3168 %3170
       %3173 = OpFAdd %float %3169 %3171
       %3174 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_41 %int_0
       %3175 = OpLoad %float %3174
       %3176 = OpFMul %float %3172 %3175
       %3177 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_41 %int_1
       %3178 = OpLoad %float %3177
       %3179 = OpFMul %float %3178 %2008
       %3180 = OpExtInst %float %1 Fma %3173 %3175 %3179
       %3181 = OpExtInst %float %1 Floor %3176
       %3182 = OpFNegate %float %3181
       %3183 = OpExtInst %float %1 Fma %3172 %3175 %3182
       %3184 = OpExtInst %float %1 Fma %3183 %float_2097152 %3180
       %3185 = OpExtInst %float %1 Floor %3184
       %3186 = OpFMul %float %3181 %float_n6_28318548
       %3187 = OpExtInst %float %1 Fma %3176 %float_6_28318548 %3186
       %3188 = OpFMul %float %3185 %float_n6_28318548
       %3189 = OpExtInst %float %1 Fma %3180 %float_6_28318548 %3188
       %3190 = OpExtInst %float %1 Fma %3187 %float_2097152 %3189
       %3191 = OpExtInst %float %1 Sin %3190
       %3192 = OpFMul %float %3191 %2681
       %3193 = OpCompositeConstruct %v3float %560 %560 %3192
       %3194 = OpFAdd %v3float %3159 %3193
       %3195 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_41 %int_2
       %3196 = OpLoad %float %3195
       %3197 = OpFSub %float %3196 %float_n1
       %3198 = OpExtInst %float %1 FAbs %3197
       %3199 = OpFOrdGreaterThan %bool %3198 %float_9_99999975en06
       %3200 = OpFOrdGreaterThanEqual %bool %3196 %float_n1
       %3201 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_41 %int_3
       %3202 = OpLoad %float %3201
       %3203 = OpSelect %float %3200 %3196 %3202
       %3204 = OpSelect %float %3199 %3203 %3196
       %3205 = OpFSub %float %3204 %float_1
       %3206 = OpExtInst %float %1 FAbs %3205
       %3207 = OpFOrdGreaterThan %bool %3206 %float_9_99999975en06
       %3208 = OpFOrdGreaterThanEqual %bool %3204 %float_1
       %3209 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_42 %int_0
       %3210 = OpLoad %float %3209
       %3211 = OpSelect %float %3208 %3210 %3196
       %3212 = OpSelect %float %3207 %3211 %3196
       %3213 = OpExtInst %float %1 FAbs %3212
       %3214 = OpFOrdGreaterThan %bool %3213 %float_9_99999975en06
       %3215 = OpFOrdGreaterThanEqual %bool %3212 %float_0
       %3216 = OpSelect %float %3215 %float_1 %float_n1
       %3217 = OpSelect %float %3214 %3216 %float_1
       %3218 = OpExtInst %float %1 NMax %3217 %float_n1
       %3219 = OpExtInst %float %1 NMin %3218 %float_1
       %3220 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_43 %int_1
       %3221 = OpLoad %float %3220
       %3222 = OpCompositeConstruct %v3float %3219 %3221 %float_0
       %3223 = OpFAdd %v3float %3222 %1701
       %3224 = OpExtInst %v3float %1 NMax %3223 %287
       %3225 = OpExtInst %v3float %1 NMin %3224 %134
       %3226 = OpCompositeExtract %float %3225 0
       %3227 = OpCompositeExtract %float %3225 1
       %3228 = OpCompositeConstruct %v2float %3226 %3227
       %3229 = OpFMul %v2float %1709 %3228
       %3230 = OpFMul %v2float %3228 %1710
       %3231 = OpCompositeExtract %float %3229 0
       %3232 = OpCompositeExtract %float %3230 0
       %3233 = OpCompositeExtract %float %3229 1
       %3234 = OpCompositeExtract %float %3230 1
       %3235 = OpFAdd %float %3231 %3233
       %3236 = OpFAdd %float %3232 %3234
       %3237 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_0
       %3238 = OpLoad %float %3237
       %3239 = OpFMul %float %3235 %3238
       %3240 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_1
       %3241 = OpLoad %float %3240
       %3242 = OpFMul %float %3241 %2008
       %3243 = OpExtInst %float %1 Fma %3236 %3238 %3242
       %3244 = OpExtInst %float %1 Floor %3239
       %3245 = OpFNegate %float %3244
       %3246 = OpExtInst %float %1 Fma %3235 %3238 %3245
       %3247 = OpExtInst %float %1 Fma %3246 %float_2097152 %3243
       %3248 = OpExtInst %float %1 Floor %3247
       %3249 = OpFMul %float %3244 %float_n6_28318548
       %3250 = OpExtInst %float %1 Fma %3239 %float_6_28318548 %3249
       %3251 = OpFMul %float %3248 %float_n6_28318548
       %3252 = OpExtInst %float %1 Fma %3243 %float_6_28318548 %3251
       %3253 = OpExtInst %float %1 Fma %3250 %float_2097152 %3252
       %3254 = OpExtInst %float %1 Sin %3253
       %3255 = OpFMul %float %3254 %2747
       %3256 = OpFAdd %v3float %3222 %2574
       %3257 = OpExtInst %v3float %1 NMax %3256 %287
       %3258 = OpExtInst %v3float %1 NMin %3257 %134
       %3259 = OpCompositeExtract %float %3258 0
       %3260 = OpCompositeExtract %float %3258 1
       %3261 = OpCompositeConstruct %v2float %3259 %3260
       %3262 = OpFMul %v2float %1709 %3261
       %3263 = OpFMul %v2float %3261 %1710
       %3264 = OpCompositeExtract %float %3262 0
       %3265 = OpCompositeExtract %float %3263 0
       %3266 = OpCompositeExtract %float %3262 1
       %3267 = OpCompositeExtract %float %3263 1
       %3268 = OpFAdd %float %3264 %3266
       %3269 = OpFAdd %float %3265 %3267
       %3270 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_45 %int_3
       %3271 = OpLoad %float %3270
       %3272 = OpFMul %float %3268 %3271
       %3273 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_0
       %3274 = OpLoad %float %3273
       %3275 = OpFMul %float %3274 %2008
       %3276 = OpExtInst %float %1 Fma %3269 %3271 %3275
       %3277 = OpExtInst %float %1 Floor %3272
       %3278 = OpFNegate %float %3277
       %3279 = OpExtInst %float %1 Fma %3268 %3271 %3278
       %3280 = OpExtInst %float %1 Fma %3279 %float_2097152 %3276
       %3281 = OpExtInst %float %1 Floor %3280
       %3282 = OpFMul %float %3277 %float_n6_28318548
       %3283 = OpExtInst %float %1 Fma %3272 %float_6_28318548 %3282
       %3284 = OpFMul %float %3281 %float_n6_28318548
       %3285 = OpExtInst %float %1 Fma %3276 %float_6_28318548 %3284
       %3286 = OpExtInst %float %1 Fma %3283 %float_2097152 %3285
       %3287 = OpExtInst %float %1 Sin %3286
       %3288 = OpFMul %float %3287 %2781
       %3289 = OpCompositeConstruct %v3float %560 %560 %3255
       %3290 = OpCompositeConstruct %v3float %560 %560 %3288
       %3291 = OpFAdd %v3float %3289 %3290
       %3292 = OpFSub %v3float %3222 %1701
       %3293 = OpExtInst %v3float %1 NMax %3292 %287
       %3294 = OpExtInst %v3float %1 NMin %3293 %134
       %3295 = OpCompositeExtract %float %3294 0
       %3296 = OpCompositeExtract %float %3294 1
       %3297 = OpCompositeConstruct %v2float %3295 %3296
       %3298 = OpFMul %v2float %1709 %3297
       %3299 = OpFMul %v2float %3297 %1710
       %3300 = OpCompositeExtract %float %3298 0
       %3301 = OpCompositeExtract %float %3299 0
       %3302 = OpCompositeExtract %float %3298 1
       %3303 = OpCompositeExtract %float %3299 1
       %3304 = OpFAdd %float %3300 %3302
       %3305 = OpFAdd %float %3301 %3303
       %3306 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_2
       %3307 = OpLoad %float %3306
       %3308 = OpFMul %float %3304 %3307
       %3309 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_46 %int_3
       %3310 = OpLoad %float %3309
       %3311 = OpFMul %float %3310 %2008
       %3312 = OpExtInst %float %1 Fma %3305 %3307 %3311
       %3313 = OpExtInst %float %1 Floor %3308
       %3314 = OpFNegate %float %3313
       %3315 = OpExtInst %float %1 Fma %3304 %3307 %3314
       %3316 = OpExtInst %float %1 Fma %3315 %float_2097152 %3312
       %3317 = OpExtInst %float %1 Floor %3316
       %3318 = OpFMul %float %3313 %float_n6_28318548
       %3319 = OpExtInst %float %1 Fma %3308 %float_6_28318548 %3318
       %3320 = OpFMul %float %3317 %float_n6_28318548
       %3321 = OpExtInst %float %1 Fma %3312 %float_6_28318548 %3320
       %3322 = OpExtInst %float %1 Fma %3319 %float_2097152 %3321
       %3323 = OpExtInst %float %1 Sin %3322
       %3324 = OpFMul %float %3323 %2818
       %3325 = OpCompositeConstruct %v3float %560 %560 %3324
       %3326 = OpFAdd %v3float %3291 %3325
       %3327 = OpFSub %v3float %3222 %2574
       %3328 = OpExtInst %v3float %1 NMax %3327 %287
       %3329 = OpExtInst %v3float %1 NMin %3328 %134
       %3330 = OpCompositeExtract %float %3329 0
       %3331 = OpCompositeExtract %float %3329 1
       %3332 = OpCompositeConstruct %v2float %3330 %3331
       %3333 = OpFMul %v2float %1709 %3332
       %3334 = OpFMul %v2float %3332 %1710
       %3335 = OpCompositeExtract %float %3333 0
       %3336 = OpCompositeExtract %float %3334 0
       %3337 = OpCompositeExtract %float %3333 1
       %3338 = OpCompositeExtract %float %3334 1
       %3339 = OpFAdd %float %3335 %3337
       %3340 = OpFAdd %float %3336 %3338
       %3341 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_47 %int_1
       %3342 = OpLoad %float %3341
       %3343 = OpFMul %float %3339 %3342
       %3344 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_47 %int_2
       %3345 = OpLoad %float %3344
       %3346 = OpFMul %float %3345 %2008
       %3347 = OpExtInst %float %1 Fma %3340 %3342 %3346
       %3348 = OpExtInst %float %1 Floor %3343
       %3349 = OpFNegate %float %3348
       %3350 = OpExtInst %float %1 Fma %3339 %3342 %3349
       %3351 = OpExtInst %float %1 Fma %3350 %float_2097152 %3347
       %3352 = OpExtInst %float %1 Floor %3351
       %3353 = OpFMul %float %3348 %float_n6_28318548
       %3354 = OpExtInst %float %1 Fma %3343 %float_6_28318548 %3353
       %3355 = OpFMul %float %3352 %float_n6_28318548
       %3356 = OpExtInst %float %1 Fma %3347 %float_6_28318548 %3355
       %3357 = OpExtInst %float %1 Fma %3354 %float_2097152 %3356
       %3358 = OpExtInst %float %1 Sin %3357
       %3359 = OpFMul %float %3358 %2854
       %3360 = OpCompositeConstruct %v3float %560 %560 %3359
       %3361 = OpFAdd %v3float %3326 %3360
       %3362 = OpFAdd %v3float %3194 %3361
       %3363 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_47 %int_3
       %3364 = OpLoad %float %3363
       %3365 = OpFSub %float %3364 %float_n1
       %3366 = OpExtInst %float %1 FAbs %3365
       %3367 = OpFOrdGreaterThan %bool %3366 %float_9_99999975en06
       %3368 = OpFOrdGreaterThanEqual %bool %3364 %float_n1
       %3369 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_48 %int_0
       %3370 = OpLoad %float %3369
       %3371 = OpSelect %float %3368 %3364 %3370
       %3372 = OpSelect %float %3367 %3371 %3364
       %3373 = OpFSub %float %3372 %float_1
       %3374 = OpExtInst %float %1 FAbs %3373
       %3375 = OpFOrdGreaterThan %bool %3374 %float_9_99999975en06
       %3376 = OpFOrdGreaterThanEqual %bool %3372 %float_1
       %3377 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_48 %int_1
       %3378 = OpLoad %float %3377
       %3379 = OpSelect %float %3376 %3378 %3364
       %3380 = OpSelect %float %3375 %3379 %3364
       %3381 = OpExtInst %float %1 FAbs %3380
       %3382 = OpFOrdGreaterThan %bool %3381 %float_9_99999975en06
       %3383 = OpFOrdGreaterThanEqual %bool %3380 %float_0
       %3384 = OpSelect %float %3383 %float_1 %float_n1
       %3385 = OpSelect %float %3382 %3384 %float_1
       %3386 = OpExtInst %float %1 NMax %3385 %float_n1
       %3387 = OpExtInst %float %1 NMin %3386 %float_1
       %3388 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_49 %int_2
       %3389 = OpLoad %float %3388
       %3390 = OpCompositeConstruct %v3float %3387 %3389 %float_0
       %3391 = OpFAdd %v3float %3390 %1701
       %3392 = OpExtInst %v3float %1 NMax %3391 %287
       %3393 = OpExtInst %v3float %1 NMin %3392 %134
       %3394 = OpCompositeExtract %float %3393 0
       %3395 = OpCompositeExtract %float %3393 1
       %3396 = OpCompositeConstruct %v2float %3394 %3395
       %3397 = OpFMul %v2float %1709 %3396
       %3398 = OpFMul %v2float %3396 %1710
       %3399 = OpCompositeExtract %float %3397 0
       %3400 = OpCompositeExtract %float %3398 0
       %3401 = OpCompositeExtract %float %3397 1
       %3402 = OpCompositeExtract %float %3398 1
       %3403 = OpFAdd %float %3399 %3401
       %3404 = OpFAdd %float %3400 %3402
       %3405 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_1
       %3406 = OpLoad %float %3405
       %3407 = OpFMul %float %3403 %3406
       %3408 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_51 %int_2
       %3409 = OpLoad %float %3408
       %3410 = OpFMul %float %3409 %2008
       %3411 = OpExtInst %float %1 Fma %3404 %3406 %3410
       %3412 = OpExtInst %float %1 Floor %3407
       %3413 = OpFNegate %float %3412
       %3414 = OpExtInst %float %1 Fma %3403 %3406 %3413
       %3415 = OpExtInst %float %1 Fma %3414 %float_2097152 %3411
       %3416 = OpExtInst %float %1 Floor %3415
       %3417 = OpFMul %float %3412 %float_n6_28318548
       %3418 = OpExtInst %float %1 Fma %3407 %float_6_28318548 %3417
       %3419 = OpFMul %float %3416 %float_n6_28318548
       %3420 = OpExtInst %float %1 Fma %3411 %float_6_28318548 %3419
       %3421 = OpExtInst %float %1 Fma %3418 %float_2097152 %3420
       %3422 = OpExtInst %float %1 Sin %3421
       %3423 = OpFMul %float %3422 %2747
       %3424 = OpFAdd %v3float %3390 %2574
       %3425 = OpExtInst %v3float %1 NMax %3424 %287
       %3426 = OpExtInst %v3float %1 NMin %3425 %134
       %3427 = OpCompositeExtract %float %3426 0
       %3428 = OpCompositeExtract %float %3426 1
       %3429 = OpCompositeConstruct %v2float %3427 %3428
       %3430 = OpFMul %v2float %1709 %3429
       %3431 = OpFMul %v2float %3429 %1710
       %3432 = OpCompositeExtract %float %3430 0
       %3433 = OpCompositeExtract %float %3431 0
       %3434 = OpCompositeExtract %float %3430 1
       %3435 = OpCompositeExtract %float %3431 1
       %3436 = OpFAdd %float %3432 %3434
       %3437 = OpFAdd %float %3433 %3435
       %3438 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_0
       %3439 = OpLoad %float %3438
       %3440 = OpFMul %float %3436 %3439
       %3441 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_1
       %3442 = OpLoad %float %3441
       %3443 = OpFMul %float %3442 %2008
       %3444 = OpExtInst %float %1 Fma %3437 %3439 %3443
       %3445 = OpExtInst %float %1 Floor %3440
       %3446 = OpFNegate %float %3445
       %3447 = OpExtInst %float %1 Fma %3436 %3439 %3446
       %3448 = OpExtInst %float %1 Fma %3447 %float_2097152 %3444
       %3449 = OpExtInst %float %1 Floor %3448
       %3450 = OpFMul %float %3445 %float_n6_28318548
       %3451 = OpExtInst %float %1 Fma %3440 %float_6_28318548 %3450
       %3452 = OpFMul %float %3449 %float_n6_28318548
       %3453 = OpExtInst %float %1 Fma %3444 %float_6_28318548 %3452
       %3454 = OpExtInst %float %1 Fma %3451 %float_2097152 %3453
       %3455 = OpExtInst %float %1 Sin %3454
       %3456 = OpFMul %float %3455 %2781
       %3457 = OpCompositeConstruct %v3float %560 %560 %3423
       %3458 = OpCompositeConstruct %v3float %560 %560 %3456
       %3459 = OpFAdd %v3float %3457 %3458
       %3460 = OpFSub %v3float %3390 %1701
       %3461 = OpExtInst %v3float %1 NMax %3460 %287
       %3462 = OpExtInst %v3float %1 NMin %3461 %134
       %3463 = OpCompositeExtract %float %3462 0
       %3464 = OpCompositeExtract %float %3462 1
       %3465 = OpCompositeConstruct %v2float %3463 %3464
       %3466 = OpFMul %v2float %1709 %3465
       %3467 = OpFMul %v2float %3465 %1710
       %3468 = OpCompositeExtract %float %3466 0
       %3469 = OpCompositeExtract %float %3467 0
       %3470 = OpCompositeExtract %float %3466 1
       %3471 = OpCompositeExtract %float %3467 1
       %3472 = OpFAdd %float %3468 %3470
       %3473 = OpFAdd %float %3469 %3471
       %3474 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_52 %int_3
       %3475 = OpLoad %float %3474
       %3476 = OpFMul %float %3472 %3475
       %3477 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_0
       %3478 = OpLoad %float %3477
       %3479 = OpFMul %float %3478 %2008
       %3480 = OpExtInst %float %1 Fma %3473 %3475 %3479
       %3481 = OpExtInst %float %1 Floor %3476
       %3482 = OpFNegate %float %3481
       %3483 = OpExtInst %float %1 Fma %3472 %3475 %3482
       %3484 = OpExtInst %float %1 Fma %3483 %float_2097152 %3480
       %3485 = OpExtInst %float %1 Floor %3484
       %3486 = OpFMul %float %3481 %float_n6_28318548
       %3487 = OpExtInst %float %1 Fma %3476 %float_6_28318548 %3486
       %3488 = OpFMul %float %3485 %float_n6_28318548
       %3489 = OpExtInst %float %1 Fma %3480 %float_6_28318548 %3488
       %3490 = OpExtInst %float %1 Fma %3487 %float_2097152 %3489
       %3491 = OpExtInst %float %1 Sin %3490
       %3492 = OpFMul %float %3491 %2818
       %3493 = OpCompositeConstruct %v3float %560 %560 %3492
       %3494 = OpFAdd %v3float %3459 %3493
       %3495 = OpFSub %v3float %3390 %2574
       %3496 = OpExtInst %v3float %1 NMax %3495 %287
       %3497 = OpExtInst %v3float %1 NMin %3496 %134
       %3498 = OpCompositeExtract %float %3497 0
       %3499 = OpCompositeExtract %float %3497 1
       %3500 = OpCompositeConstruct %v2float %3498 %3499
       %3501 = OpFMul %v2float %1709 %3500
       %3502 = OpFMul %v2float %3500 %1710
       %3503 = OpCompositeExtract %float %3501 0
       %3504 = OpCompositeExtract %float %3502 0
       %3505 = OpCompositeExtract %float %3501 1
       %3506 = OpCompositeExtract %float %3502 1
       %3507 = OpFAdd %float %3503 %3505
       %3508 = OpFAdd %float %3504 %3506
       %3509 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_2
       %3510 = OpLoad %float %3509
       %3511 = OpFMul %float %3507 %3510
       %3512 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_53 %int_3
       %3513 = OpLoad %float %3512
       %3514 = OpFMul %float %3513 %2008
       %3515 = OpExtInst %float %1 Fma %3508 %3510 %3514
       %3516 = OpExtInst %float %1 Floor %3511
       %3517 = OpFNegate %float %3516
       %3518 = OpExtInst %float %1 Fma %3507 %3510 %3517
       %3519 = OpExtInst %float %1 Fma %3518 %float_2097152 %3515
       %3520 = OpExtInst %float %1 Floor %3519
       %3521 = OpFMul %float %3516 %float_n6_28318548
       %3522 = OpExtInst %float %1 Fma %3511 %float_6_28318548 %3521
       %3523 = OpFMul %float %3520 %float_n6_28318548
       %3524 = OpExtInst %float %1 Fma %3515 %float_6_28318548 %3523
       %3525 = OpExtInst %float %1 Fma %3522 %float_2097152 %3524
       %3526 = OpExtInst %float %1 Sin %3525
       %3527 = OpFMul %float %3526 %2854
       %3528 = OpCompositeConstruct %v3float %560 %560 %3527
       %3529 = OpFAdd %v3float %3494 %3528
       %3530 = OpFAdd %v3float %3362 %3529
       %3531 = OpFAdd %v3float %3027 %3530
       %3532 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_0
       %3533 = OpLoad %float %3532
       %3534 = OpCompositeConstruct %v3float %3533 %3533 %3533
       %3535 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_1
       %3536 = OpLoad %float %3535
       %3537 = OpFSub %float %3536 %float_n1
       %3538 = OpExtInst %float %1 FAbs %3537
       %3539 = OpFOrdGreaterThan %bool %3538 %float_9_99999975en06
       %3540 = OpFOrdGreaterThanEqual %bool %3536 %float_n1
       %3541 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_2
       %3542 = OpLoad %float %3541
       %3543 = OpSelect %float %3540 %3536 %3542
       %3544 = OpSelect %float %3539 %3543 %3536
       %3545 = OpFSub %float %3544 %float_1
       %3546 = OpExtInst %float %1 FAbs %3545
       %3547 = OpFOrdGreaterThan %bool %3546 %float_9_99999975en06
       %3548 = OpFOrdGreaterThanEqual %bool %3544 %float_1
       %3549 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_54 %int_3
       %3550 = OpLoad %float %3549
       %3551 = OpSelect %float %3548 %3550 %3536
       %3552 = OpSelect %float %3547 %3551 %3536
       %3553 = OpExtInst %float %1 FAbs %3552
       %3554 = OpFOrdGreaterThan %bool %3553 %float_9_99999975en06
       %3555 = OpFOrdGreaterThanEqual %bool %3552 %float_0
       %3556 = OpSelect %float %3555 %float_1 %float_n1
       %3557 = OpSelect %float %3554 %3556 %float_1
       %3558 = OpExtInst %float %1 NMax %3557 %float_n1
       %3559 = OpExtInst %float %1 NMin %3558 %float_1
       %3560 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_56 %int_0
       %3561 = OpLoad %float %3560
       %3562 = OpCompositeConstruct %v3float %3559 %3561 %float_0
       %3563 = OpFAdd %v3float %3562 %1701
       %3564 = OpExtInst %v3float %1 NMax %3563 %287
       %3565 = OpExtInst %v3float %1 NMin %3564 %134
       %3566 = OpCompositeExtract %float %3565 0
       %3567 = OpCompositeExtract %float %3565 1
       %3568 = OpCompositeConstruct %v2float %3566 %3567
       %3569 = OpFMul %v2float %1709 %3568
       %3570 = OpFMul %v2float %3568 %1710
       %3571 = OpCompositeExtract %float %3569 0
       %3572 = OpCompositeExtract %float %3570 0
       %3573 = OpCompositeExtract %float %3569 1
       %3574 = OpCompositeExtract %float %3570 1
       %3575 = OpFAdd %float %3571 %3573
       %3576 = OpFAdd %float %3572 %3574
       %3577 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_1
       %3578 = OpLoad %float %3577
       %3579 = OpFMul %float %3578 %1738
       %3580 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_2
       %3581 = OpLoad %float %3580
       %3582 = OpFMul %float %3581 %3579
       %3583 = OpFDiv %float %float_2 %3582
       %3584 = OpFMul %float %3575 %3583
       %3585 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_57 %int_3
       %3586 = OpLoad %float %3585
       %3587 = OpFMul %float %3583 %3586
       %3588 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_0
       %3589 = OpLoad %float %3588
       %3590 = OpCompositeConstruct %v3float %3589 %3589 %3589
       %3591 = OpFMul %v3float %604 %3590
       %3592 = OpFMul %v3float %3590 %655
       %3593 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_1
       %3594 = OpLoad %float %3593
       %3595 = OpCompositeConstruct %v3float %3594 %3594 %3594
       %3596 = OpFMul %v3float %3591 %3595
       %3597 = OpFMul %v3float %3592 %3595
       %3598 = OpFDiv %float %float_1 %1738
       %3599 = OpCompositeConstruct %v3float %3598 %3598 %3598
       %3600 = OpFMul %v3float %3597 %3599
       %3601 = OpCompositeExtract %float %3600 0
       %3602 = OpCompositeExtract %float %3600 1
       %3603 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_58 %int_3
       %3604 = OpLoad %float %3603
       %3605 = OpFMul %float %1174 %3604
       %3606 = OpCompositeExtract %float %3600 2
       %3607 = OpCompositeConstruct %v2float %3605 %3605
       %3608 = OpCompositeConstruct %v2float %3606 %3606
       %3609 = OpFAdd %v2float %3607 %3608
       %3610 = OpCompositeExtract %float %3609 0
       %3611 = OpCompositeConstruct %v3float %3601 %3602 %3610
       %3612 = OpVectorTimesScalar %v3float %3611 %float_4_76837158en07
       %3613 = OpFAdd %v3float %3612 %143
       %3614 = OpExtInst %v3float %1 Fma %3596 %3599 %3613
       %3615 = OpExtInst %v3float %1 Floor %3614
       %3616 = OpFNegate %v3float %3615
       %3617 = OpExtInst %v3float %1 Fma %3596 %3599 %3616
       %3618 = OpVectorTimesScalar %v3float %3617 %float_2097152
       %3619 = OpFAdd %v3float %3618 %3611
       %3620 = OpVectorTimesScalar %v3float %3619 %float_1
               OpBranch %3621
       %3621 = OpLabel
       %3622 = OpPhi %v3float %3620 %2326 %3623 %3624
       %3625 = OpPhi %float %float_1 %2326 %3626 %3624
       %3627 = OpPhi %float %float_0 %2326 %3628 %3624
       %3629 = OpPhi %uint %uint_0 %2326 %3630 %3624
       %3631 = OpULessThan %bool %3629 %uint_6
               OpLoopMerge %3632 %3624 DontUnroll
               OpBranchConditional %3631 %3624 %3632
       %3624 = OpLabel
       %3633 = OpExtInst %v3float %1 Fract %3622
       %3634 = OpExtInst %v3float %1 Floor %3622
       %3635 = OpDot %float %3634 %397
       %3636 = OpFAdd %float %3635 %float_19
       %3637 = OpFAdd %float %3635 %float_47
       %3638 = OpFAdd %float %3635 %float_66
       %3639 = OpFAdd %float %3635 %float_101
       %3640 = OpFAdd %float %3635 %float_120
       %3641 = OpFAdd %float %3635 %float_148
       %3642 = OpFAdd %float %3635 %float_167
       %3643 = OpConvertFToS %int %3635
       %3644 = OpCompositeConstruct %v3int %3643 %int_0 %int_0
       %3645 = OpBitcast %v3uint %3644
       %3646 = OpIMul %v3uint %3645 %413
       %3647 = OpIAdd %v3uint %3646 %415
       %3648 = OpCompositeExtract %uint %3647 1
       %3649 = OpCompositeExtract %uint %3647 2
       %3650 = OpIMul %uint %3648 %3649
       %3651 = OpCompositeExtract %uint %3647 0
       %3652 = OpIAdd %uint %3651 %3650
       %3653 = OpIMul %uint %3649 %3652
       %3654 = OpIAdd %uint %3648 %3653
       %3655 = OpIMul %uint %3652 %3654
       %3656 = OpIAdd %uint %3649 %3655
       %3657 = OpIMul %uint %3654 %3656
       %3658 = OpIAdd %uint %3652 %3657
       %3659 = OpCompositeInsert %v3uint %3658 %561 0
       %3660 = OpBitwiseAnd %v3uint %416 %417
       %3661 = OpShiftRightLogical %v3uint %3659 %3660
       %3662 = OpCompositeExtract %uint %3661 0
       %3663 = OpCompositeConstruct %v3uint %3662 %3662 %3662
       %3664 = OpBitwiseAnd %v3uint %3663 %398
       %3665 = OpConvertUToF %v3float %3664
       %3666 = OpExtInst %v3float %1 Fma %3665 %402 %287
       %3667 = OpDot %float %3666 %3633
       %3668 = OpConvertFToS %int %3636
       %3669 = OpFSub %v3float %3633 %362
       %3670 = OpCompositeConstruct %v3int %3668 %int_0 %int_0
       %3671 = OpBitcast %v3uint %3670
       %3672 = OpIMul %v3uint %3671 %413
       %3673 = OpIAdd %v3uint %3672 %415
       %3674 = OpCompositeExtract %uint %3673 1
       %3675 = OpCompositeExtract %uint %3673 2
       %3676 = OpIMul %uint %3674 %3675
       %3677 = OpCompositeExtract %uint %3673 0
       %3678 = OpIAdd %uint %3677 %3676
       %3679 = OpIMul %uint %3675 %3678
       %3680 = OpIAdd %uint %3674 %3679
       %3681 = OpIMul %uint %3678 %3680
       %3682 = OpIAdd %uint %3675 %3681
       %3683 = OpIMul %uint %3680 %3682
       %3684 = OpIAdd %uint %3678 %3683
       %3685 = OpCompositeInsert %v3uint %3684 %561 0
       %3686 = OpShiftRightLogical %v3uint %3685 %3660
       %3687 = OpCompositeExtract %uint %3686 0
       %3688 = OpCompositeConstruct %v3uint %3687 %3687 %3687
       %3689 = OpBitwiseAnd %v3uint %3688 %398
       %3690 = OpConvertUToF %v3float %3689
       %3691 = OpExtInst %v3float %1 Fma %3690 %402 %287
       %3692 = OpDot %float %3691 %3669
       %3693 = OpConvertFToS %int %3637
       %3694 = OpFSub %v3float %3633 %363
       %3695 = OpCompositeConstruct %v3int %3693 %int_0 %int_0
       %3696 = OpBitcast %v3uint %3695
       %3697 = OpIMul %v3uint %3696 %413
       %3698 = OpIAdd %v3uint %3697 %415
       %3699 = OpCompositeExtract %uint %3698 1
       %3700 = OpCompositeExtract %uint %3698 2
       %3701 = OpIMul %uint %3699 %3700
       %3702 = OpCompositeExtract %uint %3698 0
       %3703 = OpIAdd %uint %3702 %3701
       %3704 = OpIMul %uint %3700 %3703
       %3705 = OpIAdd %uint %3699 %3704
       %3706 = OpIMul %uint %3703 %3705
       %3707 = OpIAdd %uint %3700 %3706
       %3708 = OpIMul %uint %3705 %3707
       %3709 = OpIAdd %uint %3703 %3708
       %3710 = OpCompositeInsert %v3uint %3709 %561 0
       %3711 = OpShiftRightLogical %v3uint %3710 %3660
       %3712 = OpCompositeExtract %uint %3711 0
       %3713 = OpCompositeConstruct %v3uint %3712 %3712 %3712
       %3714 = OpBitwiseAnd %v3uint %3713 %398
       %3715 = OpConvertUToF %v3float %3714
       %3716 = OpExtInst %v3float %1 Fma %3715 %402 %287
       %3717 = OpDot %float %3716 %3694
       %3718 = OpConvertFToS %int %3638
       %3719 = OpFSub %v3float %3633 %140
       %3720 = OpCompositeConstruct %v3int %3718 %int_0 %int_0
       %3721 = OpBitcast %v3uint %3720
       %3722 = OpIMul %v3uint %3721 %413
       %3723 = OpIAdd %v3uint %3722 %415
       %3724 = OpCompositeExtract %uint %3723 1
       %3725 = OpCompositeExtract %uint %3723 2
       %3726 = OpIMul %uint %3724 %3725
       %3727 = OpCompositeExtract %uint %3723 0
       %3728 = OpIAdd %uint %3727 %3726
       %3729 = OpIMul %uint %3725 %3728
       %3730 = OpIAdd %uint %3724 %3729
       %3731 = OpIMul %uint %3728 %3730
       %3732 = OpIAdd %uint %3725 %3731
       %3733 = OpIMul %uint %3730 %3732
       %3734 = OpIAdd %uint %3728 %3733
       %3735 = OpCompositeInsert %v3uint %3734 %561 0
       %3736 = OpShiftRightLogical %v3uint %3735 %3660
       %3737 = OpCompositeExtract %uint %3736 0
       %3738 = OpCompositeConstruct %v3uint %3737 %3737 %3737
       %3739 = OpBitwiseAnd %v3uint %3738 %398
       %3740 = OpConvertUToF %v3float %3739
       %3741 = OpExtInst %v3float %1 Fma %3740 %402 %287
       %3742 = OpDot %float %3741 %3719
       %3743 = OpConvertFToS %int %3639
       %3744 = OpFSub %v3float %3633 %299
       %3745 = OpCompositeConstruct %v3int %3743 %int_0 %int_0
       %3746 = OpBitcast %v3uint %3745
       %3747 = OpIMul %v3uint %3746 %413
       %3748 = OpIAdd %v3uint %3747 %415
       %3749 = OpCompositeExtract %uint %3748 1
       %3750 = OpCompositeExtract %uint %3748 2
       %3751 = OpIMul %uint %3749 %3750
       %3752 = OpCompositeExtract %uint %3748 0
       %3753 = OpIAdd %uint %3752 %3751
       %3754 = OpIMul %uint %3750 %3753
       %3755 = OpIAdd %uint %3749 %3754
       %3756 = OpIMul %uint %3753 %3755
       %3757 = OpIAdd %uint %3750 %3756
       %3758 = OpIMul %uint %3755 %3757
       %3759 = OpIAdd %uint %3753 %3758
       %3760 = OpCompositeInsert %v3uint %3759 %561 0
       %3761 = OpShiftRightLogical %v3uint %3760 %3660
       %3762 = OpCompositeExtract %uint %3761 0
       %3763 = OpCompositeConstruct %v3uint %3762 %3762 %3762
       %3764 = OpBitwiseAnd %v3uint %3763 %398
       %3765 = OpConvertUToF %v3float %3764
       %3766 = OpExtInst %v3float %1 Fma %3765 %402 %287
       %3767 = OpDot %float %3766 %3744
       %3768 = OpConvertFToS %int %3640
       %3769 = OpFSub %v3float %3633 %146
       %3770 = OpCompositeConstruct %v3int %3768 %int_0 %int_0
       %3771 = OpBitcast %v3uint %3770
       %3772 = OpIMul %v3uint %3771 %413
       %3773 = OpIAdd %v3uint %3772 %415
       %3774 = OpCompositeExtract %uint %3773 1
       %3775 = OpCompositeExtract %uint %3773 2
       %3776 = OpIMul %uint %3774 %3775
       %3777 = OpCompositeExtract %uint %3773 0
       %3778 = OpIAdd %uint %3777 %3776
       %3779 = OpIMul %uint %3775 %3778
       %3780 = OpIAdd %uint %3774 %3779
       %3781 = OpIMul %uint %3778 %3780
       %3782 = OpIAdd %uint %3775 %3781
       %3783 = OpIMul %uint %3780 %3782
       %3784 = OpIAdd %uint %3778 %3783
       %3785 = OpCompositeInsert %v3uint %3784 %561 0
       %3786 = OpShiftRightLogical %v3uint %3785 %3660
       %3787 = OpCompositeExtract %uint %3786 0
       %3788 = OpCompositeConstruct %v3uint %3787 %3787 %3787
       %3789 = OpBitwiseAnd %v3uint %3788 %398
       %3790 = OpConvertUToF %v3float %3789
       %3791 = OpExtInst %v3float %1 Fma %3790 %402 %287
       %3792 = OpDot %float %3791 %3769
       %3793 = OpConvertFToS %int %3641
       %3794 = OpFSub %v3float %3633 %141
       %3795 = OpCompositeConstruct %v3int %3793 %int_0 %int_0
       %3796 = OpBitcast %v3uint %3795
       %3797 = OpIMul %v3uint %3796 %413
       %3798 = OpIAdd %v3uint %3797 %415
       %3799 = OpCompositeExtract %uint %3798 1
       %3800 = OpCompositeExtract %uint %3798 2
       %3801 = OpIMul %uint %3799 %3800
       %3802 = OpCompositeExtract %uint %3798 0
       %3803 = OpIAdd %uint %3802 %3801
       %3804 = OpIMul %uint %3800 %3803
       %3805 = OpIAdd %uint %3799 %3804
       %3806 = OpIMul %uint %3803 %3805
       %3807 = OpIAdd %uint %3800 %3806
       %3808 = OpIMul %uint %3805 %3807
       %3809 = OpIAdd %uint %3803 %3808
       %3810 = OpCompositeInsert %v3uint %3809 %561 0
       %3811 = OpShiftRightLogical %v3uint %3810 %3660
       %3812 = OpCompositeExtract %uint %3811 0
       %3813 = OpCompositeConstruct %v3uint %3812 %3812 %3812
       %3814 = OpBitwiseAnd %v3uint %3813 %398
       %3815 = OpConvertUToF %v3float %3814
       %3816 = OpExtInst %v3float %1 Fma %3815 %402 %287
       %3817 = OpDot %float %3816 %3794
       %3818 = OpConvertFToS %int %3642
       %3819 = OpFSub %v3float %3633 %134
       %3820 = OpCompositeConstruct %v3int %3818 %int_0 %int_0
       %3821 = OpBitcast %v3uint %3820
       %3822 = OpIMul %v3uint %3821 %413
       %3823 = OpIAdd %v3uint %3822 %415
       %3824 = OpCompositeExtract %uint %3823 1
       %3825 = OpCompositeExtract %uint %3823 2
       %3826 = OpIMul %uint %3824 %3825
       %3827 = OpCompositeExtract %uint %3823 0
       %3828 = OpIAdd %uint %3827 %3826
       %3829 = OpIMul %uint %3825 %3828
       %3830 = OpIAdd %uint %3824 %3829
       %3831 = OpIMul %uint %3828 %3830
       %3832 = OpIAdd %uint %3825 %3831
       %3833 = OpIMul %uint %3830 %3832
       %3834 = OpIAdd %uint %3828 %3833
       %3835 = OpCompositeInsert %v3uint %3834 %561 0
       %3836 = OpShiftRightLogical %v3uint %3835 %3660
       %3837 = OpCompositeExtract %uint %3836 0
       %3838 = OpCompositeConstruct %v3uint %3837 %3837 %3837
       %3839 = OpBitwiseAnd %v3uint %3838 %398
       %3840 = OpConvertUToF %v3float %3839
       %3841 = OpExtInst %v3float %1 Fma %3840 %402 %287
       %3842 = OpDot %float %3841 %3819
       %3843 = OpCompositeExtract %float %3633 0
       %3844 = OpCompositeExtract %float %3633 1
       %3845 = OpCompositeExtract %float %3633 2
       %3846 = OpCompositeConstruct %v4float %3843 %3844 %3845 %float_0
       %3847 = OpFMul %v4float %3846 %3846
       %3848 = OpFMul %v4float %3847 %3846
       %3849 = OpVectorTimesScalar %v4float %3846 %float_6
       %3850 = OpFSub %v4float %3849 %393
       %3851 = OpExtInst %v4float %1 Fma %3846 %3850 %394
       %3852 = OpFMul %v4float %3848 %3851
       %3853 = OpCompositeExtract %float %3852 0
       %3854 = OpExtInst %float %1 FMix %3667 %3692 %3853
       %3855 = OpExtInst %float %1 FMix %3717 %3742 %3853
       %3856 = OpCompositeExtract %float %3852 1
       %3857 = OpExtInst %float %1 FMix %3854 %3855 %3856
       %3858 = OpExtInst %float %1 FMix %3767 %3792 %3853
       %3859 = OpExtInst %float %1 FMix %3817 %3842 %3853
       %3860 = OpExtInst %float %1 FMix %3858 %3859 %3856
       %3861 = OpCompositeExtract %float %3852 2
       %3862 = OpExtInst %float %1 FMix %3857 %3860 %3861
       %3628 = OpExtInst %float %1 Fma %3862 %3625 %3627
       %3623 = OpVectorTimesScalar %v3float %3622 %float_2
       %3626 = OpFMul %float %3625 %float_0_5
       %3630 = OpIAdd %uint %3629 %uint_1
               OpBranch %3621
       %3632 = OpLabel
       %3863 = OpExtInst %float %1 Fma %3627 %float_0_5 %float_0_5
       %3864 = OpExtInst %float %1 FMix %float_0 %float_1 %3863
       %3865 = OpExtInst %float %1 FClamp %3864 %float_0 %float_1
       %3866 = OpExtInst %float %1 FMix %1174 %1727 %3865
       %3867 = OpFMul %float %3587 %3866
       %3868 = OpExtInst %float %1 Fma %3576 %3583 %3867
       %3869 = OpExtInst %float %1 Floor %3584
       %3870 = OpFNegate %float %3869
       %3871 = OpExtInst %float %1 Fma %3575 %3583 %3870
       %3872 = OpExtInst %float %1 Fma %3871 %float_2097152 %3868
       %3873 = OpExtInst %float %1 Floor %3872
       %3874 = OpFMul %float %3869 %float_n6_28318548
       %3875 = OpExtInst %float %1 Fma %3584 %float_6_28318548 %3874
       %3876 = OpFMul %float %3873 %float_n6_28318548
       %3877 = OpExtInst %float %1 Fma %3868 %float_6_28318548 %3876
       %3878 = OpExtInst %float %1 Fma %3875 %float_2097152 %3877
       %3879 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_0
       %3880 = OpLoad %float %3879
       %3881 = OpFMul %float %3880 %1738
       %3882 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_1
       %3883 = OpLoad %float %3882
       %3884 = OpFMul %float %3883 %1738
       %3885 = OpFNegate %float %3884
       %3886 = OpExtInst %float %1 Fma %3880 %1738 %3885
       %3887 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_2
       %3888 = OpLoad %float %3887
       %3889 = OpCompositeConstruct %v3float %3888 %3888 %3888
       %3890 = OpFMul %v3float %604 %3889
       %3891 = OpFMul %v3float %3889 %655
       %3892 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_59 %int_3
       %3893 = OpLoad %float %3892
       %3894 = OpCompositeConstruct %v3float %3893 %3893 %3893
       %3895 = OpFMul %v3float %3890 %3894
       %3896 = OpFMul %v3float %3891 %3894
       %3897 = OpFMul %v3float %3896 %3599
       %3898 = OpCompositeExtract %float %3897 0
       %3899 = OpCompositeExtract %float %3897 1
       %3900 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_60 %int_1
       %3901 = OpLoad %float %3900
       %3902 = OpFMul %float %1174 %3901
       %3903 = OpCompositeExtract %float %3897 2
       %3904 = OpCompositeConstruct %v2float %3902 %3902
       %3905 = OpCompositeConstruct %v2float %3903 %3903
       %3906 = OpFAdd %v2float %3904 %3905
       %3907 = OpCompositeExtract %float %3906 0
       %3908 = OpCompositeConstruct %v3float %3898 %3899 %3907
       %3909 = OpVectorTimesScalar %v3float %3908 %float_4_76837158en07
       %3910 = OpFAdd %v3float %3909 %143
       %3911 = OpExtInst %v3float %1 Fma %3895 %3599 %3910
       %3912 = OpExtInst %v3float %1 Floor %3911
       %3913 = OpFNegate %v3float %3912
       %3914 = OpExtInst %v3float %1 Fma %3895 %3599 %3913
       %3915 = OpVectorTimesScalar %v3float %3914 %float_2097152
       %3916 = OpFAdd %v3float %3915 %3908
       %3917 = OpVectorTimesScalar %v3float %3916 %float_1
               OpBranch %3918
       %3918 = OpLabel
       %3919 = OpPhi %v3float %3917 %3632 %3920 %3921
       %3922 = OpPhi %float %float_1 %3632 %3923 %3921
       %3924 = OpPhi %float %float_0 %3632 %3925 %3921
       %3926 = OpPhi %uint %uint_0 %3632 %3927 %3921
       %3928 = OpULessThan %bool %3926 %uint_10
               OpLoopMerge %3929 %3921 DontUnroll
               OpBranchConditional %3928 %3921 %3929
       %3921 = OpLabel
       %3930 = OpExtInst %v3float %1 Fract %3919
       %3931 = OpExtInst %v3float %1 Floor %3919
       %3932 = OpDot %float %3931 %397
       %3933 = OpFAdd %float %3932 %float_19
       %3934 = OpFAdd %float %3932 %float_47
       %3935 = OpFAdd %float %3932 %float_66
       %3936 = OpFAdd %float %3932 %float_101
       %3937 = OpFAdd %float %3932 %float_120
       %3938 = OpFAdd %float %3932 %float_148
       %3939 = OpFAdd %float %3932 %float_167
       %3940 = OpConvertFToS %int %3932
       %3941 = OpCompositeConstruct %v3int %3940 %int_0 %int_0
       %3942 = OpBitcast %v3uint %3941
       %3943 = OpIMul %v3uint %3942 %413
       %3944 = OpIAdd %v3uint %3943 %415
       %3945 = OpCompositeExtract %uint %3944 1
       %3946 = OpCompositeExtract %uint %3944 2
       %3947 = OpIMul %uint %3945 %3946
       %3948 = OpCompositeExtract %uint %3944 0
       %3949 = OpIAdd %uint %3948 %3947
       %3950 = OpIMul %uint %3946 %3949
       %3951 = OpIAdd %uint %3945 %3950
       %3952 = OpIMul %uint %3949 %3951
       %3953 = OpIAdd %uint %3946 %3952
       %3954 = OpIMul %uint %3951 %3953
       %3955 = OpIAdd %uint %3949 %3954
       %3956 = OpCompositeInsert %v3uint %3955 %561 0
       %3957 = OpBitwiseAnd %v3uint %416 %417
       %3958 = OpShiftRightLogical %v3uint %3956 %3957
       %3959 = OpCompositeExtract %uint %3958 0
       %3960 = OpCompositeConstruct %v3uint %3959 %3959 %3959
       %3961 = OpBitwiseAnd %v3uint %3960 %398
       %3962 = OpConvertUToF %v3float %3961
       %3963 = OpExtInst %v3float %1 Fma %3962 %402 %287
       %3964 = OpDot %float %3963 %3930
       %3965 = OpConvertFToS %int %3933
       %3966 = OpFSub %v3float %3930 %362
       %3967 = OpCompositeConstruct %v3int %3965 %int_0 %int_0
       %3968 = OpBitcast %v3uint %3967
       %3969 = OpIMul %v3uint %3968 %413
       %3970 = OpIAdd %v3uint %3969 %415
       %3971 = OpCompositeExtract %uint %3970 1
       %3972 = OpCompositeExtract %uint %3970 2
       %3973 = OpIMul %uint %3971 %3972
       %3974 = OpCompositeExtract %uint %3970 0
       %3975 = OpIAdd %uint %3974 %3973
       %3976 = OpIMul %uint %3972 %3975
       %3977 = OpIAdd %uint %3971 %3976
       %3978 = OpIMul %uint %3975 %3977
       %3979 = OpIAdd %uint %3972 %3978
       %3980 = OpIMul %uint %3977 %3979
       %3981 = OpIAdd %uint %3975 %3980
       %3982 = OpCompositeInsert %v3uint %3981 %561 0
       %3983 = OpShiftRightLogical %v3uint %3982 %3957
       %3984 = OpCompositeExtract %uint %3983 0
       %3985 = OpCompositeConstruct %v3uint %3984 %3984 %3984
       %3986 = OpBitwiseAnd %v3uint %3985 %398
       %3987 = OpConvertUToF %v3float %3986
       %3988 = OpExtInst %v3float %1 Fma %3987 %402 %287
       %3989 = OpDot %float %3988 %3966
       %3990 = OpConvertFToS %int %3934
       %3991 = OpFSub %v3float %3930 %363
       %3992 = OpCompositeConstruct %v3int %3990 %int_0 %int_0
       %3993 = OpBitcast %v3uint %3992
       %3994 = OpIMul %v3uint %3993 %413
       %3995 = OpIAdd %v3uint %3994 %415
       %3996 = OpCompositeExtract %uint %3995 1
       %3997 = OpCompositeExtract %uint %3995 2
       %3998 = OpIMul %uint %3996 %3997
       %3999 = OpCompositeExtract %uint %3995 0
       %4000 = OpIAdd %uint %3999 %3998
       %4001 = OpIMul %uint %3997 %4000
       %4002 = OpIAdd %uint %3996 %4001
       %4003 = OpIMul %uint %4000 %4002
       %4004 = OpIAdd %uint %3997 %4003
       %4005 = OpIMul %uint %4002 %4004
       %4006 = OpIAdd %uint %4000 %4005
       %4007 = OpCompositeInsert %v3uint %4006 %561 0
       %4008 = OpShiftRightLogical %v3uint %4007 %3957
       %4009 = OpCompositeExtract %uint %4008 0
       %4010 = OpCompositeConstruct %v3uint %4009 %4009 %4009
       %4011 = OpBitwiseAnd %v3uint %4010 %398
       %4012 = OpConvertUToF %v3float %4011
       %4013 = OpExtInst %v3float %1 Fma %4012 %402 %287
       %4014 = OpDot %float %4013 %3991
       %4015 = OpConvertFToS %int %3935
       %4016 = OpFSub %v3float %3930 %140
       %4017 = OpCompositeConstruct %v3int %4015 %int_0 %int_0
       %4018 = OpBitcast %v3uint %4017
       %4019 = OpIMul %v3uint %4018 %413
       %4020 = OpIAdd %v3uint %4019 %415
       %4021 = OpCompositeExtract %uint %4020 1
       %4022 = OpCompositeExtract %uint %4020 2
       %4023 = OpIMul %uint %4021 %4022
       %4024 = OpCompositeExtract %uint %4020 0
       %4025 = OpIAdd %uint %4024 %4023
       %4026 = OpIMul %uint %4022 %4025
       %4027 = OpIAdd %uint %4021 %4026
       %4028 = OpIMul %uint %4025 %4027
       %4029 = OpIAdd %uint %4022 %4028
       %4030 = OpIMul %uint %4027 %4029
       %4031 = OpIAdd %uint %4025 %4030
       %4032 = OpCompositeInsert %v3uint %4031 %561 0
       %4033 = OpShiftRightLogical %v3uint %4032 %3957
       %4034 = OpCompositeExtract %uint %4033 0
       %4035 = OpCompositeConstruct %v3uint %4034 %4034 %4034
       %4036 = OpBitwiseAnd %v3uint %4035 %398
       %4037 = OpConvertUToF %v3float %4036
       %4038 = OpExtInst %v3float %1 Fma %4037 %402 %287
       %4039 = OpDot %float %4038 %4016
       %4040 = OpConvertFToS %int %3936
       %4041 = OpFSub %v3float %3930 %299
       %4042 = OpCompositeConstruct %v3int %4040 %int_0 %int_0
       %4043 = OpBitcast %v3uint %4042
       %4044 = OpIMul %v3uint %4043 %413
       %4045 = OpIAdd %v3uint %4044 %415
       %4046 = OpCompositeExtract %uint %4045 1
       %4047 = OpCompositeExtract %uint %4045 2
       %4048 = OpIMul %uint %4046 %4047
       %4049 = OpCompositeExtract %uint %4045 0
       %4050 = OpIAdd %uint %4049 %4048
       %4051 = OpIMul %uint %4047 %4050
       %4052 = OpIAdd %uint %4046 %4051
       %4053 = OpIMul %uint %4050 %4052
       %4054 = OpIAdd %uint %4047 %4053
       %4055 = OpIMul %uint %4052 %4054
       %4056 = OpIAdd %uint %4050 %4055
       %4057 = OpCompositeInsert %v3uint %4056 %561 0
       %4058 = OpShiftRightLogical %v3uint %4057 %3957
       %4059 = OpCompositeExtract %uint %4058 0
       %4060 = OpCompositeConstruct %v3uint %4059 %4059 %4059
       %4061 = OpBitwiseAnd %v3uint %4060 %398
       %4062 = OpConvertUToF %v3float %4061
       %4063 = OpExtInst %v3float %1 Fma %4062 %402 %287
       %4064 = OpDot %float %4063 %4041
       %4065 = OpConvertFToS %int %3937
       %4066 = OpFSub %v3float %3930 %146
       %4067 = OpCompositeConstruct %v3int %4065 %int_0 %int_0
       %4068 = OpBitcast %v3uint %4067
       %4069 = OpIMul %v3uint %4068 %413
       %4070 = OpIAdd %v3uint %4069 %415
       %4071 = OpCompositeExtract %uint %4070 1
       %4072 = OpCompositeExtract %uint %4070 2
       %4073 = OpIMul %uint %4071 %4072
       %4074 = OpCompositeExtract %uint %4070 0
       %4075 = OpIAdd %uint %4074 %4073
       %4076 = OpIMul %uint %4072 %4075
       %4077 = OpIAdd %uint %4071 %4076
       %4078 = OpIMul %uint %4075 %4077
       %4079 = OpIAdd %uint %4072 %4078
       %4080 = OpIMul %uint %4077 %4079
       %4081 = OpIAdd %uint %4075 %4080
       %4082 = OpCompositeInsert %v3uint %4081 %561 0
       %4083 = OpShiftRightLogical %v3uint %4082 %3957
       %4084 = OpCompositeExtract %uint %4083 0
       %4085 = OpCompositeConstruct %v3uint %4084 %4084 %4084
       %4086 = OpBitwiseAnd %v3uint %4085 %398
       %4087 = OpConvertUToF %v3float %4086
       %4088 = OpExtInst %v3float %1 Fma %4087 %402 %287
       %4089 = OpDot %float %4088 %4066
       %4090 = OpConvertFToS %int %3938
       %4091 = OpFSub %v3float %3930 %141
       %4092 = OpCompositeConstruct %v3int %4090 %int_0 %int_0
       %4093 = OpBitcast %v3uint %4092
       %4094 = OpIMul %v3uint %4093 %413
       %4095 = OpIAdd %v3uint %4094 %415
       %4096 = OpCompositeExtract %uint %4095 1
       %4097 = OpCompositeExtract %uint %4095 2
       %4098 = OpIMul %uint %4096 %4097
       %4099 = OpCompositeExtract %uint %4095 0
       %4100 = OpIAdd %uint %4099 %4098
       %4101 = OpIMul %uint %4097 %4100
       %4102 = OpIAdd %uint %4096 %4101
       %4103 = OpIMul %uint %4100 %4102
       %4104 = OpIAdd %uint %4097 %4103
       %4105 = OpIMul %uint %4102 %4104
       %4106 = OpIAdd %uint %4100 %4105
       %4107 = OpCompositeInsert %v3uint %4106 %561 0
       %4108 = OpShiftRightLogical %v3uint %4107 %3957
       %4109 = OpCompositeExtract %uint %4108 0
       %4110 = OpCompositeConstruct %v3uint %4109 %4109 %4109
       %4111 = OpBitwiseAnd %v3uint %4110 %398
       %4112 = OpConvertUToF %v3float %4111
       %4113 = OpExtInst %v3float %1 Fma %4112 %402 %287
       %4114 = OpDot %float %4113 %4091
       %4115 = OpConvertFToS %int %3939
       %4116 = OpFSub %v3float %3930 %134
       %4117 = OpCompositeConstruct %v3int %4115 %int_0 %int_0
       %4118 = OpBitcast %v3uint %4117
       %4119 = OpIMul %v3uint %4118 %413
       %4120 = OpIAdd %v3uint %4119 %415
       %4121 = OpCompositeExtract %uint %4120 1
       %4122 = OpCompositeExtract %uint %4120 2
       %4123 = OpIMul %uint %4121 %4122
       %4124 = OpCompositeExtract %uint %4120 0
       %4125 = OpIAdd %uint %4124 %4123
       %4126 = OpIMul %uint %4122 %4125
       %4127 = OpIAdd %uint %4121 %4126
       %4128 = OpIMul %uint %4125 %4127
       %4129 = OpIAdd %uint %4122 %4128
       %4130 = OpIMul %uint %4127 %4129
       %4131 = OpIAdd %uint %4125 %4130
       %4132 = OpCompositeInsert %v3uint %4131 %561 0
       %4133 = OpShiftRightLogical %v3uint %4132 %3957
       %4134 = OpCompositeExtract %uint %4133 0
       %4135 = OpCompositeConstruct %v3uint %4134 %4134 %4134
       %4136 = OpBitwiseAnd %v3uint %4135 %398
       %4137 = OpConvertUToF %v3float %4136
       %4138 = OpExtInst %v3float %1 Fma %4137 %402 %287
       %4139 = OpDot %float %4138 %4116
       %4140 = OpCompositeExtract %float %3930 0
       %4141 = OpCompositeExtract %float %3930 1
       %4142 = OpCompositeExtract %float %3930 2
       %4143 = OpCompositeConstruct %v4float %4140 %4141 %4142 %float_0
       %4144 = OpFMul %v4float %4143 %4143
       %4145 = OpFMul %v4float %4144 %4143
       %4146 = OpVectorTimesScalar %v4float %4143 %float_6
       %4147 = OpFSub %v4float %4146 %393
       %4148 = OpExtInst %v4float %1 Fma %4143 %4147 %394
       %4149 = OpFMul %v4float %4145 %4148
       %4150 = OpCompositeExtract %float %4149 0
       %4151 = OpExtInst %float %1 FMix %3964 %3989 %4150
       %4152 = OpExtInst %float %1 FMix %4014 %4039 %4150
       %4153 = OpCompositeExtract %float %4149 1
       %4154 = OpExtInst %float %1 FMix %4151 %4152 %4153
       %4155 = OpExtInst %float %1 FMix %4064 %4089 %4150
       %4156 = OpExtInst %float %1 FMix %4114 %4139 %4150
       %4157 = OpExtInst %float %1 FMix %4155 %4156 %4153
       %4158 = OpCompositeExtract %float %4149 2
       %4159 = OpExtInst %float %1 FMix %4154 %4157 %4158
       %4160 = OpExtInst %float %1 FAbs %4159
       %3925 = OpExtInst %float %1 Fma %4160 %3922 %3924
       %3920 = OpVectorTimesScalar %v3float %3919 %float_2
       %3923 = OpFMul %float %3922 %float_0_5
       %3927 = OpIAdd %uint %3926 %uint_1
               OpBranch %3918
       %3929 = OpLabel
       %4161 = OpExtInst %float %1 FMix %float_0 %float_1 %3924
       %4162 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_60 %int_2
       %4163 = OpLoad %float %4162
       %4164 = OpCompositeConstruct %v3float %4163 %4163 %4163
       %4165 = OpFMul %v3float %604 %4164
       %4166 = OpFMul %v3float %4164 %655
       %4167 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_60 %int_3
       %4168 = OpLoad %float %4167
       %4169 = OpCompositeConstruct %v3float %4168 %4168 %4168
       %4170 = OpFMul %v3float %4165 %4169
       %4171 = OpFMul %v3float %4166 %4169
       %4172 = OpFMul %v3float %4171 %3599
       %4173 = OpCompositeExtract %float %4172 0
       %4174 = OpCompositeExtract %float %4172 1
       %4175 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_61 %int_1
       %4176 = OpLoad %float %4175
       %4177 = OpFMul %float %1174 %4176
       %4178 = OpCompositeExtract %float %4172 2
       %4179 = OpCompositeConstruct %v2float %4177 %4177
       %4180 = OpCompositeConstruct %v2float %4178 %4178
       %4181 = OpFAdd %v2float %4179 %4180
       %4182 = OpCompositeExtract %float %4181 0
       %4183 = OpCompositeConstruct %v3float %4173 %4174 %4182
       %4184 = OpVectorTimesScalar %v3float %4183 %float_4_76837158en07
       %4185 = OpFAdd %v3float %4184 %143
       %4186 = OpExtInst %v3float %1 Fma %4170 %3599 %4185
       %4187 = OpExtInst %v3float %1 Floor %4186
       %4188 = OpFNegate %v3float %4187
       %4189 = OpExtInst %v3float %1 Fma %4170 %3599 %4188
       %4190 = OpVectorTimesScalar %v3float %4189 %float_2097152
       %4191 = OpFAdd %v3float %4190 %4183
       %4192 = OpVectorTimesScalar %v3float %4191 %float_1
               OpBranch %4193
       %4193 = OpLabel
       %4194 = OpPhi %v3float %4192 %3929 %4195 %4196
       %4197 = OpPhi %float %float_1 %3929 %4198 %4196
       %4199 = OpPhi %float %float_0 %3929 %4200 %4196
       %4201 = OpPhi %uint %uint_0 %3929 %4202 %4196
       %4203 = OpULessThan %bool %4201 %uint_10
               OpLoopMerge %4204 %4196 DontUnroll
               OpBranchConditional %4203 %4196 %4204
       %4196 = OpLabel
       %4205 = OpExtInst %v3float %1 Fract %4194
       %4206 = OpExtInst %v3float %1 Floor %4194
       %4207 = OpDot %float %4206 %397
       %4208 = OpFAdd %float %4207 %float_19
       %4209 = OpFAdd %float %4207 %float_47
       %4210 = OpFAdd %float %4207 %float_66
       %4211 = OpFAdd %float %4207 %float_101
       %4212 = OpFAdd %float %4207 %float_120
       %4213 = OpFAdd %float %4207 %float_148
       %4214 = OpFAdd %float %4207 %float_167
       %4215 = OpConvertFToS %int %4207
       %4216 = OpCompositeConstruct %v3int %4215 %int_0 %int_0
       %4217 = OpBitcast %v3uint %4216
       %4218 = OpIMul %v3uint %4217 %413
       %4219 = OpIAdd %v3uint %4218 %415
       %4220 = OpCompositeExtract %uint %4219 1
       %4221 = OpCompositeExtract %uint %4219 2
       %4222 = OpIMul %uint %4220 %4221
       %4223 = OpCompositeExtract %uint %4219 0
       %4224 = OpIAdd %uint %4223 %4222
       %4225 = OpIMul %uint %4221 %4224
       %4226 = OpIAdd %uint %4220 %4225
       %4227 = OpIMul %uint %4224 %4226
       %4228 = OpIAdd %uint %4221 %4227
       %4229 = OpIMul %uint %4226 %4228
       %4230 = OpIAdd %uint %4224 %4229
       %4231 = OpCompositeInsert %v3uint %4230 %561 0
       %4232 = OpBitwiseAnd %v3uint %416 %417
       %4233 = OpShiftRightLogical %v3uint %4231 %4232
       %4234 = OpCompositeExtract %uint %4233 0
       %4235 = OpCompositeConstruct %v3uint %4234 %4234 %4234
       %4236 = OpBitwiseAnd %v3uint %4235 %398
       %4237 = OpConvertUToF %v3float %4236
       %4238 = OpExtInst %v3float %1 Fma %4237 %402 %287
       %4239 = OpDot %float %4238 %4205
       %4240 = OpConvertFToS %int %4208
       %4241 = OpFSub %v3float %4205 %362
       %4242 = OpCompositeConstruct %v3int %4240 %int_0 %int_0
       %4243 = OpBitcast %v3uint %4242
       %4244 = OpIMul %v3uint %4243 %413
       %4245 = OpIAdd %v3uint %4244 %415
       %4246 = OpCompositeExtract %uint %4245 1
       %4247 = OpCompositeExtract %uint %4245 2
       %4248 = OpIMul %uint %4246 %4247
       %4249 = OpCompositeExtract %uint %4245 0
       %4250 = OpIAdd %uint %4249 %4248
       %4251 = OpIMul %uint %4247 %4250
       %4252 = OpIAdd %uint %4246 %4251
       %4253 = OpIMul %uint %4250 %4252
       %4254 = OpIAdd %uint %4247 %4253
       %4255 = OpIMul %uint %4252 %4254
       %4256 = OpIAdd %uint %4250 %4255
       %4257 = OpCompositeInsert %v3uint %4256 %561 0
       %4258 = OpShiftRightLogical %v3uint %4257 %4232
       %4259 = OpCompositeExtract %uint %4258 0
       %4260 = OpCompositeConstruct %v3uint %4259 %4259 %4259
       %4261 = OpBitwiseAnd %v3uint %4260 %398
       %4262 = OpConvertUToF %v3float %4261
       %4263 = OpExtInst %v3float %1 Fma %4262 %402 %287
       %4264 = OpDot %float %4263 %4241
       %4265 = OpConvertFToS %int %4209
       %4266 = OpFSub %v3float %4205 %363
       %4267 = OpCompositeConstruct %v3int %4265 %int_0 %int_0
       %4268 = OpBitcast %v3uint %4267
       %4269 = OpIMul %v3uint %4268 %413
       %4270 = OpIAdd %v3uint %4269 %415
       %4271 = OpCompositeExtract %uint %4270 1
       %4272 = OpCompositeExtract %uint %4270 2
       %4273 = OpIMul %uint %4271 %4272
       %4274 = OpCompositeExtract %uint %4270 0
       %4275 = OpIAdd %uint %4274 %4273
       %4276 = OpIMul %uint %4272 %4275
       %4277 = OpIAdd %uint %4271 %4276
       %4278 = OpIMul %uint %4275 %4277
       %4279 = OpIAdd %uint %4272 %4278
       %4280 = OpIMul %uint %4277 %4279
       %4281 = OpIAdd %uint %4275 %4280
       %4282 = OpCompositeInsert %v3uint %4281 %561 0
       %4283 = OpShiftRightLogical %v3uint %4282 %4232
       %4284 = OpCompositeExtract %uint %4283 0
       %4285 = OpCompositeConstruct %v3uint %4284 %4284 %4284
       %4286 = OpBitwiseAnd %v3uint %4285 %398
       %4287 = OpConvertUToF %v3float %4286
       %4288 = OpExtInst %v3float %1 Fma %4287 %402 %287
       %4289 = OpDot %float %4288 %4266
       %4290 = OpConvertFToS %int %4210
       %4291 = OpFSub %v3float %4205 %140
       %4292 = OpCompositeConstruct %v3int %4290 %int_0 %int_0
       %4293 = OpBitcast %v3uint %4292
       %4294 = OpIMul %v3uint %4293 %413
       %4295 = OpIAdd %v3uint %4294 %415
       %4296 = OpCompositeExtract %uint %4295 1
       %4297 = OpCompositeExtract %uint %4295 2
       %4298 = OpIMul %uint %4296 %4297
       %4299 = OpCompositeExtract %uint %4295 0
       %4300 = OpIAdd %uint %4299 %4298
       %4301 = OpIMul %uint %4297 %4300
       %4302 = OpIAdd %uint %4296 %4301
       %4303 = OpIMul %uint %4300 %4302
       %4304 = OpIAdd %uint %4297 %4303
       %4305 = OpIMul %uint %4302 %4304
       %4306 = OpIAdd %uint %4300 %4305
       %4307 = OpCompositeInsert %v3uint %4306 %561 0
       %4308 = OpShiftRightLogical %v3uint %4307 %4232
       %4309 = OpCompositeExtract %uint %4308 0
       %4310 = OpCompositeConstruct %v3uint %4309 %4309 %4309
       %4311 = OpBitwiseAnd %v3uint %4310 %398
       %4312 = OpConvertUToF %v3float %4311
       %4313 = OpExtInst %v3float %1 Fma %4312 %402 %287
       %4314 = OpDot %float %4313 %4291
       %4315 = OpConvertFToS %int %4211
       %4316 = OpFSub %v3float %4205 %299
       %4317 = OpCompositeConstruct %v3int %4315 %int_0 %int_0
       %4318 = OpBitcast %v3uint %4317
       %4319 = OpIMul %v3uint %4318 %413
       %4320 = OpIAdd %v3uint %4319 %415
       %4321 = OpCompositeExtract %uint %4320 1
       %4322 = OpCompositeExtract %uint %4320 2
       %4323 = OpIMul %uint %4321 %4322
       %4324 = OpCompositeExtract %uint %4320 0
       %4325 = OpIAdd %uint %4324 %4323
       %4326 = OpIMul %uint %4322 %4325
       %4327 = OpIAdd %uint %4321 %4326
       %4328 = OpIMul %uint %4325 %4327
       %4329 = OpIAdd %uint %4322 %4328
       %4330 = OpIMul %uint %4327 %4329
       %4331 = OpIAdd %uint %4325 %4330
       %4332 = OpCompositeInsert %v3uint %4331 %561 0
       %4333 = OpShiftRightLogical %v3uint %4332 %4232
       %4334 = OpCompositeExtract %uint %4333 0
       %4335 = OpCompositeConstruct %v3uint %4334 %4334 %4334
       %4336 = OpBitwiseAnd %v3uint %4335 %398
       %4337 = OpConvertUToF %v3float %4336
       %4338 = OpExtInst %v3float %1 Fma %4337 %402 %287
       %4339 = OpDot %float %4338 %4316
       %4340 = OpConvertFToS %int %4212
       %4341 = OpFSub %v3float %4205 %146
       %4342 = OpCompositeConstruct %v3int %4340 %int_0 %int_0
       %4343 = OpBitcast %v3uint %4342
       %4344 = OpIMul %v3uint %4343 %413
       %4345 = OpIAdd %v3uint %4344 %415
       %4346 = OpCompositeExtract %uint %4345 1
       %4347 = OpCompositeExtract %uint %4345 2
       %4348 = OpIMul %uint %4346 %4347
       %4349 = OpCompositeExtract %uint %4345 0
       %4350 = OpIAdd %uint %4349 %4348
       %4351 = OpIMul %uint %4347 %4350
       %4352 = OpIAdd %uint %4346 %4351
       %4353 = OpIMul %uint %4350 %4352
       %4354 = OpIAdd %uint %4347 %4353
       %4355 = OpIMul %uint %4352 %4354
       %4356 = OpIAdd %uint %4350 %4355
       %4357 = OpCompositeInsert %v3uint %4356 %561 0
       %4358 = OpShiftRightLogical %v3uint %4357 %4232
       %4359 = OpCompositeExtract %uint %4358 0
       %4360 = OpCompositeConstruct %v3uint %4359 %4359 %4359
       %4361 = OpBitwiseAnd %v3uint %4360 %398
       %4362 = OpConvertUToF %v3float %4361
       %4363 = OpExtInst %v3float %1 Fma %4362 %402 %287
       %4364 = OpDot %float %4363 %4341
       %4365 = OpConvertFToS %int %4213
       %4366 = OpFSub %v3float %4205 %141
       %4367 = OpCompositeConstruct %v3int %4365 %int_0 %int_0
       %4368 = OpBitcast %v3uint %4367
       %4369 = OpIMul %v3uint %4368 %413
       %4370 = OpIAdd %v3uint %4369 %415
       %4371 = OpCompositeExtract %uint %4370 1
       %4372 = OpCompositeExtract %uint %4370 2
       %4373 = OpIMul %uint %4371 %4372
       %4374 = OpCompositeExtract %uint %4370 0
       %4375 = OpIAdd %uint %4374 %4373
       %4376 = OpIMul %uint %4372 %4375
       %4377 = OpIAdd %uint %4371 %4376
       %4378 = OpIMul %uint %4375 %4377
       %4379 = OpIAdd %uint %4372 %4378
       %4380 = OpIMul %uint %4377 %4379
       %4381 = OpIAdd %uint %4375 %4380
       %4382 = OpCompositeInsert %v3uint %4381 %561 0
       %4383 = OpShiftRightLogical %v3uint %4382 %4232
       %4384 = OpCompositeExtract %uint %4383 0
       %4385 = OpCompositeConstruct %v3uint %4384 %4384 %4384
       %4386 = OpBitwiseAnd %v3uint %4385 %398
       %4387 = OpConvertUToF %v3float %4386
       %4388 = OpExtInst %v3float %1 Fma %4387 %402 %287
       %4389 = OpDot %float %4388 %4366
       %4390 = OpConvertFToS %int %4214
       %4391 = OpFSub %v3float %4205 %134
       %4392 = OpCompositeConstruct %v3int %4390 %int_0 %int_0
       %4393 = OpBitcast %v3uint %4392
       %4394 = OpIMul %v3uint %4393 %413
       %4395 = OpIAdd %v3uint %4394 %415
       %4396 = OpCompositeExtract %uint %4395 1
       %4397 = OpCompositeExtract %uint %4395 2
       %4398 = OpIMul %uint %4396 %4397
       %4399 = OpCompositeExtract %uint %4395 0
       %4400 = OpIAdd %uint %4399 %4398
       %4401 = OpIMul %uint %4397 %4400
       %4402 = OpIAdd %uint %4396 %4401
       %4403 = OpIMul %uint %4400 %4402
       %4404 = OpIAdd %uint %4397 %4403
       %4405 = OpIMul %uint %4402 %4404
       %4406 = OpIAdd %uint %4400 %4405
       %4407 = OpCompositeInsert %v3uint %4406 %561 0
       %4408 = OpShiftRightLogical %v3uint %4407 %4232
       %4409 = OpCompositeExtract %uint %4408 0
       %4410 = OpCompositeConstruct %v3uint %4409 %4409 %4409
       %4411 = OpBitwiseAnd %v3uint %4410 %398
       %4412 = OpConvertUToF %v3float %4411
       %4413 = OpExtInst %v3float %1 Fma %4412 %402 %287
       %4414 = OpDot %float %4413 %4391
       %4415 = OpCompositeExtract %float %4205 0
       %4416 = OpCompositeExtract %float %4205 1
       %4417 = OpCompositeExtract %float %4205 2
       %4418 = OpCompositeConstruct %v4float %4415 %4416 %4417 %float_0
       %4419 = OpFMul %v4float %4418 %4418
       %4420 = OpFMul %v4float %4419 %4418
       %4421 = OpVectorTimesScalar %v4float %4418 %float_6
       %4422 = OpFSub %v4float %4421 %393
       %4423 = OpExtInst %v4float %1 Fma %4418 %4422 %394
       %4424 = OpFMul %v4float %4420 %4423
       %4425 = OpCompositeExtract %float %4424 0
       %4426 = OpExtInst %float %1 FMix %4239 %4264 %4425
       %4427 = OpExtInst %float %1 FMix %4289 %4314 %4425
       %4428 = OpCompositeExtract %float %4424 1
       %4429 = OpExtInst %float %1 FMix %4426 %4427 %4428
       %4430 = OpExtInst %float %1 FMix %4339 %4364 %4425
       %4431 = OpExtInst %float %1 FMix %4389 %4414 %4425
       %4432 = OpExtInst %float %1 FMix %4430 %4431 %4428
       %4433 = OpCompositeExtract %float %4424 2
       %4434 = OpExtInst %float %1 FMix %4429 %4432 %4433
       %4435 = OpExtInst %float %1 FAbs %4434
       %4200 = OpExtInst %float %1 Fma %4435 %4197 %4199
       %4195 = OpVectorTimesScalar %v3float %4194 %float_2
       %4198 = OpFMul %float %4197 %float_0_5
       %4202 = OpIAdd %uint %4201 %uint_1
               OpBranch %4193
       %4204 = OpLabel
       %4436 = OpExtInst %float %1 FMix %float_0 %float_1 %4199
       %4437 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_61 %int_3
       %4438 = OpLoad %float %4437
       %4439 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_61 %int_2
       %4440 = OpLoad %float %4439
       %4441 = OpExtInst %float %1 Fma %4436 %4438 %4440
       %4442 = OpFMul %float %4161 %4441
       %4443 = OpExtInst %float %1 FMix %3881 %3886 %4442
       %4444 = OpExtInst %float %1 Sin %3878
       %4445 = OpFMul %float %4444 %4443
       %4446 = OpFAdd %v3float %3562 %2574
       %4447 = OpExtInst %v3float %1 NMax %4446 %287
       %4448 = OpExtInst %v3float %1 NMin %4447 %134
       %4449 = OpCompositeExtract %float %4448 0
       %4450 = OpCompositeExtract %float %4448 1
       %4451 = OpCompositeConstruct %v2float %4449 %4450
       %4452 = OpFMul %v2float %1709 %4451
       %4453 = OpFMul %v2float %4451 %1710
       %4454 = OpCompositeExtract %float %4452 0
       %4455 = OpCompositeExtract %float %4453 0
       %4456 = OpCompositeExtract %float %4452 1
       %4457 = OpCompositeExtract %float %4453 1
       %4458 = OpFAdd %float %4454 %4456
       %4459 = OpFAdd %float %4455 %4457
       %4460 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_15 %int_3
       %4461 = OpLoad %float %4460
       %4462 = OpFMul %float %3582 %4461
       %4463 = OpFDiv %float %float_2 %4462
       %4464 = OpFMul %float %4458 %4463
       %4465 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_1
       %4466 = OpLoad %float %4465
       %4467 = OpFMul %float %4463 %4466
       %4468 = OpFMul %float %4467 %3866
       %4469 = OpExtInst %float %1 Fma %4459 %4463 %4468
       %4470 = OpExtInst %float %1 Floor %4464
       %4471 = OpFNegate %float %4470
       %4472 = OpExtInst %float %1 Fma %4458 %4463 %4471
       %4473 = OpExtInst %float %1 Fma %4472 %float_2097152 %4469
       %4474 = OpExtInst %float %1 Floor %4473
       %4475 = OpFMul %float %4470 %float_n6_28318548
       %4476 = OpExtInst %float %1 Fma %4464 %float_6_28318548 %4475
       %4477 = OpFMul %float %4474 %float_n6_28318548
       %4478 = OpExtInst %float %1 Fma %4469 %float_6_28318548 %4477
       %4479 = OpExtInst %float %1 Fma %4476 %float_2097152 %4478
       %4480 = OpFMul %float %4443 %2607
       %4481 = OpExtInst %float %1 Sin %4479
       %4482 = OpFMul %float %4481 %4480
       %4483 = OpCompositeConstruct %v3float %560 %560 %4445
       %4484 = OpCompositeConstruct %v3float %560 %560 %4482
       %4485 = OpFAdd %v3float %4483 %4484
       %4486 = OpFSub %v3float %3562 %1701
       %4487 = OpExtInst %v3float %1 NMax %4486 %287
       %4488 = OpExtInst %v3float %1 NMin %4487 %134
       %4489 = OpCompositeExtract %float %4488 0
       %4490 = OpCompositeExtract %float %4488 1
       %4491 = OpCompositeConstruct %v2float %4489 %4490
       %4492 = OpFMul %v2float %1709 %4491
       %4493 = OpFMul %v2float %4491 %1710
       %4494 = OpCompositeExtract %float %4492 0
       %4495 = OpCompositeExtract %float %4493 0
       %4496 = OpCompositeExtract %float %4492 1
       %4497 = OpCompositeExtract %float %4493 1
       %4498 = OpFAdd %float %4494 %4496
       %4499 = OpFAdd %float %4495 %4497
       %4500 = OpFMul %float %4462 %4461
       %4501 = OpFDiv %float %float_2 %4500
       %4502 = OpFMul %float %4498 %4501
       %4503 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_62 %int_3
       %4504 = OpLoad %float %4503
       %4505 = OpFMul %float %4501 %4504
       %4506 = OpFMul %float %4505 %3866
       %4507 = OpExtInst %float %1 Fma %4499 %4501 %4506
       %4508 = OpExtInst %float %1 Floor %4502
       %4509 = OpFNegate %float %4508
       %4510 = OpExtInst %float %1 Fma %4498 %4501 %4509
       %4511 = OpExtInst %float %1 Fma %4510 %float_2097152 %4507
       %4512 = OpExtInst %float %1 Floor %4511
       %4513 = OpFMul %float %4508 %float_n6_28318548
       %4514 = OpExtInst %float %1 Fma %4502 %float_6_28318548 %4513
       %4515 = OpFMul %float %4512 %float_n6_28318548
       %4516 = OpExtInst %float %1 Fma %4507 %float_6_28318548 %4515
       %4517 = OpExtInst %float %1 Fma %4514 %float_2097152 %4516
       %4518 = OpFMul %float %4480 %2607
       %4519 = OpExtInst %float %1 Sin %4517
       %4520 = OpFMul %float %4519 %4518
       %4521 = OpCompositeConstruct %v3float %560 %560 %4520
       %4522 = OpFAdd %v3float %4485 %4521
       %4523 = OpFSub %v3float %3562 %2574
       %4524 = OpExtInst %v3float %1 NMax %4523 %287
       %4525 = OpExtInst %v3float %1 NMin %4524 %134
       %4526 = OpCompositeExtract %float %4525 0
       %4527 = OpCompositeExtract %float %4525 1
       %4528 = OpCompositeConstruct %v2float %4526 %4527
       %4529 = OpFMul %v2float %1709 %4528
       %4530 = OpFMul %v2float %4528 %1710
       %4531 = OpCompositeExtract %float %4529 0
       %4532 = OpCompositeExtract %float %4530 0
       %4533 = OpCompositeExtract %float %4529 1
       %4534 = OpCompositeExtract %float %4530 1
       %4535 = OpFAdd %float %4531 %4533
       %4536 = OpFAdd %float %4532 %4534
       %4537 = OpFMul %float %4500 %4461
       %4538 = OpFDiv %float %float_2 %4537
       %4539 = OpFMul %float %4535 %4538
       %4540 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_63 %int_1
       %4541 = OpLoad %float %4540
       %4542 = OpFMul %float %4538 %4541
       %4543 = OpFMul %float %4542 %3866
       %4544 = OpExtInst %float %1 Fma %4536 %4538 %4543
       %4545 = OpExtInst %float %1 Floor %4539
       %4546 = OpFNegate %float %4545
       %4547 = OpExtInst %float %1 Fma %4535 %4538 %4546
       %4548 = OpExtInst %float %1 Fma %4547 %float_2097152 %4544
       %4549 = OpExtInst %float %1 Floor %4548
       %4550 = OpFMul %float %4545 %float_n6_28318548
       %4551 = OpExtInst %float %1 Fma %4539 %float_6_28318548 %4550
       %4552 = OpFMul %float %4549 %float_n6_28318548
       %4553 = OpExtInst %float %1 Fma %4544 %float_6_28318548 %4552
       %4554 = OpExtInst %float %1 Fma %4551 %float_2097152 %4553
       %4555 = OpFMul %float %4518 %2607
       %4556 = OpExtInst %float %1 Sin %4554
       %4557 = OpFMul %float %4556 %4555
       %4558 = OpCompositeConstruct %v3float %560 %560 %4557
       %4559 = OpFAdd %v3float %4522 %4558
       %4560 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_0
       %4561 = OpLoad %float %4560
       %4562 = OpFSub %float %4561 %float_n1
       %4563 = OpExtInst %float %1 FAbs %4562
       %4564 = OpFOrdGreaterThan %bool %4563 %float_9_99999975en06
       %4565 = OpFOrdGreaterThanEqual %bool %4561 %float_n1
       %4566 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_1
       %4567 = OpLoad %float %4566
       %4568 = OpSelect %float %4565 %4561 %4567
       %4569 = OpSelect %float %4564 %4568 %4561
       %4570 = OpFSub %float %4569 %float_1
       %4571 = OpExtInst %float %1 FAbs %4570
       %4572 = OpFOrdGreaterThan %bool %4571 %float_9_99999975en06
       %4573 = OpFOrdGreaterThanEqual %bool %4569 %float_1
       %4574 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_64 %int_2
       %4575 = OpLoad %float %4574
       %4576 = OpSelect %float %4573 %4575 %4561
       %4577 = OpSelect %float %4572 %4576 %4561
       %4578 = OpExtInst %float %1 FAbs %4577
       %4579 = OpFOrdGreaterThan %bool %4578 %float_9_99999975en06
       %4580 = OpFOrdGreaterThanEqual %bool %4577 %float_0
       %4581 = OpSelect %float %4580 %float_1 %float_n1
       %4582 = OpSelect %float %4579 %4581 %float_1
       %4583 = OpExtInst %float %1 NMax %4582 %float_n1
       %4584 = OpExtInst %float %1 NMin %4583 %float_1
       %4585 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_65 %int_3
       %4586 = OpLoad %float %4585
       %4587 = OpCompositeConstruct %v3float %4584 %4586 %float_0
       %4588 = OpFAdd %v3float %4587 %1701
       %4589 = OpExtInst %v3float %1 NMax %4588 %287
       %4590 = OpExtInst %v3float %1 NMin %4589 %134
       %4591 = OpCompositeExtract %float %4590 0
       %4592 = OpCompositeExtract %float %4590 1
       %4593 = OpCompositeConstruct %v2float %4591 %4592
       %4594 = OpFMul %v2float %1709 %4593
       %4595 = OpFMul %v2float %4593 %1710
       %4596 = OpCompositeExtract %float %4594 0
       %4597 = OpCompositeExtract %float %4595 0
       %4598 = OpCompositeExtract %float %4594 1
       %4599 = OpCompositeExtract %float %4595 1
       %4600 = OpFAdd %float %4596 %4598
       %4601 = OpFAdd %float %4597 %4599
       %4602 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_23 %int_3
       %4603 = OpLoad %float %4602
       %4604 = OpFMul %float %3579 %4603
       %4605 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_0
       %4606 = OpLoad %float %4605
       %4607 = OpFMul %float %4606 %4604
       %4608 = OpFDiv %float %float_2 %4607
       %4609 = OpFMul %float %4600 %4608
       %4610 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_1
       %4611 = OpLoad %float %4610
       %4612 = OpFMul %float %4608 %4611
       %4613 = OpFMul %float %4612 %3866
       %4614 = OpExtInst %float %1 Fma %4601 %4608 %4613
       %4615 = OpExtInst %float %1 Floor %4609
       %4616 = OpFNegate %float %4615
       %4617 = OpExtInst %float %1 Fma %4600 %4608 %4616
       %4618 = OpExtInst %float %1 Fma %4617 %float_2097152 %4614
       %4619 = OpExtInst %float %1 Floor %4618
       %4620 = OpFMul %float %4615 %float_n6_28318548
       %4621 = OpExtInst %float %1 Fma %4609 %float_6_28318548 %4620
       %4622 = OpFMul %float %4619 %float_n6_28318548
       %4623 = OpExtInst %float %1 Fma %4614 %float_6_28318548 %4622
       %4624 = OpExtInst %float %1 Fma %4621 %float_2097152 %4623
       %4625 = OpFMul %float %4443 %2746
       %4626 = OpExtInst %float %1 Sin %4624
       %4627 = OpFMul %float %4626 %4625
       %4628 = OpFAdd %v3float %4587 %2574
       %4629 = OpExtInst %v3float %1 NMax %4628 %287
       %4630 = OpExtInst %v3float %1 NMin %4629 %134
       %4631 = OpCompositeExtract %float %4630 0
       %4632 = OpCompositeExtract %float %4630 1
       %4633 = OpCompositeConstruct %v2float %4631 %4632
       %4634 = OpFMul %v2float %1709 %4633
       %4635 = OpFMul %v2float %4633 %1710
       %4636 = OpCompositeExtract %float %4634 0
       %4637 = OpCompositeExtract %float %4635 0
       %4638 = OpCompositeExtract %float %4634 1
       %4639 = OpCompositeExtract %float %4635 1
       %4640 = OpFAdd %float %4636 %4638
       %4641 = OpFAdd %float %4637 %4639
       %4642 = OpFMul %float %4607 %4461
       %4643 = OpFDiv %float %float_2 %4642
       %4644 = OpFMul %float %4640 %4643
       %4645 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_2
       %4646 = OpLoad %float %4645
       %4647 = OpFMul %float %4643 %4646
       %4648 = OpFMul %float %4647 %3866
       %4649 = OpExtInst %float %1 Fma %4641 %4643 %4648
       %4650 = OpExtInst %float %1 Floor %4644
       %4651 = OpFNegate %float %4650
       %4652 = OpExtInst %float %1 Fma %4640 %4643 %4651
       %4653 = OpExtInst %float %1 Fma %4652 %float_2097152 %4649
       %4654 = OpExtInst %float %1 Floor %4653
       %4655 = OpFMul %float %4650 %float_n6_28318548
       %4656 = OpExtInst %float %1 Fma %4644 %float_6_28318548 %4655
       %4657 = OpFMul %float %4654 %float_n6_28318548
       %4658 = OpExtInst %float %1 Fma %4649 %float_6_28318548 %4657
       %4659 = OpExtInst %float %1 Fma %4656 %float_2097152 %4658
       %4660 = OpFMul %float %4625 %2607
       %4661 = OpExtInst %float %1 Sin %4659
       %4662 = OpFMul %float %4661 %4660
       %4663 = OpCompositeConstruct %v3float %560 %560 %4627
       %4664 = OpCompositeConstruct %v3float %560 %560 %4662
       %4665 = OpFAdd %v3float %4663 %4664
       %4666 = OpFSub %v3float %4587 %1701
       %4667 = OpExtInst %v3float %1 NMax %4666 %287
       %4668 = OpExtInst %v3float %1 NMin %4667 %134
       %4669 = OpCompositeExtract %float %4668 0
       %4670 = OpCompositeExtract %float %4668 1
       %4671 = OpCompositeConstruct %v2float %4669 %4670
       %4672 = OpFMul %v2float %1709 %4671
       %4673 = OpFMul %v2float %4671 %1710
       %4674 = OpCompositeExtract %float %4672 0
       %4675 = OpCompositeExtract %float %4673 0
       %4676 = OpCompositeExtract %float %4672 1
       %4677 = OpCompositeExtract %float %4673 1
       %4678 = OpFAdd %float %4674 %4676
       %4679 = OpFAdd %float %4675 %4677
       %4680 = OpFMul %float %4642 %4461
       %4681 = OpFDiv %float %float_2 %4680
       %4682 = OpFMul %float %4678 %4681
       %4683 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_67 %int_3
       %4684 = OpLoad %float %4683
       %4685 = OpFMul %float %4681 %4684
       %4686 = OpFMul %float %4685 %3866
       %4687 = OpExtInst %float %1 Fma %4679 %4681 %4686
       %4688 = OpExtInst %float %1 Floor %4682
       %4689 = OpFNegate %float %4688
       %4690 = OpExtInst %float %1 Fma %4678 %4681 %4689
       %4691 = OpExtInst %float %1 Fma %4690 %float_2097152 %4687
       %4692 = OpExtInst %float %1 Floor %4691
       %4693 = OpFMul %float %4688 %float_n6_28318548
       %4694 = OpExtInst %float %1 Fma %4682 %float_6_28318548 %4693
       %4695 = OpFMul %float %4692 %float_n6_28318548
       %4696 = OpExtInst %float %1 Fma %4687 %float_6_28318548 %4695
       %4697 = OpExtInst %float %1 Fma %4694 %float_2097152 %4696
       %4698 = OpFMul %float %4660 %2607
       %4699 = OpExtInst %float %1 Sin %4697
       %4700 = OpFMul %float %4699 %4698
       %4701 = OpCompositeConstruct %v3float %560 %560 %4700
       %4702 = OpFAdd %v3float %4665 %4701
       %4703 = OpFSub %v3float %4587 %2574
       %4704 = OpExtInst %v3float %1 NMax %4703 %287
       %4705 = OpExtInst %v3float %1 NMin %4704 %134
       %4706 = OpCompositeExtract %float %4705 0
       %4707 = OpCompositeExtract %float %4705 1
       %4708 = OpCompositeConstruct %v2float %4706 %4707
       %4709 = OpFMul %v2float %1709 %4708
       %4710 = OpFMul %v2float %4708 %1710
       %4711 = OpCompositeExtract %float %4709 0
       %4712 = OpCompositeExtract %float %4710 0
       %4713 = OpCompositeExtract %float %4709 1
       %4714 = OpCompositeExtract %float %4710 1
       %4715 = OpFAdd %float %4711 %4713
       %4716 = OpFAdd %float %4712 %4714
       %4717 = OpFMul %float %4680 %4461
       %4718 = OpFDiv %float %float_2 %4717
       %4719 = OpFMul %float %4715 %4718
       %4720 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_0
       %4721 = OpLoad %float %4720
       %4722 = OpFMul %float %4718 %4721
       %4723 = OpFMul %float %4722 %3866
       %4724 = OpExtInst %float %1 Fma %4716 %4718 %4723
       %4725 = OpExtInst %float %1 Floor %4719
       %4726 = OpFNegate %float %4725
       %4727 = OpExtInst %float %1 Fma %4715 %4718 %4726
       %4728 = OpExtInst %float %1 Fma %4727 %float_2097152 %4724
       %4729 = OpExtInst %float %1 Floor %4728
       %4730 = OpFMul %float %4725 %float_n6_28318548
       %4731 = OpExtInst %float %1 Fma %4719 %float_6_28318548 %4730
       %4732 = OpFMul %float %4729 %float_n6_28318548
       %4733 = OpExtInst %float %1 Fma %4724 %float_6_28318548 %4732
       %4734 = OpExtInst %float %1 Fma %4731 %float_2097152 %4733
       %4735 = OpFMul %float %4698 %2607
       %4736 = OpExtInst %float %1 Sin %4734
       %4737 = OpFMul %float %4736 %4735
       %4738 = OpCompositeConstruct %v3float %560 %560 %4737
       %4739 = OpFAdd %v3float %4702 %4738
       %4740 = OpFAdd %v3float %4559 %4739
       %4741 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_1
       %4742 = OpLoad %float %4741
       %4743 = OpFSub %float %4742 %float_n1
       %4744 = OpExtInst %float %1 FAbs %4743
       %4745 = OpFOrdGreaterThan %bool %4744 %float_9_99999975en06
       %4746 = OpFOrdGreaterThanEqual %bool %4742 %float_n1
       %4747 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_2
       %4748 = OpLoad %float %4747
       %4749 = OpSelect %float %4746 %4742 %4748
       %4750 = OpSelect %float %4745 %4749 %4742
       %4751 = OpFSub %float %4750 %float_1
       %4752 = OpExtInst %float %1 FAbs %4751
       %4753 = OpFOrdGreaterThan %bool %4752 %float_9_99999975en06
       %4754 = OpFOrdGreaterThanEqual %bool %4750 %float_1
       %4755 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_68 %int_3
       %4756 = OpLoad %float %4755
       %4757 = OpSelect %float %4754 %4756 %4742
       %4758 = OpSelect %float %4753 %4757 %4742
       %4759 = OpExtInst %float %1 FAbs %4758
       %4760 = OpFOrdGreaterThan %bool %4759 %float_9_99999975en06
       %4761 = OpFOrdGreaterThanEqual %bool %4758 %float_0
       %4762 = OpSelect %float %4761 %float_1 %float_n1
       %4763 = OpSelect %float %4760 %4762 %float_1
       %4764 = OpExtInst %float %1 NMax %4763 %float_n1
       %4765 = OpExtInst %float %1 NMin %4764 %float_1
       %4766 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_70 %int_0
       %4767 = OpLoad %float %4766
       %4768 = OpCompositeConstruct %v3float %4765 %4767 %float_0
       %4769 = OpFAdd %v3float %4768 %1701
       %4770 = OpExtInst %v3float %1 NMax %4769 %287
       %4771 = OpExtInst %v3float %1 NMin %4770 %134
       %4772 = OpCompositeExtract %float %4771 0
       %4773 = OpCompositeExtract %float %4771 1
       %4774 = OpCompositeConstruct %v2float %4772 %4773
       %4775 = OpFMul %v2float %1709 %4774
       %4776 = OpFMul %v2float %4774 %1710
       %4777 = OpCompositeExtract %float %4775 0
       %4778 = OpCompositeExtract %float %4776 0
       %4779 = OpCompositeExtract %float %4775 1
       %4780 = OpCompositeExtract %float %4776 1
       %4781 = OpFAdd %float %4777 %4779
       %4782 = OpFAdd %float %4778 %4780
       %4783 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_71 %int_1
       %4784 = OpLoad %float %4783
       %4785 = OpFMul %float %4784 %4604
       %4786 = OpFDiv %float %float_2 %4785
       %4787 = OpFMul %float %4781 %4786
       %4788 = OpFMul %float %4786 %4611
       %4789 = OpFMul %float %4788 %3866
       %4790 = OpExtInst %float %1 Fma %4782 %4786 %4789
       %4791 = OpExtInst %float %1 Floor %4787
       %4792 = OpFNegate %float %4791
       %4793 = OpExtInst %float %1 Fma %4781 %4786 %4792
       %4794 = OpExtInst %float %1 Fma %4793 %float_2097152 %4790
       %4795 = OpExtInst %float %1 Floor %4794
       %4796 = OpFMul %float %4791 %float_n6_28318548
       %4797 = OpExtInst %float %1 Fma %4787 %float_6_28318548 %4796
       %4798 = OpFMul %float %4795 %float_n6_28318548
       %4799 = OpExtInst %float %1 Fma %4790 %float_6_28318548 %4798
       %4800 = OpExtInst %float %1 Fma %4797 %float_2097152 %4799
       %4801 = OpExtInst %float %1 Sin %4800
       %4802 = OpFMul %float %4801 %4625
       %4803 = OpFAdd %v3float %4768 %2574
       %4804 = OpExtInst %v3float %1 NMax %4803 %287
       %4805 = OpExtInst %v3float %1 NMin %4804 %134
       %4806 = OpCompositeExtract %float %4805 0
       %4807 = OpCompositeExtract %float %4805 1
       %4808 = OpCompositeConstruct %v2float %4806 %4807
       %4809 = OpFMul %v2float %1709 %4808
       %4810 = OpFMul %v2float %4808 %1710
       %4811 = OpCompositeExtract %float %4809 0
       %4812 = OpCompositeExtract %float %4810 0
       %4813 = OpCompositeExtract %float %4809 1
       %4814 = OpCompositeExtract %float %4810 1
       %4815 = OpFAdd %float %4811 %4813
       %4816 = OpFAdd %float %4812 %4814
       %4817 = OpFMul %float %4785 %4461
       %4818 = OpFDiv %float %float_2 %4817
       %4819 = OpFMul %float %4815 %4818
       %4820 = OpFMul %float %4818 %4646
       %4821 = OpFMul %float %4820 %3866
       %4822 = OpExtInst %float %1 Fma %4816 %4818 %4821
       %4823 = OpExtInst %float %1 Floor %4819
       %4824 = OpFNegate %float %4823
       %4825 = OpExtInst %float %1 Fma %4815 %4818 %4824
       %4826 = OpExtInst %float %1 Fma %4825 %float_2097152 %4822
       %4827 = OpExtInst %float %1 Floor %4826
       %4828 = OpFMul %float %4823 %float_n6_28318548
       %4829 = OpExtInst %float %1 Fma %4819 %float_6_28318548 %4828
       %4830 = OpFMul %float %4827 %float_n6_28318548
       %4831 = OpExtInst %float %1 Fma %4822 %float_6_28318548 %4830
       %4832 = OpExtInst %float %1 Fma %4829 %float_2097152 %4831
       %4833 = OpExtInst %float %1 Sin %4832
       %4834 = OpFMul %float %4833 %4660
       %4835 = OpCompositeConstruct %v3float %560 %560 %4802
       %4836 = OpCompositeConstruct %v3float %560 %560 %4834
       %4837 = OpFAdd %v3float %4835 %4836
       %4838 = OpFSub %v3float %4768 %1701
       %4839 = OpExtInst %v3float %1 NMax %4838 %287
       %4840 = OpExtInst %v3float %1 NMin %4839 %134
       %4841 = OpCompositeExtract %float %4840 0
       %4842 = OpCompositeExtract %float %4840 1
       %4843 = OpCompositeConstruct %v2float %4841 %4842
       %4844 = OpFMul %v2float %1709 %4843
       %4845 = OpFMul %v2float %4843 %1710
       %4846 = OpCompositeExtract %float %4844 0
       %4847 = OpCompositeExtract %float %4845 0
       %4848 = OpCompositeExtract %float %4844 1
       %4849 = OpCompositeExtract %float %4845 1
       %4850 = OpFAdd %float %4846 %4848
       %4851 = OpFAdd %float %4847 %4849
       %4852 = OpFMul %float %4817 %4461
       %4853 = OpFDiv %float %float_2 %4852
       %4854 = OpFMul %float %4850 %4853
       %4855 = OpFMul %float %4853 %4684
       %4856 = OpFMul %float %4855 %3866
       %4857 = OpExtInst %float %1 Fma %4851 %4853 %4856
       %4858 = OpExtInst %float %1 Floor %4854
       %4859 = OpFNegate %float %4858
       %4860 = OpExtInst %float %1 Fma %4850 %4853 %4859
       %4861 = OpExtInst %float %1 Fma %4860 %float_2097152 %4857
       %4862 = OpExtInst %float %1 Floor %4861
       %4863 = OpFMul %float %4858 %float_n6_28318548
       %4864 = OpExtInst %float %1 Fma %4854 %float_6_28318548 %4863
       %4865 = OpFMul %float %4862 %float_n6_28318548
       %4866 = OpExtInst %float %1 Fma %4857 %float_6_28318548 %4865
       %4867 = OpExtInst %float %1 Fma %4864 %float_2097152 %4866
       %4868 = OpExtInst %float %1 Sin %4867
       %4869 = OpFMul %float %4868 %4698
       %4870 = OpCompositeConstruct %v3float %560 %560 %4869
       %4871 = OpFAdd %v3float %4837 %4870
       %4872 = OpFSub %v3float %4768 %2574
       %4873 = OpExtInst %v3float %1 NMax %4872 %287
       %4874 = OpExtInst %v3float %1 NMin %4873 %134
       %4875 = OpCompositeExtract %float %4874 0
       %4876 = OpCompositeExtract %float %4874 1
       %4877 = OpCompositeConstruct %v2float %4875 %4876
       %4878 = OpFMul %v2float %1709 %4877
       %4879 = OpFMul %v2float %4877 %1710
       %4880 = OpCompositeExtract %float %4878 0
       %4881 = OpCompositeExtract %float %4879 0
       %4882 = OpCompositeExtract %float %4878 1
       %4883 = OpCompositeExtract %float %4879 1
       %4884 = OpFAdd %float %4880 %4882
       %4885 = OpFAdd %float %4881 %4883
       %4886 = OpFMul %float %4852 %4461
       %4887 = OpFDiv %float %float_2 %4886
       %4888 = OpFMul %float %4884 %4887
       %4889 = OpFMul %float %4887 %4721
       %4890 = OpFMul %float %4889 %3866
       %4891 = OpExtInst %float %1 Fma %4885 %4887 %4890
       %4892 = OpExtInst %float %1 Floor %4888
       %4893 = OpFNegate %float %4892
       %4894 = OpExtInst %float %1 Fma %4884 %4887 %4893
       %4895 = OpExtInst %float %1 Fma %4894 %float_2097152 %4891
       %4896 = OpExtInst %float %1 Floor %4895
       %4897 = OpFMul %float %4892 %float_n6_28318548
       %4898 = OpExtInst %float %1 Fma %4888 %float_6_28318548 %4897
       %4899 = OpFMul %float %4896 %float_n6_28318548
       %4900 = OpExtInst %float %1 Fma %4891 %float_6_28318548 %4899
       %4901 = OpExtInst %float %1 Fma %4898 %float_2097152 %4900
       %4902 = OpExtInst %float %1 Sin %4901
       %4903 = OpFMul %float %4902 %4735
       %4904 = OpCompositeConstruct %v3float %560 %560 %4903
       %4905 = OpFAdd %v3float %4871 %4904
       %4906 = OpFAdd %v3float %4740 %4905
       %4907 = OpFMul %float %3579 %float_0_800000012
       %4908 = OpFMul %float %3581 %4907
       %4909 = OpFDiv %float %float_2 %4908
       %4910 = OpFMul %float %3575 %4909
       %4911 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_71 %int_2
       %4912 = OpLoad %float %4911
       %4913 = OpFMul %float %4909 %4912
       %4914 = OpFMul %float %4913 %3866
       %4915 = OpExtInst %float %1 Fma %3576 %4909 %4914
       %4916 = OpExtInst %float %1 Floor %4910
       %4917 = OpFNegate %float %4916
       %4918 = OpExtInst %float %1 Fma %3575 %4909 %4917
       %4919 = OpExtInst %float %1 Fma %4918 %float_2097152 %4915
       %4920 = OpExtInst %float %1 Floor %4919
       %4921 = OpFMul %float %4916 %float_n6_28318548
       %4922 = OpExtInst %float %1 Fma %4910 %float_6_28318548 %4921
       %4923 = OpFMul %float %4920 %float_n6_28318548
       %4924 = OpExtInst %float %1 Fma %4915 %float_6_28318548 %4923
       %4925 = OpExtInst %float %1 Fma %4922 %float_2097152 %4924
       %4926 = OpFMul %float %4443 %float_0_800000012
       %4927 = OpExtInst %float %1 Sin %4925
       %4928 = OpFMul %float %4927 %4926
       %4929 = OpFMul %float %4908 %4461
       %4930 = OpFDiv %float %float_2 %4929
       %4931 = OpFMul %float %4458 %4930
       %4932 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_71 %int_3
       %4933 = OpLoad %float %4932
       %4934 = OpFMul %float %4930 %4933
       %4935 = OpFMul %float %4934 %3866
       %4936 = OpExtInst %float %1 Fma %4459 %4930 %4935
       %4937 = OpExtInst %float %1 Floor %4931
       %4938 = OpFNegate %float %4937
       %4939 = OpExtInst %float %1 Fma %4458 %4930 %4938
       %4940 = OpExtInst %float %1 Fma %4939 %float_2097152 %4936
       %4941 = OpExtInst %float %1 Floor %4940
       %4942 = OpFMul %float %4937 %float_n6_28318548
       %4943 = OpExtInst %float %1 Fma %4931 %float_6_28318548 %4942
       %4944 = OpFMul %float %4941 %float_n6_28318548
       %4945 = OpExtInst %float %1 Fma %4936 %float_6_28318548 %4944
       %4946 = OpExtInst %float %1 Fma %4943 %float_2097152 %4945
       %4947 = OpFMul %float %4926 %2607
       %4948 = OpExtInst %float %1 Sin %4946
       %4949 = OpFMul %float %4948 %4947
       %4950 = OpCompositeConstruct %v3float %560 %560 %4928
       %4951 = OpCompositeConstruct %v3float %560 %560 %4949
       %4952 = OpFAdd %v3float %4950 %4951
       %4953 = OpFMul %float %4929 %4461
       %4954 = OpFDiv %float %float_2 %4953
       %4955 = OpFMul %float %4498 %4954
       %4956 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_0
       %4957 = OpLoad %float %4956
       %4958 = OpFMul %float %4954 %4957
       %4959 = OpFMul %float %4958 %3866
       %4960 = OpExtInst %float %1 Fma %4499 %4954 %4959
       %4961 = OpExtInst %float %1 Floor %4955
       %4962 = OpFNegate %float %4961
       %4963 = OpExtInst %float %1 Fma %4498 %4954 %4962
       %4964 = OpExtInst %float %1 Fma %4963 %float_2097152 %4960
       %4965 = OpExtInst %float %1 Floor %4964
       %4966 = OpFMul %float %4961 %float_n6_28318548
       %4967 = OpExtInst %float %1 Fma %4955 %float_6_28318548 %4966
       %4968 = OpFMul %float %4965 %float_n6_28318548
       %4969 = OpExtInst %float %1 Fma %4960 %float_6_28318548 %4968
       %4970 = OpExtInst %float %1 Fma %4967 %float_2097152 %4969
       %4971 = OpFMul %float %4947 %2607
       %4972 = OpExtInst %float %1 Sin %4970
       %4973 = OpFMul %float %4972 %4971
       %4974 = OpCompositeConstruct %v3float %560 %560 %4973
       %4975 = OpFAdd %v3float %4952 %4974
       %4976 = OpFMul %float %4953 %4461
       %4977 = OpFDiv %float %float_2 %4976
       %4978 = OpFMul %float %4535 %4977
       %4979 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_1
       %4980 = OpLoad %float %4979
       %4981 = OpFMul %float %4977 %4980
       %4982 = OpFMul %float %4981 %3866
       %4983 = OpExtInst %float %1 Fma %4536 %4977 %4982
       %4984 = OpExtInst %float %1 Floor %4978
       %4985 = OpFNegate %float %4984
       %4986 = OpExtInst %float %1 Fma %4535 %4977 %4985
       %4987 = OpExtInst %float %1 Fma %4986 %float_2097152 %4983
       %4988 = OpExtInst %float %1 Floor %4987
       %4989 = OpFMul %float %4984 %float_n6_28318548
       %4990 = OpExtInst %float %1 Fma %4978 %float_6_28318548 %4989
       %4991 = OpFMul %float %4988 %float_n6_28318548
       %4992 = OpExtInst %float %1 Fma %4983 %float_6_28318548 %4991
       %4993 = OpExtInst %float %1 Fma %4990 %float_2097152 %4992
       %4994 = OpFMul %float %4971 %2607
       %4995 = OpExtInst %float %1 Sin %4993
       %4996 = OpFMul %float %4995 %4994
       %4997 = OpCompositeConstruct %v3float %560 %560 %4996
       %4998 = OpFAdd %v3float %4975 %4997
       %4999 = OpFMul %float %4907 %4603
       %5000 = OpFMul %float %4606 %4999
       %5001 = OpFDiv %float %float_2 %5000
       %5002 = OpFMul %float %4600 %5001
       %5003 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_2
       %5004 = OpLoad %float %5003
       %5005 = OpFMul %float %5001 %5004
       %5006 = OpFMul %float %5005 %3866
       %5007 = OpExtInst %float %1 Fma %4601 %5001 %5006
       %5008 = OpExtInst %float %1 Floor %5002
       %5009 = OpFNegate %float %5008
       %5010 = OpExtInst %float %1 Fma %4600 %5001 %5009
       %5011 = OpExtInst %float %1 Fma %5010 %float_2097152 %5007
       %5012 = OpExtInst %float %1 Floor %5011
       %5013 = OpFMul %float %5008 %float_n6_28318548
       %5014 = OpExtInst %float %1 Fma %5002 %float_6_28318548 %5013
       %5015 = OpFMul %float %5012 %float_n6_28318548
       %5016 = OpExtInst %float %1 Fma %5007 %float_6_28318548 %5015
       %5017 = OpExtInst %float %1 Fma %5014 %float_2097152 %5016
       %5018 = OpFMul %float %4926 %2746
       %5019 = OpExtInst %float %1 Sin %5017
       %5020 = OpFMul %float %5019 %5018
       %5021 = OpFMul %float %5000 %4461
       %5022 = OpFDiv %float %float_2 %5021
       %5023 = OpFMul %float %4640 %5022
       %5024 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_72 %int_3
       %5025 = OpLoad %float %5024
       %5026 = OpFMul %float %5022 %5025
       %5027 = OpFMul %float %5026 %3866
       %5028 = OpExtInst %float %1 Fma %4641 %5022 %5027
       %5029 = OpExtInst %float %1 Floor %5023
       %5030 = OpFNegate %float %5029
       %5031 = OpExtInst %float %1 Fma %4640 %5022 %5030
       %5032 = OpExtInst %float %1 Fma %5031 %float_2097152 %5028
       %5033 = OpExtInst %float %1 Floor %5032
       %5034 = OpFMul %float %5029 %float_n6_28318548
       %5035 = OpExtInst %float %1 Fma %5023 %float_6_28318548 %5034
       %5036 = OpFMul %float %5033 %float_n6_28318548
       %5037 = OpExtInst %float %1 Fma %5028 %float_6_28318548 %5036
       %5038 = OpExtInst %float %1 Fma %5035 %float_2097152 %5037
       %5039 = OpFMul %float %5018 %2607
       %5040 = OpExtInst %float %1 Sin %5038
       %5041 = OpFMul %float %5040 %5039
       %5042 = OpCompositeConstruct %v3float %560 %560 %5020
       %5043 = OpCompositeConstruct %v3float %560 %560 %5041
       %5044 = OpFAdd %v3float %5042 %5043
       %5045 = OpFMul %float %5021 %4461
       %5046 = OpFDiv %float %float_2 %5045
       %5047 = OpFMul %float %4678 %5046
       %5048 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_0
       %5049 = OpLoad %float %5048
       %5050 = OpFMul %float %5046 %5049
       %5051 = OpFMul %float %5050 %3866
       %5052 = OpExtInst %float %1 Fma %4679 %5046 %5051
       %5053 = OpExtInst %float %1 Floor %5047
       %5054 = OpFNegate %float %5053
       %5055 = OpExtInst %float %1 Fma %4678 %5046 %5054
       %5056 = OpExtInst %float %1 Fma %5055 %float_2097152 %5052
       %5057 = OpExtInst %float %1 Floor %5056
       %5058 = OpFMul %float %5053 %float_n6_28318548
       %5059 = OpExtInst %float %1 Fma %5047 %float_6_28318548 %5058
       %5060 = OpFMul %float %5057 %float_n6_28318548
       %5061 = OpExtInst %float %1 Fma %5052 %float_6_28318548 %5060
       %5062 = OpExtInst %float %1 Fma %5059 %float_2097152 %5061
       %5063 = OpFMul %float %5039 %2607
       %5064 = OpExtInst %float %1 Sin %5062
       %5065 = OpFMul %float %5064 %5063
       %5066 = OpCompositeConstruct %v3float %560 %560 %5065
       %5067 = OpFAdd %v3float %5044 %5066
       %5068 = OpFMul %float %5045 %4461
       %5069 = OpFDiv %float %float_2 %5068
       %5070 = OpFMul %float %4715 %5069
       %5071 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_1
       %5072 = OpLoad %float %5071
       %5073 = OpFMul %float %5069 %5072
       %5074 = OpFMul %float %5073 %3866
       %5075 = OpExtInst %float %1 Fma %4716 %5069 %5074
       %5076 = OpExtInst %float %1 Floor %5070
       %5077 = OpFNegate %float %5076
       %5078 = OpExtInst %float %1 Fma %4715 %5069 %5077
       %5079 = OpExtInst %float %1 Fma %5078 %float_2097152 %5075
       %5080 = OpExtInst %float %1 Floor %5079
       %5081 = OpFMul %float %5076 %float_n6_28318548
       %5082 = OpExtInst %float %1 Fma %5070 %float_6_28318548 %5081
       %5083 = OpFMul %float %5080 %float_n6_28318548
       %5084 = OpExtInst %float %1 Fma %5075 %float_6_28318548 %5083
       %5085 = OpExtInst %float %1 Fma %5082 %float_2097152 %5084
       %5086 = OpFMul %float %5063 %2607
       %5087 = OpExtInst %float %1 Sin %5085
       %5088 = OpFMul %float %5087 %5086
       %5089 = OpCompositeConstruct %v3float %560 %560 %5088
       %5090 = OpFAdd %v3float %5067 %5089
       %5091 = OpFAdd %v3float %4998 %5090
       %5092 = OpFMul %float %4784 %4999
       %5093 = OpFDiv %float %float_2 %5092
       %5094 = OpFMul %float %4781 %5093
       %5095 = OpFMul %float %5093 %5004
       %5096 = OpFMul %float %5095 %3866
       %5097 = OpExtInst %float %1 Fma %4782 %5093 %5096
       %5098 = OpExtInst %float %1 Floor %5094
       %5099 = OpFNegate %float %5098
       %5100 = OpExtInst %float %1 Fma %4781 %5093 %5099
       %5101 = OpExtInst %float %1 Fma %5100 %float_2097152 %5097
       %5102 = OpExtInst %float %1 Floor %5101
       %5103 = OpFMul %float %5098 %float_n6_28318548
       %5104 = OpExtInst %float %1 Fma %5094 %float_6_28318548 %5103
       %5105 = OpFMul %float %5102 %float_n6_28318548
       %5106 = OpExtInst %float %1 Fma %5097 %float_6_28318548 %5105
       %5107 = OpExtInst %float %1 Fma %5104 %float_2097152 %5106
       %5108 = OpExtInst %float %1 Sin %5107
       %5109 = OpFMul %float %5108 %5018
       %5110 = OpFMul %float %5092 %4461
       %5111 = OpFDiv %float %float_2 %5110
       %5112 = OpFMul %float %4815 %5111
       %5113 = OpFMul %float %5111 %5025
       %5114 = OpFMul %float %5113 %3866
       %5115 = OpExtInst %float %1 Fma %4816 %5111 %5114
       %5116 = OpExtInst %float %1 Floor %5112
       %5117 = OpFNegate %float %5116
       %5118 = OpExtInst %float %1 Fma %4815 %5111 %5117
       %5119 = OpExtInst %float %1 Fma %5118 %float_2097152 %5115
       %5120 = OpExtInst %float %1 Floor %5119
       %5121 = OpFMul %float %5116 %float_n6_28318548
       %5122 = OpExtInst %float %1 Fma %5112 %float_6_28318548 %5121
       %5123 = OpFMul %float %5120 %float_n6_28318548
       %5124 = OpExtInst %float %1 Fma %5115 %float_6_28318548 %5123
       %5125 = OpExtInst %float %1 Fma %5122 %float_2097152 %5124
       %5126 = OpExtInst %float %1 Sin %5125
       %5127 = OpFMul %float %5126 %5039
       %5128 = OpCompositeConstruct %v3float %560 %560 %5109
       %5129 = OpCompositeConstruct %v3float %560 %560 %5127
       %5130 = OpFAdd %v3float %5128 %5129
       %5131 = OpFMul %float %5110 %4461
       %5132 = OpFDiv %float %float_2 %5131
       %5133 = OpFMul %float %4850 %5132
       %5134 = OpFMul %float %5132 %5049
       %5135 = OpFMul %float %5134 %3866
       %5136 = OpExtInst %float %1 Fma %4851 %5132 %5135
       %5137 = OpExtInst %float %1 Floor %5133
       %5138 = OpFNegate %float %5137
       %5139 = OpExtInst %float %1 Fma %4850 %5132 %5138
       %5140 = OpExtInst %float %1 Fma %5139 %float_2097152 %5136
       %5141 = OpExtInst %float %1 Floor %5140
       %5142 = OpFMul %float %5137 %float_n6_28318548
       %5143 = OpExtInst %float %1 Fma %5133 %float_6_28318548 %5142
       %5144 = OpFMul %float %5141 %float_n6_28318548
       %5145 = OpExtInst %float %1 Fma %5136 %float_6_28318548 %5144
       %5146 = OpExtInst %float %1 Fma %5143 %float_2097152 %5145
       %5147 = OpExtInst %float %1 Sin %5146
       %5148 = OpFMul %float %5147 %5063
       %5149 = OpCompositeConstruct %v3float %560 %560 %5148
       %5150 = OpFAdd %v3float %5130 %5149
       %5151 = OpFMul %float %5131 %4461
       %5152 = OpFDiv %float %float_2 %5151
       %5153 = OpFMul %float %4884 %5152
       %5154 = OpFMul %float %5152 %5072
       %5155 = OpFMul %float %5154 %3866
       %5156 = OpExtInst %float %1 Fma %4885 %5152 %5155
       %5157 = OpExtInst %float %1 Floor %5153
       %5158 = OpFNegate %float %5157
       %5159 = OpExtInst %float %1 Fma %4884 %5152 %5158
       %5160 = OpExtInst %float %1 Fma %5159 %float_2097152 %5156
       %5161 = OpExtInst %float %1 Floor %5160
       %5162 = OpFMul %float %5157 %float_n6_28318548
       %5163 = OpExtInst %float %1 Fma %5153 %float_6_28318548 %5162
       %5164 = OpFMul %float %5161 %float_n6_28318548
       %5165 = OpExtInst %float %1 Fma %5156 %float_6_28318548 %5164
       %5166 = OpExtInst %float %1 Fma %5163 %float_2097152 %5165
       %5167 = OpExtInst %float %1 Sin %5166
       %5168 = OpFMul %float %5167 %5086
       %5169 = OpCompositeConstruct %v3float %560 %560 %5168
       %5170 = OpFAdd %v3float %5150 %5169
       %5171 = OpFAdd %v3float %5091 %5170
       %5172 = OpFMul %float %3579 %float_4
       %5173 = OpFMul %float %3581 %5172
       %5174 = OpFDiv %float %float_2 %5173
       %5175 = OpFMul %float %3575 %5174
       %5176 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_2
       %5177 = OpLoad %float %5176
       %5178 = OpFMul %float %5174 %5177
       %5179 = OpFMul %float %5178 %3866
       %5180 = OpExtInst %float %1 Fma %3576 %5174 %5179
       %5181 = OpExtInst %float %1 Floor %5175
       %5182 = OpFNegate %float %5181
       %5183 = OpExtInst %float %1 Fma %3575 %5174 %5182
       %5184 = OpExtInst %float %1 Fma %5183 %float_2097152 %5180
       %5185 = OpExtInst %float %1 Floor %5184
       %5186 = OpFMul %float %5181 %float_n6_28318548
       %5187 = OpExtInst %float %1 Fma %5175 %float_6_28318548 %5186
       %5188 = OpFMul %float %5185 %float_n6_28318548
       %5189 = OpExtInst %float %1 Fma %5180 %float_6_28318548 %5188
       %5190 = OpExtInst %float %1 Fma %5187 %float_2097152 %5189
       %5191 = OpExtInst %float %1 Sin %5190
       %5192 = OpFMul %float %5191 %4926
       %5193 = OpFMul %float %5173 %4461
       %5194 = OpFDiv %float %float_2 %5193
       %5195 = OpFMul %float %4458 %5194
       %5196 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_73 %int_3
       %5197 = OpLoad %float %5196
       %5198 = OpFMul %float %5194 %5197
       %5199 = OpFMul %float %5198 %3866
       %5200 = OpExtInst %float %1 Fma %4459 %5194 %5199
       %5201 = OpExtInst %float %1 Floor %5195
       %5202 = OpFNegate %float %5201
       %5203 = OpExtInst %float %1 Fma %4458 %5194 %5202
       %5204 = OpExtInst %float %1 Fma %5203 %float_2097152 %5200
       %5205 = OpExtInst %float %1 Floor %5204
       %5206 = OpFMul %float %5201 %float_n6_28318548
       %5207 = OpExtInst %float %1 Fma %5195 %float_6_28318548 %5206
       %5208 = OpFMul %float %5205 %float_n6_28318548
       %5209 = OpExtInst %float %1 Fma %5200 %float_6_28318548 %5208
       %5210 = OpExtInst %float %1 Fma %5207 %float_2097152 %5209
       %5211 = OpExtInst %float %1 Sin %5210
       %5212 = OpFMul %float %5211 %4947
       %5213 = OpCompositeConstruct %v3float %560 %560 %5192
       %5214 = OpCompositeConstruct %v3float %560 %560 %5212
       %5215 = OpFAdd %v3float %5213 %5214
       %5216 = OpFMul %float %5193 %4461
       %5217 = OpFDiv %float %float_2 %5216
       %5218 = OpFMul %float %4498 %5217
       %5219 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_74 %int_0
       %5220 = OpLoad %float %5219
       %5221 = OpFMul %float %5217 %5220
       %5222 = OpFMul %float %5221 %3866
       %5223 = OpExtInst %float %1 Fma %4499 %5217 %5222
       %5224 = OpExtInst %float %1 Floor %5218
       %5225 = OpFNegate %float %5224
       %5226 = OpExtInst %float %1 Fma %4498 %5217 %5225
       %5227 = OpExtInst %float %1 Fma %5226 %float_2097152 %5223
       %5228 = OpExtInst %float %1 Floor %5227
       %5229 = OpFMul %float %5224 %float_n6_28318548
       %5230 = OpExtInst %float %1 Fma %5218 %float_6_28318548 %5229
       %5231 = OpFMul %float %5228 %float_n6_28318548
       %5232 = OpExtInst %float %1 Fma %5223 %float_6_28318548 %5231
       %5233 = OpExtInst %float %1 Fma %5230 %float_2097152 %5232
       %5234 = OpExtInst %float %1 Sin %5233
       %5235 = OpFMul %float %5234 %4971
       %5236 = OpCompositeConstruct %v3float %560 %560 %5235
       %5237 = OpFAdd %v3float %5215 %5236
       %5238 = OpFMul %float %5216 %4461
       %5239 = OpFDiv %float %float_2 %5238
       %5240 = OpFMul %float %4535 %5239
       %5241 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_74 %int_1
       %5242 = OpLoad %float %5241
       %5243 = OpFMul %float %5239 %5242
       %5244 = OpFMul %float %5243 %3866
       %5245 = OpExtInst %float %1 Fma %4536 %5239 %5244
       %5246 = OpExtInst %float %1 Floor %5240
       %5247 = OpFNegate %float %5246
       %5248 = OpExtInst %float %1 Fma %4535 %5239 %5247
       %5249 = OpExtInst %float %1 Fma %5248 %float_2097152 %5245
       %5250 = OpExtInst %float %1 Floor %5249
       %5251 = OpFMul %float %5246 %float_n6_28318548
       %5252 = OpExtInst %float %1 Fma %5240 %float_6_28318548 %5251
       %5253 = OpFMul %float %5250 %float_n6_28318548
       %5254 = OpExtInst %float %1 Fma %5245 %float_6_28318548 %5253
       %5255 = OpExtInst %float %1 Fma %5252 %float_2097152 %5254
       %5256 = OpExtInst %float %1 Sin %5255
       %5257 = OpFMul %float %5256 %4994
       %5258 = OpCompositeConstruct %v3float %560 %560 %5257
       %5259 = OpFAdd %v3float %5237 %5258
       %5260 = OpFMul %float %5172 %4603
       %5261 = OpFMul %float %4606 %5260
       %5262 = OpFDiv %float %float_2 %5261
       %5263 = OpFMul %float %4600 %5262
       %5264 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_74 %int_2
       %5265 = OpLoad %float %5264
       %5266 = OpFMul %float %5262 %5265
       %5267 = OpFMul %float %5266 %3866
       %5268 = OpExtInst %float %1 Fma %4601 %5262 %5267
       %5269 = OpExtInst %float %1 Floor %5263
       %5270 = OpFNegate %float %5269
       %5271 = OpExtInst %float %1 Fma %4600 %5262 %5270
       %5272 = OpExtInst %float %1 Fma %5271 %float_2097152 %5268
       %5273 = OpExtInst %float %1 Floor %5272
       %5274 = OpFMul %float %5269 %float_n6_28318548
       %5275 = OpExtInst %float %1 Fma %5263 %float_6_28318548 %5274
       %5276 = OpFMul %float %5273 %float_n6_28318548
       %5277 = OpExtInst %float %1 Fma %5268 %float_6_28318548 %5276
       %5278 = OpExtInst %float %1 Fma %5275 %float_2097152 %5277
       %5279 = OpExtInst %float %1 Sin %5278
       %5280 = OpFMul %float %5279 %5018
       %5281 = OpFMul %float %5261 %4461
       %5282 = OpFDiv %float %float_2 %5281
       %5283 = OpFMul %float %4640 %5282
       %5284 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_74 %int_3
       %5285 = OpLoad %float %5284
       %5286 = OpFMul %float %5282 %5285
       %5287 = OpFMul %float %5286 %3866
       %5288 = OpExtInst %float %1 Fma %4641 %5282 %5287
       %5289 = OpExtInst %float %1 Floor %5283
       %5290 = OpFNegate %float %5289
       %5291 = OpExtInst %float %1 Fma %4640 %5282 %5290
       %5292 = OpExtInst %float %1 Fma %5291 %float_2097152 %5288
       %5293 = OpExtInst %float %1 Floor %5292
       %5294 = OpFMul %float %5289 %float_n6_28318548
       %5295 = OpExtInst %float %1 Fma %5283 %float_6_28318548 %5294
       %5296 = OpFMul %float %5293 %float_n6_28318548
       %5297 = OpExtInst %float %1 Fma %5288 %float_6_28318548 %5296
       %5298 = OpExtInst %float %1 Fma %5295 %float_2097152 %5297
       %5299 = OpExtInst %float %1 Sin %5298
       %5300 = OpFMul %float %5299 %5039
       %5301 = OpCompositeConstruct %v3float %560 %560 %5280
       %5302 = OpCompositeConstruct %v3float %560 %560 %5300
       %5303 = OpFAdd %v3float %5301 %5302
       %5304 = OpFMul %float %5281 %4461
       %5305 = OpFDiv %float %float_2 %5304
       %5306 = OpFMul %float %4678 %5305
       %5307 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_0
       %5308 = OpLoad %float %5307
       %5309 = OpFMul %float %5305 %5308
       %5310 = OpFMul %float %5309 %3866
       %5311 = OpExtInst %float %1 Fma %4679 %5305 %5310
       %5312 = OpExtInst %float %1 Floor %5306
       %5313 = OpFNegate %float %5312
       %5314 = OpExtInst %float %1 Fma %4678 %5305 %5313
       %5315 = OpExtInst %float %1 Fma %5314 %float_2097152 %5311
       %5316 = OpExtInst %float %1 Floor %5315
       %5317 = OpFMul %float %5312 %float_n6_28318548
       %5318 = OpExtInst %float %1 Fma %5306 %float_6_28318548 %5317
       %5319 = OpFMul %float %5316 %float_n6_28318548
       %5320 = OpExtInst %float %1 Fma %5311 %float_6_28318548 %5319
       %5321 = OpExtInst %float %1 Fma %5318 %float_2097152 %5320
       %5322 = OpExtInst %float %1 Sin %5321
       %5323 = OpFMul %float %5322 %5063
       %5324 = OpCompositeConstruct %v3float %560 %560 %5323
       %5325 = OpFAdd %v3float %5303 %5324
       %5326 = OpFMul %float %5304 %4461
       %5327 = OpFDiv %float %float_2 %5326
       %5328 = OpFMul %float %4715 %5327
       %5329 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_1
       %5330 = OpLoad %float %5329
       %5331 = OpFMul %float %5327 %5330
       %5332 = OpFMul %float %5331 %3866
       %5333 = OpExtInst %float %1 Fma %4716 %5327 %5332
       %5334 = OpExtInst %float %1 Floor %5328
       %5335 = OpFNegate %float %5334
       %5336 = OpExtInst %float %1 Fma %4715 %5327 %5335
       %5337 = OpExtInst %float %1 Fma %5336 %float_2097152 %5333
       %5338 = OpExtInst %float %1 Floor %5337
       %5339 = OpFMul %float %5334 %float_n6_28318548
       %5340 = OpExtInst %float %1 Fma %5328 %float_6_28318548 %5339
       %5341 = OpFMul %float %5338 %float_n6_28318548
       %5342 = OpExtInst %float %1 Fma %5333 %float_6_28318548 %5341
       %5343 = OpExtInst %float %1 Fma %5340 %float_2097152 %5342
       %5344 = OpExtInst %float %1 Sin %5343
       %5345 = OpFMul %float %5344 %5086
       %5346 = OpCompositeConstruct %v3float %560 %560 %5345
       %5347 = OpFAdd %v3float %5325 %5346
       %5348 = OpFAdd %v3float %5259 %5347
       %5349 = OpFMul %float %4784 %5260
       %5350 = OpFDiv %float %float_2 %5349
       %5351 = OpFMul %float %4781 %5350
       %5352 = OpFMul %float %5350 %5265
       %5353 = OpFMul %float %5352 %3866
       %5354 = OpExtInst %float %1 Fma %4782 %5350 %5353
       %5355 = OpExtInst %float %1 Floor %5351
       %5356 = OpFNegate %float %5355
       %5357 = OpExtInst %float %1 Fma %4781 %5350 %5356
       %5358 = OpExtInst %float %1 Fma %5357 %float_2097152 %5354
       %5359 = OpExtInst %float %1 Floor %5358
       %5360 = OpFMul %float %5355 %float_n6_28318548
       %5361 = OpExtInst %float %1 Fma %5351 %float_6_28318548 %5360
       %5362 = OpFMul %float %5359 %float_n6_28318548
       %5363 = OpExtInst %float %1 Fma %5354 %float_6_28318548 %5362
       %5364 = OpExtInst %float %1 Fma %5361 %float_2097152 %5363
       %5365 = OpExtInst %float %1 Sin %5364
       %5366 = OpFMul %float %5365 %5018
       %5367 = OpFMul %float %5349 %4461
       %5368 = OpFDiv %float %float_2 %5367
       %5369 = OpFMul %float %4815 %5368
       %5370 = OpFMul %float %5368 %5285
       %5371 = OpFMul %float %5370 %3866
       %5372 = OpExtInst %float %1 Fma %4816 %5368 %5371
       %5373 = OpExtInst %float %1 Floor %5369
       %5374 = OpFNegate %float %5373
       %5375 = OpExtInst %float %1 Fma %4815 %5368 %5374
       %5376 = OpExtInst %float %1 Fma %5375 %float_2097152 %5372
       %5377 = OpExtInst %float %1 Floor %5376
       %5378 = OpFMul %float %5373 %float_n6_28318548
       %5379 = OpExtInst %float %1 Fma %5369 %float_6_28318548 %5378
       %5380 = OpFMul %float %5377 %float_n6_28318548
       %5381 = OpExtInst %float %1 Fma %5372 %float_6_28318548 %5380
       %5382 = OpExtInst %float %1 Fma %5379 %float_2097152 %5381
       %5383 = OpExtInst %float %1 Sin %5382
       %5384 = OpFMul %float %5383 %5039
       %5385 = OpCompositeConstruct %v3float %560 %560 %5366
       %5386 = OpCompositeConstruct %v3float %560 %560 %5384
       %5387 = OpFAdd %v3float %5385 %5386
       %5388 = OpFMul %float %5367 %4461
       %5389 = OpFDiv %float %float_2 %5388
       %5390 = OpFMul %float %4850 %5389
       %5391 = OpFMul %float %5389 %5308
       %5392 = OpFMul %float %5391 %3866
       %5393 = OpExtInst %float %1 Fma %4851 %5389 %5392
       %5394 = OpExtInst %float %1 Floor %5390
       %5395 = OpFNegate %float %5394
       %5396 = OpExtInst %float %1 Fma %4850 %5389 %5395
       %5397 = OpExtInst %float %1 Fma %5396 %float_2097152 %5393
       %5398 = OpExtInst %float %1 Floor %5397
       %5399 = OpFMul %float %5394 %float_n6_28318548
       %5400 = OpExtInst %float %1 Fma %5390 %float_6_28318548 %5399
       %5401 = OpFMul %float %5398 %float_n6_28318548
       %5402 = OpExtInst %float %1 Fma %5393 %float_6_28318548 %5401
       %5403 = OpExtInst %float %1 Fma %5400 %float_2097152 %5402
       %5404 = OpExtInst %float %1 Sin %5403
       %5405 = OpFMul %float %5404 %5063
       %5406 = OpCompositeConstruct %v3float %560 %560 %5405
       %5407 = OpFAdd %v3float %5387 %5406
       %5408 = OpFMul %float %5388 %4461
       %5409 = OpFDiv %float %float_2 %5408
       %5410 = OpFMul %float %4884 %5409
       %5411 = OpFMul %float %5409 %5330
       %5412 = OpFMul %float %5411 %3866
       %5413 = OpExtInst %float %1 Fma %4885 %5409 %5412
       %5414 = OpExtInst %float %1 Floor %5410
       %5415 = OpFNegate %float %5414
       %5416 = OpExtInst %float %1 Fma %4884 %5409 %5415
       %5417 = OpExtInst %float %1 Fma %5416 %float_2097152 %5413
       %5418 = OpExtInst %float %1 Floor %5417
       %5419 = OpFMul %float %5414 %float_n6_28318548
       %5420 = OpExtInst %float %1 Fma %5410 %float_6_28318548 %5419
       %5421 = OpFMul %float %5418 %float_n6_28318548
       %5422 = OpExtInst %float %1 Fma %5413 %float_6_28318548 %5421
       %5423 = OpExtInst %float %1 Fma %5420 %float_2097152 %5422
       %5424 = OpExtInst %float %1 Sin %5423
       %5425 = OpFMul %float %5424 %5086
       %5426 = OpCompositeConstruct %v3float %560 %560 %5425
       %5427 = OpFAdd %v3float %5407 %5426
       %5428 = OpFAdd %v3float %5348 %5427
       %5429 = OpFMul %float %3579 %float_0_75
       %5430 = OpFMul %float %3581 %5429
       %5431 = OpFDiv %float %float_2 %5430
       %5432 = OpFMul %float %3575 %5431
       %5433 = OpFMul %float %5431 %4912
       %5434 = OpFMul %float %5433 %3866
       %5435 = OpExtInst %float %1 Fma %3576 %5431 %5434
       %5436 = OpExtInst %float %1 Floor %5432
       %5437 = OpFNegate %float %5436
       %5438 = OpExtInst %float %1 Fma %3575 %5431 %5437
       %5439 = OpExtInst %float %1 Fma %5438 %float_2097152 %5435
       %5440 = OpExtInst %float %1 Floor %5439
       %5441 = OpFMul %float %5436 %float_n6_28318548
       %5442 = OpExtInst %float %1 Fma %5432 %float_6_28318548 %5441
       %5443 = OpFMul %float %5440 %float_n6_28318548
       %5444 = OpExtInst %float %1 Fma %5435 %float_6_28318548 %5443
       %5445 = OpExtInst %float %1 Fma %5442 %float_2097152 %5444
       %5446 = OpFMul %float %4443 %float_0_5
       %5447 = OpExtInst %float %1 Sin %5445
       %5448 = OpFMul %float %5447 %5446
       %5449 = OpFMul %float %5430 %4461
       %5450 = OpFDiv %float %float_2 %5449
       %5451 = OpFMul %float %4458 %5450
       %5452 = OpFMul %float %5450 %4933
       %5453 = OpFMul %float %5452 %3866
       %5454 = OpExtInst %float %1 Fma %4459 %5450 %5453
       %5455 = OpExtInst %float %1 Floor %5451
       %5456 = OpFNegate %float %5455
       %5457 = OpExtInst %float %1 Fma %4458 %5450 %5456
       %5458 = OpExtInst %float %1 Fma %5457 %float_2097152 %5454
       %5459 = OpExtInst %float %1 Floor %5458
       %5460 = OpFMul %float %5455 %float_n6_28318548
       %5461 = OpExtInst %float %1 Fma %5451 %float_6_28318548 %5460
       %5462 = OpFMul %float %5459 %float_n6_28318548
       %5463 = OpExtInst %float %1 Fma %5454 %float_6_28318548 %5462
       %5464 = OpExtInst %float %1 Fma %5461 %float_2097152 %5463
       %5465 = OpFMul %float %5446 %2607
       %5466 = OpExtInst %float %1 Sin %5464
       %5467 = OpFMul %float %5466 %5465
       %5468 = OpCompositeConstruct %v3float %560 %560 %5448
       %5469 = OpCompositeConstruct %v3float %560 %560 %5467
       %5470 = OpFAdd %v3float %5468 %5469
       %5471 = OpFMul %float %5449 %4461
       %5472 = OpFDiv %float %float_2 %5471
       %5473 = OpFMul %float %4498 %5472
       %5474 = OpFMul %float %5472 %4957
       %5475 = OpFMul %float %5474 %3866
       %5476 = OpExtInst %float %1 Fma %4499 %5472 %5475
       %5477 = OpExtInst %float %1 Floor %5473
       %5478 = OpFNegate %float %5477
       %5479 = OpExtInst %float %1 Fma %4498 %5472 %5478
       %5480 = OpExtInst %float %1 Fma %5479 %float_2097152 %5476
       %5481 = OpExtInst %float %1 Floor %5480
       %5482 = OpFMul %float %5477 %float_n6_28318548
       %5483 = OpExtInst %float %1 Fma %5473 %float_6_28318548 %5482
       %5484 = OpFMul %float %5481 %float_n6_28318548
       %5485 = OpExtInst %float %1 Fma %5476 %float_6_28318548 %5484
       %5486 = OpExtInst %float %1 Fma %5483 %float_2097152 %5485
       %5487 = OpFMul %float %5465 %2607
       %5488 = OpExtInst %float %1 Sin %5486
       %5489 = OpFMul %float %5488 %5487
       %5490 = OpCompositeConstruct %v3float %560 %560 %5489
       %5491 = OpFAdd %v3float %5470 %5490
       %5492 = OpFMul %float %5471 %4461
       %5493 = OpFDiv %float %float_2 %5492
       %5494 = OpFMul %float %4535 %5493
       %5495 = OpFMul %float %5493 %4980
       %5496 = OpFMul %float %5495 %3866
       %5497 = OpExtInst %float %1 Fma %4536 %5493 %5496
       %5498 = OpExtInst %float %1 Floor %5494
       %5499 = OpFNegate %float %5498
       %5500 = OpExtInst %float %1 Fma %4535 %5493 %5499
       %5501 = OpExtInst %float %1 Fma %5500 %float_2097152 %5497
       %5502 = OpExtInst %float %1 Floor %5501
       %5503 = OpFMul %float %5498 %float_n6_28318548
       %5504 = OpExtInst %float %1 Fma %5494 %float_6_28318548 %5503
       %5505 = OpFMul %float %5502 %float_n6_28318548
       %5506 = OpExtInst %float %1 Fma %5497 %float_6_28318548 %5505
       %5507 = OpExtInst %float %1 Fma %5504 %float_2097152 %5506
       %5508 = OpFMul %float %5487 %2607
       %5509 = OpExtInst %float %1 Sin %5507
       %5510 = OpFMul %float %5509 %5508
       %5511 = OpCompositeConstruct %v3float %560 %560 %5510
       %5512 = OpFAdd %v3float %5491 %5511
       %5513 = OpFMul %float %5429 %4603
       %5514 = OpFMul %float %4606 %5513
       %5515 = OpFDiv %float %float_2 %5514
       %5516 = OpFMul %float %4600 %5515
       %5517 = OpFMul %float %5515 %5004
       %5518 = OpFMul %float %5517 %3866
       %5519 = OpExtInst %float %1 Fma %4601 %5515 %5518
       %5520 = OpExtInst %float %1 Floor %5516
       %5521 = OpFNegate %float %5520
       %5522 = OpExtInst %float %1 Fma %4600 %5515 %5521
       %5523 = OpExtInst %float %1 Fma %5522 %float_2097152 %5519
       %5524 = OpExtInst %float %1 Floor %5523
       %5525 = OpFMul %float %5520 %float_n6_28318548
       %5526 = OpExtInst %float %1 Fma %5516 %float_6_28318548 %5525
       %5527 = OpFMul %float %5524 %float_n6_28318548
       %5528 = OpExtInst %float %1 Fma %5519 %float_6_28318548 %5527
       %5529 = OpExtInst %float %1 Fma %5526 %float_2097152 %5528
       %5530 = OpFMul %float %5446 %2746
       %5531 = OpExtInst %float %1 Sin %5529
       %5532 = OpFMul %float %5531 %5530
       %5533 = OpFMul %float %5514 %4461
       %5534 = OpFDiv %float %float_2 %5533
       %5535 = OpFMul %float %4640 %5534
       %5536 = OpFMul %float %5534 %5025
       %5537 = OpFMul %float %5536 %3866
       %5538 = OpExtInst %float %1 Fma %4641 %5534 %5537
       %5539 = OpExtInst %float %1 Floor %5535
       %5540 = OpFNegate %float %5539
       %5541 = OpExtInst %float %1 Fma %4640 %5534 %5540
       %5542 = OpExtInst %float %1 Fma %5541 %float_2097152 %5538
       %5543 = OpExtInst %float %1 Floor %5542
       %5544 = OpFMul %float %5539 %float_n6_28318548
       %5545 = OpExtInst %float %1 Fma %5535 %float_6_28318548 %5544
       %5546 = OpFMul %float %5543 %float_n6_28318548
       %5547 = OpExtInst %float %1 Fma %5538 %float_6_28318548 %5546
       %5548 = OpExtInst %float %1 Fma %5545 %float_2097152 %5547
       %5549 = OpFMul %float %5530 %2607
       %5550 = OpExtInst %float %1 Sin %5548
       %5551 = OpFMul %float %5550 %5549
       %5552 = OpCompositeConstruct %v3float %560 %560 %5532
       %5553 = OpCompositeConstruct %v3float %560 %560 %5551
       %5554 = OpFAdd %v3float %5552 %5553
       %5555 = OpFMul %float %5533 %4461
       %5556 = OpFDiv %float %float_2 %5555
       %5557 = OpFMul %float %4678 %5556
       %5558 = OpFMul %float %5556 %5049
       %5559 = OpFMul %float %5558 %3866
       %5560 = OpExtInst %float %1 Fma %4679 %5556 %5559
       %5561 = OpExtInst %float %1 Floor %5557
       %5562 = OpFNegate %float %5561
       %5563 = OpExtInst %float %1 Fma %4678 %5556 %5562
       %5564 = OpExtInst %float %1 Fma %5563 %float_2097152 %5560
       %5565 = OpExtInst %float %1 Floor %5564
       %5566 = OpFMul %float %5561 %float_n6_28318548
       %5567 = OpExtInst %float %1 Fma %5557 %float_6_28318548 %5566
       %5568 = OpFMul %float %5565 %float_n6_28318548
       %5569 = OpExtInst %float %1 Fma %5560 %float_6_28318548 %5568
       %5570 = OpExtInst %float %1 Fma %5567 %float_2097152 %5569
       %5571 = OpFMul %float %5549 %2607
       %5572 = OpExtInst %float %1 Sin %5570
       %5573 = OpFMul %float %5572 %5571
       %5574 = OpCompositeConstruct %v3float %560 %560 %5573
       %5575 = OpFAdd %v3float %5554 %5574
       %5576 = OpFMul %float %5555 %4461
       %5577 = OpFDiv %float %float_2 %5576
       %5578 = OpFMul %float %4715 %5577
       %5579 = OpFMul %float %5577 %5072
       %5580 = OpFMul %float %5579 %3866
       %5581 = OpExtInst %float %1 Fma %4716 %5577 %5580
       %5582 = OpExtInst %float %1 Floor %5578
       %5583 = OpFNegate %float %5582
       %5584 = OpExtInst %float %1 Fma %4715 %5577 %5583
       %5585 = OpExtInst %float %1 Fma %5584 %float_2097152 %5581
       %5586 = OpExtInst %float %1 Floor %5585
       %5587 = OpFMul %float %5582 %float_n6_28318548
       %5588 = OpExtInst %float %1 Fma %5578 %float_6_28318548 %5587
       %5589 = OpFMul %float %5586 %float_n6_28318548
       %5590 = OpExtInst %float %1 Fma %5581 %float_6_28318548 %5589
       %5591 = OpExtInst %float %1 Fma %5588 %float_2097152 %5590
       %5592 = OpFMul %float %5571 %2607
       %5593 = OpExtInst %float %1 Sin %5591
       %5594 = OpFMul %float %5593 %5592
       %5595 = OpCompositeConstruct %v3float %560 %560 %5594
       %5596 = OpFAdd %v3float %5575 %5595
       %5597 = OpFAdd %v3float %5512 %5596
       %5598 = OpFMul %float %4784 %5513
       %5599 = OpFDiv %float %float_2 %5598
       %5600 = OpFMul %float %4781 %5599
       %5601 = OpFMul %float %5599 %5004
       %5602 = OpFMul %float %5601 %3866
       %5603 = OpExtInst %float %1 Fma %4782 %5599 %5602
       %5604 = OpExtInst %float %1 Floor %5600
       %5605 = OpFNegate %float %5604
       %5606 = OpExtInst %float %1 Fma %4781 %5599 %5605
       %5607 = OpExtInst %float %1 Fma %5606 %float_2097152 %5603
       %5608 = OpExtInst %float %1 Floor %5607
       %5609 = OpFMul %float %5604 %float_n6_28318548
       %5610 = OpExtInst %float %1 Fma %5600 %float_6_28318548 %5609
       %5611 = OpFMul %float %5608 %float_n6_28318548
       %5612 = OpExtInst %float %1 Fma %5603 %float_6_28318548 %5611
       %5613 = OpExtInst %float %1 Fma %5610 %float_2097152 %5612
       %5614 = OpExtInst %float %1 Sin %5613
       %5615 = OpFMul %float %5614 %5530
       %5616 = OpFMul %float %5598 %4461
       %5617 = OpFDiv %float %float_2 %5616
       %5618 = OpFMul %float %4815 %5617
       %5619 = OpFMul %float %5617 %5025
       %5620 = OpFMul %float %5619 %3866
       %5621 = OpExtInst %float %1 Fma %4816 %5617 %5620
       %5622 = OpExtInst %float %1 Floor %5618
       %5623 = OpFNegate %float %5622
       %5624 = OpExtInst %float %1 Fma %4815 %5617 %5623
       %5625 = OpExtInst %float %1 Fma %5624 %float_2097152 %5621
       %5626 = OpExtInst %float %1 Floor %5625
       %5627 = OpFMul %float %5622 %float_n6_28318548
       %5628 = OpExtInst %float %1 Fma %5618 %float_6_28318548 %5627
       %5629 = OpFMul %float %5626 %float_n6_28318548
       %5630 = OpExtInst %float %1 Fma %5621 %float_6_28318548 %5629
       %5631 = OpExtInst %float %1 Fma %5628 %float_2097152 %5630
       %5632 = OpExtInst %float %1 Sin %5631
       %5633 = OpFMul %float %5632 %5549
       %5634 = OpCompositeConstruct %v3float %560 %560 %5615
       %5635 = OpCompositeConstruct %v3float %560 %560 %5633
       %5636 = OpFAdd %v3float %5634 %5635
       %5637 = OpFMul %float %5616 %4461
       %5638 = OpFDiv %float %float_2 %5637
       %5639 = OpFMul %float %4850 %5638
       %5640 = OpFMul %float %5638 %5049
       %5641 = OpFMul %float %5640 %3866
       %5642 = OpExtInst %float %1 Fma %4851 %5638 %5641
       %5643 = OpExtInst %float %1 Floor %5639
       %5644 = OpFNegate %float %5643
       %5645 = OpExtInst %float %1 Fma %4850 %5638 %5644
       %5646 = OpExtInst %float %1 Fma %5645 %float_2097152 %5642
       %5647 = OpExtInst %float %1 Floor %5646
       %5648 = OpFMul %float %5643 %float_n6_28318548
       %5649 = OpExtInst %float %1 Fma %5639 %float_6_28318548 %5648
       %5650 = OpFMul %float %5647 %float_n6_28318548
       %5651 = OpExtInst %float %1 Fma %5642 %float_6_28318548 %5650
       %5652 = OpExtInst %float %1 Fma %5649 %float_2097152 %5651
       %5653 = OpExtInst %float %1 Sin %5652
       %5654 = OpFMul %float %5653 %5571
       %5655 = OpCompositeConstruct %v3float %560 %560 %5654
       %5656 = OpFAdd %v3float %5636 %5655
       %5657 = OpFMul %float %5637 %4461
       %5658 = OpFDiv %float %float_2 %5657
       %5659 = OpFMul %float %4884 %5658
       %5660 = OpFMul %float %5658 %5072
       %5661 = OpFMul %float %5660 %3866
       %5662 = OpExtInst %float %1 Fma %4885 %5658 %5661
       %5663 = OpExtInst %float %1 Floor %5659
       %5664 = OpFNegate %float %5663
       %5665 = OpExtInst %float %1 Fma %4884 %5658 %5664
       %5666 = OpExtInst %float %1 Fma %5665 %float_2097152 %5662
       %5667 = OpExtInst %float %1 Floor %5666
       %5668 = OpFMul %float %5663 %float_n6_28318548
       %5669 = OpExtInst %float %1 Fma %5659 %float_6_28318548 %5668
       %5670 = OpFMul %float %5667 %float_n6_28318548
       %5671 = OpExtInst %float %1 Fma %5662 %float_6_28318548 %5670
       %5672 = OpExtInst %float %1 Fma %5669 %float_2097152 %5671
       %5673 = OpExtInst %float %1 Sin %5672
       %5674 = OpFMul %float %5673 %5592
       %5675 = OpCompositeConstruct %v3float %560 %560 %5674
       %5676 = OpFAdd %v3float %5656 %5675
       %5677 = OpFAdd %v3float %5597 %5676
       %5678 = OpFAdd %v3float %5428 %5677
       %5679 = OpFAdd %v3float %5171 %5678
       %5680 = OpFAdd %v3float %4906 %5679
       %5681 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_2
       %5682 = OpLoad %float %5681
       %5683 = OpFSub %float %5682 %float_n1
       %5684 = OpExtInst %float %1 FAbs %5683
       %5685 = OpFOrdGreaterThan %bool %5684 %float_9_99999975en06
       %5686 = OpFOrdGreaterThanEqual %bool %5682 %float_n1
       %5687 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_75 %int_3
       %5688 = OpLoad %float %5687
       %5689 = OpSelect %float %5686 %5682 %5688
       %5690 = OpSelect %float %5685 %5689 %5682
       %5691 = OpFSub %float %5690 %float_1
       %5692 = OpExtInst %float %1 FAbs %5691
       %5693 = OpFOrdGreaterThan %bool %5692 %float_9_99999975en06
       %5694 = OpFOrdGreaterThanEqual %bool %5690 %float_1
       %5695 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_76 %int_0
       %5696 = OpLoad %float %5695
       %5697 = OpSelect %float %5694 %5696 %5682
       %5698 = OpSelect %float %5693 %5697 %5682
       %5699 = OpExtInst %float %1 FAbs %5698
       %5700 = OpFOrdGreaterThan %bool %5699 %float_9_99999975en06
       %5701 = OpFOrdGreaterThanEqual %bool %5698 %float_0
       %5702 = OpSelect %float %5701 %float_1 %float_n1
       %5703 = OpSelect %float %5700 %5702 %float_1
       %5704 = OpExtInst %float %1 NMax %5703 %float_n1
       %5705 = OpExtInst %float %1 NMin %5704 %float_1
       %5706 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_77 %int_1
       %5707 = OpLoad %float %5706
       %5708 = OpCompositeConstruct %v3float %5705 %5707 %float_0
       %5709 = OpFAdd %v3float %5708 %1701
       %5710 = OpExtInst %v3float %1 NMax %5709 %287
       %5711 = OpExtInst %v3float %1 NMin %5710 %134
       %5712 = OpCompositeExtract %float %5711 0
       %5713 = OpCompositeExtract %float %5711 1
       %5714 = OpCompositeConstruct %v2float %5712 %5713
       %5715 = OpFMul %v2float %1709 %5714
       %5716 = OpFMul %v2float %5714 %1710
       %5717 = OpCompositeExtract %float %5715 0
       %5718 = OpCompositeExtract %float %5716 0
       %5719 = OpCompositeExtract %float %5715 1
       %5720 = OpCompositeExtract %float %5716 1
       %5721 = OpFAdd %float %5717 %5719
       %5722 = OpFAdd %float %5718 %5720
       %5723 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_2
       %5724 = OpLoad %float %5723
       %5725 = OpFMul %float %5724 %3579
       %5726 = OpFDiv %float %float_2 %5725
       %5727 = OpFMul %float %5721 %5726
       %5728 = OpFMul %float %5726 %3586
       %5729 = OpFAdd %v3float %655 %297
       %5730 = OpFMul %v3float %604 %3599
       %5731 = OpFMul %v3float %5729 %3599
       %5732 = OpFMul %v3float %5730 %3590
       %5733 = OpFMul %v3float %3590 %5731
       %5734 = OpFMul %v3float %5733 %3595
       %5735 = OpCompositeExtract %float %5734 0
       %5736 = OpCompositeExtract %float %5734 1
       %5737 = OpCompositeExtract %float %5734 2
       %5738 = OpCompositeConstruct %v2float %5737 %5737
       %5739 = OpFAdd %v2float %3607 %5738
       %5740 = OpCompositeExtract %float %5739 0
       %5741 = OpCompositeConstruct %v3float %5735 %5736 %5740
       %5742 = OpVectorTimesScalar %v3float %5741 %float_4_76837158en07
       %5743 = OpFAdd %v3float %5742 %143
       %5744 = OpExtInst %v3float %1 Fma %5732 %3595 %5743
       %5745 = OpExtInst %v3float %1 Floor %5744
       %5746 = OpFNegate %v3float %5745
       %5747 = OpExtInst %v3float %1 Fma %5732 %3595 %5746
       %5748 = OpVectorTimesScalar %v3float %5747 %float_2097152
       %5749 = OpFAdd %v3float %5748 %5741
       %5750 = OpVectorTimesScalar %v3float %5749 %float_1
               OpBranch %5751
       %5751 = OpLabel
       %5752 = OpPhi %v3float %5750 %4204 %5753 %5754
       %5755 = OpPhi %float %float_1 %4204 %5756 %5754
       %5757 = OpPhi %float %float_0 %4204 %5758 %5754
       %5759 = OpPhi %uint %uint_0 %4204 %5760 %5754
       %5761 = OpULessThan %bool %5759 %uint_6
               OpLoopMerge %5762 %5754 DontUnroll
               OpBranchConditional %5761 %5754 %5762
       %5754 = OpLabel
       %5763 = OpExtInst %v3float %1 Fract %5752
       %5764 = OpExtInst %v3float %1 Floor %5752
       %5765 = OpDot %float %5764 %397
       %5766 = OpFAdd %float %5765 %float_19
       %5767 = OpFAdd %float %5765 %float_47
       %5768 = OpFAdd %float %5765 %float_66
       %5769 = OpFAdd %float %5765 %float_101
       %5770 = OpFAdd %float %5765 %float_120
       %5771 = OpFAdd %float %5765 %float_148
       %5772 = OpFAdd %float %5765 %float_167
       %5773 = OpConvertFToS %int %5765
       %5774 = OpCompositeConstruct %v3int %5773 %int_0 %int_0
       %5775 = OpBitcast %v3uint %5774
       %5776 = OpIMul %v3uint %5775 %413
       %5777 = OpIAdd %v3uint %5776 %415
       %5778 = OpCompositeExtract %uint %5777 1
       %5779 = OpCompositeExtract %uint %5777 2
       %5780 = OpIMul %uint %5778 %5779
       %5781 = OpCompositeExtract %uint %5777 0
       %5782 = OpIAdd %uint %5781 %5780
       %5783 = OpIMul %uint %5779 %5782
       %5784 = OpIAdd %uint %5778 %5783
       %5785 = OpIMul %uint %5782 %5784
       %5786 = OpIAdd %uint %5779 %5785
       %5787 = OpIMul %uint %5784 %5786
       %5788 = OpIAdd %uint %5782 %5787
       %5789 = OpCompositeInsert %v3uint %5788 %561 0
       %5790 = OpBitwiseAnd %v3uint %416 %417
       %5791 = OpShiftRightLogical %v3uint %5789 %5790
       %5792 = OpCompositeExtract %uint %5791 0
       %5793 = OpCompositeConstruct %v3uint %5792 %5792 %5792
       %5794 = OpBitwiseAnd %v3uint %5793 %398
       %5795 = OpConvertUToF %v3float %5794
       %5796 = OpExtInst %v3float %1 Fma %5795 %402 %287
       %5797 = OpDot %float %5796 %5763
       %5798 = OpConvertFToS %int %5766
       %5799 = OpFSub %v3float %5763 %362
       %5800 = OpCompositeConstruct %v3int %5798 %int_0 %int_0
       %5801 = OpBitcast %v3uint %5800
       %5802 = OpIMul %v3uint %5801 %413
       %5803 = OpIAdd %v3uint %5802 %415
       %5804 = OpCompositeExtract %uint %5803 1
       %5805 = OpCompositeExtract %uint %5803 2
       %5806 = OpIMul %uint %5804 %5805
       %5807 = OpCompositeExtract %uint %5803 0
       %5808 = OpIAdd %uint %5807 %5806
       %5809 = OpIMul %uint %5805 %5808
       %5810 = OpIAdd %uint %5804 %5809
       %5811 = OpIMul %uint %5808 %5810
       %5812 = OpIAdd %uint %5805 %5811
       %5813 = OpIMul %uint %5810 %5812
       %5814 = OpIAdd %uint %5808 %5813
       %5815 = OpCompositeInsert %v3uint %5814 %561 0
       %5816 = OpShiftRightLogical %v3uint %5815 %5790
       %5817 = OpCompositeExtract %uint %5816 0
       %5818 = OpCompositeConstruct %v3uint %5817 %5817 %5817
       %5819 = OpBitwiseAnd %v3uint %5818 %398
       %5820 = OpConvertUToF %v3float %5819
       %5821 = OpExtInst %v3float %1 Fma %5820 %402 %287
       %5822 = OpDot %float %5821 %5799
       %5823 = OpConvertFToS %int %5767
       %5824 = OpFSub %v3float %5763 %363
       %5825 = OpCompositeConstruct %v3int %5823 %int_0 %int_0
       %5826 = OpBitcast %v3uint %5825
       %5827 = OpIMul %v3uint %5826 %413
       %5828 = OpIAdd %v3uint %5827 %415
       %5829 = OpCompositeExtract %uint %5828 1
       %5830 = OpCompositeExtract %uint %5828 2
       %5831 = OpIMul %uint %5829 %5830
       %5832 = OpCompositeExtract %uint %5828 0
       %5833 = OpIAdd %uint %5832 %5831
       %5834 = OpIMul %uint %5830 %5833
       %5835 = OpIAdd %uint %5829 %5834
       %5836 = OpIMul %uint %5833 %5835
       %5837 = OpIAdd %uint %5830 %5836
       %5838 = OpIMul %uint %5835 %5837
       %5839 = OpIAdd %uint %5833 %5838
       %5840 = OpCompositeInsert %v3uint %5839 %561 0
       %5841 = OpShiftRightLogical %v3uint %5840 %5790
       %5842 = OpCompositeExtract %uint %5841 0
       %5843 = OpCompositeConstruct %v3uint %5842 %5842 %5842
       %5844 = OpBitwiseAnd %v3uint %5843 %398
       %5845 = OpConvertUToF %v3float %5844
       %5846 = OpExtInst %v3float %1 Fma %5845 %402 %287
       %5847 = OpDot %float %5846 %5824
       %5848 = OpConvertFToS %int %5768
       %5849 = OpFSub %v3float %5763 %140
       %5850 = OpCompositeConstruct %v3int %5848 %int_0 %int_0
       %5851 = OpBitcast %v3uint %5850
       %5852 = OpIMul %v3uint %5851 %413
       %5853 = OpIAdd %v3uint %5852 %415
       %5854 = OpCompositeExtract %uint %5853 1
       %5855 = OpCompositeExtract %uint %5853 2
       %5856 = OpIMul %uint %5854 %5855
       %5857 = OpCompositeExtract %uint %5853 0
       %5858 = OpIAdd %uint %5857 %5856
       %5859 = OpIMul %uint %5855 %5858
       %5860 = OpIAdd %uint %5854 %5859
       %5861 = OpIMul %uint %5858 %5860
       %5862 = OpIAdd %uint %5855 %5861
       %5863 = OpIMul %uint %5860 %5862
       %5864 = OpIAdd %uint %5858 %5863
       %5865 = OpCompositeInsert %v3uint %5864 %561 0
       %5866 = OpShiftRightLogical %v3uint %5865 %5790
       %5867 = OpCompositeExtract %uint %5866 0
       %5868 = OpCompositeConstruct %v3uint %5867 %5867 %5867
       %5869 = OpBitwiseAnd %v3uint %5868 %398
       %5870 = OpConvertUToF %v3float %5869
       %5871 = OpExtInst %v3float %1 Fma %5870 %402 %287
       %5872 = OpDot %float %5871 %5849
       %5873 = OpConvertFToS %int %5769
       %5874 = OpFSub %v3float %5763 %299
       %5875 = OpCompositeConstruct %v3int %5873 %int_0 %int_0
       %5876 = OpBitcast %v3uint %5875
       %5877 = OpIMul %v3uint %5876 %413
       %5878 = OpIAdd %v3uint %5877 %415
       %5879 = OpCompositeExtract %uint %5878 1
       %5880 = OpCompositeExtract %uint %5878 2
       %5881 = OpIMul %uint %5879 %5880
       %5882 = OpCompositeExtract %uint %5878 0
       %5883 = OpIAdd %uint %5882 %5881
       %5884 = OpIMul %uint %5880 %5883
       %5885 = OpIAdd %uint %5879 %5884
       %5886 = OpIMul %uint %5883 %5885
       %5887 = OpIAdd %uint %5880 %5886
       %5888 = OpIMul %uint %5885 %5887
       %5889 = OpIAdd %uint %5883 %5888
       %5890 = OpCompositeInsert %v3uint %5889 %561 0
       %5891 = OpShiftRightLogical %v3uint %5890 %5790
       %5892 = OpCompositeExtract %uint %5891 0
       %5893 = OpCompositeConstruct %v3uint %5892 %5892 %5892
       %5894 = OpBitwiseAnd %v3uint %5893 %398
       %5895 = OpConvertUToF %v3float %5894
       %5896 = OpExtInst %v3float %1 Fma %5895 %402 %287
       %5897 = OpDot %float %5896 %5874
       %5898 = OpConvertFToS %int %5770
       %5899 = OpFSub %v3float %5763 %146
       %5900 = OpCompositeConstruct %v3int %5898 %int_0 %int_0
       %5901 = OpBitcast %v3uint %5900
       %5902 = OpIMul %v3uint %5901 %413
       %5903 = OpIAdd %v3uint %5902 %415
       %5904 = OpCompositeExtract %uint %5903 1
       %5905 = OpCompositeExtract %uint %5903 2
       %5906 = OpIMul %uint %5904 %5905
       %5907 = OpCompositeExtract %uint %5903 0
       %5908 = OpIAdd %uint %5907 %5906
       %5909 = OpIMul %uint %5905 %5908
       %5910 = OpIAdd %uint %5904 %5909
       %5911 = OpIMul %uint %5908 %5910
       %5912 = OpIAdd %uint %5905 %5911
       %5913 = OpIMul %uint %5910 %5912
       %5914 = OpIAdd %uint %5908 %5913
       %5915 = OpCompositeInsert %v3uint %5914 %561 0
       %5916 = OpShiftRightLogical %v3uint %5915 %5790
       %5917 = OpCompositeExtract %uint %5916 0
       %5918 = OpCompositeConstruct %v3uint %5917 %5917 %5917
       %5919 = OpBitwiseAnd %v3uint %5918 %398
       %5920 = OpConvertUToF %v3float %5919
       %5921 = OpExtInst %v3float %1 Fma %5920 %402 %287
       %5922 = OpDot %float %5921 %5899
       %5923 = OpConvertFToS %int %5771
       %5924 = OpFSub %v3float %5763 %141
       %5925 = OpCompositeConstruct %v3int %5923 %int_0 %int_0
       %5926 = OpBitcast %v3uint %5925
       %5927 = OpIMul %v3uint %5926 %413
       %5928 = OpIAdd %v3uint %5927 %415
       %5929 = OpCompositeExtract %uint %5928 1
       %5930 = OpCompositeExtract %uint %5928 2
       %5931 = OpIMul %uint %5929 %5930
       %5932 = OpCompositeExtract %uint %5928 0
       %5933 = OpIAdd %uint %5932 %5931
       %5934 = OpIMul %uint %5930 %5933
       %5935 = OpIAdd %uint %5929 %5934
       %5936 = OpIMul %uint %5933 %5935
       %5937 = OpIAdd %uint %5930 %5936
       %5938 = OpIMul %uint %5935 %5937
       %5939 = OpIAdd %uint %5933 %5938
       %5940 = OpCompositeInsert %v3uint %5939 %561 0
       %5941 = OpShiftRightLogical %v3uint %5940 %5790
       %5942 = OpCompositeExtract %uint %5941 0
       %5943 = OpCompositeConstruct %v3uint %5942 %5942 %5942
       %5944 = OpBitwiseAnd %v3uint %5943 %398
       %5945 = OpConvertUToF %v3float %5944
       %5946 = OpExtInst %v3float %1 Fma %5945 %402 %287
       %5947 = OpDot %float %5946 %5924
       %5948 = OpConvertFToS %int %5772
       %5949 = OpFSub %v3float %5763 %134
       %5950 = OpCompositeConstruct %v3int %5948 %int_0 %int_0
       %5951 = OpBitcast %v3uint %5950
       %5952 = OpIMul %v3uint %5951 %413
       %5953 = OpIAdd %v3uint %5952 %415
       %5954 = OpCompositeExtract %uint %5953 1
       %5955 = OpCompositeExtract %uint %5953 2
       %5956 = OpIMul %uint %5954 %5955
       %5957 = OpCompositeExtract %uint %5953 0
       %5958 = OpIAdd %uint %5957 %5956
       %5959 = OpIMul %uint %5955 %5958
       %5960 = OpIAdd %uint %5954 %5959
       %5961 = OpIMul %uint %5958 %5960
       %5962 = OpIAdd %uint %5955 %5961
       %5963 = OpIMul %uint %5960 %5962
       %5964 = OpIAdd %uint %5958 %5963
       %5965 = OpCompositeInsert %v3uint %5964 %561 0
       %5966 = OpShiftRightLogical %v3uint %5965 %5790
       %5967 = OpCompositeExtract %uint %5966 0
       %5968 = OpCompositeConstruct %v3uint %5967 %5967 %5967
       %5969 = OpBitwiseAnd %v3uint %5968 %398
       %5970 = OpConvertUToF %v3float %5969
       %5971 = OpExtInst %v3float %1 Fma %5970 %402 %287
       %5972 = OpDot %float %5971 %5949
       %5973 = OpCompositeExtract %float %5763 0
       %5974 = OpCompositeExtract %float %5763 1
       %5975 = OpCompositeExtract %float %5763 2
       %5976 = OpCompositeConstruct %v4float %5973 %5974 %5975 %float_0
       %5977 = OpFMul %v4float %5976 %5976
       %5978 = OpFMul %v4float %5977 %5976
       %5979 = OpVectorTimesScalar %v4float %5976 %float_6
       %5980 = OpFSub %v4float %5979 %393
       %5981 = OpExtInst %v4float %1 Fma %5976 %5980 %394
       %5982 = OpFMul %v4float %5978 %5981
       %5983 = OpCompositeExtract %float %5982 0
       %5984 = OpExtInst %float %1 FMix %5797 %5822 %5983
       %5985 = OpExtInst %float %1 FMix %5847 %5872 %5983
       %5986 = OpCompositeExtract %float %5982 1
       %5987 = OpExtInst %float %1 FMix %5984 %5985 %5986
       %5988 = OpExtInst %float %1 FMix %5897 %5922 %5983
       %5989 = OpExtInst %float %1 FMix %5947 %5972 %5983
       %5990 = OpExtInst %float %1 FMix %5988 %5989 %5986
       %5991 = OpCompositeExtract %float %5982 2
       %5992 = OpExtInst %float %1 FMix %5987 %5990 %5991
       %5758 = OpExtInst %float %1 Fma %5992 %5755 %5757
       %5753 = OpVectorTimesScalar %v3float %5752 %float_2
       %5756 = OpFMul %float %5755 %float_0_5
       %5760 = OpIAdd %uint %5759 %uint_1
               OpBranch %5751
       %5762 = OpLabel
       %5993 = OpExtInst %float %1 Fma %5757 %float_0_5 %float_0_5
       %5994 = OpExtInst %float %1 FMix %float_0 %float_1 %5993
       %5995 = OpExtInst %float %1 FClamp %5994 %float_0 %float_1
       %5996 = OpExtInst %float %1 FMix %1174 %1727 %5995
       %5997 = OpFMul %float %5728 %5996
       %5998 = OpExtInst %float %1 Fma %5722 %5726 %5997
       %5999 = OpExtInst %float %1 Floor %5727
       %6000 = OpFNegate %float %5999
       %6001 = OpExtInst %float %1 Fma %5721 %5726 %6000
       %6002 = OpExtInst %float %1 Fma %6001 %float_2097152 %5998
       %6003 = OpExtInst %float %1 Floor %6002
       %6004 = OpFMul %float %5999 %float_n6_28318548
       %6005 = OpExtInst %float %1 Fma %5727 %float_6_28318548 %6004
       %6006 = OpFMul %float %6003 %float_n6_28318548
       %6007 = OpExtInst %float %1 Fma %5998 %float_6_28318548 %6006
       %6008 = OpExtInst %float %1 Fma %6005 %float_2097152 %6007
       %6009 = OpFMul %v3float %5730 %3889
       %6010 = OpFMul %v3float %3889 %5731
       %6011 = OpFMul %v3float %6010 %3894
       %6012 = OpCompositeExtract %float %6011 0
       %6013 = OpCompositeExtract %float %6011 1
       %6014 = OpCompositeExtract %float %6011 2
       %6015 = OpCompositeConstruct %v2float %6014 %6014
       %6016 = OpFAdd %v2float %3904 %6015
       %6017 = OpCompositeExtract %float %6016 0
       %6018 = OpCompositeConstruct %v3float %6012 %6013 %6017
       %6019 = OpVectorTimesScalar %v3float %6018 %float_4_76837158en07
       %6020 = OpFAdd %v3float %6019 %143
       %6021 = OpExtInst %v3float %1 Fma %6009 %3894 %6020
       %6022 = OpExtInst %v3float %1 Floor %6021
       %6023 = OpFNegate %v3float %6022
       %6024 = OpExtInst %v3float %1 Fma %6009 %3894 %6023
       %6025 = OpVectorTimesScalar %v3float %6024 %float_2097152
       %6026 = OpFAdd %v3float %6025 %6018
       %6027 = OpVectorTimesScalar %v3float %6026 %float_1
               OpBranch %6028
       %6028 = OpLabel
       %6029 = OpPhi %v3float %6027 %5762 %6030 %6031
       %6032 = OpPhi %float %float_1 %5762 %6033 %6031
       %6034 = OpPhi %float %float_0 %5762 %6035 %6031
       %6036 = OpPhi %uint %uint_0 %5762 %6037 %6031
       %6038 = OpULessThan %bool %6036 %uint_10
               OpLoopMerge %6039 %6031 DontUnroll
               OpBranchConditional %6038 %6031 %6039
       %6031 = OpLabel
       %6040 = OpExtInst %v3float %1 Fract %6029
       %6041 = OpExtInst %v3float %1 Floor %6029
       %6042 = OpDot %float %6041 %397
       %6043 = OpFAdd %float %6042 %float_19
       %6044 = OpFAdd %float %6042 %float_47
       %6045 = OpFAdd %float %6042 %float_66
       %6046 = OpFAdd %float %6042 %float_101
       %6047 = OpFAdd %float %6042 %float_120
       %6048 = OpFAdd %float %6042 %float_148
       %6049 = OpFAdd %float %6042 %float_167
       %6050 = OpConvertFToS %int %6042
       %6051 = OpCompositeConstruct %v3int %6050 %int_0 %int_0
       %6052 = OpBitcast %v3uint %6051
       %6053 = OpIMul %v3uint %6052 %413
       %6054 = OpIAdd %v3uint %6053 %415
       %6055 = OpCompositeExtract %uint %6054 1
       %6056 = OpCompositeExtract %uint %6054 2
       %6057 = OpIMul %uint %6055 %6056
       %6058 = OpCompositeExtract %uint %6054 0
       %6059 = OpIAdd %uint %6058 %6057
       %6060 = OpIMul %uint %6056 %6059
       %6061 = OpIAdd %uint %6055 %6060
       %6062 = OpIMul %uint %6059 %6061
       %6063 = OpIAdd %uint %6056 %6062
       %6064 = OpIMul %uint %6061 %6063
       %6065 = OpIAdd %uint %6059 %6064
       %6066 = OpCompositeInsert %v3uint %6065 %561 0
       %6067 = OpBitwiseAnd %v3uint %416 %417
       %6068 = OpShiftRightLogical %v3uint %6066 %6067
       %6069 = OpCompositeExtract %uint %6068 0
       %6070 = OpCompositeConstruct %v3uint %6069 %6069 %6069
       %6071 = OpBitwiseAnd %v3uint %6070 %398
       %6072 = OpConvertUToF %v3float %6071
       %6073 = OpExtInst %v3float %1 Fma %6072 %402 %287
       %6074 = OpDot %float %6073 %6040
       %6075 = OpConvertFToS %int %6043
       %6076 = OpFSub %v3float %6040 %362
       %6077 = OpCompositeConstruct %v3int %6075 %int_0 %int_0
       %6078 = OpBitcast %v3uint %6077
       %6079 = OpIMul %v3uint %6078 %413
       %6080 = OpIAdd %v3uint %6079 %415
       %6081 = OpCompositeExtract %uint %6080 1
       %6082 = OpCompositeExtract %uint %6080 2
       %6083 = OpIMul %uint %6081 %6082
       %6084 = OpCompositeExtract %uint %6080 0
       %6085 = OpIAdd %uint %6084 %6083
       %6086 = OpIMul %uint %6082 %6085
       %6087 = OpIAdd %uint %6081 %6086
       %6088 = OpIMul %uint %6085 %6087
       %6089 = OpIAdd %uint %6082 %6088
       %6090 = OpIMul %uint %6087 %6089
       %6091 = OpIAdd %uint %6085 %6090
       %6092 = OpCompositeInsert %v3uint %6091 %561 0
       %6093 = OpShiftRightLogical %v3uint %6092 %6067
       %6094 = OpCompositeExtract %uint %6093 0
       %6095 = OpCompositeConstruct %v3uint %6094 %6094 %6094
       %6096 = OpBitwiseAnd %v3uint %6095 %398
       %6097 = OpConvertUToF %v3float %6096
       %6098 = OpExtInst %v3float %1 Fma %6097 %402 %287
       %6099 = OpDot %float %6098 %6076
       %6100 = OpConvertFToS %int %6044
       %6101 = OpFSub %v3float %6040 %363
       %6102 = OpCompositeConstruct %v3int %6100 %int_0 %int_0
       %6103 = OpBitcast %v3uint %6102
       %6104 = OpIMul %v3uint %6103 %413
       %6105 = OpIAdd %v3uint %6104 %415
       %6106 = OpCompositeExtract %uint %6105 1
       %6107 = OpCompositeExtract %uint %6105 2
       %6108 = OpIMul %uint %6106 %6107
       %6109 = OpCompositeExtract %uint %6105 0
       %6110 = OpIAdd %uint %6109 %6108
       %6111 = OpIMul %uint %6107 %6110
       %6112 = OpIAdd %uint %6106 %6111
       %6113 = OpIMul %uint %6110 %6112
       %6114 = OpIAdd %uint %6107 %6113
       %6115 = OpIMul %uint %6112 %6114
       %6116 = OpIAdd %uint %6110 %6115
       %6117 = OpCompositeInsert %v3uint %6116 %561 0
       %6118 = OpShiftRightLogical %v3uint %6117 %6067
       %6119 = OpCompositeExtract %uint %6118 0
       %6120 = OpCompositeConstruct %v3uint %6119 %6119 %6119
       %6121 = OpBitwiseAnd %v3uint %6120 %398
       %6122 = OpConvertUToF %v3float %6121
       %6123 = OpExtInst %v3float %1 Fma %6122 %402 %287
       %6124 = OpDot %float %6123 %6101
       %6125 = OpConvertFToS %int %6045
       %6126 = OpFSub %v3float %6040 %140
       %6127 = OpCompositeConstruct %v3int %6125 %int_0 %int_0
       %6128 = OpBitcast %v3uint %6127
       %6129 = OpIMul %v3uint %6128 %413
       %6130 = OpIAdd %v3uint %6129 %415
       %6131 = OpCompositeExtract %uint %6130 1
       %6132 = OpCompositeExtract %uint %6130 2
       %6133 = OpIMul %uint %6131 %6132
       %6134 = OpCompositeExtract %uint %6130 0
       %6135 = OpIAdd %uint %6134 %6133
       %6136 = OpIMul %uint %6132 %6135
       %6137 = OpIAdd %uint %6131 %6136
       %6138 = OpIMul %uint %6135 %6137
       %6139 = OpIAdd %uint %6132 %6138
       %6140 = OpIMul %uint %6137 %6139
       %6141 = OpIAdd %uint %6135 %6140
       %6142 = OpCompositeInsert %v3uint %6141 %561 0
       %6143 = OpShiftRightLogical %v3uint %6142 %6067
       %6144 = OpCompositeExtract %uint %6143 0
       %6145 = OpCompositeConstruct %v3uint %6144 %6144 %6144
       %6146 = OpBitwiseAnd %v3uint %6145 %398
       %6147 = OpConvertUToF %v3float %6146
       %6148 = OpExtInst %v3float %1 Fma %6147 %402 %287
       %6149 = OpDot %float %6148 %6126
       %6150 = OpConvertFToS %int %6046
       %6151 = OpFSub %v3float %6040 %299
       %6152 = OpCompositeConstruct %v3int %6150 %int_0 %int_0
       %6153 = OpBitcast %v3uint %6152
       %6154 = OpIMul %v3uint %6153 %413
       %6155 = OpIAdd %v3uint %6154 %415
       %6156 = OpCompositeExtract %uint %6155 1
       %6157 = OpCompositeExtract %uint %6155 2
       %6158 = OpIMul %uint %6156 %6157
       %6159 = OpCompositeExtract %uint %6155 0
       %6160 = OpIAdd %uint %6159 %6158
       %6161 = OpIMul %uint %6157 %6160
       %6162 = OpIAdd %uint %6156 %6161
       %6163 = OpIMul %uint %6160 %6162
       %6164 = OpIAdd %uint %6157 %6163
       %6165 = OpIMul %uint %6162 %6164
       %6166 = OpIAdd %uint %6160 %6165
       %6167 = OpCompositeInsert %v3uint %6166 %561 0
       %6168 = OpShiftRightLogical %v3uint %6167 %6067
       %6169 = OpCompositeExtract %uint %6168 0
       %6170 = OpCompositeConstruct %v3uint %6169 %6169 %6169
       %6171 = OpBitwiseAnd %v3uint %6170 %398
       %6172 = OpConvertUToF %v3float %6171
       %6173 = OpExtInst %v3float %1 Fma %6172 %402 %287
       %6174 = OpDot %float %6173 %6151
       %6175 = OpConvertFToS %int %6047
       %6176 = OpFSub %v3float %6040 %146
       %6177 = OpCompositeConstruct %v3int %6175 %int_0 %int_0
       %6178 = OpBitcast %v3uint %6177
       %6179 = OpIMul %v3uint %6178 %413
       %6180 = OpIAdd %v3uint %6179 %415
       %6181 = OpCompositeExtract %uint %6180 1
       %6182 = OpCompositeExtract %uint %6180 2
       %6183 = OpIMul %uint %6181 %6182
       %6184 = OpCompositeExtract %uint %6180 0
       %6185 = OpIAdd %uint %6184 %6183
       %6186 = OpIMul %uint %6182 %6185
       %6187 = OpIAdd %uint %6181 %6186
       %6188 = OpIMul %uint %6185 %6187
       %6189 = OpIAdd %uint %6182 %6188
       %6190 = OpIMul %uint %6187 %6189
       %6191 = OpIAdd %uint %6185 %6190
       %6192 = OpCompositeInsert %v3uint %6191 %561 0
       %6193 = OpShiftRightLogical %v3uint %6192 %6067
       %6194 = OpCompositeExtract %uint %6193 0
       %6195 = OpCompositeConstruct %v3uint %6194 %6194 %6194
       %6196 = OpBitwiseAnd %v3uint %6195 %398
       %6197 = OpConvertUToF %v3float %6196
       %6198 = OpExtInst %v3float %1 Fma %6197 %402 %287
       %6199 = OpDot %float %6198 %6176
       %6200 = OpConvertFToS %int %6048
       %6201 = OpFSub %v3float %6040 %141
       %6202 = OpCompositeConstruct %v3int %6200 %int_0 %int_0
       %6203 = OpBitcast %v3uint %6202
       %6204 = OpIMul %v3uint %6203 %413
       %6205 = OpIAdd %v3uint %6204 %415
       %6206 = OpCompositeExtract %uint %6205 1
       %6207 = OpCompositeExtract %uint %6205 2
       %6208 = OpIMul %uint %6206 %6207
       %6209 = OpCompositeExtract %uint %6205 0
       %6210 = OpIAdd %uint %6209 %6208
       %6211 = OpIMul %uint %6207 %6210
       %6212 = OpIAdd %uint %6206 %6211
       %6213 = OpIMul %uint %6210 %6212
       %6214 = OpIAdd %uint %6207 %6213
       %6215 = OpIMul %uint %6212 %6214
       %6216 = OpIAdd %uint %6210 %6215
       %6217 = OpCompositeInsert %v3uint %6216 %561 0
       %6218 = OpShiftRightLogical %v3uint %6217 %6067
       %6219 = OpCompositeExtract %uint %6218 0
       %6220 = OpCompositeConstruct %v3uint %6219 %6219 %6219
       %6221 = OpBitwiseAnd %v3uint %6220 %398
       %6222 = OpConvertUToF %v3float %6221
       %6223 = OpExtInst %v3float %1 Fma %6222 %402 %287
       %6224 = OpDot %float %6223 %6201
       %6225 = OpConvertFToS %int %6049
       %6226 = OpFSub %v3float %6040 %134
       %6227 = OpCompositeConstruct %v3int %6225 %int_0 %int_0
       %6228 = OpBitcast %v3uint %6227
       %6229 = OpIMul %v3uint %6228 %413
       %6230 = OpIAdd %v3uint %6229 %415
       %6231 = OpCompositeExtract %uint %6230 1
       %6232 = OpCompositeExtract %uint %6230 2
       %6233 = OpIMul %uint %6231 %6232
       %6234 = OpCompositeExtract %uint %6230 0
       %6235 = OpIAdd %uint %6234 %6233
       %6236 = OpIMul %uint %6232 %6235
       %6237 = OpIAdd %uint %6231 %6236
       %6238 = OpIMul %uint %6235 %6237
       %6239 = OpIAdd %uint %6232 %6238
       %6240 = OpIMul %uint %6237 %6239
       %6241 = OpIAdd %uint %6235 %6240
       %6242 = OpCompositeInsert %v3uint %6241 %561 0
       %6243 = OpShiftRightLogical %v3uint %6242 %6067
       %6244 = OpCompositeExtract %uint %6243 0
       %6245 = OpCompositeConstruct %v3uint %6244 %6244 %6244
       %6246 = OpBitwiseAnd %v3uint %6245 %398
       %6247 = OpConvertUToF %v3float %6246
       %6248 = OpExtInst %v3float %1 Fma %6247 %402 %287
       %6249 = OpDot %float %6248 %6226
       %6250 = OpCompositeExtract %float %6040 0
       %6251 = OpCompositeExtract %float %6040 1
       %6252 = OpCompositeExtract %float %6040 2
       %6253 = OpCompositeConstruct %v4float %6250 %6251 %6252 %float_0
       %6254 = OpFMul %v4float %6253 %6253
       %6255 = OpFMul %v4float %6254 %6253
       %6256 = OpVectorTimesScalar %v4float %6253 %float_6
       %6257 = OpFSub %v4float %6256 %393
       %6258 = OpExtInst %v4float %1 Fma %6253 %6257 %394
       %6259 = OpFMul %v4float %6255 %6258
       %6260 = OpCompositeExtract %float %6259 0
       %6261 = OpExtInst %float %1 FMix %6074 %6099 %6260
       %6262 = OpExtInst %float %1 FMix %6124 %6149 %6260
       %6263 = OpCompositeExtract %float %6259 1
       %6264 = OpExtInst %float %1 FMix %6261 %6262 %6263
       %6265 = OpExtInst %float %1 FMix %6174 %6199 %6260
       %6266 = OpExtInst %float %1 FMix %6224 %6249 %6260
       %6267 = OpExtInst %float %1 FMix %6265 %6266 %6263
       %6268 = OpCompositeExtract %float %6259 2
       %6269 = OpExtInst %float %1 FMix %6264 %6267 %6268
       %6270 = OpExtInst %float %1 FAbs %6269
       %6035 = OpExtInst %float %1 Fma %6270 %6032 %6034
       %6030 = OpVectorTimesScalar %v3float %6029 %float_2
       %6033 = OpFMul %float %6032 %float_0_5
       %6037 = OpIAdd %uint %6036 %uint_1
               OpBranch %6028
       %6039 = OpLabel
       %6271 = OpExtInst %float %1 FMix %float_0 %float_1 %6034
       %6272 = OpFMul %v3float %5730 %4164
       %6273 = OpFMul %v3float %4164 %5731
       %6274 = OpFMul %v3float %6273 %4169
       %6275 = OpCompositeExtract %float %6274 0
       %6276 = OpCompositeExtract %float %6274 1
       %6277 = OpCompositeExtract %float %6274 2
       %6278 = OpCompositeConstruct %v2float %6277 %6277
       %6279 = OpFAdd %v2float %4179 %6278
       %6280 = OpCompositeExtract %float %6279 0
       %6281 = OpCompositeConstruct %v3float %6275 %6276 %6280
       %6282 = OpVectorTimesScalar %v3float %6281 %float_4_76837158en07
       %6283 = OpFAdd %v3float %6282 %143
       %6284 = OpExtInst %v3float %1 Fma %6272 %4169 %6283
       %6285 = OpExtInst %v3float %1 Floor %6284
       %6286 = OpFNegate %v3float %6285
       %6287 = OpExtInst %v3float %1 Fma %6272 %4169 %6286
       %6288 = OpVectorTimesScalar %v3float %6287 %float_2097152
       %6289 = OpFAdd %v3float %6288 %6281
       %6290 = OpVectorTimesScalar %v3float %6289 %float_1
               OpBranch %6291
       %6291 = OpLabel
       %6292 = OpPhi %v3float %6290 %6039 %6293 %6294
       %6295 = OpPhi %float %float_1 %6039 %6296 %6294
       %6297 = OpPhi %float %float_0 %6039 %6298 %6294
       %6299 = OpPhi %uint %uint_0 %6039 %6300 %6294
       %6301 = OpULessThan %bool %6299 %uint_10
               OpLoopMerge %6302 %6294 DontUnroll
               OpBranchConditional %6301 %6294 %6302
       %6294 = OpLabel
       %6303 = OpExtInst %v3float %1 Fract %6292
       %6304 = OpExtInst %v3float %1 Floor %6292
       %6305 = OpDot %float %6304 %397
       %6306 = OpFAdd %float %6305 %float_19
       %6307 = OpFAdd %float %6305 %float_47
       %6308 = OpFAdd %float %6305 %float_66
       %6309 = OpFAdd %float %6305 %float_101
       %6310 = OpFAdd %float %6305 %float_120
       %6311 = OpFAdd %float %6305 %float_148
       %6312 = OpFAdd %float %6305 %float_167
       %6313 = OpConvertFToS %int %6305
       %6314 = OpCompositeConstruct %v3int %6313 %int_0 %int_0
       %6315 = OpBitcast %v3uint %6314
       %6316 = OpIMul %v3uint %6315 %413
       %6317 = OpIAdd %v3uint %6316 %415
       %6318 = OpCompositeExtract %uint %6317 1
       %6319 = OpCompositeExtract %uint %6317 2
       %6320 = OpIMul %uint %6318 %6319
       %6321 = OpCompositeExtract %uint %6317 0
       %6322 = OpIAdd %uint %6321 %6320
       %6323 = OpIMul %uint %6319 %6322
       %6324 = OpIAdd %uint %6318 %6323
       %6325 = OpIMul %uint %6322 %6324
       %6326 = OpIAdd %uint %6319 %6325
       %6327 = OpIMul %uint %6324 %6326
       %6328 = OpIAdd %uint %6322 %6327
       %6329 = OpCompositeInsert %v3uint %6328 %561 0
       %6330 = OpBitwiseAnd %v3uint %416 %417
       %6331 = OpShiftRightLogical %v3uint %6329 %6330
       %6332 = OpCompositeExtract %uint %6331 0
       %6333 = OpCompositeConstruct %v3uint %6332 %6332 %6332
       %6334 = OpBitwiseAnd %v3uint %6333 %398
       %6335 = OpConvertUToF %v3float %6334
       %6336 = OpExtInst %v3float %1 Fma %6335 %402 %287
       %6337 = OpDot %float %6336 %6303
       %6338 = OpConvertFToS %int %6306
       %6339 = OpFSub %v3float %6303 %362
       %6340 = OpCompositeConstruct %v3int %6338 %int_0 %int_0
       %6341 = OpBitcast %v3uint %6340
       %6342 = OpIMul %v3uint %6341 %413
       %6343 = OpIAdd %v3uint %6342 %415
       %6344 = OpCompositeExtract %uint %6343 1
       %6345 = OpCompositeExtract %uint %6343 2
       %6346 = OpIMul %uint %6344 %6345
       %6347 = OpCompositeExtract %uint %6343 0
       %6348 = OpIAdd %uint %6347 %6346
       %6349 = OpIMul %uint %6345 %6348
       %6350 = OpIAdd %uint %6344 %6349
       %6351 = OpIMul %uint %6348 %6350
       %6352 = OpIAdd %uint %6345 %6351
       %6353 = OpIMul %uint %6350 %6352
       %6354 = OpIAdd %uint %6348 %6353
       %6355 = OpCompositeInsert %v3uint %6354 %561 0
       %6356 = OpShiftRightLogical %v3uint %6355 %6330
       %6357 = OpCompositeExtract %uint %6356 0
       %6358 = OpCompositeConstruct %v3uint %6357 %6357 %6357
       %6359 = OpBitwiseAnd %v3uint %6358 %398
       %6360 = OpConvertUToF %v3float %6359
       %6361 = OpExtInst %v3float %1 Fma %6360 %402 %287
       %6362 = OpDot %float %6361 %6339
       %6363 = OpConvertFToS %int %6307
       %6364 = OpFSub %v3float %6303 %363
       %6365 = OpCompositeConstruct %v3int %6363 %int_0 %int_0
       %6366 = OpBitcast %v3uint %6365
       %6367 = OpIMul %v3uint %6366 %413
       %6368 = OpIAdd %v3uint %6367 %415
       %6369 = OpCompositeExtract %uint %6368 1
       %6370 = OpCompositeExtract %uint %6368 2
       %6371 = OpIMul %uint %6369 %6370
       %6372 = OpCompositeExtract %uint %6368 0
       %6373 = OpIAdd %uint %6372 %6371
       %6374 = OpIMul %uint %6370 %6373
       %6375 = OpIAdd %uint %6369 %6374
       %6376 = OpIMul %uint %6373 %6375
       %6377 = OpIAdd %uint %6370 %6376
       %6378 = OpIMul %uint %6375 %6377
       %6379 = OpIAdd %uint %6373 %6378
       %6380 = OpCompositeInsert %v3uint %6379 %561 0
       %6381 = OpShiftRightLogical %v3uint %6380 %6330
       %6382 = OpCompositeExtract %uint %6381 0
       %6383 = OpCompositeConstruct %v3uint %6382 %6382 %6382
       %6384 = OpBitwiseAnd %v3uint %6383 %398
       %6385 = OpConvertUToF %v3float %6384
       %6386 = OpExtInst %v3float %1 Fma %6385 %402 %287
       %6387 = OpDot %float %6386 %6364
       %6388 = OpConvertFToS %int %6308
       %6389 = OpFSub %v3float %6303 %140
       %6390 = OpCompositeConstruct %v3int %6388 %int_0 %int_0
       %6391 = OpBitcast %v3uint %6390
       %6392 = OpIMul %v3uint %6391 %413
       %6393 = OpIAdd %v3uint %6392 %415
       %6394 = OpCompositeExtract %uint %6393 1
       %6395 = OpCompositeExtract %uint %6393 2
       %6396 = OpIMul %uint %6394 %6395
       %6397 = OpCompositeExtract %uint %6393 0
       %6398 = OpIAdd %uint %6397 %6396
       %6399 = OpIMul %uint %6395 %6398
       %6400 = OpIAdd %uint %6394 %6399
       %6401 = OpIMul %uint %6398 %6400
       %6402 = OpIAdd %uint %6395 %6401
       %6403 = OpIMul %uint %6400 %6402
       %6404 = OpIAdd %uint %6398 %6403
       %6405 = OpCompositeInsert %v3uint %6404 %561 0
       %6406 = OpShiftRightLogical %v3uint %6405 %6330
       %6407 = OpCompositeExtract %uint %6406 0
       %6408 = OpCompositeConstruct %v3uint %6407 %6407 %6407
       %6409 = OpBitwiseAnd %v3uint %6408 %398
       %6410 = OpConvertUToF %v3float %6409
       %6411 = OpExtInst %v3float %1 Fma %6410 %402 %287
       %6412 = OpDot %float %6411 %6389
       %6413 = OpConvertFToS %int %6309
       %6414 = OpFSub %v3float %6303 %299
       %6415 = OpCompositeConstruct %v3int %6413 %int_0 %int_0
       %6416 = OpBitcast %v3uint %6415
       %6417 = OpIMul %v3uint %6416 %413
       %6418 = OpIAdd %v3uint %6417 %415
       %6419 = OpCompositeExtract %uint %6418 1
       %6420 = OpCompositeExtract %uint %6418 2
       %6421 = OpIMul %uint %6419 %6420
       %6422 = OpCompositeExtract %uint %6418 0
       %6423 = OpIAdd %uint %6422 %6421
       %6424 = OpIMul %uint %6420 %6423
       %6425 = OpIAdd %uint %6419 %6424
       %6426 = OpIMul %uint %6423 %6425
       %6427 = OpIAdd %uint %6420 %6426
       %6428 = OpIMul %uint %6425 %6427
       %6429 = OpIAdd %uint %6423 %6428
       %6430 = OpCompositeInsert %v3uint %6429 %561 0
       %6431 = OpShiftRightLogical %v3uint %6430 %6330
       %6432 = OpCompositeExtract %uint %6431 0
       %6433 = OpCompositeConstruct %v3uint %6432 %6432 %6432
       %6434 = OpBitwiseAnd %v3uint %6433 %398
       %6435 = OpConvertUToF %v3float %6434
       %6436 = OpExtInst %v3float %1 Fma %6435 %402 %287
       %6437 = OpDot %float %6436 %6414
       %6438 = OpConvertFToS %int %6310
       %6439 = OpFSub %v3float %6303 %146
       %6440 = OpCompositeConstruct %v3int %6438 %int_0 %int_0
       %6441 = OpBitcast %v3uint %6440
       %6442 = OpIMul %v3uint %6441 %413
       %6443 = OpIAdd %v3uint %6442 %415
       %6444 = OpCompositeExtract %uint %6443 1
       %6445 = OpCompositeExtract %uint %6443 2
       %6446 = OpIMul %uint %6444 %6445
       %6447 = OpCompositeExtract %uint %6443 0
       %6448 = OpIAdd %uint %6447 %6446
       %6449 = OpIMul %uint %6445 %6448
       %6450 = OpIAdd %uint %6444 %6449
       %6451 = OpIMul %uint %6448 %6450
       %6452 = OpIAdd %uint %6445 %6451
       %6453 = OpIMul %uint %6450 %6452
       %6454 = OpIAdd %uint %6448 %6453
       %6455 = OpCompositeInsert %v3uint %6454 %561 0
       %6456 = OpShiftRightLogical %v3uint %6455 %6330
       %6457 = OpCompositeExtract %uint %6456 0
       %6458 = OpCompositeConstruct %v3uint %6457 %6457 %6457
       %6459 = OpBitwiseAnd %v3uint %6458 %398
       %6460 = OpConvertUToF %v3float %6459
       %6461 = OpExtInst %v3float %1 Fma %6460 %402 %287
       %6462 = OpDot %float %6461 %6439
       %6463 = OpConvertFToS %int %6311
       %6464 = OpFSub %v3float %6303 %141
       %6465 = OpCompositeConstruct %v3int %6463 %int_0 %int_0
       %6466 = OpBitcast %v3uint %6465
       %6467 = OpIMul %v3uint %6466 %413
       %6468 = OpIAdd %v3uint %6467 %415
       %6469 = OpCompositeExtract %uint %6468 1
       %6470 = OpCompositeExtract %uint %6468 2
       %6471 = OpIMul %uint %6469 %6470
       %6472 = OpCompositeExtract %uint %6468 0
       %6473 = OpIAdd %uint %6472 %6471
       %6474 = OpIMul %uint %6470 %6473
       %6475 = OpIAdd %uint %6469 %6474
       %6476 = OpIMul %uint %6473 %6475
       %6477 = OpIAdd %uint %6470 %6476
       %6478 = OpIMul %uint %6475 %6477
       %6479 = OpIAdd %uint %6473 %6478
       %6480 = OpCompositeInsert %v3uint %6479 %561 0
       %6481 = OpShiftRightLogical %v3uint %6480 %6330
       %6482 = OpCompositeExtract %uint %6481 0
       %6483 = OpCompositeConstruct %v3uint %6482 %6482 %6482
       %6484 = OpBitwiseAnd %v3uint %6483 %398
       %6485 = OpConvertUToF %v3float %6484
       %6486 = OpExtInst %v3float %1 Fma %6485 %402 %287
       %6487 = OpDot %float %6486 %6464
       %6488 = OpConvertFToS %int %6312
       %6489 = OpFSub %v3float %6303 %134
       %6490 = OpCompositeConstruct %v3int %6488 %int_0 %int_0
       %6491 = OpBitcast %v3uint %6490
       %6492 = OpIMul %v3uint %6491 %413
       %6493 = OpIAdd %v3uint %6492 %415
       %6494 = OpCompositeExtract %uint %6493 1
       %6495 = OpCompositeExtract %uint %6493 2
       %6496 = OpIMul %uint %6494 %6495
       %6497 = OpCompositeExtract %uint %6493 0
       %6498 = OpIAdd %uint %6497 %6496
       %6499 = OpIMul %uint %6495 %6498
       %6500 = OpIAdd %uint %6494 %6499
       %6501 = OpIMul %uint %6498 %6500
       %6502 = OpIAdd %uint %6495 %6501
       %6503 = OpIMul %uint %6500 %6502
       %6504 = OpIAdd %uint %6498 %6503
       %6505 = OpCompositeInsert %v3uint %6504 %561 0
       %6506 = OpShiftRightLogical %v3uint %6505 %6330
       %6507 = OpCompositeExtract %uint %6506 0
       %6508 = OpCompositeConstruct %v3uint %6507 %6507 %6507
       %6509 = OpBitwiseAnd %v3uint %6508 %398
       %6510 = OpConvertUToF %v3float %6509
       %6511 = OpExtInst %v3float %1 Fma %6510 %402 %287
       %6512 = OpDot %float %6511 %6489
       %6513 = OpCompositeExtract %float %6303 0
       %6514 = OpCompositeExtract %float %6303 1
       %6515 = OpCompositeExtract %float %6303 2
       %6516 = OpCompositeConstruct %v4float %6513 %6514 %6515 %float_0
       %6517 = OpFMul %v4float %6516 %6516
       %6518 = OpFMul %v4float %6517 %6516
       %6519 = OpVectorTimesScalar %v4float %6516 %float_6
       %6520 = OpFSub %v4float %6519 %393
       %6521 = OpExtInst %v4float %1 Fma %6516 %6520 %394
       %6522 = OpFMul %v4float %6518 %6521
       %6523 = OpCompositeExtract %float %6522 0
       %6524 = OpExtInst %float %1 FMix %6337 %6362 %6523
       %6525 = OpExtInst %float %1 FMix %6387 %6412 %6523
       %6526 = OpCompositeExtract %float %6522 1
       %6527 = OpExtInst %float %1 FMix %6524 %6525 %6526
       %6528 = OpExtInst %float %1 FMix %6437 %6462 %6523
       %6529 = OpExtInst %float %1 FMix %6487 %6512 %6523
       %6530 = OpExtInst %float %1 FMix %6528 %6529 %6526
       %6531 = OpCompositeExtract %float %6522 2
       %6532 = OpExtInst %float %1 FMix %6527 %6530 %6531
       %6533 = OpExtInst %float %1 FAbs %6532
       %6298 = OpExtInst %float %1 Fma %6533 %6295 %6297
       %6293 = OpVectorTimesScalar %v3float %6292 %float_2
       %6296 = OpFMul %float %6295 %float_0_5
       %6300 = OpIAdd %uint %6299 %uint_1
               OpBranch %6291
       %6302 = OpLabel
       %6534 = OpExtInst %float %1 FMix %float_0 %float_1 %6297
       %6535 = OpExtInst %float %1 Fma %6534 %4438 %4440
       %6536 = OpFMul %float %6271 %6535
       %6537 = OpExtInst %float %1 FMix %3881 %3886 %6536
       %6538 = OpExtInst %float %1 Sin %6008
       %6539 = OpFMul %float %6538 %6537
       %6540 = OpFAdd %v3float %5708 %2574
       %6541 = OpExtInst %v3float %1 NMax %6540 %287
       %6542 = OpExtInst %v3float %1 NMin %6541 %134
       %6543 = OpCompositeExtract %float %6542 0
       %6544 = OpCompositeExtract %float %6542 1
       %6545 = OpCompositeConstruct %v2float %6543 %6544
       %6546 = OpFMul %v2float %1709 %6545
       %6547 = OpFMul %v2float %6545 %1710
       %6548 = OpCompositeExtract %float %6546 0
       %6549 = OpCompositeExtract %float %6547 0
       %6550 = OpCompositeExtract %float %6546 1
       %6551 = OpCompositeExtract %float %6547 1
       %6552 = OpFAdd %float %6548 %6550
       %6553 = OpFAdd %float %6549 %6551
       %6554 = OpFMul %float %5725 %4461
       %6555 = OpFDiv %float %float_2 %6554
       %6556 = OpFMul %float %6552 %6555
       %6557 = OpFMul %float %6555 %4466
       %6558 = OpFMul %float %6557 %5996
       %6559 = OpExtInst %float %1 Fma %6553 %6555 %6558
       %6560 = OpExtInst %float %1 Floor %6556
       %6561 = OpFNegate %float %6560
       %6562 = OpExtInst %float %1 Fma %6552 %6555 %6561
       %6563 = OpExtInst %float %1 Fma %6562 %float_2097152 %6559
       %6564 = OpExtInst %float %1 Floor %6563
       %6565 = OpFMul %float %6560 %float_n6_28318548
       %6566 = OpExtInst %float %1 Fma %6556 %float_6_28318548 %6565
       %6567 = OpFMul %float %6564 %float_n6_28318548
       %6568 = OpExtInst %float %1 Fma %6559 %float_6_28318548 %6567
       %6569 = OpExtInst %float %1 Fma %6566 %float_2097152 %6568
       %6570 = OpFMul %float %6537 %2607
       %6571 = OpExtInst %float %1 Sin %6569
       %6572 = OpFMul %float %6571 %6570
       %6573 = OpCompositeConstruct %v3float %560 %560 %6539
       %6574 = OpCompositeConstruct %v3float %560 %560 %6572
       %6575 = OpFAdd %v3float %6573 %6574
       %6576 = OpFSub %v3float %5708 %1701
       %6577 = OpExtInst %v3float %1 NMax %6576 %287
       %6578 = OpExtInst %v3float %1 NMin %6577 %134
       %6579 = OpCompositeExtract %float %6578 0
       %6580 = OpCompositeExtract %float %6578 1
       %6581 = OpCompositeConstruct %v2float %6579 %6580
       %6582 = OpFMul %v2float %1709 %6581
       %6583 = OpFMul %v2float %6581 %1710
       %6584 = OpCompositeExtract %float %6582 0
       %6585 = OpCompositeExtract %float %6583 0
       %6586 = OpCompositeExtract %float %6582 1
       %6587 = OpCompositeExtract %float %6583 1
       %6588 = OpFAdd %float %6584 %6586
       %6589 = OpFAdd %float %6585 %6587
       %6590 = OpFMul %float %6554 %4461
       %6591 = OpFDiv %float %float_2 %6590
       %6592 = OpFMul %float %6588 %6591
       %6593 = OpFMul %float %6591 %4504
       %6594 = OpFMul %float %6593 %5996
       %6595 = OpExtInst %float %1 Fma %6589 %6591 %6594
       %6596 = OpExtInst %float %1 Floor %6592
       %6597 = OpFNegate %float %6596
       %6598 = OpExtInst %float %1 Fma %6588 %6591 %6597
       %6599 = OpExtInst %float %1 Fma %6598 %float_2097152 %6595
       %6600 = OpExtInst %float %1 Floor %6599
       %6601 = OpFMul %float %6596 %float_n6_28318548
       %6602 = OpExtInst %float %1 Fma %6592 %float_6_28318548 %6601
       %6603 = OpFMul %float %6600 %float_n6_28318548
       %6604 = OpExtInst %float %1 Fma %6595 %float_6_28318548 %6603
       %6605 = OpExtInst %float %1 Fma %6602 %float_2097152 %6604
       %6606 = OpFMul %float %6570 %2607
       %6607 = OpExtInst %float %1 Sin %6605
       %6608 = OpFMul %float %6607 %6606
       %6609 = OpCompositeConstruct %v3float %560 %560 %6608
       %6610 = OpFAdd %v3float %6575 %6609
       %6611 = OpFSub %v3float %5708 %2574
       %6612 = OpExtInst %v3float %1 NMax %6611 %287
       %6613 = OpExtInst %v3float %1 NMin %6612 %134
       %6614 = OpCompositeExtract %float %6613 0
       %6615 = OpCompositeExtract %float %6613 1
       %6616 = OpCompositeConstruct %v2float %6614 %6615
       %6617 = OpFMul %v2float %1709 %6616
       %6618 = OpFMul %v2float %6616 %1710
       %6619 = OpCompositeExtract %float %6617 0
       %6620 = OpCompositeExtract %float %6618 0
       %6621 = OpCompositeExtract %float %6617 1
       %6622 = OpCompositeExtract %float %6618 1
       %6623 = OpFAdd %float %6619 %6621
       %6624 = OpFAdd %float %6620 %6622
       %6625 = OpFMul %float %6590 %4461
       %6626 = OpFDiv %float %float_2 %6625
       %6627 = OpFMul %float %6623 %6626
       %6628 = OpFMul %float %6626 %4541
       %6629 = OpFMul %float %6628 %5996
       %6630 = OpExtInst %float %1 Fma %6624 %6626 %6629
       %6631 = OpExtInst %float %1 Floor %6627
       %6632 = OpFNegate %float %6631
       %6633 = OpExtInst %float %1 Fma %6623 %6626 %6632
       %6634 = OpExtInst %float %1 Fma %6633 %float_2097152 %6630
       %6635 = OpExtInst %float %1 Floor %6634
       %6636 = OpFMul %float %6631 %float_n6_28318548
       %6637 = OpExtInst %float %1 Fma %6627 %float_6_28318548 %6636
       %6638 = OpFMul %float %6635 %float_n6_28318548
       %6639 = OpExtInst %float %1 Fma %6630 %float_6_28318548 %6638
       %6640 = OpExtInst %float %1 Fma %6637 %float_2097152 %6639
       %6641 = OpFMul %float %6606 %2607
       %6642 = OpExtInst %float %1 Sin %6640
       %6643 = OpFMul %float %6642 %6641
       %6644 = OpCompositeConstruct %v3float %560 %560 %6643
       %6645 = OpFAdd %v3float %6610 %6644
       %6646 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_78 %int_3
       %6647 = OpLoad %float %6646
       %6648 = OpFSub %float %6647 %float_n1
       %6649 = OpExtInst %float %1 FAbs %6648
       %6650 = OpFOrdGreaterThan %bool %6649 %float_9_99999975en06
       %6651 = OpFOrdGreaterThanEqual %bool %6647 %float_n1
       %6652 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_0
       %6653 = OpLoad %float %6652
       %6654 = OpSelect %float %6651 %6647 %6653
       %6655 = OpSelect %float %6650 %6654 %6647
       %6656 = OpFSub %float %6655 %float_1
       %6657 = OpExtInst %float %1 FAbs %6656
       %6658 = OpFOrdGreaterThan %bool %6657 %float_9_99999975en06
       %6659 = OpFOrdGreaterThanEqual %bool %6655 %float_1
       %6660 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_79 %int_1
       %6661 = OpLoad %float %6660
       %6662 = OpSelect %float %6659 %6661 %6647
       %6663 = OpSelect %float %6658 %6662 %6647
       %6664 = OpExtInst %float %1 FAbs %6663
       %6665 = OpFOrdGreaterThan %bool %6664 %float_9_99999975en06
       %6666 = OpFOrdGreaterThanEqual %bool %6663 %float_0
       %6667 = OpSelect %float %6666 %float_1 %float_n1
       %6668 = OpSelect %float %6665 %6667 %float_1
       %6669 = OpExtInst %float %1 NMax %6668 %float_n1
       %6670 = OpExtInst %float %1 NMin %6669 %float_1
       %6671 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_80 %int_2
       %6672 = OpLoad %float %6671
       %6673 = OpCompositeConstruct %v3float %6670 %6672 %float_0
       %6674 = OpFAdd %v3float %6673 %1701
       %6675 = OpExtInst %v3float %1 NMax %6674 %287
       %6676 = OpExtInst %v3float %1 NMin %6675 %134
       %6677 = OpCompositeExtract %float %6676 0
       %6678 = OpCompositeExtract %float %6676 1
       %6679 = OpCompositeConstruct %v2float %6677 %6678
       %6680 = OpFMul %v2float %1709 %6679
       %6681 = OpFMul %v2float %6679 %1710
       %6682 = OpCompositeExtract %float %6680 0
       %6683 = OpCompositeExtract %float %6681 0
       %6684 = OpCompositeExtract %float %6680 1
       %6685 = OpCompositeExtract %float %6681 1
       %6686 = OpFAdd %float %6682 %6684
       %6687 = OpFAdd %float %6683 %6685
       %6688 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_81 %int_3
       %6689 = OpLoad %float %6688
       %6690 = OpFMul %float %6689 %4604
       %6691 = OpFDiv %float %float_2 %6690
       %6692 = OpFMul %float %6686 %6691
       %6693 = OpFMul %float %6691 %4611
       %6694 = OpFMul %float %6693 %5996
       %6695 = OpExtInst %float %1 Fma %6687 %6691 %6694
       %6696 = OpExtInst %float %1 Floor %6692
       %6697 = OpFNegate %float %6696
       %6698 = OpExtInst %float %1 Fma %6686 %6691 %6697
       %6699 = OpExtInst %float %1 Fma %6698 %float_2097152 %6695
       %6700 = OpExtInst %float %1 Floor %6699
       %6701 = OpFMul %float %6696 %float_n6_28318548
       %6702 = OpExtInst %float %1 Fma %6692 %float_6_28318548 %6701
       %6703 = OpFMul %float %6700 %float_n6_28318548
       %6704 = OpExtInst %float %1 Fma %6695 %float_6_28318548 %6703
       %6705 = OpExtInst %float %1 Fma %6702 %float_2097152 %6704
       %6706 = OpFMul %float %6537 %2746
       %6707 = OpExtInst %float %1 Sin %6705
       %6708 = OpFMul %float %6707 %6706
       %6709 = OpFAdd %v3float %6673 %2574
       %6710 = OpExtInst %v3float %1 NMax %6709 %287
       %6711 = OpExtInst %v3float %1 NMin %6710 %134
       %6712 = OpCompositeExtract %float %6711 0
       %6713 = OpCompositeExtract %float %6711 1
       %6714 = OpCompositeConstruct %v2float %6712 %6713
       %6715 = OpFMul %v2float %1709 %6714
       %6716 = OpFMul %v2float %6714 %1710
       %6717 = OpCompositeExtract %float %6715 0
       %6718 = OpCompositeExtract %float %6716 0
       %6719 = OpCompositeExtract %float %6715 1
       %6720 = OpCompositeExtract %float %6716 1
       %6721 = OpFAdd %float %6717 %6719
       %6722 = OpFAdd %float %6718 %6720
       %6723 = OpFMul %float %6690 %4461
       %6724 = OpFDiv %float %float_2 %6723
       %6725 = OpFMul %float %6721 %6724
       %6726 = OpFMul %float %6724 %4646
       %6727 = OpFMul %float %6726 %5996
       %6728 = OpExtInst %float %1 Fma %6722 %6724 %6727
       %6729 = OpExtInst %float %1 Floor %6725
       %6730 = OpFNegate %float %6729
       %6731 = OpExtInst %float %1 Fma %6721 %6724 %6730
       %6732 = OpExtInst %float %1 Fma %6731 %float_2097152 %6728
       %6733 = OpExtInst %float %1 Floor %6732
       %6734 = OpFMul %float %6729 %float_n6_28318548
       %6735 = OpExtInst %float %1 Fma %6725 %float_6_28318548 %6734
       %6736 = OpFMul %float %6733 %float_n6_28318548
       %6737 = OpExtInst %float %1 Fma %6728 %float_6_28318548 %6736
       %6738 = OpExtInst %float %1 Fma %6735 %float_2097152 %6737
       %6739 = OpFMul %float %6706 %2607
       %6740 = OpExtInst %float %1 Sin %6738
       %6741 = OpFMul %float %6740 %6739
       %6742 = OpCompositeConstruct %v3float %560 %560 %6708
       %6743 = OpCompositeConstruct %v3float %560 %560 %6741
       %6744 = OpFAdd %v3float %6742 %6743
       %6745 = OpFSub %v3float %6673 %1701
       %6746 = OpExtInst %v3float %1 NMax %6745 %287
       %6747 = OpExtInst %v3float %1 NMin %6746 %134
       %6748 = OpCompositeExtract %float %6747 0
       %6749 = OpCompositeExtract %float %6747 1
       %6750 = OpCompositeConstruct %v2float %6748 %6749
       %6751 = OpFMul %v2float %1709 %6750
       %6752 = OpFMul %v2float %6750 %1710
       %6753 = OpCompositeExtract %float %6751 0
       %6754 = OpCompositeExtract %float %6752 0
       %6755 = OpCompositeExtract %float %6751 1
       %6756 = OpCompositeExtract %float %6752 1
       %6757 = OpFAdd %float %6753 %6755
       %6758 = OpFAdd %float %6754 %6756
       %6759 = OpFMul %float %6723 %4461
       %6760 = OpFDiv %float %float_2 %6759
       %6761 = OpFMul %float %6757 %6760
       %6762 = OpFMul %float %6760 %4684
       %6763 = OpFMul %float %6762 %5996
       %6764 = OpExtInst %float %1 Fma %6758 %6760 %6763
       %6765 = OpExtInst %float %1 Floor %6761
       %6766 = OpFNegate %float %6765
       %6767 = OpExtInst %float %1 Fma %6757 %6760 %6766
       %6768 = OpExtInst %float %1 Fma %6767 %float_2097152 %6764
       %6769 = OpExtInst %float %1 Floor %6768
       %6770 = OpFMul %float %6765 %float_n6_28318548
       %6771 = OpExtInst %float %1 Fma %6761 %float_6_28318548 %6770
       %6772 = OpFMul %float %6769 %float_n6_28318548
       %6773 = OpExtInst %float %1 Fma %6764 %float_6_28318548 %6772
       %6774 = OpExtInst %float %1 Fma %6771 %float_2097152 %6773
       %6775 = OpFMul %float %6739 %2607
       %6776 = OpExtInst %float %1 Sin %6774
       %6777 = OpFMul %float %6776 %6775
       %6778 = OpCompositeConstruct %v3float %560 %560 %6777
       %6779 = OpFAdd %v3float %6744 %6778
       %6780 = OpFSub %v3float %6673 %2574
       %6781 = OpExtInst %v3float %1 NMax %6780 %287
       %6782 = OpExtInst %v3float %1 NMin %6781 %134
       %6783 = OpCompositeExtract %float %6782 0
       %6784 = OpCompositeExtract %float %6782 1
       %6785 = OpCompositeConstruct %v2float %6783 %6784
       %6786 = OpFMul %v2float %1709 %6785
       %6787 = OpFMul %v2float %6785 %1710
       %6788 = OpCompositeExtract %float %6786 0
       %6789 = OpCompositeExtract %float %6787 0
       %6790 = OpCompositeExtract %float %6786 1
       %6791 = OpCompositeExtract %float %6787 1
       %6792 = OpFAdd %float %6788 %6790
       %6793 = OpFAdd %float %6789 %6791
       %6794 = OpFMul %float %6759 %4461
       %6795 = OpFDiv %float %float_2 %6794
       %6796 = OpFMul %float %6792 %6795
       %6797 = OpFMul %float %6795 %4721
       %6798 = OpFMul %float %6797 %5996
       %6799 = OpExtInst %float %1 Fma %6793 %6795 %6798
       %6800 = OpExtInst %float %1 Floor %6796
       %6801 = OpFNegate %float %6800
       %6802 = OpExtInst %float %1 Fma %6792 %6795 %6801
       %6803 = OpExtInst %float %1 Fma %6802 %float_2097152 %6799
       %6804 = OpExtInst %float %1 Floor %6803
       %6805 = OpFMul %float %6800 %float_n6_28318548
       %6806 = OpExtInst %float %1 Fma %6796 %float_6_28318548 %6805
       %6807 = OpFMul %float %6804 %float_n6_28318548
       %6808 = OpExtInst %float %1 Fma %6799 %float_6_28318548 %6807
       %6809 = OpExtInst %float %1 Fma %6806 %float_2097152 %6808
       %6810 = OpFMul %float %6775 %2607
       %6811 = OpExtInst %float %1 Sin %6809
       %6812 = OpFMul %float %6811 %6810
       %6813 = OpCompositeConstruct %v3float %560 %560 %6812
       %6814 = OpFAdd %v3float %6779 %6813
       %6815 = OpFAdd %v3float %6645 %6814
       %6816 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_82 %int_0
       %6817 = OpLoad %float %6816
       %6818 = OpFSub %float %6817 %float_n1
       %6819 = OpExtInst %float %1 FAbs %6818
       %6820 = OpFOrdGreaterThan %bool %6819 %float_9_99999975en06
       %6821 = OpFOrdGreaterThanEqual %bool %6817 %float_n1
       %6822 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_82 %int_1
       %6823 = OpLoad %float %6822
       %6824 = OpSelect %float %6821 %6817 %6823
       %6825 = OpSelect %float %6820 %6824 %6817
       %6826 = OpFSub %float %6825 %float_1
       %6827 = OpExtInst %float %1 FAbs %6826
       %6828 = OpFOrdGreaterThan %bool %6827 %float_9_99999975en06
       %6829 = OpFOrdGreaterThanEqual %bool %6825 %float_1
       %6830 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_82 %int_2
       %6831 = OpLoad %float %6830
       %6832 = OpSelect %float %6829 %6831 %6817
       %6833 = OpSelect %float %6828 %6832 %6817
       %6834 = OpExtInst %float %1 FAbs %6833
       %6835 = OpFOrdGreaterThan %bool %6834 %float_9_99999975en06
       %6836 = OpFOrdGreaterThanEqual %bool %6833 %float_0
       %6837 = OpSelect %float %6836 %float_1 %float_n1
       %6838 = OpSelect %float %6835 %6837 %float_1
       %6839 = OpExtInst %float %1 NMax %6838 %float_n1
       %6840 = OpExtInst %float %1 NMin %6839 %float_1
       %6841 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_83 %int_3
       %6842 = OpLoad %float %6841
       %6843 = OpCompositeConstruct %v3float %6840 %6842 %float_0
       %6844 = OpFAdd %v3float %6843 %1701
       %6845 = OpExtInst %v3float %1 NMax %6844 %287
       %6846 = OpExtInst %v3float %1 NMin %6845 %134
       %6847 = OpCompositeExtract %float %6846 0
       %6848 = OpCompositeExtract %float %6846 1
       %6849 = OpCompositeConstruct %v2float %6847 %6848
       %6850 = OpFMul %v2float %1709 %6849
       %6851 = OpFMul %v2float %6849 %1710
       %6852 = OpCompositeExtract %float %6850 0
       %6853 = OpCompositeExtract %float %6851 0
       %6854 = OpCompositeExtract %float %6850 1
       %6855 = OpCompositeExtract %float %6851 1
       %6856 = OpFAdd %float %6852 %6854
       %6857 = OpFAdd %float %6853 %6855
       %6858 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_85 %int_0
       %6859 = OpLoad %float %6858
       %6860 = OpFMul %float %6859 %4604
       %6861 = OpFDiv %float %float_2 %6860
       %6862 = OpFMul %float %6856 %6861
       %6863 = OpFMul %float %6861 %4611
       %6864 = OpFMul %float %6863 %5996
       %6865 = OpExtInst %float %1 Fma %6857 %6861 %6864
       %6866 = OpExtInst %float %1 Floor %6862
       %6867 = OpFNegate %float %6866
       %6868 = OpExtInst %float %1 Fma %6856 %6861 %6867
       %6869 = OpExtInst %float %1 Fma %6868 %float_2097152 %6865
       %6870 = OpExtInst %float %1 Floor %6869
       %6871 = OpFMul %float %6866 %float_n6_28318548
       %6872 = OpExtInst %float %1 Fma %6862 %float_6_28318548 %6871
       %6873 = OpFMul %float %6870 %float_n6_28318548
       %6874 = OpExtInst %float %1 Fma %6865 %float_6_28318548 %6873
       %6875 = OpExtInst %float %1 Fma %6872 %float_2097152 %6874
       %6876 = OpExtInst %float %1 Sin %6875
       %6877 = OpFMul %float %6876 %6706
       %6878 = OpFAdd %v3float %6843 %2574
       %6879 = OpExtInst %v3float %1 NMax %6878 %287
       %6880 = OpExtInst %v3float %1 NMin %6879 %134
       %6881 = OpCompositeExtract %float %6880 0
       %6882 = OpCompositeExtract %float %6880 1
       %6883 = OpCompositeConstruct %v2float %6881 %6882
       %6884 = OpFMul %v2float %1709 %6883
       %6885 = OpFMul %v2float %6883 %1710
       %6886 = OpCompositeExtract %float %6884 0
       %6887 = OpCompositeExtract %float %6885 0
       %6888 = OpCompositeExtract %float %6884 1
       %6889 = OpCompositeExtract %float %6885 1
       %6890 = OpFAdd %float %6886 %6888
       %6891 = OpFAdd %float %6887 %6889
       %6892 = OpFMul %float %6860 %4461
       %6893 = OpFDiv %float %float_2 %6892
       %6894 = OpFMul %float %6890 %6893
       %6895 = OpFMul %float %6893 %4646
       %6896 = OpFMul %float %6895 %5996
       %6897 = OpExtInst %float %1 Fma %6891 %6893 %6896
       %6898 = OpExtInst %float %1 Floor %6894
       %6899 = OpFNegate %float %6898
       %6900 = OpExtInst %float %1 Fma %6890 %6893 %6899
       %6901 = OpExtInst %float %1 Fma %6900 %float_2097152 %6897
       %6902 = OpExtInst %float %1 Floor %6901
       %6903 = OpFMul %float %6898 %float_n6_28318548
       %6904 = OpExtInst %float %1 Fma %6894 %float_6_28318548 %6903
       %6905 = OpFMul %float %6902 %float_n6_28318548
       %6906 = OpExtInst %float %1 Fma %6897 %float_6_28318548 %6905
       %6907 = OpExtInst %float %1 Fma %6904 %float_2097152 %6906
       %6908 = OpExtInst %float %1 Sin %6907
       %6909 = OpFMul %float %6908 %6739
       %6910 = OpCompositeConstruct %v3float %560 %560 %6877
       %6911 = OpCompositeConstruct %v3float %560 %560 %6909
       %6912 = OpFAdd %v3float %6910 %6911
       %6913 = OpFSub %v3float %6843 %1701
       %6914 = OpExtInst %v3float %1 NMax %6913 %287
       %6915 = OpExtInst %v3float %1 NMin %6914 %134
       %6916 = OpCompositeExtract %float %6915 0
       %6917 = OpCompositeExtract %float %6915 1
       %6918 = OpCompositeConstruct %v2float %6916 %6917
       %6919 = OpFMul %v2float %1709 %6918
       %6920 = OpFMul %v2float %6918 %1710
       %6921 = OpCompositeExtract %float %6919 0
       %6922 = OpCompositeExtract %float %6920 0
       %6923 = OpCompositeExtract %float %6919 1
       %6924 = OpCompositeExtract %float %6920 1
       %6925 = OpFAdd %float %6921 %6923
       %6926 = OpFAdd %float %6922 %6924
       %6927 = OpFMul %float %6892 %4461
       %6928 = OpFDiv %float %float_2 %6927
       %6929 = OpFMul %float %6925 %6928
       %6930 = OpFMul %float %6928 %4684
       %6931 = OpFMul %float %6930 %5996
       %6932 = OpExtInst %float %1 Fma %6926 %6928 %6931
       %6933 = OpExtInst %float %1 Floor %6929
       %6934 = OpFNegate %float %6933
       %6935 = OpExtInst %float %1 Fma %6925 %6928 %6934
       %6936 = OpExtInst %float %1 Fma %6935 %float_2097152 %6932
       %6937 = OpExtInst %float %1 Floor %6936
       %6938 = OpFMul %float %6933 %float_n6_28318548
       %6939 = OpExtInst %float %1 Fma %6929 %float_6_28318548 %6938
       %6940 = OpFMul %float %6937 %float_n6_28318548
       %6941 = OpExtInst %float %1 Fma %6932 %float_6_28318548 %6940
       %6942 = OpExtInst %float %1 Fma %6939 %float_2097152 %6941
       %6943 = OpExtInst %float %1 Sin %6942
       %6944 = OpFMul %float %6943 %6775
       %6945 = OpCompositeConstruct %v3float %560 %560 %6944
       %6946 = OpFAdd %v3float %6912 %6945
       %6947 = OpFSub %v3float %6843 %2574
       %6948 = OpExtInst %v3float %1 NMax %6947 %287
       %6949 = OpExtInst %v3float %1 NMin %6948 %134
       %6950 = OpCompositeExtract %float %6949 0
       %6951 = OpCompositeExtract %float %6949 1
       %6952 = OpCompositeConstruct %v2float %6950 %6951
       %6953 = OpFMul %v2float %1709 %6952
       %6954 = OpFMul %v2float %6952 %1710
       %6955 = OpCompositeExtract %float %6953 0
       %6956 = OpCompositeExtract %float %6954 0
       %6957 = OpCompositeExtract %float %6953 1
       %6958 = OpCompositeExtract %float %6954 1
       %6959 = OpFAdd %float %6955 %6957
       %6960 = OpFAdd %float %6956 %6958
       %6961 = OpFMul %float %6927 %4461
       %6962 = OpFDiv %float %float_2 %6961
       %6963 = OpFMul %float %6959 %6962
       %6964 = OpFMul %float %6962 %4721
       %6965 = OpFMul %float %6964 %5996
       %6966 = OpExtInst %float %1 Fma %6960 %6962 %6965
       %6967 = OpExtInst %float %1 Floor %6963
       %6968 = OpFNegate %float %6967
       %6969 = OpExtInst %float %1 Fma %6959 %6962 %6968
       %6970 = OpExtInst %float %1 Fma %6969 %float_2097152 %6966
       %6971 = OpExtInst %float %1 Floor %6970
       %6972 = OpFMul %float %6967 %float_n6_28318548
       %6973 = OpExtInst %float %1 Fma %6963 %float_6_28318548 %6972
       %6974 = OpFMul %float %6971 %float_n6_28318548
       %6975 = OpExtInst %float %1 Fma %6966 %float_6_28318548 %6974
       %6976 = OpExtInst %float %1 Fma %6973 %float_2097152 %6975
       %6977 = OpExtInst %float %1 Sin %6976
       %6978 = OpFMul %float %6977 %6810
       %6979 = OpCompositeConstruct %v3float %560 %560 %6978
       %6980 = OpFAdd %v3float %6946 %6979
       %6981 = OpFAdd %v3float %6815 %6980
       %6982 = OpFMul %float %3579 %float_8
       %6983 = OpFMul %float %5724 %6982
       %6984 = OpFDiv %float %float_2 %6983
       %6985 = OpFMul %float %5721 %6984
       %6986 = OpFMul %float %6984 %4912
       %6987 = OpFMul %float %6986 %5996
       %6988 = OpExtInst %float %1 Fma %5722 %6984 %6987
       %6989 = OpExtInst %float %1 Floor %6985
       %6990 = OpFNegate %float %6989
       %6991 = OpExtInst %float %1 Fma %5721 %6984 %6990
       %6992 = OpExtInst %float %1 Fma %6991 %float_2097152 %6988
       %6993 = OpExtInst %float %1 Floor %6992
       %6994 = OpFMul %float %6989 %float_n6_28318548
       %6995 = OpExtInst %float %1 Fma %6985 %float_6_28318548 %6994
       %6996 = OpFMul %float %6993 %float_n6_28318548
       %6997 = OpExtInst %float %1 Fma %6988 %float_6_28318548 %6996
       %6998 = OpExtInst %float %1 Fma %6995 %float_2097152 %6997
       %6999 = OpFMul %float %6537 %float_8
       %7000 = OpExtInst %float %1 Sin %6998
       %7001 = OpFMul %float %7000 %6999
       %7002 = OpFMul %float %6983 %4461
       %7003 = OpFDiv %float %float_2 %7002
       %7004 = OpFMul %float %6552 %7003
       %7005 = OpFMul %float %7003 %4933
       %7006 = OpFMul %float %7005 %5996
       %7007 = OpExtInst %float %1 Fma %6553 %7003 %7006
       %7008 = OpExtInst %float %1 Floor %7004
       %7009 = OpFNegate %float %7008
       %7010 = OpExtInst %float %1 Fma %6552 %7003 %7009
       %7011 = OpExtInst %float %1 Fma %7010 %float_2097152 %7007
       %7012 = OpExtInst %float %1 Floor %7011
       %7013 = OpFMul %float %7008 %float_n6_28318548
       %7014 = OpExtInst %float %1 Fma %7004 %float_6_28318548 %7013
       %7015 = OpFMul %float %7012 %float_n6_28318548
       %7016 = OpExtInst %float %1 Fma %7007 %float_6_28318548 %7015
       %7017 = OpExtInst %float %1 Fma %7014 %float_2097152 %7016
       %7018 = OpFMul %float %6999 %2607
       %7019 = OpExtInst %float %1 Sin %7017
       %7020 = OpFMul %float %7019 %7018
       %7021 = OpCompositeConstruct %v3float %560 %560 %7001
       %7022 = OpCompositeConstruct %v3float %560 %560 %7020
       %7023 = OpFAdd %v3float %7021 %7022
       %7024 = OpFMul %float %7002 %4461
       %7025 = OpFDiv %float %float_2 %7024
       %7026 = OpFMul %float %6588 %7025
       %7027 = OpFMul %float %7025 %4957
       %7028 = OpFMul %float %7027 %5996
       %7029 = OpExtInst %float %1 Fma %6589 %7025 %7028
       %7030 = OpExtInst %float %1 Floor %7026
       %7031 = OpFNegate %float %7030
       %7032 = OpExtInst %float %1 Fma %6588 %7025 %7031
       %7033 = OpExtInst %float %1 Fma %7032 %float_2097152 %7029
       %7034 = OpExtInst %float %1 Floor %7033
       %7035 = OpFMul %float %7030 %float_n6_28318548
       %7036 = OpExtInst %float %1 Fma %7026 %float_6_28318548 %7035
       %7037 = OpFMul %float %7034 %float_n6_28318548
       %7038 = OpExtInst %float %1 Fma %7029 %float_6_28318548 %7037
       %7039 = OpExtInst %float %1 Fma %7036 %float_2097152 %7038
       %7040 = OpFMul %float %7018 %2607
       %7041 = OpExtInst %float %1 Sin %7039
       %7042 = OpFMul %float %7041 %7040
       %7043 = OpCompositeConstruct %v3float %560 %560 %7042
       %7044 = OpFAdd %v3float %7023 %7043
       %7045 = OpFMul %float %7024 %4461
       %7046 = OpFDiv %float %float_2 %7045
       %7047 = OpFMul %float %6623 %7046
       %7048 = OpFMul %float %7046 %4980
       %7049 = OpFMul %float %7048 %5996
       %7050 = OpExtInst %float %1 Fma %6624 %7046 %7049
       %7051 = OpExtInst %float %1 Floor %7047
       %7052 = OpFNegate %float %7051
       %7053 = OpExtInst %float %1 Fma %6623 %7046 %7052
       %7054 = OpExtInst %float %1 Fma %7053 %float_2097152 %7050
       %7055 = OpExtInst %float %1 Floor %7054
       %7056 = OpFMul %float %7051 %float_n6_28318548
       %7057 = OpExtInst %float %1 Fma %7047 %float_6_28318548 %7056
       %7058 = OpFMul %float %7055 %float_n6_28318548
       %7059 = OpExtInst %float %1 Fma %7050 %float_6_28318548 %7058
       %7060 = OpExtInst %float %1 Fma %7057 %float_2097152 %7059
       %7061 = OpFMul %float %7040 %2607
       %7062 = OpExtInst %float %1 Sin %7060
       %7063 = OpFMul %float %7062 %7061
       %7064 = OpCompositeConstruct %v3float %560 %560 %7063
       %7065 = OpFAdd %v3float %7044 %7064
       %7066 = OpFMul %float %6982 %4603
       %7067 = OpFMul %float %6689 %7066
       %7068 = OpFDiv %float %float_2 %7067
       %7069 = OpFMul %float %6686 %7068
       %7070 = OpFMul %float %7068 %5004
       %7071 = OpFMul %float %7070 %5996
       %7072 = OpExtInst %float %1 Fma %6687 %7068 %7071
       %7073 = OpExtInst %float %1 Floor %7069
       %7074 = OpFNegate %float %7073
       %7075 = OpExtInst %float %1 Fma %6686 %7068 %7074
       %7076 = OpExtInst %float %1 Fma %7075 %float_2097152 %7072
       %7077 = OpExtInst %float %1 Floor %7076
       %7078 = OpFMul %float %7073 %float_n6_28318548
       %7079 = OpExtInst %float %1 Fma %7069 %float_6_28318548 %7078
       %7080 = OpFMul %float %7077 %float_n6_28318548
       %7081 = OpExtInst %float %1 Fma %7072 %float_6_28318548 %7080
       %7082 = OpExtInst %float %1 Fma %7079 %float_2097152 %7081
       %7083 = OpFMul %float %6999 %2746
       %7084 = OpExtInst %float %1 Sin %7082
       %7085 = OpFMul %float %7084 %7083
       %7086 = OpFMul %float %7067 %4461
       %7087 = OpFDiv %float %float_2 %7086
       %7088 = OpFMul %float %6721 %7087
       %7089 = OpFMul %float %7087 %5025
       %7090 = OpFMul %float %7089 %5996
       %7091 = OpExtInst %float %1 Fma %6722 %7087 %7090
       %7092 = OpExtInst %float %1 Floor %7088
       %7093 = OpFNegate %float %7092
       %7094 = OpExtInst %float %1 Fma %6721 %7087 %7093
       %7095 = OpExtInst %float %1 Fma %7094 %float_2097152 %7091
       %7096 = OpExtInst %float %1 Floor %7095
       %7097 = OpFMul %float %7092 %float_n6_28318548
       %7098 = OpExtInst %float %1 Fma %7088 %float_6_28318548 %7097
       %7099 = OpFMul %float %7096 %float_n6_28318548
       %7100 = OpExtInst %float %1 Fma %7091 %float_6_28318548 %7099
       %7101 = OpExtInst %float %1 Fma %7098 %float_2097152 %7100
       %7102 = OpFMul %float %7083 %2607
       %7103 = OpExtInst %float %1 Sin %7101
       %7104 = OpFMul %float %7103 %7102
       %7105 = OpCompositeConstruct %v3float %560 %560 %7085
       %7106 = OpCompositeConstruct %v3float %560 %560 %7104
       %7107 = OpFAdd %v3float %7105 %7106
       %7108 = OpFMul %float %7086 %4461
       %7109 = OpFDiv %float %float_2 %7108
       %7110 = OpFMul %float %6757 %7109
       %7111 = OpFMul %float %7109 %5049
       %7112 = OpFMul %float %7111 %5996
       %7113 = OpExtInst %float %1 Fma %6758 %7109 %7112
       %7114 = OpExtInst %float %1 Floor %7110
       %7115 = OpFNegate %float %7114
       %7116 = OpExtInst %float %1 Fma %6757 %7109 %7115
       %7117 = OpExtInst %float %1 Fma %7116 %float_2097152 %7113
       %7118 = OpExtInst %float %1 Floor %7117
       %7119 = OpFMul %float %7114 %float_n6_28318548
       %7120 = OpExtInst %float %1 Fma %7110 %float_6_28318548 %7119
       %7121 = OpFMul %float %7118 %float_n6_28318548
       %7122 = OpExtInst %float %1 Fma %7113 %float_6_28318548 %7121
       %7123 = OpExtInst %float %1 Fma %7120 %float_2097152 %7122
       %7124 = OpFMul %float %7102 %2607
       %7125 = OpExtInst %float %1 Sin %7123
       %7126 = OpFMul %float %7125 %7124
       %7127 = OpCompositeConstruct %v3float %560 %560 %7126
       %7128 = OpFAdd %v3float %7107 %7127
       %7129 = OpFMul %float %7108 %4461
       %7130 = OpFDiv %float %float_2 %7129
       %7131 = OpFMul %float %6792 %7130
       %7132 = OpFMul %float %7130 %5072
       %7133 = OpFMul %float %7132 %5996
       %7134 = OpExtInst %float %1 Fma %6793 %7130 %7133
       %7135 = OpExtInst %float %1 Floor %7131
       %7136 = OpFNegate %float %7135
       %7137 = OpExtInst %float %1 Fma %6792 %7130 %7136
       %7138 = OpExtInst %float %1 Fma %7137 %float_2097152 %7134
       %7139 = OpExtInst %float %1 Floor %7138
       %7140 = OpFMul %float %7135 %float_n6_28318548
       %7141 = OpExtInst %float %1 Fma %7131 %float_6_28318548 %7140
       %7142 = OpFMul %float %7139 %float_n6_28318548
       %7143 = OpExtInst %float %1 Fma %7134 %float_6_28318548 %7142
       %7144 = OpExtInst %float %1 Fma %7141 %float_2097152 %7143
       %7145 = OpFMul %float %7124 %2607
       %7146 = OpExtInst %float %1 Sin %7144
       %7147 = OpFMul %float %7146 %7145
       %7148 = OpCompositeConstruct %v3float %560 %560 %7147
       %7149 = OpFAdd %v3float %7128 %7148
       %7150 = OpFAdd %v3float %7065 %7149
       %7151 = OpFMul %float %6859 %7066
       %7152 = OpFDiv %float %float_2 %7151
       %7153 = OpFMul %float %6856 %7152
       %7154 = OpFMul %float %7152 %5004
       %7155 = OpFMul %float %7154 %5996
       %7156 = OpExtInst %float %1 Fma %6857 %7152 %7155
       %7157 = OpExtInst %float %1 Floor %7153
       %7158 = OpFNegate %float %7157
       %7159 = OpExtInst %float %1 Fma %6856 %7152 %7158
       %7160 = OpExtInst %float %1 Fma %7159 %float_2097152 %7156
       %7161 = OpExtInst %float %1 Floor %7160
       %7162 = OpFMul %float %7157 %float_n6_28318548
       %7163 = OpExtInst %float %1 Fma %7153 %float_6_28318548 %7162
       %7164 = OpFMul %float %7161 %float_n6_28318548
       %7165 = OpExtInst %float %1 Fma %7156 %float_6_28318548 %7164
       %7166 = OpExtInst %float %1 Fma %7163 %float_2097152 %7165
       %7167 = OpExtInst %float %1 Sin %7166
       %7168 = OpFMul %float %7167 %7083
       %7169 = OpFMul %float %7151 %4461
       %7170 = OpFDiv %float %float_2 %7169
       %7171 = OpFMul %float %6890 %7170
       %7172 = OpFMul %float %7170 %5025
       %7173 = OpFMul %float %7172 %5996
       %7174 = OpExtInst %float %1 Fma %6891 %7170 %7173
       %7175 = OpExtInst %float %1 Floor %7171
       %7176 = OpFNegate %float %7175
       %7177 = OpExtInst %float %1 Fma %6890 %7170 %7176
       %7178 = OpExtInst %float %1 Fma %7177 %float_2097152 %7174
       %7179 = OpExtInst %float %1 Floor %7178
       %7180 = OpFMul %float %7175 %float_n6_28318548
       %7181 = OpExtInst %float %1 Fma %7171 %float_6_28318548 %7180
       %7182 = OpFMul %float %7179 %float_n6_28318548
       %7183 = OpExtInst %float %1 Fma %7174 %float_6_28318548 %7182
       %7184 = OpExtInst %float %1 Fma %7181 %float_2097152 %7183
       %7185 = OpExtInst %float %1 Sin %7184
       %7186 = OpFMul %float %7185 %7102
       %7187 = OpCompositeConstruct %v3float %560 %560 %7168
       %7188 = OpCompositeConstruct %v3float %560 %560 %7186
       %7189 = OpFAdd %v3float %7187 %7188
       %7190 = OpFMul %float %7169 %4461
       %7191 = OpFDiv %float %float_2 %7190
       %7192 = OpFMul %float %6925 %7191
       %7193 = OpFMul %float %7191 %5049
       %7194 = OpFMul %float %7193 %5996
       %7195 = OpExtInst %float %1 Fma %6926 %7191 %7194
       %7196 = OpExtInst %float %1 Floor %7192
       %7197 = OpFNegate %float %7196
       %7198 = OpExtInst %float %1 Fma %6925 %7191 %7197
       %7199 = OpExtInst %float %1 Fma %7198 %float_2097152 %7195
       %7200 = OpExtInst %float %1 Floor %7199
       %7201 = OpFMul %float %7196 %float_n6_28318548
       %7202 = OpExtInst %float %1 Fma %7192 %float_6_28318548 %7201
       %7203 = OpFMul %float %7200 %float_n6_28318548
       %7204 = OpExtInst %float %1 Fma %7195 %float_6_28318548 %7203
       %7205 = OpExtInst %float %1 Fma %7202 %float_2097152 %7204
       %7206 = OpExtInst %float %1 Sin %7205
       %7207 = OpFMul %float %7206 %7124
       %7208 = OpCompositeConstruct %v3float %560 %560 %7207
       %7209 = OpFAdd %v3float %7189 %7208
       %7210 = OpFMul %float %7190 %4461
       %7211 = OpFDiv %float %float_2 %7210
       %7212 = OpFMul %float %6959 %7211
       %7213 = OpFMul %float %7211 %5072
       %7214 = OpFMul %float %7213 %5996
       %7215 = OpExtInst %float %1 Fma %6960 %7211 %7214
       %7216 = OpExtInst %float %1 Floor %7212
       %7217 = OpFNegate %float %7216
       %7218 = OpExtInst %float %1 Fma %6959 %7211 %7217
       %7219 = OpExtInst %float %1 Fma %7218 %float_2097152 %7215
       %7220 = OpExtInst %float %1 Floor %7219
       %7221 = OpFMul %float %7216 %float_n6_28318548
       %7222 = OpExtInst %float %1 Fma %7212 %float_6_28318548 %7221
       %7223 = OpFMul %float %7220 %float_n6_28318548
       %7224 = OpExtInst %float %1 Fma %7215 %float_6_28318548 %7223
       %7225 = OpExtInst %float %1 Fma %7222 %float_2097152 %7224
       %7226 = OpExtInst %float %1 Sin %7225
       %7227 = OpFMul %float %7226 %7145
       %7228 = OpCompositeConstruct %v3float %560 %560 %7227
       %7229 = OpFAdd %v3float %7209 %7228
       %7230 = OpFAdd %v3float %7150 %7229
       %7231 = OpFMul %float %5724 %5172
       %7232 = OpFDiv %float %float_2 %7231
       %7233 = OpFMul %float %5721 %7232
       %7234 = OpFMul %float %7232 %5177
       %7235 = OpFMul %float %7234 %5996
       %7236 = OpExtInst %float %1 Fma %5722 %7232 %7235
       %7237 = OpExtInst %float %1 Floor %7233
       %7238 = OpFNegate %float %7237
       %7239 = OpExtInst %float %1 Fma %5721 %7232 %7238
       %7240 = OpExtInst %float %1 Fma %7239 %float_2097152 %7236
       %7241 = OpExtInst %float %1 Floor %7240
       %7242 = OpFMul %float %7237 %float_n6_28318548
       %7243 = OpExtInst %float %1 Fma %7233 %float_6_28318548 %7242
       %7244 = OpFMul %float %7241 %float_n6_28318548
       %7245 = OpExtInst %float %1 Fma %7236 %float_6_28318548 %7244
       %7246 = OpExtInst %float %1 Fma %7243 %float_2097152 %7245
       %7247 = OpFMul %float %6537 %float_4
       %7248 = OpExtInst %float %1 Sin %7246
       %7249 = OpFMul %float %7248 %7247
       %7250 = OpFMul %float %7231 %4461
       %7251 = OpFDiv %float %float_2 %7250
       %7252 = OpFMul %float %6552 %7251
       %7253 = OpFMul %float %7251 %5197
       %7254 = OpFMul %float %7253 %5996
       %7255 = OpExtInst %float %1 Fma %6553 %7251 %7254
       %7256 = OpExtInst %float %1 Floor %7252
       %7257 = OpFNegate %float %7256
       %7258 = OpExtInst %float %1 Fma %6552 %7251 %7257
       %7259 = OpExtInst %float %1 Fma %7258 %float_2097152 %7255
       %7260 = OpExtInst %float %1 Floor %7259
       %7261 = OpFMul %float %7256 %float_n6_28318548
       %7262 = OpExtInst %float %1 Fma %7252 %float_6_28318548 %7261
       %7263 = OpFMul %float %7260 %float_n6_28318548
       %7264 = OpExtInst %float %1 Fma %7255 %float_6_28318548 %7263
       %7265 = OpExtInst %float %1 Fma %7262 %float_2097152 %7264
       %7266 = OpFMul %float %7247 %2607
       %7267 = OpExtInst %float %1 Sin %7265
       %7268 = OpFMul %float %7267 %7266
       %7269 = OpCompositeConstruct %v3float %560 %560 %7249
       %7270 = OpCompositeConstruct %v3float %560 %560 %7268
       %7271 = OpFAdd %v3float %7269 %7270
       %7272 = OpFMul %float %7250 %4461
       %7273 = OpFDiv %float %float_2 %7272
       %7274 = OpFMul %float %6588 %7273
       %7275 = OpFMul %float %7273 %5220
       %7276 = OpFMul %float %7275 %5996
       %7277 = OpExtInst %float %1 Fma %6589 %7273 %7276
       %7278 = OpExtInst %float %1 Floor %7274
       %7279 = OpFNegate %float %7278
       %7280 = OpExtInst %float %1 Fma %6588 %7273 %7279
       %7281 = OpExtInst %float %1 Fma %7280 %float_2097152 %7277
       %7282 = OpExtInst %float %1 Floor %7281
       %7283 = OpFMul %float %7278 %float_n6_28318548
       %7284 = OpExtInst %float %1 Fma %7274 %float_6_28318548 %7283
       %7285 = OpFMul %float %7282 %float_n6_28318548
       %7286 = OpExtInst %float %1 Fma %7277 %float_6_28318548 %7285
       %7287 = OpExtInst %float %1 Fma %7284 %float_2097152 %7286
       %7288 = OpFMul %float %7266 %2607
       %7289 = OpExtInst %float %1 Sin %7287
       %7290 = OpFMul %float %7289 %7288
       %7291 = OpCompositeConstruct %v3float %560 %560 %7290
       %7292 = OpFAdd %v3float %7271 %7291
       %7293 = OpFMul %float %7272 %4461
       %7294 = OpFDiv %float %float_2 %7293
       %7295 = OpFMul %float %6623 %7294
       %7296 = OpFMul %float %7294 %5242
       %7297 = OpFMul %float %7296 %5996
       %7298 = OpExtInst %float %1 Fma %6624 %7294 %7297
       %7299 = OpExtInst %float %1 Floor %7295
       %7300 = OpFNegate %float %7299
       %7301 = OpExtInst %float %1 Fma %6623 %7294 %7300
       %7302 = OpExtInst %float %1 Fma %7301 %float_2097152 %7298
       %7303 = OpExtInst %float %1 Floor %7302
       %7304 = OpFMul %float %7299 %float_n6_28318548
       %7305 = OpExtInst %float %1 Fma %7295 %float_6_28318548 %7304
       %7306 = OpFMul %float %7303 %float_n6_28318548
       %7307 = OpExtInst %float %1 Fma %7298 %float_6_28318548 %7306
       %7308 = OpExtInst %float %1 Fma %7305 %float_2097152 %7307
       %7309 = OpFMul %float %7288 %2607
       %7310 = OpExtInst %float %1 Sin %7308
       %7311 = OpFMul %float %7310 %7309
       %7312 = OpCompositeConstruct %v3float %560 %560 %7311
       %7313 = OpFAdd %v3float %7292 %7312
       %7314 = OpFMul %float %6689 %5260
       %7315 = OpFDiv %float %float_2 %7314
       %7316 = OpFMul %float %6686 %7315
       %7317 = OpFMul %float %7315 %5265
       %7318 = OpFMul %float %7317 %5996
       %7319 = OpExtInst %float %1 Fma %6687 %7315 %7318
       %7320 = OpExtInst %float %1 Floor %7316
       %7321 = OpFNegate %float %7320
       %7322 = OpExtInst %float %1 Fma %6686 %7315 %7321
       %7323 = OpExtInst %float %1 Fma %7322 %float_2097152 %7319
       %7324 = OpExtInst %float %1 Floor %7323
       %7325 = OpFMul %float %7320 %float_n6_28318548
       %7326 = OpExtInst %float %1 Fma %7316 %float_6_28318548 %7325
       %7327 = OpFMul %float %7324 %float_n6_28318548
       %7328 = OpExtInst %float %1 Fma %7319 %float_6_28318548 %7327
       %7329 = OpExtInst %float %1 Fma %7326 %float_2097152 %7328
       %7330 = OpFMul %float %7247 %2746
       %7331 = OpExtInst %float %1 Sin %7329
       %7332 = OpFMul %float %7331 %7330
       %7333 = OpFMul %float %7314 %4461
       %7334 = OpFDiv %float %float_2 %7333
       %7335 = OpFMul %float %6721 %7334
       %7336 = OpFMul %float %7334 %5285
       %7337 = OpFMul %float %7336 %5996
       %7338 = OpExtInst %float %1 Fma %6722 %7334 %7337
       %7339 = OpExtInst %float %1 Floor %7335
       %7340 = OpFNegate %float %7339
       %7341 = OpExtInst %float %1 Fma %6721 %7334 %7340
       %7342 = OpExtInst %float %1 Fma %7341 %float_2097152 %7338
       %7343 = OpExtInst %float %1 Floor %7342
       %7344 = OpFMul %float %7339 %float_n6_28318548
       %7345 = OpExtInst %float %1 Fma %7335 %float_6_28318548 %7344
       %7346 = OpFMul %float %7343 %float_n6_28318548
       %7347 = OpExtInst %float %1 Fma %7338 %float_6_28318548 %7346
       %7348 = OpExtInst %float %1 Fma %7345 %float_2097152 %7347
       %7349 = OpFMul %float %7330 %2607
       %7350 = OpExtInst %float %1 Sin %7348
       %7351 = OpFMul %float %7350 %7349
       %7352 = OpCompositeConstruct %v3float %560 %560 %7332
       %7353 = OpCompositeConstruct %v3float %560 %560 %7351
       %7354 = OpFAdd %v3float %7352 %7353
       %7355 = OpFMul %float %7333 %4461
       %7356 = OpFDiv %float %float_2 %7355
       %7357 = OpFMul %float %6757 %7356
       %7358 = OpFMul %float %7356 %5308
       %7359 = OpFMul %float %7358 %5996
       %7360 = OpExtInst %float %1 Fma %6758 %7356 %7359
       %7361 = OpExtInst %float %1 Floor %7357
       %7362 = OpFNegate %float %7361
       %7363 = OpExtInst %float %1 Fma %6757 %7356 %7362
       %7364 = OpExtInst %float %1 Fma %7363 %float_2097152 %7360
       %7365 = OpExtInst %float %1 Floor %7364
       %7366 = OpFMul %float %7361 %float_n6_28318548
       %7367 = OpExtInst %float %1 Fma %7357 %float_6_28318548 %7366
       %7368 = OpFMul %float %7365 %float_n6_28318548
       %7369 = OpExtInst %float %1 Fma %7360 %float_6_28318548 %7368
       %7370 = OpExtInst %float %1 Fma %7367 %float_2097152 %7369
       %7371 = OpFMul %float %7349 %2607
       %7372 = OpExtInst %float %1 Sin %7370
       %7373 = OpFMul %float %7372 %7371
       %7374 = OpCompositeConstruct %v3float %560 %560 %7373
       %7375 = OpFAdd %v3float %7354 %7374
       %7376 = OpFMul %float %7355 %4461
       %7377 = OpFDiv %float %float_2 %7376
       %7378 = OpFMul %float %6792 %7377
       %7379 = OpFMul %float %7377 %5330
       %7380 = OpFMul %float %7379 %5996
       %7381 = OpExtInst %float %1 Fma %6793 %7377 %7380
       %7382 = OpExtInst %float %1 Floor %7378
       %7383 = OpFNegate %float %7382
       %7384 = OpExtInst %float %1 Fma %6792 %7377 %7383
       %7385 = OpExtInst %float %1 Fma %7384 %float_2097152 %7381
       %7386 = OpExtInst %float %1 Floor %7385
       %7387 = OpFMul %float %7382 %float_n6_28318548
       %7388 = OpExtInst %float %1 Fma %7378 %float_6_28318548 %7387
       %7389 = OpFMul %float %7386 %float_n6_28318548
       %7390 = OpExtInst %float %1 Fma %7381 %float_6_28318548 %7389
       %7391 = OpExtInst %float %1 Fma %7388 %float_2097152 %7390
       %7392 = OpFMul %float %7371 %2607
       %7393 = OpExtInst %float %1 Sin %7391
       %7394 = OpFMul %float %7393 %7392
       %7395 = OpCompositeConstruct %v3float %560 %560 %7394
       %7396 = OpFAdd %v3float %7375 %7395
       %7397 = OpFAdd %v3float %7313 %7396
       %7398 = OpFMul %float %6859 %5260
       %7399 = OpFDiv %float %float_2 %7398
       %7400 = OpFMul %float %6856 %7399
       %7401 = OpFMul %float %7399 %5265
       %7402 = OpFMul %float %7401 %5996
       %7403 = OpExtInst %float %1 Fma %6857 %7399 %7402
       %7404 = OpExtInst %float %1 Floor %7400
       %7405 = OpFNegate %float %7404
       %7406 = OpExtInst %float %1 Fma %6856 %7399 %7405
       %7407 = OpExtInst %float %1 Fma %7406 %float_2097152 %7403
       %7408 = OpExtInst %float %1 Floor %7407
       %7409 = OpFMul %float %7404 %float_n6_28318548
       %7410 = OpExtInst %float %1 Fma %7400 %float_6_28318548 %7409
       %7411 = OpFMul %float %7408 %float_n6_28318548
       %7412 = OpExtInst %float %1 Fma %7403 %float_6_28318548 %7411
       %7413 = OpExtInst %float %1 Fma %7410 %float_2097152 %7412
       %7414 = OpExtInst %float %1 Sin %7413
       %7415 = OpFMul %float %7414 %7330
       %7416 = OpFMul %float %7398 %4461
       %7417 = OpFDiv %float %float_2 %7416
       %7418 = OpFMul %float %6890 %7417
       %7419 = OpFMul %float %7417 %5285
       %7420 = OpFMul %float %7419 %5996
       %7421 = OpExtInst %float %1 Fma %6891 %7417 %7420
       %7422 = OpExtInst %float %1 Floor %7418
       %7423 = OpFNegate %float %7422
       %7424 = OpExtInst %float %1 Fma %6890 %7417 %7423
       %7425 = OpExtInst %float %1 Fma %7424 %float_2097152 %7421
       %7426 = OpExtInst %float %1 Floor %7425
       %7427 = OpFMul %float %7422 %float_n6_28318548
       %7428 = OpExtInst %float %1 Fma %7418 %float_6_28318548 %7427
       %7429 = OpFMul %float %7426 %float_n6_28318548
       %7430 = OpExtInst %float %1 Fma %7421 %float_6_28318548 %7429
       %7431 = OpExtInst %float %1 Fma %7428 %float_2097152 %7430
       %7432 = OpExtInst %float %1 Sin %7431
       %7433 = OpFMul %float %7432 %7349
       %7434 = OpCompositeConstruct %v3float %560 %560 %7415
       %7435 = OpCompositeConstruct %v3float %560 %560 %7433
       %7436 = OpFAdd %v3float %7434 %7435
       %7437 = OpFMul %float %7416 %4461
       %7438 = OpFDiv %float %float_2 %7437
       %7439 = OpFMul %float %6925 %7438
       %7440 = OpFMul %float %7438 %5308
       %7441 = OpFMul %float %7440 %5996
       %7442 = OpExtInst %float %1 Fma %6926 %7438 %7441
       %7443 = OpExtInst %float %1 Floor %7439
       %7444 = OpFNegate %float %7443
       %7445 = OpExtInst %float %1 Fma %6925 %7438 %7444
       %7446 = OpExtInst %float %1 Fma %7445 %float_2097152 %7442
       %7447 = OpExtInst %float %1 Floor %7446
       %7448 = OpFMul %float %7443 %float_n6_28318548
       %7449 = OpExtInst %float %1 Fma %7439 %float_6_28318548 %7448
       %7450 = OpFMul %float %7447 %float_n6_28318548
       %7451 = OpExtInst %float %1 Fma %7442 %float_6_28318548 %7450
       %7452 = OpExtInst %float %1 Fma %7449 %float_2097152 %7451
       %7453 = OpExtInst %float %1 Sin %7452
       %7454 = OpFMul %float %7453 %7371
       %7455 = OpCompositeConstruct %v3float %560 %560 %7454
       %7456 = OpFAdd %v3float %7436 %7455
       %7457 = OpFMul %float %7437 %4461
       %7458 = OpFDiv %float %float_2 %7457
       %7459 = OpFMul %float %6959 %7458
       %7460 = OpFMul %float %7458 %5330
       %7461 = OpFMul %float %7460 %5996
       %7462 = OpExtInst %float %1 Fma %6960 %7458 %7461
       %7463 = OpExtInst %float %1 Floor %7459
       %7464 = OpFNegate %float %7463
       %7465 = OpExtInst %float %1 Fma %6959 %7458 %7464
       %7466 = OpExtInst %float %1 Fma %7465 %float_2097152 %7462
       %7467 = OpExtInst %float %1 Floor %7466
       %7468 = OpFMul %float %7463 %float_n6_28318548
       %7469 = OpExtInst %float %1 Fma %7459 %float_6_28318548 %7468
       %7470 = OpFMul %float %7467 %float_n6_28318548
       %7471 = OpExtInst %float %1 Fma %7462 %float_6_28318548 %7470
       %7472 = OpExtInst %float %1 Fma %7469 %float_2097152 %7471
       %7473 = OpExtInst %float %1 Sin %7472
       %7474 = OpFMul %float %7473 %7392
       %7475 = OpCompositeConstruct %v3float %560 %560 %7474
       %7476 = OpFAdd %v3float %7456 %7475
       %7477 = OpFAdd %v3float %7397 %7476
       %7478 = OpFMul %float %5724 %5429
       %7479 = OpFDiv %float %float_2 %7478
       %7480 = OpFMul %float %5721 %7479
       %7481 = OpFMul %float %7479 %4912
       %7482 = OpFMul %float %7481 %5996
       %7483 = OpExtInst %float %1 Fma %5722 %7479 %7482
       %7484 = OpExtInst %float %1 Floor %7480
       %7485 = OpFNegate %float %7484
       %7486 = OpExtInst %float %1 Fma %5721 %7479 %7485
       %7487 = OpExtInst %float %1 Fma %7486 %float_2097152 %7483
       %7488 = OpExtInst %float %1 Floor %7487
       %7489 = OpFMul %float %7484 %float_n6_28318548
       %7490 = OpExtInst %float %1 Fma %7480 %float_6_28318548 %7489
       %7491 = OpFMul %float %7488 %float_n6_28318548
       %7492 = OpExtInst %float %1 Fma %7483 %float_6_28318548 %7491
       %7493 = OpExtInst %float %1 Fma %7490 %float_2097152 %7492
       %7494 = OpFMul %float %6537 %float_0_5
       %7495 = OpExtInst %float %1 Sin %7493
       %7496 = OpFMul %float %7495 %7494
       %7497 = OpFMul %float %7478 %4461
       %7498 = OpFDiv %float %float_2 %7497
       %7499 = OpFMul %float %6552 %7498
       %7500 = OpFMul %float %7498 %4933
       %7501 = OpFMul %float %7500 %5996
       %7502 = OpExtInst %float %1 Fma %6553 %7498 %7501
       %7503 = OpExtInst %float %1 Floor %7499
       %7504 = OpFNegate %float %7503
       %7505 = OpExtInst %float %1 Fma %6552 %7498 %7504
       %7506 = OpExtInst %float %1 Fma %7505 %float_2097152 %7502
       %7507 = OpExtInst %float %1 Floor %7506
       %7508 = OpFMul %float %7503 %float_n6_28318548
       %7509 = OpExtInst %float %1 Fma %7499 %float_6_28318548 %7508
       %7510 = OpFMul %float %7507 %float_n6_28318548
       %7511 = OpExtInst %float %1 Fma %7502 %float_6_28318548 %7510
       %7512 = OpExtInst %float %1 Fma %7509 %float_2097152 %7511
       %7513 = OpFMul %float %7494 %2607
       %7514 = OpExtInst %float %1 Sin %7512
       %7515 = OpFMul %float %7514 %7513
       %7516 = OpCompositeConstruct %v3float %560 %560 %7496
       %7517 = OpCompositeConstruct %v3float %560 %560 %7515
       %7518 = OpFAdd %v3float %7516 %7517
       %7519 = OpFMul %float %7497 %4461
       %7520 = OpFDiv %float %float_2 %7519
       %7521 = OpFMul %float %6588 %7520
       %7522 = OpFMul %float %7520 %4957
       %7523 = OpFMul %float %7522 %5996
       %7524 = OpExtInst %float %1 Fma %6589 %7520 %7523
       %7525 = OpExtInst %float %1 Floor %7521
       %7526 = OpFNegate %float %7525
       %7527 = OpExtInst %float %1 Fma %6588 %7520 %7526
       %7528 = OpExtInst %float %1 Fma %7527 %float_2097152 %7524
       %7529 = OpExtInst %float %1 Floor %7528
       %7530 = OpFMul %float %7525 %float_n6_28318548
       %7531 = OpExtInst %float %1 Fma %7521 %float_6_28318548 %7530
       %7532 = OpFMul %float %7529 %float_n6_28318548
       %7533 = OpExtInst %float %1 Fma %7524 %float_6_28318548 %7532
       %7534 = OpExtInst %float %1 Fma %7531 %float_2097152 %7533
       %7535 = OpFMul %float %7513 %2607
       %7536 = OpExtInst %float %1 Sin %7534
       %7537 = OpFMul %float %7536 %7535
       %7538 = OpCompositeConstruct %v3float %560 %560 %7537
       %7539 = OpFAdd %v3float %7518 %7538
       %7540 = OpFMul %float %7519 %4461
       %7541 = OpFDiv %float %float_2 %7540
       %7542 = OpFMul %float %6623 %7541
       %7543 = OpFMul %float %7541 %4980
       %7544 = OpFMul %float %7543 %5996
       %7545 = OpExtInst %float %1 Fma %6624 %7541 %7544
       %7546 = OpExtInst %float %1 Floor %7542
       %7547 = OpFNegate %float %7546
       %7548 = OpExtInst %float %1 Fma %6623 %7541 %7547
       %7549 = OpExtInst %float %1 Fma %7548 %float_2097152 %7545
       %7550 = OpExtInst %float %1 Floor %7549
       %7551 = OpFMul %float %7546 %float_n6_28318548
       %7552 = OpExtInst %float %1 Fma %7542 %float_6_28318548 %7551
       %7553 = OpFMul %float %7550 %float_n6_28318548
       %7554 = OpExtInst %float %1 Fma %7545 %float_6_28318548 %7553
       %7555 = OpExtInst %float %1 Fma %7552 %float_2097152 %7554
       %7556 = OpFMul %float %7535 %2607
       %7557 = OpExtInst %float %1 Sin %7555
       %7558 = OpFMul %float %7557 %7556
       %7559 = OpCompositeConstruct %v3float %560 %560 %7558
       %7560 = OpFAdd %v3float %7539 %7559
       %7561 = OpFMul %float %6689 %5513
       %7562 = OpFDiv %float %float_2 %7561
       %7563 = OpFMul %float %6686 %7562
       %7564 = OpFMul %float %7562 %5004
       %7565 = OpFMul %float %7564 %5996
       %7566 = OpExtInst %float %1 Fma %6687 %7562 %7565
       %7567 = OpExtInst %float %1 Floor %7563
       %7568 = OpFNegate %float %7567
       %7569 = OpExtInst %float %1 Fma %6686 %7562 %7568
       %7570 = OpExtInst %float %1 Fma %7569 %float_2097152 %7566
       %7571 = OpExtInst %float %1 Floor %7570
       %7572 = OpFMul %float %7567 %float_n6_28318548
       %7573 = OpExtInst %float %1 Fma %7563 %float_6_28318548 %7572
       %7574 = OpFMul %float %7571 %float_n6_28318548
       %7575 = OpExtInst %float %1 Fma %7566 %float_6_28318548 %7574
       %7576 = OpExtInst %float %1 Fma %7573 %float_2097152 %7575
       %7577 = OpFMul %float %7494 %2746
       %7578 = OpExtInst %float %1 Sin %7576
       %7579 = OpFMul %float %7578 %7577
       %7580 = OpFMul %float %7561 %4461
       %7581 = OpFDiv %float %float_2 %7580
       %7582 = OpFMul %float %6721 %7581
       %7583 = OpFMul %float %7581 %5025
       %7584 = OpFMul %float %7583 %5996
       %7585 = OpExtInst %float %1 Fma %6722 %7581 %7584
       %7586 = OpExtInst %float %1 Floor %7582
       %7587 = OpFNegate %float %7586
       %7588 = OpExtInst %float %1 Fma %6721 %7581 %7587
       %7589 = OpExtInst %float %1 Fma %7588 %float_2097152 %7585
       %7590 = OpExtInst %float %1 Floor %7589
       %7591 = OpFMul %float %7586 %float_n6_28318548
       %7592 = OpExtInst %float %1 Fma %7582 %float_6_28318548 %7591
       %7593 = OpFMul %float %7590 %float_n6_28318548
       %7594 = OpExtInst %float %1 Fma %7585 %float_6_28318548 %7593
       %7595 = OpExtInst %float %1 Fma %7592 %float_2097152 %7594
       %7596 = OpFMul %float %7577 %2607
       %7597 = OpExtInst %float %1 Sin %7595
       %7598 = OpFMul %float %7597 %7596
       %7599 = OpCompositeConstruct %v3float %560 %560 %7579
       %7600 = OpCompositeConstruct %v3float %560 %560 %7598
       %7601 = OpFAdd %v3float %7599 %7600
       %7602 = OpFMul %float %7580 %4461
       %7603 = OpFDiv %float %float_2 %7602
       %7604 = OpFMul %float %6757 %7603
       %7605 = OpFMul %float %7603 %5049
       %7606 = OpFMul %float %7605 %5996
       %7607 = OpExtInst %float %1 Fma %6758 %7603 %7606
       %7608 = OpExtInst %float %1 Floor %7604
       %7609 = OpFNegate %float %7608
       %7610 = OpExtInst %float %1 Fma %6757 %7603 %7609
       %7611 = OpExtInst %float %1 Fma %7610 %float_2097152 %7607
       %7612 = OpExtInst %float %1 Floor %7611
       %7613 = OpFMul %float %7608 %float_n6_28318548
       %7614 = OpExtInst %float %1 Fma %7604 %float_6_28318548 %7613
       %7615 = OpFMul %float %7612 %float_n6_28318548
       %7616 = OpExtInst %float %1 Fma %7607 %float_6_28318548 %7615
       %7617 = OpExtInst %float %1 Fma %7614 %float_2097152 %7616
       %7618 = OpFMul %float %7596 %2607
       %7619 = OpExtInst %float %1 Sin %7617
       %7620 = OpFMul %float %7619 %7618
       %7621 = OpCompositeConstruct %v3float %560 %560 %7620
       %7622 = OpFAdd %v3float %7601 %7621
       %7623 = OpFMul %float %7602 %4461
       %7624 = OpFDiv %float %float_2 %7623
       %7625 = OpFMul %float %6792 %7624
       %7626 = OpFMul %float %7624 %5072
       %7627 = OpFMul %float %7626 %5996
       %7628 = OpExtInst %float %1 Fma %6793 %7624 %7627
       %7629 = OpExtInst %float %1 Floor %7625
       %7630 = OpFNegate %float %7629
       %7631 = OpExtInst %float %1 Fma %6792 %7624 %7630
       %7632 = OpExtInst %float %1 Fma %7631 %float_2097152 %7628
       %7633 = OpExtInst %float %1 Floor %7632
       %7634 = OpFMul %float %7629 %float_n6_28318548
       %7635 = OpExtInst %float %1 Fma %7625 %float_6_28318548 %7634
       %7636 = OpFMul %float %7633 %float_n6_28318548
       %7637 = OpExtInst %float %1 Fma %7628 %float_6_28318548 %7636
       %7638 = OpExtInst %float %1 Fma %7635 %float_2097152 %7637
       %7639 = OpFMul %float %7618 %2607
       %7640 = OpExtInst %float %1 Sin %7638
       %7641 = OpFMul %float %7640 %7639
       %7642 = OpCompositeConstruct %v3float %560 %560 %7641
       %7643 = OpFAdd %v3float %7622 %7642
       %7644 = OpFAdd %v3float %7560 %7643
       %7645 = OpFMul %float %6859 %5513
       %7646 = OpFDiv %float %float_2 %7645
       %7647 = OpFMul %float %6856 %7646
       %7648 = OpFMul %float %7646 %5004
       %7649 = OpFMul %float %7648 %5996
       %7650 = OpExtInst %float %1 Fma %6857 %7646 %7649
       %7651 = OpExtInst %float %1 Floor %7647
       %7652 = OpFNegate %float %7651
       %7653 = OpExtInst %float %1 Fma %6856 %7646 %7652
       %7654 = OpExtInst %float %1 Fma %7653 %float_2097152 %7650
       %7655 = OpExtInst %float %1 Floor %7654
       %7656 = OpFMul %float %7651 %float_n6_28318548
       %7657 = OpExtInst %float %1 Fma %7647 %float_6_28318548 %7656
       %7658 = OpFMul %float %7655 %float_n6_28318548
       %7659 = OpExtInst %float %1 Fma %7650 %float_6_28318548 %7658
       %7660 = OpExtInst %float %1 Fma %7657 %float_2097152 %7659
       %7661 = OpExtInst %float %1 Sin %7660
       %7662 = OpFMul %float %7661 %7577
       %7663 = OpFMul %float %7645 %4461
       %7664 = OpFDiv %float %float_2 %7663
       %7665 = OpFMul %float %6890 %7664
       %7666 = OpFMul %float %7664 %5025
       %7667 = OpFMul %float %7666 %5996
       %7668 = OpExtInst %float %1 Fma %6891 %7664 %7667
       %7669 = OpExtInst %float %1 Floor %7665
       %7670 = OpFNegate %float %7669
       %7671 = OpExtInst %float %1 Fma %6890 %7664 %7670
       %7672 = OpExtInst %float %1 Fma %7671 %float_2097152 %7668
       %7673 = OpExtInst %float %1 Floor %7672
       %7674 = OpFMul %float %7669 %float_n6_28318548
       %7675 = OpExtInst %float %1 Fma %7665 %float_6_28318548 %7674
       %7676 = OpFMul %float %7673 %float_n6_28318548
       %7677 = OpExtInst %float %1 Fma %7668 %float_6_28318548 %7676
       %7678 = OpExtInst %float %1 Fma %7675 %float_2097152 %7677
       %7679 = OpExtInst %float %1 Sin %7678
       %7680 = OpFMul %float %7679 %7596
       %7681 = OpCompositeConstruct %v3float %560 %560 %7662
       %7682 = OpCompositeConstruct %v3float %560 %560 %7680
       %7683 = OpFAdd %v3float %7681 %7682
       %7684 = OpFMul %float %7663 %4461
       %7685 = OpFDiv %float %float_2 %7684
       %7686 = OpFMul %float %6925 %7685
       %7687 = OpFMul %float %7685 %5049
       %7688 = OpFMul %float %7687 %5996
       %7689 = OpExtInst %float %1 Fma %6926 %7685 %7688
       %7690 = OpExtInst %float %1 Floor %7686
       %7691 = OpFNegate %float %7690
       %7692 = OpExtInst %float %1 Fma %6925 %7685 %7691
       %7693 = OpExtInst %float %1 Fma %7692 %float_2097152 %7689
       %7694 = OpExtInst %float %1 Floor %7693
       %7695 = OpFMul %float %7690 %float_n6_28318548
       %7696 = OpExtInst %float %1 Fma %7686 %float_6_28318548 %7695
       %7697 = OpFMul %float %7694 %float_n6_28318548
       %7698 = OpExtInst %float %1 Fma %7689 %float_6_28318548 %7697
       %7699 = OpExtInst %float %1 Fma %7696 %float_2097152 %7698
       %7700 = OpExtInst %float %1 Sin %7699
       %7701 = OpFMul %float %7700 %7618
       %7702 = OpCompositeConstruct %v3float %560 %560 %7701
       %7703 = OpFAdd %v3float %7683 %7702
       %7704 = OpFMul %float %7684 %4461
       %7705 = OpFDiv %float %float_2 %7704
       %7706 = OpFMul %float %6959 %7705
       %7707 = OpFMul %float %7705 %5072
       %7708 = OpFMul %float %7707 %5996
       %7709 = OpExtInst %float %1 Fma %6960 %7705 %7708
       %7710 = OpExtInst %float %1 Floor %7706
       %7711 = OpFNegate %float %7710
       %7712 = OpExtInst %float %1 Fma %6959 %7705 %7711
       %7713 = OpExtInst %float %1 Fma %7712 %float_2097152 %7709
       %7714 = OpExtInst %float %1 Floor %7713
       %7715 = OpFMul %float %7710 %float_n6_28318548
       %7716 = OpExtInst %float %1 Fma %7706 %float_6_28318548 %7715
       %7717 = OpFMul %float %7714 %float_n6_28318548
       %7718 = OpExtInst %float %1 Fma %7709 %float_6_28318548 %7717
       %7719 = OpExtInst %float %1 Fma %7716 %float_2097152 %7718
       %7720 = OpExtInst %float %1 Sin %7719
       %7721 = OpFMul %float %7720 %7639
       %7722 = OpCompositeConstruct %v3float %560 %560 %7721
       %7723 = OpFAdd %v3float %7703 %7722
       %7724 = OpFAdd %v3float %7644 %7723
       %7725 = OpFAdd %v3float %7477 %7724
       %7726 = OpFAdd %v3float %7230 %7725
       %7727 = OpFAdd %v3float %6981 %7726
       %7728 = OpFAdd %v3float %5680 %7727
       %7729 = OpExtInst %v3float %1 Fma %3531 %3534 %7728
       %7730 = OpCompositeExtract %float %7729 2
       %7731 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_90 %int_3
       %7732 = OpLoad %float %7731
       %7733 = OpFNegate %float %7732
       %7734 = OpExtInst %float %1 Fma %7730 %1738 %7733
       %7735 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_2
       %7736 = OpLoad %float %7735
       %7737 = OpFMul %float %7734 %7736
       %7738 = OpExtInst %float %1 FClamp %7737 %float_0 %float_1
       %7739 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_91 %int_3
       %7740 = OpLoad %float %7739
       %7741 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_92 %int_0
       %7742 = OpLoad %float %7741
       %7743 = OpFNegate %float %7742
       %7744 = OpExtInst %float %1 Fma %7738 %7740 %7743
       %7745 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_92 %int_3
       %7746 = OpLoad %float %7745
       %7747 = OpFMul %float %7744 %7746
       %7748 = OpExtInst %float %1 FClamp %7747 %float_0 %float_1
       %7749 = OpCompositeConstruct %v3float %7730 %7730 %7730
       %7750 = OpExtInst %v3float %1 Fma %7749 %634 %654
       %7751 = OpDPdx %v3float %604
       %7752 = OpVectorTimesScalar %v3float %7751 %float_2097152
       %7753 = OpDPdx %v3float %7750
       %7754 = OpFAdd %v3float %7752 %7753
       %7755 = OpDPdy %v3float %604
       %7756 = OpVectorTimesScalar %v3float %7755 %float_2097152
       %7757 = OpDPdy %v3float %7750
       %7758 = OpFAdd %v3float %7756 %7757
       %7759 = OpExtInst %v3float %1 Cross %7754 %7758
       %7760 = OpExtInst %v3float %1 Normalize %7759
       %7761 = OpDPdx %v3float %604
       %7762 = OpVectorTimesScalar %v3float %7761 %float_2097152
       %7763 = OpDPdx %v3float %654
       %7764 = OpFAdd %v3float %7762 %7763
       %7765 = OpDPdy %v3float %604
       %7766 = OpVectorTimesScalar %v3float %7765 %float_2097152
       %7767 = OpDPdy %v3float %654
       %7768 = OpFAdd %v3float %7766 %7767
       %7769 = OpExtInst %v3float %1 Cross %7764 %7768
       %7770 = OpExtInst %v3float %1 Normalize %7769
       %7771 = OpFSub %v3float %7760 %7770
       %7772 = OpFAdd %v3float %7771 %634
       %7773 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_1
       %7774 = OpLoad %float %7773
       %7775 = OpCompositeConstruct %v3float %7774 %7774 %7774
       %7776 = OpExtInst %v3float %1 FMix %7772 %299 %7775
       %7777 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_2
       %7778 = OpLoad %float %7777
       %7779 = OpCompositeConstruct %v3float %7778 %7778 %7778
       %7780 = OpExtInst %v3float %1 Fma %7776 %7779 %655
       %7781 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_93 %int_3
       %7782 = OpLoad %float %7781
       %7783 = OpCompositeConstruct %v3float %7782 %7782 %7782
       %7784 = OpFMul %v3float %604 %7783
       %7785 = OpFMul %v3float %7780 %7783
       %7786 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_1
       %7787 = OpLoad %float %7786
       %7788 = OpFMul %float %1174 %7787
       %7789 = OpCompositeConstruct %v2float %7788 %7788
       %7790 = OpFAdd %v2float %7789 %284
       %7791 = OpCompositeExtract %float %7784 0
       %7792 = OpCompositeExtract %float %7785 0
       %7793 = OpCompositeExtract %float %7784 1
       %7794 = OpCompositeExtract %float %7785 1
       %7795 = OpCompositeExtract %float %7790 0
       %7796 = OpCompositeConstruct %v3float %7791 %7793 %float_0
       %7797 = OpCompositeConstruct %v3float %7792 %7794 %7795
       %7798 = OpVectorTimesScalar %v3float %7797 %float_4_76837158en07
       %7799 = OpFAdd %v3float %7798 %143
       %7800 = OpFAdd %v3float %7796 %7799
       %7801 = OpExtInst %v3float %1 Floor %7800
       %7802 = OpFSub %v3float %7796 %7801
       %7803 = OpVectorTimesScalar %v3float %7802 %float_2097152
       %7804 = OpFAdd %v3float %7803 %7797
       %7805 = OpVectorTimesScalar %v3float %7804 %float_1
               OpBranch %7806
       %7806 = OpLabel
       %7807 = OpPhi %v3float %7805 %6302 %7808 %7809
       %7810 = OpPhi %float %float_1 %6302 %7811 %7809
       %7812 = OpPhi %float %float_0 %6302 %7813 %7809
       %7814 = OpPhi %uint %uint_0 %6302 %7815 %7809
       %7816 = OpULessThan %bool %7814 %uint_10
               OpLoopMerge %7817 %7809 DontUnroll
               OpBranchConditional %7816 %7809 %7817
       %7809 = OpLabel
       %7818 = OpExtInst %v3float %1 Fract %7807
       %7819 = OpExtInst %v3float %1 Floor %7807
       %7820 = OpDot %float %7819 %397
       %7821 = OpFAdd %float %7820 %float_19
       %7822 = OpFAdd %float %7820 %float_47
       %7823 = OpFAdd %float %7820 %float_66
       %7824 = OpFAdd %float %7820 %float_101
       %7825 = OpFAdd %float %7820 %float_120
       %7826 = OpFAdd %float %7820 %float_148
       %7827 = OpFAdd %float %7820 %float_167
       %7828 = OpConvertFToS %int %7820
       %7829 = OpCompositeConstruct %v3int %7828 %int_0 %int_0
       %7830 = OpBitcast %v3uint %7829
       %7831 = OpIMul %v3uint %7830 %413
       %7832 = OpIAdd %v3uint %7831 %415
       %7833 = OpCompositeExtract %uint %7832 1
       %7834 = OpCompositeExtract %uint %7832 2
       %7835 = OpIMul %uint %7833 %7834
       %7836 = OpCompositeExtract %uint %7832 0
       %7837 = OpIAdd %uint %7836 %7835
       %7838 = OpIMul %uint %7834 %7837
       %7839 = OpIAdd %uint %7833 %7838
       %7840 = OpIMul %uint %7837 %7839
       %7841 = OpIAdd %uint %7834 %7840
       %7842 = OpIMul %uint %7839 %7841
       %7843 = OpIAdd %uint %7837 %7842
       %7844 = OpCompositeInsert %v3uint %7843 %561 0
       %7845 = OpBitwiseAnd %v3uint %416 %417
       %7846 = OpShiftRightLogical %v3uint %7844 %7845
       %7847 = OpCompositeExtract %uint %7846 0
       %7848 = OpCompositeConstruct %v3uint %7847 %7847 %7847
       %7849 = OpBitwiseAnd %v3uint %7848 %398
       %7850 = OpConvertUToF %v3float %7849
       %7851 = OpExtInst %v3float %1 Fma %7850 %402 %287
       %7852 = OpDot %float %7851 %7818
       %7853 = OpConvertFToS %int %7821
       %7854 = OpFSub %v3float %7818 %362
       %7855 = OpCompositeConstruct %v3int %7853 %int_0 %int_0
       %7856 = OpBitcast %v3uint %7855
       %7857 = OpIMul %v3uint %7856 %413
       %7858 = OpIAdd %v3uint %7857 %415
       %7859 = OpCompositeExtract %uint %7858 1
       %7860 = OpCompositeExtract %uint %7858 2
       %7861 = OpIMul %uint %7859 %7860
       %7862 = OpCompositeExtract %uint %7858 0
       %7863 = OpIAdd %uint %7862 %7861
       %7864 = OpIMul %uint %7860 %7863
       %7865 = OpIAdd %uint %7859 %7864
       %7866 = OpIMul %uint %7863 %7865
       %7867 = OpIAdd %uint %7860 %7866
       %7868 = OpIMul %uint %7865 %7867
       %7869 = OpIAdd %uint %7863 %7868
       %7870 = OpCompositeInsert %v3uint %7869 %561 0
       %7871 = OpShiftRightLogical %v3uint %7870 %7845
       %7872 = OpCompositeExtract %uint %7871 0
       %7873 = OpCompositeConstruct %v3uint %7872 %7872 %7872
       %7874 = OpBitwiseAnd %v3uint %7873 %398
       %7875 = OpConvertUToF %v3float %7874
       %7876 = OpExtInst %v3float %1 Fma %7875 %402 %287
       %7877 = OpDot %float %7876 %7854
       %7878 = OpConvertFToS %int %7822
       %7879 = OpFSub %v3float %7818 %363
       %7880 = OpCompositeConstruct %v3int %7878 %int_0 %int_0
       %7881 = OpBitcast %v3uint %7880
       %7882 = OpIMul %v3uint %7881 %413
       %7883 = OpIAdd %v3uint %7882 %415
       %7884 = OpCompositeExtract %uint %7883 1
       %7885 = OpCompositeExtract %uint %7883 2
       %7886 = OpIMul %uint %7884 %7885
       %7887 = OpCompositeExtract %uint %7883 0
       %7888 = OpIAdd %uint %7887 %7886
       %7889 = OpIMul %uint %7885 %7888
       %7890 = OpIAdd %uint %7884 %7889
       %7891 = OpIMul %uint %7888 %7890
       %7892 = OpIAdd %uint %7885 %7891
       %7893 = OpIMul %uint %7890 %7892
       %7894 = OpIAdd %uint %7888 %7893
       %7895 = OpCompositeInsert %v3uint %7894 %561 0
       %7896 = OpShiftRightLogical %v3uint %7895 %7845
       %7897 = OpCompositeExtract %uint %7896 0
       %7898 = OpCompositeConstruct %v3uint %7897 %7897 %7897
       %7899 = OpBitwiseAnd %v3uint %7898 %398
       %7900 = OpConvertUToF %v3float %7899
       %7901 = OpExtInst %v3float %1 Fma %7900 %402 %287
       %7902 = OpDot %float %7901 %7879
       %7903 = OpConvertFToS %int %7823
       %7904 = OpFSub %v3float %7818 %140
       %7905 = OpCompositeConstruct %v3int %7903 %int_0 %int_0
       %7906 = OpBitcast %v3uint %7905
       %7907 = OpIMul %v3uint %7906 %413
       %7908 = OpIAdd %v3uint %7907 %415
       %7909 = OpCompositeExtract %uint %7908 1
       %7910 = OpCompositeExtract %uint %7908 2
       %7911 = OpIMul %uint %7909 %7910
       %7912 = OpCompositeExtract %uint %7908 0
       %7913 = OpIAdd %uint %7912 %7911
       %7914 = OpIMul %uint %7910 %7913
       %7915 = OpIAdd %uint %7909 %7914
       %7916 = OpIMul %uint %7913 %7915
       %7917 = OpIAdd %uint %7910 %7916
       %7918 = OpIMul %uint %7915 %7917
       %7919 = OpIAdd %uint %7913 %7918
       %7920 = OpCompositeInsert %v3uint %7919 %561 0
       %7921 = OpShiftRightLogical %v3uint %7920 %7845
       %7922 = OpCompositeExtract %uint %7921 0
       %7923 = OpCompositeConstruct %v3uint %7922 %7922 %7922
       %7924 = OpBitwiseAnd %v3uint %7923 %398
       %7925 = OpConvertUToF %v3float %7924
       %7926 = OpExtInst %v3float %1 Fma %7925 %402 %287
       %7927 = OpDot %float %7926 %7904
       %7928 = OpConvertFToS %int %7824
       %7929 = OpFSub %v3float %7818 %299
       %7930 = OpCompositeConstruct %v3int %7928 %int_0 %int_0
       %7931 = OpBitcast %v3uint %7930
       %7932 = OpIMul %v3uint %7931 %413
       %7933 = OpIAdd %v3uint %7932 %415
       %7934 = OpCompositeExtract %uint %7933 1
       %7935 = OpCompositeExtract %uint %7933 2
       %7936 = OpIMul %uint %7934 %7935
       %7937 = OpCompositeExtract %uint %7933 0
       %7938 = OpIAdd %uint %7937 %7936
       %7939 = OpIMul %uint %7935 %7938
       %7940 = OpIAdd %uint %7934 %7939
       %7941 = OpIMul %uint %7938 %7940
       %7942 = OpIAdd %uint %7935 %7941
       %7943 = OpIMul %uint %7940 %7942
       %7944 = OpIAdd %uint %7938 %7943
       %7945 = OpCompositeInsert %v3uint %7944 %561 0
       %7946 = OpShiftRightLogical %v3uint %7945 %7845
       %7947 = OpCompositeExtract %uint %7946 0
       %7948 = OpCompositeConstruct %v3uint %7947 %7947 %7947
       %7949 = OpBitwiseAnd %v3uint %7948 %398
       %7950 = OpConvertUToF %v3float %7949
       %7951 = OpExtInst %v3float %1 Fma %7950 %402 %287
       %7952 = OpDot %float %7951 %7929
       %7953 = OpConvertFToS %int %7825
       %7954 = OpFSub %v3float %7818 %146
       %7955 = OpCompositeConstruct %v3int %7953 %int_0 %int_0
       %7956 = OpBitcast %v3uint %7955
       %7957 = OpIMul %v3uint %7956 %413
       %7958 = OpIAdd %v3uint %7957 %415
       %7959 = OpCompositeExtract %uint %7958 1
       %7960 = OpCompositeExtract %uint %7958 2
       %7961 = OpIMul %uint %7959 %7960
       %7962 = OpCompositeExtract %uint %7958 0
       %7963 = OpIAdd %uint %7962 %7961
       %7964 = OpIMul %uint %7960 %7963
       %7965 = OpIAdd %uint %7959 %7964
       %7966 = OpIMul %uint %7963 %7965
       %7967 = OpIAdd %uint %7960 %7966
       %7968 = OpIMul %uint %7965 %7967
       %7969 = OpIAdd %uint %7963 %7968
       %7970 = OpCompositeInsert %v3uint %7969 %561 0
       %7971 = OpShiftRightLogical %v3uint %7970 %7845
       %7972 = OpCompositeExtract %uint %7971 0
       %7973 = OpCompositeConstruct %v3uint %7972 %7972 %7972
       %7974 = OpBitwiseAnd %v3uint %7973 %398
       %7975 = OpConvertUToF %v3float %7974
       %7976 = OpExtInst %v3float %1 Fma %7975 %402 %287
       %7977 = OpDot %float %7976 %7954
       %7978 = OpConvertFToS %int %7826
       %7979 = OpFSub %v3float %7818 %141
       %7980 = OpCompositeConstruct %v3int %7978 %int_0 %int_0
       %7981 = OpBitcast %v3uint %7980
       %7982 = OpIMul %v3uint %7981 %413
       %7983 = OpIAdd %v3uint %7982 %415
       %7984 = OpCompositeExtract %uint %7983 1
       %7985 = OpCompositeExtract %uint %7983 2
       %7986 = OpIMul %uint %7984 %7985
       %7987 = OpCompositeExtract %uint %7983 0
       %7988 = OpIAdd %uint %7987 %7986
       %7989 = OpIMul %uint %7985 %7988
       %7990 = OpIAdd %uint %7984 %7989
       %7991 = OpIMul %uint %7988 %7990
       %7992 = OpIAdd %uint %7985 %7991
       %7993 = OpIMul %uint %7990 %7992
       %7994 = OpIAdd %uint %7988 %7993
       %7995 = OpCompositeInsert %v3uint %7994 %561 0
       %7996 = OpShiftRightLogical %v3uint %7995 %7845
       %7997 = OpCompositeExtract %uint %7996 0
       %7998 = OpCompositeConstruct %v3uint %7997 %7997 %7997
       %7999 = OpBitwiseAnd %v3uint %7998 %398
       %8000 = OpConvertUToF %v3float %7999
       %8001 = OpExtInst %v3float %1 Fma %8000 %402 %287
       %8002 = OpDot %float %8001 %7979
       %8003 = OpConvertFToS %int %7827
       %8004 = OpFSub %v3float %7818 %134
       %8005 = OpCompositeConstruct %v3int %8003 %int_0 %int_0
       %8006 = OpBitcast %v3uint %8005
       %8007 = OpIMul %v3uint %8006 %413
       %8008 = OpIAdd %v3uint %8007 %415
       %8009 = OpCompositeExtract %uint %8008 1
       %8010 = OpCompositeExtract %uint %8008 2
       %8011 = OpIMul %uint %8009 %8010
       %8012 = OpCompositeExtract %uint %8008 0
       %8013 = OpIAdd %uint %8012 %8011
       %8014 = OpIMul %uint %8010 %8013
       %8015 = OpIAdd %uint %8009 %8014
       %8016 = OpIMul %uint %8013 %8015
       %8017 = OpIAdd %uint %8010 %8016
       %8018 = OpIMul %uint %8015 %8017
       %8019 = OpIAdd %uint %8013 %8018
       %8020 = OpCompositeInsert %v3uint %8019 %561 0
       %8021 = OpShiftRightLogical %v3uint %8020 %7845
       %8022 = OpCompositeExtract %uint %8021 0
       %8023 = OpCompositeConstruct %v3uint %8022 %8022 %8022
       %8024 = OpBitwiseAnd %v3uint %8023 %398
       %8025 = OpConvertUToF %v3float %8024
       %8026 = OpExtInst %v3float %1 Fma %8025 %402 %287
       %8027 = OpDot %float %8026 %8004
       %8028 = OpCompositeExtract %float %7818 0
       %8029 = OpCompositeExtract %float %7818 1
       %8030 = OpCompositeExtract %float %7818 2
       %8031 = OpCompositeConstruct %v4float %8028 %8029 %8030 %float_0
       %8032 = OpFMul %v4float %8031 %8031
       %8033 = OpFMul %v4float %8032 %8031
       %8034 = OpVectorTimesScalar %v4float %8031 %float_6
       %8035 = OpFSub %v4float %8034 %393
       %8036 = OpExtInst %v4float %1 Fma %8031 %8035 %394
       %8037 = OpFMul %v4float %8033 %8036
       %8038 = OpCompositeExtract %float %8037 0
       %8039 = OpExtInst %float %1 FMix %7852 %7877 %8038
       %8040 = OpExtInst %float %1 FMix %7902 %7927 %8038
       %8041 = OpCompositeExtract %float %8037 1
       %8042 = OpExtInst %float %1 FMix %8039 %8040 %8041
       %8043 = OpExtInst %float %1 FMix %7952 %7977 %8038
       %8044 = OpExtInst %float %1 FMix %8002 %8027 %8038
       %8045 = OpExtInst %float %1 FMix %8043 %8044 %8041
       %8046 = OpCompositeExtract %float %8037 2
       %8047 = OpExtInst %float %1 FMix %8042 %8045 %8046
       %8048 = OpExtInst %float %1 FAbs %8047
       %7813 = OpExtInst %float %1 Fma %8048 %7810 %7812
       %7808 = OpVectorTimesScalar %v3float %7807 %float_2
       %7811 = OpFMul %float %7810 %float_0_5
       %7815 = OpIAdd %uint %7814 %uint_1
               OpBranch %7806
       %7817 = OpLabel
       %8049 = OpExtInst %float %1 FMix %float_0 %float_1 %7812
       %8050 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_2
       %8051 = OpLoad %float %8050
       %8052 = OpFNegate %float %7748
       %8053 = OpExtInst %float %1 Fma %8052 %8051 %8049
       %8054 = OpExtInst %float %1 Fma %7748 %8051 %float_1
       %8055 = OpExtInst %float %1 Fma %8052 %8051 %8054
       %8056 = OpFDiv %float %8053 %8055
       %8057 = OpExtInst %float %1 Fma %8056 %float_n1 %float_1
       %8058 = OpExtInst %float %1 FClamp %8057 %float_0 %float_1
       %8059 = OpFOrdLessThanEqual %bool %8058 %float_0
       %8060 = OpExtInst %float %1 Pow %8058 %float_2
       %8061 = OpSelect %float %8059 %float_0 %8060
       %8062 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_0
       %8063 = OpLoad %float %8062
       %8064 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_94 %int_3
       %8065 = OpLoad %float %8064
       %8066 = OpExtInst %float %1 FMix %8063 %8065 %8061
       %8067 = OpExtInst %float %1 FClamp %8066 %float_0 %float_1
       %8068 = OpFMul %float %7748 %8067
       %8069 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_1
       %8070 = OpLoad %float %8069
       %8071 = OpCompositeConstruct %v3float %8070 %8070 %8070
       %8072 = OpFMul %v3float %604 %8071
       %8073 = OpFMul %v3float %655 %8071
       %8074 = OpVectorTimesScalar %v3float %8073 %float_4_76837158en07
       %8075 = OpFAdd %v3float %8074 %143
       %8076 = OpExtInst %v3float %1 Fma %604 %8071 %8075
       %8077 = OpExtInst %v3float %1 Floor %8076
       %8078 = OpFNegate %v3float %8077
       %8079 = OpExtInst %v3float %1 Fma %604 %8071 %8078
       %8080 = OpVectorTimesScalar %v3float %8079 %float_2097152
       %8081 = OpExtInst %v3float %1 Fma %655 %8071 %8080
       %8082 = OpVectorTimesScalar %v3float %8081 %float_1
               OpBranch %8083
       %8083 = OpLabel
       %8084 = OpPhi %v3float %552 %7817 %8085 %8086
       %8087 = OpPhi %v3float %8082 %7817 %8088 %8086
       %8089 = OpPhi %float %float_1 %7817 %8090 %8086
       %8091 = OpPhi %float %float_0 %7817 %8092 %8086
       %8093 = OpPhi %uint %uint_0 %7817 %8094 %8086
       %8095 = OpULessThan %bool %8093 %uint_1
               OpLoopMerge %8096 %8086 DontUnroll
               OpBranchConditional %8095 %8097 %8096
       %8097 = OpLabel
       %8098 = OpExtInst %v3float %1 Fract %8087
       %8099 = OpExtInst %v3float %1 Floor %8087
       %8100 = OpCompositeInsert %v3float %float_0 %8084 0
               OpBranch %8101
       %8101 = OpLabel
       %8102 = OpPhi %v4float %364 %8097 %8103 %8104
       %8085 = OpPhi %v3float %8100 %8097 %8105 %8104
       %8106 = OpCompositeExtract %float %8085 0
       %8107 = OpFOrdLessThanEqual %bool %8106 %float_1
               OpLoopMerge %8108 %8104 None
               OpBranchConditional %8107 %8109 %8108
       %8109 = OpLabel
       %8110 = OpCompositeInsert %v3float %float_0 %8085 1
               OpBranch %8111
       %8111 = OpLabel
       %8112 = OpPhi %v3float %8110 %8109 %8113 %8114
       %8103 = OpPhi %v4float %8102 %8109 %8115 %8114
       %8116 = OpCompositeExtract %float %8112 1
       %8117 = OpFOrdLessThanEqual %bool %8116 %float_1
               OpLoopMerge %8118 %8114 None
               OpBranchConditional %8117 %8119 %8118
       %8119 = OpLabel
       %8120 = OpCompositeInsert %v3float %float_0 %8112 2
               OpBranch %8121
       %8121 = OpLabel
       %8115 = OpPhi %v4float %8103 %8119 %8122 %8123
       %8124 = OpPhi %v3float %8120 %8119 %8125 %8123
       %8126 = OpCompositeExtract %float %8124 2
       %8127 = OpFOrdLessThanEqual %bool %8126 %float_1
               OpLoopMerge %8128 %8123 None
               OpBranchConditional %8127 %8123 %8128
       %8123 = OpLabel
       %8129 = OpFAdd %v3float %8099 %8124
       %8130 = OpVectorShuffle %v3float %549 %8129 3 4 5
       %8131 = OpConvertFToS %v3int %8130
       %8132 = OpBitcast %v3uint %8131
       %8133 = OpIMul %v3uint %8132 %413
       %8134 = OpIAdd %v3uint %8133 %415
       %8135 = OpCompositeExtract %uint %8134 1
       %8136 = OpCompositeExtract %uint %8134 2
       %8137 = OpIMul %uint %8135 %8136
       %8138 = OpCompositeExtract %uint %8134 0
       %8139 = OpIAdd %uint %8138 %8137
       %8140 = OpIMul %uint %8136 %8139
       %8141 = OpIAdd %uint %8135 %8140
       %8142 = OpIMul %uint %8139 %8141
       %8143 = OpIAdd %uint %8136 %8142
       %8144 = OpIMul %uint %8141 %8143
       %8145 = OpIAdd %uint %8139 %8144
       %8146 = OpCompositeInsert %v3uint %8145 %8134 0
       %8147 = OpIMul %uint %8143 %8145
       %8148 = OpIAdd %uint %8141 %8147
       %8149 = OpCompositeInsert %v3uint %8148 %8146 1
       %8150 = OpIMul %uint %8145 %8148
       %8151 = OpIAdd %uint %8143 %8150
       %8152 = OpCompositeInsert %v3uint %8151 %8149 2
       %8153 = OpBitwiseAnd %v3uint %416 %417
       %8154 = OpShiftRightLogical %v3uint %8152 %8153
       %8155 = OpConvertUToF %v3float %8154
       %8156 = OpExtInst %v3float %1 Fma %8155 %533 %522
       %8157 = OpExtInst %v3float %1 Normalize %8156
       %8158 = OpVectorTimesScalar %v3float %8157 %float_0_2588
       %8159 = OpFAdd %v3float %8124 %8158
       %8160 = OpFSub %v3float %8098 %8159
       %8161 = OpCompositeExtract %float %8115 3
       %8162 = OpDot %float %8160 %8160
       %8163 = OpExtInst %float %1 NMin %8161 %8162
       %8122 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %8163
       %8164 = OpFAdd %float %8126 %float_1
       %8125 = OpCompositeInsert %v3float %8164 %8124 2
               OpBranch %8121
       %8128 = OpLabel
               OpBranch %8114
       %8114 = OpLabel
       %8165 = OpCompositeExtract %float %8124 1
       %8166 = OpFAdd %float %8165 %float_1
       %8113 = OpCompositeInsert %v3float %8166 %8124 1
               OpBranch %8111
       %8118 = OpLabel
               OpBranch %8104
       %8104 = OpLabel
       %8167 = OpCompositeExtract %float %8112 0
       %8168 = OpFAdd %float %8167 %float_1
       %8105 = OpCompositeInsert %v3float %8168 %8112 0
               OpBranch %8101
       %8108 = OpLabel
       %8169 = OpCompositeExtract %float %8102 3
       %8170 = OpExtInst %float %1 Sqrt %8169
       %8171 = OpExtInst %float %1 Fma %8170 %float_2 %float_n1
       %8172 = OpExtInst %float %1 FAbs %8171
       %8092 = OpExtInst %float %1 Fma %8172 %8089 %8091
       %8088 = OpVectorTimesScalar %v3float %8087 %float_2
       %8090 = OpFMul %float %8089 %float_0_5
               OpBranch %8086
       %8086 = OpLabel
       %8094 = OpIAdd %uint %8093 %uint_1
               OpBranch %8083
       %8096 = OpLabel
       %8173 = OpExtInst %float %1 FMix %float_n1 %float_1 %8091
       %8174 = OpExtInst %float %1 FClamp %8173 %float_0 %float_1
       %8175 = OpFMul %v3float %8073 %286
       %8176 = OpVectorTimesScalar %v3float %8175 %float_4_76837158en07
       %8177 = OpFAdd %v3float %8176 %143
       %8178 = OpExtInst %v3float %1 Fma %8072 %286 %8177
       %8179 = OpExtInst %v3float %1 Floor %8178
       %8180 = OpFNegate %v3float %8179
       %8181 = OpExtInst %v3float %1 Fma %8072 %286 %8180
       %8182 = OpVectorTimesScalar %v3float %8181 %float_2097152
       %8183 = OpExtInst %v3float %1 Fma %8073 %286 %8182
       %8184 = OpVectorTimesScalar %v3float %8183 %float_1
               OpBranch %8185
       %8185 = OpLabel
       %8186 = OpPhi %v3float %552 %8096 %8187 %8188
       %8189 = OpPhi %v3float %8184 %8096 %8190 %8188
       %8191 = OpPhi %float %float_1 %8096 %8192 %8188
       %8193 = OpPhi %float %float_0 %8096 %8194 %8188
       %8195 = OpPhi %uint %uint_0 %8096 %8196 %8188
       %8197 = OpULessThan %bool %8195 %uint_1
               OpLoopMerge %8198 %8188 DontUnroll
               OpBranchConditional %8197 %8199 %8198
       %8199 = OpLabel
       %8200 = OpExtInst %v3float %1 Fract %8189
       %8201 = OpExtInst %v3float %1 Floor %8189
       %8202 = OpCompositeInsert %v3float %float_0 %8186 0
               OpBranch %8203
       %8203 = OpLabel
       %8204 = OpPhi %v4float %364 %8199 %8205 %8206
       %8187 = OpPhi %v3float %8202 %8199 %8207 %8206
       %8208 = OpCompositeExtract %float %8187 0
       %8209 = OpFOrdLessThanEqual %bool %8208 %float_1
               OpLoopMerge %8210 %8206 None
               OpBranchConditional %8209 %8211 %8210
       %8211 = OpLabel
       %8212 = OpCompositeInsert %v3float %float_0 %8187 1
               OpBranch %8213
       %8213 = OpLabel
       %8214 = OpPhi %v3float %8212 %8211 %8215 %8216
       %8205 = OpPhi %v4float %8204 %8211 %8217 %8216
       %8218 = OpCompositeExtract %float %8214 1
       %8219 = OpFOrdLessThanEqual %bool %8218 %float_1
               OpLoopMerge %8220 %8216 None
               OpBranchConditional %8219 %8221 %8220
       %8221 = OpLabel
       %8222 = OpCompositeInsert %v3float %float_0 %8214 2
               OpBranch %8223
       %8223 = OpLabel
       %8217 = OpPhi %v4float %8205 %8221 %8224 %8225
       %8226 = OpPhi %v3float %8222 %8221 %8227 %8225
       %8228 = OpCompositeExtract %float %8226 2
       %8229 = OpFOrdLessThanEqual %bool %8228 %float_1
               OpLoopMerge %8230 %8225 None
               OpBranchConditional %8229 %8225 %8230
       %8225 = OpLabel
       %8231 = OpFAdd %v3float %8201 %8226
       %8232 = OpVectorShuffle %v3float %549 %8231 3 4 5
       %8233 = OpConvertFToS %v3int %8232
       %8234 = OpBitcast %v3uint %8233
       %8235 = OpIMul %v3uint %8234 %413
       %8236 = OpIAdd %v3uint %8235 %415
       %8237 = OpCompositeExtract %uint %8236 1
       %8238 = OpCompositeExtract %uint %8236 2
       %8239 = OpIMul %uint %8237 %8238
       %8240 = OpCompositeExtract %uint %8236 0
       %8241 = OpIAdd %uint %8240 %8239
       %8242 = OpIMul %uint %8238 %8241
       %8243 = OpIAdd %uint %8237 %8242
       %8244 = OpIMul %uint %8241 %8243
       %8245 = OpIAdd %uint %8238 %8244
       %8246 = OpIMul %uint %8243 %8245
       %8247 = OpIAdd %uint %8241 %8246
       %8248 = OpCompositeInsert %v3uint %8247 %8236 0
       %8249 = OpIMul %uint %8245 %8247
       %8250 = OpIAdd %uint %8243 %8249
       %8251 = OpCompositeInsert %v3uint %8250 %8248 1
       %8252 = OpIMul %uint %8247 %8250
       %8253 = OpIAdd %uint %8245 %8252
       %8254 = OpCompositeInsert %v3uint %8253 %8251 2
       %8255 = OpBitwiseAnd %v3uint %416 %417
       %8256 = OpShiftRightLogical %v3uint %8254 %8255
       %8257 = OpConvertUToF %v3float %8256
       %8258 = OpExtInst %v3float %1 Fma %8257 %533 %522
       %8259 = OpExtInst %v3float %1 Normalize %8258
       %8260 = OpVectorTimesScalar %v3float %8259 %float_0_2588
       %8261 = OpFAdd %v3float %8226 %8260
       %8262 = OpFSub %v3float %8200 %8261
       %8263 = OpCompositeExtract %float %8217 3
       %8264 = OpDot %float %8262 %8262
       %8265 = OpExtInst %float %1 NMin %8263 %8264
       %8224 = OpCompositeConstruct %v4float %float_0 %float_0 %float_0 %8265
       %8266 = OpFAdd %float %8228 %float_1
       %8227 = OpCompositeInsert %v3float %8266 %8226 2
               OpBranch %8223
       %8230 = OpLabel
               OpBranch %8216
       %8216 = OpLabel
       %8267 = OpCompositeExtract %float %8226 1
       %8268 = OpFAdd %float %8267 %float_1
       %8215 = OpCompositeInsert %v3float %8268 %8226 1
               OpBranch %8213
       %8220 = OpLabel
               OpBranch %8206
       %8206 = OpLabel
       %8269 = OpCompositeExtract %float %8214 0
       %8270 = OpFAdd %float %8269 %float_1
       %8207 = OpCompositeInsert %v3float %8270 %8214 0
               OpBranch %8203
       %8210 = OpLabel
       %8271 = OpCompositeExtract %float %8204 3
       %8272 = OpExtInst %float %1 Sqrt %8271
       %8273 = OpExtInst %float %1 Fma %8272 %float_2 %float_n1
       %8274 = OpExtInst %float %1 FAbs %8273
       %8194 = OpExtInst %float %1 Fma %8274 %8191 %8193
       %8190 = OpVectorTimesScalar %v3float %8189 %float_2
       %8192 = OpFMul %float %8191 %float_0_5
               OpBranch %8188
       %8188 = OpLabel
       %8196 = OpIAdd %uint %8195 %uint_1
               OpBranch %8185
       %8198 = OpLabel
       %8275 = OpExtInst %float %1 FMix %float_n1 %float_1 %8193
       %8276 = OpExtInst %float %1 FClamp %8275 %float_0 %float_1
       %8277 = OpFAdd %float %8174 %8276
       %8278 = OpFNegate %float %8277
       %8279 = OpExtInst %float %1 Fma %7748 %8067 %8278
       %8280 = OpExtInst %float %1 Fma %1668 %1670 %8279
       %8281 = OpFMul %float %787 %8280
       %8282 = OpExtInst %float %1 FClamp %8281 %float_0 %float_1
       %8283 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_3
       %8284 = OpLoad %float %8283
       %8285 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_95 %int_2
       %8286 = OpLoad %float %8285
       %8287 = OpExtInst %float %1 FMix %8284 %8286 %8282
       %8288 = OpCompositeExtract %float %3531 2
       %8289 = OpCompositeConstruct %v3float %8288 %8288 %8288
       %8290 = OpExtInst %v3float %1 Fma %8289 %634 %654
       %8291 = OpDPdx %v3float %604
       %8292 = OpVectorTimesScalar %v3float %8291 %float_2097152
       %8293 = OpDPdx %v3float %8290
       %8294 = OpFAdd %v3float %8292 %8293
       %8295 = OpDPdy %v3float %604
       %8296 = OpVectorTimesScalar %v3float %8295 %float_2097152
       %8297 = OpDPdy %v3float %8290
       %8298 = OpFAdd %v3float %8296 %8297
       %8299 = OpExtInst %v3float %1 Cross %8294 %8298
       %8300 = OpExtInst %v3float %1 Normalize %8299
       %8301 = OpFSub %v3float %8300 %7770
       %8302 = OpFAdd %v3float %8301 %634
       %8303 = OpDot %float %7776 %671
       %8304 = OpExtInst %float %1 NMax %float_0 %8303
       %8305 = OpFSub %float %float_1 %8304
       %8306 = OpExtInst %float %1 FAbs %8305
       %8307 = OpExtInst %float %1 NMax %8306 %float_9_99999975en05
       %8308 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_0
       %8309 = OpLoad %float %8308
       %8310 = OpFOrdLessThanEqual %bool %8307 %float_0
       %8311 = OpExtInst %float %1 Pow %8307 %8309
       %8312 = OpSelect %float %8310 %float_0 %8311
       %8313 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_2
       %8314 = OpLoad %float %8313
       %8315 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_1
       %8316 = OpLoad %float %8315
       %8317 = OpExtInst %float %1 Fma %8312 %8314 %8316
       %8318 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_97 %int_0
       %8319 = OpLoad %float %8318
       %8320 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_96 %int_3
       %8321 = OpLoad %float %8320
       %8322 = OpExtInst %float %1 FMix %8319 %8321 %8317
       %8323 = OpCompositeConstruct %v3float %8322 %8322 %8322
       %8324 = OpExtInst %v3float %1 FMix %7776 %299 %8323
       %8325 = OpCompositeConstruct %v3float %786 %786 %786
       %8326 = OpExtInst %v3float %1 FMix %8302 %8324 %8325
       %8327 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_97 %int_1
       %8328 = OpLoad %float %8327
       %8329 = OpExtInst %float %1 FMix %8328 %float_0 %786
       %8330 = OpCompositeConstruct %v3float %8329 %8329 %8329
       %8331 = OpExtInst %v3float %1 FMix %8326 %299 %8330
       %8332 = OpExtInst %float %1 Fma %1457 %1666 %1457
       %8333 = OpExtInst %float %1 Fma %8068 %8277 %8068
       %8334 = OpFAdd %float %8332 %8333
       %8335 = OpFMul %float %787 %8334
       %8336 = OpCompositeConstruct %v3float %8335 %8335 %8335
       %8337 = OpExtInst %v3float %1 Fma %8336 %634 %654
       %8338 = OpDPdx %v3float %604
       %8339 = OpVectorTimesScalar %v3float %8338 %float_2097152
       %8340 = OpDPdx %v3float %8337
       %8341 = OpFAdd %v3float %8339 %8340
       %8342 = OpDPdy %v3float %604
       %8343 = OpVectorTimesScalar %v3float %8342 %float_2097152
       %8344 = OpDPdy %v3float %8337
       %8345 = OpFAdd %v3float %8343 %8344
       %8346 = OpExtInst %v3float %1 Cross %8341 %8345
       %8347 = OpExtInst %v3float %1 Normalize %8346
       %8348 = OpFSub %v3float %8347 %7770
       %8349 = OpFAdd %v3float %8348 %634
       %8350 = OpCompositeConstruct %v3float %1457 %1457 %1457
       %8351 = OpExtInst %v3float %1 FMix %8331 %8349 %8350
       %8352 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_97 %int_2
       %8353 = OpLoad %float %8352
       %8354 = OpExtInst %float %1 FMix %8353 %float_1 %8282
       %8355 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_1
       %8356 = OpLoad %float %8355
       %8357 = OpExtInst %float %1 Pow %8307 %8356
       %8358 = OpSelect %float %8310 %float_0 %8357
       %8359 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_3
       %8360 = OpLoad %float %8359
       %8361 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_104 %int_2
       %8362 = OpLoad %float %8361
       %8363 = OpExtInst %float %1 Fma %8358 %8360 %8362
       %8364 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_0
       %8365 = OpLoad %float %8364
       %8366 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_103 %int_3
       %8367 = OpLoad %float %8366
       %8368 = OpExtInst %float %1 FMix %8365 %8367 %8363
       %8369 = OpExtInst %float %1 FMix %8368 %float_1 %8282
       %8370 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_1
       %8371 = OpLoad %float %8370
       %8372 = OpExtInst %float %1 FMix %float_0 %8371 %8282
       %8373 = OpCompositeConstruct %v3float %8372 %8372 %8372
       %8374 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_107
       %8375 = OpLoad %v4float %8374
       %8376 = OpVectorShuffle %v3float %8375 %8375 0 1 2
       %8377 = OpAccessChain %_ptr_Uniform_v4float %Material %int_0 %int_106
       %8378 = OpLoad %v4float %8377
       %8379 = OpVectorShuffle %v3float %8378 %8378 0 1 2
       %8380 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_105 %int_2
       %8381 = OpLoad %float %8380
       %8382 = OpCompositeConstruct %v3float %8381 %8381 %8381
       %8383 = OpFAdd %v3float %8376 %8379
       %8384 = OpFDiv %v3float %8376 %8383
       %8385 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_107 %int_3
       %8386 = OpLoad %float %8385
       %8387 = OpAccessChain %_ptr_Uniform_float %Material %int_0 %int_108 %int_0
       %8388 = OpLoad %float %8387
       %8389 = OpFSub %float %709 %float_0_333299994
       %8390 = OpFOrdLessThan %bool %8389 %float_0
               OpSelectionMerge %8391 None
               OpBranchConditional %8390 %8392 %8391
       %8392 = OpLabel
               OpKill
       %8391 = OpLabel
       %8393 = OpAccessChain %_ptr_Uniform_uint %View %uint_20
       %8394 = OpLoad %uint %8393
       %8395 = OpConvertUToF %float %8394
       %8396 = OpVectorTimesScalar %v2float %475 %8395
       %8397 = OpFAdd %v2float %635 %8396
       %8398 = OpDot %float %8397 %476
       %8399 = OpExtInst %float %1 Fract %8398
       %8400 = OpFMul %float %float_52_9829178 %8399
       %8401 = OpExtInst %float %1 Fract %8400
       %8402 = OpIMul %uint %592 %uint_41
       %8403 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %8402
       %8404 = OpLoad %v4float %8403
       %8405 = OpCompositeExtract %float %8404 0
       %8406 = OpBitcast %uint %8405
       %8407 = OpBitwiseAnd %uint %8406 %uint_512
       %8408 = OpINotEqual %bool %8407 %uint_0
       %8409 = OpSelect %uint %8408 %uint_32 %uint_0
       %8410 = OpBitwiseOr %uint %uint_1 %8409
       %8411 = OpLoad %v4float %8403
       %8412 = OpCompositeExtract %float %8411 0
       %8413 = OpBitcast %uint %8412
       %8414 = OpBitwiseAnd %uint %8413 %uint_256
       %8415 = OpINotEqual %bool %8414 %uint_0
       %8416 = OpSelect %uint %8415 %uint_64 %uint_0
       %8417 = OpBitwiseOr %uint %8410 %8416
       %8418 = OpBitwiseAnd %uint %8417 %uint_4294967288
       %8419 = OpBitwiseOr %uint %8418 %uint_4
       %8420 = OpVectorShuffle %v3float %8373 %468 0 1 2
       %8421 = OpExtInst %v3float %1 FClamp %8420 %108 %134
       %8422 = OpVectorShuffle %v3float %622 %622 3 3 3
       %8423 = OpVectorShuffle %v3float %622 %622 0 1 2
       %8424 = OpExtInst %v3float %1 Fma %8421 %8422 %8423
       %8425 = OpExtInst %float %1 FClamp %8369 %float_0 %float_1
       %8426 = OpCompositeExtract %float %624 3
       %8427 = OpCompositeExtract %float %624 0
       %8428 = OpExtInst %float %1 Fma %8425 %8426 %8427
       %8429 = OpCompositeInsert %v4float %8428 %554 1
       %8430 = OpCompositeExtract %float %626 1
       %8431 = OpCompositeExtract %float %626 0
       %8432 = OpExtInst %float %1 Fma %8287 %8430 %8431
       %8433 = OpAccessChain %_ptr_Uniform_float %View %uint_40
       %8434 = OpLoad %float %8433
       %8435 = OpExtInst %float %1 NMax %8434 %8432
       %8436 = OpExtInst %float %1 FClamp %8435 %float_0 %float_1
       %8437 = OpCompositeInsert %v4float %8436 %8429 2
       %8438 = OpExtInst %float %1 FClamp %8354 %float_0 %float_1
       %8439 = OpCompositeInsert %v4float %8438 %8437 3
       %8440 = OpVectorShuffle %v3float %8384 %468 0 1 2
       %8441 = OpExtInst %v3float %1 FClamp %8440 %108 %134
       %8442 = OpVectorShuffle %v4float %468 %8441 4 5 6 3
       %8443 = OpVectorShuffle %v3float %8383 %468 0 1 2
       %8444 = OpExtInst %v3float %1 FClamp %8443 %108 %169
       %8445 = OpCompositeInsert %v4float %float_0 %8442 3
       %8446 = OpVectorShuffle %v3float %8382 %468 0 1 2
       %8447 = OpExtInst %v3float %1 FClamp %8446 %108 %169
       %8448 = OpVectorShuffle %v3float %8424 %468 0 1 2
       %8449 = OpExtInst %v3float %1 Normalize %8351
       %8450 = OpDot %float %8449 %8449
       %8451 = OpBitcast %uint %8450
       %8452 = OpBitwiseAnd %uint %8451 %uint_2139095040
       %8453 = OpINotEqual %bool %8452 %uint_2139095040
       %8454 = OpLogicalNot %bool %8453
               OpSelectionMerge %8455 DontFlatten
               OpBranchConditional %8454 %8456 %8455
       %8456 = OpLabel
       %8457 = OpExtInst %v3float %1 Normalize %634
               OpBranch %8455
       %8455 = OpLabel
       %8458 = OpPhi %v3float %8351 %8391 %8457 %8456
       %8459 = OpPhi %v3float %8449 %8391 %8457 %8456
       %8460 = OpFSub %float %float_1 %8438
       %8461 = OpVectorTimesScalar %v3float %604 %float_2097152
       %8462 = OpFAdd %v3float %8461 %654
       %8463 = OpAccessChain %_ptr_Uniform_v3float %View %uint_35
       %8464 = OpLoad %v3float %8463
       %8465 = OpAccessChain %_ptr_Uniform_v3float %View %uint_36
       %8466 = OpLoad %v3float %8465
       %8467 = OpExtInst %v3float %1 Fma %8462 %8464 %8466
       %8468 = OpExtInst %v3float %1 FClamp %8467 %108 %172
       %8469 = OpAccessChain %_ptr_Uniform_v3float %View %uint_37
       %8470 = OpLoad %v3float %8469
       %8471 = OpFMul %v3float %8468 %8470
       %8472 = OpCompositeExtract %float %8471 0
       %8473 = OpCompositeExtract %float %8471 1
       %8474 = OpCompositeExtract %float %8471 2
       %8475 = OpConvertFToS %int %8472
       %8476 = OpConvertFToS %int %8473
       %8477 = OpConvertFToS %int %8474
       %8478 = OpCompositeConstruct %v4int %8475 %8476 %8477 %int_0
       %8479 = OpVectorShuffle %v3int %8478 %8478 0 1 2
       %8480 = OpLoad %type_3d_image %View_VolumetricLightmapIndirectionTexture
       %8481 = OpImageFetch %v4uint %8480 %8479 Lod %int_0
       %8482 = OpConvertUToF %v4float %8481
       %8483 = OpAccessChain %_ptr_Uniform_float %View %uint_38
       %8484 = OpLoad %float %8483
       %8485 = OpFAdd %float %8484 %float_1
       %8486 = OpVectorShuffle %v3float %8482 %8482 0 1 2
       %8487 = OpVectorTimesScalar %v3float %8486 %8485
       %8488 = OpCompositeExtract %float %8482 3
       %8489 = OpCompositeConstruct %v3float %8488 %8488 %8488
       %8490 = OpFDiv %v3float %8471 %8489
       %8491 = OpExtInst %v3float %1 Fract %8490
       %8492 = OpVectorTimesScalar %v3float %8491 %8484
       %8493 = OpFAdd %v3float %8487 %8492
       %8494 = OpFAdd %v3float %8493 %143
       %8495 = OpAccessChain %_ptr_Uniform_v3float %View %uint_39
       %8496 = OpLoad %v3float %8495
       %8497 = OpFMul %v3float %8494 %8496
       %8498 = OpLoad %v4float %8403
       %8499 = OpCompositeExtract %float %8498 0
       %8500 = OpBitcast %uint %8499
       %8501 = OpBitwiseAnd %uint %8500 %uint_4
       %8502 = OpINotEqual %bool %8501 %uint_0
               OpSelectionMerge %8503 DontFlatten
               OpBranchConditional %8502 %8504 %8503
       %8504 = OpLabel
       %8505 = OpLoad %type_3d_image_0 %View_DirectionalLightShadowingBrickTexture
       %8506 = OpLoad %type_sampler %View_SharedBilinearClampedSampler
       %8507 = OpSampledImage %type_sampled_image_0 %8505 %8506
       %8508 = OpImageSampleExplicitLod %v4float %8507 %8497 Lod %float_0
       %8509 = OpCompositeExtract %float %8508 0
               OpBranch %8503
       %8503 = OpLabel
       %8510 = OpPhi %float %float_1 %8455 %8509 %8504
       %8511 = OpCompositeConstruct %v4float %8510 %float_1 %float_1 %float_1
       %8512 = OpFOrdEqual %v4bool %8511 %104
       %8513 = OpAll %bool %8512
       %8514 = OpFOrdEqual %v4bool %8511 %124
       %8515 = OpAll %bool %8514
       %8516 = OpLogicalNot %bool %8513
       %8517 = OpLogicalNot %bool %8515
       %8518 = OpLogicalAnd %bool %8516 %8517
               OpSelectionMerge %8519 None
               OpBranchConditional %8518 %8520 %8521
       %8521 = OpLabel
               OpSelectionMerge %8522 None
               OpBranchConditional %8513 %8523 %8524
       %8524 = OpLabel
               OpSelectionMerge %8525 None
               OpBranchConditional %8515 %8526 %8525
       %8526 = OpLabel
       %8527 = OpBitwiseOr %uint %8419 %uint_0
       %8528 = OpBitwiseOr %uint %8527 %uint_0
               OpBranch %8525
       %8525 = OpLabel
       %8529 = OpPhi %uint %8419 %8524 %8528 %8526
               OpBranch %8522
       %8523 = OpLabel
       %8530 = OpBitwiseOr %uint %8419 %uint_0
       %8531 = OpBitwiseOr %uint %8530 %uint_16
               OpBranch %8522
       %8522 = OpLabel
       %8532 = OpPhi %uint %8529 %8525 %8531 %8523
               OpBranch %8519
       %8520 = OpLabel
       %8533 = OpBitwiseOr %uint %8419 %uint_8
               OpBranch %8519
       %8519 = OpLabel
       %8534 = OpPhi %uint %8532 %8522 %8533 %8520
       %8535 = OpFMul %float %float_0_0799999982 %8428
       %8536 = OpCompositeConstruct %v3float %8535 %8535 %8535
       %8537 = OpAccessChain %_ptr_Uniform_float %View %uint_15 %int_3
       %8538 = OpLoad %float %8537
       %8539 = OpVectorTimesScalar %v3float %8448 %8538
       %8540 = OpFAdd %v3float %8539 %8423
       %8541 = OpAccessChain %_ptr_Uniform_float %View %uint_16 %int_3
       %8542 = OpLoad %float %8541
       %8543 = OpVectorTimesScalar %v3float %8536 %8542
       %8544 = OpVectorShuffle %v3float %624 %624 0 1 2
       %8545 = OpFAdd %v3float %8543 %8544
       %8546 = OpAccessChain %_ptr_Uniform_float %View %uint_25
       %8547 = OpLoad %float %8546
       %8548 = OpFOrdNotEqual %bool %8547 %float_0
               OpSelectionMerge %8549 None
               OpBranchConditional %8548 %8550 %8549
       %8550 = OpLabel
       %8551 = OpVectorTimesScalar %v3float %8545 %float_0_449999988
       %8552 = OpFAdd %v3float %8540 %8551
               OpBranch %8549
       %8549 = OpLabel
       %8553 = OpPhi %v3float %8540 %8519 %8552 %8550
       %8554 = OpCompositeConstruct %v3bool %8548 %8548 %8548
       %8555 = OpSelect %v3float %8554 %108 %8545
       %8556 = OpLoad %type_3d_image_0 %View_VolumetricLightmapBrickAmbientVector
       %8557 = OpLoad %type_sampler %View_SharedBilinearClampedSampler
       %8558 = OpSampledImage %type_sampled_image_0 %8556 %8557
       %8559 = OpImageSampleExplicitLod %v4float %8558 %8497 Lod %float_0
       %8560 = OpLoad %type_3d_image_0 %View_VolumetricLightmapBrickSHCoefficients0
       %8561 = OpSampledImage %type_sampled_image_0 %8560 %8557
       %8562 = OpImageSampleExplicitLod %v4float %8561 %8497 Lod %float_0
       %8563 = OpVectorTimesScalar %v4float %8562 %float_2
       %8564 = OpFSub %v4float %8563 %124
       %8565 = OpLoad %type_3d_image_0 %View_VolumetricLightmapBrickSHCoefficients2
       %8566 = OpSampledImage %type_sampled_image_0 %8565 %8557
       %8567 = OpImageSampleExplicitLod %v4float %8566 %8497 Lod %float_0
       %8568 = OpVectorTimesScalar %v4float %8567 %float_2
       %8569 = OpFSub %v4float %8568 %124
       %8570 = OpLoad %type_3d_image_0 %View_VolumetricLightmapBrickSHCoefficients4
       %8571 = OpSampledImage %type_sampled_image_0 %8570 %8557
       %8572 = OpImageSampleExplicitLod %v4float %8571 %8497 Lod %float_0
       %8573 = OpVectorTimesScalar %v4float %8572 %float_2
       %8574 = OpFSub %v4float %8573 %124
       %8575 = OpCompositeExtract %float %8559 0
       %8576 = OpVectorTimesScalar %v4float %8564 %8575
       %8577 = OpFMul %v4float %8576 %340
       %8578 = OpCompositeExtract %float %8559 1
       %8579 = OpVectorTimesScalar %v4float %8569 %8578
       %8580 = OpFMul %v4float %8579 %340
       %8581 = OpCompositeExtract %float %8559 2
       %8582 = OpVectorTimesScalar %v4float %8574 %8581
       %8583 = OpFMul %v4float %8582 %340
       %8584 = OpLoad %type_3d_image_0 %View_VolumetricLightmapBrickSHCoefficients1
       %8585 = OpSampledImage %type_sampled_image_0 %8584 %8557
       %8586 = OpImageSampleExplicitLod %v4float %8585 %8497 Lod %float_0
       %8587 = OpVectorTimesScalar %v4float %8586 %float_2
       %8588 = OpFSub %v4float %8587 %124
       %8589 = OpLoad %type_3d_image_0 %View_VolumetricLightmapBrickSHCoefficients3
       %8590 = OpSampledImage %type_sampled_image_0 %8589 %8557
       %8591 = OpImageSampleExplicitLod %v4float %8590 %8497 Lod %float_0
       %8592 = OpVectorTimesScalar %v4float %8591 %float_2
       %8593 = OpFSub %v4float %8592 %124
       %8594 = OpLoad %type_3d_image_0 %View_VolumetricLightmapBrickSHCoefficients5
       %8595 = OpSampledImage %type_sampled_image_0 %8594 %8557
       %8596 = OpImageSampleExplicitLod %v4float %8595 %8497 Lod %float_0
       %8597 = OpVectorTimesScalar %v4float %8596 %float_2
       %8598 = OpFSub %v4float %8597 %124
       %8599 = OpVectorTimesScalar %v4float %8588 %8575
       %8600 = OpFMul %v4float %8599 %313
       %8601 = OpVectorTimesScalar %v4float %8593 %8578
       %8602 = OpFMul %v4float %8601 %313
       %8603 = OpVectorTimesScalar %v4float %8598 %8581
       %8604 = OpFMul %v4float %8603 %313
       %8605 = OpCompositeExtract %float %8577 0
       %8606 = OpCompositeExtract %float %8577 1
       %8607 = OpCompositeExtract %float %8577 2
       %8608 = OpCompositeConstruct %v4float %8575 %8605 %8606 %8607
       %8609 = OpCompositeExtract %float %8577 3
       %8610 = OpCompositeExtract %float %8600 0
       %8611 = OpCompositeExtract %float %8600 1
       %8612 = OpCompositeExtract %float %8600 2
       %8613 = OpCompositeConstruct %v4float %8609 %8610 %8611 %8612
       %8614 = OpCompositeExtract %float %8600 3
       %8615 = OpCompositeExtract %float %8580 0
       %8616 = OpCompositeExtract %float %8580 1
       %8617 = OpCompositeExtract %float %8580 2
       %8618 = OpCompositeConstruct %v4float %8578 %8615 %8616 %8617
       %8619 = OpCompositeExtract %float %8580 3
       %8620 = OpCompositeExtract %float %8602 0
       %8621 = OpCompositeExtract %float %8602 1
       %8622 = OpCompositeExtract %float %8602 2
       %8623 = OpCompositeConstruct %v4float %8619 %8620 %8621 %8622
       %8624 = OpCompositeExtract %float %8602 3
       %8625 = OpCompositeExtract %float %8583 0
       %8626 = OpCompositeExtract %float %8583 1
       %8627 = OpCompositeExtract %float %8583 2
       %8628 = OpCompositeConstruct %v4float %8581 %8625 %8626 %8627
       %8629 = OpCompositeExtract %float %8583 3
       %8630 = OpCompositeExtract %float %8604 0
       %8631 = OpCompositeExtract %float %8604 1
       %8632 = OpCompositeExtract %float %8604 2
       %8633 = OpCompositeConstruct %v4float %8629 %8630 %8631 %8632
       %8634 = OpCompositeExtract %float %8604 3
       %8635 = OpCompositeExtract %float %8459 1
       %8636 = OpFMul %float %float_n0_488602996 %8635
       %8637 = OpCompositeInsert %v4float %8636 %562 1
       %8638 = OpCompositeExtract %float %8459 2
       %8639 = OpFMul %float %float_0_488602996 %8638
       %8640 = OpCompositeInsert %v4float %8639 %8637 2
       %8641 = OpCompositeExtract %float %8459 0
       %8642 = OpFMul %float %float_n0_488602996 %8641
       %8643 = OpCompositeInsert %v4float %8642 %8640 3
       %8644 = OpFMul %v3float %8459 %8459
       %8645 = OpFMul %float %float_1_09254801 %8641
       %8646 = OpFMul %float %8645 %8635
       %8647 = OpCompositeInsert %v4float %8646 %551 0
       %8648 = OpFMul %float %float_n1_09254801 %8635
       %8649 = OpFMul %float %8648 %8638
       %8650 = OpCompositeInsert %v4float %8649 %8647 1
       %8651 = OpCompositeExtract %float %8644 2
       %8652 = OpExtInst %float %1 Fma %float_3 %8651 %float_n1
       %8653 = OpFMul %float %float_0_315391988 %8652
       %8654 = OpCompositeInsert %v4float %8653 %8650 2
       %8655 = OpFMul %float %float_n1_09254801 %8641
       %8656 = OpFMul %float %8655 %8638
       %8657 = OpCompositeInsert %v4float %8656 %8654 3
       %8658 = OpCompositeExtract %float %8644 0
       %8659 = OpCompositeExtract %float %8644 1
       %8660 = OpFSub %float %8658 %8659
       %8661 = OpCompositeInsert %v4float %float_0_886227548 %8643 0
       %8662 = OpVectorShuffle %v3float %8661 %8661 1 2 3
       %8663 = OpVectorTimesScalar %v3float %8662 %float_2_09439516
       %8664 = OpVectorShuffle %v4float %8661 %8663 0 4 5 6
       %8665 = OpVectorTimesScalar %v4float %8657 %float_0_785398185
       %8666 = OpFMul %float %8660 %float_0_429042608
       %8667 = OpDot %float %8608 %8664
       %8668 = OpDot %float %8613 %8665
       %8669 = OpFAdd %float %8667 %8668
       %8670 = OpExtInst %float %1 Fma %8614 %8666 %8669
       %8671 = OpCompositeInsert %v3float %8670 %563 0
       %8672 = OpDot %float %8618 %8664
       %8673 = OpDot %float %8623 %8665
       %8674 = OpFAdd %float %8672 %8673
       %8675 = OpExtInst %float %1 Fma %8624 %8666 %8674
       %8676 = OpCompositeInsert %v3float %8675 %8671 1
       %8677 = OpDot %float %8628 %8664
       %8678 = OpDot %float %8633 %8665
       %8679 = OpFAdd %float %8677 %8678
       %8680 = OpExtInst %float %1 Fma %8634 %8666 %8679
       %8681 = OpCompositeInsert %v3float %8680 %8676 2
       %8682 = OpExtInst %v3float %1 NMax %108 %8681
       %8683 = OpFMul %v3float %8682 %509
       %8684 = OpAccessChain %_ptr_Uniform_v3float %View %uint_24
       %8685 = OpLoad %v3float %8684
       %8686 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_17
       %8687 = OpLoad %uint %8686
       %8688 = OpUGreaterThan %bool %8687 %uint_0
               OpSelectionMerge %8689 None
               OpBranchConditional %8688 %8690 %8689
       %8690 = OpLabel
       %8691 = OpAccessChain %_ptr_Uniform_float %View %uint_26
       %8692 = OpLoad %float %8691
       %8693 = OpFOrdNotEqual %bool %8692 %float_0
               OpSelectionMerge %8694 DontFlatten
               OpBranchConditional %8693 %8695 %8694
       %8695 = OpLabel
       %8696 = OpLoad %type_3d_image_0 %View_SkyBentNormalBrickTexture
       %8697 = OpSampledImage %type_sampled_image_0 %8696 %8557
       %8698 = OpImageSampleExplicitLod %v4float %8697 %8497 Lod %float_0
       %8699 = OpVectorShuffle %v3float %8698 %8698 0 1 2
       %8700 = OpVectorTimesScalar %v3float %8699 %float_2
       %8701 = OpFSub %v3float %8700 %134
       %8702 = OpExtInst %float %1 Length %8701
       %8703 = OpExtInst %float %1 NMax %8702 %float_9_99999975en05
       %8704 = OpCompositeConstruct %v3float %8703 %8703 %8703
       %8705 = OpFDiv %v3float %8701 %8704
       %8706 = OpFSub %float %float_1 %8702
       %8707 = OpFSub %float %8702 %float_1
       %8708 = OpExtInst %float %1 Fma %8707 %8706 %float_1
       %8709 = OpCompositeConstruct %v3float %8708 %8708 %8708
       %8710 = OpExtInst %v3float %1 FMix %8705 %8459 %8709
       %8711 = OpDot %float %8705 %8459
       %8712 = OpExtInst %float %1 FClamp %8711 %float_0 %float_1
       %8713 = OpExtInst %float %1 FMix %8712 %float_1 %8708
               OpBranch %8694
       %8694 = OpLabel
       %8714 = OpPhi %float %float_1 %8690 %8713 %8695
       %8715 = OpPhi %float %float_1 %8690 %8702 %8695
       %8716 = OpPhi %v3float %8459 %8690 %8710 %8695
       %8717 = OpCompositeExtract %float %8716 0
       %8718 = OpCompositeExtract %float %8716 1
       %8719 = OpCompositeExtract %float %8716 2
       %8720 = OpCompositeConstruct %v4float %8717 %8718 %8719 %float_1
       %8721 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_0
       %8722 = OpLoad %v4float %8721
       %8723 = OpDot %float %8722 %8720
       %8724 = OpCompositeInsert %v3float %8723 %563 0
       %8725 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_1
       %8726 = OpLoad %v4float %8725
       %8727 = OpDot %float %8726 %8720
       %8728 = OpCompositeInsert %v3float %8727 %8724 1
       %8729 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_2
       %8730 = OpLoad %v4float %8729
       %8731 = OpDot %float %8730 %8720
       %8732 = OpCompositeInsert %v3float %8731 %8728 2
       %8733 = OpVectorShuffle %v4float %8720 %8720 0 1 2 2
       %8734 = OpVectorShuffle %v4float %8720 %8720 1 2 2 0
       %8735 = OpFMul %v4float %8733 %8734
       %8736 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_3
       %8737 = OpLoad %v4float %8736
       %8738 = OpDot %float %8737 %8735
       %8739 = OpCompositeInsert %v3float %8738 %563 0
       %8740 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_4
       %8741 = OpLoad %v4float %8740
       %8742 = OpDot %float %8741 %8735
       %8743 = OpCompositeInsert %v3float %8742 %8739 1
       %8744 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_5
       %8745 = OpLoad %v4float %8744
       %8746 = OpDot %float %8745 %8735
       %8747 = OpCompositeInsert %v3float %8746 %8743 2
       %8748 = OpFMul %float %8718 %8718
       %8749 = OpFNegate %float %8748
       %8750 = OpExtInst %float %1 Fma %8717 %8717 %8749
       %8751 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_6
       %8752 = OpLoad %v4float %8751
       %8753 = OpVectorShuffle %v3float %8752 %8752 0 1 2
       %8754 = OpVectorTimesScalar %v3float %8753 %8750
       %8755 = OpFAdd %v3float %8732 %8747
       %8756 = OpFAdd %v3float %8755 %8754
       %8757 = OpExtInst %v3float %1 NMax %108 %8756
       %8758 = OpVectorShuffle %v3float %632 %632 0 1 2
       %8759 = OpFMul %v3float %8757 %8758
       %8760 = OpFMul %float %8715 %8714
       %8761 = OpVectorTimesScalar %v3float %8759 %8760
               OpBranch %8689
       %8689 = OpLabel
       %8762 = OpPhi %v3float %108 %8549 %8761 %8694
       %8763 = OpExtInst %v3float %1 Fma %8683 %8685 %8762
       %8764 = OpFMul %v3float %8763 %8553
       %8765 = OpVectorTimesScalar %v3float %8448 %float_2_04040003
       %8766 = OpFSub %v3float %8765 %182
       %8767 = OpVectorTimesScalar %v3float %8448 %float_n4_79510021
       %8768 = OpFAdd %v3float %8767 %185
       %8769 = OpVectorTimesScalar %v3float %8448 %float_2_75519991
       %8770 = OpFAdd %v3float %8769 %188
       %8771 = OpVectorTimesScalar %v3float %8766 %float_1
       %8772 = OpFAdd %v3float %8771 %8768
       %8773 = OpVectorTimesScalar %v3float %8772 %float_1
       %8774 = OpFAdd %v3float %8773 %8770
       %8775 = OpVectorTimesScalar %v3float %8774 %float_1
       %8776 = OpExtInst %v3float %1 NMax %134 %8775
       %8777 = OpFMul %v3float %8764 %8776
       %8778 = OpVectorTimesScalar %v3float %8553 %8438
       %8779 = OpVectorTimesScalar %v3float %8777 %8438
       %8780 = OpAccessChain %_ptr_Uniform_v4float %View %uint_11
       %8781 = OpLoad %v4float %8780
       %8782 = OpVectorShuffle %v2float %8781 %8781 2 3
       %8783 = OpFMul %v2float %637 %8782
       %8784 = OpConvertFToU %v2uint %8783
       %8785 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_3
       %8786 = OpLoad %uint %8785
       %8787 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_4
       %8788 = OpLoad %v3float %8787
       %8789 = OpAccessChain %_ptr_Uniform_v3int %OpaqueBasePass %uint_2
       %8790 = OpLoad %v3int %8789
       %8791 = OpCompositeExtract %float %8788 0
       %8792 = OpCompositeExtract %float %8788 1
       %8793 = OpExtInst %float %1 Fma %596 %8791 %8792
       %8794 = OpExtInst %float %1 Log2 %8793
       %8795 = OpCompositeExtract %float %8788 2
       %8796 = OpFMul %float %8794 %8795
       %8797 = OpExtInst %float %1 NMax %float_0 %8796
       %8798 = OpConvertFToU %uint %8797
       %8799 = OpCompositeExtract %int %8790 2
       %8800 = OpISub %int %8799 %int_1
       %8801 = OpBitcast %uint %8800
       %8802 = OpExtInst %uint %1 UMin %8798 %8801
       %8803 = OpCompositeConstruct %v2uint %8786 %8786
       %8804 = OpBitwiseAnd %v2uint %8803 %315
       %8805 = OpShiftRightLogical %v2uint %8784 %8804
       %8806 = OpCompositeExtract %uint %8805 0
       %8807 = OpCompositeExtract %uint %8805 1
       %8808 = OpCompositeExtract %int %8790 1
       %8809 = OpBitcast %uint %8808
       %8810 = OpIMul %uint %8802 %8809
       %8811 = OpIAdd %uint %8810 %8807
       %8812 = OpCompositeExtract %int %8790 0
       %8813 = OpBitcast %uint %8812
       %8814 = OpIMul %uint %8811 %8813
       %8815 = OpIAdd %uint %8814 %8806
       %8816 = OpAccessChain %_ptr_Uniform_uint %SingleLayerWater %uint_3
       %8817 = OpLoad %uint %8816
       %8818 = OpINotEqual %bool %8817 %uint_0
       %8819 = OpAccessChain %_ptr_Uniform_uint %SingleLayerWater %uint_4
       %8820 = OpLoad %uint %8819
       %8821 = OpINotEqual %bool %8820 %uint_0
       %8822 = OpLogicalAnd %bool %true %8821
       %8823 = OpExtInst %v2float %1 Trunc %131
       %8824 = OpConvertFToS %v2int %8823
       %8825 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_19
       %8826 = OpLoad %int %8825
       %8827 = OpINotEqual %bool %8826 %int_0
               OpSelectionMerge %8828 DontFlatten
               OpBranchConditional %8827 %8829 %8828
       %8829 = OpLabel
       %8830 = OpCompositeExtract %int %8824 0
       %8831 = OpCompositeExtract %int %8824 1
       %8832 = OpCompositeConstruct %v3int %8830 %8831 %int_0
       %8833 = OpVectorShuffle %v2int %8832 %8832 0 1
       %8834 = OpLoad %type_2d_image %OpaqueBasePass_ForwardScreenSpaceShadowMaskTexture
       %8835 = OpImageFetch %v4float %8834 %8833 Lod %int_0
               OpBranch %8828
       %8828 = OpLabel
       %8836 = OpPhi %v4float %124 %8689 %8835 %8829
       %8837 = OpFMul %v4float %8836 %8836
       %8838 = OpLoad %v4float %8403
       %8839 = OpCompositeExtract %float %8838 0
       %8840 = OpBitcast %uint %8839
       %8841 = OpBitwiseAnd %uint %8840 %uint_2048
       %8842 = OpINotEqual %bool %8841 %uint_0
       %8843 = OpSelect %uint %8842 %uint_1 %uint_0
       %8844 = OpBitwiseAnd %uint %8840 %uint_4096
       %8845 = OpINotEqual %bool %8844 %uint_0
       %8846 = OpSelect %uint %8845 %uint_1 %uint_0
       %8847 = OpBitwiseAnd %uint %8840 %uint_8192
       %8848 = OpINotEqual %bool %8847 %uint_0
       %8849 = OpSelect %uint %8848 %uint_1 %uint_0
       %8850 = OpShiftLeftLogical %uint %8846 %uint_1
       %8851 = OpBitwiseOr %uint %8843 %8850
       %8852 = OpShiftLeftLogical %uint %8849 %uint_2
       %8853 = OpBitwiseOr %uint %8851 %8852
       %8854 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_1
       %8855 = OpLoad %uint %8854
       %8856 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_8
       %8857 = OpLoad %uint %8856
       %8858 = OpAccessChain %_ptr_Uniform_v2float %OpaqueBasePass %uint_9
       %8859 = OpLoad %v2float %8858
       %8860 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_7
       %8861 = OpLoad %v3float %8860
       %8862 = OpAccessChain %_ptr_Uniform_v3float %OpaqueBasePass %uint_5
       %8863 = OpLoad %v3float %8862
       %8864 = OpAccessChain %_ptr_Uniform_float %OpaqueBasePass %uint_6
       %8865 = OpLoad %float %8864
       %8866 = OpINotEqual %bool %8855 %uint_0
               OpSelectionMerge %8867 DontFlatten
               OpBranchConditional %8866 %8868 %8867
       %8868 = OpLabel
       %8869 = OpBitwiseAnd %uint %8857 %uint_2
       %8870 = OpShiftRightLogical %uint %8869 %uint_1
       %8871 = OpConvertUToF %float %8870
       %8872 = OpBitwiseAnd %uint %8857 %uint_4
       %8873 = OpShiftRightLogical %uint %8872 %uint_2
       %8874 = OpConvertUToF %float %8873
       %8875 = OpBitwiseAnd %uint %8857 %uint_8
       %8876 = OpShiftRightLogical %uint %8875 %uint_3
       %8877 = OpConvertUToF %float %8876
       %8878 = OpCompositeConstruct %v4float %560 %8871 %8874 %8877
       %8879 = OpShiftRightLogical %uint %8857 %uint_8
       %8880 = OpBitwiseAnd %uint %8879 %uint_7
       %8881 = OpCompositeInsert %v4float %float_1 %8878 0
       %8882 = OpCompositeInsert %v4float %float_1 %8511 0
       %8883 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_10
       %8884 = OpLoad %uint %8883
       %8885 = OpUGreaterThan %bool %8884 %uint_0
               OpSelectionMerge %8886 None
               OpBranchConditional %8885 %8887 %8886
       %8887 = OpLabel
       %8888 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_12
       %8889 = OpLoad %v4float %8888
       %8890 = OpCompositeConstruct %v4float %657 %657 %657 %657
       %8891 = OpFOrdGreaterThanEqual %v4bool %8890 %8889
       %8892 = OpSelect %v4float %8891 %124 %104
       %8893 = OpCompositeExtract %float %8892 0
       %8894 = OpCompositeExtract %float %8892 1
       %8895 = OpFAdd %float %8893 %8894
       %8896 = OpCompositeExtract %float %8892 2
       %8897 = OpFAdd %float %8895 %8896
       %8898 = OpCompositeExtract %float %8892 3
       %8899 = OpFAdd %float %8897 %8898
       %8900 = OpConvertFToU %uint %8899
       %8901 = OpULessThan %bool %8900 %8884
               OpSelectionMerge %8902 None
               OpBranchConditional %8901 %8903 %8902
       %8903 = OpLabel
       %8904 = OpCompositeExtract %float %653 0
       %8905 = OpCompositeExtract %float %653 1
       %8906 = OpCompositeExtract %float %653 2
       %8907 = OpCompositeConstruct %v4float %8904 %8905 %8906 %float_1
       %8908 = OpAccessChain %_ptr_Uniform_mat4v4float %OpaqueBasePass %uint_13 %8900
       %8909 = OpLoad %mat4v4float %8908
       %8910 = OpMatrixTimesVector %v4float %8909 %8907
       %8911 = OpVectorShuffle %v2float %8910 %8910 0 1
       %8912 = OpCompositeExtract %float %8910 3
       %8913 = OpCompositeConstruct %v2float %8912 %8912
       %8914 = OpFDiv %v2float %8911 %8913
       %8915 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_14 %8900
       %8916 = OpLoad %v4float %8915
       %8917 = OpVectorShuffle %v2float %8916 %8916 0 1
       %8918 = OpFOrdGreaterThanEqual %v2bool %8914 %8917
       %8919 = OpVectorShuffle %v2float %8916 %8916 2 3
       %8920 = OpFOrdLessThanEqual %v2bool %8914 %8919
       %8921 = OpCompositeExtract %bool %8918 0
       %8922 = OpCompositeExtract %bool %8920 0
       %8923 = OpLogicalAnd %bool %8921 %8922
       %8924 = OpCompositeExtract %bool %8918 1
       %8925 = OpCompositeExtract %bool %8920 1
       %8926 = OpLogicalAnd %bool %8924 %8925
       %8927 = OpCompositeConstruct %v2bool %8923 %8926
       %8928 = OpAll %bool %8927
               OpSelectionMerge %8929 None
               OpBranchConditional %8928 %8930 %8929
       %8930 = OpLabel
       %8931 = OpLoad %type_2d_image %OpaqueBasePass_Shared_Forward_DirectionalLightShadowmapAtlas
       %8932 = OpLoad %type_sampler %OpaqueBasePass_Shared_Forward_ShadowmapSampler
       %8933 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass %uint_15
       %8934 = OpLoad %v4float %8933
       %8935 = OpCompositeExtract %float %8910 2
       %8936 = OpFSub %float %float_1 %8935
       %8937 = OpVectorShuffle %v2float %8934 %8934 0 1
       %8938 = OpExtInst %v2float %1 Fma %8914 %8937 %538
       %8939 = OpExtInst %v2float %1 Fract %8938
       %8940 = OpExtInst %v2float %1 Floor %8938
       %8941 = OpFAdd %v2float %8940 %322
       %8942 = OpVectorShuffle %v2float %8934 %8934 2 3
       %8943 = OpFMul %v2float %8941 %8942
       %8944 = OpSampledImage %type_sampled_image %8931 %8932
       %8945 = OpImageGather %v4float %8944 %8943 %int_0 None
       %8946 = OpExtInst %float %1 Fma %8936 %float_4000 %float_n1
       %8947 = OpVectorTimesScalar %v4float %8945 %float_4000
       %8948 = OpCompositeConstruct %v4float %8946 %8946 %8946 %8946
       %8949 = OpFSub %v4float %8947 %8948
       %8950 = OpExtInst %v4float %1 FClamp %8949 %104 %124
       %8951 = OpVectorShuffle %v2float %8950 %8950 3 0
       %8952 = OpVectorShuffle %v2float %8950 %8950 2 1
       %8953 = OpVectorShuffle %v2float %8939 %8939 0 0
       %8954 = OpExtInst %v2float %1 FMix %8951 %8952 %8953
       %8955 = OpCompositeExtract %float %8954 0
       %8956 = OpCompositeExtract %float %8954 1
       %8957 = OpCompositeExtract %float %8939 1
       %8958 = OpExtInst %float %1 FMix %8955 %8956 %8957
               OpBranch %8929
       %8929 = OpLabel
       %8959 = OpPhi %float %float_1 %8903 %8958 %8930
               OpBranch %8902
       %8902 = OpLabel
       %8960 = OpPhi %float %float_1 %8887 %8959 %8929
               OpBranch %8886
       %8886 = OpLabel
       %8961 = OpPhi %float %float_1 %8868 %8960 %8902
       %8962 = OpLogicalNot %bool %8818
       %8963 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_11
       %8964 = OpLoad %int %8963
       %8965 = OpINotEqual %bool %8964 %int_n1
       %8966 = OpLogicalAnd %bool %8962 %8965
               OpSelectionMerge %8967 DontFlatten
               OpBranchConditional %8966 %8968 %8967
       %8968 = OpLabel
               OpSelectionMerge %8969 None
               OpSwitch %uint_0 %8970
       %8970 = OpLabel
       %8971 = OpExtInst %float %1 NMax %float_0 %float_0
       %8972 = OpBitcast %uint %8964
       %8973 = OpIMul %uint %8972 %uint_336
       %8974 = OpIAdd %uint %8973 %uint_96
       %8975 = OpShiftRightLogical %uint %8974 %uint_2
       %8976 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8975
       %8977 = OpLoad %uint %8976
       %8978 = OpIAdd %uint %8975 %uint_1
       %8979 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8978
       %8980 = OpLoad %uint %8979
       %8981 = OpIAdd %uint %8975 %uint_2
       %8982 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8981
       %8983 = OpLoad %uint %8982
       %8984 = OpIAdd %uint %8975 %uint_3
       %8985 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8984
       %8986 = OpLoad %uint %8985
       %8987 = OpCompositeConstruct %v4uint %8977 %8980 %8983 %8986
       %8988 = OpBitcast %v4float %8987
       %8989 = OpCompositeInsert %mat4v4float %8988 %553 2
       %8990 = OpIAdd %uint %8973 %uint_128
       %8991 = OpShiftRightLogical %uint %8990 %uint_2
       %8992 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8991
       %8993 = OpLoad %uint %8992
       %8994 = OpIAdd %uint %8991 %uint_1
       %8995 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8994
       %8996 = OpLoad %uint %8995
       %8997 = OpIAdd %uint %8991 %uint_2
       %8998 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %8997
       %8999 = OpLoad %uint %8998
       %9000 = OpIAdd %uint %8991 %uint_3
       %9001 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9000
       %9002 = OpLoad %uint %9001
       %9003 = OpCompositeConstruct %v4uint %8993 %8996 %8999 %9002
       %9004 = OpBitcast %v4float %9003
       %9005 = OpCompositeInsert %mat4v4float %9004 %553 0
       %9006 = OpIAdd %uint %8973 %uint_144
       %9007 = OpShiftRightLogical %uint %9006 %uint_2
       %9008 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9007
       %9009 = OpLoad %uint %9008
       %9010 = OpIAdd %uint %9007 %uint_1
       %9011 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9010
       %9012 = OpLoad %uint %9011
       %9013 = OpIAdd %uint %9007 %uint_2
       %9014 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9013
       %9015 = OpLoad %uint %9014
       %9016 = OpIAdd %uint %9007 %uint_3
       %9017 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9016
       %9018 = OpLoad %uint %9017
       %9019 = OpCompositeConstruct %v4uint %9009 %9012 %9015 %9018
       %9020 = OpBitcast %v4float %9019
       %9021 = OpCompositeInsert %mat4v4float %9020 %9005 1
       %9022 = OpIAdd %uint %8973 %uint_160
       %9023 = OpShiftRightLogical %uint %9022 %uint_2
       %9024 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9023
       %9025 = OpLoad %uint %9024
       %9026 = OpIAdd %uint %9023 %uint_1
       %9027 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9026
       %9028 = OpLoad %uint %9027
       %9029 = OpIAdd %uint %9023 %uint_2
       %9030 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9029
       %9031 = OpLoad %uint %9030
       %9032 = OpIAdd %uint %9023 %uint_3
       %9033 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9032
       %9034 = OpLoad %uint %9033
       %9035 = OpCompositeConstruct %v4uint %9025 %9028 %9031 %9034
       %9036 = OpBitcast %v4float %9035
       %9037 = OpCompositeInsert %mat4v4float %9036 %9021 2
       %9038 = OpIAdd %uint %8973 %uint_176
       %9039 = OpShiftRightLogical %uint %9038 %uint_2
       %9040 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9039
       %9041 = OpLoad %uint %9040
       %9042 = OpIAdd %uint %9039 %uint_1
       %9043 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9042
       %9044 = OpLoad %uint %9043
       %9045 = OpIAdd %uint %9039 %uint_2
       %9046 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9045
       %9047 = OpLoad %uint %9046
       %9048 = OpIAdd %uint %9039 %uint_3
       %9049 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9048
       %9050 = OpLoad %uint %9049
       %9051 = OpCompositeConstruct %v4uint %9041 %9044 %9047 %9050
       %9052 = OpBitcast %v4float %9051
       %9053 = OpCompositeInsert %mat4v4float %9052 %9037 3
       %9054 = OpIAdd %uint %8973 %uint_256
       %9055 = OpShiftRightLogical %uint %9054 %uint_2
       %9056 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9055
       %9057 = OpLoad %uint %9056
       %9058 = OpIAdd %uint %9055 %uint_1
       %9059 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9058
       %9060 = OpLoad %uint %9059
       %9061 = OpIAdd %uint %9055 %uint_2
       %9062 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9061
       %9063 = OpLoad %uint %9062
       %9064 = OpCompositeConstruct %v3uint %9057 %9060 %9063
       %9065 = OpBitcast %v3float %9064
       %9066 = OpIAdd %uint %8973 %uint_268
       %9067 = OpShiftRightLogical %uint %9066 %uint_2
       %9068 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9067
       %9069 = OpLoad %uint %9068
       %9070 = OpIAdd %uint %8973 %uint_272
       %9071 = OpShiftRightLogical %uint %9070 %uint_2
       %9072 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9071
       %9073 = OpLoad %uint %9072
       %9074 = OpIAdd %uint %9071 %uint_1
       %9075 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9074
       %9076 = OpLoad %uint %9075
       %9077 = OpIAdd %uint %9071 %uint_2
       %9078 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9077
       %9079 = OpLoad %uint %9078
       %9080 = OpCompositeConstruct %v3uint %9073 %9076 %9079
       %9081 = OpBitcast %v3float %9080
       %9082 = OpIAdd %uint %8973 %uint_288
       %9083 = OpShiftRightLogical %uint %9082 %uint_2
       %9084 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9083
       %9085 = OpLoad %uint %9084
       %9086 = OpIAdd %uint %9083 %uint_1
       %9087 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9086
       %9088 = OpLoad %uint %9087
       %9089 = OpIAdd %uint %9083 %uint_2
       %9090 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9089
       %9091 = OpLoad %uint %9090
       %9092 = OpCompositeConstruct %v3uint %9085 %9088 %9091
       %9093 = OpBitcast %v3float %9092
       %9094 = OpIAdd %uint %8973 %uint_300
       %9095 = OpShiftRightLogical %uint %9094 %uint_2
       %9096 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9095
       %9097 = OpLoad %uint %9096
       %9098 = OpBitcast %float %9097
       %9099 = OpIAdd %uint %8973 %uint_312
       %9100 = OpShiftRightLogical %uint %9099 %uint_2
       %9101 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9100
       %9102 = OpLoad %uint %9101
       %9103 = OpBitcast %int %9102
       %9104 = OpIAdd %uint %8973 %uint_316
       %9105 = OpShiftRightLogical %uint %9104 %uint_2
       %9106 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9105
       %9107 = OpLoad %uint %9106
       %9108 = OpBitcast %int %9107
       %9109 = OpFNegate %v3float %9065
       %9110 = OpFNegate %v3float %9093
       %9111 = OpIEqual %bool %9069 %uint_0
               OpSelectionMerge %9112 None
               OpBranchConditional %9111 %9113 %9114
       %9114 = OpLabel
       %9115 = OpFAdd %v3float %604 %9065
       %9116 = OpFAdd %v3float %654 %9081
       %9117 = OpVectorTimesScalar %v3float %9115 %float_2097152
       %9118 = OpFAdd %v3float %9117 %9116
       %9119 = OpINotEqual %bool %9069 %uint_2
               OpSelectionMerge %9120 None
               OpBranchConditional %9119 %9121 %9120
       %9121 = OpLabel
               OpSelectionMerge %9122 None
               OpSwitch %uint_0 %9123
       %9123 = OpLabel
       %9124 = OpCompositeExtract %float %9118 0
       %9125 = OpExtInst %float %1 FAbs %9124
       %9126 = OpCompositeExtract %float %9118 1
       %9127 = OpExtInst %float %1 FAbs %9126
       %9128 = OpFOrdGreaterThanEqual %bool %9125 %9127
       %9129 = OpCompositeExtract %float %9118 2
       %9130 = OpExtInst %float %1 FAbs %9129
       %9131 = OpFOrdGreaterThanEqual %bool %9125 %9130
       %9132 = OpLogicalAnd %bool %9128 %9131
               OpSelectionMerge %9133 None
               OpBranchConditional %9132 %9134 %9135
       %9135 = OpLabel
       %9136 = OpFOrdGreaterThan %bool %9127 %9130
               OpSelectionMerge %9137 None
               OpBranchConditional %9136 %9138 %9139
       %9139 = OpLabel
       %9140 = OpFOrdGreaterThan %bool %9129 %float_0
       %9141 = OpSelect %uint %9140 %uint_4 %uint_5
               OpBranch %9122
       %9138 = OpLabel
       %9142 = OpFOrdGreaterThan %bool %9126 %float_0
       %9143 = OpSelect %uint %9142 %uint_2 %uint_3
               OpBranch %9122
       %9137 = OpLabel
               OpUnreachable
       %9134 = OpLabel
       %9144 = OpFOrdGreaterThan %bool %9124 %float_0
       %9145 = OpSelect %uint %9144 %uint_0 %uint_1
               OpBranch %9122
       %9133 = OpLabel
               OpUnreachable
       %9122 = OpLabel
       %9146 = OpPhi %uint %9141 %9139 %9143 %9138 %9145 %9134
       %9147 = OpIAdd %uint %8972 %9146
       %9148 = OpBitcast %int %9147
       %9149 = OpBitcast %uint %9148
       %9150 = OpIMul %uint %9149 %uint_336
       %9151 = OpIAdd %uint %9150 %uint_96
       %9152 = OpShiftRightLogical %uint %9151 %uint_2
       %9153 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9152
       %9154 = OpLoad %uint %9153
       %9155 = OpIAdd %uint %9152 %uint_1
       %9156 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9155
       %9157 = OpLoad %uint %9156
       %9158 = OpIAdd %uint %9152 %uint_2
       %9159 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9158
       %9160 = OpLoad %uint %9159
       %9161 = OpIAdd %uint %9152 %uint_3
       %9162 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9161
       %9163 = OpLoad %uint %9162
       %9164 = OpCompositeConstruct %v4uint %9154 %9157 %9160 %9163
       %9165 = OpBitcast %v4float %9164
       %9166 = OpCompositeInsert %mat4v4float %9165 %553 2
       %9167 = OpIAdd %uint %9150 %uint_128
       %9168 = OpShiftRightLogical %uint %9167 %uint_2
       %9169 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9168
       %9170 = OpLoad %uint %9169
       %9171 = OpIAdd %uint %9168 %uint_1
       %9172 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9171
       %9173 = OpLoad %uint %9172
       %9174 = OpIAdd %uint %9168 %uint_2
       %9175 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9174
       %9176 = OpLoad %uint %9175
       %9177 = OpIAdd %uint %9168 %uint_3
       %9178 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9177
       %9179 = OpLoad %uint %9178
       %9180 = OpCompositeConstruct %v4uint %9170 %9173 %9176 %9179
       %9181 = OpBitcast %v4float %9180
       %9182 = OpCompositeInsert %mat4v4float %9181 %553 0
       %9183 = OpIAdd %uint %9150 %uint_144
       %9184 = OpShiftRightLogical %uint %9183 %uint_2
       %9185 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9184
       %9186 = OpLoad %uint %9185
       %9187 = OpIAdd %uint %9184 %uint_1
       %9188 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9187
       %9189 = OpLoad %uint %9188
       %9190 = OpIAdd %uint %9184 %uint_2
       %9191 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9190
       %9192 = OpLoad %uint %9191
       %9193 = OpIAdd %uint %9184 %uint_3
       %9194 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9193
       %9195 = OpLoad %uint %9194
       %9196 = OpCompositeConstruct %v4uint %9186 %9189 %9192 %9195
       %9197 = OpBitcast %v4float %9196
       %9198 = OpCompositeInsert %mat4v4float %9197 %9182 1
       %9199 = OpIAdd %uint %9150 %uint_160
       %9200 = OpShiftRightLogical %uint %9199 %uint_2
       %9201 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9200
       %9202 = OpLoad %uint %9201
       %9203 = OpIAdd %uint %9200 %uint_1
       %9204 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9203
       %9205 = OpLoad %uint %9204
       %9206 = OpIAdd %uint %9200 %uint_2
       %9207 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9206
       %9208 = OpLoad %uint %9207
       %9209 = OpIAdd %uint %9200 %uint_3
       %9210 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9209
       %9211 = OpLoad %uint %9210
       %9212 = OpCompositeConstruct %v4uint %9202 %9205 %9208 %9211
       %9213 = OpBitcast %v4float %9212
       %9214 = OpCompositeInsert %mat4v4float %9213 %9198 2
       %9215 = OpIAdd %uint %9150 %uint_176
       %9216 = OpShiftRightLogical %uint %9215 %uint_2
       %9217 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9216
       %9218 = OpLoad %uint %9217
       %9219 = OpIAdd %uint %9216 %uint_1
       %9220 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9219
       %9221 = OpLoad %uint %9220
       %9222 = OpIAdd %uint %9216 %uint_2
       %9223 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9222
       %9224 = OpLoad %uint %9223
       %9225 = OpIAdd %uint %9216 %uint_3
       %9226 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9225
       %9227 = OpLoad %uint %9226
       %9228 = OpCompositeConstruct %v4uint %9218 %9221 %9224 %9227
       %9229 = OpBitcast %v4float %9228
       %9230 = OpCompositeInsert %mat4v4float %9229 %9214 3
               OpBranch %9120
       %9120 = OpLabel
       %9231 = OpPhi %mat4v4float %8989 %9114 %9166 %9122
       %9232 = OpPhi %int %8964 %9114 %9148 %9122
       %9233 = OpPhi %mat4v4float %9053 %9114 %9230 %9122
       %9234 = OpCompositeExtract %float %9118 0
       %9235 = OpCompositeExtract %float %9118 1
       %9236 = OpCompositeExtract %float %9118 2
       %9237 = OpCompositeConstruct %v4float %9234 %9235 %9236 %float_1
       %9238 = OpMatrixTimesVector %v4float %9233 %9237
       %9239 = OpCompositeExtract %float %9238 3
       %9240 = OpCompositeConstruct %v3float %9239 %9239 %9239
       %9241 = OpVectorShuffle %v3float %9238 %9238 0 1 2
       %9242 = OpFDiv %v3float %9241 %9240
       %9243 = OpVectorShuffle %v2float %9242 %468 0 1
               OpSelectionMerge %9244 None
               OpSwitch %uint_0 %9245
       %9245 = OpLabel
       %9246 = OpBitcast %uint %9232
       %9247 = OpVectorTimesScalar %v2float %9243 %float_128
       %9248 = OpConvertFToU %v2uint %9247
               OpSelectionMerge %9249 None
               OpSwitch %uint_0 %9250
       %9250 = OpLabel
       %9251 = OpBitcast %int %9246
       %9252 = OpBitcast %uint %9251
       %9253 = OpULessThan %bool %9252 %uint_8192
               OpSelectionMerge %9254 None
               OpBranchConditional %9253 %9255 %9254
       %9255 = OpLabel
               OpBranch %9249
       %9254 = OpLabel
       %9256 = OpISub %uint %9246 %uint_8192
       %9257 = OpIMul %uint %9256 %uint_21845
       %9258 = OpIAdd %uint %uint_8192 %9257
       %9259 = OpCompositeExtract %uint %9248 0
       %9260 = OpCompositeExtract %uint %9248 1
       %9261 = OpShiftLeftLogical %uint %9260 %uint_7
       %9262 = OpIAdd %uint %9259 %9261
       %9263 = OpIAdd %uint %9258 %9262
               OpBranch %9249
       %9249 = OpLabel
       %9264 = OpPhi %uint %9246 %9255 %9263 %9254
       %9265 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9264
       %9266 = OpLoad %uint %9265
       %9267 = OpBitwiseAnd %uint %9266 %uint_1023
       %9268 = OpShiftRightLogical %uint %9266 %uint_10
       %9269 = OpBitwiseAnd %uint %9268 %uint_1023
       %9270 = OpCompositeConstruct %v2uint %9267 %9269
       %9271 = OpShiftRightLogical %uint %9266 %uint_20
       %9272 = OpBitwiseAnd %uint %9271 %uint_63
       %9273 = OpBitwiseAnd %uint %9266 %uint_134217728
       %9274 = OpINotEqual %bool %9273 %uint_0
       %9275 = OpSelect %uint %9253 %uint_7 %9272
       %9276 = OpBitwiseAnd %uint %9275 %uint_31
       %9277 = OpShiftRightLogical %uint %uint_16384 %9276
       %9278 = OpConvertUToF %float %9277
       %9279 = OpVectorTimesScalar %v2float %9243 %9278
       %9280 = OpConvertFToU %v2uint %9279
       %9281 = OpIMul %v2uint %9270 %352
       %9282 = OpBitwiseAnd %v2uint %9280 %353
       %9283 = OpIAdd %v2uint %9281 %9282
               OpSelectionMerge %9284 None
               OpBranchConditional %9274 %9285 %9284
       %9285 = OpLabel
       %9286 = OpCompositeExtract %uint %9283 0
       %9287 = OpCompositeExtract %uint %9283 1
       %9288 = OpCompositeConstruct %v4uint %9286 %9287 %uint_0 %uint_0
       %9289 = OpBitcast %v4int %9288
       %9290 = OpVectorShuffle %v3int %9289 %9289 0 1 2
       %9291 = OpCompositeExtract %int %9289 3
       %9292 = OpLoad %type_2d_image_array_0 %VirtualShadowMap_PhysicalPagePool
       %9293 = OpImageFetch %v4uint %9292 %9290 Lod %9291
       %9294 = OpCompositeExtract %uint %9293 0
       %9295 = OpBitcast %float %9294
               OpBranch %9244
       %9284 = OpLabel
               OpBranch %9244
       %9244 = OpLabel
       %9296 = OpPhi %float %9295 %9285 %float_0 %9284
       %9297 = OpPhi %bool %true %9285 %false %9284
               OpSelectionMerge %9298 None
               OpBranchConditional %9297 %9299 %9298
       %9299 = OpLabel
       %9300 = OpFNegate %float %8971
       %9301 = OpCompositeExtract %float %9231 2 2
       %9302 = OpFMul %float %9300 %9301
       %9303 = OpFDiv %float %9302 %9239
       %9304 = OpFSub %float %9296 %9303
       %9305 = OpCompositeExtract %float %9242 2
       %9306 = OpFOrdGreaterThan %bool %9304 %9305
       %9307 = OpSelect %float %9306 %float_0 %float_1
               OpBranch %8969
       %9298 = OpLabel
               OpBranch %9112
       %9113 = OpLabel
       %9308 = OpFSub %v3float %604 %9109
       %9309 = OpFSub %v3float %654 %9110
       %9310 = OpVectorTimesScalar %v3float %9308 %float_2097152
       %9311 = OpFAdd %v3float %9310 %9309
       %9312 = OpExtInst %float %1 Length %9311
       %9313 = OpExtInst %float %1 Log2 %9312
       %9314 = OpFAdd %float %9313 %9098
       %9315 = OpExtInst %float %1 Floor %9314
       %9316 = OpConvertFToS %int %9315
       %9317 = OpISub %int %9316 %9103
       %9318 = OpExtInst %int %1 SMax %int_0 %9317
       %9319 = OpSLessThan %bool %9318 %9108
               OpSelectionMerge %9320 None
               OpBranchConditional %9319 %9321 %9320
       %9321 = OpLabel
       %9322 = OpIAdd %int %8964 %9318
       %9323 = OpBitcast %uint %9322
       %9324 = OpIMul %uint %9323 %uint_336
       %9325 = OpIAdd %uint %9324 %uint_96
       %9326 = OpShiftRightLogical %uint %9325 %uint_2
       %9327 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9326
       %9328 = OpLoad %uint %9327
       %9329 = OpIAdd %uint %9326 %uint_1
       %9330 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9329
       %9331 = OpLoad %uint %9330
       %9332 = OpIAdd %uint %9326 %uint_2
       %9333 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9332
       %9334 = OpLoad %uint %9333
       %9335 = OpIAdd %uint %9326 %uint_3
       %9336 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9335
       %9337 = OpLoad %uint %9336
       %9338 = OpCompositeConstruct %v4uint %9328 %9331 %9334 %9337
       %9339 = OpBitcast %v4float %9338
       %9340 = OpIAdd %uint %9324 %uint_112
       %9341 = OpShiftRightLogical %uint %9340 %uint_2
       %9342 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9341
       %9343 = OpIAdd %uint %9341 %uint_1
       %9344 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9343
       %9345 = OpIAdd %uint %9341 %uint_2
       %9346 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9345
       %9347 = OpIAdd %uint %9341 %uint_3
       %9348 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9347
       %9349 = OpIAdd %uint %9324 %uint_128
       %9350 = OpShiftRightLogical %uint %9349 %uint_2
       %9351 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9350
       %9352 = OpLoad %uint %9351
       %9353 = OpIAdd %uint %9350 %uint_1
       %9354 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9353
       %9355 = OpLoad %uint %9354
       %9356 = OpIAdd %uint %9350 %uint_2
       %9357 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9356
       %9358 = OpLoad %uint %9357
       %9359 = OpIAdd %uint %9350 %uint_3
       %9360 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9359
       %9361 = OpLoad %uint %9360
       %9362 = OpCompositeConstruct %v4uint %9352 %9355 %9358 %9361
       %9363 = OpBitcast %v4float %9362
       %9364 = OpCompositeInsert %mat4v4float %9363 %553 0
       %9365 = OpIAdd %uint %9324 %uint_144
       %9366 = OpShiftRightLogical %uint %9365 %uint_2
       %9367 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9366
       %9368 = OpLoad %uint %9367
       %9369 = OpIAdd %uint %9366 %uint_1
       %9370 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9369
       %9371 = OpLoad %uint %9370
       %9372 = OpIAdd %uint %9366 %uint_2
       %9373 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9372
       %9374 = OpLoad %uint %9373
       %9375 = OpIAdd %uint %9366 %uint_3
       %9376 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9375
       %9377 = OpLoad %uint %9376
       %9378 = OpCompositeConstruct %v4uint %9368 %9371 %9374 %9377
       %9379 = OpBitcast %v4float %9378
       %9380 = OpCompositeInsert %mat4v4float %9379 %9364 1
       %9381 = OpIAdd %uint %9324 %uint_160
       %9382 = OpShiftRightLogical %uint %9381 %uint_2
       %9383 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9382
       %9384 = OpLoad %uint %9383
       %9385 = OpIAdd %uint %9382 %uint_1
       %9386 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9385
       %9387 = OpLoad %uint %9386
       %9388 = OpIAdd %uint %9382 %uint_2
       %9389 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9388
       %9390 = OpLoad %uint %9389
       %9391 = OpIAdd %uint %9382 %uint_3
       %9392 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9391
       %9393 = OpLoad %uint %9392
       %9394 = OpCompositeConstruct %v4uint %9384 %9387 %9390 %9393
       %9395 = OpBitcast %v4float %9394
       %9396 = OpCompositeInsert %mat4v4float %9395 %9380 2
       %9397 = OpIAdd %uint %9324 %uint_176
       %9398 = OpShiftRightLogical %uint %9397 %uint_2
       %9399 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9398
       %9400 = OpLoad %uint %9399
       %9401 = OpIAdd %uint %9398 %uint_1
       %9402 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9401
       %9403 = OpLoad %uint %9402
       %9404 = OpIAdd %uint %9398 %uint_2
       %9405 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9404
       %9406 = OpLoad %uint %9405
       %9407 = OpIAdd %uint %9398 %uint_3
       %9408 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9407
       %9409 = OpLoad %uint %9408
       %9410 = OpCompositeConstruct %v4uint %9400 %9403 %9406 %9409
       %9411 = OpBitcast %v4float %9410
       %9412 = OpCompositeInsert %mat4v4float %9411 %9396 3
       %9413 = OpIAdd %uint %9324 %uint_256
       %9414 = OpShiftRightLogical %uint %9413 %uint_2
       %9415 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9414
       %9416 = OpLoad %uint %9415
       %9417 = OpIAdd %uint %9414 %uint_1
       %9418 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9417
       %9419 = OpLoad %uint %9418
       %9420 = OpIAdd %uint %9414 %uint_2
       %9421 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9420
       %9422 = OpLoad %uint %9421
       %9423 = OpCompositeConstruct %v3uint %9416 %9419 %9422
       %9424 = OpBitcast %v3float %9423
       %9425 = OpIAdd %uint %9324 %uint_272
       %9426 = OpShiftRightLogical %uint %9425 %uint_2
       %9427 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9426
       %9428 = OpLoad %uint %9427
       %9429 = OpIAdd %uint %9426 %uint_1
       %9430 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9429
       %9431 = OpLoad %uint %9430
       %9432 = OpIAdd %uint %9426 %uint_2
       %9433 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9432
       %9434 = OpLoad %uint %9433
       %9435 = OpCompositeConstruct %v3uint %9428 %9431 %9434
       %9436 = OpBitcast %v3float %9435
       %9437 = OpFAdd %v3float %604 %9424
       %9438 = OpFAdd %v3float %654 %9436
       %9439 = OpVectorTimesScalar %v3float %9437 %float_2097152
       %9440 = OpFAdd %v3float %9439 %9438
       %9441 = OpCompositeExtract %float %9440 0
       %9442 = OpCompositeExtract %float %9440 1
       %9443 = OpCompositeExtract %float %9440 2
       %9444 = OpCompositeConstruct %v4float %9441 %9442 %9443 %float_1
       %9445 = OpMatrixTimesVector %v4float %9412 %9444
       %9446 = OpVectorShuffle %v2float %9445 %9445 0 1
       %9447 = OpVectorTimesScalar %v2float %9446 %float_128
       %9448 = OpConvertFToU %v2uint %9447
               OpSelectionMerge %9449 None
               OpSwitch %uint_0 %9450
       %9450 = OpLabel
       %9451 = OpBitcast %int %9323
       %9452 = OpBitcast %uint %9451
       %9453 = OpULessThan %bool %9452 %uint_8192
               OpSelectionMerge %9454 None
               OpBranchConditional %9453 %9455 %9454
       %9455 = OpLabel
               OpBranch %9449
       %9454 = OpLabel
       %9456 = OpISub %uint %9323 %uint_8192
       %9457 = OpIMul %uint %9456 %uint_21845
       %9458 = OpIAdd %uint %uint_8192 %9457
       %9459 = OpCompositeExtract %uint %9448 0
       %9460 = OpCompositeExtract %uint %9448 1
       %9461 = OpShiftLeftLogical %uint %9460 %uint_7
       %9462 = OpIAdd %uint %9459 %9461
       %9463 = OpIAdd %uint %9458 %9462
               OpBranch %9449
       %9449 = OpLabel
       %9464 = OpPhi %uint %9323 %9455 %9463 %9454
       %9465 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9464
       %9466 = OpLoad %uint %9465
       %9467 = OpBitwiseAnd %uint %9466 %uint_1023
       %9468 = OpShiftRightLogical %uint %9466 %uint_10
       %9469 = OpBitwiseAnd %uint %9468 %uint_1023
       %9470 = OpCompositeConstruct %v2uint %9467 %9469
       %9471 = OpShiftRightLogical %uint %9466 %uint_20
       %9472 = OpBitwiseAnd %uint %9471 %uint_63
       %9473 = OpBitwiseAnd %uint %9466 %uint_134217728
       %9474 = OpINotEqual %bool %9473 %uint_0
       %9475 = OpIEqual %bool %9472 %uint_0
       %9476 = OpLogicalAnd %bool %9474 %9475
               OpSelectionMerge %9477 None
               OpBranchConditional %9474 %9478 %9477
       %9478 = OpLabel
       %9479 = OpIAdd %uint %9323 %9472
       %9480 = OpBitcast %int %9479
       %9481 = OpVectorTimesScalar %v2float %9446 %float_16384
       %9482 = OpConvertFToU %v2uint %9481
       %9483 = OpUGreaterThan %bool %9472 %uint_0
               OpSelectionMerge %9484 None
               OpBranchConditional %9483 %9485 %9484
       %9485 = OpLabel
       %9486 = OpIAdd %uint %9324 %uint_304
       %9487 = OpShiftRightLogical %uint %9486 %uint_2
       %9488 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9487
       %9489 = OpLoad %uint %9488
       %9490 = OpIAdd %uint %9487 %uint_1
       %9491 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9490
       %9492 = OpLoad %uint %9491
       %9493 = OpCompositeConstruct %v2uint %9489 %9492
       %9494 = OpBitcast %v2int %9493
       %9495 = OpBitcast %uint %9480
       %9496 = OpIMul %uint %9495 %uint_336
       %9497 = OpIAdd %uint %9496 %uint_304
       %9498 = OpShiftRightLogical %uint %9497 %uint_2
       %9499 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9498
       %9500 = OpLoad %uint %9499
       %9501 = OpIAdd %uint %9498 %uint_1
       %9502 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9501
       %9503 = OpLoad %uint %9502
       %9504 = OpCompositeConstruct %v2uint %9500 %9503
       %9505 = OpBitcast %v2int %9504
       %9506 = OpIMul %v2int %382 %9494
       %9507 = OpIMul %v2int %382 %9505
       %9508 = OpBitcast %v2uint %9506
       %9509 = OpISub %v2uint %9448 %9508
       %9510 = OpBitcast %int %9472
       %9511 = OpCompositeConstruct %v2int %9510 %9510
       %9512 = OpBitwiseAnd %v2int %9511 %383
       %9513 = OpShiftLeftLogical %v2int %9507 %9512
       %9514 = OpBitcast %v2uint %9513
       %9515 = OpIAdd %v2uint %9509 %9514
       %9516 = OpCompositeConstruct %v2uint %9472 %9472
       %9517 = OpBitwiseAnd %v2uint %9516 %315
       %9518 = OpShiftRightLogical %v2uint %9515 %9517
       %9519 = OpIMul %v2uint %9518 %352
       %9520 = OpIAdd %v2uint %9519 %353
       %9521 = OpLoad %uint %9342
       %9522 = OpLoad %uint %9344
       %9523 = OpLoad %uint %9346
       %9524 = OpLoad %uint %9348
       %9525 = OpCompositeConstruct %v4uint %9521 %9522 %9523 %9524
       %9526 = OpBitcast %v4float %9525
       %9527 = OpLoad %uint %9488
       %9528 = OpLoad %uint %9491
       %9529 = OpCompositeConstruct %v2uint %9527 %9528
       %9530 = OpBitcast %v2int %9529
       %9531 = OpIAdd %int %9322 %9510
       %9532 = OpBitcast %uint %9531
       %9533 = OpIMul %uint %9532 %uint_336
       %9534 = OpIAdd %uint %9533 %uint_112
       %9535 = OpShiftRightLogical %uint %9534 %uint_2
       %9536 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9535
       %9537 = OpLoad %uint %9536
       %9538 = OpIAdd %uint %9535 %uint_1
       %9539 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9538
       %9540 = OpLoad %uint %9539
       %9541 = OpIAdd %uint %9535 %uint_2
       %9542 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9541
       %9543 = OpLoad %uint %9542
       %9544 = OpIAdd %uint %9535 %uint_3
       %9545 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9544
       %9546 = OpLoad %uint %9545
       %9547 = OpCompositeConstruct %v4uint %9537 %9540 %9543 %9546
       %9548 = OpBitcast %v4float %9547
       %9549 = OpIAdd %uint %9533 %uint_304
       %9550 = OpShiftRightLogical %uint %9549 %uint_2
       %9551 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9550
       %9552 = OpLoad %uint %9551
       %9553 = OpIAdd %uint %9550 %uint_1
       %9554 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_ProjectionData %uint_0 %9553
       %9555 = OpLoad %uint %9554
       %9556 = OpCompositeConstruct %v2uint %9552 %9555
       %9557 = OpBitcast %v2int %9556
       %9558 = OpConvertSToF %v2float %9530
       %9559 = OpConvertSToF %v2float %9557
       %9560 = OpSGreaterThanEqual %bool %9510 %int_0
       %9561 = OpBitcast %uint %9510
       %9562 = OpBitwiseAnd %uint %9561 %uint_31
       %9563 = OpShiftLeftLogical %uint %uint_1 %9562
       %9564 = OpConvertUToF %float %9563
       %9565 = OpFDiv %float %float_1 %9564
       %9566 = OpSNegate %int %9510
       %9567 = OpBitcast %uint %9566
       %9568 = OpBitwiseAnd %uint %9567 %uint_31
       %9569 = OpShiftLeftLogical %uint %uint_1 %9568
       %9570 = OpConvertUToF %float %9569
       %9571 = OpSelect %float %9560 %9565 %9570
       %9572 = OpVectorTimesScalar %v2float %9558 %9571
       %9573 = OpFSub %v2float %9559 %9572
       %9574 = OpVectorTimesScalar %v2float %9573 %float_0_25
       %9575 = OpCompositeExtract %float %9526 2
       %9576 = OpCompositeExtract %float %9548 2
       %9577 = OpFNegate %float %9571
       %9578 = OpExtInst %float %1 Fma %9577 %9575 %9576
       %9579 = OpVectorTimesScalar %v2float %9446 %9571
       %9580 = OpVectorShuffle %v2float %9574 %469 0 1
       %9581 = OpFAdd %v2float %9579 %9580
       %9582 = OpVectorTimesScalar %v2float %9581 %float_16384
       %9583 = OpConvertFToU %v2uint %9582
       %9584 = OpExtInst %v2uint %1 UClamp %9583 %9519 %9520
               OpSelectionMerge %9585 None
               OpSwitch %uint_0 %9586
       %9586 = OpLabel
       %9587 = OpBitcast %int %9495
       %9588 = OpBitcast %uint %9587
       %9589 = OpULessThan %bool %9588 %uint_8192
               OpSelectionMerge %9590 None
               OpBranchConditional %9589 %9591 %9590
       %9591 = OpLabel
               OpBranch %9585
       %9590 = OpLabel
       %9592 = OpISub %uint %9495 %uint_8192
       %9593 = OpIMul %uint %9592 %uint_21845
       %9594 = OpIAdd %uint %uint_8192 %9593
       %9595 = OpCompositeExtract %uint %9518 0
       %9596 = OpCompositeExtract %uint %9518 1
       %9597 = OpShiftLeftLogical %uint %9596 %uint_7
       %9598 = OpIAdd %uint %9595 %9597
       %9599 = OpIAdd %uint %9594 %9598
               OpBranch %9585
       %9585 = OpLabel
       %9600 = OpPhi %uint %9495 %9591 %9599 %9590
       %9601 = OpAccessChain %_ptr_Uniform_uint %VirtualShadowMap_PageTable %int_0 %9600
       %9602 = OpLoad %uint %9601
       %9603 = OpBitwiseAnd %uint %9602 %uint_1023
       %9604 = OpShiftRightLogical %uint %9602 %uint_10
       %9605 = OpBitwiseAnd %uint %9604 %uint_1023
       %9606 = OpCompositeConstruct %v2uint %9603 %9605
       %9607 = OpShiftRightLogical %uint %9602 %uint_20
       %9608 = OpBitwiseAnd %uint %9607 %uint_63
       %9609 = OpBitwiseAnd %uint %9602 %uint_134217728
       %9610 = OpINotEqual %bool %9609 %uint_0
       %9611 = OpIEqual %bool %9608 %uint_0
       %9612 = OpLogicalAnd %bool %9610 %9611
               OpBranch %9484
       %9484 = OpLabel
       %9613 = OpPhi %float %float_1 %9478 %9571 %9585
       %9614 = OpPhi %float %float_0 %9478 %9578 %9585
       %9615 = OpPhi %v2uint %9482 %9478 %9584 %9585
       %9616 = OpPhi %v2uint %9470 %9478 %9606 %9585
       %9617 = OpPhi %bool %9476 %9478 %9612 %9585
               OpSelectionMerge %9618 None
               OpBranchConditional %9617 %9619 %9618
       %9619 = OpLabel
       %9620 = OpIMul %v2uint %9616 %352
       %9621 = OpBitwiseAnd %v2uint %9615 %353
       %9622 = OpIAdd %v2uint %9620 %9621
       %9623 = OpCompositeExtract %uint %9622 0
       %9624 = OpCompositeExtract %uint %9622 1
       %9625 = OpCompositeConstruct %v4uint %9623 %9624 %uint_0 %uint_0
       %9626 = OpBitcast %v4int %9625
       %9627 = OpVectorShuffle %v3int %9626 %9626 0 1 2
       %9628 = OpCompositeExtract %int %9626 3
       %9629 = OpLoad %type_2d_image_array_0 %VirtualShadowMap_PhysicalPagePool
       %9630 = OpImageFetch %v4uint %9629 %9627 Lod %9628
       %9631 = OpCompositeExtract %uint %9630 0
       %9632 = OpBitcast %float %9631
       %9633 = OpFSub %float %9632 %9614
       %9634 = OpFDiv %float %9633 %9613
               OpBranch %9618
       %9618 = OpLabel
       %9635 = OpPhi %float %float_0 %9484 %9634 %9619
       %9636 = OpSelect %bool %9617 %true %false
               OpBranch %9477
       %9477 = OpLabel
       %9637 = OpPhi %float %float_0 %9449 %9635 %9618
       %9638 = OpPhi %bool %false %9449 %9636 %9618
               OpSelectionMerge %9639 None
               OpBranchConditional %9638 %9640 %9639
       %9640 = OpLabel
       %9641 = OpCompositeExtract %float %9339 2
       %9642 = OpExtInst %float %1 Fma %8971 %9641 %9637
       %9643 = OpCompositeExtract %float %9445 2
       %9644 = OpFOrdGreaterThan %bool %9642 %9643
       %9645 = OpSelect %float %9644 %float_0 %float_1
               OpBranch %8969
       %9639 = OpLabel
               OpBranch %9320
       %9320 = OpLabel
               OpBranch %9112
       %9112 = OpLabel
               OpBranch %8969
       %8969 = OpLabel
       %9646 = OpPhi %float %9307 %9299 %9645 %9640 %float_1 %9112
       %9647 = OpFMul %float %8961 %9646
               OpBranch %8967
       %8967 = OpLabel
       %9648 = OpPhi %float %8961 %8886 %9647 %8969
       %9649 = OpDot %float %8881 %124
       %9650 = OpDot %float %8882 %8881
       %9651 = OpExtInst %float %1 FMix %float_1 %9650 %9649
       %9652 = OpCompositeExtract %float %8859 0
       %9653 = OpCompositeExtract %float %8859 1
       %9654 = OpExtInst %float %1 Fma %657 %9652 %9653
       %9655 = OpExtInst %float %1 FClamp %9654 %float_0 %float_1
       %9656 = OpFMul %float %9655 %9655
       %9657 = OpExtInst %float %1 FMix %9648 %9651 %9656
       %9658 = OpExtInst %float %1 NMin %9657 %float_1
       %9659 = OpFAdd %float %9657 %9658
       %9660 = OpFOrdGreaterThan %bool %9659 %float_0
               OpSelectionMerge %9661 DontFlatten
               OpBranchConditional %9660 %9662 %9661
       %9662 = OpLabel
       %9663 = OpExtInst %float %1 NMax %8436 %8434
       %9664 = OpDot %float %8863 %8863
       %9665 = OpFAdd %float %9664 %float_1
       %9666 = OpFDiv %float %float_1 %9665
       %9667 = OpExtInst %float %1 InverseSqrt %9664
       %9668 = OpVectorTimesScalar %v3float %8863 %9667
       %9669 = OpDot %float %8459 %9668
       %9670 = OpFOrdGreaterThan %bool %8865 %float_0
               OpSelectionMerge %9671 None
               OpBranchConditional %9670 %9672 %9671
       %9672 = OpLabel
       %9673 = OpFMul %float %8865 %8865
       %9674 = OpFMul %float %9673 %9666
       %9675 = OpExtInst %float %1 FClamp %9674 %float_0 %float_1
       %9676 = OpExtInst %float %1 Sqrt %9675
       %9677 = OpFOrdLessThan %bool %9669 %9676
               OpSelectionMerge %9678 None
               OpBranchConditional %9677 %9679 %9678
       %9679 = OpLabel
       %9680 = OpFNegate %float %9676
       %9681 = OpExtInst %float %1 NMax %9669 %9680
       %9682 = OpFAdd %float %9676 %9681
       %9683 = OpFMul %float %9682 %9682
       %9684 = OpFMul %float %float_4 %9676
       %9685 = OpFDiv %float %9683 %9684
               OpBranch %9678
       %9678 = OpLabel
       %9686 = OpPhi %float %9669 %9672 %9685 %9679
               OpBranch %9671
       %9671 = OpLabel
       %9687 = OpPhi %float %9669 %9662 %9686 %9678
       %9688 = OpExtInst %float %1 FClamp %9687 %float_0 %float_1
       %9689 = OpExtInst %float %1 NMax %9663 %8434
       %9690 = OpFMul %float %8865 %9667
       %9691 = OpFNegate %float %9689
       %9692 = OpExtInst %float %1 Fma %9691 %9689 %float_1
       %9693 = OpFMul %float %9690 %9692
       %9694 = OpExtInst %float %1 FClamp %9693 %float_0 %float_1
       %9695 = OpExtInst %float %1 NMax %470 %8865
       %9696 = OpFNegate %float %9695
       %9697 = OpExtInst %float %1 Fma %9696 %float_0_0500000007 %float_1
       %9698 = OpExtInst %float %1 FClamp %9697 %float_0 %float_1
       %9699 = OpBitcast %uint %9698
       %9700 = OpShiftLeftLogical %uint %9699 %uint_1
       %9701 = OpBitwiseOr %uint %uint_0 %9700
       %9702 = OpDot %float %8459 %671
       %9703 = OpDot %float %671 %9668
       %9704 = OpExtInst %float %1 Fma %float_2 %9703 %float_2
       %9705 = OpExtInst %float %1 InverseSqrt %9704
       %9706 = OpFAdd %float %9669 %9702
       %9707 = OpFMul %float %9706 %9705
       %9708 = OpExtInst %float %1 FClamp %9707 %float_0 %float_1
       %9709 = OpExtInst %float %1 Fma %9705 %9703 %9705
       %9710 = OpExtInst %float %1 FClamp %9709 %float_0 %float_1
       %9711 = OpFOrdGreaterThan %bool %9694 %float_0
               OpSelectionMerge %9712 None
               OpBranchConditional %9711 %9713 %9712
       %9713 = OpLabel
       %9714 = OpFNegate %float %9694
       %9715 = OpExtInst %float %1 Fma %9714 %9694 %float_1
       %9716 = OpExtInst %float %1 Sqrt %9715
       %9717 = OpFMul %float %float_2 %9669
       %9718 = OpFNegate %float %9703
       %9719 = OpExtInst %float %1 Fma %9717 %9702 %9718
       %9720 = OpFOrdGreaterThanEqual %bool %9719 %9716
               OpSelectionMerge %9721 None
               OpBranchConditional %9720 %9722 %9723
       %9723 = OpLabel
       %9724 = OpFNegate %float %9719
       %9725 = OpExtInst %float %1 Fma %9724 %9719 %float_1
       %9726 = OpExtInst %float %1 InverseSqrt %9725
       %9727 = OpFMul %float %9694 %9726
       %9728 = OpExtInst %float %1 Fma %9724 %9669 %9702
       %9729 = OpFMul %float %9727 %9728
       %9730 = OpFMul %float %float_2 %9702
       %9731 = OpExtInst %float %1 Fma %9730 %9702 %float_n1
       %9732 = OpExtInst %float %1 Fma %9724 %9703 %9731
       %9733 = OpFMul %float %9727 %9732
       %9734 = OpFNegate %float %9669
       %9735 = OpExtInst %float %1 Fma %9734 %9669 %float_1
       %9736 = OpFNegate %float %9702
       %9737 = OpExtInst %float %1 Fma %9736 %9702 %9735
       %9738 = OpExtInst %float %1 Fma %9718 %9703 %9737
       %9739 = OpFMul %float %9717 %9702
       %9740 = OpExtInst %float %1 Fma %9739 %9703 %9738
       %9741 = OpExtInst %float %1 FClamp %9740 %float_0 %float_1
       %9742 = OpExtInst %float %1 Sqrt %9741
       %9743 = OpFMul %float %9727 %9742
       %9744 = OpFMul %float %9743 %float_2
       %9745 = OpFMul %float %9744 %9702
       %9746 = OpExtInst %float %1 Fma %9669 %9716 %9702
       %9747 = OpExtInst %float %1 Fma %9727 %9728 %9746
       %9748 = OpExtInst %float %1 Fma %9703 %9716 %float_1
       %9749 = OpExtInst %float %1 Fma %9727 %9732 %9748
       %9750 = OpFMul %float %9743 %9749
       %9751 = OpFMul %float %9747 %9749
       %9752 = OpFMul %float %9745 %9747
       %9753 = OpFMul %float %float_0_25 %9745
       %9754 = OpFMul %float %9753 %9747
       %9755 = OpExtInst %float %1 Fma %float_n0_5 %9750 %9754
       %9756 = OpFMul %float %9751 %9755
       %9757 = OpFMul %float %9750 %float_n2
       %9758 = OpExtInst %float %1 Fma %9745 %9747 %9757
       %9759 = OpFMul %float %9752 %9758
       %9760 = OpExtInst %float %1 Fma %9750 %9750 %9759
       %9761 = OpFMul %float %9749 %9749
       %9762 = OpExtInst %float %1 Fma %9703 %9716 %9749
       %9763 = OpExtInst %float %1 Fma %float_n0_5 %9762 %float_n0_5
       %9764 = OpFMul %float %9751 %9763
       %9765 = OpExtInst %float %1 Fma %9746 %9761 %9764
       %9766 = OpExtInst %float %1 Fma %9747 %9765 %9760
       %9767 = OpFMul %float %float_2 %9756
       %9768 = OpFMul %float %9756 %9756
       %9769 = OpExtInst %float %1 Fma %9766 %9766 %9768
       %9770 = OpFDiv %float %9767 %9769
       %9771 = OpFMul %float %9770 %9766
       %9772 = OpFNegate %float %9770
       %9773 = OpExtInst %float %1 Fma %9772 %9756 %float_1
       %9774 = OpFMul %float %9771 %9743
       %9775 = OpExtInst %float %1 Fma %9773 %9729 %9774
       %9776 = OpFMul %float %9771 %9745
       %9777 = OpExtInst %float %1 Fma %9773 %9733 %9776
       %9778 = OpExtInst %float %1 Fma %9669 %9716 %9775
       %9779 = OpExtInst %float %1 Fma %9703 %9716 %9777
       %9780 = OpExtInst %float %1 Fma %float_2 %9779 %float_2
       %9781 = OpExtInst %float %1 InverseSqrt %9780
       %9782 = OpFAdd %float %9778 %9702
       %9783 = OpFMul %float %9782 %9781
       %9784 = OpExtInst %float %1 FClamp %9783 %float_0 %float_1
       %9785 = OpExtInst %float %1 Fma %9781 %9779 %9781
       %9786 = OpExtInst %float %1 FClamp %9785 %float_0 %float_1
               OpBranch %9721
       %9722 = OpLabel
       %9787 = OpExtInst %float %1 FAbs %9702
               OpBranch %9721
       %9721 = OpLabel
       %9788 = OpPhi %float %9784 %9723 %float_1 %9722
       %9789 = OpPhi %float %9786 %9723 %9787 %9722
               OpBranch %9712
       %9712 = OpLabel
       %9790 = OpPhi %float %9708 %9671 %9788 %9721
       %9791 = OpPhi %float %9710 %9671 %9789 %9721
       %9792 = OpExtInst %float %1 FAbs %9702
       %9793 = OpFAdd %float %9792 %float_9_99999975en06
       %9794 = OpExtInst %float %1 FClamp %9793 %float_0 %float_1
       %9795 = OpFMul %float %9663 %9663
       %9796 = OpFMul %float %9795 %9795
       %9797 = OpShiftRightLogical %uint %9701 %uint_1
       %9798 = OpBitcast %float %9797
       %9799 = OpExtInst %float %1 FClamp %9702 %float_0 %float_1
       %9800 = OpExtInst %float %1 FClamp %9688 %float_0 %float_1
       %9801 = OpExtInst %float %1 FClamp %9710 %float_0 %float_1
       %9802 = OpExtInst %float %1 FClamp %9708 %float_0 %float_1
       %9803 = OpBitcast %int %9796
       %9804 = OpISub %int %int_2129859010 %9803
       %9805 = OpBitcast %float %9804
       %9806 = OpExtInst %float %1 Fma %float_2 %9805 %float_n1
       %9807 = OpExtInst %float %1 Log2 %9806
       %9808 = OpFMul %float %float_0_055555556 %9807
       %9809 = OpExtInst %float %1 FClamp %9808 %float_0 %float_1
       %9810 = OpFSub %float %float_1 %9801
       %9811 = OpFMul %float %9810 %9810
       %9812 = OpFMul %float %9811 %9811
       %9813 = OpExtInst %float %1 Fma %9812 %9810 %9801
       %9814 = OpFSub %float %float_1 %9799
       %9815 = OpFMul %float %9814 %9814
       %9816 = OpFMul %float %9815 %9815
       %9817 = OpFMul %float %9816 %9814
       %9818 = OpExtInst %float %1 Fma %float_n0_75 %9817 %float_1
       %9819 = OpFSub %float %float_1 %9800
       %9820 = OpFMul %float %9819 %9819
       %9821 = OpFMul %float %9820 %9820
       %9822 = OpFMul %float %9821 %9819
       %9823 = OpExtInst %float %1 Fma %float_n0_75 %9822 %float_1
       %9824 = OpFMul %float %9818 %9823
       %9825 = OpExtInst %float %1 Fma %float_2_20000005 %9809 %float_n0_5
       %9826 = OpExtInst %float %1 FClamp %9825 %float_0 %float_1
       %9827 = OpExtInst %float %1 FMix %9813 %9824 %9826
       %9828 = OpExtInst %float %1 Fma %float_34_5 %9809 %float_n59
       %9829 = OpExtInst %float %1 Fma %9828 %9809 %float_24_5
       %9830 = OpFMul %float %9829 %9801
       %9831 = OpExtInst %float %1 Fma %float_73_1999969 %9809 %float_n21_2000008
       %9832 = OpExtInst %float %1 NMax %9831 %float_8_89999962
       %9833 = OpFNegate %float %9832
       %9834 = OpBitcast %int %9802
       %9835 = OpShiftRightArithmetic %int %9834 %int_1
       %9836 = OpIAdd %int %int_532487669 %9835
       %9837 = OpBitcast %float %9836
       %9838 = OpFMul %float %9833 %9837
       %9839 = OpExtInst %float %1 Exp2 %9838
       %9840 = OpFMul %float %9830 %9839
       %9841 = OpExtInst %float %1 Fma %9840 %9798 %9827
       %9842 = OpFMul %float %float_0_318309873 %9841
       %9843 = OpVectorTimesScalar %v3float %8778 %9842
       %9844 = OpVectorTimesScalar %v3float %134 %9688
       %9845 = OpFMul %v3float %9843 %9844
       %9846 = OpBitwiseAnd %uint %9701 %uint_1
       %9847 = OpIEqual %bool %9846 %uint_1
               OpSelectionMerge %9848 None
               OpBranchConditional %9847 %9849 %9850
       %9850 = OpLabel
               OpSelectionMerge %9851 None
               OpBranchConditional %9711 %9852 %9851
       %9852 = OpLabel
       %9853 = OpFMul %float %float_0_25 %9694
       %9854 = OpShiftRightArithmetic %int %9803 %int_1
       %9855 = OpIAdd %int %int_532487669 %9854
       %9856 = OpBitcast %float %9855
       %9857 = OpExtInst %float %1 Fma %float_3 %9856 %9694
       %9858 = OpFMul %float %9853 %9857
       %9859 = OpFAdd %float %9791 %float_0_00100000005
       %9860 = OpFDiv %float %9858 %9859
       %9861 = OpExtInst %float %1 Fma %9795 %9795 %9860
       %9862 = OpFDiv %float %9796 %9861
               OpBranch %9851
       %9851 = OpLabel
       %9863 = OpPhi %float %float_1 %9850 %9862 %9852
       %9864 = OpFNegate %float %9790
       %9865 = OpExtInst %float %1 Fma %9790 %9796 %9864
       %9866 = OpExtInst %float %1 Fma %9865 %9790 %float_1
       %9867 = OpFMul %float %float_3_14159274 %9866
       %9868 = OpFMul %float %9867 %9866
       %9869 = OpFDiv %float %9796 %9868
       %9870 = OpFMul %float %9869 %9863
       %9871 = OpExtInst %float %1 Sqrt %9796
       %9872 = OpFSub %float %float_1 %9871
       %9873 = OpExtInst %float %1 Fma %9794 %9872 %9871
       %9874 = OpExtInst %float %1 Fma %9688 %9872 %9871
       %9875 = OpFMul %float %9794 %9874
       %9876 = OpExtInst %float %1 Fma %9688 %9873 %9875
       %9877 = OpFDiv %float %float_0_5 %9876
       %9878 = OpFSub %float %float_1 %9791
       %9879 = OpFMul %float %9878 %9878
       %9880 = OpFMul %float %9879 %9879
       %9881 = OpFMul %float %9880 %9878
       %9882 = OpCompositeExtract %float %8555 1
       %9883 = OpFMul %float %float_50 %9882
       %9884 = OpExtInst %float %1 FClamp %9883 %float_0 %float_1
       %9885 = OpFMul %float %9884 %9881
       %9886 = OpCompositeConstruct %v3float %9885 %9885 %9885
       %9887 = OpFNegate %float %9880
       %9888 = OpExtInst %float %1 Fma %9887 %9878 %float_1
       %9889 = OpVectorTimesScalar %v3float %8555 %9888
       %9890 = OpFAdd %v3float %9886 %9889
       %9891 = OpFMul %float %9870 %9877
       %9892 = OpVectorTimesScalar %v3float %9890 %9891
       %9893 = OpFMul %v3float %9844 %9892
               OpBranch %9848
       %9849 = OpLabel
               OpBranch %9848
       %9848 = OpLabel
       %9894 = OpPhi %v3float %9893 %9851 %108 %9849
       %9895 = OpCompositeExtract %float %8555 1
       %9896 = OpFMul %float %float_50 %9895
       %9897 = OpExtInst %float %1 FClamp %9896 %float_0 %float_1
       %9898 = OpCompositeConstruct %v3float %9897 %9897 %9897
       %9899 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
       %9900 = OpLoad %type_sampler %View_ShadingEnergySampler
       %9901 = OpCompositeConstruct %v2float %9794 %9663
       %9902 = OpSampledImage %type_sampled_image %9899 %9900
       %9903 = OpImageSampleExplicitLod %v4float %9902 %9901 Lod %float_0
       %9904 = OpAccessChain %_ptr_Uniform_uint %View %uint_41
       %9905 = OpLoad %uint %9904
       %9906 = OpINotEqual %bool %9905 %uint_0
       %9907 = OpCompositeConstruct %v3bool %9906 %9906 %9906
       %9908 = OpCompositeExtract %float %9903 0
       %9909 = OpFSub %float %float_1 %9908
       %9910 = OpFDiv %float %9909 %9908
       %9911 = OpVectorTimesScalar %v3float %8555 %9910
       %9912 = OpFAdd %v3float %134 %9911
       %9913 = OpSelect %v3float %9907 %9912 %134
       %9914 = OpVectorTimesScalar %v3float %8555 %9908
       %9915 = OpFSub %v3float %9898 %8555
       %9916 = OpCompositeExtract %float %9903 1
       %9917 = OpVectorTimesScalar %v3float %9915 %9916
       %9918 = OpFAdd %v3float %9914 %9917
       %9919 = OpFMul %v3float %9913 %9918
       %9920 = OpAccessChain %_ptr_Uniform_uint %View %uint_42
       %9921 = OpLoad %uint %9920
       %9922 = OpINotEqual %bool %9921 %uint_0
       %9923 = OpDot %float %9919 %179
       %9924 = OpFSub %float %float_1 %9923
       %9925 = OpSelect %float %9922 %9924 %float_1
       %9926 = OpVectorTimesScalar %v3float %9845 %9925
       %9927 = OpFMul %v3float %9894 %9913
       %9928 = OpVectorTimesScalar %v3float %9927 %float_1
       %9929 = OpVectorTimesScalar %v3float %8861 %9657
       %9930 = OpFMul %v3float %9928 %9929
       %9931 = OpExtInst %v3float %1 Fma %9926 %9929 %108
               OpBranch %9661
       %9661 = OpLabel
       %9932 = OpPhi %v3float %469 %8967 %9931 %9848
       %9933 = OpPhi %v3float %469 %8967 %9930 %9848
       %9934 = OpCompositeExtract %float %9932 0
       %9935 = OpCompositeExtract %float %9932 1
       %9936 = OpCompositeExtract %float %9932 2
       %9937 = OpCompositeConstruct %v4float %9934 %9935 %9936 %float_0
       %9938 = OpCompositeExtract %float %9933 0
       %9939 = OpCompositeExtract %float %9933 1
       %9940 = OpCompositeExtract %float %9933 2
       %9941 = OpCompositeConstruct %v4float %9938 %9939 %9940 %float_0
       %9942 = OpBitwiseAnd %uint %8880 %8853
       %9943 = OpINotEqual %bool %9942 %uint_0
               OpSelectionMerge %9944 Flatten
               OpBranchConditional %9943 %9945 %9944
       %9945 = OpLabel
       %9946 = OpVectorShuffle %v4float %9937 %9937 4 5 6 3
       %9947 = OpVectorShuffle %v4float %9941 %9941 4 5 6 3
               OpSelectionMerge %9948 None
               OpBranchConditional %8822 %9949 %9950
       %9950 = OpLabel
               OpBranch %9948
       %9949 = OpLabel
       %9951 = OpVectorShuffle %v3float %9937 %468 0 1 2
       %9952 = OpVectorShuffle %v3float %9941 %468 0 1 2
       %9953 = OpFAdd %v3float %9951 %9952
               OpBranch %9948
       %9948 = OpLabel
       %9954 = OpPhi %v3float %108 %9950 %9953 %9949
       %9955 = OpCompositeConstruct %v4bool %8822 %8822 %8822 %8822
       %9956 = OpSelect %v4float %9955 %104 %9946
       %9957 = OpSelect %v4float %9955 %104 %9947
               OpBranch %9944
       %9944 = OpLabel
       %9958 = OpPhi %v3float %108 %9661 %9954 %9948
       %9959 = OpPhi %v4float %104 %9661 %9956 %9948
       %9960 = OpPhi %v4float %104 %9661 %9957 %9948
               OpBranch %8867
       %8867 = OpLabel
       %9961 = OpPhi %v4float %8511 %8828 %8882 %9944
       %9962 = OpPhi %v3float %108 %8828 %9958 %9944
       %9963 = OpPhi %float %float_1 %8828 %9657 %9944
       %9964 = OpPhi %v4float %104 %8828 %9959 %9944
       %9965 = OpPhi %v4float %104 %8828 %9960 %9944
       %9966 = OpIMul %uint %8815 %uint_2
       %9967 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid %int_0 %9966
       %9968 = OpLoad %uint %9967
       %9969 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %int_0
       %9970 = OpLoad %uint %9969
       %9971 = OpExtInst %uint %1 UMin %9968 %9970
       %9972 = OpIAdd %uint %9966 %uint_1
       %9973 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass_Shared_Forward_NumCulledLightsGrid %int_0 %9972
       %9974 = OpLoad %uint %9973
       %9975 = OpExtInst %uint %1 UMin %9971 %9970
               OpBranch %9976
       %9976 = OpLabel
       %9977 = OpPhi %v4float %9964 %8867 %9978 %9979
       %9980 = OpPhi %v4float %9965 %8867 %9981 %9979
       %9982 = OpPhi %uint %uint_0 %8867 %9983 %9979
       %9984 = OpULessThan %bool %9982 %9975
               OpLoopMerge %9985 %9979 DontUnroll
               OpBranchConditional %9984 %9986 %9985
       %9986 = OpLabel
       %9987 = OpIAdd %uint %9974 %9982
       %9988 = OpLoad %type_buffer_image %OpaqueBasePass_Shared_Forward_CulledLightDataGrid16Bit
       %9989 = OpImageFetch %v4uint %9988 %9987 None
       %9990 = OpCompositeExtract %uint %9989 0
       %9991 = OpIMul %uint %9990 %uint_6
       %9992 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9991
       %9993 = OpLoad %v4float %9992
       %9994 = OpIAdd %uint %9991 %uint_1
       %9995 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9994
       %9996 = OpLoad %v4float %9995
       %9997 = OpIAdd %uint %9991 %uint_2
       %9998 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %9997
       %9999 = OpLoad %v4float %9998
      %10000 = OpIAdd %uint %9991 %uint_3
      %10001 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %10000
      %10002 = OpLoad %v4float %10001
      %10003 = OpIAdd %uint %9991 %uint_4
      %10004 = OpAccessChain %_ptr_Uniform_v4float %OpaqueBasePass_Shared_Forward_ForwardLocalLightBuffer %int_0 %10003
      %10005 = OpLoad %v4float %10004
      %10006 = OpCompositeExtract %float %9999 3
      %10007 = OpBitcast %uint %10006
      %10008 = OpShiftRightLogical %uint %10007 %uint_16
      %10009 = OpBitwiseAnd %uint %10008 %uint_3
      %10010 = OpVectorShuffle %v3float %9993 %9993 0 1 2
      %10011 = OpCompositeExtract %float %9993 3
      %10012 = OpCompositeExtract %float %9996 1
      %10013 = OpBitcast %uint %10012
      %10014 = OpShiftRightLogical %uint %10013 %uint_0
      %10015 = OpBitwiseAnd %uint %10014 %uint_1023
      %10016 = OpConvertUToF %float %10015
      %10017 = OpShiftRightLogical %uint %10013 %uint_10
      %10018 = OpBitwiseAnd %uint %10017 %uint_1023
      %10019 = OpConvertUToF %float %10018
      %10020 = OpShiftRightLogical %uint %10013 %uint_20
      %10021 = OpBitwiseAnd %uint %10020 %uint_1023
      %10022 = OpConvertUToF %float %10021
      %10023 = OpCompositeConstruct %v3float %10016 %10019 %10022
      %10024 = OpCompositeExtract %float %9996 0
      %10025 = OpVectorTimesScalar %v3float %10023 %10024
      %10026 = OpCompositeExtract %float %9996 3
      %10027 = OpVectorShuffle %v3float %9999 %9999 0 1 2
      %10028 = OpCompositeExtract %float %10002 2
      %10029 = OpBitcast %uint %10028
      %10030 = OpBitwiseAnd %uint %10029 %uint_65535
      %10031 = OpExtInst %v2float %1 UnpackHalf2x16 %10030
      %10032 = OpCompositeExtract %float %10031 0
      %10033 = OpCompositeExtract %float %10002 3
      %10034 = OpBitcast %uint %10033
      %10035 = OpExtInst %v2float %1 UnpackHalf2x16 %10034
      %10036 = OpCompositeExtract %float %10035 0
      %10037 = OpVectorShuffle %v3float %10005 %10005 0 1 2
      %10038 = OpShiftRightLogical %uint %10029 %uint_16
      %10039 = OpExtInst %v2float %1 UnpackHalf2x16 %10038
      %10040 = OpCompositeExtract %float %10039 0
      %10041 = OpFOrdEqual %bool %10026 %float_0
      %10042 = OpCompositeExtract %float %10005 3
      %10043 = OpBitcast %uint %10042
      %10044 = OpBitwiseAnd %uint %10043 %uint_65535
      %10045 = OpExtInst %v2float %1 UnpackHalf2x16 %10044
      %10046 = OpCompositeExtract %float %10045 0
      %10047 = OpIEqual %bool %10009 %uint_2
      %10048 = OpBitwiseAnd %uint %10007 %uint_255
      %10049 = OpINotEqual %bool %10048 %uint_0
      %10050 = OpSelect %uint %10049 %uint_1 %uint_0
      %10051 = OpBitwiseAnd %uint %10007 %uint_1
      %10052 = OpConvertUToF %float %10051
      %10053 = OpBitwiseAnd %uint %10007 %uint_2
      %10054 = OpShiftRightLogical %uint %10053 %uint_1
      %10055 = OpConvertUToF %float %10054
      %10056 = OpBitwiseAnd %uint %10007 %uint_4
      %10057 = OpShiftRightLogical %uint %10056 %uint_2
      %10058 = OpConvertUToF %float %10057
      %10059 = OpBitwiseAnd %uint %10007 %uint_8
      %10060 = OpShiftRightLogical %uint %10059 %uint_3
      %10061 = OpConvertUToF %float %10060
      %10062 = OpCompositeConstruct %v4float %10052 %10055 %10058 %10061
      %10063 = OpShiftRightLogical %uint %10007 %uint_4
      %10064 = OpBitwiseAnd %uint %10063 %uint_1
      %10065 = OpConvertUToF %float %10064
      %10066 = OpBitwiseAnd %uint %10063 %uint_2
      %10067 = OpShiftRightLogical %uint %10066 %uint_1
      %10068 = OpConvertUToF %float %10067
      %10069 = OpBitwiseAnd %uint %10063 %uint_4
      %10070 = OpShiftRightLogical %uint %10069 %uint_2
      %10071 = OpConvertUToF %float %10070
      %10072 = OpBitwiseAnd %uint %10063 %uint_8
      %10073 = OpShiftRightLogical %uint %10072 %uint_3
      %10074 = OpConvertUToF %float %10073
      %10075 = OpCompositeConstruct %v4float %10065 %10068 %10071 %10074
      %10076 = OpShiftRightLogical %uint %10007 %uint_8
      %10077 = OpBitwiseAnd %uint %10076 %uint_7
      %10078 = OpDot %float %10075 %8837
      %10079 = OpFSub %v3float %10010 %653
      %10080 = OpDot %float %10079 %10079
      %10081 = OpExtInst %float %1 InverseSqrt %10080
      %10082 = OpVectorTimesScalar %v3float %10079 %10081
               OpSelectionMerge %10083 None
               OpBranchConditional %10041 %10084 %10085
      %10085 = OpLabel
      %10086 = OpVectorTimesScalar %v3float %10079 %10011
      %10087 = OpDot %float %10086 %10086
      %10088 = OpExtInst %float %1 FClamp %10087 %float_0 %float_1
      %10089 = OpFSub %float %float_1 %10088
      %10090 = OpExtInst %float %1 Pow %10089 %10026
               OpBranch %10083
      %10084 = OpLabel
      %10091 = OpFMul %float %10011 %10011
      %10092 = OpFMul %float %10080 %10091
      %10093 = OpFNegate %float %10092
      %10094 = OpExtInst %float %1 Fma %10093 %10092 %float_1
      %10095 = OpExtInst %float %1 FClamp %10094 %float_0 %float_1
      %10096 = OpFMul %float %10095 %10095
               OpBranch %10083
      %10083 = OpLabel
      %10097 = OpPhi %float %10090 %10085 %10096 %10084
               OpSelectionMerge %10098 None
               OpBranchConditional %10047 %10099 %10098
      %10099 = OpLabel
      %10100 = OpDot %float %10082 %10027
      %10101 = OpCompositeExtract %float %10002 0
      %10102 = OpFSub %float %10100 %10101
      %10103 = OpCompositeExtract %float %10002 1
      %10104 = OpFMul %float %10102 %10103
      %10105 = OpExtInst %float %1 FClamp %10104 %float_0 %float_1
      %10106 = OpFMul %float %10105 %10105
      %10107 = OpFMul %float %10097 %10106
               OpBranch %10098
      %10098 = OpLabel
      %10108 = OpPhi %float %10097 %10083 %10107 %10099
      %10109 = OpVectorTimesScalar %v3float %10025 %10108
      %10110 = OpFOrdGreaterThan %bool %10108 %float_0
               OpSelectionMerge %10111 DontFlatten
               OpBranchConditional %10110 %10112 %10111
      %10112 = OpLabel
      %10113 = OpINotEqual %bool %10050 %uint_0
               OpSelectionMerge %10114 DontFlatten
               OpBranchConditional %10113 %10115 %10114
      %10115 = OpLabel
      %10116 = OpDot %float %10062 %124
      %10117 = OpDot %float %9961 %10062
      %10118 = OpExtInst %float %1 FMix %float_1 %10117 %10116
      %10119 = OpFMul %float %10078 %10118
               OpBranch %10114
      %10114 = OpLabel
      %10120 = OpPhi %float %float_1 %10112 %10119 %10115
      %10121 = OpFAdd %float %10120 %10120
      %10122 = OpFOrdGreaterThan %bool %10121 %float_0
               OpSelectionMerge %10123 DontFlatten
               OpBranchConditional %10122 %10124 %10123
      %10124 = OpLabel
      %10125 = OpFMul %float %float_0_5 %10036
      %10126 = OpVectorTimesScalar %v3float %10037 %10125
      %10127 = OpFSub %v3float %10079 %10126
      %10128 = OpFAdd %v3float %10079 %10126
      %10129 = OpExtInst %float %1 NMax %8436 %8434
      %10130 = OpFOrdGreaterThan %bool %10036 %float_0
               OpSelectionMerge %10131 DontFlatten
               OpBranchConditional %10130 %10132 %10133
      %10133 = OpLabel
      %10134 = OpDot %float %10127 %10127
      %10135 = OpFAdd %float %10134 %float_1
      %10136 = OpFDiv %float %float_1 %10135
      %10137 = OpExtInst %float %1 InverseSqrt %10134
      %10138 = OpVectorTimesScalar %v3float %10127 %10137
      %10139 = OpDot %float %8459 %10138
               OpBranch %10131
      %10132 = OpLabel
      %10140 = OpDot %float %10127 %10127
      %10141 = OpDot %float %10128 %10128
      %10142 = OpExtInst %float %1 InverseSqrt %10140
      %10143 = OpExtInst %float %1 InverseSqrt %10141
      %10144 = OpFMul %float %10142 %10143
      %10145 = OpDot %float %10127 %10128
      %10146 = OpFMul %float %10145 %10144
      %10147 = OpExtInst %float %1 Fma %10146 %float_0_5 %float_0_5
      %10148 = OpExtInst %float %1 Fma %10142 %10143 %10147
      %10149 = OpFDiv %float %10144 %10148
      %10150 = OpDot %float %8459 %10127
      %10151 = OpDot %float %8459 %10128
      %10152 = OpFMul %float %10151 %10143
      %10153 = OpExtInst %float %1 Fma %10150 %10142 %10152
      %10154 = OpFMul %float %float_0_5 %10153
               OpBranch %10131
      %10131 = OpLabel
      %10155 = OpPhi %float %float_1 %10133 %10146 %10132
      %10156 = OpPhi %float %10139 %10133 %10154 %10132
      %10157 = OpPhi %float %10136 %10133 %10149 %10132
      %10158 = OpFOrdGreaterThan %bool %10032 %float_0
               OpSelectionMerge %10159 None
               OpBranchConditional %10158 %10160 %10159
      %10160 = OpLabel
      %10161 = OpFMul %float %10032 %10032
      %10162 = OpFMul %float %10161 %10157
      %10163 = OpExtInst %float %1 FClamp %10162 %float_0 %float_1
      %10164 = OpExtInst %float %1 Sqrt %10163
      %10165 = OpFOrdLessThan %bool %10156 %10164
               OpSelectionMerge %10166 None
               OpBranchConditional %10165 %10167 %10166
      %10167 = OpLabel
      %10168 = OpFNegate %float %10164
      %10169 = OpExtInst %float %1 NMax %10156 %10168
      %10170 = OpFAdd %float %10164 %10169
      %10171 = OpFMul %float %10170 %10170
      %10172 = OpFMul %float %float_4 %10164
      %10173 = OpFDiv %float %10171 %10172
               OpBranch %10166
      %10166 = OpLabel
      %10174 = OpPhi %float %10156 %10160 %10173 %10167
               OpBranch %10159
      %10159 = OpLabel
      %10175 = OpPhi %float %10156 %10131 %10174 %10166
      %10176 = OpExtInst %float %1 FClamp %10175 %float_0 %float_1
      %10177 = OpSelect %float %10041 %10157 %float_1
               OpSelectionMerge %10178 None
               OpBranchConditional %10130 %10179 %10178
      %10179 = OpLabel
      %10180 = OpFNegate %v3float %671
      %10181 = OpExtInst %v3float %1 Reflect %10180 %8459
      %10182 = OpFSub %v3float %10128 %10127
      %10183 = OpDot %float %10181 %10182
      %10184 = OpVectorTimesScalar %v3float %10181 %10183
      %10185 = OpFSub %v3float %10184 %10182
      %10186 = OpDot %float %10127 %10185
      %10187 = OpFMul %float %10183 %10183
      %10188 = OpFNegate %float %10187
      %10189 = OpExtInst %float %1 Fma %10036 %10036 %10188
      %10190 = OpFDiv %float %10186 %10189
      %10191 = OpExtInst %float %1 FClamp %10190 %float_0 %float_1
      %10192 = OpVectorTimesScalar %v3float %10182 %10191
      %10193 = OpFAdd %v3float %10127 %10192
               OpBranch %10178
      %10178 = OpLabel
      %10194 = OpPhi %v3float %10127 %10159 %10193 %10179
      %10195 = OpDot %float %10194 %10194
      %10196 = OpExtInst %float %1 InverseSqrt %10195
      %10197 = OpVectorTimesScalar %v3float %10194 %10196
      %10198 = OpExtInst %float %1 NMax %10129 %8434
      %10199 = OpFMul %float %10032 %10196
      %10200 = OpFNegate %float %10198
      %10201 = OpExtInst %float %1 Fma %10200 %10198 %float_1
      %10202 = OpFMul %float %10199 %10201
      %10203 = OpExtInst %float %1 FClamp %10202 %float_0 %float_1
      %10204 = OpFMul %float %10040 %10196
      %10205 = OpExtInst %float %1 FClamp %10204 %float_0 %float_1
      %10206 = OpExtInst %float %1 NMax %10036 %10032
      %10207 = OpFNegate %float %10206
      %10208 = OpExtInst %float %1 Fma %10207 %float_0_0500000007 %float_1
      %10209 = OpExtInst %float %1 FClamp %10208 %float_0 %float_1
      %10210 = OpBitcast %uint %10209
      %10211 = OpShiftLeftLogical %uint %10210 %uint_1
      %10212 = OpBitwiseOr %uint %uint_0 %10211
      %10213 = OpDot %float %8459 %10197
      %10214 = OpDot %float %8459 %671
      %10215 = OpDot %float %671 %10197
      %10216 = OpExtInst %float %1 Fma %float_2 %10215 %float_2
      %10217 = OpExtInst %float %1 InverseSqrt %10216
      %10218 = OpFAdd %float %10213 %10214
      %10219 = OpFMul %float %10218 %10217
      %10220 = OpExtInst %float %1 FClamp %10219 %float_0 %float_1
      %10221 = OpExtInst %float %1 Fma %10217 %10215 %10217
      %10222 = OpExtInst %float %1 FClamp %10221 %float_0 %float_1
      %10223 = OpFOrdGreaterThan %bool %10203 %float_0
               OpSelectionMerge %10224 None
               OpBranchConditional %10223 %10225 %10224
      %10225 = OpLabel
      %10226 = OpFNegate %float %10203
      %10227 = OpExtInst %float %1 Fma %10226 %10203 %float_1
      %10228 = OpExtInst %float %1 Sqrt %10227
      %10229 = OpFMul %float %float_2 %10213
      %10230 = OpFNegate %float %10215
      %10231 = OpExtInst %float %1 Fma %10229 %10214 %10230
      %10232 = OpFOrdGreaterThanEqual %bool %10231 %10228
               OpSelectionMerge %10233 None
               OpBranchConditional %10232 %10234 %10235
      %10235 = OpLabel
      %10236 = OpFNegate %float %10231
      %10237 = OpExtInst %float %1 Fma %10236 %10231 %float_1
      %10238 = OpExtInst %float %1 InverseSqrt %10237
      %10239 = OpFMul %float %10203 %10238
      %10240 = OpExtInst %float %1 Fma %10236 %10213 %10214
      %10241 = OpFMul %float %10239 %10240
      %10242 = OpFMul %float %float_2 %10214
      %10243 = OpExtInst %float %1 Fma %10242 %10214 %float_n1
      %10244 = OpExtInst %float %1 Fma %10236 %10215 %10243
      %10245 = OpFMul %float %10239 %10244
      %10246 = OpFNegate %float %10213
      %10247 = OpExtInst %float %1 Fma %10246 %10213 %float_1
      %10248 = OpFNegate %float %10214
      %10249 = OpExtInst %float %1 Fma %10248 %10214 %10247
      %10250 = OpExtInst %float %1 Fma %10230 %10215 %10249
      %10251 = OpFMul %float %10229 %10214
      %10252 = OpExtInst %float %1 Fma %10251 %10215 %10250
      %10253 = OpExtInst %float %1 FClamp %10252 %float_0 %float_1
      %10254 = OpExtInst %float %1 Sqrt %10253
      %10255 = OpFMul %float %10239 %10254
      %10256 = OpFMul %float %10255 %float_2
      %10257 = OpFMul %float %10256 %10214
      %10258 = OpExtInst %float %1 Fma %10213 %10228 %10214
      %10259 = OpExtInst %float %1 Fma %10239 %10240 %10258
      %10260 = OpExtInst %float %1 Fma %10215 %10228 %float_1
      %10261 = OpExtInst %float %1 Fma %10239 %10244 %10260
      %10262 = OpFMul %float %10255 %10261
      %10263 = OpFMul %float %10259 %10261
      %10264 = OpFMul %float %10257 %10259
      %10265 = OpFMul %float %float_0_25 %10257
      %10266 = OpFMul %float %10265 %10259
      %10267 = OpExtInst %float %1 Fma %float_n0_5 %10262 %10266
      %10268 = OpFMul %float %10263 %10267
      %10269 = OpFMul %float %10262 %float_n2
      %10270 = OpExtInst %float %1 Fma %10257 %10259 %10269
      %10271 = OpFMul %float %10264 %10270
      %10272 = OpExtInst %float %1 Fma %10262 %10262 %10271
      %10273 = OpFMul %float %10261 %10261
      %10274 = OpExtInst %float %1 Fma %10215 %10228 %10261
      %10275 = OpExtInst %float %1 Fma %float_n0_5 %10274 %float_n0_5
      %10276 = OpFMul %float %10263 %10275
      %10277 = OpExtInst %float %1 Fma %10258 %10273 %10276
      %10278 = OpExtInst %float %1 Fma %10259 %10277 %10272
      %10279 = OpFMul %float %float_2 %10268
      %10280 = OpFMul %float %10268 %10268
      %10281 = OpExtInst %float %1 Fma %10278 %10278 %10280
      %10282 = OpFDiv %float %10279 %10281
      %10283 = OpFMul %float %10282 %10278
      %10284 = OpFNegate %float %10282
      %10285 = OpExtInst %float %1 Fma %10284 %10268 %float_1
      %10286 = OpFMul %float %10283 %10255
      %10287 = OpExtInst %float %1 Fma %10285 %10241 %10286
      %10288 = OpFMul %float %10283 %10257
      %10289 = OpExtInst %float %1 Fma %10285 %10245 %10288
      %10290 = OpExtInst %float %1 Fma %10213 %10228 %10287
      %10291 = OpExtInst %float %1 Fma %10215 %10228 %10289
      %10292 = OpExtInst %float %1 Fma %float_2 %10291 %float_2
      %10293 = OpExtInst %float %1 InverseSqrt %10292
      %10294 = OpFAdd %float %10290 %10214
      %10295 = OpFMul %float %10294 %10293
      %10296 = OpExtInst %float %1 FClamp %10295 %float_0 %float_1
      %10297 = OpExtInst %float %1 Fma %10293 %10291 %10293
      %10298 = OpExtInst %float %1 FClamp %10297 %float_0 %float_1
               OpBranch %10233
      %10234 = OpLabel
      %10299 = OpExtInst %float %1 FAbs %10214
               OpBranch %10233
      %10233 = OpLabel
      %10300 = OpPhi %float %10296 %10235 %float_1 %10234
      %10301 = OpPhi %float %10298 %10235 %10299 %10234
               OpBranch %10224
      %10224 = OpLabel
      %10302 = OpPhi %float %10220 %10178 %10300 %10233
      %10303 = OpPhi %float %10222 %10178 %10301 %10233
      %10304 = OpExtInst %float %1 FAbs %10214
      %10305 = OpFAdd %float %10304 %float_9_99999975en06
      %10306 = OpExtInst %float %1 FClamp %10305 %float_0 %float_1
      %10307 = OpFMul %float %10129 %10129
      %10308 = OpFMul %float %10307 %10307
      %10309 = OpShiftRightLogical %uint %10212 %uint_1
      %10310 = OpBitcast %float %10309
      %10311 = OpExtInst %float %1 FClamp %10214 %float_0 %float_1
      %10312 = OpExtInst %float %1 FClamp %10176 %float_0 %float_1
      %10313 = OpExtInst %float %1 FClamp %10222 %float_0 %float_1
      %10314 = OpExtInst %float %1 FClamp %10220 %float_0 %float_1
      %10315 = OpBitcast %int %10308
      %10316 = OpISub %int %int_2129859010 %10315
      %10317 = OpBitcast %float %10316
      %10318 = OpExtInst %float %1 Fma %float_2 %10317 %float_n1
      %10319 = OpExtInst %float %1 Log2 %10318
      %10320 = OpFMul %float %float_0_055555556 %10319
      %10321 = OpExtInst %float %1 FClamp %10320 %float_0 %float_1
      %10322 = OpFSub %float %float_1 %10313
      %10323 = OpFMul %float %10322 %10322
      %10324 = OpFMul %float %10323 %10323
      %10325 = OpExtInst %float %1 Fma %10324 %10322 %10313
      %10326 = OpFSub %float %float_1 %10311
      %10327 = OpFMul %float %10326 %10326
      %10328 = OpFMul %float %10327 %10327
      %10329 = OpFMul %float %10328 %10326
      %10330 = OpExtInst %float %1 Fma %float_n0_75 %10329 %float_1
      %10331 = OpFSub %float %float_1 %10312
      %10332 = OpFMul %float %10331 %10331
      %10333 = OpFMul %float %10332 %10332
      %10334 = OpFMul %float %10333 %10331
      %10335 = OpExtInst %float %1 Fma %float_n0_75 %10334 %float_1
      %10336 = OpFMul %float %10330 %10335
      %10337 = OpExtInst %float %1 Fma %float_2_20000005 %10321 %float_n0_5
      %10338 = OpExtInst %float %1 FClamp %10337 %float_0 %float_1
      %10339 = OpExtInst %float %1 FMix %10325 %10336 %10338
      %10340 = OpExtInst %float %1 Fma %float_34_5 %10321 %float_n59
      %10341 = OpExtInst %float %1 Fma %10340 %10321 %float_24_5
      %10342 = OpFMul %float %10341 %10313
      %10343 = OpExtInst %float %1 Fma %float_73_1999969 %10321 %float_n21_2000008
      %10344 = OpExtInst %float %1 NMax %10343 %float_8_89999962
      %10345 = OpFNegate %float %10344
      %10346 = OpBitcast %int %10314
      %10347 = OpShiftRightArithmetic %int %10346 %int_1
      %10348 = OpIAdd %int %int_532487669 %10347
      %10349 = OpBitcast %float %10348
      %10350 = OpFMul %float %10345 %10349
      %10351 = OpExtInst %float %1 Exp2 %10350
      %10352 = OpFMul %float %10342 %10351
      %10353 = OpExtInst %float %1 Fma %10352 %10310 %10339
      %10354 = OpFMul %float %float_0_318309873 %10353
      %10355 = OpVectorTimesScalar %v3float %8778 %10354
      %10356 = OpFMul %float %10177 %10176
      %10357 = OpVectorTimesScalar %v3float %134 %10356
      %10358 = OpFMul %v3float %10355 %10357
      %10359 = OpBitwiseAnd %uint %10212 %uint_1
      %10360 = OpIEqual %bool %10359 %uint_1
               OpSelectionMerge %10361 None
               OpBranchConditional %10360 %10362 %10363
      %10363 = OpLabel
      %10364 = OpFOrdGreaterThan %bool %10205 %float_0
               OpSelectionMerge %10365 None
               OpBranchConditional %10364 %10366 %10365
      %10366 = OpLabel
      %10367 = OpFMul %float %10205 %10205
      %10368 = OpExtInst %float %1 Fma %10303 %float_3_5999999 %float_0_400000006
      %10369 = OpFDiv %float %10367 %10368
      %10370 = OpExtInst %float %1 Fma %10307 %10307 %10369
      %10371 = OpExtInst %float %1 FClamp %10370 %float_0 %float_1
               OpBranch %10365
      %10365 = OpLabel
      %10372 = OpPhi %float %10308 %10363 %10371 %10366
               OpSelectionMerge %10373 None
               OpBranchConditional %10223 %10374 %10373
      %10374 = OpLabel
      %10375 = OpFMul %float %float_0_25 %10203
      %10376 = OpBitcast %int %10372
      %10377 = OpShiftRightArithmetic %int %10376 %int_1
      %10378 = OpIAdd %int %int_532487669 %10377
      %10379 = OpBitcast %float %10378
      %10380 = OpExtInst %float %1 Fma %float_3 %10379 %10203
      %10381 = OpFMul %float %10375 %10380
      %10382 = OpFAdd %float %10303 %float_0_00100000005
      %10383 = OpFDiv %float %10381 %10382
      %10384 = OpFAdd %float %10372 %10383
      %10385 = OpFDiv %float %10372 %10384
               OpBranch %10373
      %10373 = OpLabel
      %10386 = OpPhi %float %float_1 %10365 %10385 %10374
      %10387 = OpPhi %float %10372 %10365 %10384 %10374
      %10388 = OpFOrdLessThan %bool %10155 %float_1
               OpSelectionMerge %10389 None
               OpBranchConditional %10388 %10390 %10389
      %10390 = OpLabel
      %10391 = OpFSub %float %float_1_00010002 %10155
      %10392 = OpFAdd %float %float_1 %10155
      %10393 = OpFDiv %float %10391 %10392
      %10394 = OpExtInst %float %1 Sqrt %10393
      %10395 = OpFMul %float %float_0_25 %10394
      %10396 = OpBitcast %int %10387
      %10397 = OpShiftRightArithmetic %int %10396 %int_1
      %10398 = OpIAdd %int %int_532487669 %10397
      %10399 = OpBitcast %float %10398
      %10400 = OpExtInst %float %1 Fma %float_3 %10399 %10394
      %10401 = OpFMul %float %10395 %10400
      %10402 = OpFAdd %float %10303 %float_0_00100000005
      %10403 = OpFDiv %float %10401 %10402
      %10404 = OpFAdd %float %10387 %10403
      %10405 = OpFDiv %float %10387 %10404
      %10406 = OpExtInst %float %1 Sqrt %10405
      %10407 = OpFMul %float %10386 %10406
               OpBranch %10389
      %10389 = OpLabel
      %10408 = OpPhi %float %10386 %10373 %10407 %10390
      %10409 = OpFNegate %float %10302
      %10410 = OpExtInst %float %1 Fma %10302 %10372 %10409
      %10411 = OpExtInst %float %1 Fma %10410 %10302 %float_1
      %10412 = OpFMul %float %float_3_14159274 %10411
      %10413 = OpFMul %float %10412 %10411
      %10414 = OpFDiv %float %10372 %10413
      %10415 = OpFMul %float %10414 %10408
      %10416 = OpExtInst %float %1 Sqrt %10372
      %10417 = OpFSub %float %float_1 %10416
      %10418 = OpExtInst %float %1 Fma %10306 %10417 %10416
      %10419 = OpExtInst %float %1 Fma %10176 %10417 %10416
      %10420 = OpFMul %float %10306 %10419
      %10421 = OpExtInst %float %1 Fma %10176 %10418 %10420
      %10422 = OpFDiv %float %float_0_5 %10421
      %10423 = OpFSub %float %float_1 %10303
      %10424 = OpFMul %float %10423 %10423
      %10425 = OpFMul %float %10424 %10424
      %10426 = OpFMul %float %10425 %10423
      %10427 = OpCompositeExtract %float %8555 1
      %10428 = OpFMul %float %float_50 %10427
      %10429 = OpExtInst %float %1 FClamp %10428 %float_0 %float_1
      %10430 = OpFMul %float %10429 %10426
      %10431 = OpCompositeConstruct %v3float %10430 %10430 %10430
      %10432 = OpFNegate %float %10425
      %10433 = OpExtInst %float %1 Fma %10432 %10423 %float_1
      %10434 = OpVectorTimesScalar %v3float %8555 %10433
      %10435 = OpFAdd %v3float %10431 %10434
      %10436 = OpFMul %float %10415 %10422
      %10437 = OpVectorTimesScalar %v3float %10435 %10436
      %10438 = OpFMul %v3float %10357 %10437
               OpBranch %10361
      %10362 = OpLabel
               OpBranch %10361
      %10361 = OpLabel
      %10439 = OpPhi %v3float %10438 %10389 %108 %10362
      %10440 = OpCompositeExtract %float %8555 1
      %10441 = OpFMul %float %float_50 %10440
      %10442 = OpExtInst %float %1 FClamp %10441 %float_0 %float_1
      %10443 = OpCompositeConstruct %v3float %10442 %10442 %10442
      %10444 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
      %10445 = OpLoad %type_sampler %View_ShadingEnergySampler
      %10446 = OpCompositeConstruct %v2float %10306 %10129
      %10447 = OpSampledImage %type_sampled_image %10444 %10445
      %10448 = OpImageSampleExplicitLod %v4float %10447 %10446 Lod %float_0
      %10449 = OpAccessChain %_ptr_Uniform_uint %View %uint_41
      %10450 = OpLoad %uint %10449
      %10451 = OpINotEqual %bool %10450 %uint_0
      %10452 = OpCompositeConstruct %v3bool %10451 %10451 %10451
      %10453 = OpCompositeExtract %float %10448 0
      %10454 = OpFSub %float %float_1 %10453
      %10455 = OpFDiv %float %10454 %10453
      %10456 = OpVectorTimesScalar %v3float %8555 %10455
      %10457 = OpFAdd %v3float %134 %10456
      %10458 = OpSelect %v3float %10452 %10457 %134
      %10459 = OpVectorTimesScalar %v3float %8555 %10453
      %10460 = OpFSub %v3float %10443 %8555
      %10461 = OpCompositeExtract %float %10448 1
      %10462 = OpVectorTimesScalar %v3float %10460 %10461
      %10463 = OpFAdd %v3float %10459 %10462
      %10464 = OpFMul %v3float %10458 %10463
      %10465 = OpAccessChain %_ptr_Uniform_uint %View %uint_42
      %10466 = OpLoad %uint %10465
      %10467 = OpINotEqual %bool %10466 %uint_0
      %10468 = OpDot %float %10464 %179
      %10469 = OpFSub %float %float_1 %10468
      %10470 = OpSelect %float %10467 %10469 %float_1
      %10471 = OpVectorTimesScalar %v3float %10358 %10470
      %10472 = OpFMul %v3float %10439 %10458
      %10473 = OpVectorTimesScalar %v3float %10472 %10046
      %10474 = OpVectorTimesScalar %v3float %10109 %10120
      %10475 = OpFMul %v3float %10473 %10474
      %10476 = OpExtInst %v3float %1 Fma %10471 %10474 %108
               OpBranch %10123
      %10123 = OpLabel
      %10477 = OpPhi %v3float %469 %10114 %10476 %10361
      %10478 = OpPhi %v3float %469 %10114 %10475 %10361
               OpBranch %10111
      %10111 = OpLabel
      %10479 = OpPhi %v3float %469 %10098 %10477 %10123
      %10480 = OpPhi %v3float %469 %10098 %10478 %10123
      %10481 = OpCompositeExtract %float %10479 0
      %10482 = OpCompositeExtract %float %10479 1
      %10483 = OpCompositeExtract %float %10479 2
      %10484 = OpCompositeConstruct %v4float %10481 %10482 %10483 %float_0
      %10485 = OpCompositeExtract %float %10480 0
      %10486 = OpCompositeExtract %float %10480 1
      %10487 = OpCompositeExtract %float %10480 2
      %10488 = OpCompositeConstruct %v4float %10485 %10486 %10487 %float_0
      %10489 = OpBitwiseAnd %uint %10077 %8853
      %10490 = OpINotEqual %bool %10489 %uint_0
               OpSelectionMerge %10491 Flatten
               OpBranchConditional %10490 %10492 %10491
      %10492 = OpLabel
      %10493 = OpFAdd %v4float %9977 %10484
      %10494 = OpFAdd %v4float %9980 %10488
               OpBranch %10491
      %10491 = OpLabel
       %9978 = OpPhi %v4float %9977 %10111 %10493 %10492
       %9981 = OpPhi %v4float %9980 %10111 %10494 %10492
               OpBranch %9979
       %9979 = OpLabel
       %9983 = OpIAdd %uint %9982 %uint_1
               OpBranch %9976
       %9985 = OpLabel
      %10495 = OpAccessChain %_ptr_Uniform_uint %OpaqueBasePass %uint_16
      %10496 = OpLoad %uint %10495
      %10497 = OpIEqual %bool %10496 %uint_0
      %10498 = OpCompositeConstruct %v4bool %10497 %10497 %10497 %10497
      %10499 = OpSelect %v4float %10498 %104 %9977
      %10500 = OpSelect %v4float %10498 %104 %9980
      %10501 = OpVectorShuffle %v3float %10499 %10499 0 1 2
      %10502 = OpVectorShuffle %v3float %10500 %10500 0 1 2
      %10503 = OpFAdd %v3float %10501 %10502
      %10504 = OpAccessChain %_ptr_Uniform_float %View %uint_18
      %10505 = OpLoad %float %10504
      %10506 = OpFOrdGreaterThan %bool %10505 %float_0
               OpSelectionMerge %10507 DontFlatten
               OpBranchConditional %10506 %10508 %10507
      %10508 = OpLabel
      %10509 = OpIAdd %uint %8402 %uint_1
      %10510 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10509
      %10511 = OpLoad %v4float %10510
      %10512 = OpVectorShuffle %v3float %10511 %10511 0 1 2
      %10513 = OpIAdd %uint %8402 %uint_18
      %10514 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10513
      %10515 = OpLoad %v4float %10514
      %10516 = OpIAdd %uint %8402 %uint_17
      %10517 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10516
      %10518 = OpLoad %v4float %10517
      %10519 = OpCompositeExtract %float %10518 3
      %10520 = OpVectorShuffle %v3float %10515 %10515 0 1 2
      %10521 = OpIAdd %uint %8402 %uint_24
      %10522 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10521
      %10523 = OpLoad %v4float %10522
      %10524 = OpCompositeExtract %float %10523 3
      %10525 = OpIAdd %uint %8402 %uint_25
      %10526 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10525
      %10527 = OpLoad %v4float %10526
      %10528 = OpCompositeExtract %float %10527 3
      %10529 = OpIAdd %uint %8402 %uint_31
      %10530 = OpAccessChain %_ptr_Uniform_v4float %Scene_GPUScene_GPUScenePrimitiveSceneData %int_0 %10529
      %10531 = OpLoad %v4float %10530
      %10532 = OpCompositeExtract %float %10531 0
      %10533 = OpCompositeConstruct %v3float %10519 %10524 %10528
      %10534 = OpFSub %v3float %604 %10512
      %10535 = OpFSub %v3float %654 %10520
      %10536 = OpVectorTimesScalar %v3float %10534 %float_2097152
      %10537 = OpFAdd %v3float %10536 %10535
      %10538 = OpExtInst %v3float %1 FAbs %10537
      %10539 = OpFAdd %v3float %10533 %134
      %10540 = OpFOrdGreaterThan %v3bool %10538 %10539
      %10541 = OpAny %bool %10540
               OpSelectionMerge %10542 None
               OpBranchConditional %10541 %10543 %10544
      %10544 = OpLabel
      %10545 = OpFOrdGreaterThan %bool %10532 %float_0
               OpSelectionMerge %10546 None
               OpBranchConditional %10545 %10547 %10546
      %10547 = OpLabel
      %10548 = OpFSub %v3float %653 %593
      %10549 = OpExtInst %v3float %1 FAbs %10548
      %10550 = OpCompositeExtract %float %10549 0
      %10551 = OpCompositeExtract %float %10549 1
      %10552 = OpCompositeExtract %float %10549 2
      %10553 = OpExtInst %float %1 NMax %10551 %10552
      %10554 = OpExtInst %float %1 NMax %10550 %10553
      %10555 = OpFSub %float %10554 %10532
      %10556 = OpExtInst %float %1 FAbs %10555
      %10557 = OpFMul %float %10556 %float_20
      %10558 = OpExtInst %float %1 FClamp %10557 %float_0 %float_1
      %10559 = OpFSub %float %float_1 %10558
      %10560 = OpVectorTimesScalar %v3float %146 %10559
               OpBranch %10546
      %10546 = OpLabel
      %10561 = OpPhi %v3float %108 %10544 %10560 %10547
               OpBranch %10542
      %10543 = OpLabel
      %10562 = OpFMul %v3float %604 %139
      %10563 = OpFMul %v3float %654 %139
      %10564 = OpCompositeExtract %float %10562 0
      %10565 = OpCompositeExtract %float %10563 0
      %10566 = OpCompositeExtract %float %10562 1
      %10567 = OpCompositeExtract %float %10563 1
      %10568 = OpFAdd %float %10564 %10566
      %10569 = OpFAdd %float %10565 %10567
      %10570 = OpCompositeExtract %float %10562 2
      %10571 = OpCompositeExtract %float %10563 2
      %10572 = OpFAdd %float %10568 %10570
      %10573 = OpFAdd %float %10569 %10571
      %10574 = OpFMul %float %10572 %float_4194_3042
      %10575 = OpExtInst %float %1 Fract %10574
      %10576 = OpExtInst %float %1 Fma %10573 %float_0_00200000009 %10575
      %10577 = OpExtInst %float %1 Fract %10576
      %10578 = OpCompositeConstruct %v3float %10577 %10577 %10577
      %10579 = OpFOrdGreaterThan %v3bool %10578 %143
      %10580 = OpSelect %v3float %10579 %134 %108
      %10581 = OpExtInst %v3float %1 FMix %140 %141 %10580
               OpBranch %10542
      %10542 = OpLabel
      %10582 = OpPhi %v3float %108 %10546 %10581 %10543
      %10583 = OpPhi %v3float %10561 %10546 %10581 %10543
               OpBranch %10507
      %10507 = OpLabel
      %10584 = OpPhi %v3float %108 %9985 %10582 %10542
      %10585 = OpPhi %v3float %108 %9985 %10583 %10542
      %10586 = OpFAdd %v3float %10503 %8779
      %10587 = OpFAdd %v3float %10586 %10585
      %10588 = OpVectorShuffle %v3float %628 %628 0 1 2
      %10589 = OpVectorTimesScalar %v3float %10588 %float_3_14159274
      %10590 = OpVectorTimesScalar %v3float %8763 %float_3_14159274
      %10591 = OpDot %float %8459 %671
      %10592 = OpExtInst %float %1 NMax %float_0 %10591
      %10593 = OpLoad %type_2d_image %OpaqueBasePass_PreIntegratedGFTexture
      %10594 = OpCompositeConstruct %v2float %10592 %8436
      %10595 = OpSampledImage %type_sampled_image %10593 %8557
      %10596 = OpImageSampleExplicitLod %v4float %10595 %10594 Lod %float_0
      %10597 = OpCompositeExtract %float %10596 0
      %10598 = OpVectorTimesScalar %v3float %8555 %10597
      %10599 = OpCompositeExtract %float %8555 1
      %10600 = OpFMul %float %float_50 %10599
      %10601 = OpExtInst %float %1 FClamp %10600 %float_0 %float_1
      %10602 = OpCompositeExtract %float %10596 1
      %10603 = OpFMul %float %10601 %10602
      %10604 = OpCompositeConstruct %v3float %10603 %10603 %10603
      %10605 = OpFAdd %v3float %10598 %10604
      %10606 = OpLoad %type_2d_image %SingleLayerWater_SceneDepthWithoutSingleLayerWaterTexture
      %10607 = OpAccessChain %_ptr_Uniform_v2float %SingleLayerWater %uint_2
      %10608 = OpLoad %v2float %10607
      %10609 = OpLoad %type_2d_image %SingleLayerWater_SceneColorWithoutSingleLayerWaterTexture
      %10610 = OpAccessChain %_ptr_Uniform_v4float %SingleLayerWater %uint_0
      %10611 = OpLoad %v4float %10610
      %10612 = OpVectorShuffle %v2float %10611 %10611 0 1
      %10613 = OpVectorShuffle %v2float %10611 %10611 2 3
      %10614 = OpAccessChain %_ptr_Uniform_v4float %SingleLayerWater %uint_1
      %10615 = OpLoad %v4float %10614
      %10616 = OpFOrdGreaterThan %bool %8460 %float_0
               OpSelectionMerge %10617 None
               OpBranchConditional %10616 %10618 %10617
      %10618 = OpLabel
      %10619 = OpExtInst %float %1 NMin %8535 %float_0_99000001
      %10620 = OpExtInst %float %1 Sqrt %10619
      %10621 = OpFSub %float %float_1 %10620
      %10622 = OpFDiv %float %float_2 %10621
      %10623 = OpFSub %float %10622 %float_1
      %10624 = OpExtInst %v2float %1 FClamp %662 %10612 %10613
      %10625 = OpSampledImage %type_sampled_image %10606 %8557
      %10626 = OpImageSampleExplicitLod %v4float %10625 %10624 Lod %float_0
      %10627 = OpCompositeExtract %float %10626 0
      %10628 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_0
      %10629 = OpLoad %float %10628
      %10630 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_1
      %10631 = OpLoad %float %10630
      %10632 = OpExtInst %float %1 Fma %10627 %10629 %10631
      %10633 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_2
      %10634 = OpLoad %float %10633
      %10635 = OpAccessChain %_ptr_Uniform_float %View %uint_5 %uint_3
      %10636 = OpLoad %float %10635
      %10637 = OpFNegate %float %10636
      %10638 = OpExtInst %float %1 Fma %10627 %10634 %10637
      %10639 = OpFDiv %float %float_1 %10638
      %10640 = OpFAdd %float %10632 %10639
      %10641 = OpCompositeExtract %v4float %598 0
      %10642 = OpVectorShuffle %v3float %10641 %10641 0 1 2
      %10643 = OpCompositeExtract %v4float %598 1
      %10644 = OpVectorShuffle %v3float %10643 %10643 0 1 2
      %10645 = OpCompositeExtract %v4float %598 2
      %10646 = OpVectorShuffle %v3float %10645 %10645 0 1 2
      %10647 = OpCompositeConstruct %mat3v3float %10642 %10644 %10646
      %10648 = OpMatrixTimesVector %v3float %10647 %8459
      %10649 = OpExtInst %v3float %1 Normalize %10648
      %10650 = OpVectorShuffle %v2float %10649 %10649 0 1
      %10651 = OpFSub %float %8386 %float_1
      %10652 = OpVectorTimesScalar %v2float %10650 %10651
      %10653 = OpVectorShuffle %v2float %616 %616 0 1
      %10654 = OpFMul %v2float %10652 %10653
      %10655 = OpVectorShuffle %v2float %618 %618 2 3
      %10656 = OpFMul %v2float %10654 %10655
      %10657 = OpCompositeExtract %float %10615 0
      %10658 = OpCompositeExtract %float %10615 1
      %10659 = OpFMul %float %10658 %10657
      %10660 = OpCompositeConstruct %v2float %10657 %10659
      %10661 = OpVectorShuffle %v2float %10615 %10615 2 3
      %10662 = OpFMul %v2float %10661 %319
      %10663 = OpFMul %v2float %10662 %10660
      %10664 = OpFMul %v2float %10656 %10663
      %10665 = OpFNegate %float %8388
      %10666 = OpFMul %float %8388 %float_n0_5
      %10667 = OpExtInst %float %1 FAbs %10666
      %10668 = OpExtInst %float %1 FClamp %10667 %float_0 %float_50
      %10669 = OpExtInst %float %1 NMax %float_1 %10668
      %10670 = OpFDiv %float %float_1 %10669
      %10671 = OpFSub %float %10640 %657
      %10672 = OpExtInst %float %1 Fma %10671 %10670 %10665
      %10673 = OpExtInst %float %1 FClamp %10672 %float_0 %float_1
      %10674 = OpVectorTimesScalar %v2float %10664 %10673
      %10675 = OpVectorTimesScalar %v2float %10674 %float_4
      %10676 = OpFMul %float %10671 %float_0_0333333351
      %10677 = OpExtInst %float %1 FClamp %10676 %float_0 %float_1
      %10678 = OpVectorTimesScalar %v2float %10675 %10677
      %10679 = OpFAdd %v2float %10624 %10678
      %10680 = OpExtInst %v2float %1 FClamp %10679 %10612 %10613
      %10681 = OpSampledImage %type_sampled_image %10606 %8557
      %10682 = OpImageGather %v4float %10681 %10680 %int_0 None
      %10683 = OpCompositeExtract %float %10682 0
      %10684 = OpExtInst %float %1 Fma %10683 %10629 %10631
      %10685 = OpExtInst %float %1 Fma %10683 %10634 %10637
      %10686 = OpFDiv %float %float_1 %10685
      %10687 = OpFAdd %float %10684 %10686
      %10688 = OpCompositeExtract %float %10682 1
      %10689 = OpExtInst %float %1 Fma %10688 %10629 %10631
      %10690 = OpExtInst %float %1 Fma %10688 %10634 %10637
      %10691 = OpFDiv %float %float_1 %10690
      %10692 = OpFAdd %float %10689 %10691
      %10693 = OpCompositeExtract %float %10682 2
      %10694 = OpExtInst %float %1 Fma %10693 %10629 %10631
      %10695 = OpExtInst %float %1 Fma %10693 %10634 %10637
      %10696 = OpFDiv %float %float_1 %10695
      %10697 = OpFAdd %float %10694 %10696
      %10698 = OpCompositeExtract %float %10682 3
      %10699 = OpExtInst %float %1 Fma %10698 %10629 %10631
      %10700 = OpExtInst %float %1 Fma %10698 %10634 %10637
      %10701 = OpFDiv %float %float_1 %10700
      %10702 = OpFAdd %float %10699 %10701
      %10703 = OpCompositeConstruct %v4float %10687 %10692 %10697 %10702
      %10704 = OpCompositeConstruct %v4float %657 %657 %657 %657
      %10705 = OpFOrdLessThan %v4bool %10703 %10704
      %10706 = OpAny %bool %10705
               OpSelectionMerge %10707 None
               OpBranchConditional %10706 %10708 %10709
      %10709 = OpLabel
      %10710 = OpFMul %v2float %10680 %10608
      %10711 = OpVectorTimesScalar %v2float %10710 %float_1
      %10712 = OpFSub %v2float %10711 %155
      %10713 = OpExtInst %v2float %1 Fract %10712
      %10714 = OpVectorShuffle %v4float %10682 %10682 3 2 0 1
      %10715 = OpCompositeExtract %float %10713 0
      %10716 = OpFSub %float %float_1 %10715
      %10717 = OpCompositeExtract %float %10713 1
      %10718 = OpFSub %float %float_1 %10717
      %10719 = OpFMul %float %10716 %10718
      %10720 = OpCompositeInsert %v4float %10719 %551 0
      %10721 = OpFMul %float %10715 %10718
      %10722 = OpCompositeInsert %v4float %10721 %10720 1
      %10723 = OpFMul %float %10716 %10717
      %10724 = OpCompositeInsert %v4float %10723 %10722 2
      %10725 = OpFMul %float %10715 %10717
      %10726 = OpCompositeInsert %v4float %10725 %10724 3
      %10727 = OpDot %float %10714 %10726
      %10728 = OpExtInst %float %1 Fma %10727 %10629 %10631
      %10729 = OpExtInst %float %1 Fma %10727 %10634 %10637
      %10730 = OpFDiv %float %float_1 %10729
      %10731 = OpFAdd %float %10728 %10730
               OpBranch %10707
      %10708 = OpLabel
               OpBranch %10707
      %10707 = OpLabel
      %10732 = OpPhi %float %10731 %10709 %10640 %10708
      %10733 = OpPhi %float %10727 %10709 %10627 %10708
      %10734 = OpCompositeConstruct %v2bool %10706 %10706
      %10735 = OpSelect %v2float %10734 %10624 %10680
      %10736 = OpExtInst %float %1 NMax %float_9_99999996en13 %10733
      %10737 = OpFSub %float %10732 %657
      %10738 = OpExtInst %float %1 NMax %float_0 %10737
      %10739 = OpVectorShuffle %v3float %8445 %8445 0 1 2
      %10740 = OpVectorShuffle %v3float %8444 %468 0 1 2
      %10741 = OpFMul %v3float %10739 %10740
      %10742 = OpVectorShuffle %v3float %8447 %468 0 1 2
      %10743 = OpFMul %float %10738 %float_0_0199999996
      %10744 = OpExtInst %float %1 FClamp %10743 %float_0 %float_1
      %10745 = OpCompositeConstruct %v3float %10744 %10744 %10744
      %10746 = OpExtInst %v3float %1 FMix %134 %10742 %10745
      %10747 = OpExtInst %v3float %1 NMax %10740 %197
      %10748 = OpFDiv %float %float_1 %10623
               OpSelectionMerge %10749 None
               OpSwitch %uint_0 %10750
      %10750 = OpLabel
      %10751 = OpDot %float %671 %8459
      %10752 = OpFMul %float %10748 %10748
      %10753 = OpFNegate %float %10751
      %10754 = OpExtInst %float %1 Fma %10753 %10751 %float_1
      %10755 = OpFNegate %float %10752
      %10756 = OpExtInst %float %1 Fma %10755 %10754 %float_1
      %10757 = OpFOrdLessThan %bool %10756 %float_0
               OpSelectionMerge %10758 None
               OpBranchConditional %10757 %10759 %10758
      %10759 = OpLabel
      %10760 = OpFNegate %v3float %671
      %10761 = OpExtInst %v3float %1 Reflect %10760 %8459
               OpBranch %10749
      %10758 = OpLabel
      %10762 = OpFOrdGreaterThanEqual %bool %10751 %float_0
      %10763 = OpSelect %float %10762 %float_1 %float_n1
      %10764 = OpFNegate %float %10763
      %10765 = OpExtInst %float %1 Sqrt %10756
      %10766 = OpFMul %float %10764 %10765
      %10767 = OpExtInst %float %1 Fma %10748 %10751 %10766
      %10768 = OpVectorTimesScalar %v3float %8459 %10767
      %10769 = OpVectorTimesScalar %v3float %671 %10748
      %10770 = OpFSub %v3float %10768 %10769
               OpBranch %10749
      %10749 = OpLabel
      %10771 = OpPhi %v3float %10761 %10759 %10770 %10758
      %10772 = OpPhi %bool %false %10759 %true %10758
               OpSelectionMerge %10773 None
               OpBranchConditional %10772 %10774 %10773
      %10774 = OpLabel
      %10775 = OpFNegate %v3float %630
      %10776 = OpDot %float %10775 %10771
      %10777 = OpExtInst %float %1 Fma %float_1_54999995 %float_0 %float_n0
      %10778 = OpExtInst %float %1 Fma %10777 %10776 %float_1
      %10779 = OpFNegate %float %10777
      %10780 = OpExtInst %float %1 Fma %10779 %10777 %float_1
      %10781 = OpFMul %float %float_12_566371 %10778
      %10782 = OpFMul %float %10781 %10778
      %10783 = OpFDiv %float %10780 %10782
               OpBranch %10773
      %10773 = OpLabel
      %10784 = OpPhi %float %float_0 %10749 %10783 %10774
      %10785 = OpCompositeConstruct %v4float %645 %646 %10736 %float_1
      %10786 = OpMatrixTimesVector %v4float %602 %10785
      %10787 = OpVectorShuffle %v3float %10786 %10786 0 1 2
      %10788 = OpCompositeExtract %float %10786 3
      %10789 = OpCompositeConstruct %v3float %10788 %10788 %10788
      %10790 = OpFDiv %v3float %10787 %10789
      %10791 = OpFSub %v3float %10790 %612
      %10792 = OpFSub %v3float %604 %604
      %10793 = OpFSub %v3float %654 %10791
      %10794 = OpVectorTimesScalar %v3float %10792 %float_2097152
      %10795 = OpFAdd %v3float %10794 %10793
      %10796 = OpCompositeExtract %float %10795 2
      %10797 = OpExtInst %float %1 NMax %float_0 %10796
      %10798 = OpFNegate %float %10797
      %10799 = OpVectorTimesScalar %v3float %10740 %10798
      %10800 = OpExtInst %v3float %1 Exp %10799
      %10801 = OpSampledImage %type_sampled_image %10609 %8557
      %10802 = OpImageSampleExplicitLod %v4float %10801 %10735 Lod %float_0
      %10803 = OpVectorShuffle %v3float %10802 %10802 0 1 2
      %10804 = OpVectorTimesScalar %v3float %10800 %620
      %10805 = OpFMul %v3float %10804 %10803
      %10806 = OpVectorTimesScalar %v3float %10589 %10784
      %10807 = OpVectorTimesScalar %v3float %10590 %float_0_0795774683
      %10808 = OpSelect %float %8822 %float_0 %float_1
      %10809 = OpSelect %float %8822 %float_1 %float_0
      %10810 = OpVectorTimesScalar %v3float %10740 %10738
      %10811 = OpFNegate %v3float %10810
      %10812 = OpExtInst %v3float %1 Exp %10811
      %10813 = OpVectorTimesScalar %v3float %10806 %9963
      %10814 = OpVectorTimesScalar %v3float %10813 %10808
      %10815 = OpFAdd %v3float %10807 %10814
      %10816 = OpFSub %v3float %134 %10812
      %10817 = OpFMul %v3float %10741 %10816
      %10818 = OpFDiv %v3float %10817 %10747
      %10819 = OpExtInst %v3float %1 FClamp %10818 %108 %134
      %10820 = OpFMul %v3float %10815 %10819
      %10821 = OpVectorTimesScalar %v3float %10813 %10809
      %10822 = OpFMul %v3float %10821 %10819
      %10823 = OpFSub %v3float %134 %10605
      %10824 = OpVectorShuffle %v3float %134 %10823 3 4 5
      %10825 = OpFMul %v3float %10822 %10824
      %10826 = OpVectorTimesScalar %v3float %10825 %8460
      %10827 = OpFAdd %v3float %9962 %10826
      %10828 = OpVectorShuffle %v3float %549 %134 3 4 5
      %10829 = OpFMul %v3float %10812 %10828
      %10830 = OpFMul %v3float %10805 %10746
      %10831 = OpFMul %v3float %10829 %10830
      %10832 = OpExtInst %v3float %1 Fma %10820 %10824 %10831
      %10833 = OpVectorTimesScalar %v3float %10832 %8460
               OpBranch %10617
      %10617 = OpLabel
      %10834 = OpPhi %v3float %9962 %10507 %10827 %10773
      %10835 = OpPhi %v3float %108 %10507 %10833 %10773
      %10836 = OpFAdd %v3float %10587 %10835
      %10837 = OpExtInst %v3float %1 Normalize %8458
      %10838 = OpConvertFToU %v2uint %635
      %10839 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %10840 = OpExtInst %v3float %1 FClamp %8448 %108 %134
      %10841 = OpExtInst %v3float %1 Fma %10840 %8422 %8423
      %10842 = OpCompositeInsert %v4float %float_0 %8439 0
      %10843 = OpExtInst %float %1 FClamp %8428 %float_0 %float_1
      %10844 = OpExtInst %float %1 Fma %10843 %8426 %8427
      %10845 = OpCompositeInsert %v4float %10844 %10842 1
      %10846 = OpExtInst %float %1 Fma %8436 %8430 %8431
      %10847 = OpExtInst %float %1 NMax %8434 %10846
      %10848 = OpExtInst %float %1 FClamp %10847 %float_0 %float_1
      %10849 = OpCompositeInsert %v4float %10848 %10845 2
      %10850 = OpExtInst %float %1 FClamp %8438 %float_0 %float_1
      %10851 = OpCompositeInsert %v4float %10850 %10849 3
      %10852 = OpLoad %type_2d_image %View_ShadingEnergyGGXSpecTexture
      %10853 = OpLoad %type_sampler %View_ShadingEnergySampler
      %10854 = OpAccessChain %_ptr_Uniform_uint %View %uint_41
      %10855 = OpLoad %uint %10854
      %10856 = OpINotEqual %bool %10855 %uint_0
      %10857 = OpCompositeConstruct %v3bool %10856 %10856 %10856
      %10858 = OpAny %bool %566
               OpSelectionMerge %10859 None
               OpBranchConditional %10858 %10860 %10859
      %10860 = OpLabel
               OpSelectionMerge %10861 None
               OpSwitch %uint_4 %10861 0 %10862 3 %10863 5 %10864 4 %10865
      %10865 = OpLabel
      %10866 = OpExtInst %v3float %1 Fma %108 %134 %108
      %10867 = OpExtInst %float %1 Fma %float_1 %10848 %470
               OpSelectionMerge %10868 None
               OpSwitch %uint_0 %10869
      %10869 = OpLabel
               OpSelectionMerge %10870 None
               OpSwitch %uint_4 %10870 0 %10871 3 %10872 5 %10873 4 %10874
      %10874 = OpLabel
      %10875 = OpVectorShuffle %v3float %10841 %468 0 1 2
               OpBranch %10870
      %10873 = OpLabel
      %10876 = OpVectorShuffle %v3float %10841 %468 0 1 2
               OpBranch %10870
      %10872 = OpLabel
      %10877 = OpVectorShuffle %v3float %10841 %468 0 1 2
               OpBranch %10870
      %10871 = OpLabel
      %10878 = OpVectorShuffle %v3float %10841 %468 0 1 2
      %10879 = OpVectorShuffle %v3float %10851 %10851 0 1 2
      %10880 = OpExtInst %float %1 NMax %10844 %10848
      %10881 = OpExtInst %float %1 NMax %float_0 %10880
      %10882 = OpFSub %float %10881 %float_0_0799999982
      %10883 = OpFMul %float %10882 %float_3_125
      %10884 = OpExtInst %float %1 FClamp %10883 %float_0 %float_1
      %10885 = OpCompositeConstruct %v3float %10884 %10884 %10884
      %10886 = OpExtInst %v3float %1 FMix %10878 %10879 %10885
               OpBranch %10870
      %10870 = OpLabel
      %10887 = OpPhi %v3float %466 %10869 %10875 %10874 %10876 %10873 %10877 %10872 %10886 %10871
      %10888 = OpPhi %bool %false %10869 %true %10874 %true %10873 %true %10872 %true %10871
               OpSelectionMerge %10889 None
               OpBranchConditional %10888 %10868 %10889
      %10889 = OpLabel
               OpBranch %10868
      %10868 = OpLabel
      %10890 = OpPhi %v3float %10887 %10870 %108 %10889
      %10891 = OpVectorTimesScalar %v3float %10890 %float_1
      %10892 = OpBitwiseAnd %uint %8534 %uint_4294967288
      %10893 = OpBitwiseOr %uint %10892 %uint_4
               OpBranch %10861
      %10864 = OpLabel
      %10894 = OpBitwiseOr %uint %8534 %uint_0
      %10895 = OpBitwiseAnd %uint %10894 %uint_4294967288
      %10896 = OpBitwiseOr %uint %10895 %uint_6
               OpBranch %10861
      %10863 = OpLabel
      %10897 = OpExtInst %v3float %1 Fma %108 %134 %108
               OpSelectionMerge %10898 None
               OpSwitch %uint_0 %10899
      %10899 = OpLabel
               OpSelectionMerge %10900 None
               OpSwitch %uint_4 %10900 0 %10901 3 %10902 5 %10903 4 %10904
      %10904 = OpLabel
      %10905 = OpVectorShuffle %v3float %10841 %468 0 1 2
               OpBranch %10900
      %10903 = OpLabel
      %10906 = OpVectorShuffle %v3float %10841 %468 0 1 2
               OpBranch %10900
      %10902 = OpLabel
      %10907 = OpVectorShuffle %v3float %10841 %468 0 1 2
               OpBranch %10900
      %10901 = OpLabel
      %10908 = OpVectorShuffle %v3float %10841 %468 0 1 2
      %10909 = OpVectorShuffle %v3float %10851 %10851 0 1 2
      %10910 = OpExtInst %float %1 NMax %10844 %10848
      %10911 = OpExtInst %float %1 NMax %float_0 %10910
      %10912 = OpFSub %float %10911 %float_0_0799999982
      %10913 = OpFMul %float %10912 %float_3_125
      %10914 = OpExtInst %float %1 FClamp %10913 %float_0 %float_1
      %10915 = OpCompositeConstruct %v3float %10914 %10914 %10914
      %10916 = OpExtInst %v3float %1 FMix %10908 %10909 %10915
               OpBranch %10900
      %10900 = OpLabel
      %10917 = OpPhi %v3float %466 %10899 %10905 %10904 %10906 %10903 %10907 %10902 %10916 %10901
      %10918 = OpPhi %bool %false %10899 %true %10904 %true %10903 %true %10902 %true %10901
               OpSelectionMerge %10919 None
               OpBranchConditional %10918 %10898 %10919
      %10919 = OpLabel
               OpBranch %10898
      %10898 = OpLabel
      %10920 = OpPhi %v3float %10917 %10900 %108 %10919
      %10921 = OpVectorTimesScalar %v3float %10920 %float_1
      %10922 = OpBitwiseAnd %uint %8534 %uint_4294967288
      %10923 = OpBitwiseOr %uint %10922 %uint_5
               OpBranch %10861
      %10862 = OpLabel
      %10924 = OpExtInst %v3float %1 Fma %108 %134 %108
      %10925 = OpAll %bool %566
      %10926 = OpLogicalAnd %bool %true %10925
      %10927 = OpLogicalAnd %bool %10926 %true
               OpSelectionMerge %10928 None
               OpSwitch %uint_0 %10929
      %10929 = OpLabel
               OpSelectionMerge %10930 None
               OpSwitch %uint_4 %10930 0 %10931 3 %10932 5 %10933 4 %10934
      %10934 = OpLabel
      %10935 = OpVectorShuffle %v3float %10841 %468 0 1 2
               OpBranch %10930
      %10933 = OpLabel
      %10936 = OpVectorShuffle %v3float %10841 %468 0 1 2
               OpBranch %10930
      %10932 = OpLabel
      %10937 = OpVectorShuffle %v3float %10841 %468 0 1 2
               OpBranch %10930
      %10931 = OpLabel
      %10938 = OpVectorShuffle %v3float %10841 %468 0 1 2
      %10939 = OpVectorShuffle %v3float %10851 %10851 0 1 2
      %10940 = OpExtInst %float %1 NMax %10844 %10848
      %10941 = OpExtInst %float %1 NMax %float_0 %10940
      %10942 = OpFSub %float %10941 %float_0_0799999982
      %10943 = OpFMul %float %10942 %float_3_125
      %10944 = OpExtInst %float %1 FClamp %10943 %float_0 %float_1
      %10945 = OpCompositeConstruct %v3float %10944 %10944 %10944
      %10946 = OpExtInst %v3float %1 FMix %10938 %10939 %10945
               OpBranch %10930
      %10930 = OpLabel
      %10947 = OpPhi %v3float %466 %10929 %10935 %10934 %10936 %10933 %10937 %10932 %10946 %10931
      %10948 = OpPhi %bool %false %10929 %true %10934 %true %10933 %true %10932 %true %10931
               OpSelectionMerge %10949 None
               OpBranchConditional %10948 %10928 %10949
      %10949 = OpLabel
               OpBranch %10928
      %10928 = OpLabel
      %10950 = OpPhi %v3float %10947 %10930 %108 %10949
      %10951 = OpVectorTimesScalar %v3float %10950 %float_1
               OpSelectionMerge %10952 None
               OpBranchConditional %false %10953 %10952
      %10953 = OpLabel
               OpSelectionMerge %10954 None
               OpBranchConditional %false %10955 %10954
      %10955 = OpLabel
      %10956 = OpExtInst %float %1 NMax %float_0_0399999991 %float_0_0399999991
      %10957 = OpExtInst %float %1 NMax %float_0_0399999991 %10956
      %10958 = OpFSub %float %10957 %float_0_0799999982
      %10959 = OpFMul %float %10958 %float_3_125
      %10960 = OpExtInst %float %1 FClamp %10959 %float_0 %float_1
      %10961 = OpExtInst %float %1 FMix %float_0 %float_0_0399999991 %10960
      %10962 = OpCompositeConstruct %v3float %10961 %10961 %10961
               OpBranch %10954
      %10954 = OpLabel
      %10963 = OpPhi %v3float %10951 %10953 %10962 %10955
      %10964 = OpPhi %float %470 %10953 %float_0 %10955
               OpBranch %10952
      %10952 = OpLabel
      %10965 = OpPhi %v3float %10951 %10928 %10963 %10954
      %10966 = OpPhi %float %470 %10928 %10964 %10954
      %10967 = OpBitwiseOr %uint %8534 %uint_0
      %10968 = OpBitwiseOr %uint %10967 %uint_0
               OpBranch %10861
      %10861 = OpLabel
      %10969 = OpPhi %v3float %108 %10860 %10866 %10868 %108 %10864 %10897 %10898 %10924 %10952
      %10970 = OpPhi %uint %467 %10860 %uint_2 %10868 %uint_1 %10864 %uint_1 %10898 %uint_1 %10952
      %10971 = OpPhi %bool %true %10860 %false %10868 %false %10864 %false %10898 %10927 %10952
      %10972 = OpPhi %bool %true %10860 %false %10868 %false %10864 %false %10898 %true %10952
      %10973 = OpPhi %v3float %469 %10860 %10891 %10868 %469 %10864 %10921 %10898 %10965 %10952
      %10974 = OpPhi %float %470 %10860 %10867 %10868 %float_1 %10864 %float_1 %10898 %10966 %10952
      %10975 = OpPhi %float %float_0 %10860 %float_1 %10868 %float_1 %10864 %float_1 %10898 %float_1 %10952
      %10976 = OpPhi %uint %8534 %10860 %10893 %10868 %10896 %10864 %10923 %10898 %10968 %10952
      %10977 = OpCompositeConstruct %_arr_v3float_uint_4 %10837 %469 %469 %469
               OpStore %589 %10977
      %10978 = OpAccessChain %_ptr_Function_v3float %589 %uint_0
      %10979 = OpLoad %v3float %10978
      %10980 = OpVectorTimesScalar %v3float %10979 %float_1
               OpBranch %10859
      %10859 = OpLabel
      %10981 = OpPhi %uint %uint_8192 %10617 %uint_8194 %10861
      %10982 = OpPhi %v3float %108 %10617 %10969 %10861
      %10983 = OpPhi %uint %467 %10617 %10970 %10861
      %10984 = OpPhi %uint %8534 %10617 %10976 %10861
      %10985 = OpPhi %bool %true %10617 %10971 %10861
      %10986 = OpPhi %bool %true %10617 %10972 %10861
      %10987 = OpPhi %v3float %469 %10617 %10973 %10861
      %10988 = OpPhi %float %470 %10617 %10974 %10861
      %10989 = OpPhi %v3float %469 %10617 %10980 %10861
      %10990 = OpPhi %float %float_0 %10617 %10975 %10861
      %10991 = OpSelect %uint %10858 %uint_1 %uint_0
      %10992 = OpFOrdGreaterThan %bool %10990 %float_0
      %10993 = OpCompositeConstruct %v3bool %10992 %10992 %10992
      %10994 = OpExtInst %v3float %1 Normalize %10989
      %10995 = OpSelect %v3float %10993 %10994 %108
      %10996 = OpFDiv %float %10988 %10990
      %10997 = OpSelect %float %10992 %10996 %float_0
      %10998 = OpCompositeConstruct %v3float %10990 %10990 %10990
      %10999 = OpFDiv %v3float %10987 %10998
      %11000 = OpSelect %v3float %10993 %10999 %108
               OpSelectionMerge %11001 None
               OpBranchConditional %10986 %11002 %11001
      %11002 = OpLabel
      %11003 = OpIEqual %bool %10991 %uint_1
      %11004 = OpLogicalAnd %bool %10985 %11003
      %11005 = OpSelect %uint %11004 %uint_2 %uint_3
      %11006 = OpSelect %uint %11004 %uint_1 %11005
      %11007 = OpBitwiseAnd %uint %10984 %uint_4294967288
      %11008 = OpBitwiseAnd %uint %11006 %uint_7
      %11009 = OpBitwiseOr %uint %11007 %11008
               OpSelectionMerge %11010 None
               OpBranchConditional %11004 %11011 %11010
      %11011 = OpLabel
      %11012 = OpShiftRightLogical %uint %10981 %uint_6
      %11013 = OpBitwiseAnd %uint %11012 %uint_1
      %11014 = OpINotEqual %bool %11013 %uint_0
               OpSelectionMerge %11015 None
               OpBranchConditional %11014 %11016 %11015
      %11016 = OpLabel
               OpBranch %11015
      %11015 = OpLabel
      %11017 = OpPhi %uint %uint_0 %11011 %uint_1 %11016
      %11018 = OpShiftRightLogical %uint %10981 %uint_9
      %11019 = OpBitwiseAnd %uint %11018 %uint_1
      %11020 = OpINotEqual %bool %11019 %uint_0
      %11021 = OpLogicalAnd %bool %11020 %true
               OpSelectionMerge %11022 None
               OpBranchConditional %11021 %11023 %11022
      %11023 = OpLabel
      %11024 = OpBitwiseOr %uint %11017 %uint_4
               OpBranch %11022
      %11022 = OpLabel
      %11025 = OpPhi %uint %11017 %11015 %11024 %11023
      %11026 = OpShiftRightLogical %uint %10981 %uint_10
      %11027 = OpBitwiseAnd %uint %11026 %uint_1
      %11028 = OpINotEqual %bool %11027 %uint_0
               OpSelectionMerge %11029 None
               OpBranchConditional %11028 %11030 %11029
      %11030 = OpLabel
      %11031 = OpBitwiseOr %uint %11025 %uint_8
               OpBranch %11029
      %11029 = OpLabel
      %11032 = OpPhi %uint %11025 %11022 %11031 %11030
      %11033 = OpShiftRightLogical %uint %10981 %uint_2
      %11034 = OpBitwiseAnd %uint %11033 %uint_7
      %11035 = OpIEqual %bool %11034 %uint_4
               OpSelectionMerge %11036 None
               OpBranchConditional %11035 %11037 %11036
      %11037 = OpLabel
      %11038 = OpBitwiseOr %uint %11032 %uint_16
               OpBranch %11036
      %11036 = OpLabel
      %11039 = OpPhi %uint %11032 %11029 %11038 %11037
      %11040 = OpIEqual %bool %11034 %uint_1
               OpSelectionMerge %11041 None
               OpBranchConditional %11040 %11042 %11041
      %11042 = OpLabel
      %11043 = OpBitwiseOr %uint %11039 %uint_32
               OpBranch %11041
      %11041 = OpLabel
      %11044 = OpPhi %uint %11039 %11036 %11043 %11042
      %11045 = OpIEqual %bool %11034 %uint_3
               OpSelectionMerge %11046 None
               OpBranchConditional %11045 %11047 %11046
      %11047 = OpLabel
      %11048 = OpBitwiseOr %uint %11044 %uint_64
               OpBranch %11046
      %11046 = OpLabel
      %11049 = OpPhi %uint %11044 %11041 %11048 %11047
      %11050 = OpBitwiseAnd %uint %11049 %uint_2
      %11051 = OpIEqual %bool %11050 %uint_2
      %11052 = OpIEqual %bool %11050 %uint_3
      %11053 = OpLogicalOr %bool %11051 %11052
               OpSelectionMerge %11054 None
               OpBranchConditional %11053 %11055 %11056
      %11056 = OpLabel
      %11057 = OpBitwiseAnd %uint %11049 %uint_4
      %11058 = OpIEqual %bool %11057 %uint_4
               OpSelectionMerge %11059 None
               OpBranchConditional %11058 %11060 %11061
      %11061 = OpLabel
      %11062 = OpBitwiseAnd %uint %11049 %uint_40
      %11063 = OpIEqual %bool %11062 %uint_40
               OpSelectionMerge %11064 None
               OpBranchConditional %11063 %11065 %11066
      %11066 = OpLabel
      %11067 = OpBitwiseAnd %uint %11049 %uint_32
      %11068 = OpIEqual %bool %11067 %uint_32
               OpSelectionMerge %11069 None
               OpBranchConditional %11068 %11070 %11071
      %11071 = OpLabel
      %11072 = OpBitwiseAnd %uint %11049 %uint_72
      %11073 = OpIEqual %bool %11072 %uint_64
      %11074 = OpSelect %uint %11073 %uint_4 %uint_0
      %11075 = OpSelect %uint %11073 %uint_0 %467
               OpBranch %11069
      %11070 = OpLabel
               OpBranch %11069
      %11069 = OpLabel
      %11076 = OpPhi %uint %11074 %11071 %uint_3 %11070
      %11077 = OpPhi %uint %11075 %11071 %uint_0 %11070
               OpBranch %11064
      %11065 = OpLabel
               OpBranch %11064
      %11064 = OpLabel
      %11078 = OpPhi %uint %11076 %11069 %uint_5 %11065
      %11079 = OpPhi %uint %11077 %11069 %uint_0 %11065
               OpBranch %11059
      %11060 = OpLabel
               OpBranch %11059
      %11059 = OpLabel
      %11080 = OpPhi %uint %11078 %11064 %uint_2 %11060
      %11081 = OpPhi %uint %11079 %11064 %467 %11060
               OpBranch %11054
      %11055 = OpLabel
               OpBranch %11054
      %11054 = OpLabel
      %11082 = OpPhi %uint %11080 %11059 %uint_1 %11055
      %11083 = OpPhi %uint %11081 %11059 %467 %11055
               OpBranch %11010
      %11010 = OpLabel
      %11084 = OpPhi %uint %uint_0 %11002 %11082 %11054
      %11085 = OpPhi %uint %467 %11002 %11083 %11054
               OpBranch %11001
      %11001 = OpLabel
      %11086 = OpPhi %uint %uint_0 %10859 %11084 %11010
      %11087 = OpPhi %uint %467 %10859 %11085 %11010
      %11088 = OpPhi %uint %10984 %10859 %11009 %11010
               OpSelectionMerge %11089 DontFlatten
               OpBranchConditional %10858 %11090 %11089
      %11090 = OpLabel
      %11091 = OpCompositeConstruct %_arr_v3float_uint_4 %10837 %469 %469 %469
               OpStore %590 %11091
      %11092 = OpShiftRightLogical %uint %10981 %uint_14
      %11093 = OpBitwiseAnd %uint %11092 %uint_3
      %11094 = OpAccessChain %_ptr_Function_v3float %590 %11093
      %11095 = OpLoad %v3float %11094
      %11096 = OpDot %float %11095 %671
      %11097 = OpShiftRightLogical %uint %10981 %uint_11
      %11098 = OpBitwiseAnd %uint %11097 %uint_7
               OpSelectionMerge %11099 None
               OpSwitch %11098 %11099 0 %11100 3 %11101 5 %11102
      %11102 = OpLabel
      %11103 = OpVectorShuffle %v3float %10841 %468 0 1 2
      %11104 = OpVectorTimesScalar %v3float %11103 %float_1
               OpBranch %11099
      %11101 = OpLabel
      %11105 = OpVectorShuffle %v3float %10841 %468 0 1 2
      %11106 = OpDot %float %671 %11095
      %11107 = OpVectorTimesScalar %v3float %11095 %11106
      %11108 = OpFSub %v3float %671 %11107
      %11109 = OpExtInst %v3float %1 Normalize %11108
      %11110 = OpExtInst %float %1 NMin %float_0 %float_1
      %11111 = OpDot %float %671 %11109
      %11112 = OpDot %float %11095 %11109
      %11113 = OpExtInst %float %1 FClamp %11112 %float_n1 %float_1
      %11114 = OpExtInst %float %1 FClamp %11096 %float_n1 %float_1
      %11115 = OpExtInst %float %1 FAbs %11114
      %11116 = OpExtInst %float %1 Fma %float_n0_156582996 %11115 %float_1_57079637
      %11117 = OpFSub %float %float_1 %11115
      %11118 = OpExtInst %float %1 Sqrt %11117
      %11119 = OpFMul %float %11116 %11118
      %11120 = OpFOrdGreaterThanEqual %bool %11114 %float_0
      %11121 = OpFNegate %float %11116
      %11122 = OpExtInst %float %1 Fma %11121 %11118 %float_3_14159274
      %11123 = OpSelect %float %11120 %11119 %11122
      %11124 = OpFSub %float %float_1_57079637 %11123
      %11125 = OpExtInst %float %1 FAbs %11113
      %11126 = OpExtInst %float %1 Fma %float_n0_156582996 %11125 %float_1_57079637
      %11127 = OpFSub %float %float_1 %11125
      %11128 = OpExtInst %float %1 Sqrt %11127
      %11129 = OpFMul %float %11126 %11128
      %11130 = OpFOrdGreaterThanEqual %bool %11113 %float_0
      %11131 = OpFNegate %float %11126
      %11132 = OpExtInst %float %1 Fma %11131 %11128 %float_3_14159274
      %11133 = OpSelect %float %11130 %11129 %11132
      %11134 = OpFSub %float %float_1_57079637 %11133
      %11135 = OpFSub %float %11124 %11134
      %11136 = OpExtInst %float %1 FAbs %11135
      %11137 = OpFMul %float %float_0_5 %11136
      %11138 = OpExtInst %float %1 Cos %11137
      %11139 = OpVectorTimesScalar %v3float %11095 %11113
      %11140 = OpFSub %v3float %11109 %11139
      %11141 = OpVectorTimesScalar %v3float %11095 %11114
      %11142 = OpFSub %v3float %671 %11141
      %11143 = OpDot %float %11140 %11142
      %11144 = OpDot %float %11140 %11140
      %11145 = OpDot %float %11142 %11142
      %11146 = OpExtInst %float %1 Fma %11144 %11145 %float_9_99999975en05
      %11147 = OpExtInst %float %1 InverseSqrt %11146
      %11148 = OpFMul %float %11143 %11147
      %11149 = OpExtInst %float %1 Fma %float_0_5 %11148 %float_0_5
      %11150 = OpExtInst %float %1 FClamp %11149 %float_0 %float_1
      %11151 = OpExtInst %float %1 Sqrt %11150
      %11152 = OpFDiv %float %float_1_19000006 %11138
      %11153 = OpExtInst %float %1 Fma %float_0_360000014 %11138 %11152
      %11154 = OpExtInst %float %1 Fma %float_0_00392156886 %float_0_00392156886 %float_0_200000003
      %11155 = OpExtInst %float %1 Fma %float_1_53787023en05 %float_0_5 %float_0_200000003
      %11156 = OpExtInst %float %1 Fma %float_1_53787023en05 %float_2 %float_0_200000003
      %11157 = OpFMul %float %float_0_997551024 %11151
      %11158 = OpFNegate %float %11114
      %11159 = OpExtInst %float %1 Fma %11158 %11114 %float_1
      %11160 = OpExtInst %float %1 Sqrt %11159
      %11161 = OpFMul %float %float_n0_0699428469 %11114
      %11162 = OpExtInst %float %1 Fma %11157 %11160 %11161
      %11163 = OpFMul %float %float_1_41421354 %11151
      %11164 = OpFMul %float %11154 %11163
      %11165 = OpFAdd %float %11113 %11114
      %11166 = OpExtInst %float %1 Fma %float_0_139885694 %11162 %11165
      %11167 = OpFMul %float %11166 %11166
      %11168 = OpFMul %float %float_n0_5 %11167
      %11169 = OpFMul %float %11164 %11164
      %11170 = OpFDiv %float %11168 %11169
      %11171 = OpExtInst %float %1 Exp %11170
      %11172 = OpFMul %float %float_2_50662827 %11164
      %11173 = OpFDiv %float %11171 %11172
      %11174 = OpFMul %float %float_0_25 %11151
      %11175 = OpExtInst %float %1 Fma %float_0_5 %11111 %float_0_5
      %11176 = OpExtInst %float %1 FClamp %11175 %float_0 %float_1
      %11177 = OpExtInst %float %1 Sqrt %11176
      %11178 = OpFSub %float %float_1 %11177
      %11179 = OpFMul %float %11178 %11178
      %11180 = OpFMul %float %11179 %11179
      %11181 = OpFMul %float %11180 %11178
      %11182 = OpExtInst %float %1 Fma %float_0_953479409 %11181 %float_0_0465205647
      %11183 = OpFMul %float %11173 %11174
      %11184 = OpFMul %float %11183 %11182
      %11185 = OpFMul %float %10844 %float_2
      %11186 = OpFMul %float %11184 %11185
      %11187 = OpFNegate %float %11111
      %11188 = OpExtInst %float %1 FClamp %11187 %float_0 %float_1
      %11189 = OpExtInst %float %1 FMix %float_1 %11110 %11188
      %11190 = OpFMul %float %11186 %11189
      %11191 = OpCompositeConstruct %v3float %11190 %11190 %11190
      %11192 = OpFSub %float %11165 %float_0_0350000001
      %11193 = OpFMul %float %11192 %11192
      %11194 = OpFMul %float %float_n0_5 %11193
      %11195 = OpFMul %float %11155 %11155
      %11196 = OpFDiv %float %11194 %11195
      %11197 = OpExtInst %float %1 Exp %11196
      %11198 = OpFMul %float %float_2_50662827 %11155
      %11199 = OpFDiv %float %11197 %11198
      %11200 = OpFDiv %float %float_1 %11153
      %11201 = OpExtInst %float %1 Fma %float_n0_800000012 %11148 %float_0_600000024
      %11202 = OpExtInst %float %1 Fma %11200 %11201 %float_1
      %11203 = OpFMul %float %11151 %11202
      %11204 = OpFNegate %float %11203
      %11205 = OpExtInst %float %1 Fma %11204 %11203 %float_1
      %11206 = OpExtInst %float %1 FClamp %11205 %float_0 %float_1
      %11207 = OpExtInst %float %1 Sqrt %11206
      %11208 = OpFNegate %float %11138
      %11209 = OpExtInst %float %1 Fma %11208 %11207 %float_1
      %11210 = OpFMul %float %11209 %11209
      %11211 = OpFMul %float %11210 %11210
      %11212 = OpFMul %float %11211 %11209
      %11213 = OpExtInst %float %1 Fma %float_0_953479409 %11212 %float_0_0465205647
      %11214 = OpFSub %float %float_1 %11213
      %11215 = OpFMul %float %11214 %11214
      %11216 = OpExtInst %v3float %1 FAbs %11105
      %11217 = OpFMul %float %11203 %11200
      %11218 = OpFNegate %float %11217
      %11219 = OpExtInst %float %1 Fma %11218 %11217 %float_1
      %11220 = OpExtInst %float %1 Sqrt %11219
      %11221 = OpFMul %float %float_0_5 %11220
      %11222 = OpFDiv %float %11221 %11138
      %11223 = OpCompositeConstruct %v3float %11222 %11222 %11222
      %11224 = OpExtInst %v3float %1 Pow %11216 %11223
      %11225 = OpExtInst %float %1 Fma %float_n3_6500001 %11148 %float_n3_98000002
      %11226 = OpExtInst %float %1 Exp %11225
      %11227 = OpFMul %float %11199 %11226
      %11228 = OpFMul %float %11227 %11215
      %11229 = OpVectorTimesScalar %v3float %11224 %11228
      %11230 = OpVectorTimesScalar %v3float %11229 %11110
      %11231 = OpFAdd %v3float %11191 %11230
      %11232 = OpFSub %float %11165 %float_0_140000001
      %11233 = OpFMul %float %11232 %11232
      %11234 = OpFMul %float %float_n0_5 %11233
      %11235 = OpFMul %float %11156 %11156
      %11236 = OpFDiv %float %11234 %11235
      %11237 = OpExtInst %float %1 Exp %11236
      %11238 = OpFMul %float %float_2_50662827 %11156
      %11239 = OpFDiv %float %11237 %11238
      %11240 = OpExtInst %float %1 Fma %11208 %float_0_5 %float_1
      %11241 = OpFMul %float %11240 %11240
      %11242 = OpFMul %float %11241 %11241
      %11243 = OpFMul %float %11242 %11240
      %11244 = OpExtInst %float %1 Fma %float_0_953479409 %11243 %float_0_0465205647
      %11245 = OpFSub %float %float_1 %11244
      %11246 = OpFMul %float %11245 %11245
      %11247 = OpFMul %float %11246 %11244
      %11248 = OpFDiv %float %float_0_800000012 %11138
      %11249 = OpCompositeConstruct %v3float %11248 %11248 %11248
      %11250 = OpExtInst %v3float %1 Pow %11216 %11249
      %11251 = OpExtInst %float %1 Fma %float_17 %11148 %float_n16_7800007
      %11252 = OpExtInst %float %1 Exp %11251
      %11253 = OpFMul %float %11239 %11252
      %11254 = OpFMul %float %11253 %11247
      %11255 = OpVectorTimesScalar %v3float %11250 %11254
      %11256 = OpFAdd %v3float %11231 %11255
      %11257 = OpVectorTimesScalar %v3float %11256 %float_1
      %11258 = OpVectorShuffle %v3float %549 %134 3 4 5
      %11259 = OpExtInst %v3float %1 Fma %469 %11258 %11257
      %11260 = OpFNegate %v3float %11259
      %11261 = OpExtInst %v3float %1 NMin %11260 %108
      %11262 = OpFNegate %v3float %11261
      %11263 = OpVectorTimesScalar %v3float %11262 %float_6_28318548
      %11264 = OpExtInst %v3float %1 NMin %134 %11263
               OpBranch %11099
      %11100 = OpLabel
      %11265 = OpVectorShuffle %v3float %10841 %468 0 1 2
      %11266 = OpVectorShuffle %v3float %10851 %10851 0 1 2
      %11267 = OpCompositeConstruct %v2float %11096 %float_0_00100000005
      %11268 = OpSampledImage %type_sampled_image %10852 %10853
      %11269 = OpImageSampleExplicitLod %v4float %11268 %11267 Lod %float_0
      %11270 = OpCompositeExtract %float %11269 0
      %11271 = OpFSub %float %float_1 %11270
      %11272 = OpFDiv %float %11271 %11270
      %11273 = OpVectorTimesScalar %v3float %11266 %11272
      %11274 = OpFAdd %v3float %134 %11273
      %11275 = OpSelect %v3float %10857 %11274 %134
      %11276 = OpVectorTimesScalar %v3float %11266 %11270
      %11277 = OpFNegate %v3float %11266
      %11278 = OpCompositeExtract %float %11269 1
      %11279 = OpVectorTimesScalar %v3float %11277 %11278
      %11280 = OpFAdd %v3float %11276 %11279
      %11281 = OpFMul %v3float %11275 %11280
      %11282 = OpAccessChain %_ptr_Uniform_uint %View %uint_42
      %11283 = OpLoad %uint %11282
      %11284 = OpINotEqual %bool %11283 %uint_0
      %11285 = OpDot %float %11281 %179
      %11286 = OpFSub %float %float_1 %11285
      %11287 = OpSelect %float %11284 %11286 %float_1
      %11288 = OpVectorTimesScalar %v3float %11265 %11287
      %11289 = OpShiftRightLogical %uint %10981 %uint_2
      %11290 = OpBitwiseAnd %uint %11289 %uint_7
      %11291 = OpIEqual %bool %11290 %uint_4
               OpSelectionMerge %11292 DontFlatten
               OpBranchConditional %11291 %11293 %11292
      %11293 = OpLabel
      %11294 = OpExtInst %float %1 NMax %470 %470
      %11295 = OpExtInst %float %1 NMax %470 %11294
      %11296 = OpFSub %float %11295 %float_0_0399999991
      %11297 = OpExtInst %float %1 NMax %float_0 %11296
      %11298 = OpFMul %float %11297 %float_3
      %11299 = OpExtInst %float %1 FClamp %11298 %float_0 %float_1
      %11300 = OpFMul %float %11299 %11299
      %11301 = OpCompositeExtract %float %10841 0
      %11302 = OpExtInst %float %1 FClamp %11096 %float_0 %float_1
      %11303 = OpExtInst %float %1 FAbs %11302
      %11304 = OpExtInst %float %1 Fma %float_n0_156582996 %11303 %float_1_57079637
      %11305 = OpFSub %float %float_1 %11303
      %11306 = OpExtInst %float %1 Sqrt %11305
      %11307 = OpFMul %float %11304 %11306
      %11308 = OpFMul %float %11307 %float_0_636619747
      %11309 = OpExtInst %float %1 FClamp %11308 %float_0 %float_1
      %11310 = OpCompositeConstruct %v3float %float_0 %11301 %11309
      %11311 = OpExtInst %v3float %1 Fma %508 %11310 %507
      %11312 = OpLoad %type_3d_image_0 %View_SimpleVolumeEnvTexture
      %11313 = OpLoad %type_sampler %View_SimpleVolumeEnvTextureSampler
      %11314 = OpSampledImage %type_sampled_image_0 %11312 %11313
      %11315 = OpImageSampleExplicitLod %v4float %11314 %11311 Lod %float_0
      %11316 = OpCompositeExtract %float %11315 0
      %11317 = OpExtInst %float %1 Fma %float_10 %float_0_00158730161 %float_1
      %11318 = OpExtInst %float %1 FClamp %11317 %float_0 %float_1
      %11319 = OpFMul %float %11316 %11318
      %11320 = OpCompositeExtract %float %10841 1
      %11321 = OpCompositeConstruct %v3float %float_0 %11320 %11309
      %11322 = OpExtInst %v3float %1 Fma %508 %11321 %507
      %11323 = OpSampledImage %type_sampled_image_0 %11312 %11313
      %11324 = OpImageSampleExplicitLod %v4float %11323 %11322 Lod %float_0
      %11325 = OpCompositeExtract %float %11324 0
      %11326 = OpFMul %float %11325 %11318
      %11327 = OpCompositeExtract %float %10841 2
      %11328 = OpCompositeConstruct %v3float %float_0 %11327 %11309
      %11329 = OpExtInst %v3float %1 Fma %508 %11328 %507
      %11330 = OpSampledImage %type_sampled_image_0 %11312 %11313
      %11331 = OpImageSampleExplicitLod %v4float %11330 %11329 Lod %float_0
      %11332 = OpCompositeExtract %float %11331 0
      %11333 = OpFMul %float %11332 %11318
      %11334 = OpCompositeConstruct %v3float %11319 %11326 %11333
      %11335 = OpCompositeExtract %float %11288 0
      %11336 = OpCompositeExtract %float %11288 1
      %11337 = OpCompositeExtract %float %11288 2
      %11338 = OpExtInst %float %1 NMax %11336 %11337
      %11339 = OpExtInst %float %1 NMax %11335 %11338
      %11340 = OpExtInst %float %1 NMax %11326 %11333
      %11341 = OpExtInst %float %1 NMax %11319 %11340
      %11342 = OpFOrdLessThan %bool %11339 %11341
               OpSelectionMerge %11343 None
               OpBranchConditional %11342 %11344 %11343
      %11344 = OpLabel
      %11345 = OpFDiv %float %11339 %11341
      %11346 = OpVectorTimesScalar %v3float %11334 %11345
               OpBranch %11343
      %11343 = OpLabel
      %11347 = OpPhi %v3float %11334 %11293 %11346 %11344
      %11348 = OpVectorTimesScalar %v3float %11347 %11287
      %11349 = OpCompositeConstruct %v3float %11300 %11300 %11300
      %11350 = OpExtInst %v3float %1 FMix %11288 %11348 %11349
               OpBranch %11292
      %11292 = OpLabel
      %11351 = OpPhi %v3float %11288 %11100 %11350 %11343
      %11352 = OpIEqual %bool %11290 %uint_1
               OpSelectionMerge %11353 DontFlatten
               OpBranchConditional %11352 %11354 %11353
      %11354 = OpLabel
      %11355 = OpExtInst %v3float %1 NMax %367 %565
      %11356 = OpFDiv %v3float %134 %11355
      %11357 = OpExtInst %v3float %1 NMax %356 %11356
      %11358 = OpExtInst %float %1 FAbs %float_1
      %11359 = OpExtInst %float %1 NMax %float_9_99999975en05 %11358
      %11360 = OpFDiv %float %float_1 %11359
      %11361 = OpFNegate %v3float %11357
      %11362 = OpVectorTimesScalar %v3float %11361 %11360
      %11363 = OpExtInst %v3float %1 Exp %11362
      %11364 = OpFMul %v3float %509 %11363
      %11365 = OpVectorTimesScalar %v3float %11364 %11287
               OpBranch %11353
      %11353 = OpLabel
      %11366 = OpPhi %v3float %469 %11292 %11365 %11354
      %11367 = OpShiftRightLogical %uint %10981 %uint_9
      %11368 = OpBitwiseAnd %uint %11367 %uint_1
      %11369 = OpINotEqual %bool %11368 %uint_0
               OpSelectionMerge %11370 DontFlatten
               OpBranchConditional %11369 %11371 %11370
      %11371 = OpLabel
      %11372 = OpVectorTimesScalar %v3float %11265 %float_1
      %11373 = OpVectorTimesScalar %v3float %11351 %float_1
               OpBranch %11099
      %11370 = OpLabel
               OpBranch %11099
      %11099 = OpLabel
      %11374 = OpPhi %v3float %469 %11090 %11104 %11102 %11264 %11101 %11373 %11371 %11351 %11370
      %11375 = OpPhi %v3float %469 %11090 %11095 %11102 %11109 %11101 %11095 %11371 %11095 %11370
      %11376 = OpPhi %v3float %469 %11090 %469 %11102 %469 %11101 %11366 %11371 %11366 %11370
      %11377 = OpPhi %v3float %469 %11090 %11103 %11102 %469 %11101 %11372 %11371 %11265 %11370
      %11378 = OpFOrdGreaterThan %v3bool %11376 %108
      %11379 = OpAny %bool %11378
      %11380 = OpSampledImage %type_sampled_image_0 %8556 %8557
      %11381 = OpImageSampleExplicitLod %v4float %11380 %8497 Lod %float_0
      %11382 = OpSampledImage %type_sampled_image_0 %8560 %8557
      %11383 = OpImageSampleExplicitLod %v4float %11382 %8497 Lod %float_0
      %11384 = OpVectorTimesScalar %v4float %11383 %float_2
      %11385 = OpFSub %v4float %11384 %124
      %11386 = OpSampledImage %type_sampled_image_0 %8565 %8557
      %11387 = OpImageSampleExplicitLod %v4float %11386 %8497 Lod %float_0
      %11388 = OpVectorTimesScalar %v4float %11387 %float_2
      %11389 = OpFSub %v4float %11388 %124
      %11390 = OpSampledImage %type_sampled_image_0 %8570 %8557
      %11391 = OpImageSampleExplicitLod %v4float %11390 %8497 Lod %float_0
      %11392 = OpVectorTimesScalar %v4float %11391 %float_2
      %11393 = OpFSub %v4float %11392 %124
      %11394 = OpCompositeExtract %float %11381 0
      %11395 = OpVectorTimesScalar %v4float %11385 %11394
      %11396 = OpFMul %v4float %11395 %340
      %11397 = OpCompositeExtract %float %11381 1
      %11398 = OpVectorTimesScalar %v4float %11389 %11397
      %11399 = OpFMul %v4float %11398 %340
      %11400 = OpCompositeExtract %float %11381 2
      %11401 = OpVectorTimesScalar %v4float %11393 %11400
      %11402 = OpFMul %v4float %11401 %340
      %11403 = OpSampledImage %type_sampled_image_0 %8584 %8557
      %11404 = OpImageSampleExplicitLod %v4float %11403 %8497 Lod %float_0
      %11405 = OpVectorTimesScalar %v4float %11404 %float_2
      %11406 = OpFSub %v4float %11405 %124
      %11407 = OpSampledImage %type_sampled_image_0 %8589 %8557
      %11408 = OpImageSampleExplicitLod %v4float %11407 %8497 Lod %float_0
      %11409 = OpVectorTimesScalar %v4float %11408 %float_2
      %11410 = OpFSub %v4float %11409 %124
      %11411 = OpSampledImage %type_sampled_image_0 %8594 %8557
      %11412 = OpImageSampleExplicitLod %v4float %11411 %8497 Lod %float_0
      %11413 = OpVectorTimesScalar %v4float %11412 %float_2
      %11414 = OpFSub %v4float %11413 %124
      %11415 = OpVectorTimesScalar %v4float %11406 %11394
      %11416 = OpFMul %v4float %11415 %313
      %11417 = OpVectorTimesScalar %v4float %11410 %11397
      %11418 = OpFMul %v4float %11417 %313
      %11419 = OpVectorTimesScalar %v4float %11414 %11400
      %11420 = OpFMul %v4float %11419 %313
      %11421 = OpCompositeExtract %float %11396 0
      %11422 = OpCompositeExtract %float %11396 1
      %11423 = OpCompositeExtract %float %11396 2
      %11424 = OpCompositeConstruct %v4float %11394 %11421 %11422 %11423
      %11425 = OpCompositeExtract %float %11396 3
      %11426 = OpCompositeExtract %float %11416 0
      %11427 = OpCompositeExtract %float %11416 1
      %11428 = OpCompositeExtract %float %11416 2
      %11429 = OpCompositeConstruct %v4float %11425 %11426 %11427 %11428
      %11430 = OpCompositeExtract %float %11416 3
      %11431 = OpCompositeExtract %float %11399 0
      %11432 = OpCompositeExtract %float %11399 1
      %11433 = OpCompositeExtract %float %11399 2
      %11434 = OpCompositeConstruct %v4float %11397 %11431 %11432 %11433
      %11435 = OpCompositeExtract %float %11399 3
      %11436 = OpCompositeExtract %float %11418 0
      %11437 = OpCompositeExtract %float %11418 1
      %11438 = OpCompositeExtract %float %11418 2
      %11439 = OpCompositeConstruct %v4float %11435 %11436 %11437 %11438
      %11440 = OpCompositeExtract %float %11418 3
      %11441 = OpCompositeExtract %float %11402 0
      %11442 = OpCompositeExtract %float %11402 1
      %11443 = OpCompositeExtract %float %11402 2
      %11444 = OpCompositeConstruct %v4float %11400 %11441 %11442 %11443
      %11445 = OpCompositeExtract %float %11402 3
      %11446 = OpCompositeExtract %float %11420 0
      %11447 = OpCompositeExtract %float %11420 1
      %11448 = OpCompositeExtract %float %11420 2
      %11449 = OpCompositeConstruct %v4float %11445 %11446 %11447 %11448
      %11450 = OpCompositeExtract %float %11420 3
      %11451 = OpCompositeExtract %float %11375 1
      %11452 = OpFMul %float %float_n0_488602996 %11451
      %11453 = OpCompositeInsert %v4float %11452 %562 1
      %11454 = OpCompositeExtract %float %11375 2
      %11455 = OpFMul %float %float_0_488602996 %11454
      %11456 = OpCompositeInsert %v4float %11455 %11453 2
      %11457 = OpCompositeExtract %float %11375 0
      %11458 = OpFMul %float %float_n0_488602996 %11457
      %11459 = OpCompositeInsert %v4float %11458 %11456 3
      %11460 = OpFMul %v3float %11375 %11375
      %11461 = OpFMul %float %float_1_09254801 %11457
      %11462 = OpFMul %float %11461 %11451
      %11463 = OpCompositeInsert %v4float %11462 %551 0
      %11464 = OpFMul %float %float_n1_09254801 %11451
      %11465 = OpFMul %float %11464 %11454
      %11466 = OpCompositeInsert %v4float %11465 %11463 1
      %11467 = OpCompositeExtract %float %11460 2
      %11468 = OpExtInst %float %1 Fma %float_3 %11467 %float_n1
      %11469 = OpFMul %float %float_0_315391988 %11468
      %11470 = OpCompositeInsert %v4float %11469 %11466 2
      %11471 = OpFMul %float %float_n1_09254801 %11457
      %11472 = OpFMul %float %11471 %11454
      %11473 = OpCompositeInsert %v4float %11472 %11470 3
      %11474 = OpCompositeExtract %float %11460 0
      %11475 = OpCompositeExtract %float %11460 1
      %11476 = OpFSub %float %11474 %11475
      %11477 = OpCompositeInsert %v4float %float_0_886227548 %11459 0
      %11478 = OpVectorShuffle %v3float %11477 %11477 1 2 3
      %11479 = OpVectorTimesScalar %v3float %11478 %float_2_09439516
      %11480 = OpVectorShuffle %v4float %11477 %11479 0 4 5 6
      %11481 = OpVectorTimesScalar %v4float %11473 %float_0_785398185
      %11482 = OpFMul %float %11476 %float_0_429042608
      %11483 = OpDot %float %11424 %11480
      %11484 = OpDot %float %11429 %11481
      %11485 = OpFAdd %float %11483 %11484
      %11486 = OpExtInst %float %1 Fma %11430 %11482 %11485
      %11487 = OpCompositeInsert %v3float %11486 %108 0
      %11488 = OpDot %float %11434 %11480
      %11489 = OpDot %float %11439 %11481
      %11490 = OpFAdd %float %11488 %11489
      %11491 = OpExtInst %float %1 Fma %11440 %11482 %11490
      %11492 = OpCompositeInsert %v3float %11491 %11487 1
      %11493 = OpDot %float %11444 %11480
      %11494 = OpDot %float %11449 %11481
      %11495 = OpFAdd %float %11493 %11494
      %11496 = OpExtInst %float %1 Fma %11450 %11482 %11495
      %11497 = OpCompositeInsert %v3float %11496 %11492 2
      %11498 = OpExtInst %v3float %1 NMax %108 %11497
      %11499 = OpFMul %v3float %11498 %509
               OpSelectionMerge %11500 None
               OpBranchConditional %11379 %11501 %11500
      %11501 = OpLabel
      %11502 = OpFNegate %v3float %11375
      %11503 = OpCompositeExtract %float %11502 1
      %11504 = OpFMul %float %float_n0_488602996 %11503
      %11505 = OpCompositeInsert %v4float %11504 %562 1
      %11506 = OpCompositeExtract %float %11502 2
      %11507 = OpFMul %float %float_0_488602996 %11506
      %11508 = OpCompositeInsert %v4float %11507 %11505 2
      %11509 = OpCompositeExtract %float %11502 0
      %11510 = OpFMul %float %float_n0_488602996 %11509
      %11511 = OpCompositeInsert %v4float %11510 %11508 3
      %11512 = OpFMul %v3float %11502 %11502
      %11513 = OpFMul %float %float_1_09254801 %11509
      %11514 = OpFMul %float %11513 %11503
      %11515 = OpCompositeInsert %v4float %11514 %551 0
      %11516 = OpFMul %float %float_n1_09254801 %11503
      %11517 = OpFMul %float %11516 %11506
      %11518 = OpCompositeInsert %v4float %11517 %11515 1
      %11519 = OpCompositeExtract %float %11512 2
      %11520 = OpExtInst %float %1 Fma %float_3 %11519 %float_n1
      %11521 = OpFMul %float %float_0_315391988 %11520
      %11522 = OpCompositeInsert %v4float %11521 %11518 2
      %11523 = OpFMul %float %float_n1_09254801 %11509
      %11524 = OpFMul %float %11523 %11506
      %11525 = OpCompositeInsert %v4float %11524 %11522 3
      %11526 = OpCompositeExtract %float %11512 0
      %11527 = OpCompositeExtract %float %11512 1
      %11528 = OpFSub %float %11526 %11527
      %11529 = OpCompositeInsert %v4float %float_0_886227548 %11511 0
      %11530 = OpVectorShuffle %v3float %11529 %11529 1 2 3
      %11531 = OpVectorTimesScalar %v3float %11530 %float_2_09439516
      %11532 = OpVectorShuffle %v4float %11529 %11531 0 4 5 6
      %11533 = OpVectorTimesScalar %v4float %11525 %float_0_785398185
      %11534 = OpFMul %float %11528 %float_0_429042608
      %11535 = OpDot %float %11424 %11532
      %11536 = OpDot %float %11429 %11533
      %11537 = OpFAdd %float %11535 %11536
      %11538 = OpExtInst %float %1 Fma %11430 %11534 %11537
      %11539 = OpCompositeInsert %v3float %11538 %563 0
      %11540 = OpDot %float %11434 %11532
      %11541 = OpDot %float %11439 %11533
      %11542 = OpFAdd %float %11540 %11541
      %11543 = OpExtInst %float %1 Fma %11440 %11534 %11542
      %11544 = OpCompositeInsert %v3float %11543 %11539 1
      %11545 = OpDot %float %11444 %11532
      %11546 = OpDot %float %11449 %11533
      %11547 = OpFAdd %float %11545 %11546
      %11548 = OpExtInst %float %1 Fma %11450 %11534 %11547
      %11549 = OpCompositeInsert %v3float %11548 %11544 2
      %11550 = OpExtInst %v3float %1 NMax %108 %11549
      %11551 = OpFMul %v3float %11550 %509
               OpBranch %11500
      %11500 = OpLabel
      %11552 = OpPhi %v3float %108 %11099 %11551 %11501
               OpSelectionMerge %11553 None
               OpBranchConditional %8688 %11554 %11553
      %11554 = OpLabel
      %11555 = OpAccessChain %_ptr_Uniform_float %View %uint_26
      %11556 = OpLoad %float %11555
      %11557 = OpFOrdNotEqual %bool %11556 %float_0
               OpSelectionMerge %11558 DontFlatten
               OpBranchConditional %11557 %11559 %11558
      %11559 = OpLabel
      %11560 = OpLoad %type_3d_image_0 %View_SkyBentNormalBrickTexture
      %11561 = OpSampledImage %type_sampled_image_0 %11560 %8557
      %11562 = OpImageSampleExplicitLod %v4float %11561 %8497 Lod %float_0
      %11563 = OpVectorShuffle %v3float %11562 %11562 0 1 2
      %11564 = OpVectorTimesScalar %v3float %11563 %float_2
      %11565 = OpFSub %v3float %11564 %134
      %11566 = OpExtInst %float %1 Length %11565
      %11567 = OpExtInst %float %1 NMax %11566 %float_9_99999975en05
      %11568 = OpCompositeConstruct %v3float %11567 %11567 %11567
      %11569 = OpFDiv %v3float %11565 %11568
      %11570 = OpFSub %float %float_1 %11566
      %11571 = OpFSub %float %11566 %float_1
      %11572 = OpExtInst %float %1 Fma %11571 %11570 %float_1
      %11573 = OpCompositeConstruct %v3float %11572 %11572 %11572
      %11574 = OpExtInst %v3float %1 FMix %11569 %11375 %11573
      %11575 = OpDot %float %11569 %11375
      %11576 = OpExtInst %float %1 FClamp %11575 %float_0 %float_1
      %11577 = OpExtInst %float %1 FMix %11576 %float_1 %11572
               OpBranch %11558
      %11558 = OpLabel
      %11578 = OpPhi %float %float_1 %11554 %11577 %11559
      %11579 = OpPhi %float %float_1 %11554 %11566 %11559
      %11580 = OpPhi %v3float %11375 %11554 %11574 %11559
      %11581 = OpCompositeExtract %float %11580 0
      %11582 = OpCompositeExtract %float %11580 1
      %11583 = OpCompositeExtract %float %11580 2
      %11584 = OpCompositeConstruct %v4float %11581 %11582 %11583 %float_1
      %11585 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_0
      %11586 = OpLoad %v4float %11585
      %11587 = OpDot %float %11586 %11584
      %11588 = OpCompositeInsert %v3float %11587 %552 0
      %11589 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_1
      %11590 = OpLoad %v4float %11589
      %11591 = OpDot %float %11590 %11584
      %11592 = OpCompositeInsert %v3float %11591 %11588 1
      %11593 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_2
      %11594 = OpLoad %v4float %11593
      %11595 = OpDot %float %11594 %11584
      %11596 = OpCompositeInsert %v3float %11595 %11592 2
      %11597 = OpVectorShuffle %v4float %11584 %11584 0 1 2 2
      %11598 = OpVectorShuffle %v4float %11584 %11584 1 2 2 0
      %11599 = OpFMul %v4float %11597 %11598
      %11600 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_3
      %11601 = OpLoad %v4float %11600
      %11602 = OpDot %float %11601 %11599
      %11603 = OpCompositeInsert %v3float %11602 %552 0
      %11604 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_4
      %11605 = OpLoad %v4float %11604
      %11606 = OpDot %float %11605 %11599
      %11607 = OpCompositeInsert %v3float %11606 %11603 1
      %11608 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_5
      %11609 = OpLoad %v4float %11608
      %11610 = OpDot %float %11609 %11599
      %11611 = OpCompositeInsert %v3float %11610 %11607 2
      %11612 = OpFMul %float %11582 %11582
      %11613 = OpFNegate %float %11612
      %11614 = OpExtInst %float %1 Fma %11581 %11581 %11613
      %11615 = OpAccessChain %_ptr_Uniform_v4float %View_SkyIrradianceEnvironmentMap %int_0 %uint_6
      %11616 = OpLoad %v4float %11615
      %11617 = OpVectorShuffle %v3float %11616 %11616 0 1 2
      %11618 = OpVectorTimesScalar %v3float %11617 %11614
      %11619 = OpFAdd %v3float %11596 %11611
      %11620 = OpFAdd %v3float %11619 %11618
      %11621 = OpExtInst %v3float %1 NMax %108 %11620
      %11622 = OpVectorShuffle %v3float %632 %632 0 1 2
      %11623 = OpFMul %v3float %11621 %11622
      %11624 = OpFMul %float %11579 %11578
      %11625 = OpVectorTimesScalar %v3float %11623 %11624
               OpSelectionMerge %11626 None
               OpBranchConditional %11379 %11627 %11626
      %11627 = OpLabel
      %11628 = OpFNegate %v3float %11375
      %11629 = OpCompositeExtract %float %11628 0
      %11630 = OpCompositeExtract %float %11628 1
      %11631 = OpCompositeExtract %float %11628 2
      %11632 = OpCompositeConstruct %v4float %11629 %11630 %11631 %float_1
      %11633 = OpLoad %v4float %11585
      %11634 = OpDot %float %11633 %11632
      %11635 = OpCompositeInsert %v3float %11634 %563 0
      %11636 = OpLoad %v4float %11589
      %11637 = OpDot %float %11636 %11632
      %11638 = OpCompositeInsert %v3float %11637 %11635 1
      %11639 = OpLoad %v4float %11593
      %11640 = OpDot %float %11639 %11632
      %11641 = OpCompositeInsert %v3float %11640 %11638 2
      %11642 = OpVectorShuffle %v4float %11632 %11632 0 1 2 2
      %11643 = OpVectorShuffle %v4float %11632 %11632 1 2 2 0
      %11644 = OpFMul %v4float %11642 %11643
      %11645 = OpLoad %v4float %11600
      %11646 = OpDot %float %11645 %11644
      %11647 = OpCompositeInsert %v3float %11646 %563 0
      %11648 = OpLoad %v4float %11604
      %11649 = OpDot %float %11648 %11644
      %11650 = OpCompositeInsert %v3float %11649 %11647 1
      %11651 = OpLoad %v4float %11608
      %11652 = OpDot %float %11651 %11644
      %11653 = OpCompositeInsert %v3float %11652 %11650 2
      %11654 = OpFMul %float %11630 %11630
      %11655 = OpFNegate %float %11654
      %11656 = OpExtInst %float %1 Fma %11629 %11629 %11655
      %11657 = OpLoad %v4float %11615
      %11658 = OpVectorShuffle %v3float %11657 %11657 0 1 2
      %11659 = OpVectorTimesScalar %v3float %11658 %11656
      %11660 = OpFAdd %v3float %11641 %11653
      %11661 = OpFAdd %v3float %11660 %11659
      %11662 = OpExtInst %v3float %1 NMax %108 %11661
      %11663 = OpFMul %v3float %11662 %11622
      %11664 = OpVectorTimesScalar %v3float %11663 %11579
               OpBranch %11626
      %11626 = OpLabel
      %11665 = OpPhi %v3float %108 %11558 %11664 %11627
               OpBranch %11553
      %11553 = OpLabel
      %11666 = OpPhi %v3float %108 %11500 %11625 %11626
      %11667 = OpPhi %v3float %108 %11500 %11665 %11626
      %11668 = OpExtInst %v3float %1 Fma %11552 %8685 %11667
      %11669 = OpExtInst %v3float %1 Fma %11499 %8685 %11666
      %11670 = OpDot %float %11669 %179
      %11671 = OpVectorTimesScalar %v3float %11377 %float_2_04040003
      %11672 = OpFSub %v3float %11671 %182
      %11673 = OpVectorTimesScalar %v3float %11377 %float_n4_79510021
      %11674 = OpFAdd %v3float %11673 %185
      %11675 = OpVectorTimesScalar %v3float %11377 %float_2_75519991
      %11676 = OpFAdd %v3float %11675 %188
      %11677 = OpVectorTimesScalar %v3float %11672 %float_1
      %11678 = OpFAdd %v3float %11677 %11674
      %11679 = OpVectorTimesScalar %v3float %11678 %float_1
      %11680 = OpFAdd %v3float %11679 %11676
      %11681 = OpVectorTimesScalar %v3float %11680 %float_1
      %11682 = OpExtInst %v3float %1 NMax %134 %11681
      %11683 = OpExtInst %v3float %1 NMax %134 %531
      %11684 = OpCompositeExtract %float %11683 1
      %11685 = OpCompositeInsert %v2float %11684 %564 0
      %11686 = OpCompositeInsert %v2float %11670 %11685 1
      %11687 = OpFMul %v3float %11668 %11376
      %11688 = OpExtInst %v3float %1 Fma %11669 %11374 %11687
      %11689 = OpExtInst %v3float %1 Fma %11688 %11682 %10982
               OpBranch %11089
      %11089 = OpLabel
      %11690 = OpPhi %v3float %10982 %11001 %11689 %11553
      %11691 = OpPhi %float %float_0 %11001 %float_1 %11553
      %11692 = OpPhi %v2float %131 %11001 %11686 %11553
      %11693 = OpExtInst %float %1 NMax %float_1 %11691
      %11694 = OpFDiv %float %float_1 %11693
      %11695 = OpVectorTimesScalar %v2float %11692 %11694
      %11696 = OpCompositeExtract %float %11695 0
      %11697 = OpCompositeExtract %float %11695 1
      %11698 = OpBitwiseAnd %uint %11088 %uint_4294902015
      %11699 = OpFMul %float %11697 %11696
      %11700 = OpAccessChain %_ptr_Uniform_float %View %uint_13
      %11701 = OpLoad %float %11700
      %11702 = OpExtInst %float %1 Fma %11699 %11701 %float_0_00390625
      %11703 = OpExtInst %float %1 Log2 %11702
      %11704 = OpExtInst %float %1 Fma %11703 %float_0_0625 %float_0_5
      %11705 = OpFMul %float %11704 %float_255
      %11706 = OpExtInst %float %1 NMin %float_255 %11705
      %11707 = OpConvertFToU %uint %11706
      %11708 = OpBitwiseAnd %uint %11707 %uint_255
      %11709 = OpShiftLeftLogical %uint %11708 %uint_8
      %11710 = OpBitwiseOr %uint %11698 %11709
      %11711 = OpBitwiseAnd %uint %11710 %uint_7
      %11712 = OpIEqual %bool %11711 %uint_1
      %11713 = OpLogicalOr %bool %11712 %false
      %11714 = OpIEqual %bool %11711 %uint_4
      %11715 = OpIEqual %bool %11711 %uint_2
      %11716 = OpLogicalOr %bool %11715 %false
      %11717 = OpIEqual %bool %11711 %uint_5
      %11718 = OpIEqual %bool %11711 %uint_6
      %11719 = OpLogicalOr %bool %11717 %11718
      %11720 = OpLogicalNot %bool %11713
      %11721 = OpLogicalNot %bool %11716
      %11722 = OpLogicalAnd %bool %11720 %11721
      %11723 = OpLogicalNot %bool %11719
      %11724 = OpLogicalAnd %bool %11722 %11723
      %11725 = OpLogicalNot %bool %11714
      %11726 = OpLogicalAnd %bool %11724 %11725
               OpSelectionMerge %11727 None
               OpBranchConditional %11726 %11728 %11727
      %11728 = OpLabel
      %11729 = OpBitwiseAnd %uint %10991 %uint_15
      %11730 = OpShiftLeftLogical %uint %11729 %uint_16
      %11731 = OpBitwiseOr %uint %uint_0 %11730
      %11732 = OpBitwiseAnd %uint %11731 %uint_4287627263
      %11733 = OpBitwiseOr %uint %11732 %uint_1048576
      %11734 = OpBitwiseAnd %uint %11733 %uint_4169138175
      %11735 = OpBitwiseOr %uint %11734 %uint_0
      %11736 = OpBitwiseAnd %uint %11710 %uint_134217728
      %11737 = OpBitwiseOr %uint %11735 %11736
      %11738 = OpBitwiseAnd %uint %11737 %uint_4294901760
      %11739 = OpBitwiseAnd %uint %11710 %uint_65535
      %11740 = OpShiftLeftLogical %uint %11739 %uint_0
      %11741 = OpBitwiseOr %uint %11738 %11740
      %11742 = OpExtInst %v3float %1 FAbs %10837
      %11743 = OpDot %float %134 %11742
      %11744 = OpCompositeConstruct %v2float %11743 %11743
      %11745 = OpVectorShuffle %v2float %10837 %10837 0 1
      %11746 = OpFDiv %v2float %11745 %11744
      %11747 = OpVectorShuffle %v3float %10837 %11746 3 4 2
      %11748 = OpCompositeExtract %float %10837 2
      %11749 = OpFOrdLessThanEqual %bool %11748 %float_0
               OpSelectionMerge %11750 None
               OpBranchConditional %11749 %11751 %11750
      %11751 = OpLabel
      %11752 = OpVectorShuffle %v2float %11746 %469 1 0
      %11753 = OpExtInst %v2float %1 FAbs %11752
      %11754 = OpFSub %v2float %322 %11753
      %11755 = OpVectorShuffle %v2float %11746 %469 0 1
      %11756 = OpFOrdGreaterThanEqual %v2bool %11755 %131
      %11757 = OpCompositeExtract %bool %11756 0
      %11758 = OpSelect %float %11757 %float_1 %float_n1
      %11759 = OpCompositeExtract %bool %11756 1
      %11760 = OpSelect %float %11759 %float_1 %float_n1
      %11761 = OpCompositeConstruct %v2float %11758 %11760
      %11762 = OpFMul %v2float %11754 %11761
      %11763 = OpVectorShuffle %v3float %10837 %11762 3 4 2
               OpBranch %11750
      %11750 = OpLabel
      %11764 = OpPhi %v3float %11747 %11728 %11763 %11751
      %11765 = OpCompositeExtract %float %11764 0
      %11766 = OpCompositeExtract %float %11764 1
      %11767 = OpCompositeConstruct %v2float %11765 %float_0
      %11768 = OpExtInst %uint %1 PackHalf2x16 %11767
      %11769 = OpCompositeConstruct %v2float %11766 %float_0
      %11770 = OpExtInst %uint %1 PackHalf2x16 %11769
      %11771 = OpShiftLeftLogical %uint %11770 %uint_16
      %11772 = OpBitwiseOr %uint %11768 %11771
               OpBranch %11727
      %11727 = OpLabel
      %11773 = OpPhi %uint %uint_0 %11089 %11772 %11750
      %11774 = OpPhi %uint %uint_0 %11089 %11741 %11750
      %11775 = OpSelect %uint %11726 %uint_2 %uint_0
               OpSelectionMerge %11776 DontFlatten
               OpBranchConditional %10858 %11777 %11776
      %11777 = OpLabel
      %11778 = OpBitwiseAnd %uint %10981 %uint_4294967263
      %11779 = OpBitwiseOr %uint %11778 %uint_32
      %11780 = OpAny %bool %567
      %11781 = OpBitwiseAnd %uint %11779 %uint_4294901759
      %11782 = OpSelect %uint %11780 %uint_1 %uint_0
      %11783 = OpBitwiseAnd %uint %11782 %uint_1
      %11784 = OpShiftLeftLogical %uint %11783 %uint_16
      %11785 = OpBitwiseOr %uint %11781 %11784
      %11786 = OpLogicalAnd %bool %11713 %true
               OpSelectionMerge %11787 None
               OpBranchConditional %11786 %11788 %11789
      %11789 = OpLabel
      %11790 = OpLogicalAnd %bool %11716 %true
               OpSelectionMerge %11791 None
               OpBranchConditional %11790 %11792 %11793
      %11793 = OpLabel
               OpSelectionMerge %11794 None
               OpBranchConditional %11718 %11795 %11796
      %11796 = OpLabel
               OpSelectionMerge %11797 None
               OpBranchConditional %11717 %11798 %11799
      %11799 = OpLabel
               OpSelectionMerge %11800 None
               OpBranchConditional %11714 %11801 %11802
      %11802 = OpLabel
      %11803 = OpBitwiseAnd %uint %11785 %uint_4194303
      %11804 = OpExtInst %uint %1 PackHalf2x16 %284
      %11805 = OpShiftRightLogical %uint %11804 %uint_5
      %11806 = OpBitwiseAnd %uint %11805 %uint_1023
      %11807 = OpBitwiseAnd %uint %11806 %uint_1023
      %11808 = OpShiftLeftLogical %uint %11807 %uint_22
      %11809 = OpBitwiseOr %uint %11803 %11808
      %11810 = OpULessThan %bool %11775 %uint_3
               OpSelectionMerge %11811 None
               OpBranchConditional %11810 %11812 %11813
      %11813 = OpLabel
      %11814 = OpISub %uint %11775 %uint_3
      %11815 = OpCompositeExtract %uint %10838 0
      %11816 = OpCompositeExtract %uint %10838 1
      %11817 = OpCompositeConstruct %v3uint %11815 %11816 %11814
               OpImageWrite %10839 %11817 %11809 None
               OpBranch %11811
      %11812 = OpLabel
      %11818 = OpIEqual %bool %11775 %uint_0
      %11819 = OpSelect %uint %11818 %11809 %11774
      %11820 = OpIEqual %bool %11775 %uint_1
      %11821 = OpSelect %uint %11820 %11809 %11773
      %11822 = OpIEqual %bool %11775 %uint_2
      %11823 = OpSelect %uint %11822 %11809 %uint_0
               OpBranch %11811
      %11811 = OpLabel
      %11824 = OpPhi %uint %uint_0 %11813 %11823 %11812
      %11825 = OpPhi %uint %11773 %11813 %11821 %11812
      %11826 = OpPhi %uint %11774 %11813 %11819 %11812
      %11827 = OpIAdd %uint %11775 %uint_1
               OpBranch %11800
      %11801 = OpLabel
      %11828 = OpVectorShuffle %v3float %10841 %468 0 1 2
      %11829 = OpFSub %float %8401 %float_0_5
      %11830 = OpFMul %float %11829 %float_0_00787401572
      %11831 = OpFMul %float %11829 %float_0_0158730168
      %11832 = OpCompositeConstruct %v3float %11830 %11830 %11831
      %11833 = OpExtInst %v3float %1 FClamp %11828 %108 %134
      %11834 = OpCompositeExtract %float %11833 0
               OpSelectionMerge %11835 None
               OpSwitch %uint_0 %11836
      %11836 = OpLabel
      %11837 = OpFOrdLessThan %bool %11834 %float_0_00313066994
               OpSelectionMerge %11838 None
               OpBranchConditional %11837 %11839 %11838
      %11839 = OpLabel
      %11840 = OpFMul %float %11834 %float_12_9200001
               OpBranch %11835
      %11838 = OpLabel
      %11841 = OpExtInst %float %1 Pow %11834 %float_0_416666657
      %11842 = OpExtInst %float %1 Fma %11841 %float_1_05499995 %float_n0_0549999997
               OpBranch %11835
      %11835 = OpLabel
      %11843 = OpPhi %float %11840 %11839 %11842 %11838
      %11844 = OpCompositeExtract %float %11833 1
               OpSelectionMerge %11845 None
               OpSwitch %uint_0 %11846
      %11846 = OpLabel
      %11847 = OpFOrdLessThan %bool %11844 %float_0_00313066994
               OpSelectionMerge %11848 None
               OpBranchConditional %11847 %11849 %11848
      %11849 = OpLabel
      %11850 = OpFMul %float %11844 %float_12_9200001
               OpBranch %11845
      %11848 = OpLabel
      %11851 = OpExtInst %float %1 Pow %11844 %float_0_416666657
      %11852 = OpExtInst %float %1 Fma %11851 %float_1_05499995 %float_n0_0549999997
               OpBranch %11845
      %11845 = OpLabel
      %11853 = OpPhi %float %11850 %11849 %11852 %11848
      %11854 = OpCompositeExtract %float %11833 2
               OpSelectionMerge %11855 None
               OpSwitch %uint_0 %11856
      %11856 = OpLabel
      %11857 = OpFOrdLessThan %bool %11854 %float_0_00313066994
               OpSelectionMerge %11858 None
               OpBranchConditional %11857 %11859 %11858
      %11859 = OpLabel
      %11860 = OpFMul %float %11854 %float_12_9200001
               OpBranch %11855
      %11858 = OpLabel
      %11861 = OpExtInst %float %1 Pow %11854 %float_0_416666657
      %11862 = OpExtInst %float %1 Fma %11861 %float_1_05499995 %float_n0_0549999997
               OpBranch %11855
      %11855 = OpLabel
      %11863 = OpPhi %float %11860 %11859 %11862 %11858
      %11864 = OpCompositeConstruct %v3float %11843 %11853 %11863
      %11865 = OpBitcast %v3uint %11864
      %11866 = OpBitwiseAnd %v3uint %11865 %360
      %11867 = OpExtInst %v3uint %1 UMin %11866 %511
      %11868 = OpConvertUToF %v3float %11867
      %11869 = OpExtInst %v3float %1 Fma %11832 %11868 %11864
      %11870 = OpExtInst %v3float %1 FClamp %11869 %108 %134
      %11871 = OpCompositeExtract %float %11870 0
      %11872 = OpFMul %float %11871 %float_127
      %11873 = OpConvertFToU %uint %11872
      %11874 = OpShiftLeftLogical %uint %11873 %uint_0
      %11875 = OpCompositeExtract %float %11870 1
      %11876 = OpFMul %float %11875 %float_127
      %11877 = OpConvertFToU %uint %11876
      %11878 = OpShiftLeftLogical %uint %11877 %uint_7
      %11879 = OpCompositeExtract %float %11870 2
      %11880 = OpFMul %float %11879 %float_63
      %11881 = OpConvertFToU %uint %11880
      %11882 = OpShiftLeftLogical %uint %11881 %uint_14
      %11883 = OpBitwiseOr %uint %11874 %11878
      %11884 = OpBitwiseOr %uint %11883 %11882
      %11885 = OpBitwiseAnd %uint %11884 %uint_4095
      %11886 = OpShiftRightLogical %uint %11884 %uint_12
      %11887 = OpBitwiseAnd %uint %11886 %uint_255
      %11888 = OpExtInst %float %1 FClamp %10848 %float_0 %float_1
      %11889 = OpFMul %float %11888 %float_255
      %11890 = OpConvertFToU %uint %11889
      %11891 = OpCompositeConstruct %v3float %10850 %float_0 %10844
      %11892 = OpExtInst %v3float %1 FClamp %11891 %108 %134
      %11893 = OpBitcast %v3uint %11892
      %11894 = OpBitwiseAnd %v3uint %11893 %360
      %11895 = OpExtInst %v3uint %1 UMin %11894 %511
      %11896 = OpConvertUToF %v3float %11895
      %11897 = OpExtInst %v3float %1 Fma %11832 %11896 %11892
      %11898 = OpExtInst %v3float %1 FClamp %11897 %108 %134
      %11899 = OpCompositeExtract %float %11898 0
      %11900 = OpFMul %float %11899 %float_127
      %11901 = OpConvertFToU %uint %11900
      %11902 = OpShiftLeftLogical %uint %11901 %uint_0
      %11903 = OpCompositeExtract %float %11898 1
      %11904 = OpFMul %float %11903 %float_127
      %11905 = OpConvertFToU %uint %11904
      %11906 = OpShiftLeftLogical %uint %11905 %uint_7
      %11907 = OpCompositeExtract %float %11898 2
      %11908 = OpFMul %float %11907 %float_63
      %11909 = OpConvertFToU %uint %11908
      %11910 = OpShiftLeftLogical %uint %11909 %uint_14
      %11911 = OpBitwiseOr %uint %11902 %11906
      %11912 = OpBitwiseOr %uint %11911 %11910
      %11913 = OpBitwiseAnd %uint %11710 %uint_65535
      %11914 = OpShiftLeftLogical %uint %11913 %uint_0
      %11915 = OpBitwiseOr %uint %uint_0 %11914
      %11916 = OpShiftLeftLogical %uint %11887 %uint_8
      %11917 = OpBitwiseOr %uint %11916 %11890
      %11918 = OpBitwiseAnd %uint %11915 %uint_65535
      %11919 = OpShiftLeftLogical %uint %11917 %uint_16
      %11920 = OpBitwiseOr %uint %11918 %11919
      %11921 = OpULessThan %bool %11775 %uint_3
               OpSelectionMerge %11922 None
               OpBranchConditional %11921 %11923 %11924
      %11924 = OpLabel
      %11925 = OpISub %uint %11775 %uint_3
      %11926 = OpCompositeExtract %uint %10838 0
      %11927 = OpCompositeExtract %uint %10838 1
      %11928 = OpCompositeConstruct %v3uint %11926 %11927 %11925
               OpImageWrite %10839 %11928 %11920 None
               OpBranch %11922
      %11923 = OpLabel
      %11929 = OpIEqual %bool %11775 %uint_0
      %11930 = OpSelect %uint %11929 %11920 %11774
      %11931 = OpIEqual %bool %11775 %uint_1
      %11932 = OpSelect %uint %11931 %11920 %11773
      %11933 = OpIEqual %bool %11775 %uint_2
      %11934 = OpSelect %uint %11933 %11920 %uint_0
               OpBranch %11922
      %11922 = OpLabel
      %11935 = OpPhi %uint %uint_0 %11924 %11934 %11923
      %11936 = OpPhi %uint %11773 %11924 %11932 %11923
      %11937 = OpPhi %uint %11774 %11924 %11930 %11923
      %11938 = OpIAdd %uint %11775 %uint_1
      %11939 = OpShiftLeftLogical %uint %11885 %uint_20
      %11940 = OpBitwiseOr %uint %11939 %11912
      %11941 = OpULessThan %bool %11938 %uint_3
               OpSelectionMerge %11942 None
               OpBranchConditional %11941 %11943 %11944
      %11944 = OpLabel
      %11945 = OpIAdd %uint %11775 %uint_4294967294
      %11946 = OpCompositeExtract %uint %10838 0
      %11947 = OpCompositeExtract %uint %10838 1
      %11948 = OpCompositeConstruct %v3uint %11946 %11947 %11945
               OpImageWrite %10839 %11948 %11940 None
               OpBranch %11942
      %11943 = OpLabel
      %11949 = OpIEqual %bool %11938 %uint_0
      %11950 = OpSelect %uint %11949 %11940 %11937
      %11951 = OpIEqual %bool %11938 %uint_1
      %11952 = OpSelect %uint %11951 %11940 %11936
      %11953 = OpIEqual %bool %11938 %uint_2
      %11954 = OpSelect %uint %11953 %11940 %11935
               OpBranch %11942
      %11942 = OpLabel
      %11955 = OpPhi %uint %11935 %11944 %11954 %11943
      %11956 = OpPhi %uint %11936 %11944 %11952 %11943
      %11957 = OpPhi %uint %11937 %11944 %11950 %11943
      %11958 = OpIAdd %uint %11775 %uint_2
               OpBranch %11800
      %11800 = OpLabel
      %11959 = OpPhi %uint %11809 %11811 %uint_0 %11942
      %11960 = OpPhi %uint %11824 %11811 %11955 %11942
      %11961 = OpPhi %uint %11825 %11811 %11956 %11942
      %11962 = OpPhi %uint %11826 %11811 %11957 %11942
      %11963 = OpPhi %uint %11827 %11811 %11958 %11942
               OpBranch %11797
      %11798 = OpLabel
      %11964 = OpBitwiseAnd %uint %11710 %uint_65535
      %11965 = OpShiftLeftLogical %uint %11964 %uint_0
      %11966 = OpBitwiseOr %uint %uint_0 %11965
      %11967 = OpBitwiseAnd %uint %11966 %uint_65535
      %11968 = OpULessThan %bool %11775 %uint_3
               OpSelectionMerge %11969 None
               OpBranchConditional %11968 %11970 %11971
      %11971 = OpLabel
      %11972 = OpISub %uint %11775 %uint_3
      %11973 = OpCompositeExtract %uint %10838 0
      %11974 = OpCompositeExtract %uint %10838 1
      %11975 = OpCompositeConstruct %v3uint %11973 %11974 %11972
               OpImageWrite %10839 %11975 %11967 None
               OpBranch %11969
      %11970 = OpLabel
      %11976 = OpIEqual %bool %11775 %uint_0
      %11977 = OpSelect %uint %11976 %11967 %11774
      %11978 = OpIEqual %bool %11775 %uint_1
      %11979 = OpSelect %uint %11978 %11967 %11773
      %11980 = OpIEqual %bool %11775 %uint_2
      %11981 = OpSelect %uint %11980 %11967 %uint_0
               OpBranch %11969
      %11969 = OpLabel
      %11982 = OpPhi %uint %uint_0 %11971 %11981 %11970
      %11983 = OpPhi %uint %11773 %11971 %11979 %11970
      %11984 = OpPhi %uint %11774 %11971 %11977 %11970
      %11985 = OpIAdd %uint %11775 %uint_1
               OpBranch %11797
      %11797 = OpLabel
      %11986 = OpPhi %uint %11959 %11800 %11785 %11969
      %11987 = OpPhi %uint %11960 %11800 %11982 %11969
      %11988 = OpPhi %uint %11961 %11800 %11983 %11969
      %11989 = OpPhi %uint %11962 %11800 %11984 %11969
      %11990 = OpPhi %uint %11963 %11800 %11985 %11969
               OpBranch %11794
      %11795 = OpLabel
      %11991 = OpBitwiseAnd %uint %11710 %uint_65535
      %11992 = OpShiftLeftLogical %uint %11991 %uint_0
      %11993 = OpBitwiseOr %uint %uint_0 %11992
      %11994 = OpBitwiseAnd %uint %11993 %uint_65535
      %11995 = OpExtInst %float %1 FClamp %10844 %float_0 %float_1
      %11996 = OpFMul %float %11995 %float_255
      %11997 = OpConvertFToU %uint %11996
      %11998 = OpShiftLeftLogical %uint %11997 %uint_16
      %11999 = OpBitwiseOr %uint %uint_0 %11998
      %12000 = OpBitwiseOr %uint %11999 %uint_0
      %12001 = OpBitwiseOr %uint %11994 %12000
      %12002 = OpULessThan %bool %11775 %uint_3
               OpSelectionMerge %12003 None
               OpBranchConditional %12002 %12004 %12005
      %12005 = OpLabel
      %12006 = OpISub %uint %11775 %uint_3
      %12007 = OpCompositeExtract %uint %10838 0
      %12008 = OpCompositeExtract %uint %10838 1
      %12009 = OpCompositeConstruct %v3uint %12007 %12008 %12006
               OpImageWrite %10839 %12009 %12001 None
               OpBranch %12003
      %12004 = OpLabel
      %12010 = OpIEqual %bool %11775 %uint_0
      %12011 = OpSelect %uint %12010 %12001 %11774
      %12012 = OpIEqual %bool %11775 %uint_1
      %12013 = OpSelect %uint %12012 %12001 %11773
      %12014 = OpIEqual %bool %11775 %uint_2
      %12015 = OpSelect %uint %12014 %12001 %uint_0
               OpBranch %12003
      %12003 = OpLabel
      %12016 = OpPhi %uint %uint_0 %12005 %12015 %12004
      %12017 = OpPhi %uint %11773 %12005 %12013 %12004
      %12018 = OpPhi %uint %11774 %12005 %12011 %12004
      %12019 = OpIAdd %uint %11775 %uint_1
               OpBranch %11794
      %11794 = OpLabel
      %12020 = OpPhi %uint %11986 %11797 %11785 %12003
      %12021 = OpPhi %uint %11987 %11797 %12016 %12003
      %12022 = OpPhi %uint %11988 %11797 %12017 %12003
      %12023 = OpPhi %uint %11989 %11797 %12018 %12003
      %12024 = OpPhi %uint %11990 %11797 %12019 %12003
               OpBranch %11791
      %11792 = OpLabel
      %12025 = OpBitwiseAnd %uint %11785 %uint_4294967293
      %12026 = OpBitwiseOr %uint %12025 %uint_2
      %12027 = OpBitwiseAnd %uint %11710 %uint_65535
      %12028 = OpShiftLeftLogical %uint %12027 %uint_0
      %12029 = OpBitwiseOr %uint %uint_0 %12028
      %12030 = OpBitwiseAnd %uint %12029 %uint_65535
      %12031 = OpBitwiseAnd %uint %11086 %uint_7
      %12032 = OpShiftLeftLogical %uint %12031 %uint_16
      %12033 = OpBitwiseOr %uint %12030 %12032
      %12034 = OpIEqual %bool %11086 %uint_0
               OpSelectionMerge %12035 DontFlatten
               OpBranchConditional %12034 %12036 %12037
      %12037 = OpLabel
      %12038 = OpIEqual %bool %11086 %uint_1
               OpSelectionMerge %12039 None
               OpBranchConditional %12038 %12040 %12041
      %12041 = OpLabel
      %12042 = OpIEqual %bool %11086 %uint_2
               OpSelectionMerge %12043 None
               OpBranchConditional %12042 %12044 %12045
      %12045 = OpLabel
      %12046 = OpIEqual %bool %11086 %uint_3
      %12047 = OpIEqual %bool %11086 %uint_5
      %12048 = OpLogicalOr %bool %12046 %12047
               OpSelectionMerge %12049 None
               OpBranchConditional %12048 %12050 %12051
      %12051 = OpLabel
      %12052 = OpIEqual %bool %11086 %uint_4
               OpSelectionMerge %12053 None
               OpBranchConditional %12052 %12054 %12053
      %12054 = OpLabel
      %12055 = OpVectorShuffle %v3float %10841 %468 0 1 2
      %12056 = OpFSub %float %8401 %float_0_5
      %12057 = OpFMul %float %12056 %float_0_00787401572
      %12058 = OpFMul %float %12056 %float_0_0158730168
      %12059 = OpCompositeConstruct %v3float %12057 %12057 %12058
      %12060 = OpExtInst %v3float %1 FClamp %12055 %108 %134
      %12061 = OpCompositeExtract %float %12060 0
               OpSelectionMerge %12062 None
               OpSwitch %uint_0 %12063
      %12063 = OpLabel
      %12064 = OpFOrdLessThan %bool %12061 %float_0_00313066994
               OpSelectionMerge %12065 None
               OpBranchConditional %12064 %12066 %12065
      %12066 = OpLabel
      %12067 = OpFMul %float %12061 %float_12_9200001
               OpBranch %12062
      %12065 = OpLabel
      %12068 = OpExtInst %float %1 Pow %12061 %float_0_416666657
      %12069 = OpExtInst %float %1 Fma %12068 %float_1_05499995 %float_n0_0549999997
               OpBranch %12062
      %12062 = OpLabel
      %12070 = OpPhi %float %12067 %12066 %12069 %12065
      %12071 = OpCompositeExtract %float %12060 1
               OpSelectionMerge %12072 None
               OpSwitch %uint_0 %12073
      %12073 = OpLabel
      %12074 = OpFOrdLessThan %bool %12071 %float_0_00313066994
               OpSelectionMerge %12075 None
               OpBranchConditional %12074 %12076 %12075
      %12076 = OpLabel
      %12077 = OpFMul %float %12071 %float_12_9200001
               OpBranch %12072
      %12075 = OpLabel
      %12078 = OpExtInst %float %1 Pow %12071 %float_0_416666657
      %12079 = OpExtInst %float %1 Fma %12078 %float_1_05499995 %float_n0_0549999997
               OpBranch %12072
      %12072 = OpLabel
      %12080 = OpPhi %float %12077 %12076 %12079 %12075
      %12081 = OpCompositeExtract %float %12060 2
               OpSelectionMerge %12082 None
               OpSwitch %uint_0 %12083
      %12083 = OpLabel
      %12084 = OpFOrdLessThan %bool %12081 %float_0_00313066994
               OpSelectionMerge %12085 None
               OpBranchConditional %12084 %12086 %12085
      %12086 = OpLabel
      %12087 = OpFMul %float %12081 %float_12_9200001
               OpBranch %12082
      %12085 = OpLabel
      %12088 = OpExtInst %float %1 Pow %12081 %float_0_416666657
      %12089 = OpExtInst %float %1 Fma %12088 %float_1_05499995 %float_n0_0549999997
               OpBranch %12082
      %12082 = OpLabel
      %12090 = OpPhi %float %12087 %12086 %12089 %12085
      %12091 = OpCompositeConstruct %v3float %12070 %12080 %12090
      %12092 = OpBitcast %v3uint %12091
      %12093 = OpBitwiseAnd %v3uint %12092 %360
      %12094 = OpExtInst %v3uint %1 UMin %12093 %511
      %12095 = OpConvertUToF %v3float %12094
      %12096 = OpExtInst %v3float %1 Fma %12059 %12095 %12091
      %12097 = OpExtInst %v3float %1 FClamp %12096 %108 %134
      %12098 = OpCompositeExtract %float %12097 0
      %12099 = OpFMul %float %12098 %float_127
      %12100 = OpConvertFToU %uint %12099
      %12101 = OpShiftLeftLogical %uint %12100 %uint_0
      %12102 = OpCompositeExtract %float %12097 1
      %12103 = OpFMul %float %12102 %float_127
      %12104 = OpConvertFToU %uint %12103
      %12105 = OpShiftLeftLogical %uint %12104 %uint_7
      %12106 = OpCompositeExtract %float %12097 2
      %12107 = OpFMul %float %12106 %float_63
      %12108 = OpConvertFToU %uint %12107
      %12109 = OpShiftLeftLogical %uint %12108 %uint_14
      %12110 = OpBitwiseOr %uint %12101 %12105
      %12111 = OpBitwiseOr %uint %12110 %12109
      %12112 = OpVectorShuffle %v3float %10851 %10851 0 1 2
      %12113 = OpExtInst %v3float %1 FClamp %12112 %108 %134
      %12114 = OpCompositeExtract %float %12113 0
               OpSelectionMerge %12115 None
               OpSwitch %uint_0 %12116
      %12116 = OpLabel
      %12117 = OpFOrdLessThan %bool %12114 %float_0_00313066994
               OpSelectionMerge %12118 None
               OpBranchConditional %12117 %12119 %12118
      %12119 = OpLabel
      %12120 = OpFMul %float %12114 %float_12_9200001
               OpBranch %12115
      %12118 = OpLabel
      %12121 = OpExtInst %float %1 Pow %12114 %float_0_416666657
      %12122 = OpExtInst %float %1 Fma %12121 %float_1_05499995 %float_n0_0549999997
               OpBranch %12115
      %12115 = OpLabel
      %12123 = OpPhi %float %12120 %12119 %12122 %12118
      %12124 = OpCompositeExtract %float %12113 1
               OpSelectionMerge %12125 None
               OpSwitch %uint_0 %12126
      %12126 = OpLabel
      %12127 = OpFOrdLessThan %bool %12124 %float_0_00313066994
               OpSelectionMerge %12128 None
               OpBranchConditional %12127 %12129 %12128
      %12129 = OpLabel
      %12130 = OpFMul %float %12124 %float_12_9200001
               OpBranch %12125
      %12128 = OpLabel
      %12131 = OpExtInst %float %1 Pow %12124 %float_0_416666657
      %12132 = OpExtInst %float %1 Fma %12131 %float_1_05499995 %float_n0_0549999997
               OpBranch %12125
      %12125 = OpLabel
      %12133 = OpPhi %float %12130 %12129 %12132 %12128
      %12134 = OpCompositeExtract %float %12113 2
               OpSelectionMerge %12135 None
               OpSwitch %uint_0 %12136
      %12136 = OpLabel
      %12137 = OpFOrdLessThan %bool %12134 %float_0_00313066994
               OpSelectionMerge %12138 None
               OpBranchConditional %12137 %12139 %12138
      %12139 = OpLabel
      %12140 = OpFMul %float %12134 %float_12_9200001
               OpBranch %12135
      %12138 = OpLabel
      %12141 = OpExtInst %float %1 Pow %12134 %float_0_416666657
      %12142 = OpExtInst %float %1 Fma %12141 %float_1_05499995 %float_n0_0549999997
               OpBranch %12135
      %12135 = OpLabel
      %12143 = OpPhi %float %12140 %12139 %12142 %12138
      %12144 = OpCompositeConstruct %v3float %12123 %12133 %12143
      %12145 = OpBitcast %v3uint %12144
      %12146 = OpBitwiseAnd %v3uint %12145 %360
      %12147 = OpExtInst %v3uint %1 UMin %12146 %511
      %12148 = OpConvertUToF %v3float %12147
      %12149 = OpExtInst %v3float %1 Fma %12059 %12148 %12144
      %12150 = OpExtInst %v3float %1 FClamp %12149 %108 %134
      %12151 = OpCompositeExtract %float %12150 0
      %12152 = OpFMul %float %12151 %float_127
      %12153 = OpConvertFToU %uint %12152
      %12154 = OpShiftLeftLogical %uint %12153 %uint_0
      %12155 = OpCompositeExtract %float %12150 1
      %12156 = OpFMul %float %12155 %float_127
      %12157 = OpConvertFToU %uint %12156
      %12158 = OpShiftLeftLogical %uint %12157 %uint_7
      %12159 = OpCompositeExtract %float %12150 2
      %12160 = OpFMul %float %12159 %float_63
      %12161 = OpConvertFToU %uint %12160
      %12162 = OpShiftLeftLogical %uint %12161 %uint_14
      %12163 = OpBitwiseOr %uint %12154 %12158
      %12164 = OpBitwiseOr %uint %12163 %12162
      %12165 = OpBitwiseOr %uint %12033 %uint_0
      %12166 = OpULessThan %bool %11775 %uint_3
               OpSelectionMerge %12167 None
               OpBranchConditional %12166 %12168 %12169
      %12169 = OpLabel
      %12170 = OpISub %uint %11775 %uint_3
      %12171 = OpCompositeExtract %uint %10838 0
      %12172 = OpCompositeExtract %uint %10838 1
      %12173 = OpCompositeConstruct %v3uint %12171 %12172 %12170
               OpImageWrite %10839 %12173 %12165 None
               OpBranch %12167
      %12168 = OpLabel
      %12174 = OpIEqual %bool %11775 %uint_0
      %12175 = OpSelect %uint %12174 %12165 %11774
      %12176 = OpIEqual %bool %11775 %uint_1
      %12177 = OpSelect %uint %12176 %12165 %11773
      %12178 = OpIEqual %bool %11775 %uint_2
      %12179 = OpSelect %uint %12178 %12165 %uint_0
               OpBranch %12167
      %12167 = OpLabel
      %12180 = OpPhi %uint %uint_0 %12169 %12179 %12168
      %12181 = OpPhi %uint %11773 %12169 %12177 %12168
      %12182 = OpPhi %uint %11774 %12169 %12175 %12168
      %12183 = OpIAdd %uint %11775 %uint_1
      %12184 = OpBitwiseOr %uint %12111 %uint_0
      %12185 = OpULessThan %bool %12183 %uint_3
               OpSelectionMerge %12186 None
               OpBranchConditional %12185 %12187 %12188
      %12188 = OpLabel
      %12189 = OpIAdd %uint %11775 %uint_4294967294
      %12190 = OpCompositeExtract %uint %10838 0
      %12191 = OpCompositeExtract %uint %10838 1
      %12192 = OpCompositeConstruct %v3uint %12190 %12191 %12189
               OpImageWrite %10839 %12192 %12184 None
               OpBranch %12186
      %12187 = OpLabel
      %12193 = OpIEqual %bool %12183 %uint_0
      %12194 = OpSelect %uint %12193 %12184 %12182
      %12195 = OpIEqual %bool %12183 %uint_1
      %12196 = OpSelect %uint %12195 %12184 %12181
      %12197 = OpIEqual %bool %12183 %uint_2
      %12198 = OpSelect %uint %12197 %12184 %12180
               OpBranch %12186
      %12186 = OpLabel
      %12199 = OpPhi %uint %12180 %12188 %12198 %12187
      %12200 = OpPhi %uint %12181 %12188 %12196 %12187
      %12201 = OpPhi %uint %12182 %12188 %12194 %12187
      %12202 = OpIAdd %uint %11775 %uint_2
      %12203 = OpBitwiseOr %uint %12164 %uint_0
      %12204 = OpULessThan %bool %12202 %uint_3
               OpSelectionMerge %12205 None
               OpBranchConditional %12204 %12206 %12207
      %12207 = OpLabel
      %12208 = OpIAdd %uint %11775 %uint_4294967295
      %12209 = OpCompositeExtract %uint %10838 0
      %12210 = OpCompositeExtract %uint %10838 1
      %12211 = OpCompositeConstruct %v3uint %12209 %12210 %12208
               OpImageWrite %10839 %12211 %12203 None
               OpBranch %12205
      %12206 = OpLabel
      %12212 = OpIEqual %bool %12202 %uint_0
      %12213 = OpSelect %uint %12212 %12203 %12201
      %12214 = OpIEqual %bool %12202 %uint_1
      %12215 = OpSelect %uint %12214 %12203 %12200
      %12216 = OpIEqual %bool %12202 %uint_2
      %12217 = OpSelect %uint %12216 %12203 %12199
               OpBranch %12205
      %12205 = OpLabel
      %12218 = OpPhi %uint %12199 %12207 %12217 %12206
      %12219 = OpPhi %uint %12200 %12207 %12215 %12206
      %12220 = OpPhi %uint %12201 %12207 %12213 %12206
      %12221 = OpIAdd %uint %11775 %uint_3
               OpBranch %12053
      %12053 = OpLabel
      %12222 = OpPhi %uint %uint_0 %12051 %12218 %12205
      %12223 = OpPhi %uint %11773 %12051 %12219 %12205
      %12224 = OpPhi %uint %11774 %12051 %12220 %12205
      %12225 = OpPhi %uint %11775 %12051 %12221 %12205
      %12226 = OpSelect %uint %12052 %uint_0 %12026
               OpBranch %12049
      %12050 = OpLabel
      %12227 = OpExtInst %float %1 FAbs %470
      %12228 = OpFSub %float %float_1 %12227
      %12229 = OpVectorShuffle %v3float %10841 %468 0 1 2
      %12230 = OpFSub %float %8401 %float_0_5
      %12231 = OpFMul %float %12230 %float_0_00787401572
      %12232 = OpFMul %float %12230 %float_0_0158730168
      %12233 = OpCompositeConstruct %v3float %12231 %12231 %12232
      %12234 = OpExtInst %v3float %1 FClamp %12229 %108 %134
      %12235 = OpCompositeExtract %float %12234 0
               OpSelectionMerge %12236 None
               OpSwitch %uint_0 %12237
      %12237 = OpLabel
      %12238 = OpFOrdLessThan %bool %12235 %float_0_00313066994
               OpSelectionMerge %12239 None
               OpBranchConditional %12238 %12240 %12239
      %12240 = OpLabel
      %12241 = OpFMul %float %12235 %float_12_9200001
               OpBranch %12236
      %12239 = OpLabel
      %12242 = OpExtInst %float %1 Pow %12235 %float_0_416666657
      %12243 = OpExtInst %float %1 Fma %12242 %float_1_05499995 %float_n0_0549999997
               OpBranch %12236
      %12236 = OpLabel
      %12244 = OpPhi %float %12241 %12240 %12243 %12239
      %12245 = OpCompositeExtract %float %12234 1
               OpSelectionMerge %12246 None
               OpSwitch %uint_0 %12247
      %12247 = OpLabel
      %12248 = OpFOrdLessThan %bool %12245 %float_0_00313066994
               OpSelectionMerge %12249 None
               OpBranchConditional %12248 %12250 %12249
      %12250 = OpLabel
      %12251 = OpFMul %float %12245 %float_12_9200001
               OpBranch %12246
      %12249 = OpLabel
      %12252 = OpExtInst %float %1 Pow %12245 %float_0_416666657
      %12253 = OpExtInst %float %1 Fma %12252 %float_1_05499995 %float_n0_0549999997
               OpBranch %12246
      %12246 = OpLabel
      %12254 = OpPhi %float %12251 %12250 %12253 %12249
      %12255 = OpCompositeExtract %float %12234 2
               OpSelectionMerge %12256 None
               OpSwitch %uint_0 %12257
      %12257 = OpLabel
      %12258 = OpFOrdLessThan %bool %12255 %float_0_00313066994
               OpSelectionMerge %12259 None
               OpBranchConditional %12258 %12260 %12259
      %12260 = OpLabel
      %12261 = OpFMul %float %12255 %float_12_9200001
               OpBranch %12256
      %12259 = OpLabel
      %12262 = OpExtInst %float %1 Pow %12255 %float_0_416666657
      %12263 = OpExtInst %float %1 Fma %12262 %float_1_05499995 %float_n0_0549999997
               OpBranch %12256
      %12256 = OpLabel
      %12264 = OpPhi %float %12261 %12260 %12263 %12259
      %12265 = OpCompositeConstruct %v3float %12244 %12254 %12264
      %12266 = OpBitcast %v3uint %12265
      %12267 = OpBitwiseAnd %v3uint %12266 %360
      %12268 = OpExtInst %v3uint %1 UMin %12267 %511
      %12269 = OpConvertUToF %v3float %12268
      %12270 = OpExtInst %v3float %1 Fma %12233 %12269 %12265
      %12271 = OpExtInst %v3float %1 FClamp %12270 %108 %134
      %12272 = OpCompositeExtract %float %12271 0
      %12273 = OpFMul %float %12272 %float_127
      %12274 = OpConvertFToU %uint %12273
      %12275 = OpShiftLeftLogical %uint %12274 %uint_0
      %12276 = OpCompositeExtract %float %12271 1
      %12277 = OpFMul %float %12276 %float_127
      %12278 = OpConvertFToU %uint %12277
      %12279 = OpShiftLeftLogical %uint %12278 %uint_7
      %12280 = OpCompositeExtract %float %12271 2
      %12281 = OpFMul %float %12280 %float_63
      %12282 = OpConvertFToU %uint %12281
      %12283 = OpShiftLeftLogical %uint %12282 %uint_14
      %12284 = OpBitwiseOr %uint %12275 %12279
      %12285 = OpBitwiseOr %uint %12284 %12283
      %12286 = OpVectorShuffle %v3float %10851 %10851 0 1 2
      %12287 = OpExtInst %v3float %1 FClamp %12286 %108 %134
      %12288 = OpCompositeExtract %float %12287 0
               OpSelectionMerge %12289 None
               OpSwitch %uint_0 %12290
      %12290 = OpLabel
      %12291 = OpFOrdLessThan %bool %12288 %float_0_00313066994
               OpSelectionMerge %12292 None
               OpBranchConditional %12291 %12293 %12292
      %12293 = OpLabel
      %12294 = OpFMul %float %12288 %float_12_9200001
               OpBranch %12289
      %12292 = OpLabel
      %12295 = OpExtInst %float %1 Pow %12288 %float_0_416666657
      %12296 = OpExtInst %float %1 Fma %12295 %float_1_05499995 %float_n0_0549999997
               OpBranch %12289
      %12289 = OpLabel
      %12297 = OpPhi %float %12294 %12293 %12296 %12292
      %12298 = OpCompositeExtract %float %12287 1
               OpSelectionMerge %12299 None
               OpSwitch %uint_0 %12300
      %12300 = OpLabel
      %12301 = OpFOrdLessThan %bool %12298 %float_0_00313066994
               OpSelectionMerge %12302 None
               OpBranchConditional %12301 %12303 %12302
      %12303 = OpLabel
      %12304 = OpFMul %float %12298 %float_12_9200001
               OpBranch %12299
      %12302 = OpLabel
      %12305 = OpExtInst %float %1 Pow %12298 %float_0_416666657
      %12306 = OpExtInst %float %1 Fma %12305 %float_1_05499995 %float_n0_0549999997
               OpBranch %12299
      %12299 = OpLabel
      %12307 = OpPhi %float %12304 %12303 %12306 %12302
      %12308 = OpCompositeExtract %float %12287 2
               OpSelectionMerge %12309 None
               OpSwitch %uint_0 %12310
      %12310 = OpLabel
      %12311 = OpFOrdLessThan %bool %12308 %float_0_00313066994
               OpSelectionMerge %12312 None
               OpBranchConditional %12311 %12313 %12312
      %12313 = OpLabel
      %12314 = OpFMul %float %12308 %float_12_9200001
               OpBranch %12309
      %12312 = OpLabel
      %12315 = OpExtInst %float %1 Pow %12308 %float_0_416666657
      %12316 = OpExtInst %float %1 Fma %12315 %float_1_05499995 %float_n0_0549999997
               OpBranch %12309
      %12309 = OpLabel
      %12317 = OpPhi %float %12314 %12313 %12316 %12312
      %12318 = OpCompositeConstruct %v3float %12297 %12307 %12317
      %12319 = OpBitcast %v3uint %12318
      %12320 = OpBitwiseAnd %v3uint %12319 %360
      %12321 = OpExtInst %v3uint %1 UMin %12320 %511
      %12322 = OpConvertUToF %v3float %12321
      %12323 = OpExtInst %v3float %1 Fma %12233 %12322 %12318
      %12324 = OpExtInst %v3float %1 FClamp %12323 %108 %134
      %12325 = OpCompositeExtract %float %12324 0
      %12326 = OpFMul %float %12325 %float_127
      %12327 = OpConvertFToU %uint %12326
      %12328 = OpShiftLeftLogical %uint %12327 %uint_0
      %12329 = OpCompositeExtract %float %12324 1
      %12330 = OpFMul %float %12329 %float_127
      %12331 = OpConvertFToU %uint %12330
      %12332 = OpShiftLeftLogical %uint %12331 %uint_7
      %12333 = OpCompositeExtract %float %12324 2
      %12334 = OpFMul %float %12333 %float_63
      %12335 = OpConvertFToU %uint %12334
      %12336 = OpShiftLeftLogical %uint %12335 %uint_14
      %12337 = OpBitwiseOr %uint %12328 %12332
      %12338 = OpBitwiseOr %uint %12337 %12336
      %12339 = OpExtInst %float %1 FClamp %12228 %float_0 %float_1
      %12340 = OpExtInst %float %1 FClamp %12339 %float_0 %float_1
      %12341 = OpFMul %float %12340 %float_127
      %12342 = OpConvertFToU %uint %12341
      %12343 = OpExtInst %uint %1 PackHalf2x16 %568
      %12344 = OpShiftLeftLogical %uint %12343 %uint_15
      %12345 = OpBitwiseAnd %uint %12344 %uint_1072693248
      %12346 = OpShiftLeftLogical %uint %12343 %uint_5
      %12347 = OpBitwiseAnd %uint %12346 %uint_1047552
      %12348 = OpShiftRightLogical %uint %12343 %uint_5
      %12349 = OpBitwiseAnd %uint %12348 %uint_1023
      %12350 = OpBitwiseOr %uint %12345 %12347
      %12351 = OpBitwiseOr %uint %12350 %12349
      %12352 = OpBitwiseAnd %uint %12351 %uint_4095
      %12353 = OpShiftRightLogical %uint %12351 %uint_12
      %12354 = OpBitwiseAnd %uint %12353 %uint_4095
      %12355 = OpShiftRightLogical %uint %12351 %uint_24
      %12356 = OpBitwiseAnd %uint %12355 %uint_63
      %12357 = OpBitwiseAnd %uint %12342 %uint_127
      %12358 = OpShiftLeftLogical %uint %12357 %uint_19
      %12359 = OpBitwiseOr %uint %12033 %12358
      %12360 = OpShiftLeftLogical %uint %12356 %uint_26
      %12361 = OpBitwiseOr %uint %12359 %12360
      %12362 = OpULessThan %bool %11775 %uint_3
               OpSelectionMerge %12363 None
               OpBranchConditional %12362 %12364 %12365
      %12365 = OpLabel
      %12366 = OpISub %uint %11775 %uint_3
      %12367 = OpCompositeExtract %uint %10838 0
      %12368 = OpCompositeExtract %uint %10838 1
      %12369 = OpCompositeConstruct %v3uint %12367 %12368 %12366
               OpImageWrite %10839 %12369 %12361 None
               OpBranch %12363
      %12364 = OpLabel
      %12370 = OpIEqual %bool %11775 %uint_0
      %12371 = OpSelect %uint %12370 %12361 %11774
      %12372 = OpIEqual %bool %11775 %uint_1
      %12373 = OpSelect %uint %12372 %12361 %11773
      %12374 = OpIEqual %bool %11775 %uint_2
      %12375 = OpSelect %uint %12374 %12361 %uint_0
               OpBranch %12363
      %12363 = OpLabel
      %12376 = OpPhi %uint %uint_0 %12365 %12375 %12364
      %12377 = OpPhi %uint %11773 %12365 %12373 %12364
      %12378 = OpPhi %uint %11774 %12365 %12371 %12364
      %12379 = OpIAdd %uint %11775 %uint_1
      %12380 = OpShiftLeftLogical %uint %12352 %uint_20
      %12381 = OpBitwiseOr %uint %12285 %12380
      %12382 = OpULessThan %bool %12379 %uint_3
               OpSelectionMerge %12383 None
               OpBranchConditional %12382 %12384 %12385
      %12385 = OpLabel
      %12386 = OpIAdd %uint %11775 %uint_4294967294
      %12387 = OpCompositeExtract %uint %10838 0
      %12388 = OpCompositeExtract %uint %10838 1
      %12389 = OpCompositeConstruct %v3uint %12387 %12388 %12386
               OpImageWrite %10839 %12389 %12381 None
               OpBranch %12383
      %12384 = OpLabel
      %12390 = OpIEqual %bool %12379 %uint_0
      %12391 = OpSelect %uint %12390 %12381 %12378
      %12392 = OpIEqual %bool %12379 %uint_1
      %12393 = OpSelect %uint %12392 %12381 %12377
      %12394 = OpIEqual %bool %12379 %uint_2
      %12395 = OpSelect %uint %12394 %12381 %12376
               OpBranch %12383
      %12383 = OpLabel
      %12396 = OpPhi %uint %12376 %12385 %12395 %12384
      %12397 = OpPhi %uint %12377 %12385 %12393 %12384
      %12398 = OpPhi %uint %12378 %12385 %12391 %12384
      %12399 = OpIAdd %uint %11775 %uint_2
      %12400 = OpShiftLeftLogical %uint %12354 %uint_20
      %12401 = OpBitwiseOr %uint %12338 %12400
      %12402 = OpULessThan %bool %12399 %uint_3
               OpSelectionMerge %12403 None
               OpBranchConditional %12402 %12404 %12405
      %12405 = OpLabel
      %12406 = OpIAdd %uint %11775 %uint_4294967295
      %12407 = OpCompositeExtract %uint %10838 0
      %12408 = OpCompositeExtract %uint %10838 1
      %12409 = OpCompositeConstruct %v3uint %12407 %12408 %12406
               OpImageWrite %10839 %12409 %12401 None
               OpBranch %12403
      %12404 = OpLabel
      %12410 = OpIEqual %bool %12399 %uint_0
      %12411 = OpSelect %uint %12410 %12401 %12398
      %12412 = OpIEqual %bool %12399 %uint_1
      %12413 = OpSelect %uint %12412 %12401 %12397
      %12414 = OpIEqual %bool %12399 %uint_2
      %12415 = OpSelect %uint %12414 %12401 %12396
               OpBranch %12403
      %12403 = OpLabel
      %12416 = OpPhi %uint %12396 %12405 %12415 %12404
      %12417 = OpPhi %uint %12397 %12405 %12413 %12404
      %12418 = OpPhi %uint %12398 %12405 %12411 %12404
      %12419 = OpIAdd %uint %11775 %uint_3
               OpBranch %12049
      %12049 = OpLabel
      %12420 = OpPhi %uint %12226 %12053 %uint_0 %12403
      %12421 = OpPhi %uint %12222 %12053 %12416 %12403
      %12422 = OpPhi %uint %12223 %12053 %12417 %12403
      %12423 = OpPhi %uint %12224 %12053 %12418 %12403
      %12424 = OpPhi %uint %12225 %12053 %12419 %12403
               OpBranch %12043
      %12044 = OpLabel
      %12425 = OpVectorShuffle %v3float %10841 %468 0 1 2
      %12426 = OpFSub %float %8401 %float_0_5
      %12427 = OpFMul %float %12426 %float_0_00787401572
      %12428 = OpFMul %float %12426 %float_0_0158730168
      %12429 = OpCompositeConstruct %v3float %12427 %12427 %12428
      %12430 = OpExtInst %v3float %1 FClamp %12425 %108 %134
      %12431 = OpCompositeExtract %float %12430 0
               OpSelectionMerge %12432 None
               OpSwitch %uint_0 %12433
      %12433 = OpLabel
      %12434 = OpFOrdLessThan %bool %12431 %float_0_00313066994
               OpSelectionMerge %12435 None
               OpBranchConditional %12434 %12436 %12435
      %12436 = OpLabel
      %12437 = OpFMul %float %12431 %float_12_9200001
               OpBranch %12432
      %12435 = OpLabel
      %12438 = OpExtInst %float %1 Pow %12431 %float_0_416666657
      %12439 = OpExtInst %float %1 Fma %12438 %float_1_05499995 %float_n0_0549999997
               OpBranch %12432
      %12432 = OpLabel
      %12440 = OpPhi %float %12437 %12436 %12439 %12435
      %12441 = OpCompositeExtract %float %12430 1
               OpSelectionMerge %12442 None
               OpSwitch %uint_0 %12443
      %12443 = OpLabel
      %12444 = OpFOrdLessThan %bool %12441 %float_0_00313066994
               OpSelectionMerge %12445 None
               OpBranchConditional %12444 %12446 %12445
      %12446 = OpLabel
      %12447 = OpFMul %float %12441 %float_12_9200001
               OpBranch %12442
      %12445 = OpLabel
      %12448 = OpExtInst %float %1 Pow %12441 %float_0_416666657
      %12449 = OpExtInst %float %1 Fma %12448 %float_1_05499995 %float_n0_0549999997
               OpBranch %12442
      %12442 = OpLabel
      %12450 = OpPhi %float %12447 %12446 %12449 %12445
      %12451 = OpCompositeExtract %float %12430 2
               OpSelectionMerge %12452 None
               OpSwitch %uint_0 %12453
      %12453 = OpLabel
      %12454 = OpFOrdLessThan %bool %12451 %float_0_00313066994
               OpSelectionMerge %12455 None
               OpBranchConditional %12454 %12456 %12455
      %12456 = OpLabel
      %12457 = OpFMul %float %12451 %float_12_9200001
               OpBranch %12452
      %12455 = OpLabel
      %12458 = OpExtInst %float %1 Pow %12451 %float_0_416666657
      %12459 = OpExtInst %float %1 Fma %12458 %float_1_05499995 %float_n0_0549999997
               OpBranch %12452
      %12452 = OpLabel
      %12460 = OpPhi %float %12457 %12456 %12459 %12455
      %12461 = OpCompositeConstruct %v3float %12440 %12450 %12460
      %12462 = OpBitcast %v3uint %12461
      %12463 = OpBitwiseAnd %v3uint %12462 %360
      %12464 = OpExtInst %v3uint %1 UMin %12463 %511
      %12465 = OpConvertUToF %v3float %12464
      %12466 = OpExtInst %v3float %1 Fma %12429 %12465 %12461
      %12467 = OpExtInst %v3float %1 FClamp %12466 %108 %134
      %12468 = OpCompositeExtract %float %12467 0
      %12469 = OpFMul %float %12468 %float_127
      %12470 = OpConvertFToU %uint %12469
      %12471 = OpShiftLeftLogical %uint %12470 %uint_0
      %12472 = OpCompositeExtract %float %12467 1
      %12473 = OpFMul %float %12472 %float_127
      %12474 = OpConvertFToU %uint %12473
      %12475 = OpShiftLeftLogical %uint %12474 %uint_7
      %12476 = OpCompositeExtract %float %12467 2
      %12477 = OpFMul %float %12476 %float_63
      %12478 = OpConvertFToU %uint %12477
      %12479 = OpShiftLeftLogical %uint %12478 %uint_14
      %12480 = OpBitwiseOr %uint %12471 %12475
      %12481 = OpBitwiseOr %uint %12480 %12479
      %12482 = OpVectorShuffle %v3float %10851 %10851 0 1 2
      %12483 = OpExtInst %v3float %1 FClamp %12482 %108 %134
      %12484 = OpCompositeExtract %float %12483 0
               OpSelectionMerge %12485 None
               OpSwitch %uint_0 %12486
      %12486 = OpLabel
      %12487 = OpFOrdLessThan %bool %12484 %float_0_00313066994
               OpSelectionMerge %12488 None
               OpBranchConditional %12487 %12489 %12488
      %12489 = OpLabel
      %12490 = OpFMul %float %12484 %float_12_9200001
               OpBranch %12485
      %12488 = OpLabel
      %12491 = OpExtInst %float %1 Pow %12484 %float_0_416666657
      %12492 = OpExtInst %float %1 Fma %12491 %float_1_05499995 %float_n0_0549999997
               OpBranch %12485
      %12485 = OpLabel
      %12493 = OpPhi %float %12490 %12489 %12492 %12488
      %12494 = OpCompositeExtract %float %12483 1
               OpSelectionMerge %12495 None
               OpSwitch %uint_0 %12496
      %12496 = OpLabel
      %12497 = OpFOrdLessThan %bool %12494 %float_0_00313066994
               OpSelectionMerge %12498 None
               OpBranchConditional %12497 %12499 %12498
      %12499 = OpLabel
      %12500 = OpFMul %float %12494 %float_12_9200001
               OpBranch %12495
      %12498 = OpLabel
      %12501 = OpExtInst %float %1 Pow %12494 %float_0_416666657
      %12502 = OpExtInst %float %1 Fma %12501 %float_1_05499995 %float_n0_0549999997
               OpBranch %12495
      %12495 = OpLabel
      %12503 = OpPhi %float %12500 %12499 %12502 %12498
      %12504 = OpCompositeExtract %float %12483 2
               OpSelectionMerge %12505 None
               OpSwitch %uint_0 %12506
      %12506 = OpLabel
      %12507 = OpFOrdLessThan %bool %12504 %float_0_00313066994
               OpSelectionMerge %12508 None
               OpBranchConditional %12507 %12509 %12508
      %12509 = OpLabel
      %12510 = OpFMul %float %12504 %float_12_9200001
               OpBranch %12505
      %12508 = OpLabel
      %12511 = OpExtInst %float %1 Pow %12504 %float_0_416666657
      %12512 = OpExtInst %float %1 Fma %12511 %float_1_05499995 %float_n0_0549999997
               OpBranch %12505
      %12505 = OpLabel
      %12513 = OpPhi %float %12510 %12509 %12512 %12508
      %12514 = OpCompositeConstruct %v3float %12493 %12503 %12513
      %12515 = OpBitcast %v3uint %12514
      %12516 = OpBitwiseAnd %v3uint %12515 %360
      %12517 = OpExtInst %v3uint %1 UMin %12516 %511
      %12518 = OpConvertUToF %v3float %12517
      %12519 = OpExtInst %v3float %1 Fma %12429 %12518 %12514
      %12520 = OpExtInst %v3float %1 FClamp %12519 %108 %134
      %12521 = OpCompositeExtract %float %12520 0
      %12522 = OpFMul %float %12521 %float_127
      %12523 = OpConvertFToU %uint %12522
      %12524 = OpShiftLeftLogical %uint %12523 %uint_0
      %12525 = OpCompositeExtract %float %12520 1
      %12526 = OpFMul %float %12525 %float_127
      %12527 = OpConvertFToU %uint %12526
      %12528 = OpShiftLeftLogical %uint %12527 %uint_7
      %12529 = OpCompositeExtract %float %12520 2
      %12530 = OpFMul %float %12529 %float_63
      %12531 = OpConvertFToU %uint %12530
      %12532 = OpShiftLeftLogical %uint %12531 %uint_14
      %12533 = OpBitwiseOr %uint %12524 %12528
      %12534 = OpBitwiseOr %uint %12533 %12532
               OpSelectionMerge %12535 None
               OpSwitch %uint_0 %12536
      %12536 = OpLabel
               OpSelectionMerge %12537 None
               OpBranchConditional %true %12538 %12537
      %12538 = OpLabel
               OpBranch %12535
      %12537 = OpLabel
      %12539 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12535
      %12535 = OpLabel
      %12540 = OpPhi %float %float_0 %12538 %12539 %12537
               OpSelectionMerge %12541 None
               OpSwitch %uint_0 %12542
      %12542 = OpLabel
               OpSelectionMerge %12543 None
               OpBranchConditional %true %12544 %12543
      %12544 = OpLabel
               OpBranch %12541
      %12543 = OpLabel
      %12545 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12541
      %12541 = OpLabel
      %12546 = OpPhi %float %float_0 %12544 %12545 %12543
               OpSelectionMerge %12547 None
               OpSwitch %uint_0 %12548
      %12548 = OpLabel
               OpSelectionMerge %12549 None
               OpBranchConditional %true %12550 %12549
      %12550 = OpLabel
               OpBranch %12547
      %12549 = OpLabel
      %12551 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %12547
      %12547 = OpLabel
      %12552 = OpPhi %float %float_0 %12550 %12551 %12549
      %12553 = OpCompositeConstruct %v3float %12540 %12546 %12552
      %12554 = OpBitcast %v3uint %12553
      %12555 = OpBitwiseAnd %v3uint %12554 %360
      %12556 = OpExtInst %v3uint %1 UMin %12555 %511
      %12557 = OpConvertUToF %v3float %12556
      %12558 = OpExtInst %v3float %1 Fma %12429 %12557 %12553
      %12559 = OpExtInst %v3float %1 FClamp %12558 %108 %134
      %12560 = OpCompositeExtract %float %12559 0
      %12561 = OpFMul %float %12560 %float_127
      %12562 = OpConvertFToU %uint %12561
      %12563 = OpShiftLeftLogical %uint %12562 %uint_0
      %12564 = OpCompositeExtract %float %12559 1
      %12565 = OpFMul %float %12564 %float_127
      %12566 = OpConvertFToU %uint %12565
      %12567 = OpShiftLeftLogical %uint %12566 %uint_7
      %12568 = OpCompositeExtract %float %12559 2
      %12569 = OpFMul %float %12568 %float_63
      %12570 = OpConvertFToU %uint %12569
      %12571 = OpShiftLeftLogical %uint %12570 %uint_14
      %12572 = OpBitwiseOr %uint %12563 %12567
      %12573 = OpBitwiseOr %uint %12572 %12571
      %12574 = OpBitwiseOr %uint %12033 %uint_0
      %12575 = OpULessThan %bool %11775 %uint_3
               OpSelectionMerge %12576 None
               OpBranchConditional %12575 %12577 %12578
      %12578 = OpLabel
      %12579 = OpISub %uint %11775 %uint_3
      %12580 = OpCompositeExtract %uint %10838 0
      %12581 = OpCompositeExtract %uint %10838 1
      %12582 = OpCompositeConstruct %v3uint %12580 %12581 %12579
               OpImageWrite %10839 %12582 %12574 None
               OpBranch %12576
      %12577 = OpLabel
      %12583 = OpIEqual %bool %11775 %uint_0
      %12584 = OpSelect %uint %12583 %12574 %11774
      %12585 = OpIEqual %bool %11775 %uint_1
      %12586 = OpSelect %uint %12585 %12574 %11773
      %12587 = OpIEqual %bool %11775 %uint_2
      %12588 = OpSelect %uint %12587 %12574 %uint_0
               OpBranch %12576
      %12576 = OpLabel
      %12589 = OpPhi %uint %uint_0 %12578 %12588 %12577
      %12590 = OpPhi %uint %11773 %12578 %12586 %12577
      %12591 = OpPhi %uint %11774 %12578 %12584 %12577
      %12592 = OpIAdd %uint %11775 %uint_1
      %12593 = OpBitwiseAnd %uint %12573 %uint_1047552
      %12594 = OpShiftLeftLogical %uint %12593 %uint_10
      %12595 = OpBitwiseOr %uint %12481 %12594
      %12596 = OpULessThan %bool %12592 %uint_3
               OpSelectionMerge %12597 None
               OpBranchConditional %12596 %12598 %12599
      %12599 = OpLabel
      %12600 = OpIAdd %uint %11775 %uint_4294967294
      %12601 = OpCompositeExtract %uint %10838 0
      %12602 = OpCompositeExtract %uint %10838 1
      %12603 = OpCompositeConstruct %v3uint %12601 %12602 %12600
               OpImageWrite %10839 %12603 %12595 None
               OpBranch %12597
      %12598 = OpLabel
      %12604 = OpIEqual %bool %12592 %uint_0
      %12605 = OpSelect %uint %12604 %12595 %12591
      %12606 = OpIEqual %bool %12592 %uint_1
      %12607 = OpSelect %uint %12606 %12595 %12590
      %12608 = OpIEqual %bool %12592 %uint_2
      %12609 = OpSelect %uint %12608 %12595 %12589
               OpBranch %12597
      %12597 = OpLabel
      %12610 = OpPhi %uint %12589 %12599 %12609 %12598
      %12611 = OpPhi %uint %12590 %12599 %12607 %12598
      %12612 = OpPhi %uint %12591 %12599 %12605 %12598
      %12613 = OpIAdd %uint %11775 %uint_2
      %12614 = OpBitwiseAnd %uint %12573 %uint_1023
      %12615 = OpShiftLeftLogical %uint %12614 %uint_20
      %12616 = OpBitwiseOr %uint %12534 %12615
      %12617 = OpULessThan %bool %12613 %uint_3
               OpSelectionMerge %12618 None
               OpBranchConditional %12617 %12619 %12620
      %12620 = OpLabel
      %12621 = OpIAdd %uint %11775 %uint_4294967295
      %12622 = OpCompositeExtract %uint %10838 0
      %12623 = OpCompositeExtract %uint %10838 1
      %12624 = OpCompositeConstruct %v3uint %12622 %12623 %12621
               OpImageWrite %10839 %12624 %12616 None
               OpBranch %12618
      %12619 = OpLabel
      %12625 = OpIEqual %bool %12613 %uint_0
      %12626 = OpSelect %uint %12625 %12616 %12612
      %12627 = OpIEqual %bool %12613 %uint_1
      %12628 = OpSelect %uint %12627 %12616 %12611
      %12629 = OpIEqual %bool %12613 %uint_2
      %12630 = OpSelect %uint %12629 %12616 %12610
               OpBranch %12618
      %12618 = OpLabel
      %12631 = OpPhi %uint %12610 %12620 %12630 %12619
      %12632 = OpPhi %uint %12611 %12620 %12628 %12619
      %12633 = OpPhi %uint %12612 %12620 %12626 %12619
      %12634 = OpIAdd %uint %11775 %uint_3
               OpBranch %12043
      %12043 = OpLabel
      %12635 = OpPhi %uint %12420 %12049 %uint_0 %12618
      %12636 = OpPhi %uint %12421 %12049 %12631 %12618
      %12637 = OpPhi %uint %12422 %12049 %12632 %12618
      %12638 = OpPhi %uint %12423 %12049 %12633 %12618
      %12639 = OpPhi %uint %12424 %12049 %12634 %12618
               OpBranch %12039
      %12040 = OpLabel
      %12640 = OpVectorShuffle %v3float %10841 %468 0 1 2
      %12641 = OpFSub %float %8401 %float_0_5
      %12642 = OpFMul %float %12641 %float_0_00787401572
      %12643 = OpFMul %float %12641 %float_0_0158730168
      %12644 = OpCompositeConstruct %v3float %12642 %12642 %12643
      %12645 = OpExtInst %v3float %1 FClamp %12640 %108 %134
      %12646 = OpCompositeExtract %float %12645 0
               OpSelectionMerge %12647 None
               OpSwitch %uint_0 %12648
      %12648 = OpLabel
      %12649 = OpFOrdLessThan %bool %12646 %float_0_00313066994
               OpSelectionMerge %12650 None
               OpBranchConditional %12649 %12651 %12650
      %12651 = OpLabel
      %12652 = OpFMul %float %12646 %float_12_9200001
               OpBranch %12647
      %12650 = OpLabel
      %12653 = OpExtInst %float %1 Pow %12646 %float_0_416666657
      %12654 = OpExtInst %float %1 Fma %12653 %float_1_05499995 %float_n0_0549999997
               OpBranch %12647
      %12647 = OpLabel
      %12655 = OpPhi %float %12652 %12651 %12654 %12650
      %12656 = OpCompositeExtract %float %12645 1
               OpSelectionMerge %12657 None
               OpSwitch %uint_0 %12658
      %12658 = OpLabel
      %12659 = OpFOrdLessThan %bool %12656 %float_0_00313066994
               OpSelectionMerge %12660 None
               OpBranchConditional %12659 %12661 %12660
      %12661 = OpLabel
      %12662 = OpFMul %float %12656 %float_12_9200001
               OpBranch %12657
      %12660 = OpLabel
      %12663 = OpExtInst %float %1 Pow %12656 %float_0_416666657
      %12664 = OpExtInst %float %1 Fma %12663 %float_1_05499995 %float_n0_0549999997
               OpBranch %12657
      %12657 = OpLabel
      %12665 = OpPhi %float %12662 %12661 %12664 %12660
      %12666 = OpCompositeExtract %float %12645 2
               OpSelectionMerge %12667 None
               OpSwitch %uint_0 %12668
      %12668 = OpLabel
      %12669 = OpFOrdLessThan %bool %12666 %float_0_00313066994
               OpSelectionMerge %12670 None
               OpBranchConditional %12669 %12671 %12670
      %12671 = OpLabel
      %12672 = OpFMul %float %12666 %float_12_9200001
               OpBranch %12667
      %12670 = OpLabel
      %12673 = OpExtInst %float %1 Pow %12666 %float_0_416666657
      %12674 = OpExtInst %float %1 Fma %12673 %float_1_05499995 %float_n0_0549999997
               OpBranch %12667
      %12667 = OpLabel
      %12675 = OpPhi %float %12672 %12671 %12674 %12670
      %12676 = OpCompositeConstruct %v3float %12655 %12665 %12675
      %12677 = OpBitcast %v3uint %12676
      %12678 = OpBitwiseAnd %v3uint %12677 %360
      %12679 = OpExtInst %v3uint %1 UMin %12678 %511
      %12680 = OpConvertUToF %v3float %12679
      %12681 = OpExtInst %v3float %1 Fma %12644 %12680 %12676
      %12682 = OpExtInst %v3float %1 FClamp %12681 %108 %134
      %12683 = OpCompositeExtract %float %12682 0
      %12684 = OpFMul %float %12683 %float_127
      %12685 = OpConvertFToU %uint %12684
      %12686 = OpShiftLeftLogical %uint %12685 %uint_0
      %12687 = OpCompositeExtract %float %12682 1
      %12688 = OpFMul %float %12687 %float_127
      %12689 = OpConvertFToU %uint %12688
      %12690 = OpShiftLeftLogical %uint %12689 %uint_7
      %12691 = OpCompositeExtract %float %12682 2
      %12692 = OpFMul %float %12691 %float_63
      %12693 = OpConvertFToU %uint %12692
      %12694 = OpShiftLeftLogical %uint %12693 %uint_14
      %12695 = OpBitwiseOr %uint %12686 %12690
      %12696 = OpBitwiseOr %uint %12695 %12694
      %12697 = OpExtInst %float %1 FClamp %10844 %float_0 %float_1
      %12698 = OpFMul %float %12697 %float_255
      %12699 = OpConvertFToU %uint %12698
      %12700 = OpShiftLeftLogical %uint %12699 %uint_8
      %12701 = OpExtInst %float %1 FClamp %10848 %float_0 %float_1
      %12702 = OpFMul %float %12701 %float_255
      %12703 = OpConvertFToU %uint %12702
      %12704 = OpShiftLeftLogical %uint %12703 %uint_16
      %12705 = OpBitwiseOr %uint %uint_0 %12700
      %12706 = OpBitwiseOr %uint %12705 %12704
      %12707 = OpBitwiseOr %uint %12706 %uint_0
      %12708 = OpBitwiseOr %uint %12033 %uint_0
      %12709 = OpULessThan %bool %11775 %uint_3
               OpSelectionMerge %12710 None
               OpBranchConditional %12709 %12711 %12712
      %12712 = OpLabel
      %12713 = OpISub %uint %11775 %uint_3
      %12714 = OpCompositeExtract %uint %10838 0
      %12715 = OpCompositeExtract %uint %10838 1
      %12716 = OpCompositeConstruct %v3uint %12714 %12715 %12713
               OpImageWrite %10839 %12716 %12708 None
               OpBranch %12710
      %12711 = OpLabel
      %12717 = OpIEqual %bool %11775 %uint_0
      %12718 = OpSelect %uint %12717 %12708 %11774
      %12719 = OpIEqual %bool %11775 %uint_1
      %12720 = OpSelect %uint %12719 %12708 %11773
      %12721 = OpIEqual %bool %11775 %uint_2
      %12722 = OpSelect %uint %12721 %12708 %uint_0
               OpBranch %12710
      %12710 = OpLabel
      %12723 = OpPhi %uint %uint_0 %12712 %12722 %12711
      %12724 = OpPhi %uint %11773 %12712 %12720 %12711
      %12725 = OpPhi %uint %11774 %12712 %12718 %12711
      %12726 = OpIAdd %uint %11775 %uint_1
      %12727 = OpBitwiseOr %uint %12696 %uint_0
      %12728 = OpULessThan %bool %12726 %uint_3
               OpSelectionMerge %12729 None
               OpBranchConditional %12728 %12730 %12731
      %12731 = OpLabel
      %12732 = OpIAdd %uint %11775 %uint_4294967294
      %12733 = OpCompositeExtract %uint %10838 0
      %12734 = OpCompositeExtract %uint %10838 1
      %12735 = OpCompositeConstruct %v3uint %12733 %12734 %12732
               OpImageWrite %10839 %12735 %12727 None
               OpBranch %12729
      %12730 = OpLabel
      %12736 = OpIEqual %bool %12726 %uint_0
      %12737 = OpSelect %uint %12736 %12727 %12725
      %12738 = OpIEqual %bool %12726 %uint_1
      %12739 = OpSelect %uint %12738 %12727 %12724
      %12740 = OpIEqual %bool %12726 %uint_2
      %12741 = OpSelect %uint %12740 %12727 %12723
               OpBranch %12729
      %12729 = OpLabel
      %12742 = OpPhi %uint %12723 %12731 %12741 %12730
      %12743 = OpPhi %uint %12724 %12731 %12739 %12730
      %12744 = OpPhi %uint %12725 %12731 %12737 %12730
      %12745 = OpIAdd %uint %11775 %uint_2
      %12746 = OpBitwiseOr %uint %12707 %uint_0
      %12747 = OpULessThan %bool %12745 %uint_3
               OpSelectionMerge %12748 None
               OpBranchConditional %12747 %12749 %12750
      %12750 = OpLabel
      %12751 = OpIAdd %uint %11775 %uint_4294967295
      %12752 = OpCompositeExtract %uint %10838 0
      %12753 = OpCompositeExtract %uint %10838 1
      %12754 = OpCompositeConstruct %v3uint %12752 %12753 %12751
               OpImageWrite %10839 %12754 %12746 None
               OpBranch %12748
      %12749 = OpLabel
      %12755 = OpIEqual %bool %12745 %uint_0
      %12756 = OpSelect %uint %12755 %12746 %12744
      %12757 = OpIEqual %bool %12745 %uint_1
      %12758 = OpSelect %uint %12757 %12746 %12743
      %12759 = OpIEqual %bool %12745 %uint_2
      %12760 = OpSelect %uint %12759 %12746 %12742
               OpBranch %12748
      %12748 = OpLabel
      %12761 = OpPhi %uint %12742 %12750 %12760 %12749
      %12762 = OpPhi %uint %12743 %12750 %12758 %12749
      %12763 = OpPhi %uint %12744 %12750 %12756 %12749
      %12764 = OpIAdd %uint %11775 %uint_3
               OpBranch %12039
      %12039 = OpLabel
      %12765 = OpPhi %uint %12635 %12043 %uint_0 %12748
      %12766 = OpPhi %uint %12636 %12043 %12761 %12748
      %12767 = OpPhi %uint %12637 %12043 %12762 %12748
      %12768 = OpPhi %uint %12638 %12043 %12763 %12748
      %12769 = OpPhi %uint %12639 %12043 %12764 %12748
               OpBranch %12035
      %12036 = OpLabel
      %12770 = OpBitwiseAnd %uint %12026 %uint_2047
      %12771 = OpShiftLeftLogical %uint %12770 %uint_19
      %12772 = OpBitwiseOr %uint %12033 %12771
      %12773 = OpULessThan %bool %11775 %uint_3
               OpSelectionMerge %12774 None
               OpBranchConditional %12773 %12775 %12776
      %12776 = OpLabel
      %12777 = OpISub %uint %11775 %uint_3
      %12778 = OpCompositeExtract %uint %10838 0
      %12779 = OpCompositeExtract %uint %10838 1
      %12780 = OpCompositeConstruct %v3uint %12778 %12779 %12777
               OpImageWrite %10839 %12780 %12772 None
               OpBranch %12774
      %12775 = OpLabel
      %12781 = OpIEqual %bool %11775 %uint_0
      %12782 = OpSelect %uint %12781 %12772 %11774
      %12783 = OpIEqual %bool %11775 %uint_1
      %12784 = OpSelect %uint %12783 %12772 %11773
      %12785 = OpIEqual %bool %11775 %uint_2
      %12786 = OpSelect %uint %12785 %12772 %uint_0
               OpBranch %12774
      %12774 = OpLabel
      %12787 = OpPhi %uint %uint_0 %12776 %12786 %12775
      %12788 = OpPhi %uint %11773 %12776 %12784 %12775
      %12789 = OpPhi %uint %11774 %12776 %12782 %12775
      %12790 = OpIAdd %uint %11775 %uint_1
               OpBranch %12035
      %12035 = OpLabel
      %12791 = OpPhi %uint %12765 %12039 %12026 %12774
      %12792 = OpPhi %uint %12766 %12039 %12787 %12774
      %12793 = OpPhi %uint %12767 %12039 %12788 %12774
      %12794 = OpPhi %uint %12768 %12039 %12789 %12774
      %12795 = OpPhi %uint %12769 %12039 %12790 %12774
               OpBranch %11791
      %11791 = OpLabel
      %12796 = OpPhi %uint %12020 %11794 %12791 %12035
      %12797 = OpPhi %uint %12021 %11794 %12792 %12035
      %12798 = OpPhi %uint %12022 %11794 %12793 %12035
      %12799 = OpPhi %uint %12023 %11794 %12794 %12035
      %12800 = OpPhi %uint %12024 %11794 %12795 %12035
               OpBranch %11787
      %11788 = OpLabel
      %12801 = OpVectorShuffle %v3float %10841 %468 0 1 2
      %12802 = OpFSub %float %8401 %float_0_5
      %12803 = OpFMul %float %12802 %float_0_00787401572
      %12804 = OpFMul %float %12802 %float_0_0158730168
      %12805 = OpCompositeConstruct %v3float %12803 %12803 %12804
      %12806 = OpExtInst %v3float %1 FClamp %12801 %108 %134
      %12807 = OpCompositeExtract %float %12806 0
               OpSelectionMerge %12808 None
               OpSwitch %uint_0 %12809
      %12809 = OpLabel
      %12810 = OpFOrdLessThan %bool %12807 %float_0_00313066994
               OpSelectionMerge %12811 None
               OpBranchConditional %12810 %12812 %12811
      %12812 = OpLabel
      %12813 = OpFMul %float %12807 %float_12_9200001
               OpBranch %12808
      %12811 = OpLabel
      %12814 = OpExtInst %float %1 Pow %12807 %float_0_416666657
      %12815 = OpExtInst %float %1 Fma %12814 %float_1_05499995 %float_n0_0549999997
               OpBranch %12808
      %12808 = OpLabel
      %12816 = OpPhi %float %12813 %12812 %12815 %12811
      %12817 = OpCompositeExtract %float %12806 1
               OpSelectionMerge %12818 None
               OpSwitch %uint_0 %12819
      %12819 = OpLabel
      %12820 = OpFOrdLessThan %bool %12817 %float_0_00313066994
               OpSelectionMerge %12821 None
               OpBranchConditional %12820 %12822 %12821
      %12822 = OpLabel
      %12823 = OpFMul %float %12817 %float_12_9200001
               OpBranch %12818
      %12821 = OpLabel
      %12824 = OpExtInst %float %1 Pow %12817 %float_0_416666657
      %12825 = OpExtInst %float %1 Fma %12824 %float_1_05499995 %float_n0_0549999997
               OpBranch %12818
      %12818 = OpLabel
      %12826 = OpPhi %float %12823 %12822 %12825 %12821
      %12827 = OpCompositeExtract %float %12806 2
               OpSelectionMerge %12828 None
               OpSwitch %uint_0 %12829
      %12829 = OpLabel
      %12830 = OpFOrdLessThan %bool %12827 %float_0_00313066994
               OpSelectionMerge %12831 None
               OpBranchConditional %12830 %12832 %12831
      %12832 = OpLabel
      %12833 = OpFMul %float %12827 %float_12_9200001
               OpBranch %12828
      %12831 = OpLabel
      %12834 = OpExtInst %float %1 Pow %12827 %float_0_416666657
      %12835 = OpExtInst %float %1 Fma %12834 %float_1_05499995 %float_n0_0549999997
               OpBranch %12828
      %12828 = OpLabel
      %12836 = OpPhi %float %12833 %12832 %12835 %12831
      %12837 = OpCompositeConstruct %v3float %12816 %12826 %12836
      %12838 = OpBitcast %v3uint %12837
      %12839 = OpBitwiseAnd %v3uint %12838 %360
      %12840 = OpExtInst %v3uint %1 UMin %12839 %511
      %12841 = OpConvertUToF %v3float %12840
      %12842 = OpExtInst %v3float %1 Fma %12805 %12841 %12837
      %12843 = OpExtInst %v3float %1 FClamp %12842 %108 %134
      %12844 = OpCompositeExtract %float %12843 0
      %12845 = OpFMul %float %12844 %float_127
      %12846 = OpConvertFToU %uint %12845
      %12847 = OpShiftLeftLogical %uint %12846 %uint_0
      %12848 = OpCompositeExtract %float %12843 1
      %12849 = OpFMul %float %12848 %float_127
      %12850 = OpConvertFToU %uint %12849
      %12851 = OpShiftLeftLogical %uint %12850 %uint_7
      %12852 = OpCompositeExtract %float %12843 2
      %12853 = OpFMul %float %12852 %float_63
      %12854 = OpConvertFToU %uint %12853
      %12855 = OpShiftLeftLogical %uint %12854 %uint_14
      %12856 = OpBitwiseOr %uint %12847 %12851
      %12857 = OpBitwiseOr %uint %12856 %12855
      %12858 = OpBitwiseAnd %uint %12857 %uint_4095
      %12859 = OpShiftRightLogical %uint %12857 %uint_12
      %12860 = OpBitwiseAnd %uint %12859 %uint_255
      %12861 = OpVectorShuffle %v3float %10851 %10851 0 1 2
      %12862 = OpExtInst %v3float %1 FClamp %12861 %108 %134
      %12863 = OpCompositeExtract %float %12862 0
               OpSelectionMerge %12864 None
               OpSwitch %uint_0 %12865
      %12865 = OpLabel
      %12866 = OpFOrdLessThan %bool %12863 %float_0_00313066994
               OpSelectionMerge %12867 None
               OpBranchConditional %12866 %12868 %12867
      %12868 = OpLabel
      %12869 = OpFMul %float %12863 %float_12_9200001
               OpBranch %12864
      %12867 = OpLabel
      %12870 = OpExtInst %float %1 Pow %12863 %float_0_416666657
      %12871 = OpExtInst %float %1 Fma %12870 %float_1_05499995 %float_n0_0549999997
               OpBranch %12864
      %12864 = OpLabel
      %12872 = OpPhi %float %12869 %12868 %12871 %12867
      %12873 = OpCompositeExtract %float %12862 1
               OpSelectionMerge %12874 None
               OpSwitch %uint_0 %12875
      %12875 = OpLabel
      %12876 = OpFOrdLessThan %bool %12873 %float_0_00313066994
               OpSelectionMerge %12877 None
               OpBranchConditional %12876 %12878 %12877
      %12878 = OpLabel
      %12879 = OpFMul %float %12873 %float_12_9200001
               OpBranch %12874
      %12877 = OpLabel
      %12880 = OpExtInst %float %1 Pow %12873 %float_0_416666657
      %12881 = OpExtInst %float %1 Fma %12880 %float_1_05499995 %float_n0_0549999997
               OpBranch %12874
      %12874 = OpLabel
      %12882 = OpPhi %float %12879 %12878 %12881 %12877
      %12883 = OpCompositeExtract %float %12862 2
               OpSelectionMerge %12884 None
               OpSwitch %uint_0 %12885
      %12885 = OpLabel
      %12886 = OpFOrdLessThan %bool %12883 %float_0_00313066994
               OpSelectionMerge %12887 None
               OpBranchConditional %12886 %12888 %12887
      %12888 = OpLabel
      %12889 = OpFMul %float %12883 %float_12_9200001
               OpBranch %12884
      %12887 = OpLabel
      %12890 = OpExtInst %float %1 Pow %12883 %float_0_416666657
      %12891 = OpExtInst %float %1 Fma %12890 %float_1_05499995 %float_n0_0549999997
               OpBranch %12884
      %12884 = OpLabel
      %12892 = OpPhi %float %12889 %12888 %12891 %12887
      %12893 = OpCompositeConstruct %v3float %12872 %12882 %12892
      %12894 = OpBitcast %v3uint %12893
      %12895 = OpBitwiseAnd %v3uint %12894 %360
      %12896 = OpExtInst %v3uint %1 UMin %12895 %511
      %12897 = OpConvertUToF %v3float %12896
      %12898 = OpExtInst %v3float %1 Fma %12805 %12897 %12893
      %12899 = OpExtInst %v3float %1 FClamp %12898 %108 %134
      %12900 = OpCompositeExtract %float %12899 0
      %12901 = OpFMul %float %12900 %float_127
      %12902 = OpConvertFToU %uint %12901
      %12903 = OpShiftLeftLogical %uint %12902 %uint_0
      %12904 = OpCompositeExtract %float %12899 1
      %12905 = OpFMul %float %12904 %float_127
      %12906 = OpConvertFToU %uint %12905
      %12907 = OpShiftLeftLogical %uint %12906 %uint_7
      %12908 = OpCompositeExtract %float %12899 2
      %12909 = OpFMul %float %12908 %float_63
      %12910 = OpConvertFToU %uint %12909
      %12911 = OpShiftLeftLogical %uint %12910 %uint_14
      %12912 = OpBitwiseOr %uint %12903 %12907
      %12913 = OpBitwiseOr %uint %12912 %12911
      %12914 = OpBitwiseAnd %uint %11710 %uint_65535
      %12915 = OpShiftLeftLogical %uint %12914 %uint_0
      %12916 = OpBitwiseOr %uint %uint_0 %12915
      %12917 = OpShiftLeftLogical %uint %12860 %uint_8
      %12918 = OpBitwiseOr %uint %12917 %uint_0
      %12919 = OpBitwiseAnd %uint %12916 %uint_65535
      %12920 = OpShiftLeftLogical %uint %12918 %uint_16
      %12921 = OpBitwiseOr %uint %12919 %12920
      %12922 = OpULessThan %bool %11775 %uint_3
               OpSelectionMerge %12923 None
               OpBranchConditional %12922 %12924 %12925
      %12925 = OpLabel
      %12926 = OpISub %uint %11775 %uint_3
      %12927 = OpCompositeExtract %uint %10838 0
      %12928 = OpCompositeExtract %uint %10838 1
      %12929 = OpCompositeConstruct %v3uint %12927 %12928 %12926
               OpImageWrite %10839 %12929 %12921 None
               OpBranch %12923
      %12924 = OpLabel
      %12930 = OpIEqual %bool %11775 %uint_0
      %12931 = OpSelect %uint %12930 %12921 %11774
      %12932 = OpIEqual %bool %11775 %uint_1
      %12933 = OpSelect %uint %12932 %12921 %11773
      %12934 = OpIEqual %bool %11775 %uint_2
      %12935 = OpSelect %uint %12934 %12921 %uint_0
               OpBranch %12923
      %12923 = OpLabel
      %12936 = OpPhi %uint %uint_0 %12925 %12935 %12924
      %12937 = OpPhi %uint %11773 %12925 %12933 %12924
      %12938 = OpPhi %uint %11774 %12925 %12931 %12924
      %12939 = OpIAdd %uint %11775 %uint_1
      %12940 = OpShiftLeftLogical %uint %12858 %uint_20
      %12941 = OpBitwiseOr %uint %12913 %12940
      %12942 = OpULessThan %bool %12939 %uint_3
               OpSelectionMerge %12943 None
               OpBranchConditional %12942 %12944 %12945
      %12945 = OpLabel
      %12946 = OpIAdd %uint %11775 %uint_4294967294
      %12947 = OpCompositeExtract %uint %10838 0
      %12948 = OpCompositeExtract %uint %10838 1
      %12949 = OpCompositeConstruct %v3uint %12947 %12948 %12946
               OpImageWrite %10839 %12949 %12941 None
               OpBranch %12943
      %12944 = OpLabel
      %12950 = OpIEqual %bool %12939 %uint_0
      %12951 = OpSelect %uint %12950 %12941 %12938
      %12952 = OpIEqual %bool %12939 %uint_1
      %12953 = OpSelect %uint %12952 %12941 %12937
      %12954 = OpIEqual %bool %12939 %uint_2
      %12955 = OpSelect %uint %12954 %12941 %12936
               OpBranch %12943
      %12943 = OpLabel
      %12956 = OpPhi %uint %12936 %12945 %12955 %12944
      %12957 = OpPhi %uint %12937 %12945 %12953 %12944
      %12958 = OpPhi %uint %12938 %12945 %12951 %12944
      %12959 = OpIAdd %uint %11775 %uint_2
               OpBranch %11787
      %11787 = OpLabel
      %12960 = OpPhi %uint %12796 %11791 %uint_0 %12943
      %12961 = OpPhi %uint %12797 %11791 %12956 %12943
      %12962 = OpPhi %uint %12798 %11791 %12957 %12943
      %12963 = OpPhi %uint %12799 %11791 %12958 %12943
      %12964 = OpPhi %uint %12800 %11791 %12959 %12943
      %12965 = OpLogicalNot %bool %11786
      %12966 = OpLogicalAnd %bool %12965 %11725
      %12967 = OpIEqual %bool %11086 %uint_0
      %12968 = OpLogicalAnd %bool %12966 %12967
               OpSelectionMerge %12969 None
               OpBranchConditional %12968 %12970 %12969
      %12970 = OpLabel
      %12971 = OpShiftRightLogical %uint %12960 %uint_11
      %12972 = OpBitwiseAnd %uint %12971 %uint_7
               OpSelectionMerge %12973 None
               OpSwitch %12972 %12973 0 %12974 3 %12975 5 %12976
      %12976 = OpLabel
               OpSelectionMerge %12977 None
               OpBranchConditional %true %12978 %12977
      %12978 = OpLabel
      %12979 = OpExtInst %v2float %1 FAbs %571
      %12980 = OpFSub %v2float %322 %12979
      %12981 = OpVectorShuffle %v3float %468 %12980 4 5 2
               OpBranch %12977
      %12977 = OpLabel
      %12982 = OpPhi %v3float %565 %12976 %12981 %12978
      %12983 = OpVectorShuffle %v2float %12982 %12982 0 1
               OpSelectionMerge %12984 None
               OpBranchConditional %true %12985 %12984
      %12985 = OpLabel
      %12986 = OpExtInst %v2float %1 FAbs %571
      %12987 = OpFSub %v2float %322 %12986
      %12988 = OpVectorShuffle %v3float %468 %12987 4 5 2
               OpBranch %12984
      %12984 = OpLabel
      %12989 = OpPhi %v3float %565 %12977 %12988 %12985
      %12990 = OpVectorShuffle %v2float %12989 %12989 0 1
      %12991 = OpVectorShuffle %v3float %10841 %468 0 1 2
      %12992 = OpExtInst %v3float %1 FClamp %12991 %108 %134
      %12993 = OpCompositeExtract %float %12992 0
               OpSelectionMerge %12994 None
               OpSwitch %uint_0 %12995
      %12995 = OpLabel
      %12996 = OpFOrdLessThan %bool %12993 %float_0_00313066994
               OpSelectionMerge %12997 None
               OpBranchConditional %12996 %12998 %12997
      %12998 = OpLabel
      %12999 = OpFMul %float %12993 %float_12_9200001
               OpBranch %12994
      %12997 = OpLabel
      %13000 = OpExtInst %float %1 Pow %12993 %float_0_416666657
      %13001 = OpExtInst %float %1 Fma %13000 %float_1_05499995 %float_n0_0549999997
               OpBranch %12994
      %12994 = OpLabel
      %13002 = OpPhi %float %12999 %12998 %13001 %12997
      %13003 = OpCompositeExtract %float %12992 1
               OpSelectionMerge %13004 None
               OpSwitch %uint_0 %13005
      %13005 = OpLabel
      %13006 = OpFOrdLessThan %bool %13003 %float_0_00313066994
               OpSelectionMerge %13007 None
               OpBranchConditional %13006 %13008 %13007
      %13008 = OpLabel
      %13009 = OpFMul %float %13003 %float_12_9200001
               OpBranch %13004
      %13007 = OpLabel
      %13010 = OpExtInst %float %1 Pow %13003 %float_0_416666657
      %13011 = OpExtInst %float %1 Fma %13010 %float_1_05499995 %float_n0_0549999997
               OpBranch %13004
      %13004 = OpLabel
      %13012 = OpPhi %float %13009 %13008 %13011 %13007
      %13013 = OpCompositeExtract %float %12992 2
               OpSelectionMerge %13014 None
               OpSwitch %uint_0 %13015
      %13015 = OpLabel
      %13016 = OpFOrdLessThan %bool %13013 %float_0_00313066994
               OpSelectionMerge %13017 None
               OpBranchConditional %13016 %13018 %13017
      %13018 = OpLabel
      %13019 = OpFMul %float %13013 %float_12_9200001
               OpBranch %13014
      %13017 = OpLabel
      %13020 = OpExtInst %float %1 Pow %13013 %float_0_416666657
      %13021 = OpExtInst %float %1 Fma %13020 %float_1_05499995 %float_n0_0549999997
               OpBranch %13014
      %13014 = OpLabel
      %13022 = OpPhi %float %13019 %13018 %13021 %13017
      %13023 = OpExtInst %float %1 FClamp %13002 %float_0 %float_1
      %13024 = OpFMul %float %13023 %float_255
      %13025 = OpConvertFToU %uint %13024
      %13026 = OpShiftLeftLogical %uint %13025 %uint_0
      %13027 = OpExtInst %float %1 FClamp %13012 %float_0 %float_1
      %13028 = OpFMul %float %13027 %float_255
      %13029 = OpConvertFToU %uint %13028
      %13030 = OpShiftLeftLogical %uint %13029 %uint_8
      %13031 = OpExtInst %float %1 FClamp %13022 %float_0 %float_1
      %13032 = OpFMul %float %13031 %float_255
      %13033 = OpConvertFToU %uint %13032
      %13034 = OpShiftLeftLogical %uint %13033 %uint_16
      %13035 = OpBitwiseOr %uint %13026 %13030
      %13036 = OpBitwiseOr %uint %13035 %13034
      %13037 = OpBitwiseOr %uint %13036 %uint_0
      %13038 = OpULessThan %bool %12964 %uint_3
               OpSelectionMerge %13039 None
               OpBranchConditional %13038 %13040 %13041
      %13041 = OpLabel
      %13042 = OpISub %uint %12964 %uint_3
      %13043 = OpCompositeExtract %uint %10838 0
      %13044 = OpCompositeExtract %uint %10838 1
      %13045 = OpCompositeConstruct %v3uint %13043 %13044 %13042
               OpImageWrite %10839 %13045 %13037 None
               OpBranch %13039
      %13040 = OpLabel
      %13046 = OpIEqual %bool %12964 %uint_0
      %13047 = OpSelect %uint %13046 %13037 %12963
      %13048 = OpIEqual %bool %12964 %uint_1
      %13049 = OpSelect %uint %13048 %13037 %12962
      %13050 = OpIEqual %bool %12964 %uint_2
      %13051 = OpSelect %uint %13050 %13037 %12961
               OpBranch %13039
      %13039 = OpLabel
      %13052 = OpPhi %uint %12961 %13041 %13051 %13040
      %13053 = OpPhi %uint %12962 %13041 %13049 %13040
      %13054 = OpPhi %uint %12963 %13041 %13047 %13040
      %13055 = OpIAdd %uint %12964 %uint_1
      %13056 = OpVectorTimesScalar %v2float %12983 %float_0_5
      %13057 = OpFAdd %v2float %13056 %155
      %13058 = OpVectorTimesScalar %v2float %12990 %float_0_5
      %13059 = OpFAdd %v2float %13058 %155
      %13060 = OpCompositeExtract %float %13057 0
      %13061 = OpCompositeExtract %float %13057 1
      %13062 = OpCompositeExtract %float %13059 0
      %13063 = OpCompositeExtract %float %13059 1
      %13064 = OpExtInst %float %1 FClamp %13060 %float_0 %float_1
      %13065 = OpFMul %float %13064 %float_255
      %13066 = OpConvertFToU %uint %13065
      %13067 = OpShiftLeftLogical %uint %13066 %uint_0
      %13068 = OpExtInst %float %1 FClamp %13061 %float_0 %float_1
      %13069 = OpFMul %float %13068 %float_255
      %13070 = OpConvertFToU %uint %13069
      %13071 = OpShiftLeftLogical %uint %13070 %uint_8
      %13072 = OpExtInst %float %1 FClamp %13062 %float_0 %float_1
      %13073 = OpFMul %float %13072 %float_255
      %13074 = OpConvertFToU %uint %13073
      %13075 = OpShiftLeftLogical %uint %13074 %uint_16
      %13076 = OpExtInst %float %1 FClamp %13063 %float_0 %float_1
      %13077 = OpFMul %float %13076 %float_255
      %13078 = OpConvertFToU %uint %13077
      %13079 = OpShiftLeftLogical %uint %13078 %uint_24
      %13080 = OpBitwiseOr %uint %13067 %13071
      %13081 = OpBitwiseOr %uint %13080 %13075
      %13082 = OpBitwiseOr %uint %13081 %13079
      %13083 = OpULessThan %bool %13055 %uint_3
               OpSelectionMerge %13084 None
               OpBranchConditional %13083 %13085 %13086
      %13086 = OpLabel
      %13087 = OpIAdd %uint %12964 %uint_4294967294
      %13088 = OpCompositeExtract %uint %10838 0
      %13089 = OpCompositeExtract %uint %10838 1
      %13090 = OpCompositeConstruct %v3uint %13088 %13089 %13087
               OpImageWrite %10839 %13090 %13082 None
               OpBranch %13084
      %13085 = OpLabel
      %13091 = OpIEqual %bool %13055 %uint_0
      %13092 = OpSelect %uint %13091 %13082 %13054
      %13093 = OpIEqual %bool %13055 %uint_1
      %13094 = OpSelect %uint %13093 %13082 %13053
      %13095 = OpIEqual %bool %13055 %uint_2
      %13096 = OpSelect %uint %13095 %13082 %13052
               OpBranch %13084
      %13084 = OpLabel
      %13097 = OpPhi %uint %13052 %13086 %13096 %13085
      %13098 = OpPhi %uint %13053 %13086 %13094 %13085
      %13099 = OpPhi %uint %13054 %13086 %13092 %13085
      %13100 = OpShiftRightLogical %uint %12960 %uint_2
      %13101 = OpBitwiseAnd %uint %13100 %uint_7
      %13102 = OpIEqual %bool %13101 %uint_3
               OpSelectionMerge %13103 None
               OpBranchConditional %13102 %13104 %13103
      %13104 = OpLabel
      %13105 = OpBitwiseAnd %uint %11087 %uint_4294967292
      %13106 = OpBitwiseOr %uint %13105 %uint_3
      %13107 = OpExtInst %float %1 Fma %10848 %float_255 %float_0_5
      %13108 = OpConvertFToU %uint %13107
      %13109 = OpBitwiseAnd %uint %13106 %uint_3
      %13110 = OpShiftLeftLogical %uint %13108 %uint_24
      %13111 = OpBitwiseOr %uint %13109 %13110
      %13112 = OpBitwiseOr %uint %13111 %uint_16711680
      %13113 = OpCompositeExtract %float %10841 0
      %13114 = OpCompositeExtract %float %10841 1
      %13115 = OpCompositeExtract %float %10841 2
      %13116 = OpCompositeConstruct %v4float %13113 %13114 %13115 %float_0
      %13117 = OpVectorShuffle %v3float %13116 %13116 0 1 2
      %13118 = OpExtInst %v3float %1 FClamp %13117 %108 %134
      %13119 = OpCompositeExtract %float %13118 0
               OpSelectionMerge %13120 None
               OpSwitch %uint_0 %13121
      %13121 = OpLabel
      %13122 = OpFOrdLessThan %bool %13119 %float_0_00313066994
               OpSelectionMerge %13123 None
               OpBranchConditional %13122 %13124 %13123
      %13124 = OpLabel
      %13125 = OpFMul %float %13119 %float_12_9200001
               OpBranch %13120
      %13123 = OpLabel
      %13126 = OpExtInst %float %1 Pow %13119 %float_0_416666657
      %13127 = OpExtInst %float %1 Fma %13126 %float_1_05499995 %float_n0_0549999997
               OpBranch %13120
      %13120 = OpLabel
      %13128 = OpPhi %float %13125 %13124 %13127 %13123
      %13129 = OpCompositeExtract %float %13118 1
               OpSelectionMerge %13130 None
               OpSwitch %uint_0 %13131
      %13131 = OpLabel
      %13132 = OpFOrdLessThan %bool %13129 %float_0_00313066994
               OpSelectionMerge %13133 None
               OpBranchConditional %13132 %13134 %13133
      %13134 = OpLabel
      %13135 = OpFMul %float %13129 %float_12_9200001
               OpBranch %13130
      %13133 = OpLabel
      %13136 = OpExtInst %float %1 Pow %13129 %float_0_416666657
      %13137 = OpExtInst %float %1 Fma %13136 %float_1_05499995 %float_n0_0549999997
               OpBranch %13130
      %13130 = OpLabel
      %13138 = OpPhi %float %13135 %13134 %13137 %13133
      %13139 = OpCompositeExtract %float %13118 2
               OpSelectionMerge %13140 None
               OpSwitch %uint_0 %13141
      %13141 = OpLabel
      %13142 = OpFOrdLessThan %bool %13139 %float_0_00313066994
               OpSelectionMerge %13143 None
               OpBranchConditional %13142 %13144 %13143
      %13144 = OpLabel
      %13145 = OpFMul %float %13139 %float_12_9200001
               OpBranch %13140
      %13143 = OpLabel
      %13146 = OpExtInst %float %1 Pow %13139 %float_0_416666657
      %13147 = OpExtInst %float %1 Fma %13146 %float_1_05499995 %float_n0_0549999997
               OpBranch %13140
      %13140 = OpLabel
      %13148 = OpPhi %float %13145 %13144 %13147 %13143
      %13149 = OpExtInst %float %1 FClamp %13128 %float_0 %float_1
      %13150 = OpFMul %float %13149 %float_255
      %13151 = OpConvertFToU %uint %13150
      %13152 = OpShiftLeftLogical %uint %13151 %uint_0
      %13153 = OpExtInst %float %1 FClamp %13138 %float_0 %float_1
      %13154 = OpFMul %float %13153 %float_255
      %13155 = OpConvertFToU %uint %13154
      %13156 = OpShiftLeftLogical %uint %13155 %uint_8
      %13157 = OpExtInst %float %1 FClamp %13148 %float_0 %float_1
      %13158 = OpFMul %float %13157 %float_255
      %13159 = OpConvertFToU %uint %13158
      %13160 = OpShiftLeftLogical %uint %13159 %uint_16
      %13161 = OpBitwiseOr %uint %13152 %13156
      %13162 = OpBitwiseOr %uint %13161 %13160
      %13163 = OpBitwiseOr %uint %13162 %uint_0
               OpBranch %13103
      %13103 = OpLabel
      %13164 = OpPhi %uint %467 %13084 %13163 %13140
      %13165 = OpPhi %uint %11087 %13084 %13112 %13140
               OpBranch %12973
      %12975 = OpLabel
      %13166 = OpCompositeExtract %float %10841 0
      %13167 = OpCompositeExtract %float %10841 1
      %13168 = OpCompositeExtract %float %10841 2
      %13169 = OpCompositeConstruct %v4float %13166 %13167 %13168 %float_0
      %13170 = OpVectorShuffle %v3float %13169 %13169 0 1 2
      %13171 = OpExtInst %v3float %1 FClamp %13170 %108 %134
      %13172 = OpCompositeExtract %float %13171 0
               OpSelectionMerge %13173 None
               OpSwitch %uint_0 %13174
      %13174 = OpLabel
      %13175 = OpFOrdLessThan %bool %13172 %float_0_00313066994
               OpSelectionMerge %13176 None
               OpBranchConditional %13175 %13177 %13176
      %13177 = OpLabel
      %13178 = OpFMul %float %13172 %float_12_9200001
               OpBranch %13173
      %13176 = OpLabel
      %13179 = OpExtInst %float %1 Pow %13172 %float_0_416666657
      %13180 = OpExtInst %float %1 Fma %13179 %float_1_05499995 %float_n0_0549999997
               OpBranch %13173
      %13173 = OpLabel
      %13181 = OpPhi %float %13178 %13177 %13180 %13176
      %13182 = OpCompositeExtract %float %13171 1
               OpSelectionMerge %13183 None
               OpSwitch %uint_0 %13184
      %13184 = OpLabel
      %13185 = OpFOrdLessThan %bool %13182 %float_0_00313066994
               OpSelectionMerge %13186 None
               OpBranchConditional %13185 %13187 %13186
      %13187 = OpLabel
      %13188 = OpFMul %float %13182 %float_12_9200001
               OpBranch %13183
      %13186 = OpLabel
      %13189 = OpExtInst %float %1 Pow %13182 %float_0_416666657
      %13190 = OpExtInst %float %1 Fma %13189 %float_1_05499995 %float_n0_0549999997
               OpBranch %13183
      %13183 = OpLabel
      %13191 = OpPhi %float %13188 %13187 %13190 %13186
      %13192 = OpCompositeExtract %float %13171 2
               OpSelectionMerge %13193 None
               OpSwitch %uint_0 %13194
      %13194 = OpLabel
      %13195 = OpFOrdLessThan %bool %13192 %float_0_00313066994
               OpSelectionMerge %13196 None
               OpBranchConditional %13195 %13197 %13196
      %13197 = OpLabel
      %13198 = OpFMul %float %13192 %float_12_9200001
               OpBranch %13193
      %13196 = OpLabel
      %13199 = OpExtInst %float %1 Pow %13192 %float_0_416666657
      %13200 = OpExtInst %float %1 Fma %13199 %float_1_05499995 %float_n0_0549999997
               OpBranch %13193
      %13193 = OpLabel
      %13201 = OpPhi %float %13198 %13197 %13200 %13196
      %13202 = OpExtInst %float %1 FClamp %13181 %float_0 %float_1
      %13203 = OpFMul %float %13202 %float_255
      %13204 = OpConvertFToU %uint %13203
      %13205 = OpShiftLeftLogical %uint %13204 %uint_0
      %13206 = OpExtInst %float %1 FClamp %13191 %float_0 %float_1
      %13207 = OpFMul %float %13206 %float_255
      %13208 = OpConvertFToU %uint %13207
      %13209 = OpShiftLeftLogical %uint %13208 %uint_8
      %13210 = OpExtInst %float %1 FClamp %13201 %float_0 %float_1
      %13211 = OpFMul %float %13210 %float_255
      %13212 = OpConvertFToU %uint %13211
      %13213 = OpShiftLeftLogical %uint %13212 %uint_16
      %13214 = OpBitwiseOr %uint %13205 %13209
      %13215 = OpBitwiseOr %uint %13214 %13213
      %13216 = OpBitwiseOr %uint %13215 %uint_0
      %13217 = OpULessThan %bool %12964 %uint_3
               OpSelectionMerge %13218 None
               OpBranchConditional %13217 %13219 %13220
      %13220 = OpLabel
      %13221 = OpISub %uint %12964 %uint_3
      %13222 = OpCompositeExtract %uint %10838 0
      %13223 = OpCompositeExtract %uint %10838 1
      %13224 = OpCompositeConstruct %v3uint %13222 %13223 %13221
               OpImageWrite %10839 %13224 %13216 None
               OpBranch %13218
      %13219 = OpLabel
      %13225 = OpIEqual %bool %12964 %uint_0
      %13226 = OpSelect %uint %13225 %13216 %12963
      %13227 = OpIEqual %bool %12964 %uint_1
      %13228 = OpSelect %uint %13227 %13216 %12962
      %13229 = OpIEqual %bool %12964 %uint_2
      %13230 = OpSelect %uint %13229 %13216 %12961
               OpBranch %13218
      %13218 = OpLabel
      %13231 = OpPhi %uint %12961 %13220 %13230 %13219
      %13232 = OpPhi %uint %12962 %13220 %13228 %13219
      %13233 = OpPhi %uint %12963 %13220 %13226 %13219
      %13234 = OpIAdd %uint %12964 %uint_1
      %13235 = OpExtInst %float %1 FClamp %10844 %float_0 %float_1
      %13236 = OpFMul %float %13235 %float_255
      %13237 = OpConvertFToU %uint %13236
      %13238 = OpShiftLeftLogical %uint %13237 %uint_8
      %13239 = OpExtInst %float %1 FClamp %10848 %float_0 %float_1
      %13240 = OpFMul %float %13239 %float_255
      %13241 = OpConvertFToU %uint %13240
      %13242 = OpShiftLeftLogical %uint %13241 %uint_16
      %13243 = OpExtInst %float %1 FClamp %10850 %float_0 %float_1
      %13244 = OpFMul %float %13243 %float_255
      %13245 = OpConvertFToU %uint %13244
      %13246 = OpShiftLeftLogical %uint %13245 %uint_24
      %13247 = OpBitwiseOr %uint %uint_0 %13238
      %13248 = OpBitwiseOr %uint %13247 %13242
      %13249 = OpBitwiseOr %uint %13248 %13246
      %13250 = OpULessThan %bool %13234 %uint_3
               OpSelectionMerge %13251 None
               OpBranchConditional %13250 %13252 %13253
      %13253 = OpLabel
      %13254 = OpIAdd %uint %12964 %uint_4294967294
      %13255 = OpCompositeExtract %uint %10838 0
      %13256 = OpCompositeExtract %uint %10838 1
      %13257 = OpCompositeConstruct %v3uint %13255 %13256 %13254
               OpImageWrite %10839 %13257 %13249 None
               OpBranch %13251
      %13252 = OpLabel
      %13258 = OpIEqual %bool %13234 %uint_0
      %13259 = OpSelect %uint %13258 %13249 %13233
      %13260 = OpIEqual %bool %13234 %uint_1
      %13261 = OpSelect %uint %13260 %13249 %13232
      %13262 = OpIEqual %bool %13234 %uint_2
      %13263 = OpSelect %uint %13262 %13249 %13231
               OpBranch %13251
      %13251 = OpLabel
      %13264 = OpPhi %uint %13231 %13253 %13263 %13252
      %13265 = OpPhi %uint %13232 %13253 %13261 %13252
      %13266 = OpPhi %uint %13233 %13253 %13259 %13252
               OpBranch %12973
      %12974 = OpLabel
      %13267 = OpVectorShuffle %v3float %10841 %468 0 1 2
      %13268 = OpFSub %float %8401 %float_0_5
      %13269 = OpFMul %float %13268 %float_0_00787401572
      %13270 = OpFMul %float %13268 %float_0_0158730168
      %13271 = OpCompositeConstruct %v3float %13269 %13269 %13270
      %13272 = OpExtInst %v3float %1 FClamp %13267 %108 %134
      %13273 = OpCompositeExtract %float %13272 0
               OpSelectionMerge %13274 None
               OpSwitch %uint_0 %13275
      %13275 = OpLabel
      %13276 = OpFOrdLessThan %bool %13273 %float_0_00313066994
               OpSelectionMerge %13277 None
               OpBranchConditional %13276 %13278 %13277
      %13278 = OpLabel
      %13279 = OpFMul %float %13273 %float_12_9200001
               OpBranch %13274
      %13277 = OpLabel
      %13280 = OpExtInst %float %1 Pow %13273 %float_0_416666657
      %13281 = OpExtInst %float %1 Fma %13280 %float_1_05499995 %float_n0_0549999997
               OpBranch %13274
      %13274 = OpLabel
      %13282 = OpPhi %float %13279 %13278 %13281 %13277
      %13283 = OpCompositeExtract %float %13272 1
               OpSelectionMerge %13284 None
               OpSwitch %uint_0 %13285
      %13285 = OpLabel
      %13286 = OpFOrdLessThan %bool %13283 %float_0_00313066994
               OpSelectionMerge %13287 None
               OpBranchConditional %13286 %13288 %13287
      %13288 = OpLabel
      %13289 = OpFMul %float %13283 %float_12_9200001
               OpBranch %13284
      %13287 = OpLabel
      %13290 = OpExtInst %float %1 Pow %13283 %float_0_416666657
      %13291 = OpExtInst %float %1 Fma %13290 %float_1_05499995 %float_n0_0549999997
               OpBranch %13284
      %13284 = OpLabel
      %13292 = OpPhi %float %13289 %13288 %13291 %13287
      %13293 = OpCompositeExtract %float %13272 2
               OpSelectionMerge %13294 None
               OpSwitch %uint_0 %13295
      %13295 = OpLabel
      %13296 = OpFOrdLessThan %bool %13293 %float_0_00313066994
               OpSelectionMerge %13297 None
               OpBranchConditional %13296 %13298 %13297
      %13298 = OpLabel
      %13299 = OpFMul %float %13293 %float_12_9200001
               OpBranch %13294
      %13297 = OpLabel
      %13300 = OpExtInst %float %1 Pow %13293 %float_0_416666657
      %13301 = OpExtInst %float %1 Fma %13300 %float_1_05499995 %float_n0_0549999997
               OpBranch %13294
      %13294 = OpLabel
      %13302 = OpPhi %float %13299 %13298 %13301 %13297
      %13303 = OpCompositeConstruct %v3float %13282 %13292 %13302
      %13304 = OpBitcast %v3uint %13303
      %13305 = OpBitwiseAnd %v3uint %13304 %360
      %13306 = OpExtInst %v3uint %1 UMin %13305 %511
      %13307 = OpConvertUToF %v3float %13306
      %13308 = OpExtInst %v3float %1 Fma %13271 %13307 %13303
      %13309 = OpExtInst %v3float %1 FClamp %13308 %108 %134
      %13310 = OpCompositeExtract %float %13309 0
      %13311 = OpFMul %float %13310 %float_127
      %13312 = OpConvertFToU %uint %13311
      %13313 = OpShiftLeftLogical %uint %13312 %uint_0
      %13314 = OpCompositeExtract %float %13309 1
      %13315 = OpFMul %float %13314 %float_127
      %13316 = OpConvertFToU %uint %13315
      %13317 = OpShiftLeftLogical %uint %13316 %uint_7
      %13318 = OpCompositeExtract %float %13309 2
      %13319 = OpFMul %float %13318 %float_63
      %13320 = OpConvertFToU %uint %13319
      %13321 = OpShiftLeftLogical %uint %13320 %uint_14
      %13322 = OpBitwiseOr %uint %13313 %13317
      %13323 = OpBitwiseOr %uint %13322 %13321
      %13324 = OpVectorShuffle %v3float %10851 %10851 0 1 2
      %13325 = OpExtInst %v3float %1 FClamp %13324 %108 %134
      %13326 = OpCompositeExtract %float %13325 0
               OpSelectionMerge %13327 None
               OpSwitch %uint_0 %13328
      %13328 = OpLabel
      %13329 = OpFOrdLessThan %bool %13326 %float_0_00313066994
               OpSelectionMerge %13330 None
               OpBranchConditional %13329 %13331 %13330
      %13331 = OpLabel
      %13332 = OpFMul %float %13326 %float_12_9200001
               OpBranch %13327
      %13330 = OpLabel
      %13333 = OpExtInst %float %1 Pow %13326 %float_0_416666657
      %13334 = OpExtInst %float %1 Fma %13333 %float_1_05499995 %float_n0_0549999997
               OpBranch %13327
      %13327 = OpLabel
      %13335 = OpPhi %float %13332 %13331 %13334 %13330
      %13336 = OpCompositeExtract %float %13325 1
               OpSelectionMerge %13337 None
               OpSwitch %uint_0 %13338
      %13338 = OpLabel
      %13339 = OpFOrdLessThan %bool %13336 %float_0_00313066994
               OpSelectionMerge %13340 None
               OpBranchConditional %13339 %13341 %13340
      %13341 = OpLabel
      %13342 = OpFMul %float %13336 %float_12_9200001
               OpBranch %13337
      %13340 = OpLabel
      %13343 = OpExtInst %float %1 Pow %13336 %float_0_416666657
      %13344 = OpExtInst %float %1 Fma %13343 %float_1_05499995 %float_n0_0549999997
               OpBranch %13337
      %13337 = OpLabel
      %13345 = OpPhi %float %13342 %13341 %13344 %13340
      %13346 = OpCompositeExtract %float %13325 2
               OpSelectionMerge %13347 None
               OpSwitch %uint_0 %13348
      %13348 = OpLabel
      %13349 = OpFOrdLessThan %bool %13346 %float_0_00313066994
               OpSelectionMerge %13350 None
               OpBranchConditional %13349 %13351 %13350
      %13351 = OpLabel
      %13352 = OpFMul %float %13346 %float_12_9200001
               OpBranch %13347
      %13350 = OpLabel
      %13353 = OpExtInst %float %1 Pow %13346 %float_0_416666657
      %13354 = OpExtInst %float %1 Fma %13353 %float_1_05499995 %float_n0_0549999997
               OpBranch %13347
      %13347 = OpLabel
      %13355 = OpPhi %float %13352 %13351 %13354 %13350
      %13356 = OpCompositeConstruct %v3float %13335 %13345 %13355
      %13357 = OpBitcast %v3uint %13356
      %13358 = OpBitwiseAnd %v3uint %13357 %360
      %13359 = OpExtInst %v3uint %1 UMin %13358 %511
      %13360 = OpConvertUToF %v3float %13359
      %13361 = OpExtInst %v3float %1 Fma %13271 %13360 %13356
      %13362 = OpExtInst %v3float %1 FClamp %13361 %108 %134
      %13363 = OpCompositeExtract %float %13362 0
      %13364 = OpFMul %float %13363 %float_127
      %13365 = OpConvertFToU %uint %13364
      %13366 = OpShiftLeftLogical %uint %13365 %uint_0
      %13367 = OpCompositeExtract %float %13362 1
      %13368 = OpFMul %float %13367 %float_127
      %13369 = OpConvertFToU %uint %13368
      %13370 = OpShiftLeftLogical %uint %13369 %uint_7
      %13371 = OpCompositeExtract %float %13362 2
      %13372 = OpFMul %float %13371 %float_63
      %13373 = OpConvertFToU %uint %13372
      %13374 = OpShiftLeftLogical %uint %13373 %uint_14
      %13375 = OpBitwiseOr %uint %13366 %13370
      %13376 = OpBitwiseOr %uint %13375 %13374
      %13377 = OpShiftLeftLogical %uint %13323 %uint_12
      %13378 = OpBitwiseAnd %uint %13377 %uint_4294963200
      %13379 = OpBitwiseAnd %uint %13376 %uint_4095
      %13380 = OpBitwiseOr %uint %13378 %13379
      %13381 = OpShiftRightLogical %uint %13376 %uint_12
      %13382 = OpBitwiseAnd %uint %13381 %uint_255
      %13383 = OpULessThan %bool %12964 %uint_3
               OpSelectionMerge %13384 None
               OpBranchConditional %13383 %13385 %13386
      %13386 = OpLabel
      %13387 = OpISub %uint %12964 %uint_3
      %13388 = OpCompositeExtract %uint %10838 0
      %13389 = OpCompositeExtract %uint %10838 1
      %13390 = OpCompositeConstruct %v3uint %13388 %13389 %13387
               OpImageWrite %10839 %13390 %13380 None
               OpBranch %13384
      %13385 = OpLabel
      %13391 = OpIEqual %bool %12964 %uint_0
      %13392 = OpSelect %uint %13391 %13380 %12963
      %13393 = OpIEqual %bool %12964 %uint_1
      %13394 = OpSelect %uint %13393 %13380 %12962
      %13395 = OpIEqual %bool %12964 %uint_2
      %13396 = OpSelect %uint %13395 %13380 %12961
               OpBranch %13384
      %13384 = OpLabel
      %13397 = OpPhi %uint %12961 %13386 %13396 %13385
      %13398 = OpPhi %uint %12962 %13386 %13394 %13385
      %13399 = OpPhi %uint %12963 %13386 %13392 %13385
      %13400 = OpIAdd %uint %12964 %uint_1
      %13401 = OpFAdd %float %10850 %float_1
      %13402 = OpFMul %float %13401 %float_0_5
      %13403 = OpExtInst %float %1 FClamp %13402 %float_0 %float_1
      %13404 = OpFMul %float %13403 %float_255
      %13405 = OpConvertFToU %uint %13404
      %13406 = OpShiftLeftLogical %uint %13405 %uint_16
      %13407 = OpBitwiseOr %uint %uint_0 %13406
      %13408 = OpBitwiseOr %uint %13407 %uint_2130706432
      %13409 = OpBitwiseOr %uint %13382 %13408
      %13410 = OpULessThan %bool %13400 %uint_3
               OpSelectionMerge %13411 None
               OpBranchConditional %13410 %13412 %13413
      %13413 = OpLabel
      %13414 = OpIAdd %uint %12964 %uint_4294967294
      %13415 = OpCompositeExtract %uint %10838 0
      %13416 = OpCompositeExtract %uint %10838 1
      %13417 = OpCompositeConstruct %v3uint %13415 %13416 %13414
               OpImageWrite %10839 %13417 %13409 None
               OpBranch %13411
      %13412 = OpLabel
      %13418 = OpIEqual %bool %13400 %uint_0
      %13419 = OpSelect %uint %13418 %13409 %13399
      %13420 = OpIEqual %bool %13400 %uint_1
      %13421 = OpSelect %uint %13420 %13409 %13398
      %13422 = OpIEqual %bool %13400 %uint_2
      %13423 = OpSelect %uint %13422 %13409 %13397
               OpBranch %13411
      %13411 = OpLabel
      %13424 = OpPhi %uint %13397 %13413 %13423 %13412
      %13425 = OpPhi %uint %13398 %13413 %13421 %13412
      %13426 = OpPhi %uint %13399 %13413 %13419 %13412
      %13427 = OpIAdd %uint %12964 %uint_2
      %13428 = OpShiftRightLogical %uint %12960 %uint_7
      %13429 = OpBitwiseAnd %uint %13428 %uint_1
      %13430 = OpINotEqual %bool %13429 %uint_0
      %13431 = OpShiftRightLogical %uint %12960 %uint_6
      %13432 = OpBitwiseAnd %uint %13431 %uint_1
      %13433 = OpINotEqual %bool %13432 %uint_0
      %13434 = OpLogicalOr %bool %13430 %13433
               OpSelectionMerge %13435 None
               OpBranchConditional %13434 %13436 %13435
      %13436 = OpLabel
      %13437 = OpExtInst %float %1 NMax %float_0 %float_0
      %13438 = OpExtInst %float %1 NMax %float_0 %13437
      %13439 = OpFOrdGreaterThan %bool %13438 %float_0
      %13440 = OpCompositeConstruct %v3bool %13439 %13439 %13439
      %13441 = OpSelect %v3float %13440 %108 %134
      %13442 = OpDot %float %13441 %348
      %13443 = OpDot %float %13441 %349
      %13444 = OpCompositeConstruct %v3float %560 %13442 %13443
      %13445 = OpExtInst %v3float %1 Fma %13444 %331 %332
      %13446 = OpCompositeExtract %float %13445 1
      %13447 = OpCompositeExtract %float %13445 2
      %13448 = OpExtInst %float %1 FClamp %13446 %float_0 %float_1
      %13449 = OpFMul %float %13448 %float_255
      %13450 = OpConvertFToU %uint %13449
      %13451 = OpShiftLeftLogical %uint %13450 %uint_0
      %13452 = OpExtInst %float %1 FClamp %13447 %float_0 %float_1
      %13453 = OpFMul %float %13452 %float_255
      %13454 = OpConvertFToU %uint %13453
      %13455 = OpShiftLeftLogical %uint %13454 %uint_8
      %13456 = OpBitwiseOr %uint %13451 %13455
      %13457 = OpBitwiseOr %uint %13456 %uint_0
      %13458 = OpBitwiseOr %uint %13457 %uint_0
      %13459 = OpBitwiseOr %uint %uint_0 %13458
      %13460 = OpULessThan %bool %13427 %uint_3
               OpSelectionMerge %13461 None
               OpBranchConditional %13460 %13462 %13463
      %13463 = OpLabel
      %13464 = OpIAdd %uint %12964 %uint_4294967295
      %13465 = OpCompositeExtract %uint %10838 0
      %13466 = OpCompositeExtract %uint %10838 1
      %13467 = OpCompositeConstruct %v3uint %13465 %13466 %13464
               OpImageWrite %10839 %13467 %13459 None
               OpBranch %13461
      %13462 = OpLabel
      %13468 = OpIEqual %bool %13427 %uint_0
      %13469 = OpSelect %uint %13468 %13459 %13426
      %13470 = OpIEqual %bool %13427 %uint_1
      %13471 = OpSelect %uint %13470 %13459 %13425
      %13472 = OpIEqual %bool %13427 %uint_2
      %13473 = OpSelect %uint %13472 %13459 %13424
               OpBranch %13461
      %13461 = OpLabel
      %13474 = OpPhi %uint %13424 %13463 %13473 %13462
      %13475 = OpPhi %uint %13425 %13463 %13471 %13462
      %13476 = OpPhi %uint %13426 %13463 %13469 %13462
      %13477 = OpIAdd %uint %12964 %uint_3
               OpBranch %13435
      %13435 = OpLabel
      %13478 = OpPhi %uint %13424 %13411 %13474 %13461
      %13479 = OpPhi %uint %13425 %13411 %13475 %13461
      %13480 = OpPhi %uint %13426 %13411 %13476 %13461
      %13481 = OpPhi %uint %13427 %13411 %13477 %13461
      %13482 = OpShiftRightLogical %uint %12960 %uint_2
      %13483 = OpBitwiseAnd %uint %13482 %uint_7
      %13484 = OpINotEqual %bool %13483 %uint_0
               OpSelectionMerge %13485 None
               OpBranchConditional %13484 %13486 %13485
      %13486 = OpLabel
      %13487 = OpINotEqual %bool %13483 %uint_4
               OpSelectionMerge %13488 None
               OpBranchConditional %13487 %13489 %13488
      %13489 = OpLabel
      %13490 = OpBitwiseAnd %uint %11087 %uint_4294967292
      %13491 = OpBitwiseAnd %uint %13483 %uint_3
      %13492 = OpBitwiseOr %uint %13490 %13491
      %13493 = OpIEqual %bool %13483 %uint_1
               OpSelectionMerge %13494 None
               OpBranchConditional %13493 %13495 %13496
      %13496 = OpLabel
      %13497 = OpIEqual %bool %13483 %uint_3
               OpSelectionMerge %13498 None
               OpBranchConditional %13497 %13499 %13500
      %13500 = OpLabel
      %13501 = OpBitwiseAnd %uint %13492 %uint_3
      %13502 = OpExtInst %uint %1 PackHalf2x16 %568
      %13503 = OpShiftRightLogical %uint %13502 %uint_5
      %13504 = OpBitwiseAnd %uint %13503 %uint_1023
      %13505 = OpShiftLeftLogical %uint %13504 %uint_22
      %13506 = OpShiftLeftLogical %uint %13504 %uint_12
      %13507 = OpBitwiseOr %uint %13505 %13506
      %13508 = OpShiftLeftLogical %uint %13504 %uint_2
      %13509 = OpBitwiseOr %uint %13507 %13508
      %13510 = OpBitwiseOr %uint %13501 %13509
               OpBranch %13498
      %13499 = OpLabel
      %13511 = OpExtInst %float %1 Fma %470 %float_255 %float_0_5
      %13512 = OpConvertFToU %uint %13511
      %13513 = OpBitwiseAnd %uint %13492 %uint_3
      %13514 = OpShiftLeftLogical %uint %13512 %uint_24
      %13515 = OpBitwiseOr %uint %13513 %13514
      %13516 = OpBitwiseOr %uint %13515 %uint_0
               OpBranch %13498
      %13498 = OpLabel
      %13517 = OpPhi %uint %13510 %13500 %13516 %13499
               OpBranch %13494
      %13495 = OpLabel
      %13518 = OpExtInst %float %1 FAbs %470
      %13519 = OpFSub %float %float_1 %13518
      %13520 = OpBitwiseAnd %uint %13492 %uint_3
      %13521 = OpExtInst %float %1 FClamp %13519 %float_0 %float_1
      %13522 = OpFMul %float %13521 %float_255
      %13523 = OpConvertFToU %uint %13522
      %13524 = OpShiftLeftLogical %uint %13523 %uint_2
      %13525 = OpBitwiseOr %uint %13520 %13524
               OpBranch %13494
      %13494 = OpLabel
      %13526 = OpPhi %uint %13517 %13498 %13525 %13495
      %13527 = OpCompositeExtract %float %10841 0
      %13528 = OpCompositeExtract %float %10841 1
      %13529 = OpCompositeExtract %float %10841 2
      %13530 = OpCompositeConstruct %v4float %13527 %13528 %13529 %float_0
      %13531 = OpVectorShuffle %v3float %13530 %13530 0 1 2
      %13532 = OpExtInst %v3float %1 FClamp %13531 %108 %134
      %13533 = OpCompositeExtract %float %13532 0
               OpSelectionMerge %13534 None
               OpSwitch %uint_0 %13535
      %13535 = OpLabel
      %13536 = OpFOrdLessThan %bool %13533 %float_0_00313066994
               OpSelectionMerge %13537 None
               OpBranchConditional %13536 %13538 %13537
      %13538 = OpLabel
      %13539 = OpFMul %float %13533 %float_12_9200001
               OpBranch %13534
      %13537 = OpLabel
      %13540 = OpExtInst %float %1 Pow %13533 %float_0_416666657
      %13541 = OpExtInst %float %1 Fma %13540 %float_1_05499995 %float_n0_0549999997
               OpBranch %13534
      %13534 = OpLabel
      %13542 = OpPhi %float %13539 %13538 %13541 %13537
      %13543 = OpCompositeExtract %float %13532 1
               OpSelectionMerge %13544 None
               OpSwitch %uint_0 %13545
      %13545 = OpLabel
      %13546 = OpFOrdLessThan %bool %13543 %float_0_00313066994
               OpSelectionMerge %13547 None
               OpBranchConditional %13546 %13548 %13547
      %13548 = OpLabel
      %13549 = OpFMul %float %13543 %float_12_9200001
               OpBranch %13544
      %13547 = OpLabel
      %13550 = OpExtInst %float %1 Pow %13543 %float_0_416666657
      %13551 = OpExtInst %float %1 Fma %13550 %float_1_05499995 %float_n0_0549999997
               OpBranch %13544
      %13544 = OpLabel
      %13552 = OpPhi %float %13549 %13548 %13551 %13547
      %13553 = OpCompositeExtract %float %13532 2
               OpSelectionMerge %13554 None
               OpSwitch %uint_0 %13555
      %13555 = OpLabel
      %13556 = OpFOrdLessThan %bool %13553 %float_0_00313066994
               OpSelectionMerge %13557 None
               OpBranchConditional %13556 %13558 %13557
      %13558 = OpLabel
      %13559 = OpFMul %float %13553 %float_12_9200001
               OpBranch %13554
      %13557 = OpLabel
      %13560 = OpExtInst %float %1 Pow %13553 %float_0_416666657
      %13561 = OpExtInst %float %1 Fma %13560 %float_1_05499995 %float_n0_0549999997
               OpBranch %13554
      %13554 = OpLabel
      %13562 = OpPhi %float %13559 %13558 %13561 %13557
      %13563 = OpExtInst %float %1 FClamp %13542 %float_0 %float_1
      %13564 = OpFMul %float %13563 %float_255
      %13565 = OpConvertFToU %uint %13564
      %13566 = OpShiftLeftLogical %uint %13565 %uint_0
      %13567 = OpExtInst %float %1 FClamp %13552 %float_0 %float_1
      %13568 = OpFMul %float %13567 %float_255
      %13569 = OpConvertFToU %uint %13568
      %13570 = OpShiftLeftLogical %uint %13569 %uint_8
      %13571 = OpExtInst %float %1 FClamp %13562 %float_0 %float_1
      %13572 = OpFMul %float %13571 %float_255
      %13573 = OpConvertFToU %uint %13572
      %13574 = OpShiftLeftLogical %uint %13573 %uint_16
      %13575 = OpBitwiseOr %uint %13566 %13570
      %13576 = OpBitwiseOr %uint %13575 %13574
      %13577 = OpBitwiseOr %uint %13576 %uint_0
               OpBranch %13488
      %13488 = OpLabel
      %13578 = OpPhi %uint %467 %13486 %13577 %13554
      %13579 = OpPhi %uint %11087 %13486 %13526 %13554
      %13580 = OpIEqual %bool %13483 %uint_3
      %13581 = OpIAdd %uint %13481 %uint_1
               OpSelectionMerge %13582 None
               OpBranchConditional %13580 %13583 %13584
      %13584 = OpLabel
      %13585 = OpShiftRightLogical %uint %12960 %uint_10
      %13586 = OpBitwiseAnd %uint %13585 %uint_1
      %13587 = OpINotEqual %bool %13586 %uint_0
      %13588 = OpIEqual %bool %13483 %uint_2
      %13589 = OpLogicalAnd %bool %13587 %13588
               OpSelectionMerge %13590 None
               OpBranchConditional %13589 %13591 %13590
      %13591 = OpLabel
      %13592 = OpExtInst %v3float %1 NMax %565 %108
      %13593 = OpVectorShuffle %v4float %468 %13592 4 5 6 3
               OpBranch %13590
      %13590 = OpLabel
      %13594 = OpPhi %v4float %468 %13584 %13593 %13591
      %13595 = OpCompositeExtract %float %13594 0
      %13596 = OpCompositeConstruct %v2float %13595 %float_0
      %13597 = OpExtInst %uint %1 PackHalf2x16 %13596
      %13598 = OpShiftLeftLogical %uint %13597 %uint_17
      %13599 = OpBitwiseAnd %uint %13598 %uint_4292870144
      %13600 = OpCompositeExtract %float %13594 1
      %13601 = OpCompositeConstruct %v2float %13600 %float_0
      %13602 = OpExtInst %uint %1 PackHalf2x16 %13601
      %13603 = OpShiftLeftLogical %uint %13602 %uint_6
      %13604 = OpBitwiseAnd %uint %13603 %uint_2096128
      %13605 = OpCompositeExtract %float %13594 2
      %13606 = OpCompositeConstruct %v2float %13605 %float_0
      %13607 = OpExtInst %uint %1 PackHalf2x16 %13606
      %13608 = OpShiftRightLogical %uint %13607 %uint_5
      %13609 = OpBitwiseAnd %uint %13608 %uint_1023
      %13610 = OpBitwiseOr %uint %13599 %13604
      %13611 = OpBitwiseOr %uint %13610 %13609
      %13612 = OpULessThan %bool %13481 %uint_3
               OpSelectionMerge %13613 None
               OpBranchConditional %13612 %13614 %13615
      %13615 = OpLabel
      %13616 = OpISub %uint %13481 %uint_3
      %13617 = OpCompositeExtract %uint %10838 0
      %13618 = OpCompositeExtract %uint %10838 1
      %13619 = OpCompositeConstruct %v3uint %13617 %13618 %13616
               OpImageWrite %10839 %13619 %13611 None
               OpBranch %13613
      %13614 = OpLabel
      %13620 = OpIEqual %bool %13481 %uint_0
      %13621 = OpSelect %uint %13620 %13611 %13480
      %13622 = OpIEqual %bool %13481 %uint_1
      %13623 = OpSelect %uint %13622 %13611 %13479
      %13624 = OpIEqual %bool %13481 %uint_2
      %13625 = OpSelect %uint %13624 %13611 %13478
               OpBranch %13613
      %13613 = OpLabel
      %13626 = OpPhi %uint %13478 %13615 %13625 %13614
      %13627 = OpPhi %uint %13479 %13615 %13623 %13614
      %13628 = OpPhi %uint %13480 %13615 %13621 %13614
               OpBranch %13582
      %13583 = OpLabel
      %13629 = OpExtInst %uint %1 PackHalf2x16 %568
      %13630 = OpShiftRightLogical %uint %13629 %uint_5
      %13631 = OpBitwiseAnd %uint %13630 %uint_1023
      %13632 = OpShiftLeftLogical %uint %13631 %uint_16
      %13633 = OpBitwiseOr %uint %uint_0 %13632
      %13634 = OpULessThan %bool %13481 %uint_3
               OpSelectionMerge %13635 None
               OpBranchConditional %13634 %13636 %13637
      %13637 = OpLabel
      %13638 = OpISub %uint %13481 %uint_3
      %13639 = OpCompositeExtract %uint %10838 0
      %13640 = OpCompositeExtract %uint %10838 1
      %13641 = OpCompositeConstruct %v3uint %13639 %13640 %13638
               OpImageWrite %10839 %13641 %13633 None
               OpBranch %13635
      %13636 = OpLabel
      %13642 = OpIEqual %bool %13481 %uint_0
      %13643 = OpSelect %uint %13642 %13633 %13480
      %13644 = OpIEqual %bool %13481 %uint_1
      %13645 = OpSelect %uint %13644 %13633 %13479
      %13646 = OpIEqual %bool %13481 %uint_2
      %13647 = OpSelect %uint %13646 %13633 %13478
               OpBranch %13635
      %13635 = OpLabel
      %13648 = OpPhi %uint %13478 %13637 %13647 %13636
      %13649 = OpPhi %uint %13479 %13637 %13645 %13636
      %13650 = OpPhi %uint %13480 %13637 %13643 %13636
               OpBranch %13582
      %13582 = OpLabel
      %13651 = OpPhi %uint %13626 %13613 %13648 %13635
      %13652 = OpPhi %uint %13627 %13613 %13649 %13635
      %13653 = OpPhi %uint %13628 %13613 %13650 %13635
               OpBranch %13485
      %13485 = OpLabel
      %13654 = OpPhi %uint %467 %13435 %13578 %13582
      %13655 = OpPhi %uint %11087 %13435 %13579 %13582
      %13656 = OpPhi %uint %13478 %13435 %13651 %13582
      %13657 = OpPhi %uint %13479 %13435 %13652 %13582
      %13658 = OpPhi %uint %13480 %13435 %13653 %13582
      %13659 = OpPhi %uint %13481 %13435 %13581 %13582
      %13660 = OpShiftRightLogical %uint %12960 %uint_9
      %13661 = OpBitwiseAnd %uint %13660 %uint_1
      %13662 = OpINotEqual %bool %13661 %uint_0
               OpSelectionMerge %13663 None
               OpBranchConditional %13662 %13664 %13663
      %13664 = OpLabel
               OpSelectionMerge %13665 None
               OpSwitch %uint_0 %13666
      %13666 = OpLabel
               OpSelectionMerge %13667 None
               OpBranchConditional %true %13668 %13667
      %13668 = OpLabel
               OpBranch %13665
      %13667 = OpLabel
      %13669 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13665
      %13665 = OpLabel
      %13670 = OpPhi %float %float_0 %13668 %13669 %13667
               OpSelectionMerge %13671 None
               OpSwitch %uint_0 %13672
      %13672 = OpLabel
               OpSelectionMerge %13673 None
               OpBranchConditional %true %13674 %13673
      %13674 = OpLabel
               OpBranch %13671
      %13673 = OpLabel
      %13675 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13671
      %13671 = OpLabel
      %13676 = OpPhi %float %float_0 %13674 %13675 %13673
               OpSelectionMerge %13677 None
               OpSwitch %uint_0 %13678
      %13678 = OpLabel
               OpSelectionMerge %13679 None
               OpBranchConditional %true %13680 %13679
      %13680 = OpLabel
               OpBranch %13677
      %13679 = OpLabel
      %13681 = OpExtInst %float %1 Fma %float_0 %float_1_05499995 %float_n0_0549999997
               OpBranch %13677
      %13677 = OpLabel
      %13682 = OpPhi %float %float_0 %13680 %13681 %13679
      %13683 = OpCompositeConstruct %v3float %13670 %13676 %13682
      %13684 = OpBitcast %v3uint %13683
      %13685 = OpBitwiseAnd %v3uint %13684 %360
      %13686 = OpExtInst %v3uint %1 UMin %13685 %511
      %13687 = OpConvertUToF %v3float %13686
      %13688 = OpExtInst %v3float %1 Fma %13271 %13687 %13683
      %13689 = OpExtInst %v3float %1 FClamp %13688 %108 %134
      %13690 = OpCompositeExtract %float %13689 0
      %13691 = OpFMul %float %13690 %float_127
      %13692 = OpConvertFToU %uint %13691
      %13693 = OpShiftLeftLogical %uint %13692 %uint_0
      %13694 = OpCompositeExtract %float %13689 1
      %13695 = OpFMul %float %13694 %float_127
      %13696 = OpConvertFToU %uint %13695
      %13697 = OpShiftLeftLogical %uint %13696 %uint_7
      %13698 = OpCompositeExtract %float %13689 2
      %13699 = OpFMul %float %13698 %float_63
      %13700 = OpConvertFToU %uint %13699
      %13701 = OpShiftLeftLogical %uint %13700 %uint_14
      %13702 = OpBitwiseOr %uint %13693 %13697
      %13703 = OpBitwiseOr %uint %13702 %13701
      %13704 = OpExtInst %float %1 Fma %13270 %float_0 %float_0
      %13705 = OpExtInst %float %1 FClamp %13704 %float_0 %float_1
      %13706 = OpFMul %float %13705 %float_63
      %13707 = OpConvertFToU %uint %13706
      %13708 = OpShiftLeftLogical %uint %13707 %uint_20
      %13709 = OpBitwiseOr %uint %13703 %13708
      %13710 = OpShiftLeftLogical %uint %13707 %uint_26
      %13711 = OpBitwiseOr %uint %13709 %13710
      %13712 = OpULessThan %bool %13659 %uint_3
               OpSelectionMerge %13713 None
               OpBranchConditional %13712 %13714 %13715
      %13715 = OpLabel
      %13716 = OpISub %uint %13659 %uint_3
      %13717 = OpCompositeExtract %uint %10838 0
      %13718 = OpCompositeExtract %uint %10838 1
      %13719 = OpCompositeConstruct %v3uint %13717 %13718 %13716
               OpImageWrite %10839 %13719 %13711 None
               OpBranch %13713
      %13714 = OpLabel
      %13720 = OpIEqual %bool %13659 %uint_0
      %13721 = OpSelect %uint %13720 %13711 %13658
      %13722 = OpIEqual %bool %13659 %uint_1
      %13723 = OpSelect %uint %13722 %13711 %13657
      %13724 = OpIEqual %bool %13659 %uint_2
      %13725 = OpSelect %uint %13724 %13711 %13656
               OpBranch %13713
      %13713 = OpLabel
      %13726 = OpPhi %uint %13656 %13715 %13725 %13714
      %13727 = OpPhi %uint %13657 %13715 %13723 %13714
      %13728 = OpPhi %uint %13658 %13715 %13721 %13714
      %13729 = OpIAdd %uint %13659 %uint_1
               OpBranch %13663
      %13663 = OpLabel
      %13730 = OpPhi %uint %13656 %13485 %13726 %13713
      %13731 = OpPhi %uint %13657 %13485 %13727 %13713
      %13732 = OpPhi %uint %13658 %13485 %13728 %13713
      %13733 = OpPhi %uint %13659 %13485 %13729 %13713
      %13734 = OpShiftRightLogical %uint %12960 %uint_16
      %13735 = OpBitwiseAnd %uint %13734 %uint_1
      %13736 = OpINotEqual %bool %13735 %uint_0
               OpSelectionMerge %13737 None
               OpBranchConditional %13736 %13738 %13737
      %13738 = OpLabel
               OpSelectionMerge %13739 None
               OpSwitch %uint_0 %13740
      %13740 = OpLabel
      %13741 = OpExtInst %float %1 Fma %float_1 %float_1_05499995 %float_n0_0549999997
               OpBranch %13739
      %13739 = OpLabel
               OpBranch %13742
      %13742 = OpLabel
               OpBranch %13743
      %13743 = OpLabel
      %13744 = OpExtInst %float %1 FClamp %13741 %float_0 %float_1
      %13745 = OpFMul %float %13744 %float_255
      %13746 = OpConvertFToU %uint %13745
      %13747 = OpShiftLeftLogical %uint %13746 %uint_0
      %13748 = OpShiftLeftLogical %uint %13746 %uint_8
      %13749 = OpShiftLeftLogical %uint %13746 %uint_16
      %13750 = OpBitwiseOr %uint %13747 %13748
      %13751 = OpBitwiseOr %uint %13750 %13749
      %13752 = OpBitwiseOr %uint %13751 %uint_0
      %13753 = OpULessThan %bool %13733 %uint_3
               OpSelectionMerge %13754 None
               OpBranchConditional %13753 %13755 %13756
      %13756 = OpLabel
      %13757 = OpISub %uint %13733 %uint_3
      %13758 = OpCompositeExtract %uint %10838 0
      %13759 = OpCompositeExtract %uint %10838 1
      %13760 = OpCompositeConstruct %v3uint %13758 %13759 %13757
               OpImageWrite %10839 %13760 %13752 None
               OpBranch %13754
      %13755 = OpLabel
      %13761 = OpIEqual %bool %13733 %uint_0
      %13762 = OpSelect %uint %13761 %13752 %13732
      %13763 = OpIEqual %bool %13733 %uint_1
      %13764 = OpSelect %uint %13763 %13752 %13731
      %13765 = OpIEqual %bool %13733 %uint_2
      %13766 = OpSelect %uint %13765 %13752 %13730
               OpBranch %13754
      %13754 = OpLabel
      %13767 = OpPhi %uint %13730 %13756 %13766 %13755
      %13768 = OpPhi %uint %13731 %13756 %13764 %13755
      %13769 = OpPhi %uint %13732 %13756 %13762 %13755
               OpBranch %13737
      %13737 = OpLabel
      %13770 = OpPhi %uint %13730 %13663 %13767 %13754
      %13771 = OpPhi %uint %13731 %13663 %13768 %13754
      %13772 = OpPhi %uint %13732 %13663 %13769 %13754
               OpBranch %12973
      %12973 = OpLabel
      %13773 = OpPhi %uint %467 %12970 %13164 %13103 %467 %13251 %13654 %13737
      %13774 = OpPhi %uint %11087 %12970 %13165 %13103 %11087 %13251 %13655 %13737
      %13775 = OpPhi %uint %12961 %12970 %13097 %13103 %13264 %13251 %13770 %13737
      %13776 = OpPhi %uint %12962 %12970 %13098 %13103 %13265 %13251 %13771 %13737
      %13777 = OpPhi %uint %12963 %12970 %13099 %13103 %13266 %13251 %13772 %13737
               OpBranch %12969
      %12969 = OpLabel
      %13778 = OpPhi %uint %467 %11787 %13773 %12973
      %13779 = OpPhi %uint %11087 %11787 %13774 %12973
      %13780 = OpPhi %uint %12961 %11787 %13775 %12973
      %13781 = OpPhi %uint %12962 %11787 %13776 %12973
      %13782 = OpPhi %uint %12963 %11787 %13777 %12973
               OpBranch %11776
      %11776 = OpLabel
      %13783 = OpPhi %uint %467 %11727 %13778 %12969
      %13784 = OpPhi %uint %11087 %11727 %13779 %12969
      %13785 = OpPhi %uint %uint_0 %11727 %13780 %12969
      %13786 = OpPhi %uint %11773 %11727 %13781 %12969
      %13787 = OpPhi %uint %11774 %11727 %13782 %12969
      %13788 = OpExtInst %v3float %1 FAbs %10995
      %13789 = OpDot %float %134 %13788
      %13790 = OpCompositeConstruct %v2float %13789 %13789
      %13791 = OpVectorShuffle %v2float %10995 %10995 0 1
      %13792 = OpFDiv %v2float %13791 %13790
      %13793 = OpVectorShuffle %v3float %10995 %13792 3 4 2
      %13794 = OpCompositeExtract %float %10995 2
      %13795 = OpFOrdLessThanEqual %bool %13794 %float_0
               OpSelectionMerge %13796 None
               OpBranchConditional %13795 %13797 %13796
      %13797 = OpLabel
      %13798 = OpVectorShuffle %v2float %13792 %469 1 0
      %13799 = OpExtInst %v2float %1 FAbs %13798
      %13800 = OpFSub %v2float %322 %13799
      %13801 = OpVectorShuffle %v2float %13792 %469 0 1
      %13802 = OpFOrdGreaterThanEqual %v2bool %13801 %131
      %13803 = OpCompositeExtract %bool %13802 0
      %13804 = OpSelect %float %13803 %float_1 %float_n1
      %13805 = OpCompositeExtract %bool %13802 1
      %13806 = OpSelect %float %13805 %float_1 %float_n1
      %13807 = OpCompositeConstruct %v2float %13804 %13806
      %13808 = OpFMul %v2float %13800 %13807
      %13809 = OpVectorShuffle %v3float %10995 %13808 3 4 2
               OpBranch %13796
      %13796 = OpLabel
      %13810 = OpPhi %v3float %13793 %11776 %13809 %13797
      %13811 = OpVectorShuffle %v2float %13810 %13810 0 1
      %13812 = OpVectorTimesScalar %v2float %13811 %float_1023
      %13813 = OpFAdd %v2float %13812 %335
      %13814 = OpExtInst %v2float %1 FClamp %13813 %131 %336
      %13815 = OpConvertFToU %v2uint %13814
      %13816 = OpCompositeExtract %uint %13815 0
      %13817 = OpCompositeExtract %uint %13815 1
      %13818 = OpShiftLeftLogical %uint %13817 %uint_11
      %13819 = OpBitwiseOr %uint %13816 %13818
      %13820 = OpShiftLeftLogical %uint %13819 %uint_10
      %13821 = OpExtInst %float %1 FClamp %10997 %float_0 %float_1
      %13822 = OpFMul %float %13821 %float_255
      %13823 = OpConvertFToU %uint %13822
      %13824 = OpShiftLeftLogical %uint %13823 %uint_2
      %13825 = OpBitwiseOr %uint %13820 %13824
      %13826 = OpBitwiseOr %uint %13825 %10983
      %13827 = OpBitwiseAnd %uint %13784 %uint_3
      %13828 = OpINotEqual %bool %13827 %uint_0
               OpSelectionMerge %13829 DontFlatten
               OpBranchConditional %13828 %13830 %13829
      %13830 = OpLabel
      %13831 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %13832 = OpAccessChain %_ptr_Uniform_int %OpaqueBasePass %uint_18
      %13833 = OpLoad %int %13832
      %13834 = OpBitcast %uint %13833
      %13835 = OpCompositeExtract %uint %10838 0
      %13836 = OpCompositeExtract %uint %10838 1
      %13837 = OpCompositeConstruct %v3uint %13835 %13836 %13834
               OpImageWrite %13831 %13837 %13784 None
      %13838 = OpIEqual %bool %13827 %uint_2
      %13839 = OpIEqual %bool %13827 %uint_3
      %13840 = OpLogicalOr %bool %13838 %13839
               OpSelectionMerge %13841 None
               OpBranchConditional %13840 %13842 %13841
      %13842 = OpLabel
      %13843 = OpLoad %type_2d_image_array %OpaqueBasePass_Strata_MaterialTextureArrayUAVWithoutRTs
      %13844 = OpIAdd %uint %13834 %uint_1
      %13845 = OpCompositeConstruct %v3uint %13835 %13836 %13844
               OpImageWrite %13843 %13845 %13783 None
               OpBranch %13841
      %13841 = OpLabel
               OpBranch %13829
      %13829 = OpLabel
      %13846 = OpAccessChain %_ptr_Uniform_float %View %uint_21
      %13847 = OpLoad %float %13846
      %13848 = OpCompositeConstruct %v3float %13847 %13847 %13847
      %13849 = OpExtInst %v3float %1 FMix %10836 %11000 %13848
      %13850 = OpFAdd %v3float %11690 %10584
      %13851 = OpFAdd %v3float %13849 %13850
      %13852 = OpVectorTimesScalar %v3float %13851 %float_1
      %13853 = OpCompositeExtract %float %13852 0
      %13854 = OpCompositeExtract %float %13852 1
      %13855 = OpCompositeExtract %float %13852 2
      %13856 = OpCompositeConstruct %v4float %13853 %13854 %13855 %float_0
      %13857 = OpAccessChain %_ptr_Uniform_float %View %uint_34
      %13858 = OpLoad %float %13857
      %13859 = OpFOrdEqual %bool %13858 %float_0
               OpSelectionMerge %13860 None
               OpBranchConditional %13859 %13861 %13860
      %13861 = OpLabel
      %13862 = OpCompositeInsert %v4float %470 %13856 3
               OpBranch %13860
      %13860 = OpLabel
      %13863 = OpPhi %v4float %13856 %13829 %13862 %13861
      %13864 = OpCompositeInsert %v4float %8510 %104 0
      %13865 = OpCompositeInsert %v4float %float_1 %13864 1
      %13866 = OpCompositeInsert %v4float %float_1 %13865 2
      %13867 = OpCompositeInsert %v4float %float_1 %13866 3
      %13868 = OpVectorTimesScalar %v3float %10834 %11701
      %13869 = OpCompositeExtract %float %13868 0
      %13870 = OpCompositeExtract %float %13868 1
      %13871 = OpCompositeExtract %float %13868 2
      %13872 = OpCompositeConstruct %v4float %13869 %13870 %13871 %float_1
      %13873 = OpVectorTimesScalar %v4float %13863 %11701
      %13874 = OpVectorShuffle %v3float %13873 %13873 0 1 2
      %13875 = OpExtInst %v3float %1 NMin %13874 %495
      %13876 = OpVectorShuffle %v4float %13873 %13875 4 5 6 3
               OpStore %out_var_SV_Target0 %13876
               OpStore %out_var_SV_Target1 %13867
               OpStore %out_var_SV_Target2 %13872
               OpStore %out_var_SV_Target3 %13787
               OpStore %out_var_SV_Target4 %13786
               OpStore %out_var_SV_Target5 %13785
               OpStore %out_var_SV_Target6 %13826
               OpReturn
               OpFunctionEnd
